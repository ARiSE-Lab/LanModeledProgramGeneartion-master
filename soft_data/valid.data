public void ( final Context de.azapps.material_elements.views.Context , final AttributeSet de.azapps.material_elements.views.AttributeSet ) { super( de.azapps.material_elements.views.Context , de.azapps.material_elements.views.AttributeSet ); try { final java.lang.reflect.Field java.lang.reflect.Field = NumberPicker .class . java.lang.reflect.Field ( STRING ) ; java.lang.reflect.Field . void ( true ) ; final Drawable de.azapps.material_elements.views.Drawable = ( Drawable ) java.lang.reflect.Field . java.lang.Object ( this ) ; de.azapps.material_elements.views.Drawable . setColorFilter ( ThemeManager . getPrimaryThemeColor ( ) , PorterDuff . Mode . SRC_IN ) ; java.lang.reflect.Field . void ( this , de.azapps.material_elements.views.Drawable ) ; } catch ( final java.lang.NoSuchFieldException java.lang.NoSuchFieldException ) { Log . wtf ( java.lang.String , STRING ) ; } catch ( java.lang.IllegalAccessException java.lang.IllegalAccessException ) { Log . wtf ( java.lang.String , STRING ) ; } } 
public void ( final Context de.azapps.material_elements.views.Context , final AttributeSet de.azapps.material_elements.views.AttributeSet ) { super( de.azapps.material_elements.views.Context , de.azapps.material_elements.views.AttributeSet ); final TypedArray de.azapps.material_elements.views.TypedArray = de.azapps.material_elements.views.Context . getTheme ( ) . obtainStyledAttributes ( de.azapps.material_elements.views.AttributeSet , R . styleable . Slider , NUMBER , NUMBER ) ; try { int = de.azapps.material_elements.views.TypedArray . getColor ( R . styleable . Slider_widget_color , ThemeManager . getAccentThemeColor ( ) ) ; } finally { de.azapps.material_elements.views.TypedArray . recycle ( ) ; } int = ( int ) de.azapps.material_elements.views.Context . getResources ( ) . getDimension ( R . dimen . bubbleSize ) ; int = ( int ) de.azapps.material_elements.views.Context . getResources ( ) . getDimension ( R . dimen . small_thumb_size ) ; de.azapps.material_elements.views.Drawable = de.azapps.material_elements.views.Context . getResources ( ) . getDrawable ( R . drawable . ic_marker ) ; de.azapps.material_elements.views.TextDrawable = de.azapps.material_elements.views.TextDrawable ( int , STRING ) ; de.azapps.material_elements.views.ShapeDrawable . setIntrinsicHeight ( int ) ; de.azapps.material_elements.views.ShapeDrawable . setIntrinsicWidth ( int ) ; de.azapps.material_elements.views.ShapeDrawable . setColorFilter ( int , PorterDuff . Mode . SRC_IN ) ; setThumb ( new ColorDrawable ( Color . TRANSPARENT ) ) ; super. setOnSeekBarChangeListener ( this ) ; final Drawable de.azapps.material_elements.views.Drawable = getProgressDrawable ( ) ; de.azapps.material_elements.views.Drawable . setColorFilter ( int , PorterDuff . Mode . SRC_IN ) ; setProgressDrawable ( de.azapps.material_elements.views.Drawable ) ; void ( NUMBER , NUMBER , NUMBER , NUMBER ) ; de.azapps.material_elements.views.ValueAnimator = new ValueAnimator ( ) ; de.azapps.material_elements.views.ValueAnimator . setIntValues ( NUMBER , int ) ; de.azapps.material_elements.views.ValueAnimator . setDuration ( long ) ; de.azapps.material_elements.views.ValueAnimator . setInterpolator ( new LinearInterpolator ( ) ) ; de.azapps.material_elements.views.ValueAnimator . addUpdateListener ( this ) ; de.azapps.material_elements.views.ValueAnimator . addListener ( this ) ; de.azapps.material_elements.views.ValueAnimator = new ValueAnimator ( ) ; de.azapps.material_elements.views.ValueAnimator . setIntValues ( int , NUMBER ) ; de.azapps.material_elements.views.ValueAnimator . setDuration ( long ) ; de.azapps.material_elements.views.ValueAnimator . setInterpolator ( new LinearInterpolator ( ) ) ; de.azapps.material_elements.views.ValueAnimator . addUpdateListener ( this ) ; de.azapps.material_elements.views.ValueAnimator . addListener ( this ) ; void ( new ColorDrawable ( Color . TRANSPARENT ) ) ; bringToFront ( ) ; } 
public void void ( final @ NonNull Drawable de.azapps.material_elements.views.Drawable ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ) { super. setBackground ( de.azapps.material_elements.views.Drawable ) ; } else { setBackgroundDrawable ( de.azapps.material_elements.views.Drawable ) ; } } 
private de.azapps.material_elements.views.TextDrawable de.azapps.material_elements.views.TextDrawable ( final int int , final java.lang.String java.lang.String ) { return TextDrawable . builder ( ) . beginConfig ( ) . height ( int ) . width ( NUMBER * int / NUMBER ) . bold ( ) . displace ( int / - NUMBER ) . endConfig ( ) . buildWithBackground ( java.lang.String , int , de.azapps.material_elements.views.Drawable ) ; } 
@ java.lang.Override public void void ( final int int , final int int , final int int , final int int ) { final int int , int ; if ( Build . VERSION . SDK_INT <= Build . VERSION_CODES . ICE_CREAM_SANDWICH_MR1 ) { int = ( int ) ( int * NUMBER * NUMBER ) ; if ( de.azapps.material_elements.views.ShapeDrawable != null ) { int = int / NUMBER ; } else { int = NUMBER ; } } else if ( Build . VERSION . SDK_INT == Build . VERSION_CODES . JELLY_BEAN ) { int = ( int ) ( int * NUMBER * NUMBER ) ; int = ( int / NUMBER ) - int ; } else { int = ( int ) ( int * NUMBER * NUMBER ) ; int = ( int / NUMBER ) + ( NUMBER * int ) ; } super. setPadding ( int + int , int + int , int + int , int ) ; } 
@ java.lang.Override public void void ( final OnSeekBarChangeListener de.azapps.material_elements.views.OnSeekBarChangeListener ) { de.azapps.material_elements.views.OnSeekBarChangeListener = de.azapps.material_elements.views.OnSeekBarChangeListener ; } 
@ java.lang.Override public void void ( final SeekBar de.azapps.material_elements.views.SeekBar , final int int , final boolean boolean ) { if ( de.azapps.material_elements.views.OnSeekBarChangeListener != null ) { de.azapps.material_elements.views.OnSeekBarChangeListener . onProgressChanged ( de.azapps.material_elements.views.SeekBar , int , boolean ) ; } de.azapps.material_elements.views.TextDrawable . setNewText ( java.lang.String . java.lang.String ( int ) ) ; if ( boolean ) { de.azapps.material_elements.views.TextDrawable . invalidateSelf ( ) ; } } 
@ java.lang.Override public void void ( final SeekBar de.azapps.material_elements.views.SeekBar ) { bringToFront ( ) ; if ( de.azapps.material_elements.views.OnSeekBarChangeListener != null ) { de.azapps.material_elements.views.OnSeekBarChangeListener . onStartTrackingTouch ( de.azapps.material_elements.views.SeekBar ) ; } de.azapps.material_elements.views.TextDrawable . setNewText ( java.lang.String . java.lang.String ( getProgress ( ) ) ) ; de.azapps.material_elements.views.TextDrawable . setHeight ( NUMBER ) ; de.azapps.material_elements.views.TextDrawable . setWidth ( NUMBER ) ; setThumb ( new ColorDrawable ( Color . TRANSPARENT ) ) ; de.azapps.material_elements.views.ValueAnimator . start ( ) ; boolean = true ; } 
@ java.lang.Override public void void ( final SeekBar de.azapps.material_elements.views.SeekBar ) { if ( de.azapps.material_elements.views.OnSeekBarChangeListener != null ) { de.azapps.material_elements.views.OnSeekBarChangeListener . onStopTrackingTouch ( de.azapps.material_elements.views.SeekBar ) ; } postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( boolean ) { de.azapps.material_elements.views.ValueAnimator . start ( ) ; } } } , long ) ; } 
@ java.lang.Override public void void ( ) { if ( boolean ) { de.azapps.material_elements.views.ValueAnimator . start ( ) ; } } 
@ java.lang.Override protected synchronized void void ( @ NonNull final Canvas de.azapps.material_elements.views.Canvas ) { super. onDraw ( de.azapps.material_elements.views.Canvas ) ; int int = NUMBER ; if ( Build . VERSION . SDK_INT == Build . VERSION_CODES . JELLY_BEAN ) { int = de.azapps.material_elements.views.Canvas . save ( ) ; de.azapps.material_elements.views.Canvas . translate ( NUMBER , - NUMBER * int ) ; } if ( boolean ) { void ( NUMBER , de.azapps.material_elements.views.TextDrawable ) ; final int int = de.azapps.material_elements.views.Canvas . save ( ) ; de.azapps.material_elements.views.Canvas . translate ( getPaddingLeft ( ) , getPaddingTop ( ) - int * NUMBER - NUMBER * int ) ; de.azapps.material_elements.views.TextDrawable . draw ( de.azapps.material_elements.views.Canvas ) ; de.azapps.material_elements.views.Canvas . restoreToCount ( int ) ; } void ( NUMBER , de.azapps.material_elements.views.ShapeDrawable ) ; final int int = de.azapps.material_elements.views.Canvas . save ( ) ; if ( ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) && ( getResources ( ) . getConfiguration ( ) . getLayoutDirection ( ) == View . LAYOUT_DIRECTION_RTL ) ) { de.azapps.material_elements.views.Canvas . translate ( getPaddingRight ( ) , getPaddingTop ( ) - int * NUMBER - NUMBER * int ) ; } else { de.azapps.material_elements.views.Canvas . translate ( getPaddingLeft ( ) - int * NUMBER * NUMBER , getPaddingTop ( ) - int * NUMBER - NUMBER * int ) ; } de.azapps.material_elements.views.ShapeDrawable . draw ( de.azapps.material_elements.views.Canvas ) ; de.azapps.material_elements.views.Canvas . restoreToCount ( int ) ; if ( Build . VERSION . SDK_INT == Build . VERSION_CODES . JELLY_BEAN ) { de.azapps.material_elements.views.Canvas . restoreToCount ( int ) ; } } 
private double double ( ) { final int int = getMax ( ) ; return ( int > NUMBER ) ? ( getProgress ( ) / ( double ) int ) : NUMBER ; } 
private void void ( final int int , final @ NonNull Drawable de.azapps.material_elements.views.Drawable ) { int int = getWidth ( ) - getPaddingLeft ( ) - getPaddingRight ( ) ; final int int = de.azapps.material_elements.views.Drawable . getIntrinsicWidth ( ) ; final int int = de.azapps.material_elements.views.Drawable . getIntrinsicHeight ( ) ; int -= int ; int += getThumbOffset ( ) * NUMBER ; int int = ( int ) ( double ( ) * int + NUMBER ) ; int += ( double ( ) - NUMBER ) * int ; final int int = ( int - int ) ; final int int = int + int ; final int int ; if ( ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) && ( getResources ( ) . getConfiguration ( ) . getLayoutDirection ( ) == View . LAYOUT_DIRECTION_RTL ) ) { int = int - int ; } else { int = int + ( de.azapps.material_elements.views.Drawable . equals ( de.azapps.material_elements.views.TextDrawable ) ? NUMBER : getPaddingRight ( ) ) ; } final int int = int + int ; final Drawable de.azapps.material_elements.views.Drawable = getBackground ( ) ; if ( de.azapps.material_elements.views.Drawable != null ) { final int int = getPaddingLeft ( ) - getThumbOffset ( ) ; final int int = getPaddingTop ( ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { de.azapps.material_elements.views.Drawable . setHotspotBounds ( int + int , int + int , int + int , int + int ) ; } } de.azapps.material_elements.views.Drawable . setBounds ( int , int , int , int ) ; } 
@ java.lang.Override public void void ( final ValueAnimator de.azapps.material_elements.views.ValueAnimator ) { final int int = ( java.lang.Integer ) de.azapps.material_elements.views.ValueAnimator . getAnimatedValue ( ) ; de.azapps.material_elements.views.TextDrawable . setWidth ( ( int ) ( int * NUMBER ) ) ; de.azapps.material_elements.views.TextDrawable . setHeight ( int ) ; void ( int , de.azapps.material_elements.views.TextDrawable ) ; de.azapps.material_elements.views.TextDrawable . setTopPadding ( ( - NUMBER * int ) + ( int - int ) ) ; invalidate ( ) ; } 
@ java.lang.Override public void void ( final Animator de.azapps.material_elements.views.Animator ) { invalidate ( ) ; } 
@ java.lang.Override public void void ( final Animator de.azapps.material_elements.views.Animator ) { if ( de.azapps.material_elements.views.TextDrawable . getIntrinsicHeight ( ) != int ) { boolean = false ; } else { de.azapps.material_elements.views.TextDrawable . setTopPadding ( - NUMBER * int ) ; } invalidate ( ) ; } 
@ java.lang.Override public void void ( final Animator de.azapps.material_elements.views.Animator ) {    } 
@ java.lang.Override public void void ( final Animator de.azapps.material_elements.views.Animator ) {    } 
public void ( @ NonNull final Context de.azapps.mirakel.adapter.Context , @ NonNull final Cursor de.azapps.mirakel.adapter.Cursor , @ Nullable final OnItemClickedListener < T > de.azapps.mirakel.adapter.OnItemClickedListener<T> , @ NonNull final de.azapps.mirakel.adapter.MultiSelectCursorAdapter.MultiSelectCallbacks<T> < T > de.azapps.mirakel.adapter.MultiSelectCursorAdapter.MultiSelectCallbacks<T> ) { super( de.azapps.mirakel.adapter.Context , de.azapps.mirakel.adapter.Cursor ); this . de.azapps.mirakel.adapter.MultiSelectCursorAdapter.MultiSelectCallbacks<T> = de.azapps.mirakel.adapter.MultiSelectCursorAdapter.MultiSelectCallbacks<T> ; this . de.azapps.mirakel.adapter.OnItemClickedListener<T> = de.azapps.mirakel.adapter.OnItemClickedListener<T> ; } 
@ NonNull public abstract T T ( @ NonNull final Cursor de.azapps.mirakel.adapter.Cursor ); 
public void void ( ) { void ( false ) ; de.azapps.mirakel.adapter.SparseBooleanArray . clear ( ) ; notifyDataSetChanged ( ) ; } 
public int int ( ) { return de.azapps.mirakel.adapter.SparseBooleanArray . size ( ) ; } 
public void void ( final @ NonNull java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { de.azapps.mirakel.adapter.SparseBooleanArray . clear ( ) ; for ( final java.lang.Integer java.lang.Integer : java.util.List<java.lang.Integer> ) { de.azapps.mirakel.adapter.SparseBooleanArray . put ( java.lang.Integer , true ) ; } void ( de.azapps.mirakel.adapter.SparseBooleanArray . size ( ) > NUMBER ) ; } 
public java.util.ArrayList<java.lang.Integer> < java.lang.Integer > java.util.ArrayList<java.lang.Integer> ( ) { final java.util.ArrayList<java.lang.Integer> < java.lang.Integer > java.util.ArrayList<java.lang.Integer> = new java.util.ArrayList <> ( de.azapps.mirakel.adapter.SparseBooleanArray . size ( ) ) ; for ( int int = NUMBER ; int < de.azapps.mirakel.adapter.SparseBooleanArray . size ( ) ; int ++ ) { java.util.ArrayList<java.lang.Integer> . boolean ( de.azapps.mirakel.adapter.SparseBooleanArray . keyAt ( int ) ) ; } return java.util.ArrayList<java.lang.Integer> ; } 
@ NonNull public java.util.ArrayList<T> < T > java.util.ArrayList<T> ( ) { final java.util.ArrayList<T> < T > java.util.ArrayList<T> = new java.util.ArrayList <> ( de.azapps.mirakel.adapter.SparseBooleanArray . size ( ) ) ; for ( int int = NUMBER ; int < de.azapps.mirakel.adapter.SparseBooleanArray . size ( ) ; int ++ ) { final int int = de.azapps.mirakel.adapter.SparseBooleanArray . keyAt ( int ) ; java.util.ArrayList<T> . boolean ( T ( int ) ) ; } return java.util.ArrayList<T> ; } 
public void ( final View de.azapps.mirakel.adapter.View ) { super( de.azapps.mirakel.adapter.View ); de.azapps.mirakel.adapter.View . setOnClickListener ( this ) ; de.azapps.mirakel.adapter.View . setOnLongClickListener ( this ) ; } 
@ java.lang.Override public void void ( @ NonNull final View de.azapps.mirakel.adapter.View ) { if ( boolean ) { boolean ( getLayoutPosition ( ) ) ; } else if ( ( de.azapps.mirakel.adapter.OnItemClickedListener<T> != null ) && boolean ( getLayoutPosition ( ) ) ) { de.azapps.mirakel.adapter.OnItemClickedListener<T> . onItemSelected ( T ( getLayoutPosition ( ) ) ) ; } } 
@ java.lang.Override public boolean boolean ( @ NonNull final View de.azapps.mirakel.adapter.View ) { if ( ! boolean ) { void ( true ) ; if ( ! boolean ( getLayoutPosition ( ) ) ) { void ( false ) ; } } return true ; } 
public void void ( boolean boolean ); 
public boolean boolean ( @ NonNull final T T ); 
public void void ( @ NonNull final T T ); 
public void void ( @ NonNull final T T ); 
private void void ( final boolean boolean ) { this . boolean = boolean ; de.azapps.mirakel.adapter.MultiSelectCursorAdapter.MultiSelectCallbacks<T> . void ( boolean ) ; notifyDataSetChanged ( ) ; } 
protected boolean boolean ( final int int ) { if ( int >= getItemCount ( ) ) { return false ; } return true ; } 
protected boolean boolean ( final int int ) { if ( ! boolean ( int ) ) { return false ; } final T T = T ( int ) ; if ( de.azapps.mirakel.adapter.SparseBooleanArray . get ( int , false ) ) { de.azapps.mirakel.adapter.SparseBooleanArray . delete ( int ) ; de.azapps.mirakel.adapter.MultiSelectCursorAdapter.MultiSelectCallbacks<T> . void ( T ) ; } else { if ( ! de.azapps.mirakel.adapter.MultiSelectCursorAdapter.MultiSelectCallbacks<T> . boolean ( T ) ) { if ( int ( ) == NUMBER ) { void ( false ) ; return false ; } return true ; } de.azapps.mirakel.adapter.SparseBooleanArray . put ( int , true ) ; de.azapps.mirakel.adapter.MultiSelectCursorAdapter.MultiSelectCallbacks<T> . void ( T ) ; } notifyItemChanged ( int ) ; return true ; } 
@ NonNull protected T T ( final int int ) { final Cursor de.azapps.mirakel.adapter.Cursor = getCursor ( ) ; de.azapps.mirakel.adapter.Cursor . moveToPosition ( int ) ; return T ( de.azapps.mirakel.adapter.Cursor ) ; } 
public void void ( java.util.Set<T> < T > java.util.Set<T> ); 
public void ( Context de.azapps.mirakel.adapter.Context , Cursor de.azapps.mirakel.adapter.Cursor , int int , java.lang.Class<T> < T > java.lang.Class<T> ) { super( de.azapps.mirakel.adapter.Context , de.azapps.mirakel.adapter.Cursor , int ); de.azapps.mirakel.adapter.LayoutInflater = LayoutInflater . from ( de.azapps.mirakel.adapter.Context ) ; this . java.lang.Class<T> = java.lang.Class<T> ; } 
@ java.lang.Override public de.azapps.mirakel.adapter.View de.azapps.mirakel.adapter.View ( Context de.azapps.mirakel.adapter.Context , Cursor de.azapps.mirakel.adapter.Cursor , ViewGroup de.azapps.mirakel.adapter.ViewGroup ) { View de.azapps.mirakel.adapter.View = de.azapps.mirakel.adapter.LayoutInflater . inflate ( R . layout . row_selectable_item , null ) ; de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder = new de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder ( de.azapps.mirakel.adapter.View ) ; de.azapps.mirakel.adapter.View . setTag ( de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder ) ; return de.azapps.mirakel.adapter.View ; } 
@ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public void void ( final View de.azapps.mirakel.adapter.View , final Context de.azapps.mirakel.adapter.Context , final Cursor de.azapps.mirakel.adapter.Cursor ) { final de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> < T > de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> = ( de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> < T > ) de.azapps.mirakel.adapter.View . getTag ( ) ; de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . T = ModelFactory . createModel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.adapter.Cursor ) , java.lang.Class<T> ) ; de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.TextView . setText ( de.azapps.mirakel.adapter.Cursor . getString ( de.azapps.mirakel.adapter.Cursor . getColumnIndex ( ModelBase . NAME ) ) ) ; de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.CheckBox . setChecked ( java.util.Set<T> . boolean ( de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . T ) ) ; de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.CheckBox . setTag ( de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . T ) ; de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.adapter.CompoundButton , boolean boolean ) { if ( boolean ) { java.util.Set<T> . boolean ( ( T ) de.azapps.mirakel.adapter.CompoundButton . getTag ( ) ) ; } else { java.util.Set<T> . boolean ( ( T ) de.azapps.mirakel.adapter.CompoundButton . getTag ( ) ) ; } if ( de.azapps.mirakel.adapter.MultiSelectModelAdapter.OnSelectionChangedListener<T> != null ) { de.azapps.mirakel.adapter.MultiSelectModelAdapter.OnSelectionChangedListener<T> . void ( java.util.Set<T> ) ; } } } ) ; de.azapps.mirakel.adapter.View . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View de.azapps.mirakel.adapter.View ) { de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.CheckBox . setChecked ( ! de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.CheckBox . isChecked ( ) ) ; } } ) ; } 
@ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.adapter.CompoundButton , boolean boolean ) { if ( boolean ) { java.util.Set<T> . boolean ( ( T ) de.azapps.mirakel.adapter.CompoundButton . getTag ( ) ) ; } else { java.util.Set<T> . boolean ( ( T ) de.azapps.mirakel.adapter.CompoundButton . getTag ( ) ) ; } if ( de.azapps.mirakel.adapter.MultiSelectModelAdapter.OnSelectionChangedListener<T> != null ) { de.azapps.mirakel.adapter.MultiSelectModelAdapter.OnSelectionChangedListener<T> . void ( java.util.Set<T> ) ; } } 
@ java.lang.Override public void void ( View de.azapps.mirakel.adapter.View ) { de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.CheckBox . setChecked ( ! de.azapps.mirakel.adapter.MultiSelectModelAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.CheckBox . isChecked ( ) ) ; } 
private void ( View de.azapps.mirakel.adapter.View ) { de.azapps.mirakel.adapter.TextView = ( TextView ) de.azapps.mirakel.adapter.View . findViewById ( R . id . selectable_item_text_view ) ; de.azapps.mirakel.adapter.CheckBox = ( CheckBox ) de.azapps.mirakel.adapter.View . findViewById ( R . id . selectable_item_checkbox ) ; } 
public T T ( ) { return T ; } 
public void void ( de.azapps.mirakel.adapter.MultiSelectModelAdapter.OnSelectionChangedListener<T> < T > de.azapps.mirakel.adapter.MultiSelectModelAdapter.OnSelectionChangedListener<T> ) { this . de.azapps.mirakel.adapter.MultiSelectModelAdapter.OnSelectionChangedListener<T> = de.azapps.mirakel.adapter.MultiSelectModelAdapter.OnSelectionChangedListener<T> ; } 
public java.util.Set<T> < T > java.util.Set<T> ( ) { return java.util.Set<T> ; } 
public abstract void void ( final @ NonNull T T ); 
public void ( final Context de.azapps.mirakel.adapter.Context , final Cursor de.azapps.mirakel.adapter.Cursor , final java.lang.Class<T> < T > java.lang.Class<T> , final @ NonNull OnItemClickedListener < T > de.azapps.mirakel.adapter.OnItemClickedListener<T> ) { super( de.azapps.mirakel.adapter.Context , de.azapps.mirakel.adapter.Cursor ); this . java.lang.Class<T> = java.lang.Class<T> ; this . de.azapps.mirakel.adapter.OnItemClickedListener<T> = de.azapps.mirakel.adapter.OnItemClickedListener<T> ; } 
@ java.lang.Override public void void ( final de.azapps.mirakel.adapter.SimpleModelAdapter . de.azapps.mirakel.adapter.SimpleModelAdapter.ModelViewHolder de.azapps.mirakel.adapter.SimpleModelAdapter.ModelViewHolder , final Cursor de.azapps.mirakel.adapter.Cursor , final int int ) { de.azapps.mirakel.adapter.SimpleModelAdapter.ModelViewHolder . de.azapps.mirakel.adapter.IGenericElementInterface = ModelFactory . createModel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.adapter.Cursor ) , java.lang.Class<T> ) ; de.azapps.mirakel.adapter.SimpleModelAdapter.ModelViewHolder . de.azapps.mirakel.adapter.TextView . setText ( de.azapps.mirakel.adapter.SimpleModelAdapter.ModelViewHolder . de.azapps.mirakel.adapter.IGenericElementInterface . getName ( ) ) ; } 
@ java.lang.Override public de.azapps.mirakel.adapter.SimpleModelAdapter<T>.ModelViewHolder de.azapps.mirakel.adapter.SimpleModelAdapter<T>.ModelViewHolder ( ViewGroup de.azapps.mirakel.adapter.ViewGroup , int int ) { final View de.azapps.mirakel.adapter.View = LayoutInflater . from ( de.azapps.mirakel.adapter.ViewGroup . getContext ( ) ) . inflate ( R . layout . simple_list_item_1 , null ) ; de.azapps.mirakel.adapter.View . setMinimumWidth ( de.azapps.mirakel.adapter.ViewGroup . getWidth ( ) ) ; return new de.azapps.mirakel.adapter.SimpleModelAdapter<T>.ModelViewHolder ( de.azapps.mirakel.adapter.View ) ; } 
void ( final View de.azapps.mirakel.adapter.View ) { super( de.azapps.mirakel.adapter.View ); de.azapps.mirakel.adapter.TextView = ( TextView ) de.azapps.mirakel.adapter.View . findViewById ( android . R . id . text1 ) ; de.azapps.mirakel.adapter.View . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View de.azapps.mirakel.adapter.View ) { de.azapps.mirakel.adapter.OnItemClickedListener<T> . onItemSelected ( T ) ; } } ) ; } 
@ java.lang.Override public void void ( View de.azapps.mirakel.adapter.View ) { de.azapps.mirakel.adapter.OnItemClickedListener<T> . onItemSelected ( T ) ; } 
public T T ( ) { return T ; } 
public void ( final Context de.azapps.mirakel.adapter.Context , final Cursor de.azapps.mirakel.adapter.Cursor , final int int , final java.lang.Class<T> < T > java.lang.Class<T> ) { this( de.azapps.mirakel.adapter.Context , de.azapps.mirakel.adapter.Cursor , int , java.lang.Class<T> , R . layout . simple_list_row ); } 
public void ( final Context de.azapps.mirakel.adapter.Context , final Cursor de.azapps.mirakel.adapter.Cursor , final int int , final java.lang.Class<T> < T > java.lang.Class<T> , final int int ) { super( de.azapps.mirakel.adapter.Context , de.azapps.mirakel.adapter.Cursor , int ); de.azapps.mirakel.adapter.LayoutInflater = ( LayoutInflater ) de.azapps.mirakel.adapter.Context . getSystemService ( Context . LAYOUT_INFLATER_SERVICE ) ; this . java.lang.Class<T> = java.lang.Class<T> ; this . int = int ; } 
@ java.lang.Override public de.azapps.mirakel.adapter.View de.azapps.mirakel.adapter.View ( final Context de.azapps.mirakel.adapter.Context , final Cursor de.azapps.mirakel.adapter.Cursor , final ViewGroup de.azapps.mirakel.adapter.ViewGroup ) { final View de.azapps.mirakel.adapter.View = de.azapps.mirakel.adapter.LayoutInflater . inflate ( int , null ) ; final de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder = new de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder ( de.azapps.mirakel.adapter.View ) ; de.azapps.mirakel.adapter.View . setTag ( de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder ) ; return de.azapps.mirakel.adapter.View ; } 
@ java.lang.Override public T T ( final int int ) { return ModelFactory . createModel ( CursorGetter . unsafeGetter ( ( Cursor ) super. getItem ( int ) ) , java.lang.Class<T> ) ; } 
@ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public void void ( final View de.azapps.mirakel.adapter.View , final Context de.azapps.mirakel.adapter.Context , final Cursor de.azapps.mirakel.adapter.Cursor ) { final de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> < T > de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> = ( de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> < T > ) de.azapps.mirakel.adapter.View . getTag ( ) ; de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> . T = ModelFactory . createModel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.adapter.Cursor ) , java.lang.Class<T> ) ; de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> . void ( de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> . T . getName ( ) ) ; } 
@ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public de.azapps.mirakel.adapter.View de.azapps.mirakel.adapter.View ( final int int , final View de.azapps.mirakel.adapter.View , final ViewGroup de.azapps.mirakel.adapter.ViewGroup ) { final View de.azapps.mirakel.adapter.View = super. getView ( int , de.azapps.mirakel.adapter.View , de.azapps.mirakel.adapter.ViewGroup ) ; final de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> < T > de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> = ( de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> < T > ) de.azapps.mirakel.adapter.View . getTag ( ) ; de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.TextView . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.TextView . setVisibility ( View . GONE ) ; return de.azapps.mirakel.adapter.View ; } 
@ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public de.azapps.mirakel.adapter.View de.azapps.mirakel.adapter.View ( final int int , final View de.azapps.mirakel.adapter.View , final ViewGroup de.azapps.mirakel.adapter.ViewGroup ) { final View de.azapps.mirakel.adapter.View = super. getView ( int , de.azapps.mirakel.adapter.View , de.azapps.mirakel.adapter.ViewGroup ) ; final de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> < T > de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> = ( de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> < T > ) de.azapps.mirakel.adapter.View . getTag ( ) ; de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.TextView . setVisibility ( View . GONE ) ; de.azapps.mirakel.adapter.SimpleModelListAdapter.ViewHolder<T> . de.azapps.mirakel.adapter.TextView . setVisibility ( View . VISIBLE ) ; return de.azapps.mirakel.adapter.View ; } 
private void ( final View de.azapps.mirakel.adapter.View ) { de.azapps.mirakel.adapter.TextView = ( TextView ) de.azapps.mirakel.adapter.View . findViewById ( R . id . header_text ) ; de.azapps.mirakel.adapter.TextView = ( TextView ) de.azapps.mirakel.adapter.View . findViewById ( android . R . id . text1 ) ; } 
public void void ( final java.lang.String java.lang.String ) { de.azapps.mirakel.adapter.TextView . setText ( java.lang.String ) ; de.azapps.mirakel.adapter.TextView . setText ( java.lang.String ) ; } 
public T T ( ) { return T ; } 
public void void ( final Task de.azapps.mirakel.Task ); 
public static java.lang.String java.lang.String ( final java.util.Map<java.lang.String,de.azapps.mirakel.helper.SpecialListsBaseProperty> < java.lang.String , SpecialListsBaseProperty > java.util.Map<java.lang.String,de.azapps.mirakel.helper.SpecialListsBaseProperty> ) { java.lang.String java.lang.String = STRING ; boolean boolean = true ; for ( final java.util.Map . java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.SpecialListsBaseProperty> < java.lang.String , SpecialListsBaseProperty > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.SpecialListsBaseProperty> : java.util.Map<java.lang.String,de.azapps.mirakel.helper.SpecialListsBaseProperty> . entrySet ( ) ) { java.lang.String += ( boolean ? STRING : STRING ) + java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.SpecialListsBaseProperty> . getValue ( ) . serialize ( ) ; if ( boolean ) { boolean = false ; } } Log . i ( java.lang.String , java.lang.String ) ; return java.lang.String + STRING ; } 
private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { int int = java.lang.String . int ( ) ; do { java.lang.String = java.lang.String . java.lang.String ( ) ; int = java.lang.String . int ( ) ; if ( ( java.lang.String . char ( NUMBER ) == '(' ) && ( java.lang.String . char ( java.lang.String . int ( ) - NUMBER ) == ')' ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ; } } while ( int != java.lang.String . int ( ) ); return java.lang.String . java.lang.String ( ) ; } 
@ java.lang.SuppressWarnings ( STRING ) public static < T extends de.azapps.mirakel.helper.SpecialListsSetProperty > T T ( java.lang.String java.lang.String , final java.lang.Class<T> < T > java.lang.Class<T> , final java.lang.String java.lang.String )    throws javax.xml.transform.TransformerException { java.lang.String = java.lang.String ( java.lang.String ) ; final boolean boolean = java.lang.String . boolean ( STRING ) ; if ( boolean ) { java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) . java.lang.String ( ) ; } java.lang.String = java.lang.String . java.lang.String ( java.lang.String , STRING ) . java.lang.String ( ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) . java.lang.String ( ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) . java.lang.String ( ) ; final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> < java.lang.Integer > ( ) ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { java.util.List<java.lang.Integer> . boolean ( java.lang.Integer . int ( java.lang.String . java.lang.String ( ) ) ) ; } if ( java.lang.Class<T> . java.lang.String ( ) . boolean ( SpecialListsListProperty .class . java.lang.String ( ) ) ) { return ( T ) new SpecialListsListProperty ( boolean , java.util.List<java.lang.Integer> ) ; } else if ( java.lang.Class<T> . java.lang.String ( ) . boolean ( SpecialListsPriorityProperty .class . java.lang.String ( ) ) ) { return ( T ) new SpecialListsPriorityProperty ( boolean , java.util.List<java.lang.Integer> ) ; } else { Log . wtf ( java.lang.String , STRING ) ; throw new javax.xml.transform.TransformerException ( STRING ) ; } } 
public static < T extends de.azapps.mirakel.helper.SpecialListsStringProperty > T T ( java.lang.String java.lang.String , final java.lang.Class<T> < T > java.lang.Class<T> , final java.lang.String java.lang.String )    throws javax.xml.transform.TransformerException { java.lang.String = java.lang.String ( java.lang.String ) ; final boolean boolean = java.lang.String . boolean ( STRING ) ; if ( boolean ) { java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) . java.lang.String ( ) ; } java.lang.String = java.lang.String . java.lang.String ( java.lang.String + STRING , STRING ) . java.lang.String ( ) ; java.lang.String java.lang.String ; Type de.azapps.mirakel.helper.Type ; if ( java.lang.String . boolean ( STRING ) ) { de.azapps.mirakel.helper.Type = Type . BEGIN ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; } else if ( java.lang.String . boolean ( STRING ) ) { de.azapps.mirakel.helper.Type = Type . END ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; } else { de.azapps.mirakel.helper.Type = Type . CONTAINS ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; } T T ; try { T = java.lang.Class<T> . T ( ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException java.lang.ReflectiveOperationException ) { throw new javax.xml.transform.TransformerException ( STRING , java.lang.ReflectiveOperationException ) ; } T . setIsNegated ( boolean ) ; T . setSearchString ( java.lang.String ) ; T . setType ( de.azapps.mirakel.helper.Type ) ; return T ; } 
public static de.azapps.mirakel.helper.SpecialListsDueProperty de.azapps.mirakel.helper.SpecialListsDueProperty ( java.lang.String java.lang.String )    throws javax.xml.transform.TransformerException { java.lang.String = java.lang.String ( java.lang.String ) ; final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( ! java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String[] ( STRING ) [ NUMBER ] ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) . java.lang.String ( STRING , STRING ) . java.lang.String ( ) ; final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; if ( ( java.lang.String[] . int == NUMBER ) && java.lang.String[] [ NUMBER ] . boolean ( STRING ) ) { return new SpecialListsDueProperty ( Unit . DAY , NUMBER , false ) ; } java.lang.String = java.lang.String[] [ NUMBER ] ; Unit de.azapps.mirakel.helper.Unit ; if ( java.lang.String . boolean ( STRING ) ) { de.azapps.mirakel.helper.Unit = Unit . YEAR ; java.lang.String = java.lang.String . java.lang.String ( java.lang.String . boolean ( STRING ) ? STRING : STRING , STRING ) . java.lang.String ( ) ; } else if ( java.lang.String . boolean ( STRING ) ) { de.azapps.mirakel.helper.Unit = Unit . MONTH ; java.lang.String = java.lang.String . java.lang.String ( java.lang.String . boolean ( STRING ) ? STRING : STRING , STRING ) . java.lang.String ( ) ; } else { de.azapps.mirakel.helper.Unit = Unit . DAY ; java.lang.String = java.lang.String . java.lang.String ( java.lang.String . boolean ( STRING ) ? STRING : STRING , STRING ) . java.lang.String ( ) ; } return new SpecialListsDueProperty ( de.azapps.mirakel.helper.Unit , java.lang.Integer . int ( java.lang.String . java.lang.String ( STRING , STRING ) . java.lang.String ( STRING , STRING ) . java.lang.String ( STRING , STRING ) . java.lang.String ( ) ) , false ) ; } throw new javax.xml.transform.TransformerException ( STRING ) ; } return null ; } 
public static de.azapps.mirakel.helper.SpecialListsDoneProperty de.azapps.mirakel.helper.SpecialListsDoneProperty ( final java.lang.String java.lang.String ) { return new SpecialListsDoneProperty ( java.lang.String . boolean ( STRING ) ) ; } 
public static de.azapps.mirakel.helper.SpecialListsReminderProperty de.azapps.mirakel.helper.SpecialListsReminderProperty ( final java.lang.String java.lang.String ) { return new SpecialListsReminderProperty ( java.lang.String . java.lang.String ( ) . boolean ( STRING ) ) ; } 
private static de.azapps.mirakel.helper.Period de.azapps.mirakel.helper.Period ( final int int , final int int , final int int , final int int , final int int ) { return new Period ( int , int , NUMBER , int , int , int , NUMBER , NUMBER ) ; } 
public static de.azapps.mirakel.helper.Recurring de.azapps.mirakel.helper.Recurring ( final java.lang.String java.lang.String ) { final java.util.Scanner java.util.Scanner = new java.util.Scanner ( java.lang.String ) ; java.util.Scanner . java.util.Scanner ( STRING ) ; int int = NUMBER ; if ( java.util.Scanner . boolean ( ) ) { int = java.util.Scanner . int ( ) ; } java.util.Scanner . void ( ) ; final Recurring de.azapps.mirakel.helper.Recurring ; switch ( java.lang.String . java.lang.String ( java.lang.String . java.lang.String ( int ) , STRING ) . java.lang.String ( STRING , STRING ) ) { case STRING : case STRING : int = NUMBER ; case STRING : case STRING : case STRING : case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( int , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , true , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : int = NUMBER ; case STRING : case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER , int , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : case STRING : case STRING : case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER , NUMBER , int , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER , NUMBER , NUMBER , int ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : int = NUMBER ; case STRING : case STRING : case STRING : case STRING : case STRING : case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , int , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : int = NUMBER ; case STRING : case STRING : case STRING : case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER * int , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; default: case STRING : case STRING : case STRING : case STRING : Log . w ( java.lang.String , STRING + java.lang.String ) ; de.azapps.mirakel.helper.Recurring = null ; break; case STRING : final SparseBooleanArray de.azapps.mirakel.helper.SparseBooleanArray = new SparseBooleanArray ( NUMBER ) ; for ( int int = java.util.Calendar . int ; int <= java.util.Calendar . int ; int ++ ) { de.azapps.mirakel.helper.SparseBooleanArray . put ( int , int != java.util.Calendar . int && int != java.util.Calendar . int ) ; } de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , new Period ( ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , de.azapps.mirakel.helper.SparseBooleanArray , Optional .< java.lang.Long > absent ( ) ) ; break; case STRING : case STRING : int = NUMBER ; case STRING : case STRING : case STRING : case STRING : case STRING : de.azapps.mirakel.helper.Recurring = new Recurring ( NUMBER , java.lang.String , de.azapps.mirakel.helper.Period ( NUMBER , NUMBER , NUMBER * int , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , false , new SparseBooleanArray ( ) , Optional .< java.lang.Long > absent ( ) ) ; break; } return de.azapps.mirakel.helper.Recurring . create ( ) ; } 
public static boolean boolean ( final Context de.azapps.mirakel.helper.export_import.Context , final java.io.FileInputStream java.io.FileInputStream ) throws de.azapps.mirakel.helper.export_import.NoSuchListException { JsonObject de.azapps.mirakel.helper.export_import.JsonObject ; try { de.azapps.mirakel.helper.export_import.JsonObject = new JsonParser ( ) . parse ( new java.io.InputStreamReader ( java.io.FileInputStream ) ) . getAsJsonObject ( ) ; } catch ( final JsonSyntaxException de.azapps.mirakel.helper.export_import.JsonSyntaxException ) { Log . e ( java.lang.String , STRING , de.azapps.mirakel.helper.export_import.JsonSyntaxException ) ; return false ; } final java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> < java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> < java.lang.String , JsonElement > > java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> = de.azapps.mirakel.helper.export_import.JsonObject . entrySet ( ) ; SparseIntArray de.azapps.mirakel.helper.export_import.SparseIntArray = new SparseIntArray ( ) ; java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> < Pair < java.lang.Integer , java.lang.String > > java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> = new java.util.ArrayList<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> <> ( ) ; de.azapps.mirakel.helper.export_import.SparseIntArray = new SparseIntArray ( ) ; for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> : java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> ) { if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getKey ( ) . equals ( STRING ) ) { final java.util.Iterator<de.azapps.mirakel.helper.export_import.JsonElement> < JsonElement > java.util.Iterator<de.azapps.mirakel.helper.export_import.JsonElement> = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . getAsJsonArray ( ) . iterator ( ) ; while ( java.util.Iterator<de.azapps.mirakel.helper.export_import.JsonElement> . hasNext ( ) ) { de.azapps.mirakel.helper.export_import.SparseIntArray = de.azapps.mirakel.helper.export_import.SparseIntArray ( java.util.Iterator<de.azapps.mirakel.helper.export_import.JsonElement> . next ( ) . getAsJsonObject ( ) , de.azapps.mirakel.helper.export_import.SparseIntArray ) ; } } else if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getKey ( ) . equals ( STRING ) ) { final java.util.Iterator<de.azapps.mirakel.helper.export_import.JsonElement> < JsonElement > java.util.Iterator<de.azapps.mirakel.helper.export_import.JsonElement> = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . getAsJsonArray ( ) . iterator ( ) ; while ( java.util.Iterator<de.azapps.mirakel.helper.export_import.JsonElement> . hasNext ( ) ) { java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> = java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> ( java.util.Iterator<de.azapps.mirakel.helper.export_import.JsonElement> . next ( ) . getAsJsonObject ( ) , de.azapps.mirakel.helper.export_import.SparseIntArray , java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> , de.azapps.mirakel.helper.export_import.Context ) ; } } else { Log . d ( java.lang.String , java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getKey ( ) ) ; } } for ( final Pair < java.lang.Integer , java.lang.String > de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String> : java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> ) { final Optional < Task > de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Task> = Task . get ( de.azapps.mirakel.helper.export_import.SparseIntArray . get ( pair . first ) ) ; if ( ! de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Task> . isPresent ( ) ) { Log . d ( java.lang.String , STRING ) ; continue; } final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Task> . get ( ) . getContent ( ) ; de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Task> . get ( ) . setContent ( STRING . boolean ( java.lang.String ) ? pair . second : ( java.lang.String + STRING + pair . second ) ) ; de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Task> . get ( ) . save ( false ) ; } return true ; } 
public static void void ( final Activity de.azapps.mirakel.helper.export_import.Activity ) { final java.io.File java.io.File = new java.io.File ( Environment . getExternalStorageDirectory ( ) + STRING ) ; if ( java.io.File . boolean ( ) ) { java.io.File java.io.File = null ; for ( final java.io.File java.io.File : java.io.File . java.io.File[] ( ) ) { if ( java.io.File == null ) { java.io.File = java.io.File ; } else if ( java.io.File . java.lang.String ( ) . int ( java.io.File . java.lang.String ( ) ) > NUMBER ) { java.io.File = java.io.File ; } } final java.io.File java.io.File = java.io.File ; if ( java.io.File == null ) { return; } new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.helper.export_import.Activity ) . setTitle ( de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . import_any_do_click ) ) . setMessage ( de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . any_do_this_file , java.io.File . java.lang.String ( ) ) ) . setPositiveButton ( de.azapps.mirakel.helper.export_import.Activity . getString ( android . R . string . ok ) , new OnClickListener ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.helper.export_import.DialogInterface , final int int ) { try { boolean ( de.azapps.mirakel.helper.export_import.Activity , new java.io.FileInputStream ( java.io.File ) ) ; } catch ( final java.io.FileNotFoundException java.io.FileNotFoundException ) { ErrorReporter . report ( ErrorType . FILE_NOT_FOUND ) ; Log . wtf ( java.lang.String , STRING , java.io.FileNotFoundException ) ; return; } catch ( final NoSuchListException de.azapps.mirakel.helper.export_import.NoSuchListException ) { ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; Log . wtf ( java.lang.String , STRING , de.azapps.mirakel.helper.export_import.NoSuchListException ) ; return; } android . os . Process . killProcess ( android . os . Process . myPid ( ) ) ; } } ) . setNegativeButton ( de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . select_file ) , new OnClickListener ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.helper.export_import.DialogInterface , final int int ) { Helpers . showFileChooser ( DefinitionsHelper . REQUEST_FILE_ANY_DO , de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . any_do_import_title ) , de.azapps.mirakel.helper.export_import.Activity ) ; } } ) . show ( ) ; } else { new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.helper.export_import.Activity ) . setTitle ( de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . import_any_do_click ) ) . setMessage ( de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . any_do_how_to ) ) . setPositiveButton ( de.azapps.mirakel.helper.export_import.Activity . getString ( android . R . string . ok ) , new OnClickListener ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.helper.export_import.DialogInterface , final int int ) { void ( de.azapps.mirakel.helper.export_import.Activity ) ; } } ) . setNegativeButton ( de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . select_file ) , new OnClickListener ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.helper.export_import.DialogInterface , final int int ) { Helpers . showFileChooser ( DefinitionsHelper . REQUEST_FILE_ANY_DO , de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . any_do_import_title ) , de.azapps.mirakel.helper.export_import.Activity ) ; } } ) . show ( ) ; } } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.helper.export_import.DialogInterface , final int int ) { try { boolean ( de.azapps.mirakel.helper.export_import.Activity , new java.io.FileInputStream ( java.io.File ) ) ; } catch ( final java.io.FileNotFoundException java.io.FileNotFoundException ) { ErrorReporter . report ( ErrorType . FILE_NOT_FOUND ) ; Log . wtf ( java.lang.String , STRING , java.io.FileNotFoundException ) ; return; } catch ( final NoSuchListException de.azapps.mirakel.helper.export_import.NoSuchListException ) { ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; Log . wtf ( java.lang.String , STRING , de.azapps.mirakel.helper.export_import.NoSuchListException ) ; return; } android . os . Process . killProcess ( android . os . Process . myPid ( ) ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.helper.export_import.DialogInterface , final int int ) { Helpers . showFileChooser ( DefinitionsHelper . REQUEST_FILE_ANY_DO , de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . any_do_import_title ) , de.azapps.mirakel.helper.export_import.Activity ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.helper.export_import.DialogInterface , final int int ) { void ( de.azapps.mirakel.helper.export_import.Activity ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.helper.export_import.DialogInterface , final int int ) { Helpers . showFileChooser ( DefinitionsHelper . REQUEST_FILE_ANY_DO , de.azapps.mirakel.helper.export_import.Activity . getString ( R . string . any_do_import_title ) , de.azapps.mirakel.helper.export_import.Activity ) ; } 
private static de.azapps.mirakel.helper.export_import.SparseIntArray de.azapps.mirakel.helper.export_import.SparseIntArray ( final JsonObject de.azapps.mirakel.helper.export_import.JsonObject , final SparseIntArray de.azapps.mirakel.helper.export_import.SparseIntArray ) { final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ; final int int = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) ; final ListMirakel de.azapps.mirakel.helper.export_import.ListMirakel = ListMirakel . safeNewList ( java.lang.String ) ; de.azapps.mirakel.helper.export_import.SparseIntArray . put ( int , ( int ) de.azapps.mirakel.helper.export_import.ListMirakel . getId ( ) ) ; return de.azapps.mirakel.helper.export_import.SparseIntArray ; } 
private static java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> < Pair < java.lang.Integer , java.lang.String > > java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> ( final JsonObject de.azapps.mirakel.helper.export_import.JsonObject , final SparseIntArray de.azapps.mirakel.helper.export_import.SparseIntArray , final java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> < Pair < java.lang.Integer , java.lang.String > > java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> , final Context de.azapps.mirakel.helper.export_import.Context ) throws de.azapps.mirakel.helper.export_import.NoSuchListException { final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ; if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> . add ( new Pair < java.lang.Integer , java.lang.String > ( de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) , java.lang.String ) ) ; return java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> ; } final int int = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) ; final Optional < ListMirakel > de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.helper.export_import.SparseIntArray . get ( int ) ) ; if ( ! de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> . isPresent ( ) ) { throw new NoSuchListException ( STRING + de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) ) ; } final Task de.azapps.mirakel.helper.export_import.Task = Task . newTask ( java.lang.String , de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> . get ( ) ) ; de.azapps.mirakel.helper.export_import.SparseIntArray . put ( de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) , ( int ) de.azapps.mirakel.helper.export_import.Task . getId ( ) ) ; if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { final long long = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsLong ( ) ; if ( long > NUMBER ) { de.azapps.mirakel.helper.export_import.Task . setDue ( of ( new DateTime ( long ) ) ) ; } } if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { int int = NUMBER ; if ( STRING . boolean ( de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ) ) { int = NUMBER ; } de.azapps.mirakel.helper.export_import.Task . setPriority ( int ) ; } if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { boolean boolean = false ; final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ; if ( STRING . boolean ( java.lang.String ) || STRING . boolean ( java.lang.String ) ) { boolean = true ; } else if ( java.lang.String . boolean ( STRING ) ) { boolean = false ; } de.azapps.mirakel.helper.export_import.Task . setDone ( boolean ) ; } if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ; if ( ! java.lang.String . boolean ( STRING ) ) { Optional < Recurring > de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = absent ( ) ; switch ( java.lang.String ) { case STRING : de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = Recurring . get ( NUMBER , NUMBER , NUMBER ) ; if ( ! de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> . isPresent ( ) ) { de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = of ( Recurring . newRecurring ( de.azapps.mirakel.helper.export_import.Context . getString ( R . string . daily ) , new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , false , false , new SparseBooleanArray ( ) ) ) ; } break; case STRING : de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = Recurring . get ( NUMBER , NUMBER , NUMBER ) ; if ( ! de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> . isPresent ( ) ) { de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = of ( Recurring . newRecurring ( de.azapps.mirakel.helper.export_import.Context . getString ( R . string . weekly ) , new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , false , false , new SparseBooleanArray ( ) ) ) ; } break; case STRING : de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = Recurring . get ( NUMBER , NUMBER , NUMBER ) ; if ( ! de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> . isPresent ( ) ) { de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = of ( Recurring . newRecurring ( de.azapps.mirakel.helper.export_import.Context . getString ( R . string . monthly ) , new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , false , false , new SparseBooleanArray ( ) ) ) ; } break; case STRING : de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = Recurring . get ( NUMBER , NUMBER , NUMBER ) ; if ( ! de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> . isPresent ( ) ) { de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> = of ( Recurring . newRecurring ( de.azapps.mirakel.helper.export_import.Context . getString ( R . string . yearly ) , new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , false , false , new SparseBooleanArray ( ) ) ) ; } break; } de.azapps.mirakel.helper.export_import.Task . setRecurrence ( de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.Recurring> ) ; } } de.azapps.mirakel.helper.export_import.Task . save ( false ) ; return java.util.List<de.azapps.mirakel.helper.export_import.Pair<java.lang.Integer,java.lang.String>> ; } 
@ SuppressLint ( STRING ) public static void void ( final Context de.azapps.mirakel.helper.export_import.Context ) { final java.util.Date java.util.Date = new java.util.Date ( ) ; final java.text.DateFormat java.text.DateFormat = new java.text.SimpleDateFormat ( STRING ) ; final java.lang.String java.lang.String = STRING + java.text.DateFormat . java.lang.String ( java.util.Date ) + STRING ; final java.io.File java.io.File = new java.io.File ( FileUtils . getExportDir ( ) , java.lang.String ) ; try { java.io.File . boolean ( ) ; FileUtils . copyFile ( java.io.File , java.io.File ) ; Toast . makeText ( de.azapps.mirakel.helper.export_import.Context , de.azapps.mirakel.helper.export_import.Context . getString ( R . string . backup_export_ok , java.io.File . java.lang.String ( ) ) , Toast . LENGTH_LONG ) . show ( ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , java.io.IOException . java.lang.String ( ) , java.io.IOException ) ; ErrorReporter . report ( ErrorType . BACKUP_EXPORT_ERROR ) ; } } 
public static void void ( final Context de.azapps.mirakel.helper.export_import.Context , final java.io.FileInputStream java.io.FileInputStream ) { try { FileUtils . copyByStream ( java.io.FileInputStream , new java.io.FileOutputStream ( java.io.File ) ) ; Toast . makeText ( de.azapps.mirakel.helper.export_import.Context , de.azapps.mirakel.helper.export_import.Context . getString ( R . string . backup_import_ok ) , Toast . LENGTH_LONG ) . show ( ) ; android . os . Process . killProcess ( android . os . Process . myPid ( ) ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , java.io.IOException . java.lang.String ( ) , java.io.IOException ) ; ErrorReporter . report ( ErrorType . BACKUP_IMPORT_ERROR ) ; } } 
public static boolean boolean ( final Context de.azapps.mirakel.helper.export_import.Context , final java.io.FileInputStream java.io.FileInputStream , @ Nullable java.lang.String java.lang.String ) { if ( java.lang.String == null ) { java.lang.String = STRING ; } switch ( java.lang.String ) { case STRING : return boolean ( de.azapps.mirakel.helper.export_import.Context , java.io.FileInputStream ) ; case STRING : return boolean ( de.azapps.mirakel.helper.export_import.Context , java.io.FileInputStream ) ; default: Log . d ( java.lang.String , STRING ) ; ErrorReporter . report ( ErrorType . ASTRID_ERROR ) ; } return false ; } 
private static boolean boolean ( final Context de.azapps.mirakel.helper.export_import.Context , final java.io.FileInputStream java.io.FileInputStream ) { final javax.xml.parsers.DocumentBuilderFactory javax.xml.parsers.DocumentBuilderFactory = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilderFactory ( ) ; final javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilder ; try { javax.xml.parsers.DocumentBuilder = javax.xml.parsers.DocumentBuilderFactory . javax.xml.parsers.DocumentBuilder ( ) ; } catch ( final javax.xml.parsers.ParserConfigurationException javax.xml.parsers.ParserConfigurationException ) { Log . d ( java.lang.String , STRING , javax.xml.parsers.ParserConfigurationException ) ; return false ; } final org.w3c.dom.Document org.w3c.dom.Document ; try { org.w3c.dom.Document = javax.xml.parsers.DocumentBuilder . org.w3c.dom.Document ( java.io.FileInputStream ) ; } catch ( final org.xml.sax.SAXException org.xml.sax.SAXException ) { Log . d ( java.lang.String , STRING , org.xml.sax.SAXException ) ; return false ; } catch ( final java.io.IOException java.io.IOException ) { Log . d ( java.lang.String , STRING , java.io.IOException ) ; return false ; } org.w3c.dom.Document . org.w3c.dom.Element ( ) . void ( ) ; final org.w3c.dom.NodeList org.w3c.dom.NodeList = org.w3c.dom.Document . org.w3c.dom.Element ( ) . org.w3c.dom.NodeList ( ) ; for ( int int = NUMBER ; int < org.w3c.dom.NodeList . int ( ) ; int ++ ) { final org.w3c.dom.Node org.w3c.dom.Node = org.w3c.dom.NodeList . org.w3c.dom.Node ( int ) ; if ( org.w3c.dom.Node . short ( ) == org.w3c.dom.Node . short ) { final org.w3c.dom.NamedNodeMap org.w3c.dom.NamedNodeMap = org.w3c.dom.Node . org.w3c.dom.NamedNodeMap ( ) ; if ( org.w3c.dom.NamedNodeMap != null ) { final java.lang.String java.lang.String = org.w3c.dom.NamedNodeMap . org.w3c.dom.Node ( STRING ) . java.lang.String ( ) ; org.w3c.dom.Node org.w3c.dom.Node = null ; if ( org.w3c.dom.Node . org.w3c.dom.NodeList ( ) . int ( ) > NUMBER ) { org.w3c.dom.Node = org.w3c.dom.Node . org.w3c.dom.NodeList ( ) . org.w3c.dom.Node ( NUMBER ) ; } final ListMirakel de.azapps.mirakel.helper.export_import.ListMirakel ; if ( ( org.w3c.dom.Node != null ) && ( org.w3c.dom.Node . org.w3c.dom.NamedNodeMap ( ) != null ) ) { final java.lang.String java.lang.String = org.w3c.dom.Node . org.w3c.dom.NamedNodeMap ( ) . org.w3c.dom.Node ( STRING ) . java.lang.String ( ) ; final Optional < ListMirakel > de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> = ListMirakel . findByName ( java.lang.String ) ; if ( de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.helper.export_import.ListMirakel = de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> . get ( ) ; } else { de.azapps.mirakel.helper.export_import.ListMirakel = ListMirakel . safeNewList ( java.lang.String ) ; } } else { de.azapps.mirakel.helper.export_import.ListMirakel = MirakelModelPreferences . getSafeImportDefaultList ( ) ; } final Task de.azapps.mirakel.helper.export_import.Task = Task . newTask ( java.lang.String , de.azapps.mirakel.helper.export_import.ListMirakel ) ; final int int = java.lang.Integer . int ( org.w3c.dom.NamedNodeMap . org.w3c.dom.Node ( STRING ) . java.lang.String ( ) ) ; switch ( int ) { case NUMBER : de.azapps.mirakel.helper.export_import.Task . setPriority ( NUMBER ) ; break; case NUMBER : de.azapps.mirakel.helper.export_import.Task . setPriority ( NUMBER ) ; break; case NUMBER : de.azapps.mirakel.helper.export_import.Task . setPriority ( NUMBER ) ; break; case NUMBER : de.azapps.mirakel.helper.export_import.Task . setPriority ( - NUMBER ) ; break; default: de.azapps.mirakel.helper.export_import.Task . setPriority ( NUMBER ) ; } final long long = java.lang.Long . long ( org.w3c.dom.NamedNodeMap . org.w3c.dom.Node ( STRING ) . java.lang.String ( ) ) ; if ( long > NUMBER ) { final DateTime de.azapps.mirakel.helper.export_import.DateTime = new DateTime ( long ) ; de.azapps.mirakel.helper.export_import.Task . setDue ( of ( de.azapps.mirakel.helper.export_import.DateTime ) ) ; } else { de.azapps.mirakel.helper.export_import.Task . setDue ( Optional .< DateTime > absent ( ) ) ; } final java.lang.String java.lang.String = org.w3c.dom.NamedNodeMap . org.w3c.dom.Node ( STRING ) . java.lang.String ( ) ; de.azapps.mirakel.helper.export_import.Task . setDone ( ! STRING . boolean ( java.lang.String ) ) ; final java.lang.String java.lang.String = org.w3c.dom.NamedNodeMap . org.w3c.dom.Node ( STRING ) . java.lang.String ( ) ; de.azapps.mirakel.helper.export_import.Task . setContent ( java.lang.String . java.lang.String ( ) ) ; de.azapps.mirakel.helper.export_import.Task . save ( false ) ; } else { Log . w ( java.lang.String , STRING ) ; } } } return true ; } 
@ SuppressLint ( STRING ) private static boolean boolean ( final Context de.azapps.mirakel.helper.export_import.Context , final java.io.FileInputStream java.io.FileInputStream ) { final java.io.File java.io.File = new java.io.File ( de.azapps.mirakel.helper.export_import.Context . getCacheDir ( ) , STRING ) ; if ( ! java.io.File . boolean ( ) ) { java.io.File . boolean ( ) ; } else { final java.lang.String [] java.lang.String[] = java.io.File . java.lang.String[] ( ) ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { new java.io.File ( java.io.File , java.lang.String ) . boolean ( ) ; } } try { FileUtils . unzip ( java.io.FileInputStream , java.io.File ) ; } catch ( final java.lang.Exception java.lang.Exception ) { Log . e ( java.lang.String , STRING , java.lang.Exception ) ; return false ; } java.io.FileReader java.io.FileReader , java.io.FileReader ; try { java.io.FileReader = new java.io.FileReader ( new java.io.File ( java.io.File , STRING ) ) ; final CSVReader de.azapps.mirakel.helper.export_import.CSVReader = new CSVReader ( java.io.FileReader , ',' ) ; java.io.FileReader . void ( ) ; java.lang.String [] java.lang.String[] ; de.azapps.mirakel.helper.export_import.CSVReader . readNext ( ) ; final java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING ) ; while ( ( java.lang.String[] = de.azapps.mirakel.helper.export_import.CSVReader . readNext ( ) ) != null ) { final java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] ; if ( ! ListMirakel . findByName ( java.lang.String ) . isPresent ( ) ) { ListMirakel . safeNewList ( java.lang.String ) ; Log . v ( java.lang.String , STRING + java.lang.String ) ; } } java.io.FileReader = new java.io.FileReader ( new java.io.File ( java.io.File , STRING ) ) ; final CSVReader de.azapps.mirakel.helper.export_import.CSVReader = new CSVReader ( java.io.FileReader , ',' ) ; java.io.FileReader . void ( ) ; de.azapps.mirakel.helper.export_import.CSVReader . readNext ( ) ; while ( ( java.lang.String[] = de.azapps.mirakel.helper.export_import.CSVReader . readNext ( ) ) != null ) { final java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] ; final java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] ; final java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] ; final int int = java.lang.Integer . java.lang.Integer ( java.lang.String[] [ NUMBER ] ) - NUMBER ; DateTime de.azapps.mirakel.helper.export_import.DateTime ; try { de.azapps.mirakel.helper.export_import.DateTime = new DateTime ( java.text.SimpleDateFormat . java.util.Date ( java.lang.String[] [ NUMBER ] ) ) ; } catch ( final java.text.ParseException java.text.ParseException ) { de.azapps.mirakel.helper.export_import.DateTime = null ; } final boolean boolean = ! java.lang.String[] [ NUMBER ] . boolean ( STRING ) ; final Optional < ListMirakel > de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> = ListMirakel . findByName ( java.lang.String ) ; final ListMirakel de.azapps.mirakel.helper.export_import.ListMirakel ; if ( de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.helper.export_import.ListMirakel = de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> . get ( ) ; } else { de.azapps.mirakel.helper.export_import.ListMirakel = ListMirakel . safeFirst ( ) ; } final Task de.azapps.mirakel.helper.export_import.Task = Task . newTask ( java.lang.String , de.azapps.mirakel.helper.export_import.ListMirakel ) ; de.azapps.mirakel.helper.export_import.Task . setContent ( java.lang.String ) ; de.azapps.mirakel.helper.export_import.Task . setPriority ( int ) ; de.azapps.mirakel.helper.export_import.Task . setDue ( fromNullable ( de.azapps.mirakel.helper.export_import.DateTime ) ) ; de.azapps.mirakel.helper.export_import.Task . setDone ( boolean ) ; de.azapps.mirakel.helper.export_import.Task . save ( false ) ; Log . v ( java.lang.String , STRING + java.lang.String ) ; } } catch ( final java.io.FileNotFoundException java.io.FileNotFoundException ) { Log . e ( java.lang.String , STRING , java.io.FileNotFoundException ) ; return false ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; return false ; } return true ; } 
public static boolean boolean ( final java.io.FileInputStream java.io.FileInputStream ) { final JsonObject de.azapps.mirakel.helper.export_import.JsonObject ; try { de.azapps.mirakel.helper.export_import.JsonObject = new JsonParser ( ) . parse ( new java.io.InputStreamReader ( java.io.FileInputStream ) ) . getAsJsonObject ( ) ; } catch ( final JsonSyntaxException de.azapps.mirakel.helper.export_import.JsonSyntaxException ) { Log . e ( java.lang.String , STRING , de.azapps.mirakel.helper.export_import.JsonSyntaxException ) ; return false ; } final java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> < java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> < java.lang.String , JsonElement > > java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> = de.azapps.mirakel.helper.export_import.JsonObject . entrySet ( ) ; de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.ListMirakel> = new SparseArray <> ( ) ; de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.Task> = new SparseArray <> ( ) ; if ( ! boolean ( java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> ) ) { return false ; } for ( final Pair < Task , java.lang.Integer > de.azapps.mirakel.helper.export_import.Pair<de.azapps.mirakel.helper.export_import.Task,java.lang.Integer> : java.util.List<de.azapps.mirakel.helper.export_import.Pair<de.azapps.mirakel.helper.export_import.Task,java.lang.Integer>> ) { try { de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.Task> . get ( pair . second ) . addSubtask ( pair . first ) ; } catch ( final java.lang.RuntimeException java.lang.RuntimeException ) { Log . e ( java.lang.String , STRING , java.lang.RuntimeException ) ; } } return true ; } 
private static boolean boolean ( @ NonNull final java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> < java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> < java.lang.String , JsonElement > > java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> ) { for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> : java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement>> ) { switch ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getKey ( ) . toLowerCase ( ) ) { case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . isJsonObject ( ) ) { boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . getAsJsonObject ( ) . entrySet ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . isJsonArray ( ) ) { for ( final JsonElement de.azapps.mirakel.helper.export_import.JsonElement : java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . getAsJsonArray ( ) ) { de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.ListMirakel> = de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.ListMirakel> ( de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) ) ; } } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . isJsonArray ( ) ) { for ( JsonElement de.azapps.mirakel.helper.export_import.JsonElement : java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . getAsJsonArray ( ) ) { void ( de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) ) ; } } else { throw new JsonParseException ( STRING ) ; } break; case STRING : void ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> ) ; break; case STRING : void ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> ) ; break; case STRING : void ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> ) ; break; default: Log . d ( java.lang.String , java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getKey ( ) ) ; ErrorReporter . report ( ErrorType . IMPORT_WUNDERLIST ) ; return false ; } } return true ; } 
private static void void ( final @ NonNull java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> ) { if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . isJsonArray ( ) ) { final JsonArray de.azapps.mirakel.helper.export_import.JsonArray = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . getAsJsonArray ( ) ; for ( final JsonElement de.azapps.mirakel.helper.export_import.JsonElement : de.azapps.mirakel.helper.export_import.JsonArray ) { if ( de.azapps.mirakel.helper.export_import.JsonElement . isJsonObject ( ) ) { final int int = de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) . get ( STRING ) . getAsInt ( ) ; final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) . get ( STRING ) . getAsString ( ) ; final DateTime de.azapps.mirakel.helper.export_import.DateTime ; try { de.azapps.mirakel.helper.export_import.DateTime = new DateTime ( new java.text.SimpleDateFormat ( STRING ) . java.util.Date ( java.lang.String ) ) ; } catch ( final java.text.ParseException java.text.ParseException ) { Log . wtf ( java.lang.String , STRING , java.text.ParseException ) ; continue; } final Task de.azapps.mirakel.helper.export_import.Task = de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.Task> . get ( int ) ; if ( de.azapps.mirakel.helper.export_import.Task != null ) { de.azapps.mirakel.helper.export_import.Task . setReminder ( of ( de.azapps.mirakel.helper.export_import.DateTime ) ) ; de.azapps.mirakel.helper.export_import.Task . save ( ) ; } } else { throw new JsonParseException ( STRING ) ; } } } } 
private static void void ( final @ NonNull java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> ) { if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . isJsonArray ( ) ) { final JsonArray de.azapps.mirakel.helper.export_import.JsonArray = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . getAsJsonArray ( ) ; for ( final JsonElement de.azapps.mirakel.helper.export_import.JsonElement : de.azapps.mirakel.helper.export_import.JsonArray ) { if ( de.azapps.mirakel.helper.export_import.JsonElement . isJsonObject ( ) ) { final int int = de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) . get ( STRING ) . getAsInt ( ) ; final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) . get ( STRING ) . getAsString ( ) ; final Task de.azapps.mirakel.helper.export_import.Task = de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.Task> . get ( int ) ; if ( de.azapps.mirakel.helper.export_import.Task != null ) { de.azapps.mirakel.helper.export_import.Task . setContent ( java.lang.String ) ; de.azapps.mirakel.helper.export_import.Task . save ( ) ; } } else { throw new JsonParseException ( STRING ) ; } } } } 
private static void void ( final @ NonNull java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> ) { if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . isJsonArray ( ) ) { final JsonArray de.azapps.mirakel.helper.export_import.JsonArray = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.helper.export_import.JsonElement> . getValue ( ) . getAsJsonArray ( ) ; for ( final JsonElement de.azapps.mirakel.helper.export_import.JsonElement : de.azapps.mirakel.helper.export_import.JsonArray ) { if ( de.azapps.mirakel.helper.export_import.JsonElement . isJsonObject ( ) ) { final int int = de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) . get ( STRING ) . getAsInt ( ) ; final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) . get ( STRING ) . getAsString ( ) ; final boolean boolean = de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) . has ( STRING ) && de.azapps.mirakel.helper.export_import.JsonElement . getAsJsonObject ( ) . get ( STRING ) . getAsBoolean ( ) ; final Task de.azapps.mirakel.helper.export_import.Task = de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.Task> . get ( int ) ; if ( de.azapps.mirakel.helper.export_import.Task != null ) { final ListMirakel de.azapps.mirakel.helper.export_import.ListMirakel = MirakelModelPreferences . getListForSubtask ( de.azapps.mirakel.helper.export_import.Task ) ; final Task de.azapps.mirakel.helper.export_import.Task = Task . newTask ( java.lang.String , de.azapps.mirakel.helper.export_import.ListMirakel ) ; de.azapps.mirakel.helper.export_import.Task . addSubtask ( de.azapps.mirakel.helper.export_import.Task ) ; de.azapps.mirakel.helper.export_import.Task . setDone ( boolean ) ; de.azapps.mirakel.helper.export_import.Task . save ( ) ; } } else { throw new JsonParseException ( STRING ) ; } } } } 
private static de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.ListMirakel> < ListMirakel > de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.ListMirakel> ( final JsonObject de.azapps.mirakel.helper.export_import.JsonObject ) { final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ; final int int = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) ; final ListMirakel de.azapps.mirakel.helper.export_import.ListMirakel = ListMirakel . safeNewList ( java.lang.String ) ; de.azapps.mirakel.helper.export_import.ListMirakel . save ( false ) ; de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.ListMirakel> . put ( int , de.azapps.mirakel.helper.export_import.ListMirakel ) ; return de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.ListMirakel> ; } 
private static void void ( final JsonObject de.azapps.mirakel.helper.export_import.JsonObject ) { final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ; final int int = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) ; final java.lang.Long java.lang.Long = de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.ListMirakel> . get ( int ) . getId ( ) ; Optional < ListMirakel > de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> = ListMirakel . get ( java.lang.Long ) ; final ListMirakel de.azapps.mirakel.helper.export_import.ListMirakel ; if ( de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.helper.export_import.ListMirakel = de.azapps.mirakel.helper.export_import.Optional<de.azapps.mirakel.helper.export_import.ListMirakel> . get ( ) ; } else { de.azapps.mirakel.helper.export_import.ListMirakel = ListMirakel . safeFirst ( ) ; } final Task de.azapps.mirakel.helper.export_import.Task = Task . newTask ( java.lang.String , de.azapps.mirakel.helper.export_import.ListMirakel ) ; de.azapps.mirakel.helper.export_import.SparseArray<de.azapps.mirakel.helper.export_import.Task> . put ( de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) , de.azapps.mirakel.helper.export_import.Task ) ; if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { try { final DateTime de.azapps.mirakel.helper.export_import.DateTime = new DateTime ( DateTimeHelper . parseDate ( de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ) ) ; de.azapps.mirakel.helper.export_import.Task . setDue ( of ( de.azapps.mirakel.helper.export_import.DateTime ) ) ; } catch ( final java.text.ParseException java.text.ParseException ) { Log . e ( java.lang.String , STRING , java.text.ParseException ) ; } } if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { de.azapps.mirakel.helper.export_import.Task . setContent ( de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ) ; } if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { de.azapps.mirakel.helper.export_import.Task . setDone ( true ) ; } if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) && de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsBoolean ( ) ) { de.azapps.mirakel.helper.export_import.Task . setPriority ( NUMBER ) ; } if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { java.util.List<de.azapps.mirakel.helper.export_import.Pair<de.azapps.mirakel.helper.export_import.Task,java.lang.Integer>> . add ( new Pair <> ( de.azapps.mirakel.helper.export_import.Task , de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) ) ) ; } if ( de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) && de.azapps.mirakel.helper.export_import.JsonObject . has ( STRING ) ) { final int int = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsInt ( ) ; final Recurring de.azapps.mirakel.helper.export_import.Recurring ; final java.lang.String java.lang.String = de.azapps.mirakel.helper.export_import.JsonObject . get ( STRING ) . getAsString ( ) ; switch ( java.lang.String ) { case STRING : de.azapps.mirakel.helper.export_import.Recurring = Recurring . newRecurring ( java.lang.String , new Period ( int , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , true , new SparseBooleanArray ( ) ) ; break; case STRING : de.azapps.mirakel.helper.export_import.Recurring = Recurring . newRecurring ( java.lang.String , new Period ( NUMBER , int , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , true , new SparseBooleanArray ( ) ) ; break; case STRING : de.azapps.mirakel.helper.export_import.Recurring = Recurring . newRecurring ( java.lang.String , new Period ( NUMBER , NUMBER , int , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , true , new SparseBooleanArray ( ) ) ; break; case STRING : de.azapps.mirakel.helper.export_import.Recurring = Recurring . newRecurring ( java.lang.String , new Period ( NUMBER , NUMBER , NUMBER , int , NUMBER , NUMBER , NUMBER , NUMBER ) , true , Optional .< DateTime > absent ( ) , Optional .< DateTime > absent ( ) , true , true , new SparseBooleanArray ( ) ) ; break; default: throw new JsonParseException ( STRING + java.lang.String ) ; } de.azapps.mirakel.helper.export_import.Task . setRecurrence ( of ( de.azapps.mirakel.helper.export_import.Recurring ) ) ; } de.azapps.mirakel.helper.export_import.Task . save ( false ) ; } 
public static de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> < ListMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> ( final Intent de.azapps.mirakel.helper.Intent ) { if ( de.azapps.mirakel.helper.Intent . hasExtra ( DefinitionsHelper . EXTRA_LIST ) ) { return of ( ( ListMirakel ) de.azapps.mirakel.helper.Intent . getParcelableExtra ( DefinitionsHelper . EXTRA_LIST ) ) ; } else if ( de.azapps.mirakel.helper.Intent . hasExtra ( DefinitionsHelper . EXTRA_LIST_ID ) ) { return ListMirakel . get ( de.azapps.mirakel.helper.Intent . getLongExtra ( DefinitionsHelper . EXTRA_LIST_ID , NUMBER ) ) ; } else { return absent ( ) ; } } 
public static void void ( final AccountMirakel de.azapps.mirakel.helper.AccountMirakel ) { settings . edit ( ) . putLong ( STRING , de.azapps.mirakel.helper.AccountMirakel . getId ( ) ) . commit ( ) ; } 
@ NonNull public static de.azapps.mirakel.helper.AccountMirakel de.azapps.mirakel.helper.AccountMirakel ( ) { final long long = settings . getLong ( STRING , AccountMirakel . getLocal ( ) . getId ( ) ) ; final Optional < AccountMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.AccountMirakel> = AccountMirakel . get ( long ) ; if ( de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.AccountMirakel> . isPresent ( ) ) { return de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.AccountMirakel> . get ( ) ; } return AccountMirakel . getLocal ( ) ; } 
public static de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> < ListMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> ( ) { if ( settings . getBoolean ( STRING , false ) ) { long long ; try { long = ( long ) settings . getInt ( STRING , NUMBER ) ; } catch ( final java.lang.ClassCastException java.lang.ClassCastException ) { long = settings . getLong ( STRING , NUMBER ) ; } return ListMirakel . get ( long ) ; } return absent ( ) ; } 
public static de.azapps.mirakel.helper.ListMirakel de.azapps.mirakel.helper.ListMirakel ( ) { return de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> ( ) . or ( ListMirakel . safeFirst ( ) ) ; } 
public static de.azapps.mirakel.helper.ListMirakel de.azapps.mirakel.helper.ListMirakel ( final Task de.azapps.mirakel.helper.Task ) { Optional < ListMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> ; if ( MirakelCommonPreferences . addSubtaskToSameList ( ) ) { de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = fromNullable ( de.azapps.mirakel.helper.Task . getList ( ) ) ; } else { de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> ( ) ; } if ( ! de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . isPresent ( ) ) { java.lang.String java.lang.String = context . getString ( R . string . subtask_list_name ) ; de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = ListMirakel . findByName ( java.lang.String ) ; if ( ! de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = of ( ListMirakel . safeNewList ( java.lang.String ) ) ; } void ( de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . get ( ) ) ; } return de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . get ( ) ; } 
private static de.azapps.mirakel.helper.ListMirakel de.azapps.mirakel.helper.ListMirakel ( final int int ) { Optional < ListMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> ; try { de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = ListMirakel . get ( int ) ; } catch ( final java.lang.NumberFormatException java.lang.NumberFormatException ) { de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = fromNullable ( ( ListMirakel ) SpecialList . firstSpecial ( ) . orNull ( ) ) ; } if ( ! de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . isPresent ( ) ) { return ListMirakel . safeFirst ( ) ; } else { return de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . get ( ) ; } } 
public static de.azapps.mirakel.helper.ListMirakel de.azapps.mirakel.helper.ListMirakel ( ) { return de.azapps.mirakel.helper.ListMirakel ( MirakelCommonPreferences . getNotificationsListId ( ) ) ; } 
public static de.azapps.mirakel.helper.ListMirakel de.azapps.mirakel.helper.ListMirakel ( ) { try { return ListMirakel . safeGet ( java.lang.Integer . int ( settings . getString ( STRING , STRING ) ) ) ; } catch ( final java.lang.NumberFormatException java.lang.NumberFormatException ) { return ListMirakel . safeFirst ( ) ; } } 
public static int int ( final AccountMirakel de.azapps.mirakel.helper.AccountMirakel ) { try { return java.lang.Integer . int ( settings . getString ( STRING + de.azapps.mirakel.helper.AccountMirakel . getName ( ) , STRING ) ) ; } catch ( final java.lang.NumberFormatException java.lang.NumberFormatException ) { return - NUMBER ; } } 
public static boolean boolean ( final AccountMirakel de.azapps.mirakel.helper.AccountMirakel , final int int ) { final Editor de.azapps.mirakel.helper.Editor = getEditor ( ) ; de.azapps.mirakel.helper.Editor . putString ( STRING + de.azapps.mirakel.helper.AccountMirakel . getName ( ) , int + STRING ) ; return de.azapps.mirakel.helper.Editor . commit ( ) ; } 
public static de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> < ListMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> ( ) { try { if ( settings . contains ( STRING ) ) { return ListMirakel . get ( settings . getLong ( STRING , - NUMBER ) ) ; } else { return absent ( ) ; } } catch ( final java.lang.Exception java.lang.Exception ) { try { return ListMirakel . get ( java.lang.Integer . int ( settings . getString ( STRING , STRING ) ) ) ; } catch ( final java.lang.NumberFormatException java.lang.NumberFormatException ) { Log . e ( java.lang.String , STRING , java.lang.NumberFormatException ) ; return absent ( ) ; } } } 
public static void void ( final ListMirakel de.azapps.mirakel.helper.ListMirakel ) { final Editor de.azapps.mirakel.helper.Editor = getEditor ( ) ; de.azapps.mirakel.helper.Editor . putLong ( STRING , de.azapps.mirakel.helper.ListMirakel . getId ( ) ) ; de.azapps.mirakel.helper.Editor . commit ( ) ; } 
public static java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = STRING ; if ( MirakelCommonPreferences . isDemoMode ( ) ) { java.lang.String = STRING + MirakelCommonPreferences . getLanguage ( ) + STRING ; } return java.lang.String ; } 
public static int int ( ) { return settings . getInt ( STRING , NUMBER ) ; } 
public static void void ( final int int ) { getEditor ( ) . putInt ( STRING , int ) . apply ( ) ; } 
static void void ( final Context de.azapps.mirakel.helper.Context , final java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String += STRING + de.azapps.mirakel.helper.Context . getString ( R . string . share_footer ) ; final Intent de.azapps.mirakel.helper.Intent = new Intent ( android . content . Intent . ACTION_SEND ) ; de.azapps.mirakel.helper.Intent . setType ( STRING ) ; de.azapps.mirakel.helper.Intent . putExtra ( android . content . Intent . EXTRA_SUBJECT , java.lang.String ) ; de.azapps.mirakel.helper.Intent . putExtra ( android . content . Intent . EXTRA_TEXT , java.lang.String ) ; final Intent de.azapps.mirakel.helper.Intent = Intent . createChooser ( de.azapps.mirakel.helper.Intent , de.azapps.mirakel.helper.Context . getResources ( ) . getString ( R . string . share_using ) ) ; de.azapps.mirakel.helper.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; de.azapps.mirakel.helper.Context . startActivity ( de.azapps.mirakel.helper.Intent ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final ListMirakelInterface de.azapps.mirakel.helper.ListMirakelInterface ) { final java.lang.String java.lang.String = de.azapps.mirakel.helper.Context . getString ( R . string . share_list_title , de.azapps.mirakel.helper.ListMirakelInterface . getName ( ) , de.azapps.mirakel.helper.ListMirakelInterface . countTasks ( ) ) ; java.lang.String java.lang.String = STRING ; for ( final Task de.azapps.mirakel.helper.Task : de.azapps.mirakel.helper.ListMirakelInterface . tasks ( ) ) { if ( de.azapps.mirakel.helper.Task . isDone ( ) ) { continue; } java.lang.String += STRING ; java.lang.String += TaskHelper . getTaskName ( de.azapps.mirakel.helper.Context , de.azapps.mirakel.helper.Task ) + STRING ; } void ( de.azapps.mirakel.helper.Context , java.lang.String , java.lang.String ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final Task de.azapps.mirakel.helper.Task ) { final java.lang.String java.lang.String = TaskHelper . getTaskName ( de.azapps.mirakel.helper.Context , de.azapps.mirakel.helper.Task ) ; void ( de.azapps.mirakel.helper.Context , java.lang.String , de.azapps.mirakel.helper.Task . getContent ( ) ) ; } 
@ NonNull public static de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.Task> < Task > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.Task> ( final Intent de.azapps.mirakel.helper.Intent ) { if ( de.azapps.mirakel.helper.Intent == null ) { return absent ( ) ; } final Bundle de.azapps.mirakel.helper.Bundle = de.azapps.mirakel.helper.Intent . getBundleExtra ( DefinitionsHelper . BUNDLE_WRAPPER ) ; if ( de.azapps.mirakel.helper.Bundle != null ) { return fromNullable ( ( Task ) de.azapps.mirakel.helper.Bundle . getParcelable ( DefinitionsHelper . EXTRA_TASK ) ) ; } else if ( de.azapps.mirakel.helper.Intent . hasExtra ( DefinitionsHelper . EXTRA_TASK ) ) { return fromNullable ( ( Task ) de.azapps.mirakel.helper.Intent . getParcelableExtra ( DefinitionsHelper . EXTRA_TASK ) ) ; } else if ( de.azapps.mirakel.helper.Intent . hasExtra ( DefinitionsHelper . EXTRA_TASK_REMINDER ) ) { return fromNullable ( ( Task ) de.azapps.mirakel.helper.Intent . getParcelableExtra ( DefinitionsHelper . EXTRA_TASK_REMINDER ) ) ; } else { return absent ( ) ; } } 
static java.lang.String java.lang.String ( final Context de.azapps.mirakel.helper.Context , final Task de.azapps.mirakel.helper.Task ) { final java.lang.String java.lang.String ; if ( ! de.azapps.mirakel.helper.Task . getDue ( ) . isPresent ( ) ) { java.lang.String = de.azapps.mirakel.helper.Context . getString ( R . string . share_task_title , de.azapps.mirakel.helper.Task . getName ( ) ) ; } else { java.lang.String = de.azapps.mirakel.helper.Context . getString ( R . string . share_task_title_with_date , de.azapps.mirakel.helper.Task . getName ( ) , DateTimeHelper . formatDate ( de.azapps.mirakel.helper.Task . getDue ( ) . get ( ) , de.azapps.mirakel.helper.Context . getString ( R . string . dateFormat ) ) ) ; } return java.lang.String ; } 
public static int int ( final Optional < DateTime > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.DateTime> , final boolean boolean ) { final int int ; if ( ! de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.DateTime> . isPresent ( ) ) { int = R . attr . colorTextGrey ; } else { final DateTime de.azapps.mirakel.helper.DateTime = new LocalDate ( ) . toDateTimeAtStartOfDay ( ) ; final DateTime de.azapps.mirakel.helper.DateTime = de.azapps.mirakel.helper.DateTime . plusDays ( NUMBER ) ; final DateTime de.azapps.mirakel.helper.DateTime = de.azapps.mirakel.helper.DateTime . plusDays ( NUMBER ) ; if ( boolean ) { int = R . attr . colorTextGrey ; } else if ( de.azapps.mirakel.helper.DateTime . isAfter ( de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.DateTime> . get ( ) ) ) { int = R . attr . colorDueOverdue ; } else if ( de.azapps.mirakel.helper.DateTime . isAfter ( de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.DateTime> . get ( ) ) ) { int = R . attr . colorDueToday ; } else if ( de.azapps.mirakel.helper.DateTime . isAfter ( de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.DateTime> . get ( ) ) ) { int = R . attr . colorDueNext ; } else { int = R . attr . colorDueFuture ; } } return ThemeManager . getColor ( int ) ; } 
public static int int ( final int int ) { final int [] int[] = { R . attr . colorPrio_2 , R . attr . colorPrio_1 , R . attr . colorPrio0 , R . attr . colorPrio1 , R . attr . colorPrio2 } ; return ThemeManager . getColor ( int[] [ int + NUMBER ] ) ; } 
public void ( final int int , final java.lang.String java.lang.String , @ NonNull final ACCOUNT_TYPES de.azapps.mirakel.model.account.ACCOUNT_TYPES , final boolean boolean , @ NonNull final Optional < java.lang.String > de.azapps.mirakel.model.account.Optional<java.lang.String> ) { super( int , java.lang.String ); this . void ( de.azapps.mirakel.model.account.ACCOUNT_TYPES ) ; this . void ( boolean ) ; this . void ( de.azapps.mirakel.model.account.Optional<java.lang.String> ) ; } 
protected void ( ) { super(); } 
public de.azapps.mirakel.model.account.ACCOUNT_TYPES de.azapps.mirakel.model.account.ACCOUNT_TYPES ( ) { return this . de.azapps.mirakel.model.account.ACCOUNT_TYPES ; } 
public void void ( @ NonNull final ACCOUNT_TYPES de.azapps.mirakel.model.account.ACCOUNT_TYPES ) { this . de.azapps.mirakel.model.account.ACCOUNT_TYPES = de.azapps.mirakel.model.account.ACCOUNT_TYPES ; } 
@ NonNull public de.azapps.mirakel.model.account.ContentValues de.azapps.mirakel.model.account.ContentValues ( ) { final ContentValues de.azapps.mirakel.model.account.ContentValues ; try { de.azapps.mirakel.model.account.ContentValues = super. getContentValues ( ) ; } catch ( DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { Log . wtf ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; return new ContentValues ( ) ; } de.azapps.mirakel.model.account.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.account.ACCOUNT_TYPES . toInt ( ) ) ; de.azapps.mirakel.model.account.ContentValues . put ( java.lang.String , this . boolean ) ; de.azapps.mirakel.model.account.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.account.Optional<java.lang.String> . orNull ( ) ) ; return de.azapps.mirakel.model.account.ContentValues ; } 
public boolean boolean ( ) { return this . boolean ; } 
public void void ( final boolean boolean ) { this . boolean = boolean ; } 
public de.azapps.mirakel.model.account.Optional<java.lang.String> < java.lang.String > de.azapps.mirakel.model.account.Optional<java.lang.String> ( ) { return this . de.azapps.mirakel.model.account.Optional<java.lang.String> ; } 
public void void ( final Optional < java.lang.String > de.azapps.mirakel.model.account.Optional<java.lang.String> ) { this . de.azapps.mirakel.model.account.Optional<java.lang.String> = de.azapps.mirakel.model.account.Optional<java.lang.String> ; } 
@ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = int * int + ( int ) getId ( ) ; int = int * int + ( this . boolean ? NUMBER : NUMBER ) ; int = int * int + ( getName ( ) . hashCode ( ) ) ; int = int * int + ( ! this . de.azapps.mirakel.model.account.Optional<java.lang.String> . isPresent ( ) ? NUMBER : this . de.azapps.mirakel.model.account.Optional<java.lang.String> . get ( ) . hashCode ( ) ) ; int = int * int + this . de.azapps.mirakel.model.account.ACCOUNT_TYPES . toInt ( ) ; return int ; } 
@ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof de.azapps.mirakel.model.account.AccountBase ) ) { return false ; } final de.azapps.mirakel.model.account.AccountBase de.azapps.mirakel.model.account.AccountBase = ( de.azapps.mirakel.model.account.AccountBase ) java.lang.Object ; if ( this . getId ( ) != de.azapps.mirakel.model.account.AccountBase . getId ( ) ) { return false ; } if ( this . boolean != de.azapps.mirakel.model.account.AccountBase . boolean ) { return false ; } if ( ! this . getName ( ) . equals ( de.azapps.mirakel.model.account.AccountBase . getName ( ) ) ) { return false ; } if ( this . de.azapps.mirakel.model.account.Optional<java.lang.String> . isPresent ( ) && de.azapps.mirakel.model.account.AccountBase . de.azapps.mirakel.model.account.Optional<java.lang.String> . isPresent ( ) ) { if ( ! this . de.azapps.mirakel.model.account.Optional<java.lang.String> . get ( ) . equals ( de.azapps.mirakel.model.account.AccountBase . de.azapps.mirakel.model.account.Optional<java.lang.String> . get ( ) ) ) { return false ; } } else if ( this . de.azapps.mirakel.model.account.Optional<java.lang.String> . isPresent ( ) != de.azapps.mirakel.model.account.AccountBase . de.azapps.mirakel.model.account.Optional<java.lang.String> . isPresent ( ) ) { return false ; } if ( this . de.azapps.mirakel.model.account.ACCOUNT_TYPES != de.azapps.mirakel.model.account.AccountBase . de.azapps.mirakel.model.account.ACCOUNT_TYPES ) { return false ; } return true ; } 
public static de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ( final java.lang.String java.lang.String ) { switch ( java.lang.String ) { case java.lang.String : case java.lang.String : return de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ; case java.lang.String : return de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ; case java.lang.String : return de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ; default: return de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ; } } 
public static de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ( final int int ) { switch ( int ) { case - NUMBER : return de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ; case NUMBER : return de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ; case NUMBER : return de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ; case NUMBER : return de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ; default: throw new java.lang.IllegalArgumentException ( ) ; } } 
public static java.lang.String java.lang.String ( final de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ) { switch ( de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ) { case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return java.lang.String ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return java.lang.String ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return java.lang.String ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : default: return null ; } } 
public int int ( ) { switch ( this ) { case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return NUMBER ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return - NUMBER ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return NUMBER ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return NUMBER ; default: throw new java.lang.RuntimeException ( ) ; } } 
public java.lang.String java.lang.String ( final Context de.azapps.mirakel.model.account.Context ) { switch ( this ) { case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return de.azapps.mirakel.model.account.Context . getString ( R . string . calDavName ) ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return de.azapps.mirakel.model.account.Context . getString ( R . string . local_account ) ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return de.azapps.mirakel.model.account.Context . getString ( R . string . tw_account ) ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return de.azapps.mirakel.model.account.Context . getString ( R . string . accounts_all ) ; default: return STRING ; } } 
public boolean boolean ( ) { switch ( this ) { case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return false ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return true ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : return true ; case de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES : default: throw new java.lang.RuntimeException ( STRING ) ; } } 
public boolean boolean ( ) { return boolean ( ) ; } 
@ java.lang.Override protected de.azapps.mirakel.model.account.Uri de.azapps.mirakel.model.account.Uri ( ) { return de.azapps.mirakel.model.account.Uri ; } 
public void ( final CursorGetter de.azapps.mirakel.model.account.CursorGetter ) { super( de.azapps.mirakel.model.account.CursorGetter . getInt ( ID ) , de.azapps.mirakel.model.account.CursorGetter . getString ( NAME ) , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ( de.azapps.mirakel.model.account.CursorGetter . getInt ( TYPE ) ) , de.azapps.mirakel.model.account.CursorGetter . getInt ( ENABLED ) == NUMBER , fromNullable ( de.azapps.mirakel.model.account.CursorGetter . getString ( SYNC_KEY ) ) ); } 
public static de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> < de.azapps.mirakel.model.account.AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ( final Account de.azapps.mirakel.model.account.Account ) { return new MirakelQueryBuilder ( context ) . and ( NAME , Operation . EQ , account . name ) . get ( de.azapps.mirakel.model.account.AccountMirakel .class ) ; } 
public static de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> < de.azapps.mirakel.model.account.AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ( final long long ) { return new MirakelQueryBuilder ( context ) . get ( de.azapps.mirakel.model.account.AccountMirakel .class , long ) ; } 
public static long long ( ) { return new MirakelQueryBuilder ( context ) . and ( TYPE , Operation . NOT_EQ , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . int ( ) ) . and ( ENABLED , Operation . EQ , true ) . count ( de.azapps.mirakel.model.account.Uri ) ; } 
public static java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < de.azapps.mirakel.model.account.AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ( ) { return new MirakelQueryBuilder ( context ) . getList ( de.azapps.mirakel.model.account.AccountMirakel .class ) ; } 
public static long long ( ) { return de.azapps.mirakel.model.account.MirakelQueryBuilder ( ) . count ( de.azapps.mirakel.model.account.AccountMirakel . de.azapps.mirakel.model.account.Uri ) ; } 
private static de.azapps.mirakel.model.account.MirakelQueryBuilder de.azapps.mirakel.model.account.MirakelQueryBuilder ( ) { return new MirakelQueryBuilder ( context ) . and ( TYPE , Operation . IN , java.util.List<java.lang.Integer> ) ; } 
public static de.azapps.mirakel.model.account.Cursor de.azapps.mirakel.model.account.Cursor ( ) { final MatrixCursor de.azapps.mirakel.model.account.MatrixCursor = new MatrixCursor ( java.lang.String[] ) ; de.azapps.mirakel.model.account.MatrixCursor . addRow ( new java.lang.String [] { STRING , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . java.lang.String ( context ) , null , java.lang.String . java.lang.String ( de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . int ( ) ) , STRING , null } ) ; final CursorWrapper de.azapps.mirakel.model.account.CursorWrapper = de.azapps.mirakel.model.account.CursorWrapper ( ) ; return new MergeCursor ( new Cursor [] { de.azapps.mirakel.model.account.MatrixCursor , de.azapps.mirakel.model.account.CursorWrapper . getRawCursor ( ) } ) ; } 
public static de.azapps.mirakel.model.account.CursorWrapper de.azapps.mirakel.model.account.CursorWrapper ( ) { return new MirakelQueryBuilder ( context ) . query ( MirakelInternalContentProvider . ACCOUNT_URI ) ; } 
public static de.azapps.mirakel.model.account.CursorWrapper de.azapps.mirakel.model.account.CursorWrapper ( ) { return de.azapps.mirakel.model.account.MirakelQueryBuilder ( ) . query ( MirakelInternalContentProvider . ACCOUNT_URI ) ; } 
public static java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < de.azapps.mirakel.model.account.AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ( final boolean boolean ) { return new MirakelQueryBuilder ( context ) . and ( ENABLED , Operation . EQ , boolean ) . getList ( de.azapps.mirakel.model.account.AccountMirakel .class ) ; } 
public static de.azapps.mirakel.model.account.AccountMirakel de.azapps.mirakel.model.account.AccountMirakel ( ) { final Optional < de.azapps.mirakel.model.account.AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> = new MirakelQueryBuilder ( context ) . and ( TYPE , Operation . EQ , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . int ( ) ) . and ( ENABLED , Operation . EQ , true ) . get ( de.azapps.mirakel.model.account.AccountMirakel .class ) ; if ( de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> . isPresent ( ) ) { return de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> . get ( ) ; } return de.azapps.mirakel.model.account.AccountMirakel ( context . getString ( R . string . local_account ) , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES , true ) ; } 
public static java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < de.azapps.mirakel.model.account.AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ( ) { return new MirakelQueryBuilder ( context ) . and ( TYPE , Operation . NOT_EQ , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . int ( ) ) . and ( ENABLED , Operation . EQ , true ) . getList ( de.azapps.mirakel.model.account.AccountMirakel .class ) ; } 
@ NonNull public static de.azapps.mirakel.model.account.AccountMirakel de.azapps.mirakel.model.account.AccountMirakel ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES , final boolean boolean ) { final ContentValues de.azapps.mirakel.model.account.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.account.ContentValues . put ( ModelBase . NAME , java.lang.String ) ; de.azapps.mirakel.model.account.ContentValues . put ( TYPE , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . int ( ) ) ; de.azapps.mirakel.model.account.ContentValues . put ( ENABLED , boolean ) ; final long long = insert ( de.azapps.mirakel.model.account.Uri , de.azapps.mirakel.model.account.ContentValues ) ; return de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ( long ) . get ( ) ; } 
public static void void ( final Account [] de.azapps.mirakel.model.account.Account[] ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < de.azapps.mirakel.model.account.AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = new java.util.ArrayList <> ( accounts . length ) ; java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . boolean ( de.azapps.mirakel.model.account.AccountMirakel . de.azapps.mirakel.model.account.AccountMirakel ( ) ) ; for ( final Account de.azapps.mirakel.model.account.Account : de.azapps.mirakel.model.account.Account[] ) { if ( java.util.List<java.lang.String> . boolean ( a . type ) ) { Optional < de.azapps.mirakel.model.account.AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> = de.azapps.mirakel.model.account.AccountMirakel . de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ( a . name ) ; if ( de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> . isPresent ( ) ) { java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . boolean ( de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> . get ( ) ) ; } else { java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . boolean ( de.azapps.mirakel.model.account.AccountMirakel . de.azapps.mirakel.model.account.AccountMirakel ( a . name , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ( a . type ) , true ) ) ; } } } final MirakelQueryBuilder de.azapps.mirakel.model.account.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) . and ( ID , Operation . NOT_IN , java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) ; delete ( de.azapps.mirakel.model.account.Uri , de.azapps.mirakel.model.account.MirakelQueryBuilder . getSelection ( ) , de.azapps.mirakel.model.account.MirakelQueryBuilder . getSelectionArguments ( ) . toArray ( new java.lang.String [ NUMBER ] ) ) ; } 
@ NonNull private static de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> < de.azapps.mirakel.model.account.AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ( final @ NonNull java.lang.String java.lang.String ) { return new MirakelQueryBuilder ( context ) . and ( NAME , Operation . EQ , java.lang.String ) . get ( de.azapps.mirakel.model.account.AccountMirakel .class ) ; } 
public void ( final int int , final java.lang.String java.lang.String , final de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES , final boolean boolean , @ NonNull final Optional < java.lang.String > de.azapps.mirakel.model.account.Optional<java.lang.String> ) { super( int , java.lang.String , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES , boolean , de.azapps.mirakel.model.account.Optional<java.lang.String> ); } 
@ java.lang.Override public void void ( ) { if ( getType ( ) == de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ) { return; } MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.model.account.AccountMirakel .super. destroy ( ) ; final ContentValues de.azapps.mirakel.model.account.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.account.ContentValues . put ( ListMirakel . ACCOUNT_ID , de.azapps.mirakel.model.account.AccountMirakel ( ) . getId ( ) ) ; void ( MirakelInternalContentProvider . LIST_URI , de.azapps.mirakel.model.account.ContentValues , STRING + getId ( ) , null ) ; final Account de.azapps.mirakel.model.account.Account = de.azapps.mirakel.model.account.Account ( ) ; if ( de.azapps.mirakel.model.account.Account == null ) { Log . wtf ( java.lang.String , STRING ) ; return; } AccountManager . get ( context ) . removeAccount ( de.azapps.mirakel.model.account.Account , null , null ) ; } } ) ; } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.model.account.AccountMirakel .super. destroy ( ) ; final ContentValues de.azapps.mirakel.model.account.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.account.ContentValues . put ( ListMirakel . ACCOUNT_ID , de.azapps.mirakel.model.account.AccountMirakel ( ) . getId ( ) ) ; void ( MirakelInternalContentProvider . LIST_URI , de.azapps.mirakel.model.account.ContentValues , STRING + getId ( ) , null ) ; final Account de.azapps.mirakel.model.account.Account = de.azapps.mirakel.model.account.Account ( ) ; if ( de.azapps.mirakel.model.account.Account == null ) { Log . wtf ( java.lang.String , STRING ) ; return; } AccountManager . get ( context ) . removeAccount ( de.azapps.mirakel.model.account.Account , null , null ) ; } 
public de.azapps.mirakel.model.account.Account de.azapps.mirakel.model.account.Account ( final Context de.azapps.mirakel.model.account.Context ) { de.azapps.mirakel.model.account.AccountMirakel . context = de.azapps.mirakel.model.account.Context ; return de.azapps.mirakel.model.account.Account ( ) ; } 
public de.azapps.mirakel.model.account.Account de.azapps.mirakel.model.account.Account ( ) { final AccountManager de.azapps.mirakel.model.account.AccountManager = AccountManager . get ( context ) ; final Account [] de.azapps.mirakel.model.account.Account[] = de.azapps.mirakel.model.account.AccountManager . getAccountsByType ( de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . java.lang.String ( getType ( ) ) ) ; for ( final Account de.azapps.mirakel.model.account.Account : de.azapps.mirakel.model.account.Account[] ) { if ( a . name . equals ( getName ( ) ) ) { return de.azapps.mirakel.model.account.Account ; } } return null ; } 
public static boolean boolean ( ) { return new MirakelQueryBuilder ( context ) . and ( ENABLED , Operation . EQ , true ) . and ( TYPE , Operation . EQ , de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . int ( ) ) . count ( de.azapps.mirakel.model.account.Uri ) > NUMBER ; } 
public static boolean boolean ( ) { return long ( ) > NUMBER ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.account.Parcel , final int int ) { de.azapps.mirakel.model.account.Parcel . writeInt ( this . type . toInt ( ) ) ; de.azapps.mirakel.model.account.Parcel . writeByte ( enabled ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.account.Parcel . writeString ( this . syncKey . orNull ( ) ) ; de.azapps.mirakel.model.account.Parcel . writeLong ( getId ( ) ) ; de.azapps.mirakel.model.account.Parcel . writeString ( getName ( ) ) ; } 
private void ( Parcel de.azapps.mirakel.model.account.Parcel ) { super(); this . type = de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES . de.azapps.mirakel.model.account.AccountMirakel.ACCOUNT_TYPES ( de.azapps.mirakel.model.account.Parcel . readInt ( ) ) ; this . enabled = de.azapps.mirakel.model.account.Parcel . readByte ( ) != NUMBER ; this . syncKey = fromNullable ( de.azapps.mirakel.model.account.Parcel . readString ( ) ) ; setId ( de.azapps.mirakel.model.account.Parcel . readLong ( ) ) ; setName ( de.azapps.mirakel.model.account.Parcel . readString ( ) ) ; } 
public de.azapps.mirakel.model.account.AccountMirakel de.azapps.mirakel.model.account.AccountMirakel ( final Parcel de.azapps.mirakel.model.account.Parcel ) { return new de.azapps.mirakel.model.account.AccountMirakel ( de.azapps.mirakel.model.account.Parcel ) ; } 
public de.azapps.mirakel.model.account.AccountMirakel [] de.azapps.mirakel.model.account.AccountMirakel[] ( final int int ) { return new de.azapps.mirakel.model.account.AccountMirakel [ int ] ; } 
public void ( ) { super(); } 
public void ( java.lang.String java.lang.String ) { super( java.lang.String ); } 
public void ( long long ) { super( long ); } 
public void ( long long , long long ) { super( STRING + long + STRING + long ); this . long = long ; this . long = long ; } 
public long long ( ) { return long ; } 
public long long ( ) { return long ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + ACCOUNT_TYPES . LOCAL . toInt ( ) + ')' ) ; } 
protected static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; } 
protected static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; } 
private void ( final Context de.azapps.mirakel.model.Context , final java.lang.String java.lang.String ) { super( de.azapps.mirakel.model.Context , java.lang.String , null , int ); this . de.azapps.mirakel.model.Context = de.azapps.mirakel.model.Context ; } 
public static de.azapps.mirakel.model.DatabaseHelper de.azapps.mirakel.model.DatabaseHelper ( final Context de.azapps.mirakel.model.Context ) { if ( de.azapps.mirakel.model.DatabaseHelper == null ) { de.azapps.mirakel.model.DatabaseHelper = new de.azapps.mirakel.model.DatabaseHelper ( de.azapps.mirakel.model.Context , java.lang.String ( de.azapps.mirakel.model.Context ) ) ; } return de.azapps.mirakel.model.DatabaseHelper ; } 
@ VisibleForTesting public static void void ( ) { synchronized ( de.azapps.mirakel.model.DatabaseHelper ) { if ( de.azapps.mirakel.model.DatabaseHelper != null ) { java.lang.String java.lang.String = de.azapps.mirakel.model.DatabaseHelper . getWritableDatabase ( ) . getPath ( ) ; de.azapps.mirakel.model.DatabaseHelper . close ( ) ; new java.io.File ( java.lang.String ) . boolean ( ) ; } de.azapps.mirakel.model.DatabaseHelper = null ; } } 
public static java.lang.String java.lang.String ( final Context de.azapps.mirakel.model.Context ) { MirakelPreferences . init ( de.azapps.mirakel.model.Context ) ; return MirakelModelPreferences . getDBName ( ) ; } 
private void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + ListMirakel . SORT_BY . OPT . getShort ( ) + STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + ',' + STRING + ',' + STRING + ',' + STRING + '\'' + this . de.azapps.mirakel.model.Context . getString ( R . string . list_all ) + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + ',' + STRING + ',' + STRING + ',' + STRING + ',' + STRING + '\'' + this . de.azapps.mirakel.model.Context . getString ( R . string . list_today ) + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + ',' + STRING + ',' + STRING + ',' + STRING + ',' + STRING + '\'' + this . de.azapps.mirakel.model.Context . getString ( R . string . list_week ) + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + ',' + STRING + ',' + STRING + ',' + STRING + '\'' + this . de.azapps.mirakel.model.Context . getString ( R . string . list_overdue ) + STRING + STRING + STRING + STRING ) ; } 
private void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . daily ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . second_day ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . weekly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . two_weekly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . monthly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . yearly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . hourly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . minutly ) + STRING ) ; } 
private void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . today ) . toLowerCase ( Helpers . getLocale ( this . de.azapps.mirakel.model.Context ) ) + STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . tomorrow ) . toLowerCase ( Helpers . getLocale ( this . de.azapps.mirakel.model.Context ) ) + STRING ) ; final java.lang.String [] java.lang.String[] = this . de.azapps.mirakel.model.Context . getResources ( ) . getStringArray ( R . array . weekdays ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + ',' + STRING + STRING + int + ')' , new java.lang.String [] { java.lang.String[] [ int ] } ) ; } } 
@ java.lang.Override public void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { DefinitionsHelper . freshInstall = true ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; final java.lang.String java.lang.String = this . de.azapps.mirakel.model.Context . getString ( R . string . local_account ) ; ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , java.lang.String ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , - NUMBER ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , true ) ; final long long = de.azapps.mirakel.model.SQLiteDatabase . insert ( STRING , null , de.azapps.mirakel.model.ContentValues ) ; void ( de.azapps.mirakel.model.SQLiteDatabase , long ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + ',' + STRING + ',' + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . inbox ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + ',' + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . first_task ) + STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; final java.lang.String [] java.lang.String[] = this . de.azapps.mirakel.model.Context . getResources ( ) . getStringArray ( R . array . demo_lists ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + ',' + STRING + ',' + STRING + java.lang.String[] [ int ] + STRING + ( int + NUMBER ) + ',' + ( int + NUMBER ) + ')' ) ; } MirakelInternalContentProvider . init ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase , NUMBER , int ) ; if ( MirakelCommonPreferences . isDemoMode ( ) ) { Semantic . init ( de.azapps.mirakel.model.Context ) ; final java.lang.String [] java.lang.String[] = this . de.azapps.mirakel.model.Context . getResources ( ) . getStringArray ( R . array . demo_tasks ) ; final java.lang.String [] java.lang.String[] = { java.lang.String[] [ NUMBER ] , java.lang.String[] [ NUMBER ] , java.lang.String[] [ NUMBER ] , java.lang.String[] [ NUMBER ] , java.lang.String[] [ NUMBER ] , java.lang.String[] [ NUMBER ] } ; final DateTime [] de.azapps.mirakel.model.DateTime[] = new DateTime [ NUMBER ] ; de.azapps.mirakel.model.DateTime[] [ NUMBER ] = new DateTime ( ) ; de.azapps.mirakel.model.DateTime[] [ NUMBER ] = null ; de.azapps.mirakel.model.DateTime[] [ NUMBER ] = new DateTime ( ) . withDayOfWeek ( DateTimeConstants . MONDAY ) ; de.azapps.mirakel.model.DateTime[] [ NUMBER ] = new DateTime ( ) ; de.azapps.mirakel.model.DateTime[] [ NUMBER ] = null ; de.azapps.mirakel.model.DateTime[] [ NUMBER ] = null ; final int [] int[] = { NUMBER , - NUMBER , NUMBER , NUMBER , NUMBER , NUMBER } ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { final Task de.azapps.mirakel.model.Task = new Task ( java.lang.String[] [ int ] , ListMirakel . findByName ( java.lang.String[] [ int ] ) . get ( ) ) ; de.azapps.mirakel.model.Task . setDue ( fromNullable ( de.azapps.mirakel.model.DateTime[] [ int ] ) ) ; de.azapps.mirakel.model.Task . setPriority ( int[] [ int ] ) ; de.azapps.mirakel.model.Task . setSyncState ( SYNC_STATE . ADD ) ; try { de.azapps.mirakel.model.ContentValues = de.azapps.mirakel.model.Task . getContentValues ( ) ; } catch ( DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { Log . wtf ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; } de.azapps.mirakel.model.ContentValues . remove ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . insert ( STRING , null , de.azapps.mirakel.model.ContentValues ) ; } } MirakelInternalContentProvider . init ( de.azapps.mirakel.model.SQLiteDatabase ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase , final long long ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + long + ')' ) ; } 
@ java.lang.Override public void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase , final int int , final int int ) { Log . e ( java.lang.String , STRING ) ; } 
@ java.lang.SuppressWarnings ( STRING ) @ java.lang.Override public void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase , final int int , final int int ) { Log . e ( de.azapps.mirakel.model.DatabaseHelper .class . java.lang.String ( ) , STRING + int + STRING + int ) ; try { ExportImport . exportDB ( this . de.azapps.mirakel.model.Context ) ; } catch ( final java.lang.RuntimeException java.lang.RuntimeException ) { Log . w ( java.lang.String , STRING , java.lang.RuntimeException ) ; } switch ( int ) { case NUMBER : case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + ';' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + ';' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + ')' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; final java.lang.String java.lang.String = new java.text.SimpleDateFormat ( this . de.azapps.mirakel.model.Context . getString ( R . string . dateTimeFormat ) , java.util.Locale . java.util.Locale ) . java.lang.String ( new java.util.Date ( ) ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + java.lang.String + '\'' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + java.lang.String + '\'' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + java.lang.String + '\'' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + java.lang.String + '\'' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; java.lang.String java.lang.String = STRING + STRING + ',' + STRING + ',' + STRING + ',' + STRING + ',' + STRING + ',' + STRING ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING + java.lang.String + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + '<' + STRING + '.' + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + '=' + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; java.lang.String = STRING + ',' + STRING + ',' + STRING + ',' + STRING + ',' + STRING + ',' + STRING ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING + STRING + java.lang.String + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . today ) . toLowerCase ( Helpers . getLocale ( this . de.azapps.mirakel.model.Context ) ) + STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . tomorrow ) . toLowerCase ( Helpers . getLocale ( this . de.azapps.mirakel.model.Context ) ) + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + '<' + STRING + '.' + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + '=' + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . daily ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . second_day ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . weekly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . two_weekly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . monthly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . yearly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . hourly ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + this . de.azapps.mirakel.model.Context . getString ( R . string . minutly ) + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; int int = - NUMBER ; AccountManager de.azapps.mirakel.model.AccountManager = AccountManager . get ( this . de.azapps.mirakel.model.Context ) ; java.lang.String java.lang.String = this . de.azapps.mirakel.model.Context . getString ( R . string . local_account ) ; if ( de.azapps.mirakel.model.AccountManager . getAccountsByType ( STRING ) . length > NUMBER ) { final Account de.azapps.mirakel.model.Account = de.azapps.mirakel.model.AccountManager . getAccountsByType ( STRING ) [ NUMBER ] ; final java.lang.String java.lang.String = AccountManager . get ( this . de.azapps.mirakel.model.Context ) . getUserData ( de.azapps.mirakel.model.Account , DefinitionsHelper . BUNDLE_SERVER_TYPE ) ; if ( java.lang.String . boolean ( STRING ) ) { int = NUMBER ; java.lang.String = a . name ; } } ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , java.lang.String ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , int ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , true ) ; final long long = de.azapps.mirakel.model.SQLiteDatabase . insert ( STRING , null , de.azapps.mirakel.model.ContentValues ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + long + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; final java.lang.String [] java.lang.String[] = this . de.azapps.mirakel.model.Context . getResources ( ) . getStringArray ( R . array . weekdays ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + ',' + STRING + STRING + int + ')' , new java.lang.String [] { java.lang.String[] [ int ] } ) ; } case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + '=' + STRING ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; java.lang.String java.lang.String = null , java.lang.String = null , java.lang.String = null ; final java.io.File java.io.File = new java.io.File ( FileUtils . getMirakelDir ( ) + STRING ) ; final java.io.File java.io.File = new java.io.File ( FileUtils . getMirakelDir ( ) + STRING ) ; final java.io.File java.io.File = new java.io.File ( FileUtils . getMirakelDir ( ) + STRING ) ; try { java.lang.String = FileUtils . readFile ( java.io.File ) ; java.lang.String = FileUtils . readFile ( java.io.File ) ; java.lang.String = FileUtils . readFile ( java.io.File ) ; java.io.File . boolean ( ) ; java.io.File . boolean ( ) ; java.io.File . boolean ( ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . wtf ( java.lang.String , STRING , java.io.IOException ) ; } final AccountManager de.azapps.mirakel.model.AccountManager = AccountManager . get ( this . de.azapps.mirakel.model.Context ) ; java.util.List<de.azapps.mirakel.model.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.AccountMirakel> = new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , AccountMirakel . allColumns , null , null , null , null , null ) ) . doWithCursor ( new Cursor2List <> ( AccountMirakel .class ) ) ; for ( final AccountMirakel de.azapps.mirakel.model.AccountMirakel : java.util.List<de.azapps.mirakel.model.AccountMirakel> ) { if ( de.azapps.mirakel.model.AccountMirakel . getType ( ) == ACCOUNT_TYPES . TASKWARRIOR ) { final Account de.azapps.mirakel.model.Account = de.azapps.mirakel.model.AccountMirakel . getAndroidAccount ( this . de.azapps.mirakel.model.Context ) ; if ( de.azapps.mirakel.model.Account == null ) { de.azapps.mirakel.model.SQLiteDatabase . delete ( STRING , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.model.AccountMirakel . getId ( ) ) } ) ; continue; } de.azapps.mirakel.model.AccountMirakel . setSyncKey ( fromNullable ( de.azapps.mirakel.model.AccountManager . getPassword ( de.azapps.mirakel.model.Account ) ) ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.AccountMirakel . getContentValues ( ) , STRING + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.model.AccountMirakel . getId ( ) ) } ) ; if ( ( java.lang.String != null ) && ( java.lang.String != null ) && ( java.lang.String != null ) ) { de.azapps.mirakel.model.AccountManager . setUserData ( de.azapps.mirakel.model.Account , DefinitionsHelper . BUNDLE_CERT , java.lang.String ) ; de.azapps.mirakel.model.AccountManager . setUserData ( de.azapps.mirakel.model.Account , DefinitionsHelper . BUNDLE_CERT_CLIENT , java.lang.String ) ; de.azapps.mirakel.model.AccountManager . setUserData ( de.azapps.mirakel.model.Account , DefinitionsHelper . BUNDLE_KEY_CLIENT , java.lang.String ) ; } } } case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING ) ; case NUMBER : new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , new java.lang.String [] { STRING , STRING } , null , null , null , null , null ) ) . doWithCursor ( new de.azapps.mirakel.model.DatabaseHelper.SpecialListsConverter ( de.azapps.mirakel.model.SQLiteDatabase ) ) ; case NUMBER : de.azapps.mirakel.model.AccountManager = AccountManager . get ( this . de.azapps.mirakel.model.Context ) ; for ( final Account de.azapps.mirakel.model.Account : de.azapps.mirakel.model.AccountManager . getAccountsByType ( STRING ) ) { java.lang.String = de.azapps.mirakel.model.AccountManager . getUserData ( de.azapps.mirakel.model.Account , DefinitionsHelper . BUNDLE_KEY_CLIENT ) ; if ( ( java.lang.String != null ) && ! java.lang.String . java.lang.String ( ) . boolean ( ) ) { de.azapps.mirakel.model.AccountManager . setPassword ( de.azapps.mirakel.model.Account , java.lang.String + STRING + de.azapps.mirakel.model.AccountManager . getPassword ( de.azapps.mirakel.model.Account ) ) ; } } case NUMBER : new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , new java.lang.String [] { STRING , STRING } , null , null , null , null , null ) ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { if ( de.azapps.mirakel.model.CursorGetter . getCount ( ) > NUMBER ) { de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ; do { final java.io.File java.io.File = new java.io.File ( de.azapps.mirakel.model.CursorGetter . getString ( STRING ) ) ; java.lang.String [] java.lang.String[] = new java.lang.String [] { de.azapps.mirakel.model.CursorGetter . getString ( STRING ) } ; if ( java.io.File . boolean ( ) ) { final ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , Uri . fromFile ( java.io.File ) . toString ( ) ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.ContentValues , STRING , java.lang.String[] ) ; } else { de.azapps.mirakel.model.SQLiteDatabase . delete ( STRING , STRING , java.lang.String[] ) ; } } while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ); } } } ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , new java.lang.String [] { STRING , STRING } , STRING , null , null , null , null ) ) . doWithCursor ( new de.azapps.mirakel.model.DatabaseHelper.ConvertTags ( de.azapps.mirakel.model.SQLiteDatabase ) ) ; if ( ! DefinitionsHelper . freshInstall ) { final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = MirakelCommonPreferences . loadIntArray ( STRING ) ; java.util.List<java.lang.Integer> . boolean ( NUMBER ) ; MirakelCommonPreferences . saveIntArray ( STRING , java.util.List<java.lang.Integer> ) ; } case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; final java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> < Task , java.util.List<de.azapps.mirakel.model.Task> < Task > > java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> = new java.util.HashMap<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> <> ( ) ; new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , Task . allColumns , STRING , new java.lang.String [] { STRING } , null , null , null ) ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.CursorGetter ) { for ( de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ; de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ;) { final Task de.azapps.mirakel.model.Task = new Task ( de.azapps.mirakel.model.CursorGetter ) ; final java.lang.String java.lang.String = de.azapps.mirakel.model.Task . getAdditionalString ( STRING ) ; if ( java.lang.String == null ) { continue; } if ( de.azapps.mirakel.model.Task . existAdditional ( STRING ) ) { final Optional < Task > de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Task> = Task . getByUUID ( de.azapps.mirakel.model.Task . getAdditionalString ( STRING ) ) ; if ( de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Task> . isPresent ( ) ) { final Task de.azapps.mirakel.model.Task = de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Task> . get ( ) ; final java.util.List<de.azapps.mirakel.model.Task> < Task > java.util.List<de.azapps.mirakel.model.Task> ; if ( java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . containsKey ( de.azapps.mirakel.model.Task ) ) { java.util.List<de.azapps.mirakel.model.Task> = java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . get ( de.azapps.mirakel.model.Task ) ; } else { java.util.List<de.azapps.mirakel.model.Task> = new java.util.ArrayList <> ( NUMBER ) ; } java.util.List<de.azapps.mirakel.model.Task> . add ( de.azapps.mirakel.model.Task ) ; java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . put ( de.azapps.mirakel.model.Task , java.util.List<de.azapps.mirakel.model.Task> ) ; } } else if ( ! java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . containsKey ( de.azapps.mirakel.model.Task ) ) { java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . put ( de.azapps.mirakel.model.Task , new java.util.ArrayList<de.azapps.mirakel.model.Task> < Task > ( NUMBER ) ) ; } de.azapps.mirakel.model.Task . setRecurrence ( of ( CompatibilityHelper . parseTaskWarriorRecurrence ( java.lang.String ) ) ) ; de.azapps.mirakel.model.Task . save ( ) ; } } } ) ; final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; boolean boolean = true ; for ( final java.util.Map.Entry<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> < Task , java.util.List<de.azapps.mirakel.model.Task> < Task > > java.util.Map.Entry<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> : java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . entrySet ( ) ) { if ( java.util.Map.Entry<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . getValue ( ) . isEmpty ( ) ) { continue; } Task de.azapps.mirakel.model.Task = java.util.Map.Entry<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . getValue ( ) . get ( NUMBER ) ; for ( final Task de.azapps.mirakel.model.Task : java.util.Map.Entry<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . getValue ( ) ) { de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , java.util.Map.Entry<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . getKey ( ) . getId ( ) ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , de.azapps.mirakel.model.Task . getId ( ) ) ; final int int = de.azapps.mirakel.model.Task . getAdditionalInt ( STRING ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , int ) ; final Optional < Recurring > de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Recurring> = de.azapps.mirakel.model.Task . getRecurrence ( ) ; if ( de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Recurring> . isPresent ( ) ) { de.azapps.mirakel.model.ContentValues . put ( STRING , int * de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Recurring> . get ( ) . getIntervalMs ( ) ) ; } else { continue; } de.azapps.mirakel.model.SQLiteDatabase . insert ( STRING , null , de.azapps.mirakel.model.ContentValues ) ; final int int = de.azapps.mirakel.model.Task . getAdditionalInt ( STRING ) ; final int int = de.azapps.mirakel.model.Task . getAdditionalInt ( STRING ) ; if ( int < int ) { if ( boolean ) { boolean = false ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( ',' ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( de.azapps.mirakel.model.Task . getId ( ) ) ; de.azapps.mirakel.model.Task = de.azapps.mirakel.model.Task ; } } } if ( ! java.lang.StringBuilder . java.lang.String ( ) . boolean ( ) ) { de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , false ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.ContentValues , STRING , new java.lang.String [] { java.lang.StringBuilder . java.lang.String ( ) } ) ; } case NUMBER : void ( ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; final java.lang.String [] java.lang.String[] = new java.lang.String [] { STRING , STRING , STRING , STRING , STRING } ; new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , java.lang.String[] , null , null , null , null , null ) ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { if ( de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ) { do { int int = NUMBER ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ++ ) ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ++ ) ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ++ ) ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ++ ) ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ) ; final int int = Color . argb ( int , int , int , int ) ; new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , Tag . allColumns , STRING + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( int ) } , null , null , null ) ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { if ( de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ) { final Tag de.azapps.mirakel.model.Tag = new Tag ( de.azapps.mirakel.model.CursorGetter ) ; de.azapps.mirakel.model.Tag . setBackgroundColor ( int ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.Tag . getContentValues ( ) , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.model.Tag . getId ( ) ) } ) ; } } } ) ; } while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ); } } } ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + de.azapps.mirakel.model.Context . getString ( R . string . inbox ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + de.azapps.mirakel.model.Context . getString ( R . string . list_today ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + de.azapps.mirakel.model.Context . getString ( R . string . list_week ) + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + de.azapps.mirakel.model.Context . getString ( R . string . list_overdue ) + STRING ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + de.azapps.mirakel.model.Context . getString ( R . string . list_all ) + STRING ) ; case NUMBER : MirakelPreferences . init ( de.azapps.mirakel.model.Context ) ; SharedPreferences . SharedPreferences SharedPreferences.Editor = MirakelPreferences . getEditor ( ) ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { SharedPreferences.Editor = SharedPreferences.Editor . remove ( STRING + int ) ; } SharedPreferences.Editor . commit ( ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : void ( de.azapps.mirakel.model.SQLiteDatabase ) ; case NUMBER : de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; default: break; } } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { if ( de.azapps.mirakel.model.CursorGetter . getCount ( ) > NUMBER ) { de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ; do { final java.io.File java.io.File = new java.io.File ( de.azapps.mirakel.model.CursorGetter . getString ( STRING ) ) ; java.lang.String [] java.lang.String[] = new java.lang.String [] { de.azapps.mirakel.model.CursorGetter . getString ( STRING ) } ; if ( java.io.File . boolean ( ) ) { final ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , Uri . fromFile ( java.io.File ) . toString ( ) ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.ContentValues , STRING , java.lang.String[] ) ; } else { de.azapps.mirakel.model.SQLiteDatabase . delete ( STRING , STRING , java.lang.String[] ) ; } } while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ); } } 
@ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.CursorGetter ) { for ( de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ; de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ;) { final Task de.azapps.mirakel.model.Task = new Task ( de.azapps.mirakel.model.CursorGetter ) ; final java.lang.String java.lang.String = de.azapps.mirakel.model.Task . getAdditionalString ( STRING ) ; if ( java.lang.String == null ) { continue; } if ( de.azapps.mirakel.model.Task . existAdditional ( STRING ) ) { final Optional < Task > de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Task> = Task . getByUUID ( de.azapps.mirakel.model.Task . getAdditionalString ( STRING ) ) ; if ( de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Task> . isPresent ( ) ) { final Task de.azapps.mirakel.model.Task = de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.Task> . get ( ) ; final java.util.List<de.azapps.mirakel.model.Task> < Task > java.util.List<de.azapps.mirakel.model.Task> ; if ( java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . containsKey ( de.azapps.mirakel.model.Task ) ) { java.util.List<de.azapps.mirakel.model.Task> = java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . get ( de.azapps.mirakel.model.Task ) ; } else { java.util.List<de.azapps.mirakel.model.Task> = new java.util.ArrayList <> ( NUMBER ) ; } java.util.List<de.azapps.mirakel.model.Task> . add ( de.azapps.mirakel.model.Task ) ; java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . put ( de.azapps.mirakel.model.Task , java.util.List<de.azapps.mirakel.model.Task> ) ; } } else if ( ! java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . containsKey ( de.azapps.mirakel.model.Task ) ) { java.util.Map<de.azapps.mirakel.model.Task,java.util.List<de.azapps.mirakel.model.Task>> . put ( de.azapps.mirakel.model.Task , new java.util.ArrayList<de.azapps.mirakel.model.Task> < Task > ( NUMBER ) ) ; } de.azapps.mirakel.model.Task . setRecurrence ( of ( CompatibilityHelper . parseTaskWarriorRecurrence ( java.lang.String ) ) ) ; de.azapps.mirakel.model.Task . save ( ) ; } } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { if ( de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ) { do { int int = NUMBER ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ++ ) ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ++ ) ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ++ ) ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ++ ) ; final int int = de.azapps.mirakel.model.CursorGetter . getInt ( int ) ; final int int = Color . argb ( int , int , int , int ) ; new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , Tag . allColumns , STRING + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( int ) } , null , null , null ) ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { if ( de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ) { final Tag de.azapps.mirakel.model.Tag = new Tag ( de.azapps.mirakel.model.CursorGetter ) ; de.azapps.mirakel.model.Tag . setBackgroundColor ( int ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.Tag . getContentValues ( ) , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.model.Tag . getId ( ) ) } ) ; } } } ) ; } while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ); } } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { if ( de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ) { final Tag de.azapps.mirakel.model.Tag = new Tag ( de.azapps.mirakel.model.CursorGetter ) ; de.azapps.mirakel.model.Tag . setBackgroundColor ( int ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.Tag . getContentValues ( ) , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.model.Tag . getId ( ) ) } ) ; } } 
private void void ( SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + ')' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING ) ; Cursor de.azapps.mirakel.model.Cursor = de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , new java.lang.String [] { STRING , STRING } , null , null , null , null , null ) ; SparseIntArray de.azapps.mirakel.model.SparseIntArray = new SparseIntArray ( ) ; java.util.Map<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> < java.lang.Integer , SpecialListsBaseProperty > java.util.Map<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> = new java.util.HashMap<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> <> ( ) ; if ( de.azapps.mirakel.model.Cursor . moveToFirst ( ) ) { SharedPreferences de.azapps.mirakel.model.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( de.azapps.mirakel.model.Context ) ; long long = java.lang.Integer . int ( de.azapps.mirakel.model.SharedPreferences . getString ( STRING , STRING ) ) ; long long = java.lang.Integer . int ( de.azapps.mirakel.model.SharedPreferences . getString ( STRING , STRING ) ) ; SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.model.SharedPreferences . edit ( ) ; do { java.lang.String java.lang.String = de.azapps.mirakel.model.Cursor . getString ( NUMBER ) ; java.lang.Integer java.lang.Integer = de.azapps.mirakel.model.Cursor . getInt ( NUMBER ) * - NUMBER ; Cursor de.azapps.mirakel.model.Cursor = de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , new java.lang.String [] { STRING } , STRING , new java.lang.String [] { java.lang.String } , null , null , null ) ; java.lang.Integer java.lang.Integer ; if ( de.azapps.mirakel.model.Cursor . moveToFirst ( ) ) { java.lang.Integer = de.azapps.mirakel.model.Cursor . getInt ( NUMBER ) ; de.azapps.mirakel.model.Cursor . close ( ) ; } else { Log . wtf ( java.lang.String , STRING ) ; de.azapps.mirakel.model.Cursor . close ( ) ; continue; } if ( long == java.lang.Integer ) { SharedPreferences.Editor . putString ( STRING , java.lang.String . java.lang.String ( java.lang.Integer ) ) ; } if ( long == java.lang.Integer ) { SharedPreferences.Editor . putString ( STRING , java.lang.String . java.lang.String ( java.lang.Integer ) ) ; } de.azapps.mirakel.model.SparseIntArray . put ( java.lang.Integer , java.lang.Integer ) ; if ( java.lang.String . boolean ( STRING ) ) { final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( java.lang.String , STRING ) ; if ( de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.SpecialListsBaseProperty> . isPresent ( ) ) { java.util.Map<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> . put ( java.lang.Integer , de.azapps.mirakel.model.Optional<de.azapps.mirakel.model.SpecialListsBaseProperty> . get ( ) ) ; } } } while ( de.azapps.mirakel.model.Cursor . moveToNext ( ) ); SharedPreferences.Editor . apply ( ) ; try { java.lang.Class java.lang.Class = java.lang.Class . java.lang.Class<?> ( DefinitionsHelper . MAINWIDGET_CLASS ) ; java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class . java.lang.reflect.Method ( STRING , de.azapps.mirakel.model.SparseIntArray . getClass ( ) ) ; java.lang.reflect.Method . java.lang.Object ( null , de.azapps.mirakel.model.SparseIntArray ) ; } catch ( java.lang.ClassNotFoundException | java.lang.NoSuchMethodException java.lang.ReflectiveOperationException ) { } catch ( java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException ) { } catch ( java.lang.IllegalAccessException java.lang.IllegalAccessException ) { } } de.azapps.mirakel.model.Cursor . close ( ) ; for ( final java.util.Map.Entry<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> < java.lang.Integer , SpecialListsBaseProperty > java.util.Map.Entry<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> : java.util.Map<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> . entrySet ( ) ) { void ( java.util.Map.Entry<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> . getValue ( ) , de.azapps.mirakel.model.SparseIntArray ) ; final ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , java.util.Map.Entry<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> . getValue ( ) . serialize ( ) ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( java.util.Map.Entry<java.lang.Integer,de.azapps.mirakel.model.SpecialListsBaseProperty> . getKey ( ) ) } ) ; } de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; } 
private void void ( final SpecialListsBaseProperty de.azapps.mirakel.model.SpecialListsBaseProperty , final SparseIntArray de.azapps.mirakel.model.SparseIntArray ) { if ( de.azapps.mirakel.model.SpecialListsBaseProperty instanceof SpecialListsListProperty ) { ( ( SpecialListsListProperty ) de.azapps.mirakel.model.SpecialListsBaseProperty ) . setContent ( new java.util.ArrayList <> ( Collections2 . transform ( ( ( SpecialListsListProperty ) de.azapps.mirakel.model.SpecialListsBaseProperty ) . getContent ( ) , new Function < java.lang.Integer , java.lang.Integer > ( ) { @ java.lang.Override public java.lang.Integer java.lang.Integer ( final java.lang.Integer java.lang.Integer ) { return de.azapps.mirakel.model.SparseIntArray . get ( java.lang.Integer , java.lang.Integer ) ; } } ) ) ) ; } else if ( de.azapps.mirakel.model.SpecialListsBaseProperty instanceof SpecialListsConjunctionList ) { for ( final SpecialListsBaseProperty de.azapps.mirakel.model.SpecialListsBaseProperty : ( ( SpecialListsConjunctionList ) de.azapps.mirakel.model.SpecialListsBaseProperty ) . getChilds ( ) ) { void ( de.azapps.mirakel.model.SpecialListsBaseProperty , de.azapps.mirakel.model.SparseIntArray ) ; } } } 
@ java.lang.Override public java.lang.Integer java.lang.Integer ( final java.lang.Integer java.lang.Integer ) { return de.azapps.mirakel.model.SparseIntArray . get ( java.lang.Integer , java.lang.Integer ) ; } 
private void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . rawQuery ( STRING + STRING + STRING , null ) ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { int int = NUMBER ; while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ) { final long long = de.azapps.mirakel.model.CursorGetter . getLong ( STRING ) ; final boolean boolean = de.azapps.mirakel.model.CursorGetter . getInt ( STRING ) == NUMBER ; final java.lang.String java.lang.String ; if ( boolean ) { java.lang.String = STRING ; } else { java.lang.String = STRING ; } final ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( NUMBER ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , int ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , int + NUMBER ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( java.lang.String , de.azapps.mirakel.model.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) ; int += NUMBER ; } } } ) ; } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { int int = NUMBER ; while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ) { final long long = de.azapps.mirakel.model.CursorGetter . getLong ( STRING ) ; final boolean boolean = de.azapps.mirakel.model.CursorGetter . getInt ( STRING ) == NUMBER ; final java.lang.String java.lang.String ; if ( boolean ) { java.lang.String = STRING ; } else { java.lang.String = STRING ; } final ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( NUMBER ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , int ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , int + NUMBER ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( java.lang.String , de.azapps.mirakel.model.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) ; int += NUMBER ; } } 
private void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , new java.lang.String [] { STRING , STRING } , null , null , null , null , null ) ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.model.CursorGetter . getString ( STRING ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; int int = NUMBER ; boolean boolean = false ; boolean boolean = false ; boolean boolean = false ; for ( int int = NUMBER ; int < java.lang.String . int ( ) ; int ++ ) { char char = java.lang.String . char ( int ) ; switch ( char ) { case '"' : boolean = false ; boolean = ! boolean ; java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; break; case '{' : if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; } if ( ! boolean ) { if ( ! boolean ) { int ++ ; } boolean = true ; } break; case '}' : boolean = false ; if ( int > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; if ( ! boolean ) { int -- ; } } break; case ',' : boolean = false ; if ( DefinitionsHelper . freshInstall && ( int == NUMBER ) ) { boolean = true ; java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; break; } else if ( ! DefinitionsHelper . freshInstall && ( int == NUMBER ) ) { boolean = true ; java.lang.StringBuilder . java.lang.StringBuilder ( '}' ) . java.lang.StringBuilder ( char ) . java.lang.StringBuilder ( '{' ) ; break; } default: boolean = false ; java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; } } final ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; if ( boolean ) { java.lang.StringBuilder = new java.lang.StringBuilder ( STRING + java.lang.StringBuilder + ']' ) ; } de.azapps.mirakel.model.ContentValues . put ( STRING , java.lang.StringBuilder . java.lang.String ( ) ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.ContentValues , STRING , new java.lang.String [] { de.azapps.mirakel.model.CursorGetter . getString ( STRING ) } ) ; } } } ) ; } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.model.CursorGetter . getString ( STRING ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; int int = NUMBER ; boolean boolean = false ; boolean boolean = false ; boolean boolean = false ; for ( int int = NUMBER ; int < java.lang.String . int ( ) ; int ++ ) { char char = java.lang.String . char ( int ) ; switch ( char ) { case '"' : boolean = false ; boolean = ! boolean ; java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; break; case '{' : if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; } if ( ! boolean ) { if ( ! boolean ) { int ++ ; } boolean = true ; } break; case '}' : boolean = false ; if ( int > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; if ( ! boolean ) { int -- ; } } break; case ',' : boolean = false ; if ( DefinitionsHelper . freshInstall && ( int == NUMBER ) ) { boolean = true ; java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; break; } else if ( ! DefinitionsHelper . freshInstall && ( int == NUMBER ) ) { boolean = true ; java.lang.StringBuilder . java.lang.StringBuilder ( '}' ) . java.lang.StringBuilder ( char ) . java.lang.StringBuilder ( '{' ) ; break; } default: boolean = false ; java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; } } final ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; if ( boolean ) { java.lang.StringBuilder = new java.lang.StringBuilder ( STRING + java.lang.StringBuilder + ']' ) ; } de.azapps.mirakel.model.ContentValues . put ( STRING , java.lang.StringBuilder . java.lang.String ( ) ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.ContentValues , STRING , new java.lang.String [] { de.azapps.mirakel.model.CursorGetter . getString ( STRING ) } ) ; } } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + NUMBER + STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING ) ; } 
private void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + ')' ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; } 
private void void ( ) { final SharedPreferences de.azapps.mirakel.model.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( de.azapps.mirakel.model.Context ) ; void ( de.azapps.mirakel.model.SharedPreferences , STRING ) ; void ( de.azapps.mirakel.model.SharedPreferences , STRING ) ; } 
private void void ( final SharedPreferences de.azapps.mirakel.model.SharedPreferences , final java.lang.String java.lang.String ) { try { final int int = de.azapps.mirakel.model.SharedPreferences . getInt ( java.lang.String , - NUMBER ) ; if ( int != - NUMBER ) { final SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.model.SharedPreferences . edit ( ) ; SharedPreferences.Editor . putLong ( java.lang.String , ( long ) int ) ; SharedPreferences.Editor . commit ( ) ; } } catch ( final java.lang.ClassCastException java.lang.ClassCastException ) { Log . i ( java.lang.String , STRING , java.lang.ClassCastException ) ; } } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execde.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execde.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execde.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + '(' + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + ')' ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING ) ; } 
private static void void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; void ( de.azapps.mirakel.model.SQLiteDatabase ) ; final int int = DateTimeHelper . getTimeZoneOffset ( false , new java.util.GregorianCalendar ( ) ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + int + STRING + java.lang.String ( STRING , int ) + STRING + java.lang.String ( STRING , int ) + STRING + java.lang.String ( STRING , int ) + STRING + STRING ) ; de.azapps.mirakel.model.SQLiteDatabase . execSQL ( STRING ) ; } 
private static java.lang.String java.lang.String ( final java.lang.String java.lang.String , final int int ) { java.lang.String java.lang.String = STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + int + STRING ; if ( java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ) { java.lang.String = STRING + java.lang.String + STRING + java.lang.String + STRING ; } return java.lang.String ; } 
public void ( SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { this . de.azapps.mirakel.model.SQLiteDatabase = de.azapps.mirakel.model.SQLiteDatabase ; } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.CursorGetter ) { for ( de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ; ! de.azapps.mirakel.model.CursorGetter . isAfterLast ( ) ; de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ) { final int int = de.azapps.mirakel.model.CursorGetter . getInt ( STRING ) ; final ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; final java.lang.String [] java.lang.String[] = de.azapps.mirakel.model.CursorGetter . getString ( STRING ) . toLowerCase ( ) . split ( STRING ) ; final java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> < java.lang.String , SpecialListsBaseProperty > java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> = new java.util.HashMap<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> <> ( java.lang.String[] . int ) ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { try { if ( java.lang.String . boolean ( STRING ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> . put ( STRING , CompatibilityHelper . getSetProperty ( java.lang.String , SpecialListsListProperty .class , STRING ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> . put ( STRING , CompatibilityHelper . getStringProperty ( java.lang.String , SpecialListsNameProperty .class , STRING ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> . put ( STRING , CompatibilityHelper . getSetProperty ( java.lang.String , SpecialListsPriorityProperty .class , STRING ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> . put ( STRING , CompatibilityHelper . getDoneProperty ( java.lang.String ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> . put ( STRING , CompatibilityHelper . getDueProperty ( java.lang.String ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> . put ( STRING , CompatibilityHelper . getStringProperty ( java.lang.String , SpecialListsContentProperty .class , STRING ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> . put ( STRING , CompatibilityHelper . getReminderProperty ( java.lang.String ) ) ; } } catch ( final javax.xml.transform.TransformerException javax.xml.transform.TransformerException ) { Log . w ( java.lang.String , STRING , javax.xml.transform.TransformerException ) ; } } de.azapps.mirakel.model.ContentValues . put ( STRING , CompatibilityHelper . serializeWhereSpecialLists ( java.util.Map<java.lang.String,de.azapps.mirakel.model.SpecialListsBaseProperty> ) ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( int ) } ) ; } } 
public void ( final SQLiteDatabase de.azapps.mirakel.model.SQLiteDatabase ) { this . de.azapps.mirakel.model.SQLiteDatabase = de.azapps.mirakel.model.SQLiteDatabase ; } 
@ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.CursorGetter ) { if ( de.azapps.mirakel.model.CursorGetter . getCount ( ) > NUMBER ) { de.azapps.mirakel.model.CursorGetter . moveToFirst ( ) ; do { final int int = de.azapps.mirakel.model.CursorGetter . getInt ( STRING ) ; final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = Task . parseAdditionalEntries ( de.azapps.mirakel.model.CursorGetter . getString ( STRING ) ) ; java.lang.String java.lang.String = java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) . java.lang.String ( ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { final java.lang.Long java.lang.Long = new CursorWrapper ( de.azapps.mirakel.model.SQLiteDatabase . query ( STRING , new java.lang.String [] { STRING } , STRING + STRING , new java.lang.String [] { java.lang.String } , null , null , null ) ) . doWithCursor ( new CursorWrapper . CursorWrapper < java.lang.Long > ( ) { @ Override public Long convert ( @ NonNull CursorGetter getter ) { if ( getter . getCount ( ) > NUMBER ) { getter . moveToFirst ( ) ; return getter . getLong ( STRING ) ; } else { final int color = Tag . getNextColor ( count ++ , context ) ; ContentValues cv = new ContentValues ( ) ; cv . put ( STRING , tag ) ; cv . put ( STRING , Color . red ( color ) ) ; cv . put ( STRING , Color . green ( color ) ) ; cv . put ( STRING , Color . blue ( color ) ) ; cv . put ( STRING , Color . alpha ( color ) ) ; return db . insert ( STRING , null , cv ) ; } } } ) ; ContentValues de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , java.lang.Long ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , int ) ; de.azapps.mirakel.model.SQLiteDatabase . insert ( STRING , null , de.azapps.mirakel.model.ContentValues ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ; de.azapps.mirakel.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.ContentValues . put ( STRING , Task . serializeAdditionalEntries ( java.util.Map<java.lang.String,java.lang.String> ) ) ; de.azapps.mirakel.model.SQLiteDatabase . update ( STRING , de.azapps.mirakel.model.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( int ) } ) ; } } while ( de.azapps.mirakel.model.CursorGetter . moveToNext ( ) ); } } 
@ Override public Long convert ( @ NonNull CursorGetter getter ) { if ( getter . getCount ( ) > NUMBER ) { getter . moveToFirst ( ) ; return getter . getLong ( STRING ) ; } else { final int color = Tag . getNextColor ( count ++ , context ) ; ContentValues cv = new ContentValues ( ) ; cv . put ( STRING , tag ) ; cv . put ( STRING , Color . red ( color ) ) ; cv . put ( STRING , Color . green ( color ) ) ; cv . put ( STRING , Color . blue ( color ) ) ; cv . put ( STRING , Color . alpha ( color ) ) ; return db . insert ( STRING , null , cv ) ; } } 
public void ( final long long , final java.lang.String java.lang.String , final Task de.azapps.mirakel.model.file.Task , @ NonNull final Uri de.azapps.mirakel.model.file.Uri ) throws de.azapps.mirakel.model.file.TaskVanishedException { super( long , java.lang.String ); if ( de.azapps.mirakel.model.file.Task == null ) { throw new TaskVanishedException ( STRING ) ; } this . de.azapps.mirakel.model.file.Task = de.azapps.mirakel.model.file.Task ; this . de.azapps.mirakel.model.file.Uri = de.azapps.mirakel.model.file.Uri ; } 
protected void ( ) { } 
public @ NonNull de.azapps.mirakel.model.file.Task de.azapps.mirakel.model.file.Task ( ) { return this . de.azapps.mirakel.model.file.Task ; } 
public void void ( @ NonNull final Task de.azapps.mirakel.model.file.Task ) { this . de.azapps.mirakel.model.file.Task = de.azapps.mirakel.model.file.Task ; } 
public @ NonNull de.azapps.mirakel.model.file.Uri de.azapps.mirakel.model.file.Uri ( ) { return this . de.azapps.mirakel.model.file.Uri ; } 
public void void ( @ NonNull final Uri de.azapps.mirakel.model.file.Uri ) { this . de.azapps.mirakel.model.file.Uri = de.azapps.mirakel.model.file.Uri ; } 
public java.io.FileInputStream java.io.FileInputStream ( final Context de.azapps.mirakel.model.file.Context )    throws java.io.FileNotFoundException { return FileUtils . getStreamFromUri ( de.azapps.mirakel.model.file.Context , this . de.azapps.mirakel.model.file.Uri ) ; } 
@ NonNull public de.azapps.mirakel.model.file.ContentValues de.azapps.mirakel.model.file.ContentValues ( ) { final ContentValues de.azapps.mirakel.model.file.ContentValues ; try { de.azapps.mirakel.model.file.ContentValues = super. getContentValues ( ) ; } catch ( DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { Log . wtf ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; return new ContentValues ( ) ; } de.azapps.mirakel.model.file.ContentValues . put ( STRING , this . de.azapps.mirakel.model.file.Task . getId ( ) ) ; de.azapps.mirakel.model.file.ContentValues . put ( STRING , this . de.azapps.mirakel.model.file.Uri . toString ( ) ) ; return de.azapps.mirakel.model.file.ContentValues ; } 
@ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = int * int + ( int ) this . getId ( ) ; int = int * int + ( this . getName ( ) . hashCode ( ) ) ; int = int * int + ( this . de.azapps.mirakel.model.file.Task . hashCode ( ) ) ; int = int * int + ( this . de.azapps.mirakel.model.file.Uri . hashCode ( ) ) ; return int ; } 
@ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof de.azapps.mirakel.model.file.FileBase ) ) { return false ; } final de.azapps.mirakel.model.file.FileBase de.azapps.mirakel.model.file.FileBase = ( de.azapps.mirakel.model.file.FileBase ) java.lang.Object ; if ( this . getId ( ) != de.azapps.mirakel.model.file.FileBase . getId ( ) ) { return false ; } if ( ! this . getName ( ) . equals ( de.azapps.mirakel.model.file.FileBase . getName ( ) ) ) { return false ; } if ( ! this . de.azapps.mirakel.model.file.Task . equals ( de.azapps.mirakel.model.file.FileBase . de.azapps.mirakel.model.file.Task ) ) { return false ; } if ( ! this . de.azapps.mirakel.model.file.Uri . equals ( de.azapps.mirakel.model.file.FileBase . de.azapps.mirakel.model.file.Uri ) ) { return false ; } return true ; } 
@ java.lang.Override protected de.azapps.mirakel.model.file.Uri de.azapps.mirakel.model.file.Uri ( ) { return de.azapps.mirakel.model.file.Uri ; } 
public static java.util.List<de.azapps.mirakel.model.file.FileMirakel> < de.azapps.mirakel.model.file.FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> ( ) { return new MirakelQueryBuilder ( context ) . getList ( de.azapps.mirakel.model.file.FileMirakel .class ) ; } 
public void ( final CursorGetter de.azapps.mirakel.model.file.CursorGetter ) { super( de.azapps.mirakel.model.file.CursorGetter . getInt ( ID ) , de.azapps.mirakel.model.file.CursorGetter . getString ( NAME ) , Task . get ( de.azapps.mirakel.model.file.CursorGetter . getLong ( TASK ) ) . orNull ( ) , Uri . parse ( de.azapps.mirakel.model.file.CursorGetter . getString ( PATH ) ) ); } 
private void ( final @ NonNull CursorGetter de.azapps.mirakel.model.file.CursorGetter , final @ NonNull Task de.azapps.mirakel.model.file.Task ) { super( de.azapps.mirakel.model.file.CursorGetter . getInt ( ID ) , de.azapps.mirakel.model.file.CursorGetter . getString ( NAME ) , de.azapps.mirakel.model.file.Task , Uri . parse ( de.azapps.mirakel.model.file.CursorGetter . getString ( PATH ) ) ); } 
public static void void ( final Task de.azapps.mirakel.model.file.Task ) { final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < de.azapps.mirakel.model.file.FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = java.util.List<de.azapps.mirakel.model.file.FileMirakel> ( de.azapps.mirakel.model.file.Task ) ; MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { for ( final de.azapps.mirakel.model.file.FileMirakel de.azapps.mirakel.model.file.FileMirakel : java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) { final java.io.File java.io.File = new java.io.File ( de.azapps.mirakel.model.file.FileMirakel . java.io.File , de.azapps.mirakel.model.file.FileMirakel . getId ( ) + STRING ) ; if ( java.io.File . boolean ( ) ) { java.io.File . boolean ( ) ; } de.azapps.mirakel.model.file.FileMirakel . void ( ) ; } } } ) ; } 
@ java.lang.Override public void void ( ) { for ( final de.azapps.mirakel.model.file.FileMirakel de.azapps.mirakel.model.file.FileMirakel : java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) { final java.io.File java.io.File = new java.io.File ( de.azapps.mirakel.model.file.FileMirakel . java.io.File , de.azapps.mirakel.model.file.FileMirakel . getId ( ) + STRING ) ; if ( java.io.File . boolean ( ) ) { java.io.File . boolean ( ) ; } de.azapps.mirakel.model.file.FileMirakel . void ( ) ; } } 
@ NonNull public static de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> < de.azapps.mirakel.model.file.FileMirakel > de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> ( final long long ) { return new MirakelQueryBuilder ( context ) . get ( de.azapps.mirakel.model.file.FileMirakel .class , long ) ; } 
@ NonNull public static java.util.List<de.azapps.mirakel.model.file.FileMirakel> < de.azapps.mirakel.model.file.FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> ( final Task de.azapps.mirakel.model.file.Task ) { return new MirakelQueryBuilder ( context ) . and ( TASK , Operation . EQ , de.azapps.mirakel.model.file.Task ) . select ( ID , NAME , PATH ) . query ( de.azapps.mirakel.model.file.Uri ) . doWithCursor ( new Cursor2List <> ( new CursorWrapper . CursorWrapper < de.azapps.mirakel.model.file.FileMirakel > ( ) { @ Override public FileMirakel convert ( @ NonNull final CursorGetter getter ) { return new FileMirakel ( getter , task ) ; } } ) ) ; } 
@ Override public FileMirakel convert ( @ NonNull final CursorGetter getter ) { return new FileMirakel ( getter , task ) ; } 
@ NonNull public static de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> < de.azapps.mirakel.model.file.FileMirakel > de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> ( final Context de.azapps.mirakel.model.file.Context , final Task de.azapps.mirakel.model.file.Task , final Uri de.azapps.mirakel.model.file.Uri ) { if ( de.azapps.mirakel.model.file.Uri == null ) { return absent ( ) ; } final java.lang.String java.lang.String = FileUtils . getNameFromUri ( de.azapps.mirakel.model.file.Context , de.azapps.mirakel.model.file.Uri ) ; final de.azapps.mirakel.model.file.FileMirakel de.azapps.mirakel.model.file.FileMirakel = de.azapps.mirakel.model.file.FileMirakel . de.azapps.mirakel.model.file.FileMirakel ( de.azapps.mirakel.model.file.Task , java.lang.String , de.azapps.mirakel.model.file.Uri ) ; try { final Bitmap de.azapps.mirakel.model.file.Bitmap = ImageUtils . getSquaredImage ( de.azapps.mirakel.model.file.Context , de.azapps.mirakel.model.file.Uri , de.azapps.mirakel.model.file.Context . getResources ( ) . getDimension ( R . dimen . file_preview_size ) ) ; if ( de.azapps.mirakel.model.file.Bitmap != null ) { boolean boolean = true ; if ( ! de.azapps.mirakel.model.file.FileMirakel . java.io.File . boolean ( ) ) { boolean = de.azapps.mirakel.model.file.FileMirakel . java.io.File . boolean ( ) ; } if ( boolean ) { final java.io.File java.io.File = new java.io.File ( de.azapps.mirakel.model.file.FileMirakel . java.io.File , de.azapps.mirakel.model.file.FileMirakel . getId ( ) + STRING ) ; final java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream ( java.io.File ) ; de.azapps.mirakel.model.file.Bitmap . compress ( Bitmap . CompressFormat . PNG , NUMBER , java.io.FileOutputStream ) ; java.io.FileOutputStream . void ( ) ; } } } catch ( final java.io.IOException java.io.IOException ) { Log . wtf ( java.lang.String , STRING , java.io.IOException ) ; } return of ( de.azapps.mirakel.model.file.FileMirakel ) ; } 
@ NonNull public static de.azapps.mirakel.model.file.FileMirakel de.azapps.mirakel.model.file.FileMirakel ( final Task de.azapps.mirakel.model.file.Task , final java.lang.String java.lang.String , final Uri de.azapps.mirakel.model.file.Uri ) { final de.azapps.mirakel.model.file.FileMirakel de.azapps.mirakel.model.file.FileMirakel = new de.azapps.mirakel.model.file.FileMirakel ( NUMBER , java.lang.String , de.azapps.mirakel.model.file.Task , de.azapps.mirakel.model.file.Uri ) ; return de.azapps.mirakel.model.file.FileMirakel . de.azapps.mirakel.model.file.FileMirakel ( ) ; } 
void ( final long long , final java.lang.String java.lang.String , final Task de.azapps.mirakel.model.file.Task , final Uri de.azapps.mirakel.model.file.Uri ) { super( long , java.lang.String , de.azapps.mirakel.model.file.Task , de.azapps.mirakel.model.file.Uri ); } 
@ NonNull public de.azapps.mirakel.model.file.FileMirakel de.azapps.mirakel.model.file.FileMirakel ( ) { final ContentValues de.azapps.mirakel.model.file.ContentValues = getContentValues ( ) ; de.azapps.mirakel.model.file.ContentValues . remove ( STRING ) ; final long long = insert ( de.azapps.mirakel.model.file.Uri , de.azapps.mirakel.model.file.ContentValues ) ; return de.azapps.mirakel.model.file.FileMirakel . de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> ( long ) . get ( ) ; } 
@ java.lang.Override public void void ( ) { super. destroy ( ) ; new java.io.File ( java.io.File , getId ( ) + STRING ) . boolean ( ) ; } 
@ NonNull public de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.Bitmap> < Bitmap > de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.Bitmap> ( @ NonNull final Context de.azapps.mirakel.model.file.Context ) { final java.io.File java.io.File = new java.io.File ( java.io.File , getId ( ) + STRING ) ; if ( java.io.File . boolean ( ) ) { return fromNullable ( BitmapFactory . decodeFile ( java.io.File . java.lang.String ( ) ) ) ; } else { return absent ( ) ; } } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.file.Parcel , final int int ) { de.azapps.mirakel.model.file.Parcel . writeParcelable ( this . task , NUMBER ) ; de.azapps.mirakel.model.file.Parcel . writeParcelable ( this . fileUri , NUMBER ) ; de.azapps.mirakel.model.file.Parcel . writeLong ( this . getId ( ) ) ; de.azapps.mirakel.model.file.Parcel . writeString ( this . getName ( ) ) ; } 
private void ( final Parcel de.azapps.mirakel.model.file.Parcel ) { super(); this . task = de.azapps.mirakel.model.file.Parcel . readParcelable ( Task .class . java.lang.ClassLoader ( ) ) ; this . fileUri = de.azapps.mirakel.model.file.Parcel . readParcelable ( Uri .class . java.lang.ClassLoader ( ) ) ; this . setId ( de.azapps.mirakel.model.file.Parcel . readLong ( ) ) ; this . setName ( de.azapps.mirakel.model.file.Parcel . readString ( ) ) ; } 
public FileMirakel createFromParcel ( final Parcel source ) { return new FileMirakel ( source ) ; } 
public FileMirakel [] newArray ( final int size ) { return new FileMirakel [ size ] ; } 
public java.lang.String java.lang.String ( ) 
public void void ( ) 
public void void ( ) 
protected void ( ) {} 
public void ( final Cursor de.azapps.mirakel.model.generic.Cursor ) {} 
protected void ( final long long , java.lang.String java.lang.String ) { long = long ; if ( java.lang.String == null ) { java.lang.String = STRING ; } void ( java.lang.String ) ; } 
public static void void ( final Context de.azapps.mirakel.model.generic.Context ) { if ( de.azapps.mirakel.model.generic.Context == null ) { return; } de.azapps.mirakel.model.generic.Context = de.azapps.mirakel.model.generic.Context ; } 
public long long ( ) { return this . long ; } 
@ java.lang.Override @ NonNull public java.lang.String java.lang.String ( ) { return this . java.lang.String ; } 
protected void void ( final long long ) { this . long = long ; } 
public void void ( final java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; } 
@ NonNull public de.azapps.mirakel.model.generic.ContentValues de.azapps.mirakel.model.generic.ContentValues ( ) DefinitionsHelper . DefinitionsHelper.NoSuchListException { final ContentValues de.azapps.mirakel.model.generic.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.generic.ContentValues . put ( java.lang.String , java.lang.Math . long ( long ) ) ; de.azapps.mirakel.model.generic.ContentValues . put ( java.lang.String , java.lang.String ) ; return de.azapps.mirakel.model.generic.ContentValues ; } 
protected static de.azapps.mirakel.model.generic.Cursor de.azapps.mirakel.model.generic.Cursor ( final Uri de.azapps.mirakel.model.generic.Uri , final java.lang.String [] java.lang.String[] , final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] , final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.generic.Context . getContentResolver ( ) . query ( de.azapps.mirakel.model.generic.Uri , java.lang.String[] , java.lang.String , java.lang.String[] , java.lang.String ) ; } 
protected static int int ( final Uri de.azapps.mirakel.model.generic.Uri , final ContentValues de.azapps.mirakel.model.generic.ContentValues , final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] ) { return de.azapps.mirakel.model.generic.Context . getContentResolver ( ) . update ( de.azapps.mirakel.model.generic.Uri , de.azapps.mirakel.model.generic.ContentValues , java.lang.String , java.lang.String[] ) ; } 
protected static int int ( final Uri de.azapps.mirakel.model.generic.Uri , final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] ) { return de.azapps.mirakel.model.generic.Context . getContentResolver ( ) . delete ( de.azapps.mirakel.model.generic.Uri , java.lang.String , java.lang.String[] ) ; } 
protected static long long ( final Uri de.azapps.mirakel.model.generic.Uri , final ContentValues de.azapps.mirakel.model.generic.ContentValues ) { final Uri de.azapps.mirakel.model.generic.Uri = de.azapps.mirakel.model.generic.Context . getContentResolver ( ) . insert ( de.azapps.mirakel.model.generic.Uri , de.azapps.mirakel.model.generic.ContentValues ) ; try { return ContentUris . parseId ( de.azapps.mirakel.model.generic.Uri ) ; } catch ( final java.lang.NullPointerException java.lang.NullPointerException ) { return - NUMBER ; } } 
protected abstract de.azapps.mirakel.model.generic.Uri de.azapps.mirakel.model.generic.Uri ( ) 
public void void ( ) { int ( de.azapps.mirakel.model.generic.Uri ( ) , java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ( ) ) } ) ; } 
public void void ( ) { try { int ( de.azapps.mirakel.model.generic.Uri ( ) , de.azapps.mirakel.model.generic.ContentValues ( ) , java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ( ) ) } ) ; } catch ( final DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { Log . wtf ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; } } 
@ NonNull public static java.lang.String [] java.lang.String[] ( @ NonNull final java.lang.String [] java.lang.String[] , @ NonNull final java.lang.String java.lang.String ) { return java.lang.String[] ( java.lang.String[] , java.lang.String , java.lang.String[] . int ) ; } 
@ NonNull public static java.lang.String [] java.lang.String[] ( @ NonNull final java.lang.String [] java.lang.String[] , @ NonNull final java.lang.String java.lang.String , final int int ) { final java.lang.String [] java.lang.String[] = new java.lang.String [ ( int > java.lang.String[] . int ) ? int : java.lang.String[] . int ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { java.lang.String[] [ int ] = java.lang.String + '.' + java.lang.String[] [ int ] ; } return java.lang.String[] ; } 
public boolean boolean ( ) { return long ( ) == long ; } 
@ java.lang.SuppressWarnings ( STRING ) public static < T > T T ( final @ NonNull CursorGetter de.azapps.mirakel.model.generic.CursorGetter , final java.lang.Class<T> < T > java.lang.Class<T> ) { final java.lang.Class<T> < T > java.lang.Class<T> ; if ( ListMirakel .class . boolean ( java.lang.Class<T> ) || SpecialList .class . boolean ( java.lang.Class<T> ) ) { if ( de.azapps.mirakel.model.generic.CursorGetter . getBoolean ( ListMirakel . IS_SPECIAL ) ) { java.lang.Class<T> = ( java.lang.Class<T> < T > ) SpecialList .class ; } else { java.lang.Class<T> = ( java.lang.Class<T> < T > ) ListMirakel .class ; } } else { java.lang.Class<T> = java.lang.Class<T> ; } try { final java.lang.reflect.Constructor<T> < T > java.lang.reflect.Constructor<T> = java.lang.Class<T> . java.lang.reflect.Constructor<T> ( de.azapps.mirakel.model.generic.CursorGetter . getClass ( ) ) ; return java.lang.reflect.Constructor<T> . T ( de.azapps.mirakel.model.generic.CursorGetter ) ; } catch ( final java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) { Log . wtf ( java.lang.String , STRING ) ; throw new java.lang.RuntimeException ( java.lang.NoSuchMethodException ) ; } catch ( java.lang.reflect.InvocationTargetException | java.lang.InstantiationException | java.lang.IllegalAccessException java.lang.ReflectiveOperationException ) { Log . wtf ( java.lang.String , STRING ) ; throw new java.lang.RuntimeException ( java.lang.ReflectiveOperationException ) ; } } 
void ( ) { super( NUMBER , STRING ); } 
void ( final long long , @ NonNull final java.lang.String java.lang.String , @ NonNull final SORT_BY de.azapps.mirakel.model.list.SORT_BY , @ NonNull final DateTime de.azapps.mirakel.model.list.DateTime , @ NonNull final DateTime de.azapps.mirakel.model.list.DateTime , @ NonNull final SYNC_STATE de.azapps.mirakel.model.list.SYNC_STATE , final int int , final int int , final int int , @ NonNull final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel , @ NonNull final Optional < Uri > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> , final boolean boolean ) { super( long , java.lang.String ); this . de.azapps.mirakel.model.list.DateTime = de.azapps.mirakel.model.list.DateTime ; this . de.azapps.mirakel.model.list.DateTime = de.azapps.mirakel.model.list.DateTime ; this . void ( de.azapps.mirakel.model.list.SORT_BY ) ; this . void ( de.azapps.mirakel.model.list.SYNC_STATE ) ; this . void ( int ) ; this . void ( int ) ; this . void ( int ) ; this . void ( de.azapps.mirakel.model.list.AccountMirakel ) ; this . void ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ) ; this . boolean = boolean ; } 
protected void ( final long long , @ NonNull final java.lang.String java.lang.String , @ NonNull final SORT_BY de.azapps.mirakel.model.list.SORT_BY , @ NonNull final DateTime de.azapps.mirakel.model.list.DateTime , @ NonNull final DateTime de.azapps.mirakel.model.list.DateTime , @ NonNull final SYNC_STATE de.azapps.mirakel.model.list.SYNC_STATE , final int int , final int int , final int int , final int int , @ NonNull final Optional < Uri > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> , final boolean boolean ) { super( long , java.lang.String ); this . de.azapps.mirakel.model.list.DateTime = de.azapps.mirakel.model.list.DateTime ; this . de.azapps.mirakel.model.list.DateTime = de.azapps.mirakel.model.list.DateTime ; this . void ( de.azapps.mirakel.model.list.SORT_BY ) ; this . void ( de.azapps.mirakel.model.list.SYNC_STATE ) ; this . void ( int ) ; this . void ( int ) ; this . void ( int ) ; this . void ( int ) ; this . void ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ) ; this . boolean = boolean ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) throws ListMirakel . ListMirakel.ListAlreadyExistsException { final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . getByName ( java.lang.String , de.azapps.mirakel.model.list.AccountMirakel ( ) ) ; if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . isPresent ( ) && de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . get ( ) . getId ( ) != getId ( ) ) { throw new ListMirakel . ListMirakel ( STRING + getName ( ) + STRING + de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . get ( ) . getId ( ) ) ; } setName ( java.lang.String ) ; } 
@ NonNull public de.azapps.mirakel.model.list.DateTime de.azapps.mirakel.model.list.DateTime ( ) { return this . de.azapps.mirakel.model.list.DateTime ; } 
protected void void ( @ NonNull final DateTime de.azapps.mirakel.model.list.DateTime ) { this . de.azapps.mirakel.model.list.DateTime = de.azapps.mirakel.model.list.DateTime ; } 
@ NonNull public de.azapps.mirakel.model.list.DateTime de.azapps.mirakel.model.list.DateTime ( ) { return this . de.azapps.mirakel.model.list.DateTime ; } 
protected void void ( @ NonNull final DateTime de.azapps.mirakel.model.list.DateTime ) { this . de.azapps.mirakel.model.list.DateTime = de.azapps.mirakel.model.list.DateTime ; } 
public @ NonNull de.azapps.mirakel.model.list.SORT_BY de.azapps.mirakel.model.list.SORT_BY ( ) { return this . de.azapps.mirakel.model.list.SORT_BY ; } 
public void void ( @ NonNull final SORT_BY de.azapps.mirakel.model.list.SORT_BY ) { this . de.azapps.mirakel.model.list.SORT_BY = de.azapps.mirakel.model.list.SORT_BY ; } 
public int int ( ) { return this . int ; } 
public void void ( final int int ) { this . int = int ; } 
public int int ( ) { return this . int ; } 
public void void ( final int int ) { this . int = int ; } 
public int int ( ) { return this . int ; } 
public void void ( final int int ) { this . int = int ; } 
@ NonNull public de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> < Uri > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ( ) { return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ; } 
@ Nullable protected java.lang.String java.lang.String ( ) { if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> . isPresent ( ) ) { return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> . get ( ) . toString ( ) ; } else { return null ; } } 
public void void ( @ NonNull Optional < Uri > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ) { this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ; } 
@ NonNull public de.azapps.mirakel.model.list.AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ( ) { if ( this . de.azapps.mirakel.model.list.AccountMirakel == null ) { Optional < AccountMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> = AccountMirakel . get ( this . long ) ; if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> . isPresent ( ) ) { this . de.azapps.mirakel.model.list.AccountMirakel = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> . get ( ) ; } else { throw new AccountVanishedException ( long , getId ( ) ) ; } } return this . de.azapps.mirakel.model.list.AccountMirakel ; } 
public void void ( @ NonNull final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) { long = de.azapps.mirakel.model.list.AccountMirakel . getId ( ) ; this . de.azapps.mirakel.model.list.AccountMirakel = de.azapps.mirakel.model.list.AccountMirakel ; } 
protected void void ( final long long ) { this . de.azapps.mirakel.model.list.AccountMirakel = null ; this . long = long ; } 
public boolean boolean ( ) { return boolean ; } 
@ NonNull public de.azapps.mirakel.model.list.ContentValues de.azapps.mirakel.model.list.ContentValues ( ) { final ContentValues de.azapps.mirakel.model.list.ContentValues ; try { de.azapps.mirakel.model.list.ContentValues = super. getContentValues ( ) ; } catch ( DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { Log . wtf ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; return new ContentValues ( ) ; } de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , this . long ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . CREATED_AT , this . de.azapps.mirakel.model.list.DateTime . getMillis ( ) ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . UPDATED_AT , this . de.azapps.mirakel.model.list.DateTime . getMillis ( ) ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.list.SORT_BY . getShort ( ) ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , this . de.azapps.mirakel.model.list.SYNC_STATE . toInt ( ) ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , this . int ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , this . int ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , this . int ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , java.lang.String ( ) ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , boolean ) ; return de.azapps.mirakel.model.list.ContentValues ; } 
@ NonNull public de.azapps.mirakel.model.list.SYNC_STATE de.azapps.mirakel.model.list.SYNC_STATE ( ) { return this . de.azapps.mirakel.model.list.SYNC_STATE ; } 
public void void ( @ NonNull final SYNC_STATE de.azapps.mirakel.model.list.SYNC_STATE ) { this . de.azapps.mirakel.model.list.SYNC_STATE = de.azapps.mirakel.model.list.SYNC_STATE ; } 
@ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = ( int * int ) + ( int ) this . long ; int = ( int * int ) + ( this . de.azapps.mirakel.model.list.AccountMirakel ( ) . hashCode ( ) ) ; int = ( int * int ) + this . int ; int = ( int * int ) + ( this . de.azapps.mirakel.model.list.DateTime . hashCode ( ) ) ; int = ( int * int ) + ( int ) getId ( ) ; int = ( int * int ) + this . int ; int = ( int * int ) + ( getName ( ) . hashCode ( ) ) ; int = ( int * int ) + this . int ; int = ( int * int ) + this . de.azapps.mirakel.model.list.SORT_BY . getShort ( ) ; int = ( int * int ) + ( this . de.azapps.mirakel.model.list.SYNC_STATE . hashCode ( ) ) ; int = ( int * int ) + ( this . de.azapps.mirakel.model.list.DateTime . hashCode ( ) ) ; int = ( int * int ) + ( this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> . hashCode ( ) ) ; int = ( int * int ) + ( this . boolean ? NUMBER : NUMBER ) ; return int ; } 
@ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof de.azapps.mirakel.model.list.ListBase ) ) { return false ; } final de.azapps.mirakel.model.list.ListBase de.azapps.mirakel.model.list.ListBase = ( de.azapps.mirakel.model.list.ListBase ) java.lang.Object ; if ( this . long != de.azapps.mirakel.model.list.ListBase . long ) { return false ; } if ( this . int != de.azapps.mirakel.model.list.ListBase . int ) { return false ; } if ( ! Objects . equal ( this . de.azapps.mirakel.model.list.DateTime , de.azapps.mirakel.model.list.ListBase . de.azapps.mirakel.model.list.DateTime ) ) { return false ; } if ( this . getId ( ) != de.azapps.mirakel.model.list.ListBase . getId ( ) ) { return false ; } if ( this . int != de.azapps.mirakel.model.list.ListBase . int ) { return false ; } if ( ! Objects . equal ( this . getName ( ) , de.azapps.mirakel.model.list.ListBase . getName ( ) ) ) { return false ; } if ( this . int != de.azapps.mirakel.model.list.ListBase . int ) { return false ; } if ( this . de.azapps.mirakel.model.list.SORT_BY != de.azapps.mirakel.model.list.ListBase . de.azapps.mirakel.model.list.SORT_BY ) { return false ; } if ( this . de.azapps.mirakel.model.list.SYNC_STATE != de.azapps.mirakel.model.list.ListBase . de.azapps.mirakel.model.list.SYNC_STATE ) { return false ; } if ( ! Objects . equal ( this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> , de.azapps.mirakel.model.list.ListBase . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ) ) { return false ; } if ( boolean != de.azapps.mirakel.model.list.ListBase . boolean ) { return false ; } return true ; } 
de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) 
java.lang.CharSequence java.lang.CharSequence ( ) 
java.util.List<de.azapps.mirakel.model.list.Task> < Task > java.util.List<de.azapps.mirakel.model.list.Task> ( ) 
long long ( ) 
de.azapps.mirakel.model.list.ListMirakelInterface.ShowDoneCases de.azapps.mirakel.model.list.ListMirakelInterface.ShowDoneCases ( ) 
public void ( java.lang.String java.lang.String ) { super( java.lang.String ); } 
public short short ( ) { switch ( this ) { case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : return NUMBER ; case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : return NUMBER ; case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : return NUMBER ; case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : return NUMBER ; case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : return NUMBER ; default: throw new java.lang.IllegalArgumentException ( STRING + this . java.lang.String ( ) ) ; } } 
public static de.azapps.mirakel.model.list.ListMirakel.SORT_BY de.azapps.mirakel.model.list.ListMirakel.SORT_BY ( final short short ) { switch ( short ) { case NUMBER : return de.azapps.mirakel.model.list.ListMirakel.SORT_BY ; case NUMBER : return de.azapps.mirakel.model.list.ListMirakel.SORT_BY ; case NUMBER : return de.azapps.mirakel.model.list.ListMirakel.SORT_BY ; case NUMBER : return de.azapps.mirakel.model.list.ListMirakel.SORT_BY ; case NUMBER : return de.azapps.mirakel.model.list.ListMirakel.SORT_BY ; default: throw new java.lang.IllegalArgumentException ( STRING + short + STRING ) ; } } 
protected de.azapps.mirakel.model.list.Uri de.azapps.mirakel.model.list.Uri ( ) { return de.azapps.mirakel.model.list.Uri ; } 
@ NonNull public de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ) { return de.azapps.mirakel.model.list.MirakelQueryBuilder ( de.azapps.mirakel.model.list.MirakelQueryBuilder , getSortBy ( ) , isSpecial ( ) ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder , final de.azapps.mirakel.model.list.ListMirakel.SORT_BY de.azapps.mirakel.model.list.ListMirakel.SORT_BY , final boolean boolean ) { final java.lang.String java.lang.String = STRING + Task . DUE + STRING + Task . DUE + STRING ; switch ( de.azapps.mirakel.model.list.ListMirakel.SORT_BY ) { case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( Task . PRIORITY , Sorting . DESC ) ; break; case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( Task . DONE , Sorting . ASC ) ; de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( java.lang.String , Sorting . ASC ) ; de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( Task . PRIORITY , Sorting . DESC ) ; de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( Task . PROGRESS , Sorting . DESC ) ; break; case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( Task . DONE , Sorting . ASC ) ; de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( java.lang.String , Sorting . ASC ) ; break; case de.azapps.mirakel.model.list.ListMirakel.SORT_BY : de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( Task . PRIORITY , Sorting . DESC ) ; de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( java.lang.String , Sorting . ASC ) ; default: de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( Task . ID , Sorting . ASC ) ; } if ( boolean ) { de.azapps.mirakel.model.list.MirakelQueryBuilder . sort ( Task . LIST_ID , Sorting . ASC ) ; } return de.azapps.mirakel.model.list.MirakelQueryBuilder ; } 
@ NonNull public static java.util.List<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> ( ) { return java.util.List<de.azapps.mirakel.model.list.ListMirakel> ( true ) ; } 
@ NonNull public static java.util.List<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> ( final boolean boolean ) { return de.azapps.mirakel.model.list.CursorWrapper ( boolean ) . doWithCursor ( LIST_FROM_CURSOR ) ; } 
@ NonNull public static java.util.List<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> ( final Optional < AccountMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> , final boolean boolean ) { return de.azapps.mirakel.model.list.CursorWrapper ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> , boolean ) . doWithCursor ( LIST_FROM_CURSOR ) ; } 
public static java.util.List<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> ( final @ NonNull CursorWrapper de.azapps.mirakel.model.list.CursorWrapper ) { return de.azapps.mirakel.model.list.CursorWrapper . doWithCursor ( LIST_FROM_CURSOR ) ; } 
@ NonNull private static de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( @ NonNull final Optional < AccountMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . DELETE . toString ( ) ) . sort ( LFT , Sorting . ASC ) ; if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> . isPresent ( ) ) { de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( ACCOUNT_ID , Operation . EQ , de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> . get ( ) ) ; } return de.azapps.mirakel.model.list.MirakelQueryBuilder ; } 
@ NonNull public static de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( @ NonNull final Optional < AccountMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . DELETE . toString ( ) ) ; if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> . isPresent ( ) ) { de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( ACCOUNT_ID , Operation . EQ , de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> . get ( ) ) ; } else { de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( new MirakelQueryBuilder ( context ) . or ( ModelBase . ID , Operation . GE , NUMBER ) . or ( ACCOUNT_ID , Operation . EQ , ( ModelBase ) null ) ) ; } return de.azapps.mirakel.model.list.MirakelQueryBuilder ; } 
@ NonNull public static android . android . android . android . android.support.v4.content.CursorLoader android.support.v4.content.CursorLoader ( @ NonNull final Optional < AccountMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> ) { return de.azapps.mirakel.model.list.MirakelQueryBuilder ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> ) . toSupportCursorLoader ( MirakelInternalContentProvider . LIST_WITH_COUNT_URI ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.CursorWrapper de.azapps.mirakel.model.list.CursorWrapper ( final boolean boolean ) { return de.azapps.mirakel.model.list.CursorWrapper ( Optional .< AccountMirakel > absent ( ) , boolean ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.CursorWrapper de.azapps.mirakel.model.list.CursorWrapper ( @ NonNull final Optional < AccountMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> , final boolean boolean ) { MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder = de.azapps.mirakel.model.list.MirakelQueryBuilder ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.AccountMirakel> ) ; if ( ! boolean ) { de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( IS_SPECIAL , Operation . EQ , false ) ; } else { de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( SpecialList . ACTIVE , Operation . EQ , true ) ; } return de.azapps.mirakel.model.list.MirakelQueryBuilder . query ( de.azapps.mirakel.model.list.Uri ) ; } 
public static long long ( ) { return new MirakelQueryBuilder ( context ) . count ( de.azapps.mirakel.model.list.Uri ) ; } 
public void ( final @ NonNull CursorGetter de.azapps.mirakel.model.list.CursorGetter ) { super( de.azapps.mirakel.model.list.CursorGetter . getLong ( ID ) , de.azapps.mirakel.model.list.CursorGetter . getString ( NAME ) , de.azapps.mirakel.model.list.ListMirakel.SORT_BY . de.azapps.mirakel.model.list.ListMirakel.SORT_BY ( de.azapps.mirakel.model.list.CursorGetter . getShort ( SORT_BY_FIELD ) ) , de.azapps.mirakel.model.list.CursorGetter . getDateTime ( DatabaseHelper . CREATED_AT ) , de.azapps.mirakel.model.list.CursorGetter . getDateTime ( DatabaseHelper . UPDATED_AT ) , SYNC_STATE . valueOf ( de.azapps.mirakel.model.list.CursorGetter . getShort ( DatabaseHelper . SYNC_STATE_FIELD ) ) , de.azapps.mirakel.model.list.CursorGetter . getInt ( LFT ) , de.azapps.mirakel.model.list.CursorGetter . getInt ( RGT ) , de.azapps.mirakel.model.list.CursorGetter . getInt ( COLOR ) , de.azapps.mirakel.model.list.CursorGetter . getInt ( ACCOUNT_ID ) , FileUtils . parsePath ( de.azapps.mirakel.model.list.CursorGetter . getString ( ICON_PATH ) ) , de.azapps.mirakel.model.list.CursorGetter . getBoolean ( IS_SPECIAL ) ); } 
protected void ( final long long , @ NonNull final java.lang.String java.lang.String , @ NonNull final de.azapps.mirakel.model.list.ListMirakel.SORT_BY de.azapps.mirakel.model.list.ListMirakel.SORT_BY , @ NonNull final DateTime de.azapps.mirakel.model.list.DateTime , @ NonNull final DateTime de.azapps.mirakel.model.list.DateTime , @ NonNull final SYNC_STATE de.azapps.mirakel.model.list.SYNC_STATE , final int int , final int int , final int int , @ NonNull final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel , @ NonNull final Optional < Uri > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> , final boolean boolean ) { super( long , java.lang.String , de.azapps.mirakel.model.list.ListMirakel.SORT_BY , de.azapps.mirakel.model.list.DateTime , de.azapps.mirakel.model.list.DateTime , de.azapps.mirakel.model.list.SYNC_STATE , int , int , int , de.azapps.mirakel.model.list.AccountMirakel , de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> , boolean ); } 
@ NonNull public static de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ( java.lang.String , null ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ( final java.lang.String java.lang.String , final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) . and ( NAME , Operation . EQ , java.lang.String ) ; if ( de.azapps.mirakel.model.list.AccountMirakel != null ) { de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( ACCOUNT_ID , Operation . EQ , de.azapps.mirakel.model.list.AccountMirakel ) ; } return de.azapps.mirakel.model.list.MirakelQueryBuilder . get ( de.azapps.mirakel.model.list.ListMirakel .class ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) { final Optional < de.azapps.mirakel.model.list.ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = new MirakelQueryBuilder ( context ) . and ( NAME , Operation . EQ , context . getString ( R . string . inbox ) ) . and ( ACCOUNT_ID , Operation . EQ , de.azapps.mirakel.model.list.AccountMirakel ) . get ( de.azapps.mirakel.model.list.ListMirakel .class ) ; if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . isPresent ( ) ) { return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . get ( ) ; } try { return de.azapps.mirakel.model.list.ListMirakel ( context . getString ( R . string . inbox ) , de.azapps.mirakel.model.list.ListMirakel.SORT_BY . de.azapps.mirakel.model.list.ListMirakel.SORT_BY , de.azapps.mirakel.model.list.AccountMirakel ) ; } catch ( final de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException ) { throw new java.lang.RuntimeException ( STRING , de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException ) ; } } 
@ NonNull public static de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ( final long long ) { return new MirakelQueryBuilder ( context ) . get ( de.azapps.mirakel.model.list.ListMirakel .class , long ) ; } 
public static void void ( @ NonNull final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) { final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( ACCOUNT_ID , de.azapps.mirakel.model.list.AccountMirakel . getId ( ) ) ; update ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues , null , null ) ; } 
public static java.util.List<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> ( final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) { if ( ( de.azapps.mirakel.model.list.AccountMirakel == null ) || ! de.azapps.mirakel.model.list.AccountMirakel . isEnabled ( ) ) { return new java.util.ArrayList<de.azapps.mirakel.model.list.ListMirakel> <> ( NUMBER ) ; } return new MirakelQueryBuilder ( context ) . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . DELETE . toInt ( ) ) . and ( ACCOUNT_ID , Operation . EQ , de.azapps.mirakel.model.list.AccountMirakel ) . getList ( de.azapps.mirakel.model.list.ListMirakel .class ) ; } 
@ NonNull private static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( java.lang.String java.lang.String , final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel , final int int ) { final de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ; try { if ( int > NUMBER ) { java.lang.String += STRING + int ; } de.azapps.mirakel.model.list.ListMirakel = de.azapps.mirakel.model.list.ListMirakel . de.azapps.mirakel.model.list.ListMirakel ( java.lang.String , de.azapps.mirakel.model.list.AccountMirakel ) ; } catch ( final de.azapps.mirakel.model.list.ListMirakel . de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException ) { return de.azapps.mirakel.model.list.ListMirakel ( java.lang.String , de.azapps.mirakel.model.list.AccountMirakel , int + NUMBER ) ; } return de.azapps.mirakel.model.list.ListMirakel ; } 
@ NonNull public static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.list.ListMirakel ( java.lang.String , AccountMirakel . getLocal ( ) , NUMBER ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( final java.lang.String java.lang.String , final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) { return de.azapps.mirakel.model.list.ListMirakel ( java.lang.String , de.azapps.mirakel.model.list.AccountMirakel , NUMBER ) ; } 
@ NonNull private static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( final java.lang.String java.lang.String , final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) throws de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException { return de.azapps.mirakel.model.list.ListMirakel ( java.lang.String , de.azapps.mirakel.model.list.ListMirakel.SORT_BY . de.azapps.mirakel.model.list.ListMirakel.SORT_BY , de.azapps.mirakel.model.list.AccountMirakel ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.list.ListMirakel.SORT_BY de.azapps.mirakel.model.list.ListMirakel.SORT_BY , final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) throws de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException { final DateTime de.azapps.mirakel.model.list.DateTime = new DateTime ( ) ; final de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel = new de.azapps.mirakel.model.list.ListMirakel ( NUMBER , java.lang.String , de.azapps.mirakel.model.list.ListMirakel.SORT_BY , de.azapps.mirakel.model.list.DateTime , de.azapps.mirakel.model.list.DateTime , SYNC_STATE . ADD , NUMBER , NUMBER , NUMBER , de.azapps.mirakel.model.list.AccountMirakel , Optional .< Uri > absent ( ) , false ) ; return de.azapps.mirakel.model.list.ListMirakel . de.azapps.mirakel.model.list.ListMirakel ( ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> < de.azapps.mirakel.model.list.ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ( final java.lang.String java.lang.String , final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel ) { return new MirakelQueryBuilder ( context ) . and ( ListBase . NAME , Operation . EQ , java.lang.String ) . and ( de.azapps.mirakel.model.list.ListMirakel . ACCOUNT_ID , Operation . EQ , de.azapps.mirakel.model.list.AccountMirakel ) . get ( de.azapps.mirakel.model.list.ListMirakel .class ) ; } 
protected de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( ) de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException { final Optional < de.azapps.mirakel.model.list.ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ( getName ( ) , getAccount ( ) ) ; if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . isPresent ( ) ) { throw new de.azapps.mirakel.model.list.ListMirakel.ListAlreadyExistsException ( STRING + de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . get ( ) . getName ( ) + STRING + de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . get ( ) . getId ( ) ) ; } final ContentValues de.azapps.mirakel.model.list.ContentValues = getContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . remove ( ID ) ; de.azapps.mirakel.model.list.ContentValues . remove ( RGT ) ; de.azapps.mirakel.model.list.ContentValues . remove ( LFT ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . CREATED_AT , new java.text.SimpleDateFormat ( context . getString ( R . string . dateTimeFormat ) , java.util.Locale . java.util.Locale ) . java.lang.String ( new java.util.Date ( ) ) ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . UPDATED_AT , new java.text.SimpleDateFormat ( context . getString ( R . string . dateTimeFormat ) , java.util.Locale . java.util.Locale ) . java.lang.String ( new java.util.Date ( ) ) ) ; de.azapps.mirakel.model.list.ContentValues . put ( RGT , NUMBER ) ; de.azapps.mirakel.model.list.ContentValues . put ( LFT , NUMBER ) ; MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { setId ( insert ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues ) ) ; final CursorWrapper de.azapps.mirakel.model.list.CursorWrapper = new MirakelQueryBuilder ( context ) . select ( STRING + RGT + ')' ) . query ( de.azapps.mirakel.model.list.Uri ) ; de.azapps.mirakel.model.list.CursorWrapper . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.list.CursorGetter ) { de.azapps.mirakel.model.list.CursorGetter . moveToFirst ( ) ; final int int = de.azapps.mirakel.model.list.CursorGetter . getInt ( NUMBER ) ; final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( LFT , int + NUMBER ) ; de.azapps.mirakel.model.list.ContentValues . put ( RGT , int + NUMBER ) ; update ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues , ModelBase . ID + '=' + getId ( ) , null ) ; } } ) ; } } ) ; return de.azapps.mirakel.model.list.ListMirakel . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ( getId ( ) ) . get ( ) ; } 
@ java.lang.Override public void void ( ) { setId ( insert ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues ) ) ; final CursorWrapper de.azapps.mirakel.model.list.CursorWrapper = new MirakelQueryBuilder ( context ) . select ( STRING + RGT + ')' ) . query ( de.azapps.mirakel.model.list.Uri ) ; de.azapps.mirakel.model.list.CursorWrapper . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.list.CursorGetter ) { de.azapps.mirakel.model.list.CursorGetter . moveToFirst ( ) ; final int int = de.azapps.mirakel.model.list.CursorGetter . getInt ( NUMBER ) ; final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( LFT , int + NUMBER ) ; de.azapps.mirakel.model.list.ContentValues . put ( RGT , int + NUMBER ) ; update ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues , ModelBase . ID + '=' + getId ( ) , null ) ; } } ) ; } 
@ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.list.CursorGetter ) { de.azapps.mirakel.model.list.CursorGetter . moveToFirst ( ) ; final int int = de.azapps.mirakel.model.list.CursorGetter . getInt ( NUMBER ) ; final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( LFT , int + NUMBER ) ; de.azapps.mirakel.model.list.ContentValues . put ( RGT , int + NUMBER ) ; update ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues , ModelBase . ID + '=' + getId ( ) , null ) ; } 
@ NonNull public static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( ) { final Optional < de.azapps.mirakel.model.list.ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = new MirakelQueryBuilder ( context ) . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . DELETE . toInt ( ) ) . sort ( LFT , Sorting . ASC ) . get ( de.azapps.mirakel.model.list.ListMirakel .class ) ; if ( ! de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . isPresent ( ) ) { return de.azapps.mirakel.model.list.ListMirakel ( MirakelModelPreferences . getDefaultAccount ( ) ) ; } else { return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . get ( ) ; } } 
@ NonNull public static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( final int int ) { final Optional < de.azapps.mirakel.model.list.ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ( int ) ; if ( ! de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . isPresent ( ) ) { return de.azapps.mirakel.model.list.ListMirakel ( ) ; } else { return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . get ( ) ; } } 
public static de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( ) { final de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel = new de.azapps.mirakel.model.list.ListMirakel ( ModelBase . INVALID_ID , context . getString ( R . string . stub_list_name ) , de.azapps.mirakel.model.list.ListMirakel.SORT_BY . de.azapps.mirakel.model.list.ListMirakel.SORT_BY , new DateTime ( ) , new DateTime ( ) , SYNC_STATE . ADD , NUMBER , NUMBER , NUMBER , AccountMirakel . getLocal ( ) , Optional .< Uri > absent ( ) , false ) ; de.azapps.mirakel.model.list.ListMirakel . setName ( context . getString ( R . string . stub_list_name ) ) ; de.azapps.mirakel.model.list.ListMirakel . setAccount ( AccountMirakel . getLocal ( ) ) ; return de.azapps.mirakel.model.list.ListMirakel ; } 
public long long ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder = de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) ; de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( Task . DONE , Operation . EQ , false ) ; return Task . addBasicFiler ( de.azapps.mirakel.model.list.MirakelQueryBuilder ) . count ( Task . URI ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.ShowDoneCases de.azapps.mirakel.model.list.ShowDoneCases ( ) { if ( isSpecial ( ) ) { return ShowDoneCases . NOTHING ; } return new MirakelQueryBuilder ( context ) . and ( Task . LIST_ID , MirakelQueryBuilder . Operation . EQ , this ) . select ( STRING + Task . DONE + ')' , STRING ) . query ( Task . URI ) . doWithCursor ( new CursorWrapper . CursorWrapper < ShowDoneCases > ( ) { @ NonNull @ Override public ShowDoneCases convert ( @ NonNull final CursorGetter getter ) { if ( ! getter . moveToFirst ( ) ) { return ShowDoneCases . NOTHING ; } final long sum = getter . getLong ( NUMBER ) ; if ( sum == NUMBER ) { return ShowDoneCases . ONLY_UNDONE ; } if ( sum == getter . getLong ( NUMBER ) ) { return ShowDoneCases . ONLY_DONE ; } return ShowDoneCases . BOTH ; } } ) ; } 
@ NonNull @ Override public ShowDoneCases convert ( @ NonNull final CursorGetter getter ) { if ( ! getter . moveToFirst ( ) ) { return ShowDoneCases . NOTHING ; } final long sum = getter . getLong ( NUMBER ) ; if ( sum == NUMBER ) { return ShowDoneCases . ONLY_UNDONE ; } if ( sum == getter . getLong ( NUMBER ) ) { return ShowDoneCases . ONLY_DONE ; } return ShowDoneCases . BOTH ; } 
public void void ( ) { void ( false ) ; } 
public void void ( final boolean boolean ) { MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { final long long = getId ( ) ; if ( ( getSyncState ( ) == SYNC_STATE . ADD ) || boolean ) { delete ( MirakelInternalContentProvider . TASK_URI , Task . LIST_ID + STRING + long , null ) ; delete ( de.azapps.mirakel.model.list.Uri , ModelBase . ID + STRING + long , null ) ; } else { final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . DELETE . toInt ( ) ) ; update ( MirakelInternalContentProvider . TASK_URI , de.azapps.mirakel.model.list.ContentValues , Task . LIST_ID + STRING + long , null ) ; update ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues , ModelBase . ID + '=' + long , null ) ; } final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( STRING , java.lang.String ) ; update ( MirakelInternalContentProvider . UPDATE_LIST_ORDER_URI , de.azapps.mirakel.model.list.ContentValues , LFT + '>' + getLft ( ) , null ) ; } } ) ; } 
@ java.lang.Override public void void ( ) { final long long = getId ( ) ; if ( ( getSyncState ( ) == SYNC_STATE . ADD ) || boolean ) { delete ( MirakelInternalContentProvider . TASK_URI , Task . LIST_ID + STRING + long , null ) ; delete ( de.azapps.mirakel.model.list.Uri , ModelBase . ID + STRING + long , null ) ; } else { final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . DELETE . toInt ( ) ) ; update ( MirakelInternalContentProvider . TASK_URI , de.azapps.mirakel.model.list.ContentValues , Task . LIST_ID + STRING + long , null ) ; update ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues , ModelBase . ID + '=' + long , null ) ; } final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( STRING , java.lang.String ) ; update ( MirakelInternalContentProvider . UPDATE_LIST_ORDER_URI , de.azapps.mirakel.model.list.ContentValues , LFT + '>' + getLft ( ) , null ) ; } 
public void void ( ) { void ( true ) ; } 
public void void ( final boolean boolean ) { final SharedPreferences . SharedPreferences SharedPreferences.Editor = MirakelPreferences . getEditor ( ) ; if ( getId ( ) > NUMBER ) { MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { setSyncState ( ( ( getSyncState ( ) == SYNC_STATE . ADD ) || ( getSyncState ( ) == SYNC_STATE . IS_SYNCED ) ) ? getSyncState ( ) : SYNC_STATE . NEED_SYNC ) ; setUpdatedAt ( new DateTime ( ) ) ; final ContentValues de.azapps.mirakel.model.list.ContentValues = getContentValues ( ) ; update ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues , ModelBase . ID + STRING + getId ( ) , null ) ; final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . UPDATED_AT , new java.util.GregorianCalendar ( ) . long ( ) / NUMBER ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . NEED_SYNC . toInt ( ) ) ; update ( MirakelInternalContentProvider . TASK_URI , de.azapps.mirakel.model.list.ContentValues , Task . LIST_ID + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( getId ( ) ) } ) ; } } ) ; } else { final ContentValues de.azapps.mirakel.model.list.ContentValues = getContentValues ( ) ; update ( SpecialList . URI , de.azapps.mirakel.model.list.ContentValues , ModelBase . ID + STRING + java.lang.Math . int ( getId ( ) ) , null ) ; } SharedPreferences.Editor . commit ( ) ; } 
@ java.lang.Override public void void ( ) { setSyncState ( ( ( getSyncState ( ) == SYNC_STATE . ADD ) || ( getSyncState ( ) == SYNC_STATE . IS_SYNCED ) ) ? getSyncState ( ) : SYNC_STATE . NEED_SYNC ) ; setUpdatedAt ( new DateTime ( ) ) ; final ContentValues de.azapps.mirakel.model.list.ContentValues = getContentValues ( ) ; update ( de.azapps.mirakel.model.list.Uri , de.azapps.mirakel.model.list.ContentValues , ModelBase . ID + STRING + getId ( ) , null ) ; final ContentValues de.azapps.mirakel.model.list.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . UPDATED_AT , new java.util.GregorianCalendar ( ) . long ( ) / NUMBER ) ; de.azapps.mirakel.model.list.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . NEED_SYNC . toInt ( ) ) ; update ( MirakelInternalContentProvider . TASK_URI , de.azapps.mirakel.model.list.ContentValues , Task . LIST_ID + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( getId ( ) ) } ) ; } 
@ NonNull public java.util.List<de.azapps.mirakel.model.list.Task> < Task > java.util.List<de.azapps.mirakel.model.list.Task> ( ) { return Task . getTasks ( this , getSortBy ( ) , false ) ; } 
@ NonNull public java.util.List<de.azapps.mirakel.model.list.Task> < Task > java.util.List<de.azapps.mirakel.model.list.Task> ( final boolean boolean ) { return Task . getTasks ( this , getSortBy ( ) , boolean ) ; } 
public de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> < SpecialList > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> ( ) { if( isSpecial ( ) ) { return of ( ( SpecialList ) this ) ; } else { return absent ( ) ; } } 
@ NonNull public de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) { return Task . getMirakelQueryBuilder ( of ( this ) ) ; } 
public static de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ) { return de.azapps.mirakel.model.list.MirakelQueryBuilder . select ( Task . VIEW_TABLE + '.' + Task . ID + STRING + Task . ID , Task . VIEW_TABLE + '.' + Task . NAME + STRING + Task . NAME , Task . DONE , Task . PROGRESS , Task . DUE , Task . LIST_ID , STRING , ACCOUNT_ID , Task . PRIORITY ) ; } 
@ NonNull public de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) { return Task . addBasicFiler ( new MirakelQueryBuilder ( context ) . and ( Task . LIST_ID , Operation . EQ , this ) ) ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.list.Parcel , final int int ) { de.azapps.mirakel.model.list.Parcel . writeInt ( this . sortBy . ordinal ( ) ) ; de.azapps.mirakel.model.list.Parcel . writeSerializable ( this . createdAt ) ; de.azapps.mirakel.model.list.Parcel . writeSerializable ( this . updatedAt ) ; de.azapps.mirakel.model.list.Parcel . writeInt ( this . syncState . ordinal ( ) ) ; de.azapps.mirakel.model.list.Parcel . writeInt ( this . lft ) ; de.azapps.mirakel.model.list.Parcel . writeInt ( this . rgt ) ; de.azapps.mirakel.model.list.Parcel . writeInt ( this . color ) ; de.azapps.mirakel.model.list.Parcel . writeLong ( this . accountID ) ; de.azapps.mirakel.model.list.Parcel . writeLong ( this . getId ( ) ) ; de.azapps.mirakel.model.list.Parcel . writeString ( this . getName ( ) ) ; de.azapps.mirakel.model.list.Parcel . writeParcelable ( iconPath . orNull ( ) , NUMBER ) ; de.azapps.mirakel.model.list.Parcel . writeByte ( ( byte ) ( isSpecial ? NUMBER : NUMBER ) ) ; } 
protected void ( final Parcel de.azapps.mirakel.model.list.Parcel ) { final int int = de.azapps.mirakel.model.list.Parcel . readInt ( ) ; this . sortBy = de.azapps.mirakel.model.list.ListMirakel.SORT_BY . de.azapps.mirakel.model.list.ListMirakel.SORT_BY[] ( ) [ int ] ; this . createdAt = ( DateTime ) de.azapps.mirakel.model.list.Parcel . readSerializable ( ) ; this . updatedAt = ( DateTime ) de.azapps.mirakel.model.list.Parcel . readSerializable ( ) ; final int int = de.azapps.mirakel.model.list.Parcel . readInt ( ) ; this . syncState = SYNC_STATE . values ( ) [ int ] ; this . lft = de.azapps.mirakel.model.list.Parcel . readInt ( ) ; this . rgt = de.azapps.mirakel.model.list.Parcel . readInt ( ) ; this . color = de.azapps.mirakel.model.list.Parcel . readInt ( ) ; this . accountID = de.azapps.mirakel.model.list.Parcel . readLong ( ) ; this . setId ( de.azapps.mirakel.model.list.Parcel . readLong ( ) ) ; this . setName ( de.azapps.mirakel.model.list.Parcel . readString ( ) ) ; iconPath = fromNullable ( de.azapps.mirakel.model.list.Parcel .< Uri > readParcelable ( Uri .class . java.lang.ClassLoader ( ) ) ) ; isSpecial = de.azapps.mirakel.model.list.Parcel . readByte ( ) == NUMBER ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( final Parcel de.azapps.mirakel.model.list.Parcel ) { return new de.azapps.mirakel.model.list.ListMirakel ( de.azapps.mirakel.model.list.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.ListMirakel [] de.azapps.mirakel.model.list.ListMirakel[] ( final int int ) { return new de.azapps.mirakel.model.list.ListMirakel [ int ] ; } 
public boolean boolean ( ) { if ( isSpecial ( ) || ( accountID == INVALID_ID ) ) { return true ; } else { return getAccount ( ) . getType ( ) . isListEditable ( ) ; } } 
public boolean boolean ( ) { return boolean ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsDueProperty de.azapps.mirakel.model.list.meta.SpecialListsDueProperty ( final JsonElement de.azapps.mirakel.model.list.meta.JsonElement , final java.lang.reflect.Type java.lang.reflect.Type , final JsonDeserializationContext de.azapps.mirakel.model.list.meta.JsonDeserializationContext )    throws de.azapps.mirakel.model.list.meta.JsonParseException { if ( de.azapps.mirakel.model.list.meta.JsonElement . isJsonObject ( ) ) { java.lang.Integer java.lang.Integer = NUMBER , java.lang.Integer = NUMBER ; boolean boolean = false ; for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> : de.azapps.mirakel.model.list.meta.JsonElement . getAsJsonObject ( ) . entrySet ( ) ) { switch ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) { case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { java.lang.Integer = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsInt ( ) ; break; } case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { java.lang.Integer = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsInt ( ) ; break; } case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { boolean = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsBoolean ( ) ; break; } default: throw new JsonParseException ( STRING ) ; } } if ( java.lang.Integer != null && java.lang.Integer != null ) { return new SpecialListsDueProperty ( Unit . values ( ) [ java.lang.Integer ] , java.lang.Integer , boolean ) ; } } throw new JsonParseException ( STRING ) ; } 
public void ( @ NonNull final java.lang.Class<T> < T > java.lang.Class<T> ) { this . java.lang.Class = java.lang.Class<T> ; } 
@ java.lang.Override public T T ( final JsonElement de.azapps.mirakel.model.list.meta.JsonElement , final java.lang.reflect.Type java.lang.reflect.Type , final JsonDeserializationContext de.azapps.mirakel.model.list.meta.JsonDeserializationContext ) throws de.azapps.mirakel.model.list.meta.JsonParseException { if ( de.azapps.mirakel.model.list.meta.JsonElement . isJsonObject ( ) ) { java.lang.Boolean java.lang.Boolean = null ; for ( final java.util.Map . java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> : de.azapps.mirakel.model.list.meta.JsonElement . getAsJsonObject ( ) . entrySet ( ) ) { if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && ( STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) || STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) || STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) ) ) { java.lang.Boolean = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsBoolean ( ) ; } else { throw new JsonParseException ( STRING ) ; } } if ( java.lang.Boolean != null ) { try { return ( T ) java.lang.Class . java.lang.reflect.Constructor ( boolean .class ) . java.lang.Object ( java.lang.Boolean ) ; } catch ( java.lang.IllegalAccessException | java.lang.InstantiationException | java.lang.NoSuchMethodException | java.lang.reflect.InvocationTargetException java.lang.ReflectiveOperationException ) { throw new JsonParseException ( STRING , java.lang.ReflectiveOperationException ) ; } } } throw new JsonParseException ( STRING ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty ( final JsonElement de.azapps.mirakel.model.list.meta.JsonElement , final java.lang.reflect.Type java.lang.reflect.Type , final JsonDeserializationContext de.azapps.mirakel.model.list.meta.JsonDeserializationContext )    throws de.azapps.mirakel.model.list.meta.JsonParseException { if ( de.azapps.mirakel.model.list.meta.JsonElement . isJsonObject ( ) ) { java.lang.Integer java.lang.Integer = null , java.lang.Integer = null ; for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> : de.azapps.mirakel.model.list.meta.JsonElement . getAsJsonObject ( ) . entrySet ( ) ) { if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) ) { java.lang.Integer = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsInt ( ) ; } else if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) ) { java.lang.Integer = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsInt ( ) ; } else { throw new JsonParseException ( STRING ) ; } } if ( java.lang.Integer != null && java.lang.Integer != null ) { return new SpecialListsProgressProperty ( java.lang.Integer , OPERATION . values ( ) [ java.lang.Integer ] ) ; } } throw new JsonParseException ( STRING ) ; } 
public void ( @ NonNull final java.lang.Class<T> < T > java.lang.Class<T> ) { this . java.lang.Class = java.lang.Class<T> ; } 
@ java.lang.Override public T T ( final JsonElement de.azapps.mirakel.model.list.meta.JsonElement , final java.lang.reflect.Type java.lang.reflect.Type , final JsonDeserializationContext de.azapps.mirakel.model.list.meta.JsonDeserializationContext ) { if ( de.azapps.mirakel.model.list.meta.JsonElement . isJsonObject ( ) ) { java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = null ; java.lang.Boolean java.lang.Boolean = null ; for ( final java.util.Map . java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> : de.azapps.mirakel.model.list.meta.JsonElement . getAsJsonObject ( ) . entrySet ( ) ) { if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonArray ( ) && STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) ) { java.util.List<java.lang.Integer> = new java.util.ArrayList <> ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsJsonArray ( ) . size ( ) ) ; for ( final JsonElement de.azapps.mirakel.model.list.meta.JsonElement : ( ( JsonArray ) java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) ) ) { if ( de.azapps.mirakel.model.list.meta.JsonElement . isJsonPrimitive ( ) && de.azapps.mirakel.model.list.meta.JsonElement . getAsJsonPrimitive ( ) . isNumber ( ) ) { java.util.List<java.lang.Integer> . boolean ( de.azapps.mirakel.model.list.meta.JsonElement . getAsInt ( ) ) ; } } } else if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && ( STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) || STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) ) ) { java.lang.Boolean = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsBoolean ( ) ; } else { throw new JsonParseException ( STRING ) ; } } if ( ( java.util.List<java.lang.Integer> != null ) && ( java.lang.Boolean != null ) ) { try { return ( T ) java.lang.Class . java.lang.reflect.Constructor ( boolean .class , java.util.List .class ) . java.lang.Object ( java.lang.Boolean , java.util.List<java.lang.Integer> ) ; } catch ( java.lang.IllegalAccessException | java.lang.InstantiationException | java.lang.NoSuchMethodException | java.lang.reflect.InvocationTargetException java.lang.ReflectiveOperationException ) { throw new JsonParseException ( STRING , java.lang.ReflectiveOperationException ) ; } } } throw new JsonParseException ( STRING ) ; } 
public void ( ) { } 
public void ( final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { } 
@ NonNull abstract public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( final @ NonNull Context de.azapps.mirakel.model.list.meta.Context ); 
@ NonNull abstract public java.lang.String java.lang.String ( ) 
@ NonNull abstract public java.lang.String java.lang.String ( final @ NonNull Context de.azapps.mirakel.model.list.meta.Context ); 
@ NonNull abstract public java.lang.String java.lang.String ( final @ NonNull Context de.azapps.mirakel.model.list.meta.Context ); 
public java.lang.String java.lang.String ( final @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return java.lang.String ( de.azapps.mirakel.model.list.meta.Context ) + STRING + java.lang.String ( de.azapps.mirakel.model.list.meta.Context ) ; } 
@ NonNull abstract protected java.lang.String java.lang.String ( ) 
public void ( final boolean boolean ) { this . boolean = boolean ; } 
protected void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { this . boolean = de.azapps.mirakel.model.list.meta.Parcel . readByte ( ) != NUMBER ; } 
protected void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { boolean = de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsBooleanProperty && ( ( de.azapps.mirakel.model.list.meta.SpecialListsBooleanProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . boolean ; } 
public boolean boolean ( ) { return this . boolean ; } 
public void void ( final boolean boolean ) { this . boolean = boolean ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = STRING + java.lang.String ( ) + STRING ; java.lang.String += STRING + ( this . boolean ? STRING : STRING ) ; return java.lang.String + STRING ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.list.meta.Parcel , final int int ) { de.azapps.mirakel.model.list.meta.Parcel . writeByte ( boolean ? ( byte ) NUMBER : ( byte ) NUMBER ) ; } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty , final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ) { if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ) { de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION = ( ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ; java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = ( ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> ; } else { de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION = de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ; java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = new java.util.ArrayList <> ( NUMBER ) ; java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . add ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) ; } } 
public void ( final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION , final @ NonNull java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> < SpecialListsBaseProperty > java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> ) { this . de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION = de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ; this . java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> ; } 
@ NonNull public de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ( ) { return de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ; } 
@ NonNull public java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> < SpecialListsBaseProperty > java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> ( ) { return java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> ; } 
public void void ( final @ NonNull java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> < SpecialListsBaseProperty > java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> ) { this . java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> ; } 
public void void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { this . java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . add ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ( ) { return de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) ; for ( final SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty : java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty . getWhereQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) ; if ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION == de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION . de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ) { de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ) ; } else { de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . or ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ) ; } } return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( ) { if ( ( java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . size ( ) > NUMBER ) || ( ! java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isEmpty ( ) && ( java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( NUMBER ) instanceof de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ) ) ) { final java.lang.String java.lang.String = TextUtils . join ( STRING , Collections2 . transform ( java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> , new Function < SpecialListsBaseProperty , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { return de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty . serialize ( ) ; } } ) ) ; return '[' + java.lang.String + ']' ; } else if ( java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . size ( ) == NUMBER ) { return java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( NUMBER ) . serialize ( ) ; } else { return STRING ; } } 
@ java.lang.Override public java.lang.String java.lang.String ( SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { return de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty . serialize ( ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return TextUtils . join ( ' ' + java.lang.String ( de.azapps.mirakel.model.list.meta.Context ) + ' ' , Collections2 . transform ( java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> , new Function < SpecialListsBaseProperty , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ) { return '(' + de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty . getSummary ( de.azapps.mirakel.model.list.meta.Context ) + ')' ; } return de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty . getSummaryForConjunction ( de.azapps.mirakel.model.list.meta.Context ) ; } } ) ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ) { return '(' + de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty . getSummary ( de.azapps.mirakel.model.list.meta.Context ) + ')' ; } return de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty . getSummaryForConjunction ( de.azapps.mirakel.model.list.meta.Context ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) throws java.util.NoSuchElementException { switch ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ) { case de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION : return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . and ) ; case de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION : return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . or ) ; } throw new java.util.NoSuchElementException ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION ) ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.list.meta.Parcel , final int int ) { de.azapps.mirakel.model.list.meta.Parcel . writeInt ( this . de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION . int ( ) ) ; de.azapps.mirakel.model.list.meta.Parcel . writeParcelableArray ( java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . toArray ( new Parcelable [ java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . size ( ) ] ) , NUMBER ) ; } 
private void ( final Parcel de.azapps.mirakel.model.list.meta.Parcel ) { this . de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION = de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION . de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList.CONJUNCTION[] ( ) [ de.azapps.mirakel.model.list.meta.Parcel . readInt ( ) ] ; final SpecialListsBaseProperty [] de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty[] = ( SpecialListsBaseProperty [] ) de.azapps.mirakel.model.list.meta.Parcel . readParcelableArray ( java.lang.ClassLoader . java.lang.ClassLoader ( ) ) ; this . java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = new java.util.ArrayList <> ( NUMBER ) ; for ( SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty : de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty[] ) { this . java.util.List<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . add ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) ; } } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ( final Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList [] de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList[] ( final int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList [ int ] ; } 
public void ( final boolean boolean , final @ NonNull java.lang.String java.lang.String , final @ NonNull Type de.azapps.mirakel.model.list.meta.Type ) { super( boolean , java.lang.String , de.azapps.mirakel.model.list.meta.Type ); } 
public void ( ) { super(); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return Task . CONTENT ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_content_title ) ; } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public de.azapps.mirakel.model.list.meta.SpecialListsContentProperty de.azapps.mirakel.model.list.meta.SpecialListsContentProperty ( Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsContentProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsContentProperty [] de.azapps.mirakel.model.list.meta.SpecialListsContentProperty[] ( int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsContentProperty [ int ] ; } 
public void ( final boolean boolean ) { super( boolean ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( Task . DONE , MirakelQueryBuilder . Operation . EQ , isSet ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return this . isSet ? de.azapps.mirakel.model.list.meta.Context . getString ( R . string . done ) : de.azapps.mirakel.model.list.meta.Context . getString ( R . string . undone ) ; } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return Task . DONE ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_done_title ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty ( Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty [] de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty[] ( int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty [ int ] ; } 
public void ( final boolean boolean ) { super( boolean ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return Task . DUE + STRING ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( Task . DUE , isSet ? Operation . EQ : Operation . NOT_EQ , ( java.lang.String ) null ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return isSet ? de.azapps.mirakel.model.list.meta.Context . getString ( R . string . due_dont_exist ) : de.azapps.mirakel.model.list.meta.Context . getString ( R . string . due_exists ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_due_exist_title ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty ( Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty [] de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty[] ( int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty [ int ] ; } 
public void ( final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit , final int int , final boolean boolean ) { super( boolean ); this . int = int ; this . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit = de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ; } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsDueProperty ) { int = ( ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . int ( ) ; de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit = ( ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ( ) ; } else { int = NUMBER ; de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit = de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ; } } 
@ NonNull @ java.lang.Override protected java.lang.String java.lang.String ( ) { return Task . DUE ; } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); final int int = de.azapps.mirakel.model.list.meta.Parcel . readInt ( ) ; this . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit = de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit[] ( ) [ int ] ; this . int = de.azapps.mirakel.model.list.meta.Parcel . readInt ( ) ; } 
@ NonNull public de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ( ) { return this . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ; } 
public int int ( ) { return this . int ; } 
public void void ( final int int ) { this . int = int ; } 
public void void ( final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ) { this . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit = de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( Task . DUE , MirakelQueryBuilder . Operation . NOT_EQ , ( java.lang.String ) null ) ; DateTime de.azapps.mirakel.model.list.meta.DateTime = new LocalDate ( ) . toDateTimeAtStartOfDay ( ) . plusDays ( NUMBER ) . minusSeconds ( NUMBER ) ; Log . w ( java.lang.String , java.lang.String . java.lang.String ( de.azapps.mirakel.model.list.meta.DateTime . getMillis ( ) ) ) ; switch ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ) { case de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit : de.azapps.mirakel.model.list.meta.DateTime = de.azapps.mirakel.model.list.meta.DateTime . plusDays ( int ) ; break; case de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit : de.azapps.mirakel.model.list.meta.DateTime = de.azapps.mirakel.model.list.meta.DateTime . plusMonths ( int ) ; break; case de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit : de.azapps.mirakel.model.list.meta.DateTime = de.azapps.mirakel.model.list.meta.DateTime . plusYears ( int ) ; break; } de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( Task . DUE , isSet ? Operation . GT : Operation . LT , de.azapps.mirakel.model.list.meta.DateTime . getMillis ( ) ) ; Log . w ( java.lang.String , de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . toString ( Task . URI ) ) ; return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = STRING + Task . DUE + STRING ; java.lang.String += STRING + ( isSet ? STRING : STRING ) ; java.lang.String += STRING + this . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit . int ( ) ; java.lang.String += STRING + this . int ; return java.lang.String + STRING ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { java.lang.String java.lang.String = STRING ; switch ( this . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit ) { case de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit : java.lang.String = de.azapps.mirakel.model.list.meta.Context . getResources ( ) . getQuantityString ( R . plurals . day , int ) ; break; case de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit : java.lang.String = de.azapps.mirakel.model.list.meta.Context . getResources ( ) . getQuantityString ( R . plurals . month , int ) ; break; case de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit : java.lang.String = de.azapps.mirakel.model.list.meta.Context . getResources ( ) . getQuantityString ( R . plurals . year , int ) ; break; } final java.lang.String java.lang.String = ( ( int > NUMBER ) ? STRING : STRING ) + int + ' ' + java.lang.String ; if ( isSet ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_due_negated , java.lang.String ) ; } else { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_due , java.lang.String ) ; } } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_due_title ) ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.list.meta.Parcel , final int int ) { super. writeToParcel ( de.azapps.mirakel.model.list.meta.Parcel , int ) ; de.azapps.mirakel.model.list.meta.Parcel . writeInt ( this . de.azapps.mirakel.model.list.meta.SpecialListsDueProperty.Unit . int ( ) ) ; de.azapps.mirakel.model.list.meta.Parcel . writeInt ( this . int ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsDueProperty de.azapps.mirakel.model.list.meta.SpecialListsDueProperty ( final Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsDueProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsDueProperty [] de.azapps.mirakel.model.list.meta.SpecialListsDueProperty[] ( final int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsDueProperty [ int ] ; } 
public void ( boolean boolean ) { super( boolean ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return FileMirakel . TABLE ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { final MirakelQueryBuilder . MirakelQueryBuilder MirakelQueryBuilder.Operation = isSet ? Operation . IN : Operation . NOT_IN ; return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( Task . ID , MirakelQueryBuilder.Operation , new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . select ( FileMirakel . TASK ) , FileMirakel . URI ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( isSet ? R . string . has_file : R . string . no_file ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_file_title ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return java.lang.String ( de.azapps.mirakel.model.list.meta.Context ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsFileProperty de.azapps.mirakel.model.list.meta.SpecialListsFileProperty ( Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsFileProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsFileProperty [] de.azapps.mirakel.model.list.meta.SpecialListsFileProperty[] ( int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsFileProperty [ int ] ; } 
public void ( final boolean boolean , final @ NonNull java.lang.String java.lang.String , final @ NonNull Type de.azapps.mirakel.model.list.meta.Type ) { super( boolean , java.lang.String , de.azapps.mirakel.model.list.meta.Type ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); } 
@ NonNull @ java.lang.Override protected java.lang.String java.lang.String ( ) { return ListMirakel . TABLE + STRING + ListMirakel . NAME ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = super. getWhereQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . select ( ListMirakel . ID ) ; return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( Task . LIST_ID , MirakelQueryBuilder . Operation . IN , de.azapps.mirakel.model.list.meta.MirakelQueryBuilder , ListMirakel . URI ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_list_list_name ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty ( Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty [] de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty[] ( int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty [ int ] ; } 
public void ( final boolean boolean , final @ NonNull java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { super( boolean , java.util.List<java.lang.Integer> ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsListProperty ) { content = ( ( de.azapps.mirakel.model.list.meta.SpecialListsListProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . getContent ( ) ; } else { content = new java.util.ArrayList <> ( NUMBER ) ; } } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return Task . LIST_ID ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) ; if ( content . isEmpty ( ) ) { return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ; } final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList <> ( content . size ( ) / NUMBER ) ; for ( final int int : this . content ) { OptionalUtils . withOptional ( ListMirakel . get ( int ) , new OptionalUtils . OptionalUtils < ListMirakel > ( ) { @ Override public void apply ( final ListMirakel input ) { if ( input . isSpecial ( ) ) { qb . or ( input . getWhereQueryForTasks ( ) ) ; } else { normal . add ( c ) ; } } } ) ; } de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . or ( Task . LIST_ID , MirakelQueryBuilder . Operation . IN , java.util.List<java.lang.Integer> ) ; if ( isSet ) { return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . not ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ) ; } else { return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ; } } 
@ Override public void apply ( final ListMirakel input ) { if ( input . isSpecial ( ) ) { qb . or ( input . getWhereQueryForTasks ( ) ) ; } else { normal . add ( c ) ; } } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { if ( content . isEmpty ( ) ) { return STRING ; } final java.util.List<de.azapps.mirakel.model.list.meta.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.meta.ListMirakel> = new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( ModelBase . ID , MirakelQueryBuilder . Operation . IN , content ) . getList ( ListMirakel .class ) ; java.util.List<de.azapps.mirakel.model.list.meta.ListMirakel> . addAll ( new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( ModelBase . ID , MirakelQueryBuilder . Operation . IN , new java.util.ArrayList <> ( Collections2 . transform ( Collections2 . filter ( content , new Predicate < java.lang.Integer > ( ) { @ java.lang.Override public boolean boolean ( java.lang.Integer java.lang.Integer ) { return java.lang.Integer < NUMBER ; } } ) , new Function < java.lang.Integer , java.lang.Integer > ( ) { @ java.lang.Override public java.lang.Integer java.lang.Integer ( java.lang.Integer java.lang.Integer ) { return java.lang.Integer * - NUMBER ; } } ) ) ) . getList ( SpecialList .class ) ) ; return ( this . isSet ? de.azapps.mirakel.model.list.meta.Context . getString ( R . string . not_in ) : STRING ) + ' ' + TextUtils . join ( STRING , Collections2 . transform ( java.util.List<de.azapps.mirakel.model.list.meta.ListMirakel> , new Function < ListMirakel , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( ListMirakel de.azapps.mirakel.model.list.meta.ListMirakel ) { return de.azapps.mirakel.model.list.meta.ListMirakel . getName ( ) ; } } ) ) ; } 
@ java.lang.Override public boolean boolean ( java.lang.Integer java.lang.Integer ) { return java.lang.Integer < NUMBER ; } 
@ java.lang.Override public java.lang.Integer java.lang.Integer ( java.lang.Integer java.lang.Integer ) { return java.lang.Integer * - NUMBER ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ListMirakel de.azapps.mirakel.model.list.meta.ListMirakel ) { return de.azapps.mirakel.model.list.meta.ListMirakel . getName ( ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_list_title ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsListProperty de.azapps.mirakel.model.list.meta.SpecialListsListProperty ( final Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsListProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsListProperty [] de.azapps.mirakel.model.list.meta.SpecialListsListProperty[] ( final int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsListProperty [ int ] ; } 
public void ( final boolean boolean , final @ NonNull java.lang.String java.lang.String , final @ NonNull Type de.azapps.mirakel.model.list.meta.Type ) { super( boolean , java.lang.String , de.azapps.mirakel.model.list.meta.Type ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return ModelBase . NAME ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_name_title ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsNameProperty de.azapps.mirakel.model.list.meta.SpecialListsNameProperty ( Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsNameProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsNameProperty [] de.azapps.mirakel.model.list.meta.SpecialListsNameProperty[] ( int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsNameProperty [ int ] ; } 
public void ( final boolean boolean , final @ NonNull java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { super( boolean , java.util.List<java.lang.Integer> ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty ) { content = ( ( de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . getContent ( ) ; } else { content = new java.util.ArrayList <> ( NUMBER ) ; } } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return Task . PRIORITY ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return ( this . isSet ? de.azapps.mirakel.model.list.meta.Context . getString ( R . string . not_in ) : STRING ) + ' ' + TextUtils . join ( STRING , content ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_priority_title ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty ( final Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty [] de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty[] ( final int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty [ int ] ; } 
public void ( final int int , final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ) { this . int = int ; this . de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION = de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ; } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { this . int = de.azapps.mirakel.model.list.meta.Parcel . readInt ( ) ; final int int = de.azapps.mirakel.model.list.meta.Parcel . readInt ( ) ; this . de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION = de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION . de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION[] ( ) [ int ] ; } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty ) { int = ( ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . int ( ) ; de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION = ( ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ( ) ; } else { int = NUMBER ; de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION = de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION . de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ; } } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) ; switch ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ) { case de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION : return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( Task . PROGRESS , MirakelQueryBuilder . Operation . EQ , int ) ; case de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION : return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( Task . PROGRESS , MirakelQueryBuilder . Operation . GT , int ) ; case de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION : return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( Task . PROGRESS , MirakelQueryBuilder . Operation . LT , int ) ; } return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = STRING + Task . PROGRESS + STRING ; java.lang.String += STRING + int ; java.lang.String += STRING + de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION . int ( ) ; return java.lang.String + STRING ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { switch ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ) { case de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION : return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_list_progress_equal , int ) ; case de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION : return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_list_progress_greater_than , int ) ; case de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION : return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_list_progress_less_than , int ) ; } return STRING ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_progress_title ) ; } 
@ NonNull public de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ( ) { return de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ; } 
public int int ( ) { return int ; } 
public void void ( final int int ) { this . int = int ; } 
public void void ( final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ) { this . de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION = de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.list.meta.Parcel , final int int ) { de.azapps.mirakel.model.list.meta.Parcel . writeInt ( this . int ) ; de.azapps.mirakel.model.list.meta.Parcel . writeInt ( this . de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty.OPERATION . int ( ) ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty ( final Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty [] de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty[] ( final int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty [ int ] ; } 
public void ( final boolean boolean ) { super( boolean ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return Task . REMINDER ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( Task . REMINDER , isSet ? MirakelQueryBuilder . Operation . NOT_EQ : MirakelQueryBuilder . Operation . EQ , ( java.lang.String ) null ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = STRING + Task . REMINDER + STRING ; java.lang.String += STRING + ( this . isSet ? STRING : STRING ) ; return java.lang.String + STRING ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return this . isSet ? de.azapps.mirakel.model.list.meta.Context . getString ( R . string . reminder_set ) : de.azapps.mirakel.model.list.meta.Context . getString ( R . string . reminder_unset ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_reminder_title ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty ( Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty [] de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty[] ( int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty [ int ] ; } 
public void ( final boolean boolean , final @ NonNull java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { super( boolean ); this . java.util.List<java.lang.Integer> = java.util.List<java.lang.Integer> ; } 
protected void ( final Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); this . java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( NUMBER ) ; de.azapps.mirakel.model.list.meta.Parcel . readList ( this . java.util.List<java.lang.Integer> , java.lang.Integer .class . java.lang.ClassLoader ( ) ) ; } 
protected void ( final SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { if ( java.util.List<java.lang.Integer> . boolean ( ) ) { return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) ; } return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( getPropertyName ( ) , isSet ? MirakelQueryBuilder . Operation . NOT_IN : MirakelQueryBuilder . Operation . IN , java.util.List<java.lang.Integer> ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = STRING + getPropertyName ( ) + STRING ; java.lang.String += STRING + ( this . isSet ? STRING : STRING ) ; java.lang.String += STRING ; java.lang.String += TextUtils . join ( STRING , java.util.List<java.lang.Integer> ) ; return java.lang.String + STRING ; } 
@ NonNull public java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ( ) { return this . java.util.List<java.lang.Integer> ; } 
public void void ( final @ NonNull java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { this . java.util.List<java.lang.Integer> = java.util.List<java.lang.Integer> ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.list.meta.Parcel , final int int ) { de.azapps.mirakel.model.list.meta.Parcel . writeByte ( isSet ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.list.meta.Parcel . writeList ( this . java.util.List<java.lang.Integer> ) ; } 
public void ( final boolean boolean , final @ NonNull java.lang.String java.lang.String , final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ) { super( boolean ); this . java.lang.String = java.lang.String ; this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type = de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ; } 
protected void ( ) { super( true ); this . java.lang.String = STRING ; this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type = de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ; } 
protected void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); this . java.lang.String = de.azapps.mirakel.model.list.meta.Parcel . readString ( ) ; this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type = de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type[] ( ) [ de.azapps.mirakel.model.list.meta.Parcel . readInt ( ) ] ; } 
protected void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsStringProperty ) { java.lang.String = ( ( de.azapps.mirakel.model.list.meta.SpecialListsStringProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . java.lang.String ( ) ; de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type = ( ( de.azapps.mirakel.model.list.meta.SpecialListsStringProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ( ) ; } else { java.lang.String = STRING ; de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type = de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ; } } 
public void void ( final @ NonNull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; } 
@ NonNull public java.lang.String java.lang.String ( ) { return this . java.lang.String ; } 
@ NonNull public de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ( ) { return this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ; } 
public void void ( final @ NonNull de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ) { this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type = de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { switch ( this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ) { case de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type : return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . where_like_end_text , STRING + this . java.lang.String + STRING ) ; case de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type : return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . where_like_begin_text , STRING + this . java.lang.String + STRING ) ; case de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type : return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . where_like_contain_text , STRING + this . java.lang.String + STRING ) ; default: return STRING ; } } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) ; MirakelQueryBuilder . MirakelQueryBuilder MirakelQueryBuilder.Operation = isSet ? Operation . NOT_LIKE : Operation . LIKE ; if ( this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type == null ) { return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( getPropertyName ( ) , MirakelQueryBuilder.Operation , STRING ) ; } switch ( this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type ) { case de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type : return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( getPropertyName ( ) , MirakelQueryBuilder.Operation , java.lang.String + STRING ) ; case de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type : return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( getPropertyName ( ) , MirakelQueryBuilder.Operation , STRING + java.lang.String + STRING ) ; case de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type : return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . and ( getPropertyName ( ) , MirakelQueryBuilder.Operation , STRING + java.lang.String ) ; default: return de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ; } } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = STRING + getPropertyName ( ) + STRING ; java.lang.String += STRING + ( this . isSet ? STRING : STRING ) ; java.lang.String += STRING + this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type . int ( ) ; java.lang.String += STRING + this . java.lang.String + STRING ; return java.lang.String + STRING ; } 
@ java.lang.Override public void void ( Parcel de.azapps.mirakel.model.list.meta.Parcel , int int ) { de.azapps.mirakel.model.list.meta.Parcel . writeByte ( isSet ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.list.meta.Parcel . writeString ( this . java.lang.String ) ; de.azapps.mirakel.model.list.meta.Parcel . writeInt ( this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type == null ? - NUMBER : this . de.azapps.mirakel.model.list.meta.SpecialListsStringProperty.Type . int ( ) ) ; } 
public void ( boolean boolean , boolean boolean ) { super( boolean ); this . boolean = boolean ; } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); this . boolean = de.azapps.mirakel.model.list.meta.Parcel . readByte ( ) != NUMBER ; } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty ) { boolean = ( ( de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . boolean ( ) ; } else { boolean = false ; } } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return Task . SUBTASK_TABLE ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { if ( boolean && isSet ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_list_subtask_parent_not ) ; } else if ( boolean && ! isSet ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_list_subtask_parent ) ; } else if ( ! boolean && isSet ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_list_subtask_child_not ) ; } else { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_list_subtask_child ) ; } } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_subtask_title ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( Task . ID , isSet ? MirakelQueryBuilder . Operation . NOT_IN : MirakelQueryBuilder . Operation . IN , new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . distinct ( ) . select ( ( boolean ? STRING : STRING ) ) , MirakelInternalContentProvider . SUBTASK_URI ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = STRING + Task . SUBTASK_TABLE + STRING ; java.lang.String += STRING + isSet ; return java.lang.String + STRING + boolean + STRING ; } 
public boolean boolean ( ) { return boolean ; } 
public void void ( boolean boolean ) { boolean = boolean ; } 
@ java.lang.Override public void void ( Parcel de.azapps.mirakel.model.list.meta.Parcel , int int ) { de.azapps.mirakel.model.list.meta.Parcel . writeByte ( boolean ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.list.meta.Parcel . writeByte ( isSet ? ( byte ) NUMBER : ( byte ) NUMBER ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty ( Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
public de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty [] de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty[] ( int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty [ int ] ; } 
public void ( final boolean boolean , final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { super( boolean , java.util.List<java.lang.Integer> ); } 
private void ( final @ NonNull Parcel de.azapps.mirakel.model.list.meta.Parcel ) { super( de.azapps.mirakel.model.list.meta.Parcel ); } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) { super( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ); if ( de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty instanceof de.azapps.mirakel.model.list.meta.SpecialListsTagProperty ) { content = ( ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . getContent ( ) ; isSet = ( ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty ) de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty ) . isSet ( ) ; } else { content = new java.util.ArrayList <> ( NUMBER ) ; isSet = false ; } } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return Tag . TABLE ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { if ( content . isEmpty ( ) ) { return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) ; } return new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( Task . ID , isSet ? MirakelQueryBuilder . Operation . NOT_IN : MirakelQueryBuilder . Operation . IN , new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . distinct ( ) . select ( STRING ) . and ( STRING , MirakelQueryBuilder . Operation . IN , content ) , MirakelInternalContentProvider . TAG_CONNECTION_URI ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull final Context de.azapps.mirakel.model.list.meta.Context ) { if ( content . isEmpty ( ) ) { return STRING ; } java.util.List<de.azapps.mirakel.model.list.meta.Tag> < Tag > java.util.List<de.azapps.mirakel.model.list.meta.Tag> = new MirakelQueryBuilder ( de.azapps.mirakel.model.list.meta.Context ) . and ( ModelBase . ID , MirakelQueryBuilder . Operation . IN , content ) . getList ( Tag .class ) ; return ( this . isSet ? de.azapps.mirakel.model.list.meta.Context . getString ( R . string . not_in ) : STRING ) + ' ' + TextUtils . join ( STRING , Collections2 . transform ( java.util.List<de.azapps.mirakel.model.list.meta.Tag> , new Function < Tag , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( Tag de.azapps.mirakel.model.list.meta.Tag ) { return de.azapps.mirakel.model.list.meta.Tag . getName ( ) ; } } ) ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( Tag de.azapps.mirakel.model.list.meta.Tag ) { return de.azapps.mirakel.model.list.meta.Tag . getName ( ) ; } 
@ NonNull @ java.lang.Override public java.lang.String java.lang.String ( @ NonNull Context de.azapps.mirakel.model.list.meta.Context ) { return de.azapps.mirakel.model.list.meta.Context . getString ( R . string . special_lists_tag_title ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsTagProperty de.azapps.mirakel.model.list.meta.SpecialListsTagProperty ( final Parcel de.azapps.mirakel.model.list.meta.Parcel ) { return new de.azapps.mirakel.model.list.meta.SpecialListsTagProperty ( de.azapps.mirakel.model.list.meta.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.SpecialListsTagProperty [] de.azapps.mirakel.model.list.meta.SpecialListsTagProperty[] ( final int int ) { return new de.azapps.mirakel.model.list.meta.SpecialListsTagProperty [ int ] ; } 
public void ( final java.lang.Class<T> < T > java.lang.Class<T> ) { super(); this . java.lang.Class<T> = java.lang.Class<T> ; } 
@ java.lang.Override public T T ( final JsonElement de.azapps.mirakel.model.list.meta.JsonElement , final java . lang . reflect . java.lang.reflect.Type java.lang.reflect.Type , final JsonDeserializationContext de.azapps.mirakel.model.list.meta.JsonDeserializationContext ) throws de.azapps.mirakel.model.list.meta.JsonParseException { if ( de.azapps.mirakel.model.list.meta.JsonElement . isJsonObject ( ) ) { java.lang.Integer java.lang.Integer = null ; java.lang.String java.lang.String = null ; java.lang.Boolean java.lang.Boolean = null ; for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> : de.azapps.mirakel.model.list.meta.JsonElement . getAsJsonObject ( ) . entrySet ( ) ) { switch ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getKey ( ) ) { case STRING : case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { java.lang.Boolean = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsBoolean ( ) ; break; } case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { java.lang.Integer = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsInt ( ) ; break; } case STRING : case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { java.lang.String = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.model.list.meta.JsonElement> . getValue ( ) . getAsString ( ) ; break; } default: throw new JsonParseException ( STRING ) ; } } if ( ( ( java.lang.String != null ) & ( java.lang.Integer != null ) ) && ( java.lang.Boolean != null ) ) { try { return ( T ) java.lang.Class<T> . java.lang.reflect.Constructor<T> ( boolean .class , java.lang.String .class , Type .class ) . T ( java.lang.Boolean , java.lang.String , Type . values ( ) [ java.lang.Integer ] ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException | java.lang.NoSuchMethodException java.lang.ReflectiveOperationException ) { throw new JsonParseException ( STRING , java.lang.ReflectiveOperationException ) ; } } } throw new JsonParseException ( STRING ) ; } 
public boolean boolean ( ) { return this . boolean ; } 
public void void ( final boolean boolean ) { this . boolean = boolean ; } 
@ java.lang.Override @ NonNull public de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder = de.azapps.mirakel.model.list.MirakelQueryBuilder ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ( ) ) ; try { if ( getAccount ( ) . getType ( ) != AccountMirakel . ACCOUNT_TYPES . ALL ) { de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( ACCOUNT_ID , Operation . EQ , getAccount ( ) ) ; } } catch ( final AccountVanishedException de.azapps.mirakel.model.list.AccountVanishedException ) { } return de.azapps.mirakel.model.list.MirakelQueryBuilder ; } 
public de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ( ) { if ( ! de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> . isPresent ( ) ) { de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( java.lang.String , getName ( ) ) ; } return this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ; } 
public void void ( final @ NonNull Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ) { this . java.lang.String = java.lang.String ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ) ; this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ; } 
public de.azapps.mirakel.model.list.ListMirakel de.azapps.mirakel.model.list.ListMirakel ( ) { if ( ! this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . isPresent ( ) ) { return ListMirakel . safeFirst ( ) ; } else { return this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . get ( ) ; } } 
public void void ( @ NonNull final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) { this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ; } 
@ NonNull public de.azapps.mirakel.model.list.Optional<java.lang.Integer> < java.lang.Integer > de.azapps.mirakel.model.list.Optional<java.lang.Integer> ( ) { return de.azapps.mirakel.model.list.Optional<java.lang.Integer> ; } 
public void void ( @ NonNull final Optional < java.lang.Integer > de.azapps.mirakel.model.list.Optional<java.lang.Integer> ) { this . de.azapps.mirakel.model.list.Optional<java.lang.Integer> = de.azapps.mirakel.model.list.Optional<java.lang.Integer> ; } 
void ( final long long , @ NonNull final java.lang.String java.lang.String , final @ NonNull Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> , final boolean boolean , @ NonNull final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> , final @ NonNull Optional < java.lang.Integer > de.azapps.mirakel.model.list.Optional<java.lang.Integer> , final SORT_BY de.azapps.mirakel.model.list.SORT_BY , final @ NonNull DateTime de.azapps.mirakel.model.list.DateTime , final @ NonNull DateTime de.azapps.mirakel.model.list.DateTime , final SYNC_STATE de.azapps.mirakel.model.list.SYNC_STATE , final int int , final int int , final int int , @ NonNull final Optional < Uri > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ) { super( long , java.lang.String , de.azapps.mirakel.model.list.SORT_BY , de.azapps.mirakel.model.list.DateTime , de.azapps.mirakel.model.list.DateTime , de.azapps.mirakel.model.list.SYNC_STATE , int , int , int , AccountMirakel . getLocal ( ) , de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> , true ); this . boolean = boolean ; this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ; this . java.lang.String = java.lang.String ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ) ; this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ; this . de.azapps.mirakel.model.list.Optional<java.lang.Integer> = de.azapps.mirakel.model.list.Optional<java.lang.Integer> ; } 
@ java.lang.Override @ NonNull public java.util.List<de.azapps.mirakel.model.list.Task> < Task > java.util.List<de.azapps.mirakel.model.list.Task> ( ) { return java.util.List<de.azapps.mirakel.model.list.Task> ( false ) ; } 
@ java.lang.Override @ NonNull public java.util.List<de.azapps.mirakel.model.list.Task> < Task > java.util.List<de.azapps.mirakel.model.list.Task> ( final boolean boolean ) { if ( boolean ) { return addSortBy ( de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) ) . getList ( Task .class ) ; } else { return addSortBy ( de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) . and ( Task . DONE , Operation . EQ , false ) ) . getList ( Task .class ) ; } } 
public static de.azapps.mirakel.model.list.SpecialList de.azapps.mirakel.model.list.SpecialList ( final java.lang.String java.lang.String , final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> , final boolean boolean ) throws de.azapps.mirakel.model.list.ListAlreadyExistsException { final DateTime de.azapps.mirakel.model.list.DateTime = new DateTime ( ) ; final de.azapps.mirakel.model.list.SpecialList de.azapps.mirakel.model.list.SpecialList = new de.azapps.mirakel.model.list.SpecialList ( ModelBase . INVALID_ID , java.lang.String , de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> , boolean , Optional .< ListMirakel > absent ( ) , Optional .< java.lang.Integer > absent ( ) , SORT_BY . OPT , de.azapps.mirakel.model.list.DateTime , de.azapps.mirakel.model.list.DateTime , SYNC_STATE . ADD , NUMBER , NUMBER , NUMBER , Optional .< Uri > absent ( ) ) ; return ( de.azapps.mirakel.model.list.SpecialList ) de.azapps.mirakel.model.list.SpecialList . create ( ) ; } 
public static java.lang.String java.lang.String ( final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ) { if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> . isPresent ( ) ) { return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> . get ( ) . serialize ( ) ; } else { return STRING ; } } 
private static de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( final @ NonNull Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ) { final MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ; if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> . isPresent ( ) ) { de.azapps.mirakel.model.list.MirakelQueryBuilder = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> . get ( ) . getWhereQueryBuilder ( context ) ; } else { de.azapps.mirakel.model.list.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) ; } Log . d ( java.lang.String , STRING + de.azapps.mirakel.model.list.MirakelQueryBuilder . getSelection ( ) + STRING ) ; return Task . addBasicFiler ( de.azapps.mirakel.model.list.MirakelQueryBuilder ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.ContentValues de.azapps.mirakel.model.list.ContentValues ( ) { final ContentValues de.azapps.mirakel.model.list.ContentValues = super. getContentValues ( ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , boolean ( ) ? NUMBER : NUMBER ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , java.lang.String ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , transformOrNull ( this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> , new Function < ListMirakel , java.lang.Long > ( ) { @ java.lang.Override public java.lang.Long java.lang.Long ( ListMirakel de.azapps.mirakel.model.list.ListMirakel ) { return de.azapps.mirakel.model.list.ListMirakel . getId ( ) ; } } ) ) ; de.azapps.mirakel.model.list.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.list.Optional<java.lang.Integer> . orNull ( ) ) ; return de.azapps.mirakel.model.list.ContentValues ; } 
@ java.lang.Override public java.lang.Long java.lang.Long ( ListMirakel de.azapps.mirakel.model.list.ListMirakel ) { return de.azapps.mirakel.model.list.ListMirakel . getId ( ) ; } 
public static java.util.List<de.azapps.mirakel.model.list.SpecialList> < de.azapps.mirakel.model.list.SpecialList > java.util.List<de.azapps.mirakel.model.list.SpecialList> ( ) { return java.util.List<de.azapps.mirakel.model.list.SpecialList> ( false ) ; } 
public static java.util.List<de.azapps.mirakel.model.list.SpecialList> < de.azapps.mirakel.model.list.SpecialList > java.util.List<de.azapps.mirakel.model.list.SpecialList> ( final boolean boolean ) { MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) . and ( ListMirakel . IS_SPECIAL , Operation . EQ , true ) . sort ( LFT , Sorting . ASC ) ; if ( ! boolean ) { de.azapps.mirakel.model.list.MirakelQueryBuilder . and ( java.lang.String , Operation . EQ , true ) ; } return de.azapps.mirakel.model.list.MirakelQueryBuilder . getList ( de.azapps.mirakel.model.list.SpecialList .class ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.list.MirakelQueryBuilder de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) { return addSortBy ( de.azapps.mirakel.model.list.MirakelQueryBuilder ( ) ) ; } 
public static de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> < de.azapps.mirakel.model.list.SpecialList > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> ( ) { return new MirakelQueryBuilder ( context ) . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . DELETE . toInt ( ) ) . and ( IS_SPECIAL , Operation . EQ , true ) . sort ( LFT , Sorting . ASC ) . get ( de.azapps.mirakel.model.list.SpecialList .class ) ; } 
public static de.azapps.mirakel.model.list.SpecialList de.azapps.mirakel.model.list.SpecialList ( ) { Optional < de.azapps.mirakel.model.list.SpecialList > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> = de.azapps.mirakel.model.list.SpecialList . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> ( ) ; if ( ! de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> . isPresent ( ) ) { try { de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> = fromNullable ( de.azapps.mirakel.model.list.SpecialList . de.azapps.mirakel.model.list.SpecialList ( context . getString ( R . string . list_all ) , Optional .< SpecialListsBaseProperty > absent ( ) , true ) ) ; } catch ( final ListAlreadyExistsException de.azapps.mirakel.model.list.ListAlreadyExistsException ) { throw new java.lang.RuntimeException ( de.azapps.mirakel.model.list.ListAlreadyExistsException ) ; } if ( ListMirakel . count ( ) == NUMBER ) { ListMirakel . safeFirst ( ) ; } de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> . get ( ) . save ( false ) ; } return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialList> . get ( ) ; } 
public void ( final @ NonNull CursorGetter de.azapps.mirakel.model.list.CursorGetter ) { super( de.azapps.mirakel.model.list.CursorGetter ); this . java.lang.String = de.azapps.mirakel.model.list.CursorGetter . getString ( java.lang.String ) ; this . boolean = de.azapps.mirakel.model.list.CursorGetter . getBoolean ( java.lang.String ) ; this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.CursorGetter . getLong ( java.lang.String ) ) ; this . de.azapps.mirakel.model.list.Optional<java.lang.Integer> = de.azapps.mirakel.model.list.CursorGetter . getOptional ( java.lang.String , java.lang.Integer .class ) ; } 
@ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( ! super. boolean ( java.lang.Object ) ) { return false ; } if ( ! ( java.lang.Object instanceof de.azapps.mirakel.model.list.SpecialList ) ) { return false ; } final de.azapps.mirakel.model.list.SpecialList de.azapps.mirakel.model.list.SpecialList = ( de.azapps.mirakel.model.list.SpecialList ) java.lang.Object ; if ( de.azapps.mirakel.model.list.SpecialList . boolean != this . boolean ) { return false ; } if ( ! Objects . equal ( de.azapps.mirakel.model.list.SpecialList . java.lang.String , this . java.lang.String ) ) { return false ; } if ( ! Objects . equal ( de.azapps.mirakel.model.list.SpecialList . de.azapps.mirakel.model.list.Optional<java.lang.Integer> , this . de.azapps.mirakel.model.list.Optional<java.lang.Integer> ) ) { return false ; } if ( ! Objects . equal ( de.azapps.mirakel.model.list.SpecialList . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> , this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) ) { return false ; } return true ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.list.Parcel , final int int ) { super. writeToParcel ( de.azapps.mirakel.model.list.Parcel , int ) ; de.azapps.mirakel.model.list.Parcel . writeByte ( boolean ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.list.Parcel . writeParcelable ( this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> . orNull ( ) , NUMBER ) ; de.azapps.mirakel.model.list.Parcel . writeInt ( this . de.azapps.mirakel.model.list.Optional<java.lang.Integer> . or ( int ) ) ; de.azapps.mirakel.model.list.Parcel . writeString ( this . java.lang.String ) ; } 
private void ( final Parcel de.azapps.mirakel.model.list.Parcel ) { super( de.azapps.mirakel.model.list.Parcel ); this . boolean = de.azapps.mirakel.model.list.Parcel . readByte ( ) != NUMBER ; this . de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = fromNullable ( ( ListMirakel ) de.azapps.mirakel.model.list.Parcel . readParcelable ( ListMirakel .class . java.lang.ClassLoader ( ) ) ) ; final int int = de.azapps.mirakel.model.list.Parcel . readInt ( ) ; this . de.azapps.mirakel.model.list.Optional<java.lang.Integer> = ( int == int ) ? Optional .< java.lang.Integer > absent ( ) : Optional . of ( int ) ; this . java.lang.String = de.azapps.mirakel.model.list.Parcel . readString ( ) ; } 
public de.azapps.mirakel.model.list.SpecialList de.azapps.mirakel.model.list.SpecialList ( final Parcel de.azapps.mirakel.model.list.Parcel ) { return new de.azapps.mirakel.model.list.SpecialList ( de.azapps.mirakel.model.list.Parcel ) ; } 
public de.azapps.mirakel.model.list.SpecialList [] de.azapps.mirakel.model.list.SpecialList[] ( final int int ) { return new de.azapps.mirakel.model.list.SpecialList [ int ] ; } 
@ NonNull public static de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ( final @ NonNull java.lang.String java.lang.String , final java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { if ( ( java.lang.String == null ) || TextUtils . isEmpty ( java.lang.String . java.lang.String ( ) ) ) { return absent ( ) ; } try { final JsonElement de.azapps.mirakel.model.list.JsonElement = new JsonParser ( ) . parse ( java.lang.String ) ; return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ( de.azapps.mirakel.model.list.JsonElement , NUMBER ) ; } catch ( final JsonSyntaxException de.azapps.mirakel.model.list.JsonSyntaxException ) { Log . wtf ( java.lang.String , STRING + java.lang.String , de.azapps.mirakel.model.list.JsonSyntaxException ) ; ErrorReporter . report ( ErrorType . SPECIAL_LIST_JSON_INVALID , java.lang.String ) ; return absent ( ) ; } } 
@ NonNull private static de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ( final @ NonNull JsonElement de.azapps.mirakel.model.list.JsonElement , final int int ) throws java.lang.IllegalArgumentException { if ( de.azapps.mirakel.model.list.JsonElement . isJsonObject ( ) ) { return de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ( de.azapps.mirakel.model.list.JsonElement ) ; } else if ( de.azapps.mirakel.model.list.JsonElement . isJsonArray ( ) ) { final java.util.List<de.azapps.mirakel.model.list.SpecialListsBaseProperty> < SpecialListsBaseProperty > java.util.List<de.azapps.mirakel.model.list.SpecialListsBaseProperty> = new java.util.ArrayList <> ( de.azapps.mirakel.model.list.JsonElement . getAsJsonArray ( ) . size ( ) ) ; for ( final JsonElement de.azapps.mirakel.model.list.JsonElement : de.azapps.mirakel.model.list.JsonElement . getAsJsonArray ( ) ) { final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> = de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ( de.azapps.mirakel.model.list.JsonElement , int + NUMBER ) ; if ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> . isPresent ( ) ) { java.util.List<de.azapps.mirakel.model.list.SpecialListsBaseProperty> . add ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> . get ( ) ) ; } } return of ( ( SpecialListsBaseProperty ) new SpecialListsConjunctionList ( ( ( int % NUMBER ) == NUMBER ) ? SpecialListsConjunctionList . CONJUNCTION . AND : SpecialListsConjunctionList . CONJUNCTION . OR , java.util.List<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ) ) ; } else if ( de.azapps.mirakel.model.list.JsonElement . isJsonNull ( ) ) { return absent ( ) ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
@ NonNull private static de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> < SpecialListsBaseProperty > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.SpecialListsBaseProperty> ( final @ NonNull JsonElement de.azapps.mirakel.model.list.JsonElement ) { final JsonObject de.azapps.mirakel.model.list.JsonObject = de.azapps.mirakel.model.list.JsonElement . getAsJsonObject ( ) ; final java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> < ? extends SpecialListsBaseProperty > java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> ; final java.lang.String java.lang.String ; if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . LIST_ID ) ) { java.lang.String = Task . LIST_ID ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsListProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( ModelBase . NAME ) ) { java.lang.String = Task . NAME ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsNameProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . PRIORITY ) ) { java.lang.String = Task . PRIORITY ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsPriorityProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . DONE ) ) { java.lang.String = Task . DONE ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsDoneProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . DUE ) ) { java.lang.String = Task . DUE ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsDueProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . CONTENT ) ) { java.lang.String = Task . CONTENT ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsContentProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . REMINDER ) ) { java.lang.String = Task . REMINDER ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsReminderProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . PROGRESS ) ) { java.lang.String = Task . PROGRESS ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsProgressProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . SUBTASK_TABLE ) ) { java.lang.String = Task . SUBTASK_TABLE ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsSubtaskProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( FileMirakel . TABLE ) ) { java.lang.String = FileMirakel . TABLE ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsFileProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Tag . TABLE ) ) { java.lang.String = Tag . TABLE ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsTagProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( ListMirakel . TABLE + '.' + ListMirakel . NAME ) ) { java.lang.String = ListMirakel . TABLE + '.' + ListMirakel . NAME ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsListNameProperty .class ; } else if ( de.azapps.mirakel.model.list.JsonObject . has ( Task . DUE + STRING ) ) { java.lang.String = Task . DUE + STRING ; java.lang.Class<? extends de.azapps.mirakel.model.list.SpecialListsBaseProperty> = SpecialListsDueExistsProperty .class ; } else if ( STRING . boolean ( de.azapps.mirakel.model.list.JsonElement . toString ( ) ) ) { return absent ( ) ; } else { Log . wtf ( java.lang.String , STRING + de.azapps.mirakel.model.list.JsonObject . toString ( ) ) ; Log . v ( java.lang.String , STRING ) ; throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.list.JsonObject . toString ( ) ) ; } final SpecialListsBaseProperty de.azapps.mirakel.model.list.SpecialListsBaseProperty = de.azapps.mirakel.model.list.Gson . fromJson ( de.azapps.mirakel.model.list.JsonObject . get ( java.lang.String ) , java.lang.Class<> ) ; return of ( de.azapps.mirakel.model.list.SpecialListsBaseProperty ) ; } 
abstract void void ( ) 
abstract void void ( long long ); 
public void ( final @ NonNull Handler de.azapps.mirakel.model.Handler , final @ NonNull Context de.azapps.mirakel.model.Context , final @ NonNull java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> < Uri , de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack > java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> ) { super( de.azapps.mirakel.model.Handler ); final ContentResolver de.azapps.mirakel.model.ContentResolver = de.azapps.mirakel.model.Context . getContentResolver ( ) ; for ( final Uri de.azapps.mirakel.model.Uri : java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> . keySet ( ) ) { de.azapps.mirakel.model.ContentResolver . registerContentObserver ( de.azapps.mirakel.model.Uri , true , this ) ; } java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> = java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> ; } 
public void ( final @ NonNull Handler de.azapps.mirakel.model.Handler , final @ NonNull Context de.azapps.mirakel.model.Context , final @ NonNull Uri de.azapps.mirakel.model.Uri , final @ NonNull de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack ) { super( de.azapps.mirakel.model.Handler ); final ContentResolver de.azapps.mirakel.model.ContentResolver = de.azapps.mirakel.model.Context . getContentResolver ( ) ; de.azapps.mirakel.model.ContentResolver . registerContentObserver ( de.azapps.mirakel.model.Uri , true , this ) ; java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> = new java.util.HashMap <> ( NUMBER ) ; java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> . put ( de.azapps.mirakel.model.Uri , de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack ) ; } 
public void void ( final @ NonNull Context de.azapps.mirakel.model.Context ) { de.azapps.mirakel.model.Context . getContentResolver ( ) . unregisterContentObserver ( this ) ; } 
@ java.lang.Override public void void ( final boolean boolean ) { for ( final de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack : java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> . values ( ) ) { if ( de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack != null ) { de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack . void ( ) ; } } } 
@ java.lang.Override public void void ( final boolean boolean , final Uri de.azapps.mirakel.model.Uri ) { Optional < java.lang.Long > de.azapps.mirakel.model.Optional<java.lang.Long> = Optional . absent ( ) ; if ( de.azapps.mirakel.model.Uri . isHierarchical ( ) ) { try { final long long = ContentUris . parseId ( de.azapps.mirakel.model.Uri ) ; if ( long != - NUMBER ) { de.azapps.mirakel.model.Optional<java.lang.Long> = Optional . of ( long ) ; } } catch ( final java.lang.NumberFormatException java.lang.NumberFormatException ) { Log . d ( java.lang.String , STRING , java.lang.NumberFormatException ) ; } } if ( java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> . containsKey ( de.azapps.mirakel.model.Uri ) ) { final de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack = java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> . get ( de.azapps.mirakel.model.Uri ) ; if ( de.azapps.mirakel.model.Optional<java.lang.Long> . isPresent ( ) && ( de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack != null ) ) { de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack . void ( de.azapps.mirakel.model.Optional<java.lang.Long> . get ( ) ) ; } else { java.util.Map<de.azapps.mirakel.model.Uri,de.azapps.mirakel.model.MirakelContentObserver.ObserverCallBack> . get ( de.azapps.mirakel.model.Uri ) . handleChange ( ) ; } } else { Log . wtf ( java.lang.String , STRING + de.azapps.mirakel.model.Uri . toString ( ) ) ; } } 
public void ( ) { super(); } 
public void ( java.lang.String java.lang.String ) { super( java.lang.String ); } 
public void ( long long ) { super( STRING + long ); } 
@ java.lang.Override public boolean boolean ( Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.String java.lang.String = de.azapps.mirakel.model.provider.Uri . getQueryParameter ( TaskContract . CALLER_IS_SYNCADAPTER ) ; return java.lang.String != null && ! STRING . boolean ( java.lang.String ) ; } 
public boolean boolean ( Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.String java.lang.String = de.azapps.mirakel.model.provider.Uri . getQueryParameter ( TaskContract . LOAD_PROPERTIES ) ; return java.lang.String != null && ! STRING . boolean ( java.lang.String ) ; } 
protected java.lang.String java.lang.String ( Uri de.azapps.mirakel.model.provider.Uri ) { return de.azapps.mirakel.model.provider.Uri . getQueryParameter ( TaskContract . ACCOUNT_NAME ) ; } 
protected java.lang.String java.lang.String ( Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.String java.lang.String = de.azapps.mirakel.model.provider.Uri . getQueryParameter ( TaskContract . ACCOUNT_TYPE ) ; return java.lang.String ; } 
public static java.lang.String java.lang.String ( Uri de.azapps.mirakel.model.provider.Uri ) { return de.azapps.mirakel.model.provider.Uri . getPathSegments ( ) . get ( NUMBER ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( NUMBER ) ; return java.lang.StringBuilder ( java.lang.StringBuilder , de.azapps.mirakel.model.provider.Uri ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder , Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; if ( java.lang.String != null || java.lang.String != null ) { if ( java.lang.String != null ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( TaskListSyncColumns . ACCOUNT_NAME ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; DatabaseUtils . appendEscapedSQLString ( java.lang.StringBuilder , java.lang.String ) ; } if ( java.lang.String != null ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( TaskListSyncColumns . ACCOUNT_TYPE ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; DatabaseUtils . appendEscapedSQLString ( java.lang.StringBuilder , java.lang.String ) ; } } return java.lang.StringBuilder ; } 
private java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder , java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; return java.lang.StringBuilder ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( NUMBER ) ; return java.lang.StringBuilder ( java.lang.StringBuilder , de.azapps.mirakel.model.provider.Uri ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder , Uri de.azapps.mirakel.model.provider.Uri ) { return java.lang.StringBuilder ( java.lang.StringBuilder , java.lang.String ( de.azapps.mirakel.model.provider.Uri ) , TaskListColumns . _ID ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( NUMBER ) ; return java.lang.StringBuilder ( java.lang.StringBuilder , de.azapps.mirakel.model.provider.Uri ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( java.lang.String java.lang.String ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( NUMBER ) ; return java.lang.StringBuilder ( java.lang.StringBuilder , java.lang.String ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder , Uri de.azapps.mirakel.model.provider.Uri ) { return java.lang.StringBuilder ( java.lang.StringBuilder , java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder , java.lang.String java.lang.String ) { return java.lang.StringBuilder ( java.lang.StringBuilder , java.lang.String , Instances . TASK_ID ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( NUMBER ) ; return java.lang.StringBuilder ( java.lang.StringBuilder , de.azapps.mirakel.model.provider.Uri ) ; } 
protected java.lang.StringBuilder java.lang.StringBuilder ( java.lang.StringBuilder java.lang.StringBuilder , Uri de.azapps.mirakel.model.provider.Uri ) { return java.lang.StringBuilder ( java.lang.StringBuilder , java.lang.String ( de.azapps.mirakel.model.provider.Uri ) , PropertyColumns . PROPERTY_ID ) ; } 
protected void void ( java.lang.StringBuilder java.lang.StringBuilder , java.lang.String java.lang.String , Uri de.azapps.mirakel.model.provider.Uri ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; DatabaseUtils . appendEscapedSQLString ( java.lang.StringBuilder , java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ) ; } 
protected java.lang.String java.lang.String ( java.lang.StringBuilder java.lang.StringBuilder , java.lang.String java.lang.String ) { if ( java.lang.String != null ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( STRING ) ; } } return java.lang.StringBuilder . java.lang.String ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.provider.Cursor de.azapps.mirakel.model.provider.Cursor ( Uri de.azapps.mirakel.model.provider.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) { final ContentResolver de.azapps.mirakel.model.provider.ContentResolver = CaldavDatabaseHelper . getContentProvider ( getContext ( ) ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( java.lang.String == null ? STRING : java.lang.String ) ; if ( java.lang.StringBuilder . int ( ) == NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } boolean boolean = boolean ( de.azapps.mirakel.model.provider.Uri ) ; Uri de.azapps.mirakel.model.provider.Uri ; switch ( de.azapps.mirakel.model.provider.UriMatcher . match ( de.azapps.mirakel.model.provider.Uri ) ) { case int : java.lang.StringBuilder ( java.lang.StringBuilder , de.azapps.mirakel.model.provider.Uri ) ; de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getListsUri ( ) ; if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = TaskContract . TaskLists . DEFAULT_SORT_ORDER ; } break; case int : java.lang.StringBuilder ( java.lang.StringBuilder , de.azapps.mirakel.model.provider.Uri ) ; de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getListsUri ( ) ; void ( java.lang.StringBuilder , TaskListColumns . _ID , de.azapps.mirakel.model.provider.Uri ) ; if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = TaskContract . TaskLists . DEFAULT_SORT_ORDER ; } break; case int : if ( boolean ( de.azapps.mirakel.model.provider.Uri ) ) { de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getTasksUri ( true ) ; } else { de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getTasksUri ( false ) ; } if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Tasks . _DELETED ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = TaskContract . Tasks . DEFAULT_SORT_ORDER ; } break; case int : if ( boolean ( de.azapps.mirakel.model.provider.Uri ) ) { de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getTasksUri ( true ) ; } else { de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getTasksUri ( false ) ; } void ( java.lang.StringBuilder , TaskColumns . _ID , de.azapps.mirakel.model.provider.Uri ) ; if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Tasks . _DELETED ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = TaskContract . Tasks . DEFAULT_SORT_ORDER ; } break; case int : if ( boolean ( de.azapps.mirakel.model.provider.Uri ) ) { de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getInstancesUri ( true ) ; } else { de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getInstancesUri ( false ) ; } if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Tasks . _DELETED ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = TaskContract . Instances . DEFAULT_SORT_ORDER ; } break; case int : if ( boolean ( de.azapps.mirakel.model.provider.Uri ) ) { de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getInstancesUri ( true ) ; } else { de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getInstancesUri ( false ) ; } void ( java.lang.StringBuilder , Instances . _ID , de.azapps.mirakel.model.provider.Uri ) ; if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Tasks . _DELETED ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = TaskContract . Instances . DEFAULT_SORT_ORDER ; } break; case int : java.lang.StringBuilder ( java.lang.StringBuilder , de.azapps.mirakel.model.provider.Uri ) ; de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getCategoriesUri ( ) ; if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = TaskContract . Categories . DEFAULT_SORT_ORDER ; } break; case int : java.lang.StringBuilder ( java.lang.StringBuilder , de.azapps.mirakel.model.provider.Uri ) ; de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getCategoriesUri ( ) ; void ( java.lang.StringBuilder , CategoriesColumns . _ID , de.azapps.mirakel.model.provider.Uri ) ; if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = TaskContract . Categories . DEFAULT_SORT_ORDER ; } break; case int : de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getPropertiesUri ( ) ; break; case int : de.azapps.mirakel.model.provider.Uri = CaldavDatabaseHelper . getPropertiesUri ( ) ; void ( java.lang.StringBuilder , PropertyColumns . PROPERTY_ID , de.azapps.mirakel.model.provider.Uri ) ; break; default: throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } return de.azapps.mirakel.model.provider.ContentResolver . query ( de.azapps.mirakel.model.provider.Uri , java.lang.String[] , java.lang.StringBuilder . java.lang.String ( ) , java.lang.String[] , java.lang.String ) ; } 
@ java.lang.Override public int int ( Uri de.azapps.mirakel.model.provider.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean ) { final ContentResolver de.azapps.mirakel.model.provider.ContentResolver = CaldavDatabaseHelper . getContentProvider ( getContext ( ) ) ; int int = NUMBER ; java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; switch ( de.azapps.mirakel.model.provider.UriMatcher . match ( de.azapps.mirakel.model.provider.Uri ) ) { case int : java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; case int : if ( boolean ) { if ( TextUtils . isEmpty ( java.lang.String ) || TextUtils . isEmpty ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; int = de.azapps.mirakel.model.provider.ContentResolver . delete ( CaldavDatabaseHelper . getListsUri ( ) , java.lang.String , java.lang.String[] ) ; } else { throw new java.lang.UnsupportedOperationException ( STRING ) ; } break; case int : java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; case int : if ( boolean ) { if ( TextUtils . isEmpty ( java.lang.String ) || TextUtils . isEmpty ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } int = de.azapps.mirakel.model.provider.ContentResolver . delete ( CaldavDatabaseHelper . getTasksUri ( false ) , java.lang.String , java.lang.String[] ) ; } else { ContentValues de.azapps.mirakel.model.provider.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.provider.ContentValues . put ( TaskSyncColumns . _DELETED , true ) ; de.azapps.mirakel.model.provider.ContentValues . put ( CommonSyncColumns . _DIRTY , true ) ; int = de.azapps.mirakel.model.provider.ContentResolver . update ( CaldavDatabaseHelper . getTasksUri ( false ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; } break; case int : java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; case int : int = de.azapps.mirakel.model.provider.ContentResolver . delete ( CaldavDatabaseHelper . getAlarmsUri ( ) , java.lang.String , java.lang.String[] ) ; break; case int : java.lang.String [] java.lang.String[] = { Properties . MIMETYPE } ; java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; Cursor de.azapps.mirakel.model.provider.Cursor = de.azapps.mirakel.model.provider.ContentResolver . query ( CaldavDatabaseHelper . getPropertiesUri ( ) , java.lang.String[] , java.lang.String , java.lang.String[] , null ) ; java.lang.String java.lang.String = null ; try { if ( de.azapps.mirakel.model.provider.Cursor . moveToFirst ( ) ) { java.lang.String = de.azapps.mirakel.model.provider.Cursor . getString ( NUMBER ) ; } else if ( new MirakelQueryBuilder ( getContext ( ) ) . and ( ModelBase . ID , Operation . EQ , ContentUris . parseId ( de.azapps.mirakel.model.provider.Uri ) ) . count ( Tag . URI ) > NUMBER ) { java.lang.String = TaskContract . Property . Category . CONTENT_ITEM_TYPE ; } } finally { de.azapps.mirakel.model.provider.Cursor . close ( ) ; } if ( java.lang.String != null ) { PropertyHandler de.azapps.mirakel.model.provider.PropertyHandler = PropertyHandlerFactory . create ( java.lang.String ) ; int = de.azapps.mirakel.model.provider.PropertyHandler . delete ( de.azapps.mirakel.model.provider.ContentResolver , java.lang.String , java.lang.String[] , boolean ) ; } break; default: throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } if ( int > NUMBER ) { postNotifyUri ( de.azapps.mirakel.model.provider.Uri ) ; postNotifyUri ( Instances . CONTENT_URI ) ; postNotifyUri ( Tasks . CONTENT_URI ) ; } return int ; } 
@ java.lang.Override public de.azapps.mirakel.model.provider.Uri de.azapps.mirakel.model.provider.Uri ( Uri de.azapps.mirakel.model.provider.Uri , ContentValues de.azapps.mirakel.model.provider.ContentValues , boolean boolean ) { final ContentResolver de.azapps.mirakel.model.provider.ContentResolver = CaldavDatabaseHelper . getContentProvider ( getContext ( ) ) ; Uri de.azapps.mirakel.model.provider.Uri ; java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; switch ( de.azapps.mirakel.model.provider.UriMatcher . match ( de.azapps.mirakel.model.provider.Uri ) ) { case int : if ( boolean ) { void ( de.azapps.mirakel.model.provider.ContentValues , true , boolean ) ; if ( TextUtils . isEmpty ( java.lang.String ) || TextUtils . isEmpty ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } de.azapps.mirakel.model.provider.ContentValues . put ( TaskContract . ACCOUNT_NAME , java.lang.String ) ; de.azapps.mirakel.model.provider.ContentValues . put ( TaskContract . ACCOUNT_TYPE , java.lang.String ) ; de.azapps.mirakel.model.provider.Uri = de.azapps.mirakel.model.provider.ContentResolver . insert ( CaldavDatabaseHelper . getListsUri ( ) , de.azapps.mirakel.model.provider.ContentValues ) ; } else { throw new java.lang.UnsupportedOperationException ( STRING ) ; } break; case int : void ( de.azapps.mirakel.model.provider.ContentResolver , de.azapps.mirakel.model.provider.ContentValues , true , boolean ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.ContentValues . put ( CommonSyncColumns . _DIRTY , true ) ; long long = java.lang.System . long ( ) ; de.azapps.mirakel.model.provider.ContentValues . put ( TaskColumns . CREATED , long ) ; de.azapps.mirakel.model.provider.ContentValues . put ( TaskColumns . LAST_MODIFIED , long ) ; } de.azapps.mirakel.model.provider.Uri = de.azapps.mirakel.model.provider.ContentResolver . insert ( CaldavDatabaseHelper . getTasksUri ( false ) , de.azapps.mirakel.model.provider.ContentValues ) ; void ( de.azapps.mirakel.model.provider.ContentResolver , de.azapps.mirakel.model.provider.Uri , de.azapps.mirakel.model.provider.ContentValues , de.azapps.mirakel.model.provider.Uri ) ; break; case int : PropertyHandler de.azapps.mirakel.model.provider.PropertyHandler = PropertyHandlerFactory . create ( de.azapps.mirakel.model.provider.ContentValues . getAsString ( Properties . MIMETYPE ) ) ; de.azapps.mirakel.model.provider.Uri = de.azapps.mirakel.model.provider.PropertyHandler . insert ( de.azapps.mirakel.model.provider.ContentResolver , de.azapps.mirakel.model.provider.ContentValues , boolean , getContext ( ) ) ; break; default: throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } if ( de.azapps.mirakel.model.provider.Uri != null ) { return de.azapps.mirakel.model.provider.Uri ; } throw new SQLException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } 
@ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) @ java.lang.Override public int int ( Uri de.azapps.mirakel.model.provider.Uri , ContentValues de.azapps.mirakel.model.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean ) { final ContentResolver de.azapps.mirakel.model.provider.ContentResolver = CaldavDatabaseHelper . getContentProvider ( getContext ( ) ) ; int int = NUMBER ; switch ( de.azapps.mirakel.model.provider.UriMatcher . match ( de.azapps.mirakel.model.provider.Uri ) ) { case int : void ( de.azapps.mirakel.model.provider.ContentValues , false , boolean ) ; int = de.azapps.mirakel.model.provider.ContentResolver . update ( CaldavDatabaseHelper . getListsUri ( ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; break; case int : java.lang.String java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; void ( de.azapps.mirakel.model.provider.ContentValues , false , boolean ) ; int = de.azapps.mirakel.model.provider.ContentResolver . update ( CaldavDatabaseHelper . getListsUri ( ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; break; case int : void ( de.azapps.mirakel.model.provider.ContentResolver , de.azapps.mirakel.model.provider.ContentValues , false , boolean ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.ContentValues . put ( CommonSyncColumns . _DIRTY , true ) ; de.azapps.mirakel.model.provider.ContentValues . put ( TaskColumns . LAST_MODIFIED , java.lang.System . long ( ) ) ; } int = de.azapps.mirakel.model.provider.ContentResolver . update ( CaldavDatabaseHelper . getTasksUri ( false ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; void ( de.azapps.mirakel.model.provider.ContentResolver , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; break; case int : java.lang.String java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; void ( de.azapps.mirakel.model.provider.ContentResolver , de.azapps.mirakel.model.provider.ContentValues , false , boolean ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.ContentValues . put ( CommonSyncColumns . _DIRTY , true ) ; de.azapps.mirakel.model.provider.ContentValues . put ( TaskColumns . LAST_MODIFIED , java.lang.System . long ( ) ) ; } int = de.azapps.mirakel.model.provider.ContentResolver . update ( CaldavDatabaseHelper . getTasksUri ( false ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) . toString ( ) ; void ( de.azapps.mirakel.model.provider.ContentResolver , java.lang.String ( de.azapps.mirakel.model.provider.Uri ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; break; case int : if ( ! de.azapps.mirakel.model.provider.ContentValues . containsKey ( Properties . PROPERTY_ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } java.lang.String java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; Cursor de.azapps.mirakel.model.provider.Cursor = de.azapps.mirakel.model.provider.ContentResolver . query ( CaldavDatabaseHelper . getPropertiesUri ( ) , new java.lang.String [] { Properties . MIMETYPE } , de.azapps.mirakel.model.provider.ContentValues . getAsString ( Properties . PROPERTY_ID ) + STRING + Properties . PROPERTY_ID , null , null ) ; try { if ( de.azapps.mirakel.model.provider.Cursor . moveToFirst ( ) ) { PropertyHandler de.azapps.mirakel.model.provider.PropertyHandler = PropertyHandlerFactory . create ( de.azapps.mirakel.model.provider.Cursor . getString ( NUMBER ) ) ; int = de.azapps.mirakel.model.provider.PropertyHandler . update ( de.azapps.mirakel.model.provider.ContentResolver , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] , boolean , getContext ( ) ) ; if ( int > NUMBER ) { postNotifyUri ( Tasks . CONTENT_URI ) ; postNotifyUri ( Instances . CONTENT_URI ) ; } } } finally { de.azapps.mirakel.model.provider.Cursor . close ( ) ; } break; case int : java.lang.String java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; void ( de.azapps.mirakel.model.provider.ContentValues , false , boolean ) ; int = de.azapps.mirakel.model.provider.ContentResolver . update ( CaldavDatabaseHelper . getCategoriesUri ( ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; break; case int : java.lang.String java.lang.String = java.lang.String ( java.lang.StringBuilder ( de.azapps.mirakel.model.provider.Uri ) , java.lang.String ) ; void ( de.azapps.mirakel.model.provider.ContentValues , false , boolean ) ; int = de.azapps.mirakel.model.provider.ContentResolver . update ( CaldavDatabaseHelper . getAlarmsUri ( ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; break; default: throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ; if ( android . os . Build . VERSION . SDK_INT < NUMBER ) { java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : de.azapps.mirakel.model.provider.ContentValues . valueSet ( ) ) { java.util.Set<java.lang.String> . boolean ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ) ; } } else { java.util.Set<java.lang.String> = de.azapps.mirakel.model.provider.ContentValues . keySet ( ) ; } if ( ! java.util.Set<java.lang.String> . boolean ( java.util.Set<java.lang.String> ) ) { postNotifyUri ( de.azapps.mirakel.model.provider.Uri ) ; } return int ; } 
private de.azapps.mirakel.model.provider.ContentValues de.azapps.mirakel.model.provider.ContentValues ( ContentValues de.azapps.mirakel.model.provider.ContentValues ) { ContentValues de.azapps.mirakel.model.provider.ContentValues = new ContentValues ( ) ; java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.ContentValues . getAsLong ( Tasks . DTSTART ) ; java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.ContentValues . getAsLong ( Tasks . DUE ) ; java.lang.String java.lang.String = de.azapps.mirakel.model.provider.ContentValues . getAsString ( Tasks . DURATION ) ; if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . DTSTART ) ) { de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_START , java.lang.Long ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . DUE ) ) { de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_DUE , java.lang.Long ) ; if ( java.lang.Long != null && java.lang.Long != null ) { java.lang.Long java.lang.Long = java.lang.Long - java.lang.Long ; de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_DURATION , java.lang.Long ) ; } else { de.azapps.mirakel.model.provider.ContentValues . putNull ( Instances . INSTANCE_DURATION ) ; } } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . DURATION ) && java.lang.Long == null ) { if ( java.lang.String != null && java.lang.Long != null ) { Duration de.azapps.mirakel.model.provider.Duration = new Duration ( java.lang.String ) ; Time de.azapps.mirakel.model.provider.Time = new Time ( de.azapps.mirakel.model.provider.ContentValues . getAsString ( Tasks . TZ ) ) ; java.lang.Boolean java.lang.Boolean = de.azapps.mirakel.model.provider.ContentValues . getAsBoolean ( Tasks . IS_ALLDAY ) ; if ( java.lang.Boolean != null ) { tStart . allDay = java.lang.Boolean ; } de.azapps.mirakel.model.provider.Time . set ( java.lang.Long ) ; java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.Duration . addTo ( de.azapps.mirakel.model.provider.Time ) . toMillis ( false ) ; de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_DUE , java.lang.Long ) ; java.lang.Long java.lang.Long = java.lang.Long - java.lang.Long ; de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_DURATION , java.lang.Long ) ; } else { de.azapps.mirakel.model.provider.ContentValues . putNull ( Instances . INSTANCE_DURATION ) ; de.azapps.mirakel.model.provider.ContentValues . putNull ( Instances . INSTANCE_DUE ) ; } } return de.azapps.mirakel.model.provider.ContentValues ; } 
private void void ( ContentResolver de.azapps.mirakel.model.provider.ContentResolver , Uri de.azapps.mirakel.model.provider.Uri , ContentValues de.azapps.mirakel.model.provider.ContentValues , Uri de.azapps.mirakel.model.provider.Uri ) { ContentValues de.azapps.mirakel.model.provider.ContentValues = de.azapps.mirakel.model.provider.ContentValues ( de.azapps.mirakel.model.provider.ContentValues ) ; de.azapps.mirakel.model.provider.ContentValues . put ( Instances . TASK_ID , java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ) ; java.lang.String java.lang.String = de.azapps.mirakel.model.provider.ContentValues . getAsString ( Instances . TZ ) ; boolean boolean = de.azapps.mirakel.model.provider.ContentValues . getAsInteger ( Tasks . IS_ALLDAY ) != null && de.azapps.mirakel.model.provider.ContentValues . getAsInteger ( Tasks . IS_ALLDAY ) > NUMBER ; java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.ContentValues . getAsLong ( Instances . INSTANCE_START ) ; if ( java.lang.Long != null ) { de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_START_SORTING , java.lang.Long + ( java.lang.String == null || boolean ? NUMBER : java.util.TimeZone . java.util.TimeZone ( java.lang.String ) . int ( java.lang.Long ) ) ) ; } java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.ContentValues . getAsLong ( Instances . INSTANCE_DUE ) ; if ( java.lang.Long != null ) { de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_DUE_SORTING , java.lang.Long + ( java.lang.String == null || boolean ? NUMBER : java.util.TimeZone . java.util.TimeZone ( java.lang.String ) . int ( java.lang.Long ) ) ) ; } de.azapps.mirakel.model.provider.ContentResolver . insert ( CaldavDatabaseHelper . getInstancesUri ( false ) , de.azapps.mirakel.model.provider.ContentValues ) ; postNotifyUri ( Instances . CONTENT_URI ) ; } 
private void void ( ContentResolver de.azapps.mirakel.model.provider.ContentResolver , ContentValues de.azapps.mirakel.model.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { Log . i ( STRING , STRING ) ; Cursor de.azapps.mirakel.model.provider.Cursor = de.azapps.mirakel.model.provider.ContentResolver . query ( CaldavDatabaseHelper . getTasksUri ( false ) , java.lang.String[] , java.lang.String , java.lang.String[] , null ) ; if ( de.azapps.mirakel.model.provider.Cursor != null ) { try { while ( de.azapps.mirakel.model.provider.Cursor . moveToNext ( ) ) { java.lang.String java.lang.String = de.azapps.mirakel.model.provider.Cursor . getString ( NUMBER ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.StringBuilder ( java.lang.String ) , java.lang.String ) . java.lang.String ( ) ; void ( de.azapps.mirakel.model.provider.ContentResolver , java.lang.String , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; } } finally { de.azapps.mirakel.model.provider.Cursor . close ( ) ; } } } 
private void void ( ContentResolver de.azapps.mirakel.model.provider.ContentResolver , java.lang.String java.lang.String , ContentValues de.azapps.mirakel.model.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { Log . i ( STRING , STRING ) ; ContentValues de.azapps.mirakel.model.provider.ContentValues = de.azapps.mirakel.model.provider.ContentValues ( de.azapps.mirakel.model.provider.ContentValues ) ; de.azapps.mirakel.model.provider.ContentValues . put ( Instances . TASK_ID , java.lang.String ) ; if ( de.azapps.mirakel.model.provider.ContentValues . getAsString ( Tasks . RRULE ) != null || de.azapps.mirakel.model.provider.ContentValues . getAsString ( Tasks . RDATE ) != null || de.azapps.mirakel.model.provider.ContentValues . getAsString ( Tasks . EXDATE ) != null ) { } java.lang.String java.lang.String = de.azapps.mirakel.model.provider.ContentValues . getAsString ( Instances . TZ ) ; java.lang.Integer java.lang.Integer = de.azapps.mirakel.model.provider.ContentValues . getAsInteger ( Tasks . IS_ALLDAY ) ; java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.ContentValues . getAsLong ( Instances . INSTANCE_START ) ; if ( java.lang.Long != null ) { de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_START_SORTING , java.lang.Long + ( java.lang.String == null || ( java.lang.Integer != null && java.lang.Integer > NUMBER ) ? NUMBER : java.util.TimeZone . java.util.TimeZone ( java.lang.String ) . int ( java.lang.Long ) ) ) ; } else if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . DTSTART ) ) { de.azapps.mirakel.model.provider.ContentValues . putNull ( Instances . INSTANCE_START_SORTING ) ; } java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.ContentValues . getAsLong ( Instances . INSTANCE_DUE ) ; if ( java.lang.Long != null ) { de.azapps.mirakel.model.provider.ContentValues . put ( Instances . INSTANCE_DUE_SORTING , java.lang.Long + ( java.lang.String == null || ( java.lang.Integer != null && java.lang.Integer > NUMBER ) ? NUMBER : java.util.TimeZone . java.util.TimeZone ( java.lang.String ) . int ( java.lang.Long ) ) ) ; } else if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . DUE ) ) { de.azapps.mirakel.model.provider.ContentValues . putNull ( Instances . INSTANCE_DUE_SORTING ) ; } de.azapps.mirakel.model.provider.ContentResolver . update ( CaldavDatabaseHelper . getInstancesUri ( false ) , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; postNotifyUri ( Instances . CONTENT_URI ) ; } 
private void void ( ContentValues de.azapps.mirakel.model.provider.ContentValues , boolean boolean , boolean boolean ) { if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . _ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( boolean != de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskListSyncColumns . ACCOUNT_NAME ) && ( ! boolean || de.azapps.mirakel.model.provider.ContentValues . get ( TaskListSyncColumns . ACCOUNT_NAME ) != null ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( boolean != de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskListSyncColumns . ACCOUNT_TYPE ) && ( ! boolean || de.azapps.mirakel.model.provider.ContentValues . get ( TaskListSyncColumns . ACCOUNT_TYPE ) != null ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskLists . LIST_COLOR ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskLists . _SYNC_ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskLists . SYNC_VERSION ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
private void void ( ContentResolver de.azapps.mirakel.model.provider.ContentResolver , ContentValues de.azapps.mirakel.model.provider.ContentValues , boolean boolean , boolean boolean ) { if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . _ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( boolean ) { java.lang.String [] java.lang.String[] = { de.azapps.mirakel.model.provider.ContentValues . getAsString ( TaskColumns . LIST_ID ) } ; if ( java.lang.String[] [ NUMBER ] == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } Cursor de.azapps.mirakel.model.provider.Cursor = de.azapps.mirakel.model.provider.ContentResolver . query ( CaldavDatabaseHelper . getListsUri ( ) , java.lang.String[] , java.lang.String , java.lang.String[] , null ) ; try { if ( de.azapps.mirakel.model.provider.Cursor == null || de.azapps.mirakel.model.provider.Cursor . getCount ( ) != NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } } finally { if ( de.azapps.mirakel.model.provider.Cursor != null ) { de.azapps.mirakel.model.provider.Cursor . close ( ) ; } } } else if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . LIST_ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && ! boolean && ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . ORIGINAL_INSTANCE_SYNC_ID ) || de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . ORIGINAL_INSTANCE_ID ) ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . ORIGINAL_INSTANCE_SYNC_ID ) && de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . ORIGINAL_INSTANCE_ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . get ( Tasks . ORIGINAL_INSTANCE_SYNC_ID ) != null ) { java.lang.String [] java.lang.String[] = { de.azapps.mirakel.model.provider.ContentValues . getAsString ( Tasks . ORIGINAL_INSTANCE_SYNC_ID ) } ; Cursor de.azapps.mirakel.model.provider.Cursor = de.azapps.mirakel.model.provider.ContentResolver . query ( CaldavDatabaseHelper . getTasksUri ( false ) , java.lang.String[] , java.lang.String , java.lang.String[] , null ) ; try { if ( de.azapps.mirakel.model.provider.Cursor != null && de.azapps.mirakel.model.provider.Cursor . getCount ( ) == NUMBER ) { de.azapps.mirakel.model.provider.Cursor . moveToNext ( ) ; java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.Cursor . getLong ( NUMBER ) ; de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . ORIGINAL_INSTANCE_ID , java.lang.Long ) ; } } finally { if ( de.azapps.mirakel.model.provider.Cursor != null ) { de.azapps.mirakel.model.provider.Cursor . close ( ) ; } } } else if ( de.azapps.mirakel.model.provider.ContentValues . get ( Tasks . ORIGINAL_INSTANCE_ID ) != null ) { java.lang.String [] java.lang.String[] = { de.azapps.mirakel.model.provider.ContentValues . getAsString ( Tasks . ORIGINAL_INSTANCE_ID ) } ; Cursor de.azapps.mirakel.model.provider.Cursor = de.azapps.mirakel.model.provider.ContentResolver . query ( CaldavDatabaseHelper . getTasksUri ( false ) , java.lang.String[] , java.lang.String , java.lang.String[] , null ) ; try { if ( de.azapps.mirakel.model.provider.Cursor != null && de.azapps.mirakel.model.provider.Cursor . getCount ( ) == NUMBER ) { de.azapps.mirakel.model.provider.Cursor . moveToNext ( ) ; java.lang.String java.lang.String = de.azapps.mirakel.model.provider.Cursor . getString ( NUMBER ) ; de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . ORIGINAL_INSTANCE_SYNC_ID , java.lang.String ) ; } } finally { if ( de.azapps.mirakel.model.provider.Cursor != null ) { de.azapps.mirakel.model.provider.Cursor . close ( ) ; } } } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . ACCOUNT_NAME ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . ACCOUNT_TYPE ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . LIST_COLOR ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskSyncColumns . _DELETED ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskSyncColumns . _UID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && de.azapps.mirakel.model.provider.ContentValues . containsKey ( CommonSyncColumns . _DIRTY ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . CREATED ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . IS_NEW ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . IS_CLOSED ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . LAST_MODIFIED ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . PRIORITY ) ) { java.lang.Integer java.lang.Integer = de.azapps.mirakel.model.provider.ContentValues . getAsInteger ( TaskColumns . PRIORITY ) ; if ( java.lang.Integer != null && ( java.lang.Integer < NUMBER || java.lang.Integer > NUMBER ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . CLASSIFICATION ) ) { java.lang.Integer java.lang.Integer = de.azapps.mirakel.model.provider.ContentValues . getAsInteger ( TaskColumns . CLASSIFICATION ) ; if ( java.lang.Integer != null && ( java.lang.Integer < NUMBER || java.lang.Integer > NUMBER ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } } java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.ContentValues . getAsLong ( TaskColumns . DTSTART ) ; java.lang.Long java.lang.Long = de.azapps.mirakel.model.provider.ContentValues . getAsLong ( TaskColumns . DUE ) ; java.lang.String java.lang.String = de.azapps.mirakel.model.provider.ContentValues . getAsString ( TaskColumns . DURATION ) ; if ( java.lang.Long != null ) { if ( java.lang.Long != null && java.lang.String != null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } else if ( java.lang.Long != null ) { if ( java.lang.Long < java.lang.Long ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } } else if ( java.lang.String != null ) { Duration de.azapps.mirakel.model.provider.Duration = new Duration ( java.lang.String ) ; if ( d . sign == - NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } } } else if ( java.lang.String != null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ( java.lang.Long != null || java.lang.Long != null ) && ! java.lang.Integer . boolean ( de.azapps.mirakel.model.provider.ContentValues . getAsInteger ( TaskColumns . IS_ALLDAY ) ) && de.azapps.mirakel.model.provider.ContentValues . getAsString ( TaskColumns . TZ ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && de.azapps.mirakel.model.provider.ContentValues . getAsLong ( Tasks . COMPLETED ) != null && ! de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . STATUS ) ) { de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . STATUS , Tasks . STATUS_COMPLETED ) ; } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( TaskColumns . PERCENT_COMPLETE ) ) { java.lang.Integer java.lang.Integer = de.azapps.mirakel.model.provider.ContentValues . getAsInteger ( TaskColumns . PERCENT_COMPLETE ) ; if ( java.lang.Integer != null && ( java.lang.Integer < NUMBER || java.lang.Integer > NUMBER ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! boolean && java.lang.Integer != null && java.lang.Integer == NUMBER ) { if ( ! de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . STATUS ) ) { de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . STATUS , Tasks . STATUS_COMPLETED ) ; } if ( ! de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . COMPLETED ) ) { de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . COMPLETED , java.lang.System . long ( ) ) ; de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . COMPLETED_IS_ALLDAY , NUMBER ) ; } } else if ( ! boolean && java.lang.Integer != null ) { if ( ! de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . COMPLETED ) ) { de.azapps.mirakel.model.provider.ContentValues . putNull ( Tasks . COMPLETED ) ; } } } if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . STATUS ) || boolean ) { java.lang.Integer java.lang.Integer = de.azapps.mirakel.model.provider.ContentValues . getAsInteger ( Tasks . STATUS ) ; if ( java.lang.Integer == null ) { java.lang.Integer = Tasks . STATUS_DEFAULT ; de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . STATUS , java.lang.Integer ) ; } else if ( java.lang.Integer < Tasks . STATUS_NEEDS_ACTION || java.lang.Integer > Tasks . STATUS_CANCELLED ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Integer ) ; } de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . IS_NEW , java.lang.Integer == null || java.lang.Integer == Tasks . STATUS_NEEDS_ACTION ? NUMBER : NUMBER ) ; de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . IS_CLOSED , java.lang.Integer != null && ( java.lang.Integer == Tasks . STATUS_COMPLETED || java.lang.Integer == Tasks . STATUS_CANCELLED ) ? NUMBER : NUMBER ) ; if ( java.lang.Integer == Tasks . STATUS_COMPLETED && ! boolean ) { de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . PERCENT_COMPLETE , NUMBER ) ; if ( ! de.azapps.mirakel.model.provider.ContentValues . containsKey ( Tasks . COMPLETED ) ) { de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . COMPLETED , java.lang.System . long ( ) ) ; de.azapps.mirakel.model.provider.ContentValues . put ( Tasks . COMPLETED_IS_ALLDAY , NUMBER ) ; } } else if ( ! boolean ) { de.azapps.mirakel.model.provider.ContentValues . putNull ( Tasks . COMPLETED ) ; } } } 
private void void ( ContentValues de.azapps.mirakel.model.provider.ContentValues , boolean boolean , boolean boolean ) { if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Categories . _ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( boolean != de.azapps.mirakel.model.provider.ContentValues . containsKey ( Categories . ACCOUNT_NAME ) && ( ! boolean || de.azapps.mirakel.model.provider.ContentValues . get ( Categories . ACCOUNT_NAME ) != null ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( boolean != de.azapps.mirakel.model.provider.ContentValues . containsKey ( Categories . ACCOUNT_TYPE ) && ( ! boolean || de.azapps.mirakel.model.provider.ContentValues . get ( Categories . ACCOUNT_TYPE ) != null ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
private void void ( ContentValues de.azapps.mirakel.model.provider.ContentValues , boolean boolean , boolean boolean ) { if ( de.azapps.mirakel.model.provider.ContentValues . containsKey ( Alarms . ALARM_ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
@ java.lang.Override public java.lang.String java.lang.String ( Uri de.azapps.mirakel.model.provider.Uri ) { switch ( de.azapps.mirakel.model.provider.UriMatcher . match ( de.azapps.mirakel.model.provider.Uri ) ) { case int : return TaskLists . CONTENT_TYPE ; case int : return TaskLists . CONTENT_ITEM_TYPE ; case int : return Tasks . CONTENT_TYPE ; case int : return Tasks . CONTENT_ITEM_TYPE ; case int : return Instances . CONTENT_TYPE ; default: throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.model.provider.Uri ) ; } } 
@ java.lang.Override protected void void ( boolean boolean ) { super. onEndTransaction ( boolean ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.provider.SQLiteOpenHelper de.azapps.mirakel.model.provider.SQLiteOpenHelper ( Context de.azapps.mirakel.model.provider.Context ) { synchronized ( this ) { if ( de.azapps.mirakel.model.provider.DatabaseHelper == null ) { de.azapps.mirakel.model.provider.DatabaseHelper = de.azapps.mirakel.model.provider.DatabaseHelper ( de.azapps.mirakel.model.provider.Context ) ; } return de.azapps.mirakel.model.provider.DatabaseHelper ; } } 
public static de.azapps.mirakel.model.provider.DatabaseHelper de.azapps.mirakel.model.provider.DatabaseHelper ( final Context de.azapps.mirakel.model.provider.Context ) { return DatabaseHelper . getDatabaseHelper ( de.azapps.mirakel.model.provider.Context ) ; } 
@ java.lang.Override protected boolean boolean ( Uri de.azapps.mirakel.model.provider.Uri ) { return true ; } 
abstract void void ( ) 
public void ( final java.lang.String java.lang.String ) { super( java.lang.String ); } 
public void ( final java.lang.String java.lang.String , final java.lang.Throwable java.lang.Throwable ) { super( java.lang.String , java.lang.Throwable ); } 
private static de.azapps.mirakel.model.provider.Uri de.azapps.mirakel.model.provider.Uri ( final java.lang.String java.lang.String ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; return Uri . parse ( STRING + DefinitionsHelper . AUTHORITY_INTERNAL + '/' + java.lang.String ) ; } 
private static de.azapps.mirakel.model.provider.SQLiteDatabase de.azapps.mirakel.model.provider.SQLiteDatabase ( ) { if ( de.azapps.mirakel.model.provider.SQLiteDatabase == null && de.azapps.mirakel.model.provider.DatabaseHelper != null ) { return de.azapps.mirakel.model.provider.DatabaseHelper . getReadableDatabase ( ) ; } return de.azapps.mirakel.model.provider.SQLiteDatabase ; } 
@ VisibleForTesting public static void void ( ) { de.azapps.mirakel.model.provider.SQLiteDatabase = null ; de.azapps.mirakel.model.provider.DatabaseHelper = null ; } 
private static de.azapps.mirakel.model.provider.SQLiteDatabase de.azapps.mirakel.model.provider.SQLiteDatabase ( ) { if ( de.azapps.mirakel.model.provider.SQLiteDatabase == null && de.azapps.mirakel.model.provider.DatabaseHelper != null ) { return de.azapps.mirakel.model.provider.DatabaseHelper . getWritableDatabase ( ) ; } return de.azapps.mirakel.model.provider.SQLiteDatabase ; } 
private java.util.Set<de.azapps.mirakel.model.provider.Uri> < Uri > java.util.Set<de.azapps.mirakel.model.provider.Uri> ( final Uri de.azapps.mirakel.model.provider.Uri , java.util.Set<de.azapps.mirakel.model.provider.Uri> < Uri > java.util.Set<de.azapps.mirakel.model.provider.Uri> ) { if ( de.azapps.mirakel.model.provider.ListMultimap<de.azapps.mirakel.model.provider.Uri,de.azapps.mirakel.model.provider.Uri> . containsKey ( de.azapps.mirakel.model.provider.Uri ) ) { for ( Uri de.azapps.mirakel.model.provider.Uri : de.azapps.mirakel.model.provider.ListMultimap<de.azapps.mirakel.model.provider.Uri,de.azapps.mirakel.model.provider.Uri> . get ( de.azapps.mirakel.model.provider.Uri ) ) { if ( ! java.util.Set<de.azapps.mirakel.model.provider.Uri> . contains ( de.azapps.mirakel.model.provider.Uri ) ) { java.util.Set<de.azapps.mirakel.model.provider.Uri> . add ( de.azapps.mirakel.model.provider.Uri ) ; java.util.Set<de.azapps.mirakel.model.provider.Uri> = java.util.Set<de.azapps.mirakel.model.provider.Uri> ( de.azapps.mirakel.model.provider.Uri , java.util.Set<de.azapps.mirakel.model.provider.Uri> ) ; } } } else { java.util.Set<de.azapps.mirakel.model.provider.Uri> . add ( de.azapps.mirakel.model.provider.Uri ) ; } return java.util.Set<de.azapps.mirakel.model.provider.Uri> ; } 
@ java.lang.Override public int int ( final Uri de.azapps.mirakel.model.provider.Uri , final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] ) { final java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String + STRING ) ; } else if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { return NUMBER ; } final SQLiteDatabase de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteDatabase ( ) ; final boolean boolean = de.azapps.mirakel.model.provider.SQLiteDatabase . inTransaction ( ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; } final int int = de.azapps.mirakel.model.provider.SQLiteDatabase . delete ( java.lang.String , java.lang.String , java.lang.String[] ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; } for ( Uri de.azapps.mirakel.model.provider.Uri : java.util.Set<de.azapps.mirakel.model.provider.Uri> ( de.azapps.mirakel.model.provider.Uri , new java.util.HashSet<de.azapps.mirakel.model.provider.Uri> < Uri > ( ) ) ) { this . getContext ( ) . getContentResolver ( ) . notifyChange ( de.azapps.mirakel.model.provider.Uri , null ) ; } return int ; } 
public static java.lang.String java.lang.String ( final Uri de.azapps.mirakel.model.provider.Uri ) { final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = de.azapps.mirakel.model.provider.Uri . getPathSegments ( ) ; if ( java.util.List<java.lang.String> . int ( ) > NUMBER && java.util.List<java.lang.String> . boolean ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ) { return java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; } throw new java.lang.IllegalArgumentException ( STRING + java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final Uri de.azapps.mirakel.model.provider.Uri ) { return null ; } 
@ java.lang.Override public de.azapps.mirakel.model.provider.Uri de.azapps.mirakel.model.provider.Uri ( final Uri de.azapps.mirakel.model.provider.Uri , final ContentValues de.azapps.mirakel.model.provider.ContentValues ) { final java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String + STRING ) ; } else if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { return ContentUris . withAppendedId ( de.azapps.mirakel.model.provider.Uri , NUMBER ) ; } final SQLiteDatabase de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteDatabase ( ) ; final boolean boolean = de.azapps.mirakel.model.provider.SQLiteDatabase . inTransaction ( ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; } Uri de.azapps.mirakel.model.provider.Uri = ContentUris . withAppendedId ( de.azapps.mirakel.model.provider.Uri , de.azapps.mirakel.model.provider.SQLiteDatabase . insert ( java.lang.String , null , de.azapps.mirakel.model.provider.ContentValues ) ) ; if ( java.util.Map<java.lang.String,java.lang.String> . boolean ( java.lang.String ) ) { Cursor de.azapps.mirakel.model.provider.Cursor = de.azapps.mirakel.model.provider.SQLiteDatabase . query ( java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) , new java.lang.String [] { STRING } , null , null , null , null , null ) ; if ( de.azapps.mirakel.model.provider.Cursor . moveToFirst ( ) ) { de.azapps.mirakel.model.provider.Uri = ContentUris . withAppendedId ( de.azapps.mirakel.model.provider.Uri , de.azapps.mirakel.model.provider.Cursor . getLong ( NUMBER ) ) ; } de.azapps.mirakel.model.provider.Cursor . close ( ) ; } if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; } for ( Uri de.azapps.mirakel.model.provider.Uri : java.util.Set<de.azapps.mirakel.model.provider.Uri> ( de.azapps.mirakel.model.provider.Uri , new java.util.HashSet<de.azapps.mirakel.model.provider.Uri> < Uri > ( ) ) ) { de.azapps.mirakel.model.provider.Uri = ContentUris . withAppendedId ( de.azapps.mirakel.model.provider.Uri , ContentUris . parseId ( de.azapps.mirakel.model.provider.Uri ) ) ; this . getContext ( ) . getContentResolver ( ) . notifyChange ( de.azapps.mirakel.model.provider.Uri , null ) ; } return de.azapps.mirakel.model.provider.Uri ; } 
public static void void ( final SQLiteDatabase de.azapps.mirakel.model.provider.SQLiteDatabase ) { if ( de.azapps.mirakel.model.provider.SQLiteDatabase == null ) { return; } de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteDatabase ; } 
@ java.lang.Override public boolean boolean ( ) { if ( de.azapps.mirakel.model.provider.SQLiteDatabase == null ) { de.azapps.mirakel.model.provider.DatabaseHelper = DatabaseHelper . getDatabaseHelper ( getContext ( ) ) ; } final java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledExecutorService = java.util.concurrent.Executors . java.util.concurrent.ScheduledExecutorService ( ) ; java.util.concurrent.ScheduledExecutorService . java.util.concurrent.ScheduledFuture<?> ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { ModelBase . init ( getContext ( ) ) ; Semantic . init ( ) ; } } , NUMBER , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) ; if ( ! STRING . boolean ( Build . FINGERPRINT ) ) { AccountManager . get ( getContext ( ) ) . addOnAccountsUpdatedListener ( this , null , true ) ; } return true ; } 
@ java.lang.Override public void void ( ) { ModelBase . init ( getContext ( ) ) ; Semantic . init ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.provider.Cursor de.azapps.mirakel.model.provider.Cursor ( final Uri de.azapps.mirakel.model.provider.Uri , final java.lang.String [] java.lang.String[] , final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] , final java.lang.String java.lang.String ) { final java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; final SQLiteQueryBuilder de.azapps.mirakel.model.provider.SQLiteQueryBuilder = new SQLiteQueryBuilder ( ) ; java.lang.String java.lang.String = null ; if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String + STRING ) ; } else if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { return new MatrixCursor ( new java.lang.String [ NUMBER ] ) ; } switch ( java.lang.String ) { case java.lang.String : de.azapps.mirakel.model.provider.SQLiteQueryBuilder . setTables ( Task . TABLE + STRING + Task . SUBTASK_TABLE + STRING + Task . TABLE + STRING + ModelBase . ID + STRING + Task . SUBTASK_TABLE + STRING ) ; break; case java.lang.String : de.azapps.mirakel.model.provider.SQLiteQueryBuilder . setTables ( Task . TABLE + STRING + Recurring . TW_TABLE + STRING + Task . TABLE + STRING + ModelBase . ID + STRING + Recurring . TW_TABLE + STRING + Recurring . CHILD ) ; break; case java.lang.String : de.azapps.mirakel.model.provider.SQLiteQueryBuilder . setTables ( Task . TABLE + STRING + Recurring . TW_TABLE + STRING + Task . TABLE + STRING + ModelBase . ID + STRING + Recurring . TW_TABLE + STRING + Recurring . PARENT ) ; break; case Task . TABLE : de.azapps.mirakel.model.provider.SQLiteQueryBuilder . setTables ( STRING ) ; break; case java.lang.String : de.azapps.mirakel.model.provider.SQLiteQueryBuilder . setTables ( Tag . TAG_CONNECTION_TABLE + STRING + Tag . TABLE + STRING + Tag . TAG_CONNECTION_TABLE + STRING + Tag . TABLE + STRING + ModelBase . ID ) ; break; case java.lang.String : de.azapps.mirakel.model.provider.SQLiteQueryBuilder . setTables ( STRING + Tag . TAG_CONNECTION_TABLE + STRING + Tag . TAG_CONNECTION_TABLE + STRING + ModelBase . ID + STRING + Tag . TABLE + STRING + Tag . TAG_CONNECTION_TABLE + STRING + Tag . TABLE + STRING + ModelBase . ID ) ; break; case java.lang.String : de.azapps.mirakel.model.provider.SQLiteQueryBuilder . setTables ( ListMirakel . TABLE + STRING + ListMirakel . TABLE + STRING ) ; java.lang.String = STRING + ListMirakel . LFT ; break; default: de.azapps.mirakel.model.provider.SQLiteQueryBuilder . setTables ( java.lang.String ) ; } final Cursor de.azapps.mirakel.model.provider.Cursor = de.azapps.mirakel.model.provider.SQLiteQueryBuilder . query ( de.azapps.mirakel.model.provider.SQLiteDatabase ( ) , java.lang.String[] , java.lang.String , java.lang.String[] , java.lang.String , null , java.lang.String ) ; if ( de.azapps.mirakel.model.provider.Cursor == null ) { Log . wtf ( java.lang.String , STRING + de.azapps.mirakel.model.provider.SQLiteQueryBuilder . toString ( ) + STRING ) ; return new MatrixCursor ( java.lang.String[] ) ; } for ( Uri de.azapps.mirakel.model.provider.Uri : java.util.Set<de.azapps.mirakel.model.provider.Uri> ( de.azapps.mirakel.model.provider.Uri , new java.util.HashSet<de.azapps.mirakel.model.provider.Uri> < Uri > ( ) ) ) { de.azapps.mirakel.model.provider.Cursor . setNotificationUri ( getContext ( ) . getContentResolver ( ) , de.azapps.mirakel.model.provider.Uri ) ; } return de.azapps.mirakel.model.provider.Cursor ; } 
@ java.lang.Override public int int ( final Uri de.azapps.mirakel.model.provider.Uri , final ContentValues de.azapps.mirakel.model.provider.ContentValues , final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] ) { final java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.provider.Uri ) ; if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String + STRING ) ; } else if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { return NUMBER ; } final SQLiteDatabase de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteDatabase ( ) ; final boolean boolean = de.azapps.mirakel.model.provider.SQLiteDatabase . inTransaction ( ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; } java.lang.String java.lang.String = de.azapps.mirakel.model.provider.ContentValues . getAsString ( STRING ) ; int int = NUMBER ; switch ( java.lang.String ) { case java.lang.String : if ( java.lang.String[] != null && java.lang.String[] . int > NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } de.azapps.mirakel.model.provider.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING + ListMirakel . LFT + STRING + ListMirakel . LFT + STRING + java.lang.String ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING + ListMirakel . RGT + STRING + ListMirakel . RGT + STRING + java.lang.String ) ; break; case java.lang.String : if ( java.lang.String[] != null && java.lang.String[] . int > NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } de.azapps.mirakel.model.provider.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING + java.lang.String + STRING ) ; break; case java.lang.String : if ( java.lang.String[] != null && java.lang.String[] . int > NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } de.azapps.mirakel.model.provider.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING + java.lang.String + STRING ) ; break; case java.lang.String : de.azapps.mirakel.model.provider.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING ) ; break; default: int = de.azapps.mirakel.model.provider.SQLiteDatabase . update ( java.lang.String , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] ) ; } if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; } for ( Uri de.azapps.mirakel.model.provider.Uri : java.util.Set<de.azapps.mirakel.model.provider.Uri> ( de.azapps.mirakel.model.provider.Uri , new java.util.HashSet<de.azapps.mirakel.model.provider.Uri> < Uri > ( ) ) ) { this . getContext ( ) . getContentResolver ( ) . notifyChange ( de.azapps.mirakel.model.provider.Uri , null ) ; } return int ; } 
@ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) public static void void ( final de.azapps.mirakel.model.provider.MirakelInternalContentProvider.DBTransaction de.azapps.mirakel.model.provider.MirakelInternalContentProvider.DBTransaction ) { if ( de.azapps.mirakel.model.provider.MirakelInternalContentProvider.DBTransaction != null ) { final SQLiteDatabase de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteDatabase ( ) ; if ( ! de.azapps.mirakel.model.provider.SQLiteDatabase . inTransaction ( ) ) { de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; try { de.azapps.mirakel.model.provider.MirakelInternalContentProvider.DBTransaction . void ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; } catch ( final java.lang.Exception java.lang.Exception ) { Log . w ( java.lang.String , STRING , java.lang.Exception ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ) { throw new android . android . android ( STRING , java.lang.Exception ) ; } else { throw new android . android . android ( STRING ) ; } } finally { de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; } } else { de.azapps.mirakel.model.provider.MirakelInternalContentProvider.DBTransaction . void ( ) ; } } } 
@ java.lang.Override public void void ( final Account [] de.azapps.mirakel.model.provider.Account[] ) { AccountMirakel . update ( de.azapps.mirakel.model.provider.Account[] ) ; } 
@ java.lang.Override public boolean boolean ( ) { Context de.azapps.mirakel.model.provider.Context = getContext ( ) ; de.azapps.mirakel.model.provider.SQLiteOpenHelper = de.azapps.mirakel.model.provider.SQLiteOpenHelper ( de.azapps.mirakel.model.provider.Context ) ; java.util.Set<de.azapps.mirakel.model.provider.Uri> = new java.util.HashSet<de.azapps.mirakel.model.provider.Uri> < Uri > ( ) ; return true ; } 
public abstract de.azapps.mirakel.model.provider.SQLiteOpenHelper de.azapps.mirakel.model.provider.SQLiteOpenHelper ( Context de.azapps.mirakel.model.provider.Context ); 
public abstract de.azapps.mirakel.model.provider.Uri de.azapps.mirakel.model.provider.Uri ( Uri de.azapps.mirakel.model.provider.Uri , ContentValues de.azapps.mirakel.model.provider.ContentValues , boolean boolean ); 
public abstract int int ( Uri de.azapps.mirakel.model.provider.Uri , ContentValues de.azapps.mirakel.model.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean ); 
public abstract int int ( Uri de.azapps.mirakel.model.provider.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean ); 
protected void void ( Uri de.azapps.mirakel.model.provider.Uri ) { synchronized ( java.util.Set<de.azapps.mirakel.model.provider.Uri> ) { java.util.Set<de.azapps.mirakel.model.provider.Uri> . add ( de.azapps.mirakel.model.provider.Uri ) ; } } 
public boolean boolean ( Uri de.azapps.mirakel.model.provider.Uri ) { return false ; } 
public de.azapps.mirakel.model.provider.SQLiteOpenHelper de.azapps.mirakel.model.provider.SQLiteOpenHelper ( ) { return de.azapps.mirakel.model.provider.SQLiteOpenHelper ; } 
private boolean boolean ( ) { return java.lang.ThreadLocal<java.lang.Boolean> . java.lang.Boolean ( ) != null && java.lang.ThreadLocal<java.lang.Boolean> . java.lang.Boolean ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.provider.Uri de.azapps.mirakel.model.provider.Uri ( Uri de.azapps.mirakel.model.provider.Uri , ContentValues de.azapps.mirakel.model.provider.ContentValues ) { Uri de.azapps.mirakel.model.provider.Uri = null ; boolean boolean = boolean ( de.azapps.mirakel.model.provider.Uri ) ; boolean boolean = boolean ( ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteOpenHelper . getWritableDatabase ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; try { de.azapps.mirakel.model.provider.Uri = de.azapps.mirakel.model.provider.Uri ( de.azapps.mirakel.model.provider.Uri , de.azapps.mirakel.model.provider.ContentValues , boolean ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; } void ( boolean ) ; } else { de.azapps.mirakel.model.provider.Uri = de.azapps.mirakel.model.provider.Uri ( de.azapps.mirakel.model.provider.Uri , de.azapps.mirakel.model.provider.ContentValues , boolean ) ; } return de.azapps.mirakel.model.provider.Uri ; } 
@ java.lang.Override public int int ( Uri de.azapps.mirakel.model.provider.Uri , ContentValues [] de.azapps.mirakel.model.provider.ContentValues[] ) { int int = values . length ; boolean boolean = boolean ( de.azapps.mirakel.model.provider.Uri ) ; de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteOpenHelper . getWritableDatabase ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; try { for ( int int = NUMBER ; int < int ; int ++ ) { Uri de.azapps.mirakel.model.provider.Uri = de.azapps.mirakel.model.provider.Uri ( de.azapps.mirakel.model.provider.Uri , de.azapps.mirakel.model.provider.ContentValues[] [ int ] , boolean ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . yieldIfContendedSafely ( ) ; } de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; } void ( boolean ) ; return int ; } 
@ java.lang.Override public int int ( Uri de.azapps.mirakel.model.provider.Uri , ContentValues de.azapps.mirakel.model.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { int int = NUMBER ; boolean boolean = boolean ( de.azapps.mirakel.model.provider.Uri ) ; boolean boolean = boolean ( ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteOpenHelper . getWritableDatabase ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; try { int = int ( de.azapps.mirakel.model.provider.Uri , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] , boolean ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; } void ( boolean ) ; } else { int = int ( de.azapps.mirakel.model.provider.Uri , de.azapps.mirakel.model.provider.ContentValues , java.lang.String , java.lang.String[] , boolean ) ; } return int ; } 
@ java.lang.Override public int int ( Uri de.azapps.mirakel.model.provider.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { int int = NUMBER ; boolean boolean = boolean ( de.azapps.mirakel.model.provider.Uri ) ; boolean boolean = boolean ( ) ; if ( ! boolean ) { de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteOpenHelper . getWritableDatabase ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; try { int = int ( de.azapps.mirakel.model.provider.Uri , java.lang.String , java.lang.String[] , boolean ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; } void ( boolean ) ; } else { int = int ( de.azapps.mirakel.model.provider.Uri , java.lang.String , java.lang.String[] , boolean ) ; } return int ; } 
@ java.lang.Override public de.azapps.mirakel.model.provider.ContentProviderResult [] de.azapps.mirakel.model.provider.ContentProviderResult[] ( java.util.ArrayList<de.azapps.mirakel.model.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<de.azapps.mirakel.model.provider.ContentProviderOperation> ) throws de.azapps.mirakel.model.provider.OperationApplicationException { int int = NUMBER ; int int = NUMBER ; boolean boolean = false ; de.azapps.mirakel.model.provider.SQLiteDatabase = de.azapps.mirakel.model.provider.SQLiteOpenHelper . getWritableDatabase ( ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . beginTransaction ( ) ; try { java.lang.ThreadLocal<java.lang.Boolean> . void ( true ) ; final int int = java.util.ArrayList<de.azapps.mirakel.model.provider.ContentProviderOperation> . size ( ) ; final ContentProviderResult [] de.azapps.mirakel.model.provider.ContentProviderResult[] = new ContentProviderResult [ int ] ; for ( int int = NUMBER ; int < int ; int ++ ) { if ( ++ int >= int ) { throw new OperationApplicationException ( STRING + STRING + int , int ) ; } final ContentProviderOperation de.azapps.mirakel.model.provider.ContentProviderOperation = java.util.ArrayList<de.azapps.mirakel.model.provider.ContentProviderOperation> . get ( int ) ; if ( ! boolean && boolean ( de.azapps.mirakel.model.provider.ContentProviderOperation . getUri ( ) ) ) { boolean = true ; } if ( int > NUMBER && de.azapps.mirakel.model.provider.ContentProviderOperation . isYieldAllowed ( ) ) { int = NUMBER ; if ( de.azapps.mirakel.model.provider.SQLiteDatabase . yieldIfContendedSafely ( int ) ) { int ++ ; } } de.azapps.mirakel.model.provider.ContentProviderResult[] [ int ] = de.azapps.mirakel.model.provider.ContentProviderOperation . apply ( this , de.azapps.mirakel.model.provider.ContentProviderResult[] , int ) ; } de.azapps.mirakel.model.provider.SQLiteDatabase . setTransactionSuccessful ( ) ; return de.azapps.mirakel.model.provider.ContentProviderResult[] ; } finally { java.lang.ThreadLocal<java.lang.Boolean> . void ( false ) ; de.azapps.mirakel.model.provider.SQLiteDatabase . endTransaction ( ) ; void ( boolean ) ; } } 
protected void void ( boolean boolean ) { java.util.Set<de.azapps.mirakel.model.provider.Uri> < Uri > java.util.Set<de.azapps.mirakel.model.provider.Uri> ; synchronized ( java.util.Set<de.azapps.mirakel.model.provider.Uri> ) { java.util.Set<de.azapps.mirakel.model.provider.Uri> = new java.util.HashSet<de.azapps.mirakel.model.provider.Uri> < Uri > ( java.util.Set<de.azapps.mirakel.model.provider.Uri> ) ; java.util.Set<de.azapps.mirakel.model.provider.Uri> . clear ( ) ; } ContentResolver de.azapps.mirakel.model.provider.ContentResolver = getContext ( ) . getContentResolver ( ) ; for ( Uri de.azapps.mirakel.model.provider.Uri : java.util.Set<de.azapps.mirakel.model.provider.Uri> ) { boolean boolean = ! boolean && boolean ( de.azapps.mirakel.model.provider.Uri ) ; de.azapps.mirakel.model.provider.ContentResolver . notifyChange ( de.azapps.mirakel.model.provider.Uri , null , boolean ) ; } } 
protected boolean boolean ( Uri de.azapps.mirakel.model.provider.Uri ) { return false ; } 
public void ( final java.lang.Class<T> < T > java.lang.Class<T> ) { try { converter = Either . Left ( java.lang.Class<T> . java.lang.reflect.Constructor<T> ( CursorGetter .class ) ) ; } catch ( final java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<T> . java.lang.String ( ) + STRING , java.lang.NoSuchMethodException ) ; } } 
public Cursor2List ( @ NonNull final CursorWrapper . CursorWrapper < T > converter ) { this . converter = Either . Right ( converter ) ; } 
@ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( @ NonNull final CursorGetter de.azapps.mirakel.model.query_builder.CursorGetter ) { final java.util.List<T> < T > java.util.List<T> = new java.util.ArrayList <> ( de.azapps.mirakel.model.query_builder.CursorGetter . getCount ( ) ) ; if ( converter . isLeft ( ) ) { void ( de.azapps.mirakel.model.query_builder.CursorGetter , java.util.List<T> , converter . getLeftOrThrow ( ) ) ; } else if ( converter . isRight ( ) ) { fillWithConvertor ( de.azapps.mirakel.model.query_builder.CursorGetter , java.util.List<T> , converter . getRightOrThrow ( ) ) ; } else { throw new java.lang.IllegalStateException ( STRING ) ; } return java.util.List<T> ; } 
private static < T > void fillWithConvertor ( @ NonNull final CursorGetter de.azapps.mirakel.model.query_builder.CursorGetter , final java.util.List<T> < T > java.util.List<T> , final CursorWrapper . CursorWrapper < T > converter ) { while ( de.azapps.mirakel.model.query_builder.CursorGetter . moveToNext ( ) ) { java.util.List<T> . boolean ( converter . convert ( de.azapps.mirakel.model.query_builder.CursorGetter ) ) ; } } 
private static < T > void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.query_builder.CursorGetter , final java.util.List<T> < T > java.util.List<T> , final @ NonNull java.lang.reflect.Constructor<T> < T > java.lang.reflect.Constructor<T> ) { try { while ( de.azapps.mirakel.model.query_builder.CursorGetter . moveToNext ( ) ) { java.util.List<T> . boolean ( java.lang.reflect.Constructor<T> . T ( de.azapps.mirakel.model.query_builder.CursorGetter ) ) ; } } catch ( final java.lang.InstantiationException java.lang.InstantiationException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.reflect.Constructor<T> . java.lang.String ( ) + STRING , java.lang.InstantiationException ) ; } catch ( final java.lang.IllegalAccessException java.lang.IllegalAccessException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.reflect.Constructor<T> . java.lang.String ( ) + STRING , java.lang.IllegalAccessException ) ; } catch ( final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.reflect.Constructor<T> . java.lang.String ( ) + STRING , java.lang.reflect.InvocationTargetException ) ; } } 
public static void void ( @ NonNull final Context de.azapps.mirakel.model.query_builder.Context ) { de.azapps.mirakel.model.query_builder.CursorGetter . de.azapps.mirakel.model.query_builder.Context = de.azapps.mirakel.model.query_builder.Context ; } 
void ( final @ NonNull Cursor de.azapps.mirakel.model.query_builder.Cursor ) { de.azapps.mirakel.model.query_builder.Cursor = de.azapps.mirakel.model.query_builder.Cursor ; } 
public int int ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.query_builder.Cursor . getColumnIndex ( java.lang.String ) ; } 
public boolean boolean ( final java.lang.String java.lang.String ) { return NUMBER == de.azapps.mirakel.model.query_builder.Cursor . getShort ( int ( java.lang.String ) ) ; } 
public java.lang.String java.lang.String ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.query_builder.Cursor . getString ( int ( java.lang.String ) ) ; } 
public int int ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.query_builder.Cursor . getInt ( int ( java.lang.String ) ) ; } 
public long long ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.query_builder.Cursor . getLong ( int ( java.lang.String ) ) ; } 
public short short ( java.lang.String java.lang.String ) { return de.azapps.mirakel.model.query_builder.Cursor . getShort ( int ( java.lang.String ) ) ; } 
@ java.lang.SuppressWarnings ( STRING ) public < T > de.azapps.mirakel.model.query_builder.Optional<T> < T > de.azapps.mirakel.model.query_builder.Optional<T> ( final java.lang.String java.lang.String , final java.lang.Class<T> < T > java.lang.Class<T> ) { final int int = int ( java.lang.String ) ; if ( de.azapps.mirakel.model.query_builder.Cursor . isNull ( int ) ) { return absent ( ) ; } if ( java.lang.Class<T> . boolean ( java.lang.Integer .class ) ) { return ( Optional < T > ) of ( de.azapps.mirakel.model.query_builder.Cursor . getInt ( int ) ) ; } else if ( java.lang.Class<T> . boolean ( java.lang.Long .class ) ) { return ( Optional < T > ) of ( de.azapps.mirakel.model.query_builder.Cursor . getLong ( int ) ) ; } else if ( java.lang.Class<T> . boolean ( java.lang.Short .class ) ) { return ( Optional < T > ) of ( de.azapps.mirakel.model.query_builder.Cursor . getShort ( int ) ) ; } else if ( java.lang.Class<T> . boolean ( java.lang.String .class ) ) { return ( Optional < T > ) of ( de.azapps.mirakel.model.query_builder.Cursor . getString ( int ) ) ; } else if ( ModelBase .class . boolean ( java.lang.Class<T> ) ) { return ( Optional < T > ) new MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.Context ) . get ( ( java.lang.Class<de.azapps.mirakel.model.query_builder.ModelBase> < ModelBase > ) java.lang.Class<T> , de.azapps.mirakel.model.query_builder.Cursor . getLong ( int ) ) ; } else if ( DateTime .class . boolean ( java.lang.Class<T> ) ) { return ( Optional < T > ) of ( new DateTime ( de.azapps.mirakel.model.query_builder.Cursor . getLong ( int ) ) ) ; } throw new java.lang.IllegalStateException ( STRING + java.lang.Class<T> . java.lang.String ( ) ) ; } 
public boolean boolean ( ) { return de.azapps.mirakel.model.query_builder.Cursor . moveToFirst ( ) ; } 
public int int ( ) { return de.azapps.mirakel.model.query_builder.Cursor . getCount ( ) ; } 
public boolean boolean ( ) { return de.azapps.mirakel.model.query_builder.Cursor . moveToNext ( ) ; } 
public boolean boolean ( ) { return de.azapps.mirakel.model.query_builder.Cursor . isAfterLast ( ) ; } 
public void void ( int int ) { de.azapps.mirakel.model.query_builder.Cursor . moveToPosition ( int ) ; } 
public int int ( final int int ) { return de.azapps.mirakel.model.query_builder.Cursor . getInt ( int ) ; } 
public long long ( final int int ) { return de.azapps.mirakel.model.query_builder.Cursor . getLong ( int ) ; } 
public static de.azapps.mirakel.model.query_builder.CursorGetter de.azapps.mirakel.model.query_builder.CursorGetter ( final @ NonNull Cursor de.azapps.mirakel.model.query_builder.Cursor ) { return new de.azapps.mirakel.model.query_builder.CursorGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ; } 
public de.azapps.mirakel.model.query_builder.DateTime de.azapps.mirakel.model.query_builder.DateTime ( final @ NonNull java.lang.String java.lang.String ) { return new DateTime ( long ( java.lang.String ) ) ; } 
T T ( final @ NonNull CursorGetter de.azapps.mirakel.model.query_builder.CursorGetter ); 
void void ( final @ NonNull CursorGetter de.azapps.mirakel.model.query_builder.CursorGetter ); 
public void ( final @ NonNull Cursor de.azapps.mirakel.model.query_builder.Cursor ) { this . de.azapps.mirakel.model.query_builder.Cursor = de.azapps.mirakel.model.query_builder.Cursor ; } 
public < T > T T ( final @ NonNull de.azapps.mirakel.model.query_builder.CursorWrapper.CursorConverter<T> < T > de.azapps.mirakel.model.query_builder.CursorWrapper.CursorConverter<T> ) throws java.lang.NullPointerException { if ( de.azapps.mirakel.model.query_builder.Cursor == null ) { throw new java.lang.NullPointerException ( STRING ) ; } final T T = de.azapps.mirakel.model.query_builder.CursorWrapper.CursorConverter<T> . T ( new CursorGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; if ( ( de.azapps.mirakel.model.query_builder.Cursor != null ) && ! de.azapps.mirakel.model.query_builder.Cursor . isClosed ( ) ) { de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; } de.azapps.mirakel.model.query_builder.Cursor = null ; return T ; } 
public void void ( final @ NonNull de.azapps.mirakel.model.query_builder.CursorWrapper.WithCursor de.azapps.mirakel.model.query_builder.CursorWrapper.WithCursor ) throws java.lang.NullPointerException { if ( de.azapps.mirakel.model.query_builder.Cursor == null ) { throw new java.lang.NullPointerException ( STRING ) ; } de.azapps.mirakel.model.query_builder.CursorWrapper.WithCursor . void ( new CursorGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; if ( ( de.azapps.mirakel.model.query_builder.Cursor != null ) && ! de.azapps.mirakel.model.query_builder.Cursor . isClosed ( ) ) { de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; } de.azapps.mirakel.model.query_builder.Cursor = null ; } 
public de.azapps.mirakel.model.query_builder.Cursor de.azapps.mirakel.model.query_builder.Cursor ( ) { return de.azapps.mirakel.model.query_builder.Cursor ; } 
public android . android . android . android . android.support.v4.content.CursorLoader android.support.v4.content.CursorLoader ( final Uri de.azapps.mirakel.model.query_builder.Uri ) { return new android . android . android . android . android ( this . de.azapps.mirakel.model.query_builder.Context , de.azapps.mirakel.model.query_builder.Uri , this . java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.List<java.lang.String> . int ( ) ] ) , this . java.lang.StringBuilder . java.lang.String ( ) , this . java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.List<java.lang.String> . int ( ) ] ) , this . java.lang.StringBuilder . java.lang.String ( ) ) ; } 
@ TargetApi ( Build . VERSION_CODES . ICE_CREAM_SANDWICH ) public android . android . android.content.CursorLoader android.content.CursorLoader ( final Uri de.azapps.mirakel.model.query_builder.Uri ) { return new android . android . android ( this . de.azapps.mirakel.model.query_builder.Context , de.azapps.mirakel.model.query_builder.Uri , this . java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.List<java.lang.String> . int ( ) ] ) , this . java.lang.StringBuilder . java.lang.String ( ) , this . java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.List<java.lang.String> . int ( ) ] ) , this . java.lang.StringBuilder . java.lang.String ( ) ) ; } 
public void ( final Context de.azapps.mirakel.model.query_builder.Context ) { this . de.azapps.mirakel.model.query_builder.Context = de.azapps.mirakel.model.query_builder.Context ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( ) { this . boolean = true ; return this ; } 
private void void ( final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction ) { if ( this . java.lang.StringBuilder . int ( ) != NUMBER ) { this . java.lang.StringBuilder . java.lang.StringBuilder ( ' ' ) . java.lang.StringBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . java.lang.String ( ) ) . java.lang.StringBuilder ( ' ' ) ; } } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String ... java.lang.String[] ) { this . java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ; return this ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; return this ; } 
public long long ( final Uri de.azapps.mirakel.model.query_builder.Uri ) { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( STRING ) ; return de.azapps.mirakel.model.query_builder.CursorWrapper ( de.azapps.mirakel.model.query_builder.Uri ) . doWithCursor ( new CursorWrapper . CursorWrapper < java.lang.Long > ( ) { @ Override public Long convert ( @ NonNull CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return getter . getLong ( NUMBER ) ; } else { return NUMBER ; } } } ) ; } 
@ Override public Long convert ( @ NonNull CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return getter . getLong ( NUMBER ) ; } else { return NUMBER ; } } 
private < T extends de.azapps.mirakel.model.query_builder.ModelBase > java.lang.String java.lang.String ( T T ) { return ( T == null ) ? null : java.lang.String . java.lang.String ( T . getId ( ) ) ; } 
private de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , final java.lang.String java.lang.String ) { if ( java.lang.String . java.lang.String ( ) . boolean ( ) ) { return this ; } void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction ) ; this . java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; return this ; } 
private de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , final java.lang.String java.lang.String , final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String ) ; this . java.util.List<java.lang.String> . boolean ( java.util.List<java.lang.String> ) ; return this ; } 
private de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , final Uri de.azapps.mirakel.model.query_builder.Uri ) { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String + STRING + de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . java.lang.String ( de.azapps.mirakel.model.query_builder.Uri ) + ')' , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . java.util.List<java.lang.String> ( ) ) ; return this ; } 
@ java.lang.SuppressWarnings ( STRING ) private < T > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final java.util.List<T> < T > java.util.List<T> , final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { if ( java.util.List<T> . boolean ( ) ) { return this ; } final boolean boolean = java.util.List<T> . T ( NUMBER ) == null ; final java.lang.Class java.lang.Class = boolean ? null : java.util.List<T> . T ( NUMBER ) . java.lang.Class<? extends java.lang.Object> ( ) ; final boolean boolean = ! boolean && ( java.util.List<T> . T ( NUMBER ) instanceof ModelBase ) ; final boolean boolean = ! boolean && ( ( java.lang.Class . boolean ( boolean .class ) ) || ( java.lang.Class . boolean ( java.lang.Boolean .class ) ) ) ; java.lang.reflect.Method java.lang.reflect.Method = null ; if ( boolean ) { try { java.lang.reflect.Method = java.lang.Class . java.lang.reflect.Method ( STRING ) ; } catch ( final java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) { Log . wtf ( java.lang.String , STRING + java.lang.Class . java.lang.String ( ) ) ; throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class . java.lang.String ( ) , java.lang.NoSuchMethodException ) ; } } final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( java.util.List<T> . int ( ) ) ; for ( final T T : java.util.List<T> ) { if ( boolean ) { try { java.util.List<java.lang.String> . boolean ( java.lang.String . java.lang.String ( java.lang.reflect.Method . java.lang.Object ( T ) ) ) ; } catch ( java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException java.lang.ReflectiveOperationException ) { Log . wtf ( java.lang.String , STRING + java.lang.Class . java.lang.String ( ) + STRING ) ; throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class . java.lang.String ( ) , java.lang.ReflectiveOperationException ) ; } } else if ( boolean ) { java.util.List<java.lang.String> . boolean ( ( java.lang.Boolean ) T ? STRING : STRING ) ; } else if ( ! boolean ) { java.util.List<java.lang.String> . boolean ( T . java.lang.String ( ) ) ; } else { java.util.List<java.lang.String> . boolean ( null ) ; break; } } java.lang.String java.lang.String = STRING ; if ( java.util.List<de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation> . boolean ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) ) { java.lang.String = STRING ; } if ( ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation == de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) || ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation == de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) ) { void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction ) ; this . java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( ' ' ) . java.lang.StringBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . java.lang.String ( ) ) . java.lang.StringBuilder ( '(' ) ; for ( final java.lang.String java.lang.String : java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; this . java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } this . java.lang.StringBuilder . java.lang.StringBuilder ( this . java.lang.StringBuilder . int ( ) - NUMBER ) ; this . java.lang.StringBuilder . java.lang.StringBuilder ( ')' ) ; } else { for ( final java.lang.String java.lang.String : java.util.List<java.lang.String> ) { if ( java.lang.String != null ) { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String + java.lang.String + ' ' + de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation + ' ' + java.lang.String ) ; } else { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String + STRING + java.lang.String + STRING ) ; } } if ( ! java.util.List<java.lang.String> . boolean ( ) ) { this . java.util.List<java.lang.String> . boolean ( java.util.List<java.lang.String> ) ; } } return this ; } 
public java.lang.String java.lang.String ( final Uri de.azapps.mirakel.model.query_builder.Uri ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( this . java.lang.StringBuilder . int ( ) + ( this . java.util.List<java.lang.String> . int ( ) * NUMBER ) + ( this . java.util.List<java.lang.String> . int ( ) * NUMBER ) + NUMBER ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; if ( this . boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( TextUtils . join ( STRING , this . java.util.List<java.lang.String> ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( MirakelInternalContentProvider . getTableName ( de.azapps.mirakel.model.query_builder.Uri ) ) ; if ( this . java.lang.StringBuilder . int ( ) > NUMBER ) { final java.lang.String java.lang.String = this . java.lang.StringBuilder . java.lang.String ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) ; } if ( this . java.lang.StringBuilder . int ( ) != NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( this . java.lang.StringBuilder ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; } 
public java.lang.String java.lang.String ( final Uri de.azapps.mirakel.model.query_builder.Uri ) { java.lang.String java.lang.String = java.lang.String ( de.azapps.mirakel.model.query_builder.Uri ) ; for ( final java.lang.String java.lang.String : java.util.List<java.lang.String> ) { java.lang.String = java.lang.String . java.lang.String ( STRING , java.lang.String ) ; } return java.lang.String ; } 
public java.lang.String java.lang.String ( ) { return java.lang.String ( MirakelInternalContentProvider . TASK_VIEW_TAG_JOIN_URI ) ; } 
public java.lang.String java.lang.String ( ) { return this . java.lang.StringBuilder . java.lang.String ( ) ; } 
public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return this . java.util.List<java.lang.String> ; } 
public de.azapps.mirakel.model.query_builder.CursorWrapper de.azapps.mirakel.model.query_builder.CursorWrapper ( final Uri de.azapps.mirakel.model.query_builder.Uri ) { final ContentResolver de.azapps.mirakel.model.query_builder.ContentResolver = this . de.azapps.mirakel.model.query_builder.Context . getContentResolver ( ) ; return new CursorWrapper ( de.azapps.mirakel.model.query_builder.ContentResolver . query ( de.azapps.mirakel.model.query_builder.Uri , this . java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.List<java.lang.String> . int ( ) ] ) , this . java.lang.StringBuilder . java.lang.String ( ) , this . java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ this . java.util.List<java.lang.String> . int ( ) ] ) , this . java.lang.StringBuilder . java.lang.String ( ) ) ) ; } 
public < T extends java.lang.Number > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final T T ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , T . java.lang.String ( ) ) ; } 
public < T extends de.azapps.mirakel.model.query_builder.ModelBase > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final T T ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.lang.String ( T ) ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final boolean boolean ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , boolean ? STRING : STRING ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.Arrays . java.util.List<java.lang.String> ( new java.lang.String [] { null } ) , new java.util.ArrayList<java.lang.String> < java.lang.String > ( NUMBER ) ) ; } else if ( ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation == de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) || ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation == de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.Collections . java.util.List<java.lang.String> ( java.lang.String ) , new java.util.ArrayList<java.lang.String> < java.lang.String > ( NUMBER ) ) ; } return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.Arrays . java.util.List<java.lang.String> ( new java.lang.String [] { STRING } ) , java.util.Collections . java.util.List<java.lang.String> ( java.lang.String ) ) ; } 
public < T > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final java.util.List<T> < T > java.util.List<T> ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.List<T> , new java.util.ArrayList<java.lang.String> < java.lang.String > ( NUMBER ) ) ; } 
private < T > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final java.util.List<T> < T > java.util.List<T> , final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { if ( ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation == de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) && ! java.util.List<java.lang.String> . boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.List<T> , java.util.List<java.lang.String> ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ) { if ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . boolean ( ) ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , '(' + de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . java.lang.String ( ) + ')' , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . java.util.List<java.lang.String> ) ; } return this ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , final Uri de.azapps.mirakel.model.query_builder.Uri ) { java.lang.String java.lang.String = STRING ; if ( java.util.List<de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation> . boolean ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) ) { java.lang.String = STRING ; } return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String + java.lang.String + ' ' + de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , de.azapps.mirakel.model.query_builder.Uri ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String ) ; } 
public < T extends java.lang.Number > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final T T ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , T . java.lang.String ( ) ) ; } 
public < T extends de.azapps.mirakel.model.query_builder.ModelBase > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final T T ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.lang.String ( T ) ) ; } 
public < T extends java.lang.Number > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final boolean boolean ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , boolean ? STRING : STRING ) ; } 
public < T > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final java.util.List<T> < T > java.util.List<T> ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.List<T> , new java.util.ArrayList<java.lang.String> < java.lang.String > ( NUMBER ) ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.Arrays . java.util.List<java.lang.String> ( new java.lang.String [] { null } ) , new java.util.ArrayList<java.lang.String> < java.lang.String > ( NUMBER ) ) ; } else if ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation == de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.Collections . java.util.List<java.lang.String> ( java.lang.String ) , new java.util.ArrayList<java.lang.String> < java.lang.String > ( NUMBER ) ) ; } return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.Arrays . java.util.List<java.lang.String> ( new java.lang.String [] { STRING } ) , java.util.Collections . java.util.List<java.lang.String> ( java.lang.String ) ) ; } 
private < T > de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final java.util.List<T> < T > java.util.List<T> , final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { if ( ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation == de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) && ( ! java.util.List<java.lang.String> . boolean ( ) ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , java.util.List<T> , java.util.List<java.lang.String> ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , '(' + de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . java.lang.String ( ) + ')' , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . java.util.List<java.lang.String> ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , final Uri de.azapps.mirakel.model.query_builder.Uri ) { java.lang.String java.lang.String = STRING ; if ( java.util.List<de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation> . boolean ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation ) ) { java.lang.String = STRING ; } return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String + java.lang.String + ' ' + de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , de.azapps.mirakel.model.query_builder.Uri ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Conjunction , java.lang.String ) ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ) { if ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . boolean ( ) ) { this . java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . java.lang.String ( ) ) . java.lang.StringBuilder ( ')' ) ; this . java.util.List<java.lang.String> . boolean ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . java.util.List<java.lang.String> ) ; } return this ; } 
public < T extends de.azapps.mirakel.model.query_builder.ModelBase > java.util.List<T> < T > java.util.List<T> ( final java.lang.Class<T> < T > java.lang.Class<T> ) { return de.azapps.mirakel.model.query_builder.CursorWrapper ( de.azapps.mirakel.model.query_builder.Uri ( java.lang.Class<T> ) ) . doWithCursor ( new Cursor2List < T > ( java.lang.Class<T> ) ) ; } 
@ NonNull public < T extends de.azapps.mirakel.model.query_builder.ModelBase > de.azapps.mirakel.model.query_builder.Optional<T> < T > de.azapps.mirakel.model.query_builder.Optional<T> ( final java.lang.Class<T> < T > java.lang.Class<T> , final long long ) { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( ModelBase . ID , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation . de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation , long ) ; return de.azapps.mirakel.model.query_builder.Optional<T> ( java.lang.Class<T> ) ; } 
@ NonNull public < T extends de.azapps.mirakel.model.query_builder.ModelBase > de.azapps.mirakel.model.query_builder.Optional<T> < T > de.azapps.mirakel.model.query_builder.Optional<T> ( final java.lang.Class<T> < T > java.lang.Class<T> ) { return de.azapps.mirakel.model.query_builder.CursorWrapper ( de.azapps.mirakel.model.query_builder.Uri ( java.lang.Class<T> ) ) . doWithCursor ( new CursorWrapper . CursorWrapper < Optional < T > > ( ) { @ Override public Optional < T > convert ( @ NonNull final CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return of ( ModelFactory . createModel ( getter , clazz ) ) ; } else { return absent ( ) ; } } } ) ; } 
@ Override public Optional < T > convert ( @ NonNull final CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return of ( ModelFactory . createModel ( getter , clazz ) ) ; } else { return absent ( ) ; } } 
private < T > de.azapps.mirakel.model.query_builder.Uri de.azapps.mirakel.model.query_builder.Uri ( final java.lang.Class<T> < T > java.lang.Class<T> ) { final Uri de.azapps.mirakel.model.query_builder.Uri ; try { de.azapps.mirakel.model.query_builder.Uri = ( Uri ) java.lang.Class<T> . java.lang.reflect.Field ( STRING ) . java.lang.Object ( null ) ; } catch ( java.lang.NoSuchFieldException | java.lang.IllegalAccessException java.lang.ReflectiveOperationException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<T> . java.lang.String ( ) , java.lang.ReflectiveOperationException ) ; } if ( this . java.util.List<java.lang.String> . boolean ( ) ) { try { this . java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( ( java.lang.String [] ) java.lang.Class<T> . java.lang.reflect.Field ( STRING ) . java.lang.Object ( null ) ) ; } catch ( java.lang.NoSuchFieldException | java.lang.IllegalAccessException java.lang.ReflectiveOperationException ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<T> . java.lang.String ( ) , java.lang.ReflectiveOperationException ) ; } } return de.azapps.mirakel.model.query_builder.Uri ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Sorting de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Sorting ) { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( java.lang.String , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Sorting , null ) ; return this ; } 
public de.azapps.mirakel.model.query_builder.MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ( final java.lang.String java.lang.String , final de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Sorting de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Sorting , final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { if ( this . java.lang.StringBuilder . int ( ) > NUMBER ) { this . java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } this . java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( ' ' ) . java.lang.StringBuilder ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Sorting ) ; if ( java.util.List<java.lang.String> != null ) { this . java.util.List<java.lang.String> . boolean ( java.util.List<java.lang.String> ) ; } return this ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { switch ( this ) { case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : return STRING ; case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : return STRING ; case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : return STRING ; case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : return STRING ; case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : return STRING ; case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : return STRING ; case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : case de.azapps.mirakel.model.query_builder.MirakelQueryBuilder.Operation : return STRING ; default: throw new java.lang.IllegalArgumentException ( STRING + super. java.lang.String ( ) ) ; } } 
public boolean boolean ( ) { return java.lang.StringBuilder . java.lang.String ( ) . java.lang.String ( ) . boolean ( ) && java.util.List<java.lang.String> . boolean ( ) ; } 
public boolean boolean ( ) { return ! boolean ( ) ; } 
public void ( final long long , @ NonNull final java.lang.String java.lang.String , final @ NonNull Period de.azapps.mirakel.model.recurring.Period , final boolean boolean , @ NonNull final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , @ NonNull final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , final boolean boolean , final boolean boolean , final SparseBooleanArray de.azapps.mirakel.model.recurring.SparseBooleanArray , @ NonNull final Optional < java.lang.Long > de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ) { super( long , java.lang.String ); this . boolean = boolean ; this . de.azapps.mirakel.model.recurring.Period = de.azapps.mirakel.model.recurring.Period ; this . setId ( long ) ; this . void ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) ; this . void ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) ; this . boolean = boolean ; this . void ( boolean ) ; this . void ( de.azapps.mirakel.model.recurring.SparseBooleanArray ) ; this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> = de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ; } 
protected void ( final long long , final java.lang.String java.lang.String ) { super( long , java.lang.String ); } 
protected void ( ) { } 
public java.lang.String java.lang.String ( ) { return getName ( ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { setName ( java.lang.String ) ; } 
public boolean boolean ( ) { return this . boolean ; } 
public void void ( final boolean boolean ) { this . boolean = boolean ; } 
public void void ( final @ NonNull Period de.azapps.mirakel.model.recurring.Period ) { de.azapps.mirakel.model.recurring.Period = de.azapps.mirakel.model.recurring.Period . normalizedStandard ( ) ; } 
@ NonNull public de.azapps.mirakel.model.recurring.Period de.azapps.mirakel.model.recurring.Period ( ) { return de.azapps.mirakel.model.recurring.Period ; } 
public long long ( ) { return long ( new DateTime ( ) ) ; } 
private long long ( final @ NonNull DateTime de.azapps.mirakel.model.recurring.DateTime ) { return de.azapps.mirakel.model.recurring.Period . toDurationFrom ( de.azapps.mirakel.model.recurring.DateTime ) . getMillis ( ) ; } 
@ NonNull public de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ( ) { return this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ; } 
public void void ( @ NonNull final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) { this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> = de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ; } 
@ NonNull public de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ( ) { return this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ; } 
public void void ( @ NonNull final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) { this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> = de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ; } 
public boolean boolean ( ) { return this . boolean ; } 
public void void ( final boolean boolean ) { this . boolean = boolean ; } 
public boolean boolean ( ) { return this . boolean ; } 
public java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ( ) { final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( ) ; if ( this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . SUNDAY , false ) ) { java.util.List<java.lang.Integer> . boolean ( DateTimeConstants . SUNDAY ) ; } if ( this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . MONDAY , false ) ) { java.util.List<java.lang.Integer> . boolean ( DateTimeConstants . MONDAY ) ; } if ( this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . TUESDAY , false ) ) { java.util.List<java.lang.Integer> . boolean ( DateTimeConstants . TUESDAY ) ; } if ( this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . WEDNESDAY , false ) ) { java.util.List<java.lang.Integer> . boolean ( DateTimeConstants . WEDNESDAY ) ; } if ( this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . THURSDAY , false ) ) { java.util.List<java.lang.Integer> . boolean ( DateTimeConstants . THURSDAY ) ; } if ( this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . FRIDAY , false ) ) { java.util.List<java.lang.Integer> . boolean ( DateTimeConstants . FRIDAY ) ; } if ( this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . SATURDAY , false ) ) { java.util.List<java.lang.Integer> . boolean ( DateTimeConstants . SATURDAY ) ; } return java.util.List<java.lang.Integer> ; } 
public void void ( final SparseBooleanArray de.azapps.mirakel.model.recurring.SparseBooleanArray ) { if ( de.azapps.mirakel.model.recurring.SparseBooleanArray == null ) { this . de.azapps.mirakel.model.recurring.SparseBooleanArray = new SparseBooleanArray ( ) ; } else { this . de.azapps.mirakel.model.recurring.SparseBooleanArray = de.azapps.mirakel.model.recurring.SparseBooleanArray ; } } 
@ NonNull public de.azapps.mirakel.model.recurring.Optional<java.lang.Long> < java.lang.Long > de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ( ) { return this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ; } 
public void void ( @ NonNull final Optional < java.lang.Long > de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ) { this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> = de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ; } 
public void void ( final boolean boolean ) { this . boolean = boolean ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.model.recurring.ContentValues de.azapps.mirakel.model.recurring.ContentValues ( ) { final ContentValues de.azapps.mirakel.model.recurring.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( ModelBase . ID , getId ( ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.Period . getMinutes ( ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.Period . getHours ( ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.Period . getDays ( ) + ( NUMBER * this . de.azapps.mirakel.model.recurring.Period . getWeeks ( ) ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.Period . getMonths ( ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.Period . getYears ( ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . boolean ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , getName ( ) ) ; if ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . isPresent ( ) ) { de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . get ( ) . getMillis ( ) ) ; } else { de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , ( java.lang.Long ) null ) ; } if ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . isPresent ( ) ) { de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . get ( ) . getMillis ( ) ) ; } else { de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , ( java.lang.Long ) null ) ; } de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . boolean ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . boolean ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . MONDAY , false ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . TUESDAY , false ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . WEDNESDAY , false ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . THURSDAY , false ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . FRIDAY , false ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . SATURDAY , false ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( DateTimeConstants . SUNDAY , false ) ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> . orNull ( ) ) ; return de.azapps.mirakel.model.recurring.ContentValues ; } 
@ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof de.azapps.mirakel.model.recurring.RecurringBase ) ) { return false ; } final de.azapps.mirakel.model.recurring.RecurringBase de.azapps.mirakel.model.recurring.RecurringBase = ( de.azapps.mirakel.model.recurring.RecurringBase ) java.lang.Object ; if ( this . getId ( ) != de.azapps.mirakel.model.recurring.RecurringBase . getId ( ) ) { return false ; } if ( ! Objects . equal ( de.azapps.mirakel.model.recurring.Period , de.azapps.mirakel.model.recurring.RecurringBase . de.azapps.mirakel.model.recurring.Period ) ) { return false ; } if ( ( ! this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> . isPresent ( ) && de.azapps.mirakel.model.recurring.RecurringBase . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> . isPresent ( ) ) || ( this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> . isPresent ( ) && ! this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> . get ( ) . equals ( de.azapps.mirakel.model.recurring.RecurringBase . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> . orNull ( ) ) ) ) { return false ; } if ( ! DateTimeHelper . equalsCalendar ( this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , de.azapps.mirakel.model.recurring.RecurringBase . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) ) { return false ; } if ( this . boolean != de.azapps.mirakel.model.recurring.RecurringBase . boolean ) { return false ; } if ( this . boolean != de.azapps.mirakel.model.recurring.RecurringBase . boolean ) { return false ; } if ( ! this . getName ( ) . equals ( de.azapps.mirakel.model.recurring.RecurringBase . getName ( ) ) ) { return false ; } if ( ! DateTimeHelper . equalsCalendar ( this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , de.azapps.mirakel.model.recurring.RecurringBase . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) ) { return false ; } if ( this . boolean != de.azapps.mirakel.model.recurring.RecurringBase . boolean ) { return false ; } return true ; } 
@ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = int * int + ( int ) this . getId ( ) ; int = int * int + de.azapps.mirakel.model.recurring.Period ( ) . hashCode ( ) ; int = int * int + ( ! this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> . isPresent ( ) ? NUMBER : this . de.azapps.mirakel.model.recurring.Optional<java.lang.Long> . get ( ) . hashCode ( ) ) ; int = int * int + ( ! this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . isPresent ( ) ? NUMBER : this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . get ( ) . hashCode ( ) ) ; int = int * int + ( this . boolean ? NUMBER : NUMBER ) ; int = int * int + ( this . boolean ? NUMBER : NUMBER ) ; int = int * int + ( this . getName ( ) == null ? NUMBER : this . getName ( ) . hashCode ( ) ) ; int = int * int + ( ! this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . isPresent ( ) ? NUMBER : this . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . get ( ) . hashCode ( ) ) ; int = int * int + ( this . boolean ? NUMBER : NUMBER ) ; return int ; } 
protected void ( ) { } 
protected de.azapps.mirakel.model.recurring.Uri de.azapps.mirakel.model.recurring.Uri ( ) { return de.azapps.mirakel.model.recurring.Uri ; } 
public void ( final long long , final java.lang.String java.lang.String , final @ NonNull Period de.azapps.mirakel.model.recurring.Period , final boolean boolean , @ NonNull final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , @ NonNull final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , final boolean boolean , final boolean boolean , @ NonNull final SparseBooleanArray de.azapps.mirakel.model.recurring.SparseBooleanArray , @ NonNull final Optional < java.lang.Long > de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ) { super( long , java.lang.String , de.azapps.mirakel.model.recurring.Period , boolean , de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , boolean , boolean , de.azapps.mirakel.model.recurring.SparseBooleanArray , de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ); } 
public void ( final @ NonNull CursorGetter de.azapps.mirakel.model.recurring.CursorGetter ) { super( de.azapps.mirakel.model.recurring.CursorGetter . getLong ( ID ) , de.azapps.mirakel.model.recurring.CursorGetter . getString ( LABEL ) ); final SparseBooleanArray de.azapps.mirakel.model.recurring.SparseBooleanArray = new SparseBooleanArray ( ) ; de.azapps.mirakel.model.recurring.SparseBooleanArray . put ( DateTimeConstants . MONDAY , de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( MONDAY ) ) ; de.azapps.mirakel.model.recurring.SparseBooleanArray . put ( DateTimeConstants . TUESDAY , de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( TUESDAY ) ) ; de.azapps.mirakel.model.recurring.SparseBooleanArray . put ( DateTimeConstants . WEDNESDAY , de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( WEDNESDAY ) ) ; de.azapps.mirakel.model.recurring.SparseBooleanArray . put ( DateTimeConstants . THURSDAY , de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( THURSDAY ) ) ; de.azapps.mirakel.model.recurring.SparseBooleanArray . put ( DateTimeConstants . FRIDAY , de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( FRIDAY ) ) ; de.azapps.mirakel.model.recurring.SparseBooleanArray . put ( DateTimeConstants . SATURDAY , de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( SATURDAY ) ) ; de.azapps.mirakel.model.recurring.SparseBooleanArray . put ( DateTimeConstants . SUNDAY , de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( SUNDAY ) ) ; setInterval ( new Period ( de.azapps.mirakel.model.recurring.CursorGetter . getInt ( YEARS ) , de.azapps.mirakel.model.recurring.CursorGetter . getInt ( MONTHS ) , NUMBER , de.azapps.mirakel.model.recurring.CursorGetter . getInt ( DAYS ) , de.azapps.mirakel.model.recurring.CursorGetter . getInt ( HOURS ) , de.azapps.mirakel.model.recurring.CursorGetter . getInt ( MINUTES ) , NUMBER , NUMBER ) ) ; setForDue ( de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( FOR_DUE ) ) ; setStartDate ( de.azapps.mirakel.model.recurring.CursorGetter . getOptional ( START_DATE , DateTime .class ) ) ; setEndDate ( de.azapps.mirakel.model.recurring.CursorGetter . getOptional ( END_DATE , DateTime .class ) ) ; setTemporary ( de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( TEMPORARY ) ) ; setExact ( de.azapps.mirakel.model.recurring.CursorGetter . getBoolean ( EXACT ) ) ; setWeekdays ( de.azapps.mirakel.model.recurring.SparseBooleanArray ) ; setDerivedFrom ( de.azapps.mirakel.model.recurring.CursorGetter . getOptional ( DERIVED , java.lang.Long .class ) ) ; } 
@ NonNull public static de.azapps.mirakel.model.recurring.Recurring de.azapps.mirakel.model.recurring.Recurring ( final java.lang.String java.lang.String , final @ NonNull Period de.azapps.mirakel.model.recurring.Period , final boolean boolean , final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , final boolean boolean , final boolean boolean , final SparseBooleanArray de.azapps.mirakel.model.recurring.SparseBooleanArray ) { final de.azapps.mirakel.model.recurring.Recurring de.azapps.mirakel.model.recurring.Recurring = new de.azapps.mirakel.model.recurring.Recurring ( INVALID_ID , java.lang.String , de.azapps.mirakel.model.recurring.Period , boolean , de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , boolean , boolean , de.azapps.mirakel.model.recurring.SparseBooleanArray , Optional .< java.lang.Long > absent ( ) ) ; return de.azapps.mirakel.model.recurring.Recurring . de.azapps.mirakel.model.recurring.Recurring ( ) ; } 
@ NonNull public de.azapps.mirakel.model.recurring.Recurring de.azapps.mirakel.model.recurring.Recurring ( ) { final ContentValues de.azapps.mirakel.model.recurring.ContentValues = getContentValues ( ) ; de.azapps.mirakel.model.recurring.ContentValues . remove ( ModelBase . ID ) ; setId ( insert ( de.azapps.mirakel.model.recurring.Uri , de.azapps.mirakel.model.recurring.ContentValues ) ) ; return de.azapps.mirakel.model.recurring.Recurring . de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ( getId ( ) ) . get ( ) ; } 
@ NonNull public static de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> < de.azapps.mirakel.model.recurring.Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ( final long long ) { return new MirakelQueryBuilder ( context ) . get ( de.azapps.mirakel.model.recurring.Recurring .class , long ) ; } 
@ NonNull public static de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> < de.azapps.mirakel.model.recurring.Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ( final int int , final int int , final int int , final int int , final int int , final java.util.Calendar java.util.Calendar , final java.util.Calendar java.util.Calendar ) { MirakelQueryBuilder de.azapps.mirakel.model.recurring.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) . and ( MINUTES , Operation . EQ , int ) . and ( HOURS , Operation . EQ , int ) . and ( DAYS , Operation . EQ , int ) . and ( MONTHS , Operation . EQ , int ) . and ( YEARS , Operation . EQ , int ) ; if ( java.util.Calendar != null ) { de.azapps.mirakel.model.recurring.MirakelQueryBuilder . and ( START_DATE , Operation . EQ , DateTimeHelper . formatDateTime ( java.util.Calendar ) ) ; } else { de.azapps.mirakel.model.recurring.MirakelQueryBuilder . and ( START_DATE , Operation . EQ , ( java.lang.String ) null ) ; } if ( java.util.Calendar != null ) { de.azapps.mirakel.model.recurring.MirakelQueryBuilder . and ( END_DATE , Operation . EQ , DateTimeHelper . formatDateTime ( java.util.Calendar ) ) ; } else { de.azapps.mirakel.model.recurring.MirakelQueryBuilder . and ( END_DATE , Operation . EQ , ( java.lang.String ) null ) ; } return de.azapps.mirakel.model.recurring.MirakelQueryBuilder . get ( de.azapps.mirakel.model.recurring.Recurring .class ) ; } 
@ NonNull public static de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> < de.azapps.mirakel.model.recurring.Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ( final int int , final int int , final int int ) { return de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ( NUMBER , NUMBER , int , int , int , null , null ) ; } 
public static void void ( final long long ) { delete ( de.azapps.mirakel.model.recurring.Uri , TEMPORARY + STRING + ID + '=' + long , null ) ; } 
public void void ( ) { MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { delete ( de.azapps.mirakel.model.recurring.Uri , ID + '=' + getId ( ) , null ) ; final ContentValues de.azapps.mirakel.model.recurring.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( Task . RECURRING , - NUMBER ) ; update ( MirakelInternalContentProvider . TASK_URI , de.azapps.mirakel.model.recurring.ContentValues , Task . RECURRING + '=' + getId ( ) , null ) ; final ContentValues de.azapps.mirakel.model.recurring.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( Task . RECURRING_REMINDER , - NUMBER ) ; update ( MirakelInternalContentProvider . TASK_URI , de.azapps.mirakel.model.recurring.ContentValues , Task . RECURRING_REMINDER + '=' + getId ( ) , null ) ; } } ) ; } 
@ java.lang.Override public void void ( ) { delete ( de.azapps.mirakel.model.recurring.Uri , ID + '=' + getId ( ) , null ) ; final ContentValues de.azapps.mirakel.model.recurring.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( Task . RECURRING , - NUMBER ) ; update ( MirakelInternalContentProvider . TASK_URI , de.azapps.mirakel.model.recurring.ContentValues , Task . RECURRING + '=' + getId ( ) , null ) ; final ContentValues de.azapps.mirakel.model.recurring.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.recurring.ContentValues . put ( Task . RECURRING_REMINDER , - NUMBER ) ; update ( MirakelInternalContentProvider . TASK_URI , de.azapps.mirakel.model.recurring.ContentValues , Task . RECURRING_REMINDER + '=' + getId ( ) , null ) ; } 
public static java.util.List<de.azapps.mirakel.model.recurring.Recurring> < de.azapps.mirakel.model.recurring.Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> ( ) { return new MirakelQueryBuilder ( context ) . getList ( de.azapps.mirakel.model.recurring.Recurring .class ) ; } 
@ NonNull public de.azapps.mirakel.model.recurring.Task de.azapps.mirakel.model.recurring.Task ( final Task de.azapps.mirakel.model.recurring.Task ) { if ( ! de.azapps.mirakel.model.recurring.Task . getDue ( ) . isPresent ( ) ) { return de.azapps.mirakel.model.recurring.Task ; } final DateTime de.azapps.mirakel.model.recurring.DateTime = de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ( of ( new DateTime ( de.azapps.mirakel.model.recurring.Task . getDue ( ) . get ( ) ) ) , true ) . get ( ) ; if ( de.azapps.mirakel.model.recurring.DateTime . compareTo ( de.azapps.mirakel.model.recurring.Task . getDue ( ) . get ( ) ) == NUMBER ) { return de.azapps.mirakel.model.recurring.Task ; } return new MirakelQueryBuilder ( context ) . select ( java.lang.String[] ) . and ( CHILD , Operation . EQ , de.azapps.mirakel.model.recurring.Task ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI ) . doWithCursor ( new CursorWrapper . CursorWrapper < Task > ( ) { @ Override public Task convert ( @ NonNull CursorGetter getter ) { long masterID = t . getId ( ) ; long offset = NUMBER ; long offsetCount = NUMBER ; if ( getter . moveToFirst ( ) ) { masterID = getter . getLong ( PARENT ) ; offset = getter . getLong ( OFFSET ) ; offsetCount = getter . getLong ( OFFSET_COUNT ) ; } offset += newDue . getMillis ( ) - t . getDue ( ) . get ( ) . getMillis ( ) ; ++ offsetCount ; Optional < Task > child = new MirakelQueryBuilder ( context ) . select ( CHILD ) . and ( PARENT , Operation . EQ , masterID ) . and ( OFFSET_COUNT , Operation . EQ , offsetCount ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI ) . doWithCursor ( new CursorWrapper . CursorConverter < Optional < Task > > ( ) { @ Override public Optional < Task > convert ( @ NonNull final CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return Task . get ( getter . getLong ( NUMBER ) ) ; } return absent ( ) ; } } ) ; if ( child . isPresent ( ) ) { return child . get ( ) ; } t . setDue ( of ( newDue ) ) ; final Task newTask ; try { newTask = t . create ( ) ; } catch ( final NoSuchListException e ) { Log . wtf ( TAG , STRING , e ) ; ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; return t ; } ContentValues cv = new ContentValues ( ) ; cv . put ( Task . RECURRING , t . getRecurrenceId ( ) ) ; cv . put ( Task . UUID , UUID . randomUUID ( ) . toString ( ) ) ; cv . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . ADD . toInt ( ) ) ; update ( MirakelInternalContentProvider . TASK_URI , cv , ModelBase . ID + STRING , new String [] { String . valueOf ( newTask . getId ( ) ) } ) ; cv = new ContentValues ( ) ; cv . put ( PARENT , masterID ) ; cv . put ( CHILD , newTask . getId ( ) ) ; cv . put ( OFFSET , offset ) ; cv . put ( OFFSET_COUNT , offsetCount ) ; insert ( MirakelInternalContentProvider . RECURRING_TW_URI , cv ) ; return newTask ; } } ) ; } 
@ Override public Task convert ( @ NonNull CursorGetter getter ) { long masterID = t . getId ( ) ; long offset = NUMBER ; long offsetCount = NUMBER ; if ( getter . moveToFirst ( ) ) { masterID = getter . getLong ( PARENT ) ; offset = getter . getLong ( OFFSET ) ; offsetCount = getter . getLong ( OFFSET_COUNT ) ; } offset += newDue . getMillis ( ) - t . getDue ( ) . get ( ) . getMillis ( ) ; ++ offsetCount ; Optional < Task > child = new MirakelQueryBuilder ( context ) . select ( CHILD ) . and ( PARENT , Operation . EQ , masterID ) . and ( OFFSET_COUNT , Operation . EQ , offsetCount ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI ) . doWithCursor ( new CursorWrapper . CursorConverter < Optional < Task > > ( ) { @ Override public Optional < Task > convert ( @ NonNull final CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return Task . get ( getter . getLong ( NUMBER ) ) ; } return absent ( ) ; } } ) ; if ( child . isPresent ( ) ) { return child . get ( ) ; } t . setDue ( of ( newDue ) ) ; final Task newTask ; try { newTask = t . create ( ) ; } catch ( final NoSuchListException e ) { Log . wtf ( TAG , STRING , e ) ; ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; return t ; } ContentValues cv = new ContentValues ( ) ; cv . put ( Task . RECURRING , t . getRecurrenceId ( ) ) ; cv . put ( Task . UUID , UUID . randomUUID ( ) . toString ( ) ) ; cv . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . ADD . toInt ( ) ) ; update ( MirakelInternalContentProvider . TASK_URI , cv , ModelBase . ID + STRING , new String [] { String . valueOf ( newTask . getId ( ) ) } ) ; cv = new ContentValues ( ) ; cv . put ( PARENT , masterID ) ; cv . put ( CHILD , newTask . getId ( ) ) ; cv . put ( OFFSET , offset ) ; cv . put ( OFFSET_COUNT , offsetCount ) ; insert ( MirakelInternalContentProvider . RECURRING_TW_URI , cv ) ; return newTask ; } 
@ Override public Optional < Task > convert ( @ NonNull final CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return Task . get ( getter . getLong ( NUMBER ) ) ; } return absent ( ) ; } 
@ NonNull public de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ( final @ NonNull Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) { return de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , false ) ; } 
@ NonNull private de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ( @ NonNull final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> , final boolean boolean ) { if ( ! de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . isPresent ( ) ) { return absent ( ) ; } DateTime de.azapps.mirakel.model.recurring.DateTime = de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> . get ( ) ; final DateTime de.azapps.mirakel.model.recurring.DateTime = new DateTime ( ) ; if ( isExact ( ) ) { de.azapps.mirakel.model.recurring.DateTime = de.azapps.mirakel.model.recurring.DateTime ; } de.azapps.mirakel.model.recurring.DateTime . withSecondOfMinute ( NUMBER ) ; de.azapps.mirakel.model.recurring.DateTime . withMinuteOfHour ( NUMBER ) ; final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = getWeekdays ( ) ; if ( java.util.List<java.lang.Integer> . boolean ( ) ) { if ( ( ! getStartDate ( ) . isPresent ( ) || de.azapps.mirakel.model.recurring.DateTime . isAfter ( getStartDate ( ) . get ( ) ) ) && ( ! getEndDate ( ) . isPresent ( ) || de.azapps.mirakel.model.recurring.DateTime . isBefore ( getEndDate ( ) . get ( ) ) ) ) { do { de.azapps.mirakel.model.recurring.DateTime = de.azapps.mirakel.model.recurring.DateTime . plus ( recurringInterval ) ; } while ( de.azapps.mirakel.model.recurring.DateTime . isBefore ( de.azapps.mirakel.model.recurring.DateTime ) && ! boolean ); } } else { int int = NUMBER ; if ( de.azapps.mirakel.model.recurring.DateTime . isBefore ( de.azapps.mirakel.model.recurring.DateTime ) ) { de.azapps.mirakel.model.recurring.DateTime = de.azapps.mirakel.model.recurring.DateTime ; } de.azapps.mirakel.model.recurring.DateTime = de.azapps.mirakel.model.recurring.DateTime . plusDays ( NUMBER ) ; for ( final java.lang.Integer java.lang.Integer : java.util.List<java.lang.Integer> ) { int int = java.lang.Integer - de.azapps.mirakel.model.recurring.DateTime . getDayOfWeek ( ) ; if ( int < NUMBER ) { int += NUMBER ; } if ( int > int ) { int = int ; } } de.azapps.mirakel.model.recurring.DateTime = de.azapps.mirakel.model.recurring.DateTime . plusDays ( int ) ; } return of ( de.azapps.mirakel.model.recurring.DateTime ) ; } 
public static java.util.List<de.azapps.mirakel.model.recurring.Pair<java.lang.Integer,java.lang.String>> < Pair < java.lang.Integer , java.lang.String > > java.util.List<de.azapps.mirakel.model.recurring.Pair<java.lang.Integer,java.lang.String>> ( final boolean boolean ) { final MirakelQueryBuilder de.azapps.mirakel.model.recurring.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) . and ( TEMPORARY , Operation . EQ , false ) ; if ( boolean ) { de.azapps.mirakel.model.recurring.MirakelQueryBuilder . and ( FOR_DUE , Operation . EQ , true ) ; } return de.azapps.mirakel.model.recurring.MirakelQueryBuilder . select ( ID , LABEL ) . query ( de.azapps.mirakel.model.recurring.Uri ) . doWithCursor ( new Cursor2List <> ( new CursorWrapper . CursorWrapper < Pair < java.lang.Integer , java.lang.String > > ( ) { @ Override public Pair < Integer , String > convert ( @ NonNull final CursorGetter getter ) { return new Pair <> ( getter . getInt ( ID ) , getter . getString ( LABEL ) ) ; } } ) ) ; } 
@ Override public Pair < Integer , String > convert ( @ NonNull final CursorGetter getter ) { return new Pair <> ( getter . getInt ( ID ) , getter . getString ( LABEL ) ) ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.recurring.Parcel , final int int ) { de.azapps.mirakel.model.recurring.Parcel . writeSerializable ( recurringInterval ) ; de.azapps.mirakel.model.recurring.Parcel . writeByte ( forDue ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.recurring.Parcel . writeSerializable ( this . startDate ) ; de.azapps.mirakel.model.recurring.Parcel . writeSerializable ( this . endDate ) ; de.azapps.mirakel.model.recurring.Parcel . writeByte ( temporary ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.recurring.Parcel . writeByte ( isExact ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.recurring.Parcel . writeSparseBooleanArray ( this . weekdays ) ; de.azapps.mirakel.model.recurring.Parcel . writeSerializable ( this . derivedFrom ) ; de.azapps.mirakel.model.recurring.Parcel . writeLong ( getId ( ) ) ; de.azapps.mirakel.model.recurring.Parcel . writeString ( getName ( ) ) ; } 
@ java.lang.SuppressWarnings ( STRING ) private void ( final Parcel de.azapps.mirakel.model.recurring.Parcel ) { super(); this . recurringInterval = ( Period ) de.azapps.mirakel.model.recurring.Parcel . readSerializable ( ) ; this . forDue = de.azapps.mirakel.model.recurring.Parcel . readByte ( ) != NUMBER ; this . startDate = ( Optional < DateTime > ) de.azapps.mirakel.model.recurring.Parcel . readSerializable ( ) ; this . endDate = ( Optional < DateTime > ) de.azapps.mirakel.model.recurring.Parcel . readSerializable ( ) ; this . temporary = de.azapps.mirakel.model.recurring.Parcel . readByte ( ) != NUMBER ; this . isExact = de.azapps.mirakel.model.recurring.Parcel . readByte ( ) != NUMBER ; this . weekdays = de.azapps.mirakel.model.recurring.Parcel . readSparseBooleanArray ( ) ; this . derivedFrom = ( Optional < java.lang.Long > ) de.azapps.mirakel.model.recurring.Parcel . readSerializable ( ) ; setId ( de.azapps.mirakel.model.recurring.Parcel . readLong ( ) ) ; setName ( de.azapps.mirakel.model.recurring.Parcel . readString ( ) ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.recurring.Recurring de.azapps.mirakel.model.recurring.Recurring ( final Parcel de.azapps.mirakel.model.recurring.Parcel ) { return new de.azapps.mirakel.model.recurring.Recurring ( de.azapps.mirakel.model.recurring.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.recurring.Recurring [] de.azapps.mirakel.model.recurring.Recurring[] ( final int int ) { return new de.azapps.mirakel.model.recurring.Recurring [ int ] ; } 
public java.lang.String java.lang.String ( ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; if ( startDate . isPresent ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . begin_repeat , DateTimeHelper . formatDate ( context , startDate ) ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( ' ' ) ; } final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; boolean boolean = true ; for ( final int int : getWeekdays ( ) ) { if ( boolean ) { boolean = false ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } switch ( int ) { case DateTimeConstants . MONDAY : java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . monday ) ) ; break; case DateTimeConstants . TUESDAY : java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . tuesday ) ) ; break; case DateTimeConstants . WEDNESDAY : java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . wednesday ) ) ; break; case DateTimeConstants . THURSDAY : java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . thursday ) ) ; break; case DateTimeConstants . FRIDAY : java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . friday ) ) ; break; case DateTimeConstants . SATURDAY : java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . saturday ) ) ; break; case DateTimeConstants . SUNDAY : java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . sunday ) ) ; break; } } if ( java.lang.StringBuilder . int ( ) == NUMBER ) { if ( recurringInterval . getYears ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( context . getResources ( ) . getQuantityString ( R . plurals . repeat_year , recurringInterval . getYears ( ) , recurringInterval . getYears ( ) ) ) ; } if ( recurringInterval . getMonths ( ) > NUMBER ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( context . getResources ( ) . getQuantityString ( R . plurals . repeat_month , recurringInterval . getMonths ( ) , recurringInterval . getMonths ( ) ) ) ; } if ( recurringInterval . getWeeks ( ) > NUMBER ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( context . getResources ( ) . getQuantityString ( R . plurals . repeat_week , recurringInterval . getWeeks ( ) , recurringInterval . getWeeks ( ) ) ) ; } if ( recurringInterval . getHours ( ) > NUMBER ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( context . getResources ( ) . getQuantityString ( R . plurals . repeat_hour , recurringInterval . getHours ( ) , recurringInterval . getHours ( ) ) ) ; } if ( recurringInterval . getMinutes ( ) > NUMBER ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( context . getResources ( ) . getQuantityString ( R . plurals . repeat_minute , recurringInterval . getMinutes ( ) , recurringInterval . getMinutes ( ) ) ) ; } } java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . every_repeat , java.lang.StringBuilder . java.lang.String ( ) ) ) ; if ( endDate . isPresent ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( ' ' ) ; java.lang.StringBuilder . java.lang.StringBuilder ( context . getString ( R . string . end_repeat , DateTimeHelper . formatDate ( context , endDate ) ) ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; } 
public void ( final int int , final @ NonNull java.lang.String java.lang.String , final @ Nullable java.lang.Integer java.lang.Integer , final @ Nullable java.lang.Integer java.lang.Integer , final @ NonNull Optional < ListMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , final @ Nullable java.lang.Integer java.lang.Integer ) { super( int , java.lang.String . java.lang.String ( java.util.Locale . java.util.Locale ( ) ) ); this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = fromNullable ( java.lang.Integer ) ; this . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> = de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> ; this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = fromNullable ( java.lang.Integer ) ; this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = fromNullable ( java.lang.Integer ) ; } 
void ( final long long , final java.lang.String java.lang.String ) { super( long , java.lang.String ); } 
protected void ( ) { } 
public java.lang.String java.lang.String ( ) { return getName ( ) ; } 
public void void ( final java.lang.String java.lang.String ) { setName ( java.lang.String . java.lang.String ( java.util.Locale . java.util.Locale ( ) ) ) ; } 
@ NonNull public de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ( ) { return de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ; } 
public void void ( final @ NonNull Optional < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) { this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ; } 
@ NonNull public de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ( ) { return de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ; } 
public void void ( final @ NonNull Optional < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) { this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ; } 
@ NonNull public de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> < ListMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> ( ) { return de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> ; } 
public void void ( final @ NonNull Optional < ListMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> ) { this . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> = de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> ; } 
@ NonNull public de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ( ) { return de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ; } 
public void void ( final @ NonNull Optional < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) { this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ; } 
@ java.lang.Override @ NonNull public de.azapps.mirakel.model.semantic.ContentValues de.azapps.mirakel.model.semantic.ContentValues ( ) { final ContentValues de.azapps.mirakel.model.semantic.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.semantic.ContentValues . put ( ID , getId ( ) ) ; de.azapps.mirakel.model.semantic.ContentValues . put ( java.lang.String , getName ( ) ) ; de.azapps.mirakel.model.semantic.ContentValues . put ( java.lang.String , OptionalUtils . transformOrNull ( this . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , new Function < ListMirakel , java.lang.Long > ( ) { @ java.lang.Override public java.lang.Long java.lang.Long ( ListMirakel de.azapps.mirakel.model.semantic.ListMirakel ) { return de.azapps.mirakel.model.semantic.ListMirakel . getId ( ) ; } } ) ) ; de.azapps.mirakel.model.semantic.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . orNull ( ) ) ; de.azapps.mirakel.model.semantic.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . orNull ( ) ) ; de.azapps.mirakel.model.semantic.ContentValues . put ( java.lang.String , this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . orNull ( ) ) ; return de.azapps.mirakel.model.semantic.ContentValues ; } 
@ java.lang.Override public java.lang.Long java.lang.Long ( ListMirakel de.azapps.mirakel.model.semantic.ListMirakel ) { return de.azapps.mirakel.model.semantic.ListMirakel . getId ( ) ; } 
@ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof de.azapps.mirakel.model.semantic.SemanticBase ) ) { return false ; } final de.azapps.mirakel.model.semantic.SemanticBase de.azapps.mirakel.model.semantic.SemanticBase = ( de.azapps.mirakel.model.semantic.SemanticBase ) java.lang.Object ; if ( ! this . getName ( ) . equals ( de.azapps.mirakel.model.semantic.SemanticBase . getName ( ) ) ) { return false ; } if ( this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) != de.azapps.mirakel.model.semantic.SemanticBase . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) ) { return false ; } else if ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) && ! de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . get ( ) . equals ( de.azapps.mirakel.model.semantic.SemanticBase . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . get ( ) ) ) { return false ; } if ( this . getId ( ) != de.azapps.mirakel.model.semantic.SemanticBase . getId ( ) ) { return false ; } if ( this . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . isPresent ( ) != de.azapps.mirakel.model.semantic.SemanticBase . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . isPresent ( ) ) { return false ; } else if ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . isPresent ( ) && ! de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . get ( ) . equals ( de.azapps.mirakel.model.semantic.SemanticBase . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . get ( ) ) ) { return false ; } if ( this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) != de.azapps.mirakel.model.semantic.SemanticBase . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) ) { return false ; } else if ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) && ! de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . get ( ) . equals ( de.azapps.mirakel.model.semantic.SemanticBase . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . get ( ) ) ) { return false ; } if ( this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) != de.azapps.mirakel.model.semantic.SemanticBase . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) ) { return false ; } else if ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . isPresent ( ) && ! de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . get ( ) . equals ( de.azapps.mirakel.model.semantic.SemanticBase . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . get ( ) ) ) { return false ; } return true ; } 
@ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = int * int + ( this . getName ( ) . hashCode ( ) ) ; int = int * int + ( this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . hashCode ( ) ) ; int = int * int + ( int ) this . getId ( ) ; int int = NUMBER ; if ( this . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . isPresent ( ) ) { int = this . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . get ( ) . hashCode ( ) ; } int = int * int + int ; int = int * int + ( this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . hashCode ( ) ) ; int = int * int + ( this . de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> . hashCode ( ) ) ; return int ; } 
public void ( final @ NonNull CursorGetter de.azapps.mirakel.model.semantic.CursorGetter ) { super( de.azapps.mirakel.model.semantic.CursorGetter . getLong ( ID ) , de.azapps.mirakel.model.semantic.CursorGetter . getString ( CONDITION ) ); priority = de.azapps.mirakel.model.semantic.CursorGetter . getOptional ( PRIORITY , java.lang.Integer .class ) ; due = de.azapps.mirakel.model.semantic.CursorGetter . getOptional ( DUE , java.lang.Integer .class ) ; list = de.azapps.mirakel.model.semantic.CursorGetter . getOptional ( LIST , ListMirakel .class ) ; weekday = de.azapps.mirakel.model.semantic.CursorGetter . getOptional ( WEEKDAY , java.lang.Integer .class ) ; } 
private void ( final Parcel de.azapps.mirakel.model.semantic.Parcel ) { super(); setId ( de.azapps.mirakel.model.semantic.Parcel . readLong ( ) ) ; setName ( de.azapps.mirakel.model.semantic.Parcel . readString ( ) ) ; priority = OptionalUtils . readFromParcel ( de.azapps.mirakel.model.semantic.Parcel , java.lang.Integer .class ) ; due = OptionalUtils . readFromParcel ( de.azapps.mirakel.model.semantic.Parcel , java.lang.Integer .class ) ; list = OptionalUtils . readFromParcel ( de.azapps.mirakel.model.semantic.Parcel , ListMirakel .class ) ; weekday = OptionalUtils . readFromParcel ( de.azapps.mirakel.model.semantic.Parcel , java.lang.Integer .class ) ; } 
public void ( final int int , final java.lang.String java.lang.String , final java.lang.Integer java.lang.Integer , final java.lang.Integer java.lang.Integer , final Optional < ListMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , final java.lang.Integer java.lang.Integer ) { super( int , java.lang.String , java.lang.Integer , java.lang.Integer , de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , java.lang.Integer ); } 
@ java.lang.Override protected de.azapps.mirakel.model.semantic.Uri de.azapps.mirakel.model.semantic.Uri ( ) { return de.azapps.mirakel.model.semantic.Uri ; } 
@ NonNull public static java.util.List<de.azapps.mirakel.model.semantic.Semantic> < de.azapps.mirakel.model.semantic.Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> ( ) { return new MirakelQueryBuilder ( context ) . getList ( de.azapps.mirakel.model.semantic.Semantic .class ) ; } 
@ NonNull public static de.azapps.mirakel.model.semantic.Task de.azapps.mirakel.model.semantic.Task ( final java.lang.String java.lang.String , final Optional < ListMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , final boolean boolean ) { final Task de.azapps.mirakel.model.semantic.Task = de.azapps.mirakel.model.semantic.Task ( java.lang.String , de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , boolean ) ; try { return de.azapps.mirakel.model.semantic.Task . create ( ) ; } catch ( final DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { ErrorReporter . report ( ErrorType . TASKS_NO_LIST ) ; Log . e ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; throw new java.lang.IllegalStateException ( STRING , DefinitionsHelper.NoSuchListException ) ; } } 
private static de.azapps.mirakel.model.semantic.DateTime de.azapps.mirakel.model.semantic.DateTime ( ) { return new DateTime ( ) . withHourOfDay ( NUMBER ) . withMinuteOfHour ( NUMBER ) . withSecondOfMinute ( NUMBER ) ; } 
public void void ( @ NonNull final Task de.azapps.mirakel.model.semantic.Task ) { if ( getPriority ( ) . isPresent ( ) ) { de.azapps.mirakel.model.semantic.Task . setPriority ( getPriority ( ) . get ( ) ) ; } if ( getDue ( ) . isPresent ( ) ) { final DateTime de.azapps.mirakel.model.semantic.DateTime = de.azapps.mirakel.model.semantic.DateTime ( ) ; de.azapps.mirakel.model.semantic.DateTime . plusDays ( getDue ( ) . get ( ) ) ; de.azapps.mirakel.model.semantic.Task . setDue ( of ( de.azapps.mirakel.model.semantic.DateTime ) ) ; } if ( getList ( ) . isPresent ( ) ) { de.azapps.mirakel.model.semantic.Task . setList ( getList ( ) . get ( ) ) ; } if ( getWeekday ( ) . isPresent ( ) ) { final DateTime de.azapps.mirakel.model.semantic.DateTime = de.azapps.mirakel.model.semantic.DateTime ( ) ; int int = getWeekday ( ) . get ( ) + NUMBER ; final java.util.Calendar java.util.Calendar = de.azapps.mirakel.model.semantic.DateTime . toGregorianCalendar ( ) ; if ( int == NUMBER ) { int = NUMBER ; } do { java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; } while ( java.util.Calendar . int ( java.util.Calendar . int ) != int ); de.azapps.mirakel.model.semantic.Task . setDue ( of ( new DateTime ( java.util.Calendar ) ) ) ; } } 
public static boolean boolean ( @ NonNull final Task de.azapps.mirakel.model.semantic.Task , @ NonNull java.lang.String java.lang.String ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( java.util.Locale . java.util.Locale ( ) ) ; final java.lang.String [] java.lang.String[] = java.util.regex.Pattern . java.lang.String[] ( java.lang.String ) ; boolean boolean = false ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { final de.azapps.mirakel.model.semantic.Semantic de.azapps.mirakel.model.semantic.Semantic = java.util.Map<java.lang.String,de.azapps.mirakel.model.semantic.Semantic> . de.azapps.mirakel.model.semantic.Semantic ( java.lang.String ) ; if ( de.azapps.mirakel.model.semantic.Semantic == null ) { break; } boolean = true ; de.azapps.mirakel.model.semantic.Semantic . void ( de.azapps.mirakel.model.semantic.Task ) ; java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( ) ) . java.lang.String ( ) ; } de.azapps.mirakel.model.semantic.Task . setName ( java.lang.String ) ; if ( boolean ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . USED_SEMANTICS ) ; } return boolean ; } 
private static de.azapps.mirakel.model.semantic.ListMirakel de.azapps.mirakel.model.semantic.ListMirakel ( final @ NonNull Optional < AccountMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.AccountMirakel> ) { if ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.AccountMirakel> . isPresent ( ) ) { return ListMirakel . getInboxList ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.AccountMirakel> . get ( ) ) ; } else { return de.azapps.mirakel.model.semantic.ListMirakel ( of ( MirakelModelPreferences . getDefaultAccount ( ) ) ) ; } } 
@ NonNull public static de.azapps.mirakel.model.semantic.Task de.azapps.mirakel.model.semantic.Task ( final @ NonNull java.lang.String java.lang.String , @ NonNull Optional < ListMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , final boolean boolean ) { Optional < DateTime > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.DateTime> = absent ( ) ; if ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . isPresent ( ) && de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . get ( ) . isSpecial ( ) ) { try { final SpecialList de.azapps.mirakel.model.semantic.SpecialList = de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . get ( ) . toSpecial ( ) . get ( ) ; de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> = Optional . fromNullable ( de.azapps.mirakel.model.semantic.SpecialList . getDefaultList ( ) ) ; if ( de.azapps.mirakel.model.semantic.SpecialList . getDefaultDate ( ) . isPresent ( ) ) { de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.DateTime> = of ( new DateTime ( ) . withDayOfMonth ( de.azapps.mirakel.model.semantic.SpecialList . getDefaultDate ( ) . get ( ) ) ) ; } if ( de.azapps.mirakel.model.semantic.SpecialList . getWhere ( ) . isPresent ( ) && de.azapps.mirakel.model.semantic.SpecialList . getWhere ( ) . transform ( new Function < SpecialListsBaseProperty , java.lang.Boolean > ( ) { @ java.lang.Override public java.lang.Boolean java.lang.Boolean ( final SpecialListsBaseProperty de.azapps.mirakel.model.semantic.SpecialListsBaseProperty ) { return de.azapps.mirakel.model.semantic.SpecialListsBaseProperty instanceof SpecialListsPriorityProperty ; } } ) . or ( java.lang.Boolean . java.lang.Boolean ) ) { final SpecialListsPriorityProperty de.azapps.mirakel.model.semantic.SpecialListsPriorityProperty = ( SpecialListsPriorityProperty ) de.azapps.mirakel.model.semantic.SpecialList . getWhere ( ) . get ( ) ; final boolean boolean = de.azapps.mirakel.model.semantic.SpecialListsPriorityProperty . isSet ( ) ; int int = boolean ? - NUMBER : NUMBER ; final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = de.azapps.mirakel.model.semantic.SpecialListsPriorityProperty . getContent ( ) ; java.util.Collections . void ( java.util.List<java.lang.Integer> ) ; final int int = de.azapps.mirakel.model.semantic.SpecialListsPriorityProperty . getContent ( ) . size ( ) ; for ( int int = boolean ? NUMBER : ( int - NUMBER ) ; boolean ? ( int < int ) : ( int >= NUMBER ) ; int += boolean ? NUMBER : - NUMBER ) { if ( boolean && ( int == java.util.List<java.lang.Integer> . java.lang.Integer ( int ) ) ) { -- int ; } else if ( ! boolean && ( int == java.util.List<java.lang.Integer> . java.lang.Integer ( int ) ) ) { int = java.util.List<java.lang.Integer> . java.lang.Integer ( int ) ; } } } } catch ( final java.lang.NullPointerException java.lang.NullPointerException ) { de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> = of ( de.azapps.mirakel.model.semantic.ListMirakel ( of ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . get ( ) . getAccount ( ) ) ) ) ; } } final ListMirakel de.azapps.mirakel.model.semantic.ListMirakel ; if ( ! de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.model.semantic.ListMirakel = de.azapps.mirakel.model.semantic.ListMirakel ( Optional .< AccountMirakel > absent ( ) ) ; } else { de.azapps.mirakel.model.semantic.ListMirakel = de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> . get ( ) ; } final Task de.azapps.mirakel.model.semantic.Task = new Task ( java.lang.String , de.azapps.mirakel.model.semantic.ListMirakel , de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.DateTime> , NUMBER ) ; if ( boolean ) { boolean ( de.azapps.mirakel.model.semantic.Task , java.lang.String ) ; } return de.azapps.mirakel.model.semantic.Task ; } 
@ java.lang.Override public java.lang.Boolean java.lang.Boolean ( final SpecialListsBaseProperty de.azapps.mirakel.model.semantic.SpecialListsBaseProperty ) { return de.azapps.mirakel.model.semantic.SpecialListsBaseProperty instanceof SpecialListsPriorityProperty ; } 
public static de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> < de.azapps.mirakel.model.semantic.Semantic > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ( ) { return new MirakelQueryBuilder ( context ) . get ( de.azapps.mirakel.model.semantic.Semantic .class ) ; } 
public static de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> < de.azapps.mirakel.model.semantic.Semantic > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ( final long long ) { return new MirakelQueryBuilder ( context ) . and ( ID , Operation . EQ , long ) . get ( de.azapps.mirakel.model.semantic.Semantic .class ) ; } 
public static void void ( ) { void ( ) ; } 
private static void void ( ) { for ( final de.azapps.mirakel.model.semantic.Semantic de.azapps.mirakel.model.semantic.Semantic : java.util.List<de.azapps.mirakel.model.semantic.Semantic> ( ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.model.semantic.Semantic> . de.azapps.mirakel.model.semantic.Semantic ( de.azapps.mirakel.model.semantic.Semantic . getCondition ( ) . toLowerCase ( ) , de.azapps.mirakel.model.semantic.Semantic ) ; } } 
public static de.azapps.mirakel.model.semantic.Semantic de.azapps.mirakel.model.semantic.Semantic ( final java.lang.String java.lang.String , final java.lang.Integer java.lang.Integer , final java.lang.Integer java.lang.Integer , final Optional < ListMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , final java.lang.Integer java.lang.Integer ) { final de.azapps.mirakel.model.semantic.Semantic de.azapps.mirakel.model.semantic.Semantic = new de.azapps.mirakel.model.semantic.Semantic ( NUMBER , java.lang.String , java.lang.Integer , java.lang.Integer , de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> , java.lang.Integer ) ; return de.azapps.mirakel.model.semantic.Semantic . de.azapps.mirakel.model.semantic.Semantic ( ) ; } 
public de.azapps.mirakel.model.semantic.Semantic de.azapps.mirakel.model.semantic.Semantic ( ) { final ContentValues de.azapps.mirakel.model.semantic.ContentValues = getContentValues ( ) ; de.azapps.mirakel.model.semantic.ContentValues . remove ( ID ) ; final long long = insert ( de.azapps.mirakel.model.semantic.Uri , de.azapps.mirakel.model.semantic.ContentValues ) ; void ( ) ; return de.azapps.mirakel.model.semantic.Semantic . de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ( long ) . get ( ) ; } 
@ java.lang.Override public void void ( ) { super. destroy ( ) ; void ( ) ; } 
@ java.lang.Override public void void ( ) { super. save ( ) ; void ( ) ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.semantic.Parcel , final int int ) { de.azapps.mirakel.model.semantic.Parcel . writeLong ( getId ( ) ) ; de.azapps.mirakel.model.semantic.Parcel . writeString ( getName ( ) ) ; OptionalUtils . writeToParcel ( de.azapps.mirakel.model.semantic.Parcel , priority ) ; OptionalUtils . writeToParcel ( de.azapps.mirakel.model.semantic.Parcel , due ) ; OptionalUtils . writeToParcel ( de.azapps.mirakel.model.semantic.Parcel , list ) ; OptionalUtils . writeToParcel ( de.azapps.mirakel.model.semantic.Parcel , weekday ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.semantic.Semantic de.azapps.mirakel.model.semantic.Semantic ( final Parcel de.azapps.mirakel.model.semantic.Parcel ) { return new de.azapps.mirakel.model.semantic.Semantic ( de.azapps.mirakel.model.semantic.Parcel ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.semantic.Semantic [] de.azapps.mirakel.model.semantic.Semantic[] ( final int int ) { return new de.azapps.mirakel.model.semantic.Semantic [ int ] ; } 
public void ( final long long , @ NonNull final java.lang.String java.lang.String , final int int , final boolean boolean ) { super( long , java.lang.String ); void ( int ) ; } 
public void ( ) { } 
@ java.lang.Override @ NonNull public de.azapps.mirakel.model.tags.ContentValues de.azapps.mirakel.model.tags.ContentValues ( ) { final ContentValues de.azapps.mirakel.model.tags.ContentValues ; try { de.azapps.mirakel.model.tags.ContentValues = super. getContentValues ( ) ; } catch ( DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { Log . wtf ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; return new ContentValues ( ) ; } de.azapps.mirakel.model.tags.ContentValues . put ( de.azapps.mirakel.model.tags.TagBase . java.lang.String , this . boolean ) ; de.azapps.mirakel.model.tags.ContentValues . put ( de.azapps.mirakel.model.tags.TagBase . java.lang.String , this . int ) ; return de.azapps.mirakel.model.tags.ContentValues ; } 
public int int ( ) { return this . int ; } 
public void void ( final int int ) { this . int = int ; boolean = ( ( NUMBER * Color . red ( int ) ) + ( NUMBER * Color . green ( int ) ) + ( NUMBER * Color . blue ( int ) ) ) > NUMBER * NUMBER ; } 
public boolean boolean ( ) { return boolean ; } 
@ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = ( int * int ) + ( int ) this . getId ( ) ; int = ( int * int ) + this . int ; int = ( int * int ) + ( this . boolean ? NUMBER : NUMBER ) ; int = ( int * int ) + ( this . getName ( ) . hashCode ( ) ) ; return int ; } 
@ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof de.azapps.mirakel.model.tags.TagBase ) ) { return false ; } final de.azapps.mirakel.model.tags.TagBase de.azapps.mirakel.model.tags.TagBase = ( de.azapps.mirakel.model.tags.TagBase ) java.lang.Object ; if ( this . getId ( ) != de.azapps.mirakel.model.tags.TagBase . getId ( ) ) { return false ; } if ( this . int != de.azapps.mirakel.model.tags.TagBase . int ) { return false ; } if ( this . boolean != de.azapps.mirakel.model.tags.TagBase . boolean ) { return false ; } if ( ! this . getName ( ) . equals ( de.azapps.mirakel.model.tags.TagBase . getName ( ) ) ) { return false ; } return true ; } 
public void ( final long long , final java.lang.String java.lang.String , final int int , final boolean boolean ) { super( long , java.lang.String , int , boolean ); } 
public void ( final @ NonNull CursorGetter de.azapps.mirakel.model.tags.CursorGetter ) { super( de.azapps.mirakel.model.tags.CursorGetter . getLong ( ID ) , de.azapps.mirakel.model.tags.CursorGetter . getString ( NAME ) , de.azapps.mirakel.model.tags.CursorGetter . getInt ( BACKGROUND_COLOR ) , de.azapps.mirakel.model.tags.CursorGetter . getBoolean ( DARK_TEXT ) ); } 
@ java.lang.Override protected de.azapps.mirakel.model.tags.Uri de.azapps.mirakel.model.tags.Uri ( ) { return de.azapps.mirakel.model.tags.Uri ; } 
public static long long ( ) { return new MirakelQueryBuilder ( context ) . count ( de.azapps.mirakel.model.tags.Uri ) ; } 
@ NonNull public static de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> < de.azapps.mirakel.model.tags.Tag > de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> ( final long long ) { return new MirakelQueryBuilder ( context ) . get ( de.azapps.mirakel.model.tags.Tag .class , long ) ; } 
@ NonNull public static java.util.List<de.azapps.mirakel.model.tags.Tag> < de.azapps.mirakel.model.tags.Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> ( ) { return new MirakelQueryBuilder ( context ) . getList ( de.azapps.mirakel.model.tags.Tag .class ) ; } 
@ NonNull public static java.util.List<de.azapps.mirakel.model.tags.Tag> < de.azapps.mirakel.model.tags.Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> ( final long long ) { return new MirakelQueryBuilder ( context ) . select ( addPrefix ( java.lang.String[] , java.lang.String ) ) . and ( java.lang.String + STRING , Operation . EQ , long ) . query ( MirakelInternalContentProvider . TASK_TAG_JOIN_URI ) . doWithCursor ( LIST_FROM_CURSOR ) ; } 
@ NonNull public static java.lang.String java.lang.String ( final java.lang.String [] java.lang.String[] ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; boolean boolean = true ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { boolean = false ; } java.lang.StringBuilder . java.lang.StringBuilder ( de.azapps.mirakel.model.tags.Tag . java.lang.String + '.' ) . java.lang.StringBuilder ( java.lang.String ) ; } return STRING + java.lang.StringBuilder + STRING + java.lang.String + STRING + de.azapps.mirakel.model.tags.Tag . java.lang.String + STRING + java.lang.String + STRING + de.azapps.mirakel.model.tags.Tag . java.lang.String + '.' + ModelBase . ID + STRING + java.lang.String + STRING ; } 
@ NonNull public static de.azapps.mirakel.model.tags.Tag de.azapps.mirakel.model.tags.Tag ( final java.lang.String java.lang.String ) { return de.azapps.mirakel.model.tags.Tag ( java.lang.String , true , int ( long ( ) , context ) ) ; } 
@ NonNull public static de.azapps.mirakel.model.tags.Tag de.azapps.mirakel.model.tags.Tag ( final java.lang.String java.lang.String , final boolean boolean , final int int ) { final Optional < de.azapps.mirakel.model.tags.Tag > de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> = de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> ( java.lang.String ) ; if ( de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> . isPresent ( ) ) { return de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> . get ( ) ; } final ContentValues de.azapps.mirakel.model.tags.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.tags.ContentValues . put ( ModelBase . NAME , java.lang.String ) ; de.azapps.mirakel.model.tags.ContentValues . put ( DARK_TEXT , boolean ) ; de.azapps.mirakel.model.tags.ContentValues . put ( BACKGROUND_COLOR , int ) ; final long long = insert ( de.azapps.mirakel.model.tags.Uri , de.azapps.mirakel.model.tags.ContentValues ) ; return de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> ( long ) . get ( ) ; } 
public static int int ( final long long , final Context de.azapps.mirakel.model.tags.Context ) { final TypedArray de.azapps.mirakel.model.tags.TypedArray = de.azapps.mirakel.model.tags.Context . getResources ( ) . obtainTypedArray ( R . array . default_colors ) ; final int int ; if ( de.azapps.mirakel.model.tags.TypedArray . length ( ) == NUMBER ) { int = Color . RED ; } else { final int int[] [] = de.azapps.mirakel.model.tags.Context . getResources ( ) . getIntArray ( R . array . default_transparency ) ; final int int = ( ( int ) long / de.azapps.mirakel.model.tags.TypedArray . length ( ) ) % int[] . int ; final int int = ( int ) long % de.azapps.mirakel.model.tags.TypedArray . length ( ) ; int = android . graphics . Color . argb ( int[] [ int ] , Color . red ( de.azapps.mirakel.model.tags.TypedArray . getColor ( int , NUMBER ) ) , Color . green ( de.azapps.mirakel.model.tags.TypedArray . getColor ( int , NUMBER ) ) , Color . blue ( de.azapps.mirakel.model.tags.TypedArray . getColor ( int , NUMBER ) ) ) ; } de.azapps.mirakel.model.tags.TypedArray . recycle ( ) ; return int ; } 
@ NonNull public static de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> < de.azapps.mirakel.model.tags.Tag > de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> ( final java.lang.String java.lang.String ) { return new MirakelQueryBuilder ( context ) . and ( NAME , Operation . EQ , java.lang.String ) . get ( de.azapps.mirakel.model.tags.Tag .class ) ; } 
@ NonNull public static java.lang.String java.lang.String ( final long long ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; final java.util.List<de.azapps.mirakel.model.tags.Tag> < de.azapps.mirakel.model.tags.Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = java.util.List<de.azapps.mirakel.model.tags.Tag> ( long ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; if ( ! java.util.List<de.azapps.mirakel.model.tags.Tag> . boolean ( ) ) { boolean boolean = true ; for ( final de.azapps.mirakel.model.tags.Tag de.azapps.mirakel.model.tags.Tag : java.util.List<de.azapps.mirakel.model.tags.Tag> ) { if ( ! boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( ',' ) ; } else { boolean = false ; } java.lang.StringBuilder . java.lang.StringBuilder ( '"' ) . java.lang.StringBuilder ( de.azapps.mirakel.model.tags.Tag . getName ( ) . replace ( STRING , STRING ) ) . append ( '"' ) ; } } java.lang.StringBuilder . java.lang.StringBuilder ( ']' ) ; return java.lang.StringBuilder . java.lang.String ( ) ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.tags.Parcel , final int int ) { de.azapps.mirakel.model.tags.Parcel . writeByte ( isDarkText ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.tags.Parcel . writeInt ( this . backgroundColor ) ; de.azapps.mirakel.model.tags.Parcel . writeLong ( this . getId ( ) ) ; de.azapps.mirakel.model.tags.Parcel . writeString ( this . getName ( ) ) ; } 
private void ( final Parcel de.azapps.mirakel.model.tags.Parcel ) { super(); this . isDarkText = de.azapps.mirakel.model.tags.Parcel . readByte ( ) != NUMBER ; this . backgroundColor = de.azapps.mirakel.model.tags.Parcel . readInt ( ) ; this . setId ( de.azapps.mirakel.model.tags.Parcel . readLong ( ) ) ; this . setName ( de.azapps.mirakel.model.tags.Parcel . readString ( ) ) ; } 
@ Override public Tag createFromParcel ( final Parcel source ) { return new Tag ( source ) ; } 
@ Override public Tag [] newArray ( final int size ) { return new Tag [ size ] ; } 
public static de.azapps.mirakel.model.tags.Tag de.azapps.mirakel.model.tags.Tag ( ) { java.util.List<de.azapps.mirakel.model.tags.Tag> < de.azapps.mirakel.model.tags.Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = java.util.List<de.azapps.mirakel.model.tags.Tag> ( ) ; if ( java.util.List<de.azapps.mirakel.model.tags.Tag> . boolean ( ) ) { return de.azapps.mirakel.model.tags.Tag ( context . getString ( R . string . new_tag ) ) ; } else { return java.util.List<de.azapps.mirakel.model.tags.Tag> . de.azapps.mirakel.model.tags.Tag ( NUMBER ) ; } } 
void ( ) { super( INVALID_ID , STRING ); } 
void ( final long long , @ NonNull final java.lang.String java.lang.String , @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel , @ NonNull final java.lang.String java.lang.String , @ NonNull final java.lang.String java.lang.String , final boolean boolean , final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final int int , @ NonNull final DateTime de.azapps.mirakel.model.task.DateTime , @ NonNull final DateTime de.azapps.mirakel.model.task.DateTime , @ NonNull final SYNC_STATE de.azapps.mirakel.model.task.SYNC_STATE , @ NonNull final java.lang.String java.lang.String , final int int , final int int , final int int , final boolean boolean ) { super( long , java.lang.String ); this . java.lang.String = java.lang.String ; void ( de.azapps.mirakel.model.task.ListMirakel , false ) ; void ( java.lang.String ) ; de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( boolean ) ; void ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; void ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; void ( int ) ; this . de.azapps.mirakel.model.task.DateTime = de.azapps.mirakel.model.task.DateTime ; this . de.azapps.mirakel.model.task.DateTime = de.azapps.mirakel.model.task.DateTime ; de.azapps.mirakel.model.task.SYNC_STATE = de.azapps.mirakel.model.task.SYNC_STATE ; this . java.lang.String = java.lang.String ; this . long = int ; this . long = int ; this . int = int ; void ( ) ; this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> = absent ( ) ; boolean = boolean ; } 
void ( @ NonNull final java.lang.String java.lang.String , @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel ) { super( INVALID_ID , java.lang.String ); this . java.lang.String = java . util . java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ; void ( de.azapps.mirakel.model.task.ListMirakel , false ) ; void ( STRING ) ; de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( false ) ; void ( Optional .< DateTime > absent ( ) ) ; void ( Optional .< DateTime > absent ( ) ) ; this . int = NUMBER ; this . de.azapps.mirakel.model.task.DateTime = new DateTime ( ) ; this . de.azapps.mirakel.model.task.DateTime = de.azapps.mirakel.model.task.DateTime ; de.azapps.mirakel.model.task.SYNC_STATE = SYNC_STATE . NOTHING ; this . long = - NUMBER ; this . long = - NUMBER ; this . int = NUMBER ; boolean = true ; void ( ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { void ( ) ; Log . d ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , STRING + java.lang.String + ':' + java.lang.String ) ; this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; } 
void void ( ) { this . java.util.Map<java.lang.String,java.lang.Boolean> . void ( ) ; } 
@ java.lang.Deprecated public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { void ( ) ; return this . java.util.Map<java.lang.String,java.lang.String> ; } 
public boolean boolean ( final java.lang.String java.lang.String ) { void ( ) ; return java.util.Map<java.lang.String,java.lang.String> . boolean ( java.lang.String ) ; } 
@ Nullable public java.lang.String java.lang.String ( final java.lang.String java.lang.String ) { void ( ) ; return this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ; } 
@ Nullable public java.lang.String java.lang.String ( final java.lang.String java.lang.String ) { final java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( java.lang.String == null ) { return null ; } return java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ; } 
@ Nullable public java.lang.Integer java.lang.Integer ( final java.lang.String java.lang.String ) { final java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( java.lang.String == null ) { return null ; } return java.lang.Integer . java.lang.Integer ( java.lang.String ) ; } 
public boolean boolean ( final java.lang.String java.lang.String ) { void ( ) ; return this . java.util.Map<java.lang.String,java.lang.String> . boolean ( java.lang.String ) ; } 
void void ( final boolean boolean ) { this . boolean = boolean ; } 
boolean boolean ( ) { return this . boolean ; } 
@ NonNull protected java.lang.String java.lang.String ( ) { void ( ) ; this . java.lang.String = java.lang.String ( this . java.util.Map<java.lang.String,java.lang.String> ) ; return this . java.lang.String ; } 
@ NonNull public static java.lang.String java.lang.String ( @ NonNull final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) ; boolean boolean = true ; for ( final java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( boolean ? STRING : STRING ) . java.lang.StringBuilder ( '"' ) . java.lang.StringBuilder ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; boolean = false ; } return java.lang.StringBuilder . java.lang.String ( ) + '}' ; } 
@ NonNull public java.lang.String java.lang.String ( ) { return this . java.lang.String ; } 
@ java.lang.Override @ NonNull public de.azapps.mirakel.model.task.ContentValues de.azapps.mirakel.model.task.ContentValues ( ) de.azapps.mirakel.model.task.NoSuchListException { final ContentValues de.azapps.mirakel.model.task.ContentValues = super. getContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . java.lang.String ) ; de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . de.azapps.mirakel.model.task.ListMirakel . getId ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . java.lang.String ) ; de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . boolean ) ; if ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . isPresent ( ) ) { de.azapps.mirakel.model.task.ContentValues . put ( java.lang.String , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . get ( ) . getMillis ( ) ) ; } else { de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , ( java.lang.Long ) null ) ; } if ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . isPresent ( ) ) { de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . get ( ) . getMillis ( ) ) ; } else { de.azapps.mirakel.model.task.ContentValues . put ( java.lang.String , ( java.lang.Long ) null ) ; } de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . int ) ; de.azapps.mirakel.model.task.ContentValues . put ( DatabaseHelper . CREATED_AT , this . de.azapps.mirakel.model.task.DateTime . getMillis ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( DatabaseHelper . UPDATED_AT , this . de.azapps.mirakel.model.task.DateTime . getMillis ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , this . de.azapps.mirakel.model.task.SYNC_STATE . toInt ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . long ) ; de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . long ) ; de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . int ) ; de.azapps.mirakel.model.task.ContentValues . put ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , this . boolean ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , java.lang.String ( ) ) ; return de.azapps.mirakel.model.task.ContentValues ; } 
@ NonNull public de.azapps.mirakel.model.task.DateTime de.azapps.mirakel.model.task.DateTime ( ) { return this . de.azapps.mirakel.model.task.DateTime ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ( ) { return this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ; } 
@ NonNull public de.azapps.mirakel.model.task.ListMirakel de.azapps.mirakel.model.task.ListMirakel ( ) { if ( this . de.azapps.mirakel.model.task.ListMirakel == null ) { throw new java.lang.RuntimeException ( STRING ) ; } return this . de.azapps.mirakel.model.task.ListMirakel ; } 
public int int ( ) { return this . int ; } 
public int int ( ) { return this . int ; } 
public long long ( ) { return this . long ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> < Recurring > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) { return Recurring . get ( this . long ) ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> < Recurring > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) { return Recurring . get ( this . long ) ; } 
public long long ( ) { return this . long ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ( ) { return this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ; } 
@ NonNull public de.azapps.mirakel.model.task.SYNC_STATE de.azapps.mirakel.model.task.SYNC_STATE ( ) { return this . de.azapps.mirakel.model.task.SYNC_STATE ; } 
@ NonNull public de.azapps.mirakel.model.task.DateTime de.azapps.mirakel.model.task.DateTime ( ) { return this . de.azapps.mirakel.model.task.DateTime ; } 
@ NonNull public java.lang.String java.lang.String ( ) { return this . java.lang.String ; } 
public boolean boolean ( ) { return this . long > NUMBER ; } 
private void void ( ) { if ( this . java.util.Map<java.lang.String,java.lang.String> == null ) { this . java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ( this . java.lang.String ) ; } } 
protected void void ( @ NonNull final java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; void ( ) ; } 
@ NonNull public static java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( @ NonNull final java.lang.String java.lang.String ) { final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; if ( ( java.lang.String != null ) && ! java.lang.String . java.lang.String ( ) . boolean ( STRING ) && ! java.lang.String . java.lang.String ( ) . boolean ( STRING ) ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ; final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; java.lang.String java.lang.String = null ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; if ( java.lang.String[] . int == NUMBER ) { java.lang.String = java.lang.String[] [ NUMBER ] ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String[] [ NUMBER ] ) ; } else if ( ( java.lang.String[] . int == NUMBER ) && ( java.lang.String != null ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) + ',' + java.lang.String[] [ NUMBER ] ) ; } } } return java.util.Map<java.lang.String,java.lang.String> ; } 
public boolean boolean ( ) { return this . boolean ; } 
boolean boolean ( ) { return this . java.util.Map<java.lang.String,java.lang.Boolean> . int ( ) > NUMBER ; } 
boolean boolean ( final java.lang.String java.lang.String ) { return this . java.util.Map<java.lang.String,java.lang.Boolean> . boolean ( java.lang.String ) ; } 
public void void ( @ NonNull java.lang.String java.lang.String ) { if ( this . java.lang.String . boolean ( java.lang.String ) ) { return; } java.lang.String = java.lang.String . java.lang.String ( ) . java.lang.String ( STRING , STRING ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; this . java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , true ) ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( final boolean boolean ) { if ( this . boolean == boolean ) { return absent ( ) ; } this . boolean = boolean ; this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , true ) ; if ( boolean && ( this . long != - NUMBER ) && this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . isPresent ( ) ) { if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) ) { final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( getId ( ) ) ; if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . isPresent ( ) ) { return absent ( ) ; } final Task de.azapps.mirakel.model.task.Task = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . get ( ) . incrementRecurringDue ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . get ( ) ) ; this . boolean = true ; return of ( de.azapps.mirakel.model.task.Task ) ; } Log . wtf ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , STRING ) ; } else if ( boolean ) { this . void ( NUMBER ) ; } else { this . void ( NUMBER ) ; } return absent ( ) ; } 
public void void ( final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) { if ( DateTimeHelper . equalsCalendar ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ) { return; } this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ; this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , true ) ; if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . isPresent ( ) ) { void ( - NUMBER ) ; } } 
public void void ( @ NonNull final Task de.azapps.mirakel.model.task.Task ) { this . setId ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; } 
public void void ( @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel ) { void ( de.azapps.mirakel.model.task.ListMirakel , false ) ; } 
public void void ( @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel , final boolean boolean ) { if ( ( this . de.azapps.mirakel.model.task.ListMirakel != null ) && ( this . de.azapps.mirakel.model.task.ListMirakel . getId ( ) == de.azapps.mirakel.model.task.ListMirakel . getId ( ) ) ) { return; } if ( de.azapps.mirakel.model.task.ListMirakel . isSpecial ( ) ) { Optional < SpecialList > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.SpecialList> = de.azapps.mirakel.model.task.ListMirakel . toSpecial ( ) ; if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.SpecialList> . isPresent ( ) ) { this . de.azapps.mirakel.model.task.ListMirakel = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.SpecialList> . get ( ) . getDefaultList ( ) ; } else { ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; return; } } else { this . de.azapps.mirakel.model.task.ListMirakel = de.azapps.mirakel.model.task.ListMirakel ; } this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , true ) ; if ( boolean ) { if ( this . java.util.Map<java.lang.String,java.lang.String> == null ) { void ( ) ; } this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( DefinitionsHelper . TW_NO_PROJECT ) ; } } 
@ java.lang.Override public void void ( @ NonNull final java.lang.String java.lang.String ) { if ( getName ( ) . equals ( java.lang.String ) ) { return; } super. setName ( java.lang.String ) ; if ( java.util.Map<java.lang.String,java.lang.Boolean> != null ) { this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( ModelBase . NAME , true ) ; } } 
public void void ( final int int ) { if ( this . int == int ) { return; } if ( ( int > NUMBER ) || ( int < - NUMBER ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . int = int ; this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , true ) ; } 
public void void ( final int int ) { if ( this . int == int ) { return; } this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( STRING , true ) ; this . int = int ; } 
protected void void ( final long long ) { if ( this . long == long ) { return; } this . long = long ; this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , true ) ; } 
public void void ( final @ NonNull Optional < Recurring > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ) { if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . isPresent ( ) ) { void ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . get ( ) . getId ( ) ) ; } else { void ( - NUMBER ) ; } } 
public void void ( final long long ) { if ( this . long == long ) { return; } this . long = long ; this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , true ) ; } 
public void void ( final @ NonNull Optional < Recurring > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ) { if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . isPresent ( ) ) { void ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . get ( ) . getId ( ) ) ; } else { void ( - NUMBER ) ; } } 
public void void ( final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) { void ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , false ) ; } 
public void void ( final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final boolean boolean ) { if ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . or ( new DateTime ( ) ) . equals ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . or ( new DateTime ( ) ) ) && ! boolean ) { return; } this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ; this . java.util.Map<java.lang.String,java.lang.Boolean> . java.lang.Boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String , true ) ; if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . isPresent ( ) ) { void ( - NUMBER ) ; } } 
public void void ( @ NonNull final SYNC_STATE de.azapps.mirakel.model.task.SYNC_STATE ) { this . de.azapps.mirakel.model.task.SYNC_STATE = de.azapps.mirakel.model.task.SYNC_STATE ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( ) { return de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( ! this . boolean ) ; } 
@ NonNull public java.util.List<de.azapps.mirakel.model.task.Tag> < Tag > java.util.List<de.azapps.mirakel.model.task.Tag> ( ) { void ( ) ; return this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> . get ( ) ; } 
private void void ( ) { if ( ! this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> . isPresent ( ) ) { if ( this . getId ( ) == NUMBER ) { this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> = of ( ( java.util.List<de.azapps.mirakel.model.task.Tag> < Tag > ) new java.util.ArrayList<de.azapps.mirakel.model.task.Tag> < Tag > ( NUMBER ) ) ; } else { this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> = of ( Tag . getTagsForTask ( this . getId ( ) ) ) ; } } } 
protected void void ( @ NonNull final Tag de.azapps.mirakel.model.task.Tag ) { void ( ) ; this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> . get ( ) . add ( de.azapps.mirakel.model.task.Tag ) ; } 
protected void void ( @ NonNull final Tag de.azapps.mirakel.model.task.Tag ) { void ( ) ; this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> . get ( ) . remove ( de.azapps.mirakel.model.task.Tag ) ; } 
@ java.lang.Override public boolean boolean ( ) { return boolean || super. isStub ( ) ; } 
public void void ( boolean boolean ) { this . boolean = boolean ; } 
@ java.lang.Override public int int ( ) { final int int = NUMBER ; int int = NUMBER ; int = int * int + ( ( this . java.util.Map<java.lang.String,java.lang.String> == null ) ? NUMBER : this . java.util.Map<java.lang.String,java.lang.String> . int ( ) ) ; int = int * int + ( this . java.lang.String . int ( ) ) ; int = int * int + this . java.lang.String . int ( ) ; int = int * int + ( this . de.azapps.mirakel.model.task.DateTime . hashCode ( ) ) ; int = int * int + ( this . boolean ? NUMBER : NUMBER ) ; int = int * int + ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . isPresent ( ) ? this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . get ( ) . hashCode ( ) : NUMBER ) ; int = int * int + ( this . java.util.Map<java.lang.String,java.lang.Boolean> . int ( ) ) ; int = int * int + ( int ) ( this . getId ( ) ^ ( this . getId ( ) >>> NUMBER ) ) ; int = int * int + ( this . boolean ? NUMBER : NUMBER ) ; int = int * int + ( this . de.azapps.mirakel.model.task.ListMirakel . hashCode ( ) ) ; int = int * int + ( getName ( ) . hashCode ( ) ) ; int = int * int + this . int ; int = int * int + this . int ; int = int * int + ( int ) this . long ; int = int * int + ( int ) this . long ; int = int * int + ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . isPresent ( ) ? this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> . get ( ) . hashCode ( ) : NUMBER ) ; int = int * int + ( this . de.azapps.mirakel.model.task.SYNC_STATE . hashCode ( ) ) ; int = int * int + ( ! this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> . isPresent ( ) ? NUMBER : this . de.azapps.mirakel.model.task.Optional<java.util.List<de.azapps.mirakel.model.task.Tag>> . get ( ) . hashCode ( ) ) ; int = int * int + ( this . de.azapps.mirakel.model.task.DateTime . hashCode ( ) ) ; int = int * int + ( this . java.lang.String . int ( ) ) ; int = int * int + ( this . boolean ? NUMBER : NUMBER ) ; return int ; } 
@ java.lang.Override public boolean boolean ( final java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) { return true ; } if ( java.lang.Object == null ) { return false ; } if ( ! ( java.lang.Object instanceof de.azapps.mirakel.model.task.TaskBase ) ) { return false ; } final de.azapps.mirakel.model.task.TaskBase de.azapps.mirakel.model.task.TaskBase = ( de.azapps.mirakel.model.task.TaskBase ) java.lang.Object ; if ( this . java.util.Map<java.lang.String,java.lang.String> == null ) { void ( java.lang.String ) ; } if ( de.azapps.mirakel.model.task.TaskBase . java.util.Map<java.lang.String,java.lang.String> == null ) { de.azapps.mirakel.model.task.TaskBase . void ( de.azapps.mirakel.model.task.TaskBase . java.lang.String ) ; } if ( ! Objects . equal ( this . java.util.Map<java.lang.String,java.lang.String> , de.azapps.mirakel.model.task.TaskBase . java.util.Map<java.lang.String,java.lang.String> ) ) { return false ; } if ( ! this . java.lang.String . boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String ) ) { return false ; } if ( ! this . java.lang.String . boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String ) ) { return false ; } if ( this . boolean != de.azapps.mirakel.model.task.TaskBase . boolean ) { return false ; } if ( ! DateTimeHelper . equalsCalendar ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ) { return false ; } if ( this . getId ( ) != de.azapps.mirakel.model.task.TaskBase . getId ( ) ) { return false ; } if ( this . boolean != de.azapps.mirakel.model.task.TaskBase . boolean ) { return false ; } if ( ! Objects . equal ( de.azapps.mirakel.model.task.ListMirakel , de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.ListMirakel ) ) { return false ; } if ( ! getName ( ) . equals ( de.azapps.mirakel.model.task.TaskBase . getName ( ) ) ) { return false ; } if ( this . int != de.azapps.mirakel.model.task.TaskBase . int ) { return false ; } if ( this . int != de.azapps.mirakel.model.task.TaskBase . int ) { return false ; } if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) && de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) ) { if ( ! this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . get ( ) . equals ( de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . get ( ) ) ) { return false ; } } else if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) != de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) ) { return false ; } if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) && de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) ) { if ( ! this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . get ( ) . equals ( de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . get ( ) ) ) { return false ; } } else if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) != de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ( ) . isPresent ( ) ) { return false ; } if ( ! DateTimeHelper . equalsCalendar ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ) { return false ; } if ( this . de.azapps.mirakel.model.task.SYNC_STATE != de.azapps.mirakel.model.task.TaskBase . de.azapps.mirakel.model.task.SYNC_STATE ) { return false ; } if ( ! this . java.util.List<de.azapps.mirakel.model.task.Tag> ( ) . equals ( de.azapps.mirakel.model.task.TaskBase . java.util.List<de.azapps.mirakel.model.task.Tag> ( ) ) ) { return false ; } if ( ! this . java.lang.String . boolean ( de.azapps.mirakel.model.task.TaskBase . java.lang.String ) ) { return false ; } return true ; } 
public void void ( @ NonNull DateTime de.azapps.mirakel.model.task.DateTime ) { this . de.azapps.mirakel.model.task.DateTime = de.azapps.mirakel.model.task.DateTime ; } 
public void void ( final @ Nullable DateTime de.azapps.mirakel.model.task.DateTime ) { void ( fromNullable ( de.azapps.mirakel.model.task.DateTime ) ) ; } 
@ VisibleForTesting public void void ( final @ NonNull DateTime de.azapps.mirakel.model.task.DateTime ) { de.azapps.mirakel.model.task.DateTime = de.azapps.mirakel.model.task.DateTime ; } 
public void void ( final java.lang.String [] java.lang.String[] ) { this . java.lang.String[] = java.lang.String[] ; } 
@ java.lang.Override protected de.azapps.mirakel.model.task.Uri de.azapps.mirakel.model.task.Uri ( ) { return de.azapps.mirakel.model.task.Uri ; } 
@ VisibleForTesting public void ( ) { super(); } 
public void ( @ NonNull final java.lang.String java.lang.String , @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel , final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final int int ) { this( java.lang.String , de.azapps.mirakel.model.task.ListMirakel , STRING , false , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , int ); } 
public void ( @ NonNull final java.lang.String java.lang.String , @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel , @ NonNull final java.lang.String java.lang.String , final boolean boolean , final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final int int ) { this( INVALID_ID , java . util . java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) , de.azapps.mirakel.model.task.ListMirakel , java.lang.String , java.lang.String , boolean , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , Optional .< DateTime > absent ( ) , int , new DateTime ( ) , new DateTime ( ) , SYNC_STATE . ADD , STRING , - NUMBER , - NUMBER , NUMBER , true ); } 
public void ( final long long , @ NonNull final java.lang.String java.lang.String , @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel , @ NonNull final java.lang.String java.lang.String , @ NonNull final java.lang.String java.lang.String , final boolean boolean , final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final int int , @ NonNull final DateTime de.azapps.mirakel.model.task.DateTime , @ NonNull final DateTime de.azapps.mirakel.model.task.DateTime , @ NonNull final SYNC_STATE de.azapps.mirakel.model.task.SYNC_STATE , @ NonNull final java.lang.String java.lang.String , final int int , final int int , final int int , final boolean boolean ) { super( long , java.lang.String , de.azapps.mirakel.model.task.ListMirakel , java.lang.String , java.lang.String , boolean , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , int , de.azapps.mirakel.model.task.DateTime , de.azapps.mirakel.model.task.DateTime , de.azapps.mirakel.model.task.SYNC_STATE , java.lang.String , int , int , int , boolean ); } 
public void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { if ( de.azapps.mirakel.model.task.CursorGetter . isAfterLast ( ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } setDue ( de.azapps.mirakel.model.task.CursorGetter . getOptional ( DUE , DateTime .class ) ) ; setReminder ( de.azapps.mirakel.model.task.CursorGetter . getOptional ( REMINDER , DateTime .class ) ) ; createdAt = de.azapps.mirakel.model.task.CursorGetter . getDateTime ( DatabaseHelper . CREATED_AT ) ; updatedAt = de.azapps.mirakel.model.task.CursorGetter . getDateTime ( DatabaseHelper . UPDATED_AT ) ; setId ( de.azapps.mirakel.model.task.CursorGetter . getLong ( ID ) ) ; setUUID ( de.azapps.mirakel.model.task.CursorGetter . getString ( UUID ) ) ; this . list = ListMirakel . get ( de.azapps.mirakel.model.task.CursorGetter . getLong ( LIST_ID ) ) . get ( ) ; setName ( de.azapps.mirakel.model.task.CursorGetter . getString ( NAME ) ) ; final java.lang.String java.lang.String = de.azapps.mirakel.model.task.CursorGetter . getString ( CONTENT ) ; setContent ( ( java.lang.String == null ) ? STRING : java.lang.String ) ; setDone ( de.azapps.mirakel.model.task.CursorGetter . getBoolean ( DONE ) ) ; setPriority ( de.azapps.mirakel.model.task.CursorGetter . getInt ( PRIORITY ) ) ; setSyncState ( SYNC_STATE . valueOf ( de.azapps.mirakel.model.task.CursorGetter . getShort ( DatabaseHelper . SYNC_STATE_FIELD ) ) ) ; setAdditionalEntries ( de.azapps.mirakel.model.task.CursorGetter . getString ( ADDITIONAL_ENTRIES ) ) ; setRecurrence ( de.azapps.mirakel.model.task.CursorGetter . getLong ( RECURRING ) ) ; setRecurringReminder ( de.azapps.mirakel.model.task.CursorGetter . getLong ( RECURRING_REMINDER ) ) ; setProgress ( de.azapps.mirakel.model.task.CursorGetter . getInt ( PROGRESS ) ) ; setIsRecurringShown ( de.azapps.mirakel.model.task.CursorGetter . getBoolean ( RECURRING_SHOWN ) ) ; } 
public void ( @ NonNull final java.lang.String java.lang.String , @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel ) { super( java.lang.String , de.azapps.mirakel.model.task.ListMirakel ); } 
@ NonNull @ VisibleForTesting public static java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> ( ) { return de.azapps.mirakel.model.task.MirakelQueryBuilder ( new MirakelQueryBuilder ( context ) ) . getList ( de.azapps.mirakel.model.task.Task .class ) ; } 
@ NonNull public static de.azapps.mirakel.model.task.MirakelQueryBuilder de.azapps.mirakel.model.task.MirakelQueryBuilder ( @ NonNull final Optional < ListMirakel > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> ) { final MirakelQueryBuilder de.azapps.mirakel.model.task.MirakelQueryBuilder ; if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.model.task.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) ; } else { de.azapps.mirakel.model.task.MirakelQueryBuilder = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . get ( ) . getWhereQueryForTasks ( ) ; } de.azapps.mirakel.model.task.MirakelQueryBuilder ( de.azapps.mirakel.model.task.MirakelQueryBuilder ) ; if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . isPresent ( ) ) { ListMirakel . addSortBy ( de.azapps.mirakel.model.task.MirakelQueryBuilder , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . get ( ) . getSortBy ( ) , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . get ( ) . getId ( ) < NUMBER ) ; } return de.azapps.mirakel.model.task.MirakelQueryBuilder ; } 
public static void void ( ) { final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , SYNC_STATE . DELETE . toInt ( ) ) ; MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , STRING + SYNC_STATE . ADD + STRING , null ) ; delete ( de.azapps.mirakel.model.task.Uri , STRING + SYNC_STATE . ADD + STRING , null ) ; } } ) ; } 
@ java.lang.Override public void void ( ) { update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , STRING + SYNC_STATE . ADD + STRING , null ) ; delete ( de.azapps.mirakel.model.task.Uri , STRING + SYNC_STATE . ADD + STRING , null ) ; } 
@ NonNull public static de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( final long long ) { return de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( long , false ) ; } 
@ NonNull public static de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( final long long , final boolean boolean ) { final MirakelQueryBuilder de.azapps.mirakel.model.task.MirakelQueryBuilder = new MirakelQueryBuilder ( context ) . and ( ID , Operation . EQ , long ) ; if ( ! boolean ) { de.azapps.mirakel.model.task.MirakelQueryBuilder . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . DELETE . toInt ( ) ) ; } return de.azapps.mirakel.model.task.MirakelQueryBuilder . get ( de.azapps.mirakel.model.task.Task .class ) ; } 
@ NonNull public static de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( final java.lang.String java.lang.String ) { return new MirakelQueryBuilder ( context ) . and ( UUID , Operation . EQ , java.lang.String ) . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . DELETE . toInt ( ) ) . get ( de.azapps.mirakel.model.task.Task .class ) ; } 
public static de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ( @ NonNull final Context de.azapps.mirakel.model.task.Context , @ NonNull final ListMirakel de.azapps.mirakel.model.task.ListMirakel ) { return new de.azapps.mirakel.model.task.Task ( de.azapps.mirakel.model.task.Context . getString ( R . string . task_empty ) , de.azapps.mirakel.model.task.ListMirakel ) ; } 
public static java.util.List<de.azapps.mirakel.model.task.Pair<java.lang.Long,java.lang.String>> < Pair < java.lang.Long , java.lang.String > > java.util.List<de.azapps.mirakel.model.task.Pair<java.lang.Long,java.lang.String>> ( ) { return de.azapps.mirakel.model.task.MirakelQueryBuilder ( new MirakelQueryBuilder ( context ) ) . select ( ID , NAME ) . query ( de.azapps.mirakel.model.task.Uri ) . doWithCursor ( new Cursor2List <> ( new CursorWrapper . CursorWrapper < Pair < java.lang.Long , java.lang.String > > ( ) { @ Override public Pair < Long , String > convert ( @ NonNull final CursorGetter getter ) { return new Pair <> ( getter . getLong ( ID ) , getter . getString ( NAME ) ) ; } } ) ) ; } 
@ Override public Pair < Long , String > convert ( @ NonNull final CursorGetter getter ) { return new Pair <> ( getter . getLong ( ID ) , getter . getString ( NAME ) ) ; } 
public static java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> ( final long long , final SORT_BY de.azapps.mirakel.model.task.SORT_BY , final boolean boolean ) { return de.azapps.mirakel.model.task.CursorWrapper ( long , de.azapps.mirakel.model.task.SORT_BY , boolean ) . doWithCursor ( LIST_FROM_CURSOR ) ; } 
public static java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> ( final ListMirakel de.azapps.mirakel.model.task.ListMirakel , final SORT_BY de.azapps.mirakel.model.task.SORT_BY , final boolean boolean ) { return java.util.List<de.azapps.mirakel.model.task.Task> ( de.azapps.mirakel.model.task.ListMirakel . getId ( ) , de.azapps.mirakel.model.task.SORT_BY , boolean ) ; } 
private static de.azapps.mirakel.model.task.CursorWrapper de.azapps.mirakel.model.task.CursorWrapper ( final long long , final SORT_BY de.azapps.mirakel.model.task.SORT_BY , final boolean boolean ) { final Optional < ListMirakel > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> = ListMirakel . get ( long ) ; if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . isPresent ( ) ) { Log . wtf ( java.lang.String , STRING ) ; return new CursorWrapper ( new MatrixCursor ( java.lang.String[] ) ) ; } else { final MirakelQueryBuilder de.azapps.mirakel.model.task.MirakelQueryBuilder = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . get ( ) . getWhereQueryForTasks ( ) ; if ( ! boolean ) { de.azapps.mirakel.model.task.MirakelQueryBuilder . and ( DONE , Operation . EQ , false ) ; } return de.azapps.mirakel.model.task.CursorWrapper ( long , de.azapps.mirakel.model.task.SORT_BY , de.azapps.mirakel.model.task.MirakelQueryBuilder ) ; } } 
private static de.azapps.mirakel.model.task.CursorWrapper de.azapps.mirakel.model.task.CursorWrapper ( final long long , final SORT_BY de.azapps.mirakel.model.task.SORT_BY , final MirakelQueryBuilder de.azapps.mirakel.model.task.MirakelQueryBuilder ) { de.azapps.mirakel.model.task.MirakelQueryBuilder ( de.azapps.mirakel.model.task.MirakelQueryBuilder ) ; de.azapps.mirakel.model.task.MirakelQueryBuilder . sort ( de.azapps.mirakel.model.task.Task . DONE , Sorting . ASC ) ; ListMirakel . addSortBy ( de.azapps.mirakel.model.task.MirakelQueryBuilder , de.azapps.mirakel.model.task.SORT_BY , long < NUMBER ) ; return de.azapps.mirakel.model.task.MirakelQueryBuilder . select ( java.lang.String[] ) . query ( de.azapps.mirakel.model.task.Uri ) ; } 
private static de.azapps.mirakel.model.task.CursorWrapper de.azapps.mirakel.model.task.CursorWrapper ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ) { return ListMirakel . addSortBy ( new MirakelQueryBuilder ( context ) . select ( addPrefix ( java.lang.String[] , java.lang.String ) ) . and ( java.lang.String + STRING , Operation . EQ , de.azapps.mirakel.model.task.Task ) , SORT_BY . OPT , false ) . query ( MirakelInternalContentProvider . TASK_SUBTASK_URI ) ; } 
@ NonNull public static java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> ( final AccountMirakel de.azapps.mirakel.model.task.AccountMirakel ) { return new MirakelQueryBuilder ( context ) . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . NOTHING . toInt ( ) ) . and ( LIST_ID , Operation . IN , ListMirakel . getListsForAccount ( de.azapps.mirakel.model.task.AccountMirakel ) ) . getList ( de.azapps.mirakel.model.task.Task .class ) ; } 
public static java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> ( ) { return new MirakelQueryBuilder ( context ) . and ( REMINDER , Operation . NOT_EQ , ( java.lang.String ) null ) . and ( DONE , Operation . EQ , false ) . getList ( de.azapps.mirakel.model.task.Task .class ) ; } 
public static de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ( final java.lang.String java.lang.String , final ListMirakel de.azapps.mirakel.model.task.ListMirakel ) { return de.azapps.mirakel.model.task.Task ( java.lang.String , de.azapps.mirakel.model.task.ListMirakel , STRING , false , Optional .< DateTime > absent ( ) , NUMBER ) ; } 
public static de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ( final java.lang.String java.lang.String , final ListMirakel de.azapps.mirakel.model.task.ListMirakel , final @ NonNull Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final int int ) { return de.azapps.mirakel.model.task.Task ( java.lang.String , de.azapps.mirakel.model.task.ListMirakel , STRING , false , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , int ) ; } 
public static de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ( final java.lang.String java.lang.String , final ListMirakel de.azapps.mirakel.model.task.ListMirakel , final java.lang.String java.lang.String , final boolean boolean , final Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , final int int ) { final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = new de.azapps.mirakel.model.task.Task ( NUMBER , java . util . java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) , de.azapps.mirakel.model.task.ListMirakel , java.lang.String , java.lang.String , boolean , de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> , Optional .< DateTime > absent ( ) , int , new DateTime ( ) , new DateTime ( ) , SYNC_STATE . ADD , STRING , - NUMBER , - NUMBER , NUMBER , true ) ; try { return de.azapps.mirakel.model.task.Task . de.azapps.mirakel.model.task.Task ( ) ; } catch ( final NoSuchListException de.azapps.mirakel.model.task.NoSuchListException ) { ErrorReporter . report ( ErrorType . TASKS_NO_LIST ) ; Log . e ( de.azapps.mirakel.model.task.Task . java.lang.String , STRING , de.azapps.mirakel.model.task.NoSuchListException ) ; return null ; } } 
public de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ( ) de.azapps.mirakel.model.task.NoSuchListException { final ContentValues de.azapps.mirakel.model.task.ContentValues = getContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . remove ( de.azapps.mirakel.model.task.Task . ID ) ; setId ( insert ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues ) ) ; final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( getId ( ) ) . get ( ) ; return de.azapps.mirakel.model.task.Task ; } 
public static de.azapps.mirakel.model.task.MirakelQueryBuilder de.azapps.mirakel.model.task.MirakelQueryBuilder ( final MirakelQueryBuilder de.azapps.mirakel.model.task.MirakelQueryBuilder ) { return de.azapps.mirakel.model.task.MirakelQueryBuilder . and ( DatabaseHelper . SYNC_STATE_FIELD , Operation . NOT_EQ , SYNC_STATE . DELETE . toInt ( ) ) . and ( RECURRING_SHOWN , Operation . EQ , true ) ; } 
public static java.lang.String java.lang.String ( final java.lang.String java.lang.String ) { return java.lang.String + '.' + java.lang.String ; } 
public static java.lang.String java.lang.String ( ) { return ' ' + java.lang.String ( DatabaseHelper . SYNC_STATE_FIELD ) + STRING + SYNC_STATE . DELETE . toInt ( ) + STRING + java.lang.String ( RECURRING_SHOWN ) + STRING ; } 
public static void void ( final java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> ) { if ( java.util.List<de.azapps.mirakel.model.task.Task> . boolean ( ) ) { return; } for ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task : java.util.List<de.azapps.mirakel.model.task.Task> ) { if ( de.azapps.mirakel.model.task.Task . getSyncState ( ) != SYNC_STATE . DELETE ) { de.azapps.mirakel.model.task.Task . setSyncState ( SYNC_STATE . NOTHING ) ; try { update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.Task . getContentValues ( ) , ID + STRING + de.azapps.mirakel.model.task.Task . getId ( ) , null ) ; } catch ( final NoSuchListException de.azapps.mirakel.model.task.NoSuchListException ) { Log . d ( de.azapps.mirakel.model.task.Task . java.lang.String , STRING , de.azapps.mirakel.model.task.NoSuchListException ) ; } catch ( final java.lang.Exception java.lang.Exception ) { de.azapps.mirakel.model.task.Task . void ( false ) ; Log . d ( de.azapps.mirakel.model.task.Task . java.lang.String , STRING + de.azapps.mirakel.model.task.Task . getName ( ) , java.lang.Exception ) ; } } else { Log . d ( de.azapps.mirakel.model.task.Task . java.lang.String , STRING + de.azapps.mirakel.model.task.Task . getName ( ) ) ; de.azapps.mirakel.model.task.Task . void ( true ) ; } } } 
public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.FileMirakel> < FileMirakel > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.FileMirakel> ( final Context de.azapps.mirakel.model.task.Context , final Uri de.azapps.mirakel.model.task.Uri ) { return FileMirakel . newFile ( de.azapps.mirakel.model.task.Context , this , de.azapps.mirakel.model.task.Uri ) ; } 
public void void ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ) { if ( boolean ( de.azapps.mirakel.model.task.Task ) ) { return; } final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , getId ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , de.azapps.mirakel.model.task.Task . getId ( ) ) ; insert ( MirakelInternalContentProvider . SUBTASK_URI , de.azapps.mirakel.model.task.ContentValues ) ; if ( ( syncState != SYNC_STATE . DELETE ) && ( syncState != SYNC_STATE . ADD ) ) { final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . NEED_SYNC . toInt ( ) ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ID + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( getId ( ) ) } ) ; } } 
public void void ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task , final boolean boolean ) { if ( boolean ) { de.azapps.mirakel.model.task.Task . void ( ) ; } else { delete ( MirakelInternalContentProvider . SUBTASK_URI , STRING + getId ( ) + STRING + de.azapps.mirakel.model.task.Task . getId ( ) , null ) ; } } 
public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> = java.util.List<de.azapps.mirakel.model.task.Task> ( ) ; for ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task : java.util.List<de.azapps.mirakel.model.task.Task> ) { de.azapps.mirakel.model.task.Task . void ( ) ; } } 
@ java.lang.Override public void void ( ) { void ( false ) ; } 
public void void ( final boolean boolean ) { final long long = getId ( ) ; void ( ) ; final java.lang.String java.lang.String = STRING + Recurring . TW_TABLE + STRING + getId ( ) + ')' ; final java.lang.String java.lang.String = ModelBase . ID + STRING + long + STRING + ModelBase . ID + java.lang.String ; if ( ( getSyncState ( ) == SYNC_STATE . ADD ) || boolean ) { delete ( de.azapps.mirakel.model.task.Uri , java.lang.String , null ) ; delete ( MirakelInternalContentProvider . FILE_URI , STRING + long + STRING + java.lang.String , null ) ; delete ( MirakelInternalContentProvider . RECURRING_TW_URI , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( getId ( ) ) } ) ; void ( ) ; } else { final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . DELETE . toInt ( ) ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , java.lang.String , null ) ; delete ( MirakelInternalContentProvider . FILE_URI , STRING + long + STRING + java.lang.String , null ) ; } } 
public void void ( ) { FileMirakel . destroyForTask ( this ) ; void ( getId ( ) ) ; } 
public static void void ( final long long ) { delete ( MirakelInternalContentProvider . SUBTASK_URI , STRING + long + STRING + long , null ) ; } 
public java.lang.String [] java.lang.String[] ( ) { return this . java.lang.String[] ; } 
public java.util.List<de.azapps.mirakel.model.task.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.task.FileMirakel> ( ) { return FileMirakel . getForTask ( this ) ; } 
public long long ( ) { return new MirakelQueryBuilder ( context ) . and ( STRING , Operation . EQ , this ) . count ( MirakelInternalContentProvider . SUBTASK_URI ) ; } 
public java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> = de.azapps.mirakel.model.task.Task . de.azapps.mirakel.model.task.CursorWrapper ( this ) . doWithCursor ( LIST_FROM_CURSOR ) ; if ( getRecurrence ( ) . isPresent ( ) ) { final Optional < de.azapps.mirakel.model.task.Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( ) ; if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . isPresent ( ) && ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . get ( ) . getId ( ) != getId ( ) ) ) { java.util.List<de.azapps.mirakel.model.task.Task> . boolean ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . get ( ) . getSubtasks ( ) ) ; } } return java.util.List<de.azapps.mirakel.model.task.Task> ; } 
public boolean boolean ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ) { if ( de.azapps.mirakel.model.task.Task . getId ( ) == getId ( ) ) { return true ; } final java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> = java.util.List<de.azapps.mirakel.model.task.Task> ( ) ; for ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task : java.util.List<de.azapps.mirakel.model.task.Task> ) { if ( ( de.azapps.mirakel.model.task.Task . getId ( ) == de.azapps.mirakel.model.task.Task . getId ( ) ) || de.azapps.mirakel.model.task.Task . boolean ( de.azapps.mirakel.model.task.Task ) ) { return true ; } } return false ; } 
public boolean boolean ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task ) { if ( de.azapps.mirakel.model.task.Task == null ) { return false ; } return new MirakelQueryBuilder ( context ) . and ( STRING , Operation . EQ , de.azapps.mirakel.model.task.Task ) . and ( STRING , Operation . EQ , this ) . count ( MirakelInternalContentProvider . SUBTASK_URI ) > NUMBER ; } 
@ java.lang.Override public void void ( ) { void ( true ) ; } 
public void void ( final boolean boolean ) { void ( boolean , false ) ; } 
public void void ( final boolean boolean , final boolean boolean ) { try { void ( boolean , boolean , true ) ; } catch ( final NoSuchListException de.azapps.mirakel.model.task.NoSuchListException ) { Log . w ( de.azapps.mirakel.model.task.Task . java.lang.String , STRING ) ; } } 
private void void ( final boolean boolean , final boolean boolean , final boolean boolean ) throws de.azapps.mirakel.model.task.NoSuchListException { if ( ! isEdited ( ) ) { Log . d ( de.azapps.mirakel.model.task.Task . java.lang.String , STRING ) ; return; } if ( isStub ( ) ) { setIsStub ( false ) ; } if ( isEdited ( RECURRING ) && ! boolean ) { final Optional < de.azapps.mirakel.model.task.Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = de.azapps.mirakel.model.task.Task . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( getId ( ) ) ; if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . isPresent ( ) ) { final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . get ( ) ; if ( ( de.azapps.mirakel.model.task.Task . getRecurrenceId ( ) == - NUMBER ) && ( getRecurrenceId ( ) != - NUMBER ) ) { void ( ) ; } else if ( de.azapps.mirakel.model.task.Task . getRecurrenceId ( ) != getRecurrenceId ( ) ) { final Optional < Recurring > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> = getRecurrence ( ) ; if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . isPresent ( ) ) { new MirakelQueryBuilder ( context ) . select ( STRING ) . and ( STRING , Operation . EQ , this ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { final long long = de.azapps.mirakel.model.task.CursorGetter . getLong ( STRING ) ; final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( RECURRING , - NUMBER ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + Recurring . TW_TABLE + STRING + long + ')' , null ) ; delete ( MirakelInternalContentProvider . RECURRING_TW_URI , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) ; delete ( de.azapps.mirakel.model.task.Uri , ModelBase . ID + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) ; } } } ) ; } else { void ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . get ( ) ) ; } } } } if ( isEdited ( TaskBase . DONE ) && isDone ( ) ) { void ( ) ; } setSyncState ( ( ( getSyncState ( ) == SYNC_STATE . ADD ) || ( getSyncState ( ) == SYNC_STATE . IS_SYNCED ) ) ? getSyncState ( ) : SYNC_STATE . NEED_SYNC ) ; if ( boolean && ( de.azapps.mirakel.model.task.Task . context != null ) ) { updatedAt = new DateTime ( ) ; } final ContentValues de.azapps.mirakel.model.task.ContentValues = getContentValues ( ) ; final java.util.List<de.azapps.mirakel.model.task.Tag> < Tag > java.util.List<de.azapps.mirakel.model.task.Tag> = getTags ( ) ; MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { if ( isEdited ( TaskBase . RECURRING ) ) { new MirakelQueryBuilder ( context ) . select ( STRING ) . and ( STRING , Operation . EQ , getId ( ) ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { long long = getId ( ) ; if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { long = de.azapps.mirakel.model.task.CursorGetter . getLong ( STRING ) ; } final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( RECURRING , getRecurrenceId ( ) ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + Recurring . TW_TABLE + STRING + long + ')' , null ) ; } } ) ; } update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + getId ( ) , null ) ; for ( final Tag de.azapps.mirakel.model.task.Tag : java.util.List<de.azapps.mirakel.model.task.Tag> ) { boolean ( de.azapps.mirakel.model.task.Tag ) ; } clearEdited ( ) ; } } ) ; } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { final long long = de.azapps.mirakel.model.task.CursorGetter . getLong ( STRING ) ; final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( RECURRING , - NUMBER ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + Recurring . TW_TABLE + STRING + long + ')' , null ) ; delete ( MirakelInternalContentProvider . RECURRING_TW_URI , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) ; delete ( de.azapps.mirakel.model.task.Uri , ModelBase . ID + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) ; } } 
@ java.lang.Override public void void ( ) { if ( isEdited ( TaskBase . RECURRING ) ) { new MirakelQueryBuilder ( context ) . select ( STRING ) . and ( STRING , Operation . EQ , getId ( ) ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { long long = getId ( ) ; if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { long = de.azapps.mirakel.model.task.CursorGetter . getLong ( STRING ) ; } final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( RECURRING , getRecurrenceId ( ) ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + Recurring . TW_TABLE + STRING + long + ')' , null ) ; } } ) ; } update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + getId ( ) , null ) ; for ( final Tag de.azapps.mirakel.model.task.Tag : java.util.List<de.azapps.mirakel.model.task.Tag> ) { boolean ( de.azapps.mirakel.model.task.Tag ) ; } clearEdited ( ) ; } 
@ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { long long = getId ( ) ; if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { long = de.azapps.mirakel.model.task.CursorGetter . getLong ( STRING ) ; } final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( RECURRING , getRecurrenceId ( ) ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + Recurring . TW_TABLE + STRING + long + ')' , null ) ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( ) { return new MirakelQueryBuilder ( context ) . select ( addPrefix ( java.lang.String[] , java.lang.String ) ) . and ( Recurring . TW_TABLE + STRING , Operation . EQ , this ) . sort ( Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT , Sorting . ASC ) . query ( MirakelInternalContentProvider . TASK_RECURRING_TW_PARENT_URI ) . doWithCursor ( new CursorWrapper . CursorWrapper < Optional < de.azapps.mirakel.model.task.Task > > ( ) { @ Override public Optional < Task > convert ( @ NonNull final CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return of ( new Task ( getter ) ) ; } else { return Optional .< Task > absent ( ) ; } } } ) ; } 
@ Override public Optional < Task > convert ( @ NonNull final CursorGetter getter ) { if ( getter . moveToFirst ( ) ) { return of ( new Task ( getter ) ) ; } else { return Optional .< Task > absent ( ) ; } } 
@ NonNull public java.util.List<de.azapps.mirakel.model.task.Task> < de.azapps.mirakel.model.task.Task > java.util.List<de.azapps.mirakel.model.task.Task> ( ) { return new MirakelQueryBuilder ( context ) . select ( addPrefix ( java.lang.String[] , java.lang.String ) ) . and ( Recurring . TW_TABLE + '.' + Recurring . PARENT , Operation . EQ , this ) . sort ( Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT , Sorting . ASC ) . query ( MirakelInternalContentProvider . TASK_RECURRING_TW_CHILD_URI ) . doWithCursor ( LIST_FROM_CURSOR ) ; } 
private void void ( final Recurring de.azapps.mirakel.model.task.Recurring ) { new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { final java.lang.String [] java.lang.String[] = addPrefix ( java.lang.String[] , java.lang.String , java.lang.String[] . int + NUMBER ) ; java.lang.String[] [ java.lang.String[] . int ] = Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT ; new MirakelQueryBuilder ( context ) . select ( java.lang.String[] ) . and ( Recurring . TW_TABLE + '.' + Recurring . PARENT , Operation . IN , new MirakelQueryBuilder ( context ) . select ( Recurring . PARENT ) . and ( Recurring . CHILD , Operation . EQ , de.azapps.mirakel.model.task.Task .this ) , MirakelInternalContentProvider . RECURRING_TW_URI ) . sort ( Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT , Sorting . ASC ) . query ( MirakelInternalContentProvider . TASK_RECURRING_TW_CHILD_URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = null ; do { final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = new de.azapps.mirakel.model.task.Task ( de.azapps.mirakel.model.task.CursorGetter ) ; final int int = de.azapps.mirakel.model.task.CursorGetter . getInt ( Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT ) ; if ( ( int > NUMBER ) && ( de.azapps.mirakel.model.task.Task != null ) && ( de.azapps.mirakel.model.task.Recurring != null ) && de.azapps.mirakel.model.task.Task . getDue ( ) . isPresent ( ) ) { de.azapps.mirakel.model.task.Task . setDue ( de.azapps.mirakel.model.task.Recurring . addRecurring ( de.azapps.mirakel.model.task.Task . getDue ( ) ) ) ; if ( de.azapps.mirakel.model.task.Task . getId ( ) == getId ( ) ) { setDue ( de.azapps.mirakel.model.task.Task . getDue ( ) ) ; } } de.azapps.mirakel.model.task.Task . setRecurrence ( getRecurrenceId ( ) ) ; de.azapps.mirakel.model.task.Task . void ( false , true ) ; de.azapps.mirakel.model.task.Task = de.azapps.mirakel.model.task.Task ; } while ( de.azapps.mirakel.model.task.CursorGetter . moveToNext ( ) ); } } } ) ; } } ) . void ( ) ; } 
@ java.lang.Override public void void ( ) { final java.lang.String [] java.lang.String[] = addPrefix ( java.lang.String[] , java.lang.String , java.lang.String[] . int + NUMBER ) ; java.lang.String[] [ java.lang.String[] . int ] = Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT ; new MirakelQueryBuilder ( context ) . select ( java.lang.String[] ) . and ( Recurring . TW_TABLE + '.' + Recurring . PARENT , Operation . IN , new MirakelQueryBuilder ( context ) . select ( Recurring . PARENT ) . and ( Recurring . CHILD , Operation . EQ , de.azapps.mirakel.model.task.Task .this ) , MirakelInternalContentProvider . RECURRING_TW_URI ) . sort ( Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT , Sorting . ASC ) . query ( MirakelInternalContentProvider . TASK_RECURRING_TW_CHILD_URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = null ; do { final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = new de.azapps.mirakel.model.task.Task ( de.azapps.mirakel.model.task.CursorGetter ) ; final int int = de.azapps.mirakel.model.task.CursorGetter . getInt ( Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT ) ; if ( ( int > NUMBER ) && ( de.azapps.mirakel.model.task.Task != null ) && ( de.azapps.mirakel.model.task.Recurring != null ) && de.azapps.mirakel.model.task.Task . getDue ( ) . isPresent ( ) ) { de.azapps.mirakel.model.task.Task . setDue ( de.azapps.mirakel.model.task.Recurring . addRecurring ( de.azapps.mirakel.model.task.Task . getDue ( ) ) ) ; if ( de.azapps.mirakel.model.task.Task . getId ( ) == getId ( ) ) { setDue ( de.azapps.mirakel.model.task.Task . getDue ( ) ) ; } } de.azapps.mirakel.model.task.Task . setRecurrence ( getRecurrenceId ( ) ) ; de.azapps.mirakel.model.task.Task . void ( false , true ) ; de.azapps.mirakel.model.task.Task = de.azapps.mirakel.model.task.Task ; } while ( de.azapps.mirakel.model.task.CursorGetter . moveToNext ( ) ); } } } ) ; } 
@ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = null ; do { final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = new de.azapps.mirakel.model.task.Task ( de.azapps.mirakel.model.task.CursorGetter ) ; final int int = de.azapps.mirakel.model.task.CursorGetter . getInt ( Recurring . TW_TABLE + '.' + Recurring . OFFSET_COUNT ) ; if ( ( int > NUMBER ) && ( de.azapps.mirakel.model.task.Task != null ) && ( de.azapps.mirakel.model.task.Recurring != null ) && de.azapps.mirakel.model.task.Task . getDue ( ) . isPresent ( ) ) { de.azapps.mirakel.model.task.Task . setDue ( de.azapps.mirakel.model.task.Recurring . addRecurring ( de.azapps.mirakel.model.task.Task . getDue ( ) ) ) ; if ( de.azapps.mirakel.model.task.Task . getId ( ) == getId ( ) ) { setDue ( de.azapps.mirakel.model.task.Task . getDue ( ) ) ; } } de.azapps.mirakel.model.task.Task . setRecurrence ( getRecurrenceId ( ) ) ; de.azapps.mirakel.model.task.Task . void ( false , true ) ; de.azapps.mirakel.model.task.Task = de.azapps.mirakel.model.task.Task ; } while ( de.azapps.mirakel.model.task.CursorGetter . moveToNext ( ) ); } } 
public void void ( ) de.azapps.mirakel.model.task.NoSuchListException { Log . i ( java.lang.String , STRING ) ; final long long = getId ( ) ; final long long = getRecurrenceId ( ) ; final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = de.azapps.mirakel.model.task.Task ( ) ; setIsRecurringShown ( false ) ; setId ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; de.azapps.mirakel.model.task.Task . setId ( long ) ; de.azapps.mirakel.model.task.Task . edited . remove ( RECURRING ) ; de.azapps.mirakel.model.task.Task . void ( false ) ; final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , getId ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , de.azapps.mirakel.model.task.Task . getId ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , NUMBER ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , NUMBER ) ; insert ( MirakelInternalContentProvider . RECURRING_TW_URI , de.azapps.mirakel.model.task.ContentValues ) ; de.azapps.mirakel.model.task.ContentValues . clear ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( RECURRING , long ) ; de.azapps.mirakel.model.task.ContentValues . put ( UUID , java . util . java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . ADD . toInt ( ) ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) ; final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , getId ( ) ) ; update ( MirakelInternalContentProvider . SUBTASK_URI , de.azapps.mirakel.model.task.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) ; } 
public static void void ( ) { final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( RECURRING_SHOWN , java.lang.Boolean . java.lang.Boolean ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + Recurring . TW_TABLE + ')' , null ) ; de.azapps.mirakel.model.task.ContentValues . clear ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( RECURRING_SHOWN , java.lang.Boolean . java.lang.Boolean ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , ModelBase . ID + STRING + Recurring . TW_TABLE + STRING + java.lang.String + STRING , null ) ; } 
private void void ( ) { new MirakelQueryBuilder ( context ) . select ( STRING ) . and ( STRING , Operation . EQ , this ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . NEED_SYNC . toInt ( ) ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.model.task.CursorGetter . getLong ( STRING ) ) } ) ; } } } ) ; } 
@ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { if ( de.azapps.mirakel.model.task.CursorGetter . moveToFirst ( ) ) { final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( DatabaseHelper . SYNC_STATE_FIELD , SYNC_STATE . NEED_SYNC . toInt ( ) ) ; update ( de.azapps.mirakel.model.task.Uri , de.azapps.mirakel.model.task.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.model.task.CursorGetter . getLong ( STRING ) ) } ) ; } } 
private void void ( ) { if ( ! getRecurrence ( ) . isPresent ( ) ) { for ( final de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task : java.util.List<de.azapps.mirakel.model.task.Task> ( ) ) { de.azapps.mirakel.model.task.Task . setDone ( true ) ; de.azapps.mirakel.model.task.Task . void ( false ) ; } } } 
@ java.lang.Override public void void ( @ NonNull final Tag de.azapps.mirakel.model.task.Tag ) { void ( de.azapps.mirakel.model.task.Tag , true ) ; } 
public void void ( final Tag de.azapps.mirakel.model.task.Tag , final boolean boolean ) { void ( de.azapps.mirakel.model.task.Tag , boolean , false ) ; } 
public void void ( final Tag de.azapps.mirakel.model.task.Tag , final boolean boolean , final boolean boolean ) { super. addTag ( de.azapps.mirakel.model.task.Tag ) ; if ( ! boolean ( de.azapps.mirakel.model.task.Tag ) ) { return; } this . edited . put ( STRING , java.lang.Boolean . java.lang.Boolean ) ; try { void ( boolean , boolean , boolean ) ; } catch ( final NoSuchListException de.azapps.mirakel.model.task.NoSuchListException ) { Log . w ( de.azapps.mirakel.model.task.Task . java.lang.String , STRING ) ; } } 
public void void ( final java.util.List<de.azapps.mirakel.model.task.Tag> < Tag > java.util.List<de.azapps.mirakel.model.task.Tag> ) { if ( super. tags . isPresent ( ) ) { super. tags . get ( ) . clear ( ) ; super. tags . get ( ) . addAll ( java.util.List<de.azapps.mirakel.model.task.Tag> ) ; } else { super. tags = of ( java.util.List<de.azapps.mirakel.model.task.Tag> ) ; } void ( ) ; } 
private boolean boolean ( final Tag de.azapps.mirakel.model.task.Tag ) { if ( new MirakelQueryBuilder ( context ) . and ( STRING , Operation . EQ , this ) . and ( STRING , Operation . EQ , de.azapps.mirakel.model.task.Tag ) . count ( MirakelInternalContentProvider . TAG_CONNECTION_URI ) > NUMBER ) { return false ; } if ( getId ( ) != NUMBER ) { final ContentValues de.azapps.mirakel.model.task.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , de.azapps.mirakel.model.task.Tag . getId ( ) ) ; de.azapps.mirakel.model.task.ContentValues . put ( STRING , getId ( ) ) ; insert ( MirakelInternalContentProvider . TAG_CONNECTION_URI , de.azapps.mirakel.model.task.ContentValues ) ; return true ; } return false ; } 
@ java.lang.Override public void void ( final Tag de.azapps.mirakel.model.task.Tag ) { void ( de.azapps.mirakel.model.task.Tag , true ) ; } 
public void void ( final Tag de.azapps.mirakel.model.task.Tag , final boolean boolean ) { void ( de.azapps.mirakel.model.task.Tag , boolean , false ) ; } 
public void void ( final Tag de.azapps.mirakel.model.task.Tag , final boolean boolean , final boolean boolean ) { super. removeTag ( de.azapps.mirakel.model.task.Tag ) ; this . edited . put ( STRING , java.lang.Boolean . java.lang.Boolean ) ; try { void ( boolean , boolean , boolean ) ; } catch ( final NoSuchListException de.azapps.mirakel.model.task.NoSuchListException ) { Log . w ( de.azapps.mirakel.model.task.Task . java.lang.String , STRING ) ; } delete ( MirakelInternalContentProvider . TAG_CONNECTION_URI , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( getId ( ) ) , java.lang.String . java.lang.String ( de.azapps.mirakel.model.task.Tag . getId ( ) ) } ) ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.model.task.Parcel , final int int ) { de.azapps.mirakel.model.task.Parcel . writeStringArray ( this . java.lang.String[] ) ; de.azapps.mirakel.model.task.Parcel . writeString ( this . additionalEntriesString ) ; de.azapps.mirakel.model.task.Parcel . writeString ( this . content ) ; de.azapps.mirakel.model.task.Parcel . writeSerializable ( this . createdAt ) ; de.azapps.mirakel.model.task.Parcel . writeByte ( done ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.task.Parcel . writeSerializable ( this . due . orNull ( ) ) ; de.azapps.mirakel.model.task.Parcel . writeParcelable ( this . list , NUMBER ) ; de.azapps.mirakel.model.task.Parcel . writeInt ( this . priority ) ; de.azapps.mirakel.model.task.Parcel . writeInt ( this . progress ) ; de.azapps.mirakel.model.task.Parcel . writeLong ( this . recurrence ) ; de.azapps.mirakel.model.task.Parcel . writeLong ( this . recurringReminder ) ; de.azapps.mirakel.model.task.Parcel . writeByte ( isRecurringShown ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.task.Parcel . writeSerializable ( this . reminder . orNull ( ) ) ; de.azapps.mirakel.model.task.Parcel . writeInt ( this . syncState . ordinal ( ) ) ; de.azapps.mirakel.model.task.Parcel . writeSerializable ( this . updatedAt ) ; de.azapps.mirakel.model.task.Parcel . writeString ( this . uuid ) ; de.azapps.mirakel.model.task.Parcel . writeTypedList ( getTags ( ) ) ; de.azapps.mirakel.model.task.Parcel . writeLong ( this . getId ( ) ) ; de.azapps.mirakel.model.task.Parcel . writeString ( this . getName ( ) ) ; de.azapps.mirakel.model.task.Parcel . writeByte ( isStub ? ( byte ) NUMBER : ( byte ) NUMBER ) ; } 
private void ( final Parcel de.azapps.mirakel.model.task.Parcel ) { this . java.lang.String[] = de.azapps.mirakel.model.task.Parcel . createStringArray ( ) ; this . additionalEntriesString = de.azapps.mirakel.model.task.Parcel . readString ( ) ; this . content = de.azapps.mirakel.model.task.Parcel . readString ( ) ; this . createdAt = ( DateTime ) de.azapps.mirakel.model.task.Parcel . readSerializable ( ) ; this . done = de.azapps.mirakel.model.task.Parcel . readByte ( ) != NUMBER ; this . due = fromNullable ( ( DateTime ) de.azapps.mirakel.model.task.Parcel . readSerializable ( ) ) ; this . list = de.azapps.mirakel.model.task.Parcel . readParcelable ( ListMirakel .class . java.lang.ClassLoader ( ) ) ; this . priority = de.azapps.mirakel.model.task.Parcel . readInt ( ) ; this . progress = de.azapps.mirakel.model.task.Parcel . readInt ( ) ; this . recurrence = de.azapps.mirakel.model.task.Parcel . readLong ( ) ; this . recurringReminder = de.azapps.mirakel.model.task.Parcel . readLong ( ) ; this . isRecurringShown = de.azapps.mirakel.model.task.Parcel . readByte ( ) != NUMBER ; this . reminder = fromNullable ( ( DateTime ) de.azapps.mirakel.model.task.Parcel . readSerializable ( ) ) ; final int int = de.azapps.mirakel.model.task.Parcel . readInt ( ) ; this . syncState = ( int == - NUMBER ) ? SYNC_STATE . NOTHING : SYNC_STATE . values ( ) [ int ] ; this . updatedAt = ( DateTime ) de.azapps.mirakel.model.task.Parcel . readSerializable ( ) ; this . uuid = de.azapps.mirakel.model.task.Parcel . readString ( ) ; de.azapps.mirakel.model.task.Parcel . readTypedList ( getTags ( ) , Tag . CREATOR ) ; this . setId ( de.azapps.mirakel.model.task.Parcel . readLong ( ) ) ; this . setName ( de.azapps.mirakel.model.task.Parcel . readString ( ) ) ; this . isStub = de.azapps.mirakel.model.task.Parcel . readByte ( ) != NUMBER ; final Optional < de.azapps.mirakel.model.task.Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( getId ( ) ) ; if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . isPresent ( ) && ! this . boolean ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . get ( ) ) ) { de.azapps.mirakel.model.task.Task de.azapps.mirakel.model.task.Task = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . get ( ) ; java.lang.String[] = de.azapps.mirakel.model.task.Task . java.lang.String[] ; additionalEntriesString = de.azapps.mirakel.model.task.Task . additionalEntriesString ; content = de.azapps.mirakel.model.task.Task . content ; createdAt = de.azapps.mirakel.model.task.Task . createdAt ; done = de.azapps.mirakel.model.task.Task . done ; due = de.azapps.mirakel.model.task.Task . due ; list = de.azapps.mirakel.model.task.Task . list ; priority = de.azapps.mirakel.model.task.Task . priority ; progress = de.azapps.mirakel.model.task.Task . progress ; reminder = de.azapps.mirakel.model.task.Task . reminder ; syncState = de.azapps.mirakel.model.task.Task . syncState ; updatedAt = de.azapps.mirakel.model.task.Task . updatedAt ; setId ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; setName ( de.azapps.mirakel.model.task.Task . getName ( ) ) ; } } 
@ Override public Task createFromParcel ( final Parcel source ) { return new Task ( source ) ; } 
@ Override public Task [] newArray ( final int size ) { return new Task [ size ] ; } 
public void ( final Task de.azapps.mirakel.model.task.Task ) { de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = of ( de.azapps.mirakel.model.task.Task ) ; boolean = de.azapps.mirakel.model.task.Task . isDone ( ) ; int = de.azapps.mirakel.model.task.Task . getProgress ( ) ; de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> = of ( de.azapps.mirakel.model.task.Task . getList ( ) ) ; long = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . get ( ) . getId ( ) ; java.lang.String = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . get ( ) . getName ( ) ; int = de.azapps.mirakel.model.task.Task . getPriority ( ) ; } 
public void ( final CursorGetter de.azapps.mirakel.model.task.CursorGetter ) { setId ( de.azapps.mirakel.model.task.CursorGetter . getLong ( ModelBase . ID ) ) ; setName ( de.azapps.mirakel.model.task.CursorGetter . getString ( ModelBase . NAME ) ) ; boolean = de.azapps.mirakel.model.task.CursorGetter . getBoolean ( Task . DONE ) ; int = de.azapps.mirakel.model.task.CursorGetter . getInt ( Task . PROGRESS ) ; de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> = de.azapps.mirakel.model.task.CursorGetter . getOptional ( Task . DUE , DateTime .class ) ; long = de.azapps.mirakel.model.task.CursorGetter . getLong ( Task . LIST_ID ) ; java.lang.String = de.azapps.mirakel.model.task.CursorGetter . getString ( STRING ) ; long = de.azapps.mirakel.model.task.CursorGetter . getLong ( STRING ) ; int = de.azapps.mirakel.model.task.CursorGetter . getInt ( Task . PRIORITY ) ; } 
public boolean boolean ( ) { return boolean ; } 
public int int ( ) { return int ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ( ) { return de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ; } 
public long long ( ) { return long ; } 
public java.lang.String java.lang.String ( ) { return java.lang.String ; } 
public int int ( ) { return int ; } 
@ java.lang.Override protected de.azapps.mirakel.model.task.Uri de.azapps.mirakel.model.task.Uri ( ) { return Task . URI ; } 
public void withTask ( OptionalUtils . OptionalUtils < Task > taskProcedure ) { Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( ) ; OptionalUtils . withOptional ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> , taskProcedure ) ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ( ) { if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> . isPresent ( ) ) { de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( getId ( ) ) ; } return de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> < ListMirakel > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> ( ) { if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> = ListMirakel . get ( long ) ; } return de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.ListMirakel> ; } 
@ NonNull public de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.AccountMirakel> < AccountMirakel > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.AccountMirakel> ( ) { if ( ! de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.AccountMirakel> . isPresent ( ) ) { de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.AccountMirakel> = AccountMirakel . get ( long ) ; } return de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.AccountMirakel> ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( Parcel de.azapps.mirakel.model.task.Parcel , int int ) { de.azapps.mirakel.model.task.Parcel . writeByte ( boolean ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.model.task.Parcel . writeInt ( this . int ) ; de.azapps.mirakel.model.task.Parcel . writeInt ( this . int ) ; de.azapps.mirakel.model.task.Parcel . writeSerializable ( this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; de.azapps.mirakel.model.task.Parcel . writeLong ( this . long ) ; de.azapps.mirakel.model.task.Parcel . writeString ( this . java.lang.String ) ; de.azapps.mirakel.model.task.Parcel . writeLong ( this . long ) ; de.azapps.mirakel.model.task.Parcel . writeLong ( this . getId ( ) ) ; de.azapps.mirakel.model.task.Parcel . writeString ( this . getName ( ) ) ; } 
private void ( Parcel de.azapps.mirakel.model.task.Parcel ) { this . boolean = de.azapps.mirakel.model.task.Parcel . readByte ( ) != NUMBER ; this . int = de.azapps.mirakel.model.task.Parcel . readInt ( ) ; this . int = de.azapps.mirakel.model.task.Parcel . readInt ( ) ; this . de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> = ( Optional < DateTime > ) de.azapps.mirakel.model.task.Parcel . readSerializable ( ) ; this . long = de.azapps.mirakel.model.task.Parcel . readLong ( ) ; this . java.lang.String = de.azapps.mirakel.model.task.Parcel . readString ( ) ; this . long = de.azapps.mirakel.model.task.Parcel . readLong ( ) ; setId ( de.azapps.mirakel.model.task.Parcel . readLong ( ) ) ; setName ( de.azapps.mirakel.model.task.Parcel . readString ( ) ) ; } 
public de.azapps.mirakel.model.task.TaskOverview de.azapps.mirakel.model.task.TaskOverview ( Parcel de.azapps.mirakel.model.task.Parcel ) { return new de.azapps.mirakel.model.task.TaskOverview ( de.azapps.mirakel.model.task.Parcel ) ; } 
public de.azapps.mirakel.model.task.TaskOverview [] de.azapps.mirakel.model.task.TaskOverview[] ( int int ) { return new de.azapps.mirakel.model.task.TaskOverview [ int ] ; } 
public void ( ) { super(); } 
public void ( java.lang.String java.lang.String ) { super( java.lang.String ); } 
public void ( long long ) { super( long ); } 
@ java.lang.Override public void void ( final Context de.azapps.mirakel.receivers.Context , final Intent de.azapps.mirakel.receivers.Intent ) { NotificationService . updateServices ( de.azapps.mirakel.receivers.Context ) ; } 
public static void void ( final Context de.azapps.mirakel.reminders.Context ) { de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler = new de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler ( de.azapps.mirakel.reminders.Context ) ; } 
public static void void ( ) { if ( de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler != null ) { de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler . void ( ) ; } } 
@ java.lang.Override public void void ( final Context de.azapps.mirakel.reminders.Context , final Intent de.azapps.mirakel.reminders.Intent ) { Log . d ( java.lang.String , STRING ) ; if ( java.lang.String . boolean ( de.azapps.mirakel.reminders.Intent . getAction ( ) ) ) { NotificationService . updateServices ( de.azapps.mirakel.reminders.Context ) ; if ( de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler != null ) { de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler . void ( ) ; } } if ( ! java.lang.String . boolean ( de.azapps.mirakel.reminders.Intent . getAction ( ) ) ) { return; } final java.util.ArrayList<de.azapps.mirakel.reminders.Task> < Task > java.util.ArrayList<de.azapps.mirakel.reminders.Task> = de.azapps.mirakel.reminders.Intent . getParcelableArrayListExtra ( java.lang.String ) ; if ( java.util.ArrayList<de.azapps.mirakel.reminders.Task> == null ) { return; } for ( final Task de.azapps.mirakel.reminders.Task : java.util.ArrayList<de.azapps.mirakel.reminders.Task> ) { if ( de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler != null ) { de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler . void ( de.azapps.mirakel.reminders.Task , true ) ; } } } 
private static void void ( ) { new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler != null ) { de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler . void ( ) ; } } } ) . void ( ) ; } 
@ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler != null ) { de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler . void ( ) ; } } 
public static void void ( ) { if ( de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler != null ) { de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler . void ( ) ; } void ( ) ; } 
void ( final @ NonNull Context de.azapps.mirakel.reminders.Context ) { de.azapps.mirakel.reminders.NotificationManager = ( NotificationManager ) de.azapps.mirakel.reminders.Context . getSystemService ( Context . NOTIFICATION_SERVICE ) ; de.azapps.mirakel.reminders.AlarmManager = ( AlarmManager ) de.azapps.mirakel.reminders.Context . getSystemService ( Context . ALARM_SERVICE ) ; final Intent de.azapps.mirakel.reminders.Intent = new Intent ( de.azapps.mirakel.reminders.Context , de.azapps.mirakel.reminders.ReminderAlarm .class ) ; de.azapps.mirakel.reminders.Intent . setAction ( java.lang.String ) ; final PendingIntent de.azapps.mirakel.reminders.PendingIntent = PendingIntent . getBroadcast ( de.azapps.mirakel.reminders.Context , NUMBER , de.azapps.mirakel.reminders.Intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; final java.util.Calendar java.util.Calendar = new java.util.GregorianCalendar ( ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; java.util.Calendar . void ( java.util.Calendar . int , NUMBER ) ; de.azapps.mirakel.reminders.AlarmManager . setRepeating ( AlarmManager . RTC , java.util.Calendar . long ( ) , AlarmManager . INTERVAL_DAY , de.azapps.mirakel.reminders.PendingIntent ) ; this . de.azapps.mirakel.reminders.Context = de.azapps.mirakel.reminders.Context ; de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.MirakelContentObserver> = of ( new MirakelContentObserver ( new Handler ( de.azapps.mirakel.reminders.Context . getMainLooper ( ) ) , de.azapps.mirakel.reminders.Context , Task . URI , this ) ) ; if ( ! DefinitionsHelper . freshInstall ) { void ( ) ; } } 
private synchronized void void ( ) { Log . d ( java.lang.String , STRING ) ; void ( ) ; final java.util.Set<java.lang.Long> < java.lang.Long > java.util.Set<java.lang.Long> = new java.util.HashSet <> ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . keySet ( ) ) ; final java.util.List<de.azapps.mirakel.reminders.Task> < Task > java.util.List<de.azapps.mirakel.reminders.Task> = Task . addBasicFiler ( new MirakelQueryBuilder ( de.azapps.mirakel.reminders.Context ) ) . and ( Task . REMINDER , MirakelQueryBuilder . Operation . NOT_EQ , ( java.lang.String ) null ) . and ( Task . DONE , MirakelQueryBuilder . Operation . EQ , false ) . getList ( Task .class ) ; for ( final Task de.azapps.mirakel.reminders.Task : java.util.List<de.azapps.mirakel.reminders.Task> ) { if ( de.azapps.mirakel.reminders.Task . getReminder ( ) . isPresent ( ) ) { if ( java.util.Set<java.lang.Long> . boolean ( de.azapps.mirakel.reminders.Task . getId ( ) ) ) { void ( de.azapps.mirakel.reminders.Task ) ; java.util.Set<java.lang.Long> . boolean ( de.azapps.mirakel.reminders.Task . getId ( ) ) ; } else { void ( de.azapps.mirakel.reminders.Task ) ; } } } for ( final java.lang.Long java.lang.Long : java.util.Set<java.lang.Long> ) { void ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . get ( java.lang.Long ) . second ) ; } } 
private synchronized void void ( final Task de.azapps.mirakel.reminders.Task , final boolean boolean ) { Log . d ( java.lang.String , STRING + de.azapps.mirakel.reminders.Task . getName ( ) ) ; final Optional < java.lang.Class<?> < ? > > de.azapps.mirakel.reminders.Optional<java.lang.Class<?>> = Helpers . getMainActivity ( ) ; if ( ! de.azapps.mirakel.reminders.Optional<java.lang.Class<?>> . isPresent ( ) ) { return; } final Intent de.azapps.mirakel.reminders.Intent = new Intent ( de.azapps.mirakel.reminders.Context , de.azapps.mirakel.reminders.Optional<java.lang.Class<?>> . get ( ) ) ; final Bundle de.azapps.mirakel.reminders.Bundle = new Bundle ( ) ; de.azapps.mirakel.reminders.Bundle . putParcelable ( DefinitionsHelper . EXTRA_TASK , de.azapps.mirakel.reminders.Task ) ; de.azapps.mirakel.reminders.Intent . setAction ( DefinitionsHelper . SHOW_TASK_REMINDER ) ; de.azapps.mirakel.reminders.Intent . putExtra ( DefinitionsHelper . EXTRA_TASK_REMINDER , de.azapps.mirakel.reminders.Task ) ; de.azapps.mirakel.reminders.Intent . putExtra ( java.lang.String . java.lang.String ( de.azapps.mirakel.reminders.Task . getId ( ) ) , de.azapps.mirakel.reminders.Task . getId ( ) ) ; de.azapps.mirakel.reminders.Intent . setData ( Uri . parse ( de.azapps.mirakel.reminders.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; final PendingIntent de.azapps.mirakel.reminders.PendingIntent = PendingIntent . getActivity ( de.azapps.mirakel.reminders.Context , NUMBER , de.azapps.mirakel.reminders.Intent , NUMBER ) ; final Intent de.azapps.mirakel.reminders.Intent = new Intent ( de.azapps.mirakel.reminders.Context , TaskService .class ) ; de.azapps.mirakel.reminders.Intent . setAction ( TaskService . TASK_DONE ) ; de.azapps.mirakel.reminders.Intent . putExtra ( DefinitionsHelper . BUNDLE_WRAPPER , de.azapps.mirakel.reminders.Bundle ) ; de.azapps.mirakel.reminders.Intent . putExtra ( java.lang.String . java.lang.String ( de.azapps.mirakel.reminders.Task . getId ( ) ) , de.azapps.mirakel.reminders.Task . getId ( ) ) ; de.azapps.mirakel.reminders.Intent . setData ( Uri . parse ( de.azapps.mirakel.reminders.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; final PendingIntent de.azapps.mirakel.reminders.PendingIntent = PendingIntent . getService ( de.azapps.mirakel.reminders.Context , NUMBER , de.azapps.mirakel.reminders.Intent , NUMBER ) ; final Intent de.azapps.mirakel.reminders.Intent = new Intent ( de.azapps.mirakel.reminders.Context , TaskService .class ) ; de.azapps.mirakel.reminders.Intent . setAction ( TaskService . TASK_LATER ) ; de.azapps.mirakel.reminders.Intent . putExtra ( DefinitionsHelper . BUNDLE_WRAPPER , de.azapps.mirakel.reminders.Bundle ) ; de.azapps.mirakel.reminders.Intent . putExtra ( java.lang.String . java.lang.String ( de.azapps.mirakel.reminders.Task . getId ( ) ) , de.azapps.mirakel.reminders.Task . getId ( ) ) ; de.azapps.mirakel.reminders.Intent . setData ( Uri . parse ( de.azapps.mirakel.reminders.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; final PendingIntent de.azapps.mirakel.reminders.PendingIntent = PendingIntent . getService ( de.azapps.mirakel.reminders.Context , NUMBER , de.azapps.mirakel.reminders.Intent , NUMBER ) ; final boolean boolean = MirakelCommonPreferences . usePersistentReminders ( ) ; final NotificationCompat . NotificationCompat NotificationCompat.Builder = new NotificationCompat . NotificationCompat ( de.azapps.mirakel.reminders.Context ) . setContentTitle ( de.azapps.mirakel.reminders.Context . getString ( R . string . reminder_notification_title , de.azapps.mirakel.reminders.Task . getName ( ) ) ) . setContentText ( de.azapps.mirakel.reminders.Task . getContent ( ) ) . setSmallIcon ( R . drawable . ic_mirakel ) . setLargeIcon ( Helpers . getBitmap ( R . drawable . mirakel , de.azapps.mirakel.reminders.Context ) ) . setContentIntent ( de.azapps.mirakel.reminders.PendingIntent ) . setPriority ( NotificationCompat . PRIORITY_DEFAULT ) . setOngoing ( boolean ) . setDefaults ( Notification . DEFAULT_VIBRATE ) . addAction ( R . drawable . ic_check_grey600_24dp , de.azapps.mirakel.reminders.Context . getString ( R . string . reminder_notification_done ) , de.azapps.mirakel.reminders.PendingIntent ) . addAction ( R . drawable . ic_alarm_grey600_24dp , de.azapps.mirakel.reminders.Context . getString ( R . string . reminder_notification_later ) , de.azapps.mirakel.reminders.PendingIntent ) . setOnlyAlertOnce ( true ) ; if ( boolean && ! java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Task> . containsKey ( de.azapps.mirakel.reminders.Task . getId ( ) ) ) { NotificationCompat.Builder . setSound ( RingtoneManager . getActualDefaultRingtoneUri ( de.azapps.mirakel.reminders.Context , RingtoneManager . TYPE_NOTIFICATION ) ) . setLights ( Color . BLUE , NUMBER , NUMBER ) . setPriority ( NotificationCompat . PRIORITY_HIGH ) ; } final NotificationCompat . NotificationCompat NotificationCompat.InboxStyle = new NotificationCompat . NotificationCompat ( ) ; final java.lang.String java.lang.String = ( ( de.azapps.mirakel.reminders.Task . getPriority ( ) > NUMBER ) ? ( STRING + de.azapps.mirakel.reminders.Task . getPriority ( ) ) : java.lang.String . java.lang.String ( de.azapps.mirakel.reminders.Task . getPriority ( ) ) ) ; final java.lang.CharSequence java.lang.CharSequence ; if ( ! de.azapps.mirakel.reminders.Task . getDue ( ) . isPresent ( ) ) { java.lang.CharSequence = de.azapps.mirakel.reminders.Context . getString ( R . string . no_date ) ; } else { java.lang.CharSequence = DateTimeHelper . formatDate ( de.azapps.mirakel.reminders.Context , de.azapps.mirakel.reminders.Task . getDue ( ) ) ; } NotificationCompat.InboxStyle . addLine ( de.azapps.mirakel.reminders.Context . getString ( R . string . reminder_notification_list , de.azapps.mirakel.reminders.Task . getList ( ) . getName ( ) ) ) ; NotificationCompat.InboxStyle . addLine ( de.azapps.mirakel.reminders.Context . getString ( R . string . reminder_notification_priority , java.lang.String ) ) ; NotificationCompat.InboxStyle . addLine ( de.azapps.mirakel.reminders.Context . getString ( R . string . reminder_notification_due , java.lang.CharSequence ) ) ; NotificationCompat.Builder . setStyle ( NotificationCompat.InboxStyle ) ; java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Task> . put ( de.azapps.mirakel.reminders.Task . getId ( ) , de.azapps.mirakel.reminders.Task ) ; de.azapps.mirakel.reminders.NotificationManager . notify ( DefinitionsHelper . NOTIF_REMINDER + ( int ) de.azapps.mirakel.reminders.Task . getId ( ) , NotificationCompat.Builder . build ( ) ) ; } 
private void void ( final Task de.azapps.mirakel.reminders.Task ) { void ( de.azapps.mirakel.reminders.Task . getId ( ) ) ; } 
private void void ( final long long ) { de.azapps.mirakel.reminders.NotificationManager . cancel ( DefinitionsHelper . NOTIF_REMINDER + ( int ) long ) ; java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Task> . remove ( long ) ; } 
private synchronized void void ( final Task de.azapps.mirakel.reminders.Task ) { final Pair < java.lang.Long , Task > de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task> = java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . get ( de.azapps.mirakel.reminders.Task . getId ( ) ) ; if ( de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task> == null ) { return; } final long long = old . first ; final Pair < java.util.ArrayList<de.azapps.mirakel.reminders.Task> < Task > , PendingIntent > de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent> = java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . get ( long ) ; if ( de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent> != null ) { final java.util.ArrayList<de.azapps.mirakel.reminders.Task> < Task > java.util.ArrayList<de.azapps.mirakel.reminders.Task> = oldPair . first ; de.azapps.mirakel.reminders.AlarmManager . cancel ( oldPair . second ) ; java.util.ArrayList<de.azapps.mirakel.reminders.Task> . remove ( old . second ) ; if ( java.util.ArrayList<de.azapps.mirakel.reminders.Task> . isEmpty ( ) ) { java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . remove ( long ) ; } else { java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . put ( long , new Pair <> ( java.util.ArrayList<de.azapps.mirakel.reminders.Task> , de.azapps.mirakel.reminders.PendingIntent ( long , java.util.ArrayList<de.azapps.mirakel.reminders.Task> ) ) ) ; } } java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . remove ( de.azapps.mirakel.reminders.Task . getId ( ) ) ; void ( old . second ) ; } 
private synchronized void void ( final Task de.azapps.mirakel.reminders.Task ) { if ( ! de.azapps.mirakel.reminders.Task . getReminder ( ) . isPresent ( ) ) { return; } final long long = long ( de.azapps.mirakel.reminders.Task . getReminder ( ) . get ( ) ) ; final java.util.ArrayList<de.azapps.mirakel.reminders.Task> < Task > java.util.ArrayList<de.azapps.mirakel.reminders.Task> ; if ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . containsKey ( long ) ) { de.azapps.mirakel.reminders.AlarmManager . cancel ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . get ( long ) . second ) ; java.util.ArrayList<de.azapps.mirakel.reminders.Task> = java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . get ( long ) . first ; } else { java.util.ArrayList<de.azapps.mirakel.reminders.Task> = new java.util.ArrayList <> ( NUMBER ) ; } java.util.ArrayList<de.azapps.mirakel.reminders.Task> . add ( de.azapps.mirakel.reminders.Task ) ; java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . put ( long , new Pair <> ( java.util.ArrayList<de.azapps.mirakel.reminders.Task> , de.azapps.mirakel.reminders.PendingIntent ( long , java.util.ArrayList<de.azapps.mirakel.reminders.Task> ) ) ) ; java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . put ( de.azapps.mirakel.reminders.Task . getId ( ) , new Pair <> ( long , de.azapps.mirakel.reminders.Task ) ) ; } 
private de.azapps.mirakel.reminders.PendingIntent de.azapps.mirakel.reminders.PendingIntent ( final java.util.ArrayList<de.azapps.mirakel.reminders.Task> < Task > java.util.ArrayList<de.azapps.mirakel.reminders.Task> ) { final Intent de.azapps.mirakel.reminders.Intent = new Intent ( de.azapps.mirakel.reminders.Context , de.azapps.mirakel.reminders.ReminderAlarm .class ) ; de.azapps.mirakel.reminders.Intent . setAction ( java.lang.String ) ; de.azapps.mirakel.reminders.Intent . putParcelableArrayListExtra ( java.lang.String , java.util.ArrayList<de.azapps.mirakel.reminders.Task> ) ; de.azapps.mirakel.reminders.Intent . setData ( Uri . parse ( de.azapps.mirakel.reminders.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; return PendingIntent . getBroadcast ( de.azapps.mirakel.reminders.Context , NUMBER , de.azapps.mirakel.reminders.Intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; } 
private long long ( final DateTime de.azapps.mirakel.reminders.DateTime ) { if ( de.azapps.mirakel.reminders.DateTime == null ) { void ( ) ; } if ( de.azapps.mirakel.reminders.DateTime . isBefore ( de.azapps.mirakel.reminders.DateTime ) ) { return de.azapps.mirakel.reminders.DateTime . getMillis ( ) ; } else { return de.azapps.mirakel.reminders.DateTime . getMillis ( ) ; } } 
private synchronized void void ( final Task de.azapps.mirakel.reminders.Task ) { final Pair < java.lang.Long , Task > de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task> = java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . get ( de.azapps.mirakel.reminders.Task . getId ( ) ) ; if ( de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task> == null ) { void ( de.azapps.mirakel.reminders.Task ) ; return; } if ( ! old . second . getReminder ( ) . isPresent ( ) ) { void ( de.azapps.mirakel.reminders.Task ) ; return; } if ( ! de.azapps.mirakel.reminders.Task . getReminder ( ) . isPresent ( ) ) { void ( de.azapps.mirakel.reminders.Task ) ; } final long long = old . first ; final long long = long ( de.azapps.mirakel.reminders.Task . getReminder ( ) . get ( ) ) ; if ( long == long ) { return; } void ( old . second ) ; final Pair < java.util.ArrayList<de.azapps.mirakel.reminders.Task> < Task > , PendingIntent > de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent> = java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . get ( long ) ; if ( de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent> != null ) { final java.util.ArrayList<de.azapps.mirakel.reminders.Task> < Task > java.util.ArrayList<de.azapps.mirakel.reminders.Task> = newPair . first ; java.util.ArrayList<de.azapps.mirakel.reminders.Task> . add ( de.azapps.mirakel.reminders.Task ) ; java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.util.ArrayList<de.azapps.mirakel.reminders.Task>,de.azapps.mirakel.reminders.PendingIntent>> . put ( long , new Pair <> ( java.util.ArrayList<de.azapps.mirakel.reminders.Task> , de.azapps.mirakel.reminders.PendingIntent ( long , java.util.ArrayList<de.azapps.mirakel.reminders.Task> ) ) ) ; java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . put ( de.azapps.mirakel.reminders.Task . getId ( ) , new Pair <> ( long , de.azapps.mirakel.reminders.Task ) ) ; } else { java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . remove ( de.azapps.mirakel.reminders.Task . getId ( ) ) ; void ( de.azapps.mirakel.reminders.Task ) ; } } 
private de.azapps.mirakel.reminders.PendingIntent de.azapps.mirakel.reminders.PendingIntent ( final long long , final java.util.ArrayList<de.azapps.mirakel.reminders.Task> < Task > java.util.ArrayList<de.azapps.mirakel.reminders.Task> ) { final PendingIntent de.azapps.mirakel.reminders.PendingIntent = de.azapps.mirakel.reminders.PendingIntent ( java.util.ArrayList<de.azapps.mirakel.reminders.Task> ) ; de.azapps.mirakel.reminders.AlarmManager . set ( AlarmManager . RTC_WAKEUP , long , de.azapps.mirakel.reminders.PendingIntent ) ; Log . d ( java.lang.String , STRING + new java.util.Date ( long ) . java.lang.String ( ) ) ; return de.azapps.mirakel.reminders.PendingIntent ; } 
public synchronized void void ( ) { final java.util.Set<java.lang.Long> < java.lang.Long > java.util.Set<java.lang.Long> = new java.util.HashSet <> ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . keySet ( ) ) ; for ( final java.lang.Long java.lang.Long : java.util.Set<java.lang.Long> ) { if ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . containsKey ( java.lang.Long ) ) { void ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . get ( java.lang.Long ) . second ) ; } } } 
@ java.lang.Override public void void ( ) { void ( ) ; NotificationService . updateServices ( de.azapps.mirakel.reminders.Context ) ; void ( ) ; } 
@ java.lang.Override public synchronized void void ( final long long ) { void ( ) ; NotificationService . updateServices ( de.azapps.mirakel.reminders.Context ) ; final Optional < Task > de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> = Task . get ( long ) ; if ( de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> . isPresent ( ) ) { final Task de.azapps.mirakel.reminders.Task = de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> . get ( ) ; if ( de.azapps.mirakel.reminders.Task . isDone ( ) ) { void ( de.azapps.mirakel.reminders.Task ) ; } else if ( de.azapps.mirakel.reminders.Task . getReminder ( ) . isPresent ( ) ) { if ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Pair<java.lang.Long,de.azapps.mirakel.reminders.Task>> . containsKey ( de.azapps.mirakel.reminders.Task . getId ( ) ) ) { void ( de.azapps.mirakel.reminders.Task ) ; } else { void ( de.azapps.mirakel.reminders.Task ) ; } if ( ! de.azapps.mirakel.reminders.Task . equals ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Task> . get ( de.azapps.mirakel.reminders.Task . getId ( ) ) ) ) { void ( de.azapps.mirakel.reminders.Task , false ) ; } } else { void ( de.azapps.mirakel.reminders.Task ) ; } } } 
private void void ( ) { de.azapps.mirakel.reminders.DateTime = new DateTime ( ) ; de.azapps.mirakel.reminders.DateTime . minusSeconds ( NUMBER ) ; } 
public void void ( ) { if ( de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.MirakelContentObserver> . isPresent ( ) ) { de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.MirakelContentObserver> . get ( ) . unregister ( de.azapps.mirakel.reminders.Context ) ; de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.MirakelContentObserver> = absent ( ) ; } } 
public void void ( ) { final java.util.Set<java.lang.Long> < java.lang.Long > java.util.Set<java.lang.Long> = new java.util.HashSet <> ( java.util.Map<java.lang.Long,de.azapps.mirakel.reminders.Task> . keySet ( ) ) ; for ( final java.lang.Long java.lang.Long : java.util.Set<java.lang.Long> ) { final Optional < Task > de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> = Task . get ( java.lang.Long ) ; if ( de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> . isPresent ( ) ) { if ( ! de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> . get ( ) . isDone ( ) && de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> . get ( ) . getReminder ( ) . isPresent ( ) && de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> . get ( ) . getReminder ( ) . get ( ) . isBefore ( new DateTime ( ) ) ) { void ( de.azapps.mirakel.reminders.Optional<de.azapps.mirakel.reminders.Task> . get ( ) , false ) ; } } else { void ( java.lang.Long ) ; } } } 
@ java.lang.Override public de.azapps.mirakel.services.IBinder de.azapps.mirakel.services.IBinder ( final Intent de.azapps.mirakel.services.Intent ) { return null ; } 
@ java.lang.Override public void void ( ) { void ( ) ; de.azapps.mirakel.services.NotificationService . void ( this ) ; } 
@ java.lang.Override public void void ( ) { } 
public void void ( ) { if ( ! MirakelCommonPreferences . useNotifications ( ) && ! this . boolean ) { return; } final ListMirakel de.azapps.mirakel.services.ListMirakel = ListMirakel . get ( MirakelCommonPreferences . getNotificationsListId ( ) ) . orNull ( ) ; if ( de.azapps.mirakel.services.ListMirakel == null ) { return; } final Optional < java.lang.Class<?> < ? > > de.azapps.mirakel.services.Optional<java.lang.Class<?>> = Helpers . getMainActivity ( ) ; if ( ! de.azapps.mirakel.services.Optional<java.lang.Class<?>> . isPresent ( ) ) { return; } final Intent de.azapps.mirakel.services.Intent = new Intent ( this , de.azapps.mirakel.services.Optional<java.lang.Class<?>> . get ( ) ) ; de.azapps.mirakel.services.Intent . setAction ( DefinitionsHelper . SHOW_LIST ) ; de.azapps.mirakel.services.Intent . putExtra ( DefinitionsHelper . EXTRA_LIST , de.azapps.mirakel.services.ListMirakel ) ; de.azapps.mirakel.services.Intent . setData ( Uri . parse ( de.azapps.mirakel.services.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; final PendingIntent de.azapps.mirakel.services.PendingIntent = PendingIntent . getActivity ( this , NUMBER , de.azapps.mirakel.services.Intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; final java.util.List<de.azapps.mirakel.services.Task> < Task > java.util.List<de.azapps.mirakel.services.Task> = de.azapps.mirakel.services.ListMirakel . tasks ( false ) ; final java.lang.String java.lang.String ; final java.lang.String java.lang.String ; if ( java.util.List<de.azapps.mirakel.services.Task> . isEmpty ( ) ) { java.lang.String = getString ( R . string . notification_title_empty ) ; java.lang.String = STRING ; } else { if ( java.util.List<de.azapps.mirakel.services.Task> . size ( ) == NUMBER ) { java.lang.String = getString ( R . string . notification_title_general_single , de.azapps.mirakel.services.ListMirakel . getName ( ) ) ; } else { java.lang.String = java.lang.String . java.lang.String ( getString ( R . string . notification_title_general ) , java.util.List<de.azapps.mirakel.services.Task> . size ( ) , de.azapps.mirakel.services.ListMirakel . getName ( ) ) ; } java.lang.String = java.util.List<de.azapps.mirakel.services.Task> . get ( NUMBER ) . getName ( ) ; } final boolean boolean = MirakelCommonPreferences . usePersistentNotifications ( ) ; final NotificationCompat . NotificationCompat NotificationCompat.Builder = new NotificationCompat . NotificationCompat ( this ) . setContentTitle ( java.lang.String ) . setContentText ( java.lang.String ) . setSmallIcon ( R . drawable . ic_mirakel ) . setLargeIcon ( Helpers . getBitmap ( R . drawable . mirakel , getBaseContext ( ) ) ) . setContentIntent ( de.azapps.mirakel.services.PendingIntent ) . setOngoing ( boolean ) ; if ( ( java.util.List<de.azapps.mirakel.services.Task> . size ( ) > NUMBER ) && ( VERSION . SDK_INT >= VERSION_CODES . JELLY_BEAN ) ) { final NotificationCompat . NotificationCompat NotificationCompat.InboxStyle = new NotificationCompat . NotificationCompat ( ) ; for ( final Task de.azapps.mirakel.services.Task : java.util.List<de.azapps.mirakel.services.Task> ) { NotificationCompat.InboxStyle . addLine ( de.azapps.mirakel.services.Task . getName ( ) ) ; } NotificationCompat.Builder . setStyle ( NotificationCompat.InboxStyle ) ; } final NotificationManager de.azapps.mirakel.services.NotificationManager = ( NotificationManager ) getSystemService ( NOTIFICATION_SERVICE ) ; de.azapps.mirakel.services.NotificationManager . notify ( DefinitionsHelper . NOTIF_DEFAULT , NotificationCompat.Builder . build ( ) ) ; if ( ( java.util.List<de.azapps.mirakel.services.Task> . isEmpty ( ) ) || ! MirakelCommonPreferences . useNotifications ( ) ) { de.azapps.mirakel.services.NotificationManager . cancel ( DefinitionsHelper . NOTIF_DEFAULT ) ; this . boolean = false ; } else { this . boolean = true ; } } 
private static void void ( final de.azapps.mirakel.services.NotificationService de.azapps.mirakel.services.NotificationService ) { if ( de.azapps.mirakel.services.NotificationService . de.azapps.mirakel.services.NotificationService == null ) { de.azapps.mirakel.services.NotificationService . de.azapps.mirakel.services.NotificationService = de.azapps.mirakel.services.NotificationService ; } } 
public static void void ( final Context de.azapps.mirakel.services.Context ) { final Intent de.azapps.mirakel.services.Intent ; try { de.azapps.mirakel.services.Intent = new Intent ( de.azapps.mirakel.services.Context , java.lang.Class . java.lang.Class<?> ( DefinitionsHelper . MAINWIDGET_CLASS ) ) ; } catch ( final java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { Log . wtf ( java.lang.String , STRING , java.lang.ClassNotFoundException ) ; return; } de.azapps.mirakel.services.Intent . setAction ( STRING ) ; de.azapps.mirakel.services.Intent . putExtra ( AppWidgetManager . EXTRA_APPWIDGET_IDS , DefinitionsHelper . widgets ) ; de.azapps.mirakel.services.Context . sendBroadcast ( de.azapps.mirakel.services.Intent ) ; final Intent de.azapps.mirakel.services.Intent = new Intent ( ) ; de.azapps.mirakel.services.Intent . setAction ( STRING ) ; de.azapps.mirakel.services.Context . sendBroadcast ( de.azapps.mirakel.services.Intent ) ; if ( de.azapps.mirakel.services.NotificationService . de.azapps.mirakel.services.NotificationService == null ) { final Intent de.azapps.mirakel.services.Intent = new Intent ( de.azapps.mirakel.services.Context , de.azapps.mirakel.services.NotificationService .class ) ; de.azapps.mirakel.services.Context . startService ( de.azapps.mirakel.services.Intent ) ; } else { de.azapps.mirakel.services.NotificationService . de.azapps.mirakel.services.NotificationService . void ( ) ; } } 
@ java.lang.Override public de.azapps.mirakel.services.IBinder de.azapps.mirakel.services.IBinder ( final Intent de.azapps.mirakel.services.Intent ) { return null ; } 
private void void ( final Intent de.azapps.mirakel.services.Intent ) { if ( ( de.azapps.mirakel.services.Intent == null ) || ( de.azapps.mirakel.services.Intent . getAction ( ) == null ) ) { return; } final Optional < Task > de.azapps.mirakel.services.Optional<de.azapps.mirakel.services.Task> = TaskHelper . getTaskFromIntent ( de.azapps.mirakel.services.Intent ) ; if ( ! de.azapps.mirakel.services.Optional<de.azapps.mirakel.services.Task> . isPresent ( ) ) { return; } final Task de.azapps.mirakel.services.Task = Task . get ( de.azapps.mirakel.services.Optional<de.azapps.mirakel.services.Task> . get ( ) . getId ( ) ) . orNull ( ) ; if ( de.azapps.mirakel.services.Task == null ) { return; } switch ( de.azapps.mirakel.services.Intent . getAction ( ) ) { case java.lang.String : de.azapps.mirakel.services.Task . setDone ( true ) ; de.azapps.mirakel.services.Task . save ( ) ; Toast . makeText ( this , getString ( R . string . reminder_notification_done_confirm ) , Toast . LENGTH_LONG ) . show ( ) ; break; case java.lang.String : final DateTime de.azapps.mirakel.services.DateTime = new DateTime ( ) ; final int int = MirakelCommonPreferences . getAlarmLater ( ) ; de.azapps.mirakel.services.DateTime . plusMinutes ( int ) ; de.azapps.mirakel.services.Task . setReminder ( Optional . of ( de.azapps.mirakel.services.DateTime ) ) ; de.azapps.mirakel.services.Task . save ( ) ; Toast . makeText ( this , getString ( R . string . reminder_notification_later_confirm , int ) , Toast . LENGTH_LONG ) . show ( ) ; break; } stopSelf ( ) ; } 
@ java.lang.Override public int int ( final Intent de.azapps.mirakel.services.Intent , final int int , final int int ) { void ( de.azapps.mirakel.services.Intent ) ; return START_STICKY ; } 
public void ( ) { int = NUMBER ; } 
public void ( java.lang.String java.lang.String ) { try { void ( java.lang.String ) ; } catch ( java.text.ParseException java.text.ParseException ) { throw new java.lang.IllegalArgumentException ( STRING , java.text.ParseException ) ; } } 
public void void ( java.lang.String java.lang.String ) throws java.text.ParseException { int = NUMBER ; int = NUMBER ; int = NUMBER ; int = NUMBER ; int = NUMBER ; int = NUMBER ; int int = java.lang.String . int ( ) ; int int = NUMBER ; char char ; if ( int < NUMBER ) { return; } char = java.lang.String . char ( NUMBER ) ; if ( char == '-' ) { int = - NUMBER ; int ++ ; } else if ( char == '+' ) { int ++ ; } if ( int < int ) { return; } char = java.lang.String . char ( int ) ; if ( char != 'P' ) { throw new java.text.ParseException ( STRING + java.lang.String + STRING + int , int ) ; } int ++ ; int int = NUMBER ; for (; int < int ; int ++ ) { char = java.lang.String . char ( int ) ; if ( char >= '0' && char <= '9' ) { int *= NUMBER ; int += ( ( int ) ( char - '0' ) ) ; } else if ( char == 'W' ) { int = int ; int = NUMBER ; } else if ( char == 'H' ) { int = int ; int = NUMBER ; } else if ( char == 'M' ) { int = int ; int = NUMBER ; } else if ( char == 'S' ) { int = int ; int = NUMBER ; } else if ( char == 'D' ) { int = int ; int = NUMBER ; } else if ( char == 'T' ) {            } else { throw new java.text.ParseException ( STRING + java.lang.String + STRING + char + STRING + int , int ) ; } } } 
public void void ( java.util.Calendar java.util.Calendar ) { java.util.Calendar . void ( java.util.Calendar . int , int * int * NUMBER ) ; java.util.Calendar . void ( java.util.Calendar . int , int * int ) ; java.util.Calendar . void ( java.util.Calendar . int , int * int ) ; java.util.Calendar . void ( java.util.Calendar . int , int * int ) ; java.util.Calendar . void ( java.util.Calendar . int , int * int ) ; } 
public long long ( long long ) { return long + long ( ) ; } 
public org.dmfs.provider.tasks.Time org.dmfs.provider.tasks.Time ( Time org.dmfs.provider.tasks.Time ) { if ( dt . allDay && ( int != NUMBER || int != NUMBER || int != NUMBER ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } Time org.dmfs.provider.tasks.Time = new Time ( Time . TIMEZONE_UTC ) ; org.dmfs.provider.tasks.Time . set ( org.dmfs.provider.tasks.Time . toMillis ( false ) ) ; java.util.TimeZone java.util.TimeZone = java.util.TimeZone . java.util.TimeZone ( dt . timezone ) ; long long = java.util.TimeZone . int ( org.dmfs.provider.tasks.Time . toMillis ( false ) ) ; utcTime . monthDay += int * ( int * NUMBER + int ) ; utcTime . hour += int * int ; utcTime . minute += int * int ; utcTime . second += int * int ; org.dmfs.provider.tasks.Time . normalize ( false ) ; long long = java.util.TimeZone . int ( org.dmfs.provider.tasks.Time . toMillis ( true ) ) ; org.dmfs.provider.tasks.Time . switchTimezone ( dt . timezone ) ; if ( int != NUMBER ) { org.dmfs.provider.tasks.Time . set ( org.dmfs.provider.tasks.Time . toMillis ( false ) - ( long - long ) ) ; } return org.dmfs.provider.tasks.Time ; } 
public long long ( ) { long long = NUMBER * int ; return long * ( ( NUMBER * NUMBER * NUMBER * NUMBER * int ) + ( NUMBER * NUMBER * NUMBER * int ) + ( NUMBER * NUMBER * int ) + ( NUMBER * int ) + int ) ; } 
public long long ( Time org.dmfs.provider.tasks.Time ) { Time org.dmfs.provider.tasks.Time = void ( org.dmfs.provider.tasks.Time ) ; return org.dmfs.provider.tasks.Time . toMillis ( false ) - org.dmfs.provider.tasks.Time . toMillis ( false ) ; } 
public void void ( long long ) { final long long = java.lang.Math . long ( long ) / NUMBER ; final long long = long / NUMBER ; final long long = long / NUMBER ; final long long = long / NUMBER ; final long long = long / NUMBER ; this . int = long < NUMBER ? - NUMBER : NUMBER ; this . int = ( int ) ( long % NUMBER ) ; this . int = ( int ) ( long % NUMBER ) ; this . int = ( int ) ( long % NUMBER ) ; if ( this . int == NUMBER && this . int == NUMBER && this . int == NUMBER && long % NUMBER == NUMBER ) { this . int = ( int ) long ; this . int = NUMBER ; } else { this . int = ( int ) long ; this . int = NUMBER ; } } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( NUMBER ) ; if ( int < NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( int == NUMBER && int == NUMBER && int == NUMBER && int == NUMBER && int != NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( int ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { if ( int > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( int ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( int != NUMBER || int != NUMBER || int != NUMBER || int == NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; if ( int > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( int ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( int > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( int ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( int > NUMBER || ( int == NUMBER && int == NUMBER && int == NUMBER ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( int ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } } } return java.lang.StringBuilder . java.lang.String ( ) ; } 
@ java.lang.Override public org.dmfs.provider.tasks.handler.ContentValues org.dmfs.provider.tasks.handler.ContentValues ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , boolean boolean , ContentValues org.dmfs.provider.tasks.handler.ContentValues , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { if ( org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Property . Alarm . PROPERTY_ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Property . Alarm . MINUTES_BEFORE ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Property . Alarm . REFERENCE ) || org.dmfs.provider.tasks.handler.ContentValues . getAsInteger ( Property . Alarm . REFERENCE ) < NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Property . Alarm . ALARM_TYPE ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } return org.dmfs.provider.tasks.handler.ContentValues ; } 
@ java.lang.Override public org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , ContentValues org.dmfs.provider.tasks.handler.ContentValues , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { org.dmfs.provider.tasks.handler.ContentValues = org.dmfs.provider.tasks.handler.ContentValues ( org.dmfs.provider.tasks.handler.ContentResolver , true , org.dmfs.provider.tasks.handler.ContentValues , boolean , org.dmfs.provider.tasks.handler.Context ) ; return super. insert ( org.dmfs.provider.tasks.handler.ContentResolver , org.dmfs.provider.tasks.handler.ContentValues , boolean , org.dmfs.provider.tasks.handler.Context ) ; } 
@ java.lang.Override public int int ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , ContentValues org.dmfs.provider.tasks.handler.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { org.dmfs.provider.tasks.handler.ContentValues = org.dmfs.provider.tasks.handler.ContentValues ( org.dmfs.provider.tasks.handler.ContentResolver , false , org.dmfs.provider.tasks.handler.ContentValues , boolean , org.dmfs.provider.tasks.handler.Context ) ; return super. update ( org.dmfs.provider.tasks.handler.ContentResolver , org.dmfs.provider.tasks.handler.ContentValues , java.lang.String , java.lang.String[] , boolean , org.dmfs.provider.tasks.handler.Context ) ; } 
public static org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( ) { return MirakelInternalContentProvider . CALDAV_LISTS_URI ; } 
public static org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( boolean boolean ) { if ( boolean ) { return MirakelInternalContentProvider . CALDAV_TASKS_PROPERTY_URI ; } else { return MirakelInternalContentProvider . CALDAV_TASKS_URI ; } } 
public static org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( boolean boolean ) { if ( boolean ) { return MirakelInternalContentProvider . CALDAV_INSTANCE_PROPERTIES_URI ; } else { return MirakelInternalContentProvider . CALDAV_INSTANCES_URI ; } } 
public static org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( ) { return MirakelInternalContentProvider . CALDAV_PROPERTIES_URI ; } 
public static org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( ) { return MirakelInternalContentProvider . CALDAV_CATEGORIES_URI ; } 
public static org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( ) { return MirakelInternalContentProvider . CALDAV_ALARMS_URI ; } 
public static org.dmfs.provider.tasks.handler.ContentResolver org.dmfs.provider.tasks.handler.ContentResolver ( Context org.dmfs.provider.tasks.handler.Context ) { return org.dmfs.provider.tasks.handler.Context . getContentResolver ( ) ; } 
@ java.lang.Override public org.dmfs.provider.tasks.handler.ContentValues org.dmfs.provider.tasks.handler.ContentValues ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , boolean boolean , ContentValues org.dmfs.provider.tasks.handler.ContentValues , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { if ( ! org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Category . CATEGORY_ID ) && ! org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Category . CATEGORY_NAME ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( ! org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Properties . TASK_ID ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } java.lang.String [] java.lang.String[] = { org.dmfs.provider.tasks.handler.ContentValues . getAsString ( Properties . TASK_ID ) } ; java.lang.String [] java.lang.String[] = { Tasks . ACCOUNT_NAME , Tasks . ACCOUNT_TYPE } ; java.lang.String java.lang.String = Tasks . _ID + STRING ; Cursor org.dmfs.provider.tasks.handler.Cursor = org.dmfs.provider.tasks.handler.ContentResolver . query ( CaldavDatabaseHelper . getTasksUri ( false ) , java.lang.String[] , java.lang.String , java.lang.String[] , null ) ; java.lang.String java.lang.String = null ; java.lang.String java.lang.String = null ; try { org.dmfs.provider.tasks.handler.Cursor . moveToNext ( ) ; java.lang.String = org.dmfs.provider.tasks.handler.Cursor . getString ( NUMBER ) ; java.lang.String = org.dmfs.provider.tasks.handler.Cursor . getString ( NUMBER ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Categories . ACCOUNT_NAME , java.lang.String ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Categories . ACCOUNT_TYPE , java.lang.String ) ; } finally { if ( org.dmfs.provider.tasks.handler.Cursor != null ) { org.dmfs.provider.tasks.handler.Cursor . close ( ) ; } } if ( java.lang.String != null && java.lang.String != null ) { java.lang.String [] java.lang.String[] ; Cursor org.dmfs.provider.tasks.handler.Cursor ; if ( org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Categories . _ID ) ) { java.lang.String[] = new java.lang.String [] { org.dmfs.provider.tasks.handler.ContentValues . getAsString ( Category . CATEGORY_ID ) , java.lang.String , java.lang.String } ; org.dmfs.provider.tasks.handler.Cursor = org.dmfs.provider.tasks.handler.ContentResolver . query ( CaldavDatabaseHelper . getCategoriesUri ( ) , java.lang.String[] , java.lang.String , java.lang.String[] , null ) ; } else { java.lang.String[] = new java.lang.String [] { org.dmfs.provider.tasks.handler.ContentValues . getAsString ( Category . CATEGORY_NAME ) , java.lang.String , java.lang.String } ; org.dmfs.provider.tasks.handler.Cursor = org.dmfs.provider.tasks.handler.ContentResolver . query ( CaldavDatabaseHelper . getCategoriesUri ( ) , java.lang.String[] , java.lang.String , java.lang.String[] , null ) ; } try { if ( org.dmfs.provider.tasks.handler.Cursor != null && org.dmfs.provider.tasks.handler.Cursor . getCount ( ) == NUMBER ) { org.dmfs.provider.tasks.handler.Cursor . moveToNext ( ) ; java.lang.Long java.lang.Long = org.dmfs.provider.tasks.handler.Cursor . getLong ( NUMBER ) ; java.lang.String java.lang.String = org.dmfs.provider.tasks.handler.Cursor . getString ( NUMBER ) ; int int = org.dmfs.provider.tasks.handler.Cursor . getInt ( NUMBER ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Category . CATEGORY_ID , java.lang.Long ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Category . CATEGORY_NAME , java.lang.String ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Category . CATEGORY_COLOR , int ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( java.lang.String , false ) ; } else { org.dmfs.provider.tasks.handler.ContentValues . put ( java.lang.String , true ) ; if ( ! org.dmfs.provider.tasks.handler.ContentValues . containsKey ( Category . CATEGORY_COLOR ) ) { if ( org.dmfs.provider.tasks.handler.Cursor != null ) { org.dmfs.provider.tasks.handler.Cursor . close ( ) ; } org.dmfs.provider.tasks.handler.Cursor = org.dmfs.provider.tasks.handler.ContentResolver . query ( Tag . URI , new java.lang.String [] { STRING } , null , null , null ) ; if ( org.dmfs.provider.tasks.handler.Cursor . moveToFirst ( ) ) { org.dmfs.provider.tasks.handler.ContentValues . put ( Category . CATEGORY_COLOR , Tag . getNextColor ( org.dmfs.provider.tasks.handler.Cursor . getLong ( NUMBER ) , org.dmfs.provider.tasks.handler.Context ) ) ; } } } } finally { if ( org.dmfs.provider.tasks.handler.Cursor != null ) { org.dmfs.provider.tasks.handler.Cursor . close ( ) ; } } } return org.dmfs.provider.tasks.handler.ContentValues ; } 
@ java.lang.Override public org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , ContentValues org.dmfs.provider.tasks.handler.ContentValues , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { org.dmfs.provider.tasks.handler.ContentValues = org.dmfs.provider.tasks.handler.ContentValues ( org.dmfs.provider.tasks.handler.ContentResolver , true , org.dmfs.provider.tasks.handler.ContentValues , boolean , org.dmfs.provider.tasks.handler.Context ) ; org.dmfs.provider.tasks.handler.ContentValues = org.dmfs.provider.tasks.handler.ContentValues ( org.dmfs.provider.tasks.handler.ContentResolver , org.dmfs.provider.tasks.handler.ContentValues ) ; org.dmfs.provider.tasks.handler.Uri ( org.dmfs.provider.tasks.handler.ContentResolver , org.dmfs.provider.tasks.handler.ContentValues . getAsString ( Category . TASK_ID ) , org.dmfs.provider.tasks.handler.ContentValues . getAsString ( Category . CATEGORY_ID ) ) ; return super. insert ( org.dmfs.provider.tasks.handler.ContentResolver , org.dmfs.provider.tasks.handler.ContentValues , boolean , org.dmfs.provider.tasks.handler.Context ) ; } 
@ java.lang.Override public int int ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , ContentValues org.dmfs.provider.tasks.handler.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { super. update ( org.dmfs.provider.tasks.handler.ContentResolver , org.dmfs.provider.tasks.handler.ContentValues , java.lang.String , java.lang.String[] , boolean , org.dmfs.provider.tasks.handler.Context ) ; org.dmfs.provider.tasks.handler.ContentValues = org.dmfs.provider.tasks.handler.ContentValues ( org.dmfs.provider.tasks.handler.ContentResolver , true , org.dmfs.provider.tasks.handler.ContentValues , boolean , org.dmfs.provider.tasks.handler.Context ) ; org.dmfs.provider.tasks.handler.ContentValues = org.dmfs.provider.tasks.handler.ContentValues ( org.dmfs.provider.tasks.handler.ContentResolver , org.dmfs.provider.tasks.handler.ContentValues ) ; return super. update ( org.dmfs.provider.tasks.handler.ContentResolver , org.dmfs.provider.tasks.handler.ContentValues , java.lang.String , java.lang.String[] , boolean , org.dmfs.provider.tasks.handler.Context ) ; } 
private org.dmfs.provider.tasks.handler.ContentValues org.dmfs.provider.tasks.handler.ContentValues ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , ContentValues org.dmfs.provider.tasks.handler.ContentValues ) { if ( org.dmfs.provider.tasks.handler.ContentValues . getAsBoolean ( java.lang.String ) ) { ContentValues org.dmfs.provider.tasks.handler.ContentValues = new ContentValues ( ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Categories . ACCOUNT_NAME , org.dmfs.provider.tasks.handler.ContentValues . getAsString ( Categories . ACCOUNT_NAME ) ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Categories . ACCOUNT_TYPE , org.dmfs.provider.tasks.handler.ContentValues . getAsString ( Categories . ACCOUNT_TYPE ) ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Categories . NAME , org.dmfs.provider.tasks.handler.ContentValues . getAsString ( Category . CATEGORY_NAME ) ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Categories . COLOR , org.dmfs.provider.tasks.handler.ContentValues . getAsInteger ( Category . CATEGORY_COLOR ) ) ; Uri org.dmfs.provider.tasks.handler.Uri = org.dmfs.provider.tasks.handler.ContentResolver . insert ( CaldavDatabaseHelper . getCategoriesUri ( ) , org.dmfs.provider.tasks.handler.ContentValues ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( Category . CATEGORY_ID , MirakelContentProvider . getId ( org.dmfs.provider.tasks.handler.Uri ) ) ; } org.dmfs.provider.tasks.handler.ContentValues . remove ( java.lang.String ) ; org.dmfs.provider.tasks.handler.ContentValues . remove ( Categories . ACCOUNT_NAME ) ; org.dmfs.provider.tasks.handler.ContentValues . remove ( Categories . ACCOUNT_TYPE ) ; return org.dmfs.provider.tasks.handler.ContentValues ; } 
private org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , java.lang.String java.lang.String , java.lang.String java.lang.String ) { ContentValues org.dmfs.provider.tasks.handler.ContentValues = new ContentValues ( ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( STRING , java.lang.String ) ; org.dmfs.provider.tasks.handler.ContentValues . put ( STRING , java.lang.String ) ; return org.dmfs.provider.tasks.handler.ContentResolver . insert ( MirakelInternalContentProvider . TAG_CONNECTION_URI , org.dmfs.provider.tasks.handler.ContentValues ) ; } 
@ java.lang.Override public int int ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean ) { try { return org.dmfs.provider.tasks.handler.ContentResolver . delete ( MirakelInternalContentProvider . TAG_CONNECTION_URI , java.lang.String . java.lang.String ( STRING , STRING ) , java.lang.String[] ) ; } catch ( java.lang.Exception java.lang.Exception ) { Log . wtf ( java.lang.String , STRING , java.lang.Exception ) ; } return NUMBER ; } 
@ java.lang.Override public org.dmfs.provider.tasks.handler.ContentValues org.dmfs.provider.tasks.handler.ContentValues ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , boolean boolean , ContentValues org.dmfs.provider.tasks.handler.ContentValues , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { return org.dmfs.provider.tasks.handler.ContentValues ; } 
public static org.dmfs.provider.tasks.handler.PropertyHandler org.dmfs.provider.tasks.handler.PropertyHandler ( java.lang.String java.lang.String ) { if ( Category . CONTENT_ITEM_TYPE . equals ( java.lang.String ) ) { return new CategoryHandler ( ) ; } if ( Alarm . CONTENT_ITEM_TYPE . equals ( java.lang.String ) ) { return new AlarmHandler ( ) ; } return new DefaultPropertyHandler ( ) ; } 
public abstract org.dmfs.provider.tasks.handler.ContentValues org.dmfs.provider.tasks.handler.ContentValues ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , boolean boolean , ContentValues org.dmfs.provider.tasks.handler.ContentValues , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ); 
public org.dmfs.provider.tasks.handler.Uri org.dmfs.provider.tasks.handler.Uri ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , ContentValues org.dmfs.provider.tasks.handler.ContentValues , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { return org.dmfs.provider.tasks.handler.ContentResolver . insert ( CaldavDatabaseHelper . getPropertiesUri ( ) , org.dmfs.provider.tasks.handler.ContentValues ) ; } 
public int int ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , ContentValues org.dmfs.provider.tasks.handler.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean , final Context org.dmfs.provider.tasks.handler.Context ) { return org.dmfs.provider.tasks.handler.ContentResolver . update ( CaldavDatabaseHelper . getPropertiesUri ( ) , org.dmfs.provider.tasks.handler.ContentValues , java.lang.String , java.lang.String[] ) ; } 
public int int ( ContentResolver org.dmfs.provider.tasks.handler.ContentResolver , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean ) { return org.dmfs.provider.tasks.handler.ContentResolver . delete ( CaldavDatabaseHelper . getPropertiesUri ( ) , java.lang.String , java.lang.String[] ) ; } 
@ java.lang.Override public boolean boolean ( ) { Context org.dmfs.provider.tasks.Context = getContext ( ) ; org.dmfs.provider.tasks.SQLiteOpenHelper = org.dmfs.provider.tasks.SQLiteOpenHelper ( org.dmfs.provider.tasks.Context ) ; java.util.Set<org.dmfs.provider.tasks.Uri> = new java.util.HashSet<org.dmfs.provider.tasks.Uri> < Uri > ( ) ; return true ; } 
public abstract org.dmfs.provider.tasks.SQLiteOpenHelper org.dmfs.provider.tasks.SQLiteOpenHelper ( Context org.dmfs.provider.tasks.Context ); 
public abstract org.dmfs.provider.tasks.Uri org.dmfs.provider.tasks.Uri ( Uri org.dmfs.provider.tasks.Uri , ContentValues org.dmfs.provider.tasks.ContentValues , boolean boolean ); 
public abstract int int ( Uri org.dmfs.provider.tasks.Uri , ContentValues org.dmfs.provider.tasks.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean ); 
public abstract int int ( Uri org.dmfs.provider.tasks.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , boolean boolean ); 
protected void void ( Uri org.dmfs.provider.tasks.Uri ) { synchronized ( java.util.Set<org.dmfs.provider.tasks.Uri> ) { java.util.Set<org.dmfs.provider.tasks.Uri> . add ( org.dmfs.provider.tasks.Uri ) ; } } 
public boolean boolean ( Uri org.dmfs.provider.tasks.Uri ) { return false ; } 
public org.dmfs.provider.tasks.SQLiteOpenHelper org.dmfs.provider.tasks.SQLiteOpenHelper ( ) { return org.dmfs.provider.tasks.SQLiteOpenHelper ; } 
private boolean boolean ( ) { return java.lang.ThreadLocal<java.lang.Boolean> . java.lang.Boolean ( ) != null && java.lang.ThreadLocal<java.lang.Boolean> . java.lang.Boolean ( ) ; } 
@ java.lang.Override public org.dmfs.provider.tasks.Uri org.dmfs.provider.tasks.Uri ( Uri org.dmfs.provider.tasks.Uri , ContentValues org.dmfs.provider.tasks.ContentValues ) { Uri org.dmfs.provider.tasks.Uri = null ; boolean boolean = boolean ( org.dmfs.provider.tasks.Uri ) ; boolean boolean = boolean ( ) ; if ( ! boolean ) { org.dmfs.provider.tasks.SQLiteDatabase = org.dmfs.provider.tasks.SQLiteOpenHelper . getWritableDatabase ( ) ; org.dmfs.provider.tasks.SQLiteDatabase . beginTransaction ( ) ; try { org.dmfs.provider.tasks.Uri = org.dmfs.provider.tasks.Uri ( org.dmfs.provider.tasks.Uri , org.dmfs.provider.tasks.ContentValues , boolean ) ; org.dmfs.provider.tasks.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { org.dmfs.provider.tasks.SQLiteDatabase . endTransaction ( ) ; } void ( boolean ) ; } else { org.dmfs.provider.tasks.Uri = org.dmfs.provider.tasks.Uri ( org.dmfs.provider.tasks.Uri , org.dmfs.provider.tasks.ContentValues , boolean ) ; } return org.dmfs.provider.tasks.Uri ; } 
@ java.lang.Override public int int ( Uri org.dmfs.provider.tasks.Uri , ContentValues [] org.dmfs.provider.tasks.ContentValues[] ) { int int = values . length ; boolean boolean = boolean ( org.dmfs.provider.tasks.Uri ) ; org.dmfs.provider.tasks.SQLiteDatabase = org.dmfs.provider.tasks.SQLiteOpenHelper . getWritableDatabase ( ) ; org.dmfs.provider.tasks.SQLiteDatabase . beginTransaction ( ) ; try { for ( int int = NUMBER ; int < int ; int ++ ) { Uri org.dmfs.provider.tasks.Uri = org.dmfs.provider.tasks.Uri ( org.dmfs.provider.tasks.Uri , org.dmfs.provider.tasks.ContentValues[] [ int ] , boolean ) ; org.dmfs.provider.tasks.SQLiteDatabase . yieldIfContendedSafely ( ) ; } org.dmfs.provider.tasks.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { org.dmfs.provider.tasks.SQLiteDatabase . endTransaction ( ) ; } void ( boolean ) ; return int ; } 
@ java.lang.Override public int int ( Uri org.dmfs.provider.tasks.Uri , ContentValues org.dmfs.provider.tasks.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { int int = NUMBER ; boolean boolean = boolean ( org.dmfs.provider.tasks.Uri ) ; boolean boolean = boolean ( ) ; if ( ! boolean ) { org.dmfs.provider.tasks.SQLiteDatabase = org.dmfs.provider.tasks.SQLiteOpenHelper . getWritableDatabase ( ) ; org.dmfs.provider.tasks.SQLiteDatabase . beginTransaction ( ) ; try { int = int ( org.dmfs.provider.tasks.Uri , org.dmfs.provider.tasks.ContentValues , java.lang.String , java.lang.String[] , boolean ) ; org.dmfs.provider.tasks.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { org.dmfs.provider.tasks.SQLiteDatabase . endTransaction ( ) ; } void ( boolean ) ; } else { int = int ( org.dmfs.provider.tasks.Uri , org.dmfs.provider.tasks.ContentValues , java.lang.String , java.lang.String[] , boolean ) ; } return int ; } 
@ java.lang.Override public int int ( Uri org.dmfs.provider.tasks.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { int int = NUMBER ; boolean boolean = boolean ( org.dmfs.provider.tasks.Uri ) ; boolean boolean = boolean ( ) ; if ( ! boolean ) { org.dmfs.provider.tasks.SQLiteDatabase = org.dmfs.provider.tasks.SQLiteOpenHelper . getWritableDatabase ( ) ; org.dmfs.provider.tasks.SQLiteDatabase . beginTransaction ( ) ; try { int = int ( org.dmfs.provider.tasks.Uri , java.lang.String , java.lang.String[] , boolean ) ; org.dmfs.provider.tasks.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { org.dmfs.provider.tasks.SQLiteDatabase . endTransaction ( ) ; } void ( boolean ) ; } else { int = int ( org.dmfs.provider.tasks.Uri , java.lang.String , java.lang.String[] , boolean ) ; } return int ; } 
@ java.lang.Override public org.dmfs.provider.tasks.ContentProviderResult [] org.dmfs.provider.tasks.ContentProviderResult[] ( java.util.ArrayList<org.dmfs.provider.tasks.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<org.dmfs.provider.tasks.ContentProviderOperation> ) throws org.dmfs.provider.tasks.OperationApplicationException { int int = NUMBER ; int int = NUMBER ; boolean boolean = false ; org.dmfs.provider.tasks.SQLiteDatabase = org.dmfs.provider.tasks.SQLiteOpenHelper . getWritableDatabase ( ) ; org.dmfs.provider.tasks.SQLiteDatabase . beginTransaction ( ) ; try { java.lang.ThreadLocal<java.lang.Boolean> . void ( true ) ; final int int = java.util.ArrayList<org.dmfs.provider.tasks.ContentProviderOperation> . size ( ) ; final ContentProviderResult [] org.dmfs.provider.tasks.ContentProviderResult[] = new ContentProviderResult [ int ] ; for ( int int = NUMBER ; int < int ; int ++ ) { if ( ++ int >= int ) { throw new OperationApplicationException ( STRING + STRING + int , int ) ; } final ContentProviderOperation org.dmfs.provider.tasks.ContentProviderOperation = java.util.ArrayList<org.dmfs.provider.tasks.ContentProviderOperation> . get ( int ) ; if ( ! boolean && boolean ( org.dmfs.provider.tasks.ContentProviderOperation . getUri ( ) ) ) { boolean = true ; } if ( int > NUMBER && org.dmfs.provider.tasks.ContentProviderOperation . isYieldAllowed ( ) ) { int = NUMBER ; if ( org.dmfs.provider.tasks.SQLiteDatabase . yieldIfContendedSafely ( int ) ) { int ++ ; } } org.dmfs.provider.tasks.ContentProviderResult[] [ int ] = org.dmfs.provider.tasks.ContentProviderOperation . apply ( this , org.dmfs.provider.tasks.ContentProviderResult[] , int ) ; } org.dmfs.provider.tasks.SQLiteDatabase . setTransactionSuccessful ( ) ; return org.dmfs.provider.tasks.ContentProviderResult[] ; } finally { java.lang.ThreadLocal<java.lang.Boolean> . void ( false ) ; org.dmfs.provider.tasks.SQLiteDatabase . endTransaction ( ) ; void ( boolean ) ; } } 
protected void void ( boolean boolean ) { java.util.Set<org.dmfs.provider.tasks.Uri> < Uri > java.util.Set<org.dmfs.provider.tasks.Uri> ; synchronized ( java.util.Set<org.dmfs.provider.tasks.Uri> ) { java.util.Set<org.dmfs.provider.tasks.Uri> = new java.util.HashSet<org.dmfs.provider.tasks.Uri> < Uri > ( java.util.Set<org.dmfs.provider.tasks.Uri> ) ; java.util.Set<org.dmfs.provider.tasks.Uri> . clear ( ) ; } ContentResolver org.dmfs.provider.tasks.ContentResolver = getContext ( ) . getContentResolver ( ) ; for ( Uri org.dmfs.provider.tasks.Uri : java.util.Set<org.dmfs.provider.tasks.Uri> ) { boolean boolean = ! boolean && boolean ( org.dmfs.provider.tasks.Uri ) ; org.dmfs.provider.tasks.ContentResolver . notifyChange ( org.dmfs.provider.tasks.Uri , null , boolean ) ; } } 
protected boolean boolean ( Uri org.dmfs.provider.tasks.Uri ) { return false ; } 
private void ( ) {    } 
public static void void ( Context org.dmfs.provider.tasks.Context ) { Intent org.dmfs.provider.tasks.Intent = new Intent ( Intent . ACTION_PROVIDER_CHANGED , TaskContract . CONTENT_URI ) ; org.dmfs.provider.tasks.Context . sendBroadcast ( org.dmfs.provider.tasks.Intent ) ; } 
public static void void ( Context org.dmfs.provider.tasks.Context ) { AccountManager org.dmfs.provider.tasks.AccountManager = AccountManager . get ( org.dmfs.provider.tasks.Context ) ; Account [] org.dmfs.provider.tasks.Account[] = org.dmfs.provider.tasks.AccountManager . getAccounts ( ) ; void ( org.dmfs.provider.tasks.Context , org.dmfs.provider.tasks.Context . getContentResolver ( ) , org.dmfs.provider.tasks.Account[] ) ; } 
public static void void ( Context org.dmfs.provider.tasks.Context , ContentResolver org.dmfs.provider.tasks.ContentResolver , Account [] org.dmfs.provider.tasks.Account[] ) { java.util.List<org.dmfs.provider.tasks.Account> < Account > java.util.List<org.dmfs.provider.tasks.Account> = java.util.Arrays . java.util.List ( org.dmfs.provider.tasks.Account[] ) ; try { Cursor org.dmfs.provider.tasks.Cursor = org.dmfs.provider.tasks.ContentResolver . query ( CaldavDatabaseHelper . getListsUri ( ) , new java.lang.String [] { TaskListColumns . _ID , TaskListSyncColumns . ACCOUNT_NAME , TaskListSyncColumns . ACCOUNT_TYPE } , null , null , null ) ; java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> < java.lang.Long > ( ) ; try { while ( org.dmfs.provider.tasks.Cursor . moveToNext ( ) ) { java.lang.String java.lang.String = org.dmfs.provider.tasks.Cursor . getString ( NUMBER ) ; if ( ! TaskContract . LOCAL_ACCOUNT . equals ( java.lang.String ) ) { Account org.dmfs.provider.tasks.Account = new Account ( org.dmfs.provider.tasks.Cursor . getString ( NUMBER ) , java.lang.String ) ; if ( ! java.util.List<org.dmfs.provider.tasks.Account> . contains ( org.dmfs.provider.tasks.Account ) ) { java.util.List<java.lang.Long> . boolean ( org.dmfs.provider.tasks.Cursor . getLong ( NUMBER ) ) ; } } } } finally { org.dmfs.provider.tasks.Cursor . close ( ) ; } if ( java.util.List<java.lang.Long> . int ( ) == NUMBER ) { return; } for ( java.lang.Long java.lang.Long : java.util.List<java.lang.Long> ) { if ( java.lang.Long != null ) { org.dmfs.provider.tasks.ContentResolver . delete ( CaldavDatabaseHelper . getListsUri ( ) , TaskListColumns . _ID + STRING + java.lang.Long , null ) ; } } } finally { } ContentResolver org.dmfs.provider.tasks.ContentResolver = org.dmfs.provider.tasks.Context . getContentResolver ( ) ; org.dmfs.provider.tasks.ContentResolver . notifyChange ( TaskLists . CONTENT_URI , null ) ; org.dmfs.provider.tasks.ContentResolver . notifyChange ( Tasks . CONTENT_URI , null ) ; org.dmfs.provider.tasks.ContentResolver . notifyChange ( Instances . CONTENT_URI , null ) ; org.dmfs.provider.tasks.Utils . void ( org.dmfs.provider.tasks.Context ) ; } 
public void ( Application de.azapps.mirakel.analytics.Application ) { super(); } 
public void ( Application de.azapps.mirakel.analytics.Application ) { if ( MirakelCommonPreferences . useAnalytics ( ) ) { de.azapps.mirakel.analytics.GoogleAnalytics = GoogleAnalytics . getInstance ( de.azapps.mirakel.analytics.Application ) ; de.azapps.mirakel.analytics.GoogleAnalytics . setLocalDispatchPeriod ( NUMBER ) ; de.azapps.mirakel.analytics.Tracker = de.azapps.mirakel.analytics.GoogleAnalytics . newTracker ( BuildConfig . TRACKER_ID ) ; de.azapps.mirakel.analytics.Tracker . enableExceptionReporting ( false ) ; de.azapps.mirakel.analytics.Tracker . enableAdvertisingIdCollection ( true ) ; de.azapps.mirakel.analytics.Tracker . enableAutoActivityTracking ( false ) ; } } 
@ java.lang.Override public void void ( @ NonNull final CATEGORY de.azapps.mirakel.analytics.CATEGORY , @ NonNull final java.lang.String java.lang.String , @ Nullable final java.lang.String java.lang.String , @ Nullable final java.lang.Long java.lang.Long ) { if ( de.azapps.mirakel.analytics.Tracker != null ) { HitBuilders . HitBuilders HitBuilders.EventBuilder = new HitBuilders . HitBuilders ( ) ; HitBuilders.EventBuilder . setCategory ( de.azapps.mirakel.analytics.CATEGORY . toString ( ) ) . setAction ( java.lang.String ) ; if ( java.lang.String != null ) { HitBuilders.EventBuilder . setLabel ( java.lang.String ) ; } if ( java.lang.Long != null ) { HitBuilders.EventBuilder . setValue ( java.lang.Long ) ; } de.azapps.mirakel.analytics.Tracker . send ( HitBuilders.EventBuilder . build ( ) ) ; } } 
@ java.lang.Override public void void ( java.lang.Object java.lang.Object ) { if ( de.azapps.mirakel.analytics.Tracker != null ) { de.azapps.mirakel.analytics.Tracker . setScreenName ( java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) ) ; de.azapps.mirakel.analytics.Tracker . send ( new HitBuilders . HitBuilders ( ) . build ( ) ) ; } } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.analytics.Tracker = null ; } 
@ SuppressLint ( STRING ) @ java.lang.Override public void void ( ) { if ( BuildConfig . DEBUG ) { try { StrictMode . setThreadPolicy ( new StrictMode . StrictMode . StrictMode ( ) . detectAll ( ) . penaltyLog ( ) . build ( ) ) ; StrictMode . setVmPolicy ( new StrictMode . StrictMode . StrictMode ( ) . detectLeakedSqlLiteObjects ( ) . detectLeakedClosableObjects ( ) . penaltyLog ( ) . penaltyDeath ( ) . build ( ) ) ; } catch ( java.lang.NullPointerException java.lang.NullPointerException ) { } } super. onCreate ( ) ; void ( this ) ; AnalyticsWrapperBase . init ( new AnalyticsWrapper ( de.azapps.mirakel.Mirakel .this ) ) ; new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Looper . prepare ( ) ; ACRA . init ( de.azapps.mirakel.Mirakel .this ) ; ACRA . setLog ( new AcraLog ( ) ) ; NotificationService . updateServices ( de.azapps.mirakel.Mirakel .this ) ; DatabaseHelper . getDatabaseHelper ( de.azapps.mirakel.Mirakel .this ) ; ReminderAlarm . init ( de.azapps.mirakel.Mirakel .this ) ; if ( ! MirakelCommonPreferences . useNotifications ( ) && ( startService ( new Intent ( de.azapps.mirakel.Mirakel .this , NotificationService .class ) ) != null ) ) { stopService ( new Intent ( de.azapps.mirakel.Mirakel .this , NotificationService .class ) ) ; } if ( MirakelCommonPreferences . writeLogsToFile ( ) ) { Log . enableLoggingToFile ( ) ; } } } ) . void ( ) ; } 
@ java.lang.Override public void void ( ) { Looper . prepare ( ) ; ACRA . init ( de.azapps.mirakel.Mirakel .this ) ; ACRA . setLog ( new AcraLog ( ) ) ; NotificationService . updateServices ( de.azapps.mirakel.Mirakel .this ) ; DatabaseHelper . getDatabaseHelper ( de.azapps.mirakel.Mirakel .this ) ; ReminderAlarm . init ( de.azapps.mirakel.Mirakel .this ) ; if ( ! MirakelCommonPreferences . useNotifications ( ) && ( startService ( new Intent ( de.azapps.mirakel.Mirakel .this , NotificationService .class ) ) != null ) ) { stopService ( new Intent ( de.azapps.mirakel.Mirakel .this , NotificationService .class ) ) ; } if ( MirakelCommonPreferences . writeLogsToFile ( ) ) { Log . enableLoggingToFile ( ) ; } } 
@ java.lang.Override public void void ( ) { super. onTerminate ( ) ; ReminderAlarm . destroy ( ) ; Log . destroy ( ) ; } 
public static void void ( final Context de.azapps.mirakel.Context ) { JodaTimeAndroid . init ( de.azapps.mirakel.Context ) ; DefinitionsHelper . init ( de.azapps.mirakel.Context , BuildConfig . FLAVOR ) ; MirakelPreferences . init ( de.azapps.mirakel.Context ) ; ErrorReporter . init ( de.azapps.mirakel.Context ) ; ThemeManager . init ( de.azapps.mirakel.Context , R . style . MirakelBaseTheme , R . style . MirakelDialogTheme ) ; CursorGetter . init ( de.azapps.mirakel.Context ) ; ModelBase . init ( de.azapps.mirakel.Context ) ; Settings . init ( de.azapps.mirakel.Context ) ; final java.util.Locale java.util.Locale = Helpers . getLocale ( de.azapps.mirakel.Context ) ; java.util.Locale . void ( java.util.Locale ) ; BuildHelper . setPlaystore ( de.azapps.mirakel.Context . getResources ( ) . getBoolean ( R . bool . is_playstore ) ) ; final Configuration de.azapps.mirakel.Configuration = new Configuration ( ) ; config . locale = java.util.Locale ; de.azapps.mirakel.Context . getResources ( ) . updateConfiguration ( de.azapps.mirakel.Configuration , de.azapps.mirakel.Context . getResources ( ) . getDisplayMetrics ( ) ) ; } 
public void void ( ) 
public void void ( ) 
private void ( final View de.azapps.mirakel.new_ui.activities.View ) { ButterKnife . inject ( this , de.azapps.mirakel.new_ui.activities.View ) ; } 
private de.azapps.mirakel.new_ui.activities.TasksFragment de.azapps.mirakel.new_ui.activities.TasksFragment ( ) { return ( TasksFragment ) getSupportFragmentManager ( ) . findFragmentById ( R . id . tasks_fragment ) ; } 
private de.azapps.mirakel.new_ui.activities.ListsFragment de.azapps.mirakel.new_ui.activities.ListsFragment ( ) { return ( ListsFragment ) getSupportFragmentManager ( ) . findFragmentById ( R . id . lists_fragment ) ; } 
@ java.lang.Override protected void void ( final Bundle de.azapps.mirakel.new_ui.activities.Bundle ) { super. onCreate ( de.azapps.mirakel.new_ui.activities.Bundle ) ; setContentView ( R . layout . activity_mirakel ) ; ButterKnife . inject ( this ) ; void ( ) ; void ( getIntent ( ) ) ; if ( ( de.azapps.mirakel.new_ui.activities.TasksFragment ( ) != null ) && ( de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . getList ( ) != null ) ) { setSupportActionBar ( de.azapps.mirakel.new_ui.activities.Toolbar ) ; void ( ) ; } void ( ) ; if ( de.azapps.mirakel.new_ui.activities.Bundle != null ) { void ( de.azapps.mirakel.new_ui.activities.Bundle ) ; } } 
@ java.lang.Override protected java.util.Locale java.util.Locale ( ) { return Helpers . getLocale ( this ) ; } 
private void void ( ) { if ( ChangelogDialog . isUpdated ( this ) ) { ChangelogDialog . show ( this , DefinitionsHelper . APK_NAME ) ; } final ILoveFS de.azapps.mirakel.new_ui.activities.ILoveFS = new ILoveFS ( this , STRING , DefinitionsHelper . APK_NAME ) ; if ( de.azapps.mirakel.new_ui.activities.ILoveFS . isILFSDay ( ) ) { ilfs . donateListener = new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.activities.DialogInterface , final int int ) { final Intent de.azapps.mirakel.new_ui.activities.Intent = new Intent ( de.azapps.mirakel.new_ui.activities.MirakelActivity .this , SettingsActivity .class ) ; de.azapps.mirakel.new_ui.activities.Intent . putExtra ( SettingsActivity . SHOW_FRAGMENT , Settings . DONATE . ordinal ( ) ) ; startActivity ( de.azapps.mirakel.new_ui.activities.Intent ) ; } } ; de.azapps.mirakel.new_ui.activities.ILoveFS . show ( ) ; } } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.activities.DialogInterface , final int int ) { final Intent de.azapps.mirakel.new_ui.activities.Intent = new Intent ( de.azapps.mirakel.new_ui.activities.MirakelActivity .this , SettingsActivity .class ) ; de.azapps.mirakel.new_ui.activities.Intent . putExtra ( SettingsActivity . SHOW_FRAGMENT , Settings . DONATE . ordinal ( ) ) ; startActivity ( de.azapps.mirakel.new_ui.activities.Intent ) ; } 
@ java.lang.Override protected void void ( final Bundle de.azapps.mirakel.new_ui.activities.Bundle ) { super. onPostCreate ( de.azapps.mirakel.new_ui.activities.Bundle ) ; withOptional ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle> , new Procedure < ActionBarDrawerToggle > ( ) { @ java.lang.Override public void void ( final ActionBarDrawerToggle de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle ) { de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle . syncState ( ) ; } } ) ; } 
@ java.lang.Override public void void ( final ActionBarDrawerToggle de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle ) { de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle . syncState ( ) ; } 
@ java.lang.Override public void void ( final Configuration de.azapps.mirakel.new_ui.activities.Configuration ) { super. onConfigurationChanged ( de.azapps.mirakel.new_ui.activities.Configuration ) ; withOptional ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle> , new Procedure < ActionBarDrawerToggle > ( ) { @ java.lang.Override public void void ( final ActionBarDrawerToggle de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle ) { de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle . onConfigurationChanged ( de.azapps.mirakel.new_ui.activities.Configuration ) ; } } ) ; } 
@ java.lang.Override public void void ( final ActionBarDrawerToggle de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle ) { de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle . onConfigurationChanged ( de.azapps.mirakel.new_ui.activities.Configuration ) ; } 
@ java.lang.Override protected void void ( final Intent de.azapps.mirakel.new_ui.activities.Intent ) { super. onNewIntent ( de.azapps.mirakel.new_ui.activities.Intent ) ; void ( de.azapps.mirakel.new_ui.activities.Intent ) ; } 
@ java.lang.Override public boolean boolean ( final Menu de.azapps.mirakel.new_ui.activities.Menu ) { de.azapps.mirakel.new_ui.activities.Menu . clear ( ) ; final int int ; if ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.DrawerLayout> . isPresent ( ) ) { final boolean boolean = de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.DrawerLayout> . get ( ) . isDrawerOpen ( GravityCompat . START ) ; if ( boolean ) { getMenuInflater ( ) . inflate ( R . menu . lists_menu , de.azapps.mirakel.new_ui.activities.Menu ) ; int = NUMBER ; } else { getMenuInflater ( ) . inflate ( R . menu . tasks_menu , de.azapps.mirakel.new_ui.activities.Menu ) ; int = NUMBER ; } } else { getMenuInflater ( ) . inflate ( R . menu . tablet_menu , de.azapps.mirakel.new_ui.activities.Menu ) ; int = NUMBER ; } if ( ( de.azapps.mirakel.new_ui.activities.Menu . findItem ( R . id . menu_close_search ) != null ) && ( de.azapps.mirakel.new_ui.activities.Menu . findItem ( R . id . menu_search ) != null ) ) { boolean boolean = de.azapps.mirakel.new_ui.activities.TasksFragment ( ) != null && de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . getList ( ) instanceof SearchListMirakel ; de.azapps.mirakel.new_ui.activities.Menu . findItem ( R . id . menu_search ) . setVisible ( ! boolean ) ; de.azapps.mirakel.new_ui.activities.Menu . findItem ( R . id . menu_close_search ) . setVisible ( boolean ) ; } if ( ( de.azapps.mirakel.new_ui.activities.Menu . findItem ( R . id . menu_sync_now ) != null ) && ! AccountMirakel . hasTaskWarriorAccount ( ) ) { de.azapps.mirakel.new_ui.activities.Menu . findItem ( R . id . menu_sync_now ) . setVisible ( false ) ; } MenuHelper . showMenuIcons ( this , de.azapps.mirakel.new_ui.activities.Menu ) ; MenuHelper . colorizeMenuItems ( de.azapps.mirakel.new_ui.activities.Menu , ThemeManager . getColor ( R . attr . colorTextGrey ) , int ) ; MenuHelper . colorizeMenuItems ( de.azapps.mirakel.new_ui.activities.Menu , ThemeManager . getColor ( R . attr . colorTextWhite ) , NUMBER , int ) ; MenuHelper . setTextColor ( de.azapps.mirakel.new_ui.activities.Menu , ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final MenuItem de.azapps.mirakel.new_ui.activities.MenuItem ) { if ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle> . isPresent ( ) ) { if ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle> . get ( ) . onOptionsItemSelected ( de.azapps.mirakel.new_ui.activities.MenuItem ) ) { return true ; } } switch ( de.azapps.mirakel.new_ui.activities.MenuItem . getItemId ( ) ) { case R . id . action_settings : final Intent de.azapps.mirakel.new_ui.activities.Intent = new Intent ( this , SettingsActivity .class ) ; startActivity ( de.azapps.mirakel.new_ui.activities.Intent ) ; return true ; case R . id . action_create_list : de.azapps.mirakel.new_ui.activities.ListsFragment ( ) . editList ( ListMirakel . getStub ( ) ) ; return true ; case R . id . menu_share : SharingHelper . share ( this , de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . getList ( ) ) ; break; case R . id . menu_search : de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . handleShowSearch ( ) ; invalidateOptionsMenu ( ) ; break; case R . id . menu_close_search : de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . setList ( de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . getOldList ( ) ) ; invalidateOptionsMenu ( ) ; break; case R . id . menu_sort : ListMirakelInterface de.azapps.mirakel.new_ui.activities.ListMirakelInterface = de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . getList ( ) ; if ( de.azapps.mirakel.new_ui.activities.ListMirakelInterface instanceof ListMirakel ) { ListDialogHelpers . handleSortBy ( this , ( ListMirakel ) de.azapps.mirakel.new_ui.activities.ListMirakelInterface , new Helpers . Helpers ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . resetList ( ) ; } } , null ) ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } break; case R . id . menu_sync_now : Bundle de.azapps.mirakel.new_ui.activities.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.activities.Bundle . putBoolean ( ContentResolver . SYNC_EXTRAS_EXPEDITED , true ) ; de.azapps.mirakel.new_ui.activities.Bundle . putBoolean ( ContentResolver . SYNC_EXTRAS_FORCE , true ) ; de.azapps.mirakel.new_ui.activities.Bundle . putBoolean ( ContentResolver . SYNC_EXTRAS_MANUAL , true ) ; final java.util.List<de.azapps.mirakel.new_ui.activities.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.new_ui.activities.AccountMirakel> = new MirakelQueryBuilder ( this ) . and ( AccountMirakel . ENABLED , MirakelQueryBuilder . Operation . EQ , true ) . and ( AccountMirakel . TYPE , MirakelQueryBuilder . Operation . EQ , AccountMirakel . ACCOUNT_TYPES . TASKWARRIOR . toInt ( ) ) . getList ( AccountMirakel .class ) ; for ( final AccountMirakel de.azapps.mirakel.new_ui.activities.AccountMirakel : java.util.List<de.azapps.mirakel.new_ui.activities.AccountMirakel> ) { getContentResolver ( ) . requestSync ( de.azapps.mirakel.new_ui.activities.AccountMirakel . getAndroidAccount ( ) , DefinitionsHelper . AUTHORITY_INTERNAL , de.azapps.mirakel.new_ui.activities.Bundle ) ; } } return super. onOptionsItemSelected ( de.azapps.mirakel.new_ui.activities.MenuItem ) ; } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . resetList ( ) ; } 
private void void ( final ListMirakel de.azapps.mirakel.new_ui.activities.ListMirakel ) { final FragmentManager de.azapps.mirakel.new_ui.activities.FragmentManager = getFragmentManager ( ) ; final FragmentTransaction de.azapps.mirakel.new_ui.activities.FragmentTransaction = de.azapps.mirakel.new_ui.activities.FragmentManager . beginTransaction ( ) ; final TasksFragment de.azapps.mirakel.new_ui.activities.TasksFragment = de.azapps.mirakel.new_ui.activities.TasksFragment ( ) ; de.azapps.mirakel.new_ui.activities.TasksFragment . setList ( de.azapps.mirakel.new_ui.activities.ListMirakel ) ; de.azapps.mirakel.new_ui.activities.FragmentTransaction . commit ( ) ; } 
private synchronized void void ( @ Nullable final Intent de.azapps.mirakel.new_ui.activities.Intent ) { if ( ( de.azapps.mirakel.new_ui.activities.Intent == null ) || ( de.azapps.mirakel.new_ui.activities.Intent . getExtras ( ) == null ) ) { return; } if ( ! de.azapps.mirakel.new_ui.activities.Intent . getAction ( ) . equals ( DefinitionsHelper . SHOW_LIST ) ) { AnalyticsWrapper . track ( AnalyticsWrapperBase . CATEGORY . HANDLE_INTENT , de.azapps.mirakel.new_ui.activities.Intent . getAction ( ) ) ; } switch ( de.azapps.mirakel.new_ui.activities.Intent . getAction ( ) ) { case DefinitionsHelper . SHOW_TASK : case DefinitionsHelper . SHOW_TASK_FROM_WIDGET : case DefinitionsHelper . SHOW_TASK_REMINDER : final Optional < Task > de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.Task> = TaskHelper . getTaskFromIntent ( de.azapps.mirakel.new_ui.activities.Intent ) ; if ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.Task> . isPresent ( ) ) { void ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.Task> . get ( ) . getList ( ) ) ; void ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.Task> . get ( ) ) ; } break; case Intent . ACTION_SEND : case Intent . ACTION_SEND_MULTIPLE : void ( de.azapps.mirakel.new_ui.activities.Intent ) ; break; case DefinitionsHelper . SHOW_LIST : case DefinitionsHelper . SHOW_LIST_FROM_WIDGET : if ( de.azapps.mirakel.new_ui.activities.Intent . hasExtra ( DefinitionsHelper . EXTRA_LIST ) ) { void ( ( ListMirakel ) de.azapps.mirakel.new_ui.activities.Intent . getParcelableExtra ( DefinitionsHelper . EXTRA_LIST ) ) ; } else { Log . d ( java.lang.String , STRING ) ; } break; case DefinitionsHelper . ADD_TASK_FROM_WIDGET : if ( de.azapps.mirakel.new_ui.activities.Intent . hasExtra ( DefinitionsHelper . EXTRA_LIST ) ) { void ( ( ListMirakel ) de.azapps.mirakel.new_ui.activities.Intent . getParcelableExtra ( DefinitionsHelper . EXTRA_LIST ) ) ; de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . addTask ( ) ; } else { Log . d ( java.lang.String , STRING ) ; } break; case DefinitionsHelper . SHOW_MESSAGE : break; } if ( de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . getList ( ) == null ) { void ( MirakelModelPreferences . getStartupList ( ) ) ; } } 
private void void ( @ NonNull final Intent de.azapps.mirakel.new_ui.activities.Intent ) { java.lang.String java.lang.String = de.azapps.mirakel.new_ui.activities.Intent . getStringExtra ( Intent . EXTRA_TEXT ) ; java.lang.String java.lang.String = de.azapps.mirakel.new_ui.activities.Intent . getStringExtra ( Intent . EXTRA_SUBJECT ) ; if ( ( de.azapps.mirakel.new_ui.activities.Intent . getCategories ( ) != null ) && de.azapps.mirakel.new_ui.activities.Intent . getCategories ( ) . contains ( STRING ) && ! java.lang.String . boolean ( ) ) { java.lang.String = java.lang.String ; java.lang.String = STRING ; } if ( ! STRING . boolean ( de.azapps.mirakel.new_ui.activities.Intent . getType ( ) ) && ( java.lang.String == null ) ) { java.lang.String = MirakelCommonPreferences . getImportFileTitle ( ) ; } if ( java.lang.String == null ) { java.lang.String = STRING ; } final Optional < ListMirakel > de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> = MirakelModelPreferences . getImportDefaultList ( ) ; if ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> . isPresent ( ) ) { final Task de.azapps.mirakel.new_ui.activities.Task = Semantic . createTask ( java.lang.String , de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> , true ) ; void ( de.azapps.mirakel.new_ui.activities.Task , de.azapps.mirakel.new_ui.activities.Intent ) ; } else { final Task de.azapps.mirakel.new_ui.activities.Task = Semantic . createStubTask ( java.lang.String , de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> , true ) ; final AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( this ) ; AlertDialogWrapper.Builder . setTitle ( R . string . import_to ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> <> ( ) ; final int int = NUMBER ; for ( final ListMirakel de.azapps.mirakel.new_ui.activities.ListMirakel : ListMirakel . all ( ) ) { if ( de.azapps.mirakel.new_ui.activities.ListMirakel . getId ( ) > NUMBER ) { java.util.List<java.lang.String> . boolean ( de.azapps.mirakel.new_ui.activities.ListMirakel . getName ( ) ) ; java.util.List<java.lang.Long> . boolean ( de.azapps.mirakel.new_ui.activities.ListMirakel . getId ( ) ) ; } } AlertDialogWrapper.Builder . setSingleChoiceItems ( java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) , int , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.activities.DialogInterface , final int int ) { final Optional < ListMirakel > de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> = ListMirakel . get ( java.util.List<java.lang.Long> . java.lang.Long ( int ) ) ; if ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> . isPresent ( ) ) { try { de.azapps.mirakel.new_ui.activities.Task . setList ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> . get ( ) ) ; final Task de.azapps.mirakel.new_ui.activities.Task = de.azapps.mirakel.new_ui.activities.Task . create ( ) ; withOptional ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> , new OptionalUtils . OptionalUtils < ListMirakel > ( ) { @ Override public void apply ( final ListMirakel listMirakel ) { addFiles ( task , intent ) ; dialog . dismiss ( ) ; } } ) ; void ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> . get ( ) ) ; } catch ( DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; } } } } ) ; AlertDialogWrapper.Builder . create ( ) . show ( ) ; } } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.activities.DialogInterface , final int int ) { final Optional < ListMirakel > de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> = ListMirakel . get ( java.util.List<java.lang.Long> . java.lang.Long ( int ) ) ; if ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> . isPresent ( ) ) { try { de.azapps.mirakel.new_ui.activities.Task . setList ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> . get ( ) ) ; final Task de.azapps.mirakel.new_ui.activities.Task = de.azapps.mirakel.new_ui.activities.Task . create ( ) ; withOptional ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> , new OptionalUtils . OptionalUtils < ListMirakel > ( ) { @ Override public void apply ( final ListMirakel listMirakel ) { addFiles ( task , intent ) ; dialog . dismiss ( ) ; } } ) ; void ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ListMirakel> . get ( ) ) ; } catch ( DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; } } } 
@ Override public void apply ( final ListMirakel listMirakel ) { addFiles ( task , intent ) ; dialog . dismiss ( ) ; } 
private void void ( @ NonNull final Task de.azapps.mirakel.new_ui.activities.Task , @ NonNull final Intent de.azapps.mirakel.new_ui.activities.Intent ) { final java.lang.String java.lang.String = de.azapps.mirakel.new_ui.activities.Intent . getAction ( ) ; final java.lang.String java.lang.String = de.azapps.mirakel.new_ui.activities.Intent . getType ( ) ; if ( Intent . ACTION_SEND . equals ( java.lang.String ) && ( java.lang.String != null ) ) { final Uri de.azapps.mirakel.new_ui.activities.Uri = de.azapps.mirakel.new_ui.activities.Intent . getParcelableExtra ( Intent . EXTRA_STREAM ) ; de.azapps.mirakel.new_ui.activities.Task . addFile ( this , de.azapps.mirakel.new_ui.activities.Uri ) ; } else if ( Intent . ACTION_SEND_MULTIPLE . equals ( java.lang.String ) && ( java.lang.String != null ) ) { final java.util.List<de.azapps.mirakel.new_ui.activities.Uri> < Uri > java.util.List<de.azapps.mirakel.new_ui.activities.Uri> = de.azapps.mirakel.new_ui.activities.Intent . getParcelableArrayListExtra ( Intent . EXTRA_STREAM ) ; for ( final Uri de.azapps.mirakel.new_ui.activities.Uri : java.util.List<de.azapps.mirakel.new_ui.activities.Uri> ) { de.azapps.mirakel.new_ui.activities.Task . addFile ( this , de.azapps.mirakel.new_ui.activities.Uri ) ; } } } 
private void void ( ) { de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.DrawerLayout> = fromNullable ( ( DrawerLayout ) findViewById ( R . id . drawer_layout ) ) ; withOptional ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.DrawerLayout> , new Procedure < DrawerLayout > ( ) { @ java.lang.Override public void void ( final DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { final ActionBarDrawerToggle de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle = new de.azapps.mirakel.new_ui.activities.MirakelActivity.DrawerToggle ( de.azapps.mirakel.new_ui.activities.DrawerLayout ) ; de.azapps.mirakel.new_ui.activities.DrawerLayout . setDrawerListener ( de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle ) ; de.azapps.mirakel.new_ui.activities.DrawerLayout . setDrawerShadow ( R . drawable . drawer_shadow , GravityCompat . START ) ; de.azapps.mirakel.new_ui.activities.MirakelActivity .this . de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle> = of ( de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle ) ; } } ) ; } 
@ java.lang.Override public void void ( final DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { final ActionBarDrawerToggle de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle = new de.azapps.mirakel.new_ui.activities.MirakelActivity.DrawerToggle ( de.azapps.mirakel.new_ui.activities.DrawerLayout ) ; de.azapps.mirakel.new_ui.activities.DrawerLayout . setDrawerListener ( de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle ) ; de.azapps.mirakel.new_ui.activities.DrawerLayout . setDrawerShadow ( R . drawable . drawer_shadow , GravityCompat . START ) ; de.azapps.mirakel.new_ui.activities.MirakelActivity .this . de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle> = of ( de.azapps.mirakel.new_ui.activities.ActionBarDrawerToggle ) ; } 
@ java.lang.Override public void void ( ) { withOptional ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.DrawerLayout> , new Procedure < DrawerLayout > ( ) { @ java.lang.Override public void void ( final DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { de.azapps.mirakel.new_ui.activities.DrawerLayout . setDrawerLockMode ( DrawerLayout . LOCK_MODE_LOCKED_OPEN ) ; } } ) ; } 
@ java.lang.Override public void void ( final DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { de.azapps.mirakel.new_ui.activities.DrawerLayout . setDrawerLockMode ( DrawerLayout . LOCK_MODE_LOCKED_OPEN ) ; } 
@ java.lang.Override public void void ( ) { withOptional ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.DrawerLayout> , new Procedure < DrawerLayout > ( ) { @ java.lang.Override public void void ( final DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { de.azapps.mirakel.new_ui.activities.DrawerLayout . setDrawerLockMode ( DrawerLayout . LOCK_MODE_UNLOCKED ) ; } } ) ; } 
@ java.lang.Override public void void ( final DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { de.azapps.mirakel.new_ui.activities.DrawerLayout . setDrawerLockMode ( DrawerLayout . LOCK_MODE_UNLOCKED ) ; } 
void ( final int int ) { this . int = int ; } 
public int int ( ) { return int ; } 
public void void ( final de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState ) { if ( de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder != null ) { de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.ViewFlipper . setDisplayedChild ( de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState . int ( ) ) ; if ( ( de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState == de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState . de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState ) && ( de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.TextView != null ) ) { de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.TextView . setText ( de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . getList ( ) . getName ( ) , TextView . BufferType . SPANNABLE ) ; } } } 
@ java.lang.Override public void void ( ) { super. onDetachedFromWindow ( ) ; if ( de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.Spinner != null ) { ( ( SimpleModelListAdapter < AccountMirakel > ) de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.Spinner . getAdapter ( ) ) . changeCursor ( null ) ; } } 
private void void ( ) { setTitle ( null ) ; final View de.azapps.mirakel.new_ui.activities.View = LayoutInflater . from ( this ) . inflate ( R . layout . actionbar_layout , de.azapps.mirakel.new_ui.activities.Toolbar , false ) ; de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder = new de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder ( de.azapps.mirakel.new_ui.activities.View ) ; de.azapps.mirakel.new_ui.activities.Toolbar . addView ( de.azapps.mirakel.new_ui.activities.View ) ; final Cursor de.azapps.mirakel.new_ui.activities.Cursor = AccountMirakel . allCursorWithAllAccounts ( ) ; final SimpleModelListAdapter < AccountMirakel > de.azapps.mirakel.new_ui.activities.SimpleModelListAdapter<de.azapps.mirakel.new_ui.activities.AccountMirakel> = new SimpleModelListAdapter <> ( this , de.azapps.mirakel.new_ui.activities.Cursor , NUMBER , AccountMirakel .class , R . layout . simple_list_row_with_bold_header ) ; de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.Spinner . setAdapter ( de.azapps.mirakel.new_ui.activities.SimpleModelListAdapter<de.azapps.mirakel.new_ui.activities.AccountMirakel> ) ; de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.Spinner . setOnItemSelectedListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( final AdapterView < ? > de.azapps.mirakel.new_ui.activities.AdapterView<?> , final View de.azapps.mirakel.new_ui.activities.View , final int int , final long long ) { final AccountMirakel de.azapps.mirakel.new_ui.activities.AccountMirakel = de.azapps.mirakel.new_ui.activities.SimpleModelListAdapter<de.azapps.mirakel.new_ui.activities.AccountMirakel> . getItem ( int ) ; de.azapps.mirakel.new_ui.activities.ListsFragment ( ) . setAccount ( of ( de.azapps.mirakel.new_ui.activities.AccountMirakel ) ) ; } @ java.lang.Override public void void ( final AdapterView < ? > de.azapps.mirakel.new_ui.activities.AdapterView<?> ) { } } ) ; if ( de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.TextView != null ) { de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarViewHolder . de.azapps.mirakel.new_ui.activities.TextView . setText ( de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . getList ( ) . getName ( ) , TextView . BufferType . SPANNABLE ) ; } } 
@ java.lang.Override public void void ( final AdapterView < ? > de.azapps.mirakel.new_ui.activities.AdapterView<?> , final View de.azapps.mirakel.new_ui.activities.View , final int int , final long long ) { final AccountMirakel de.azapps.mirakel.new_ui.activities.AccountMirakel = de.azapps.mirakel.new_ui.activities.SimpleModelListAdapter<de.azapps.mirakel.new_ui.activities.AccountMirakel> . getItem ( int ) ; de.azapps.mirakel.new_ui.activities.ListsFragment ( ) . setAccount ( of ( de.azapps.mirakel.new_ui.activities.AccountMirakel ) ) ; } 
@ java.lang.Override public void void ( final AdapterView < ? > de.azapps.mirakel.new_ui.activities.AdapterView<?> ) { } 
@ java.lang.Override public void void ( final @ NonNull ModelBase de.azapps.mirakel.new_ui.activities.ModelBase ) { if ( de.azapps.mirakel.new_ui.activities.ModelBase instanceof Task ) { void ( ( Task ) de.azapps.mirakel.new_ui.activities.ModelBase ) ; } else if ( de.azapps.mirakel.new_ui.activities.ModelBase instanceof TaskOverview ) { final Optional < Task > de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.Task> = ( ( TaskOverview ) de.azapps.mirakel.new_ui.activities.ModelBase ) . getTask ( ) ; if ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.Task> . isPresent ( ) ) { void ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.Task> . get ( ) ) ; } else { ErrorReporter . report ( ErrorType . TASK_VANISHED ) ; } } else if ( de.azapps.mirakel.new_ui.activities.ModelBase instanceof ListMirakel ) { void ( ( ListMirakel ) de.azapps.mirakel.new_ui.activities.ModelBase ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + de.azapps.mirakel.new_ui.activities.ModelBase . getClass ( ) . toString ( ) ) ; } } 
@ java.lang.Override public void void ( final int int , final int int , final Intent de.azapps.mirakel.new_ui.activities.Intent ) { if ( ( int == TaskFragment . REQUEST_IMAGE_CAPTURE || int == TaskFragment . FILE_SELECT_CODE ) && ( int == Activity . RESULT_OK ) ) { de.azapps.mirakel.new_ui.activities.TaskFragment . onActivityResult ( int , int , de.azapps.mirakel.new_ui.activities.Intent ) ; } } 
private void void ( ListMirakel de.azapps.mirakel.new_ui.activities.ListMirakel ) { void ( de.azapps.mirakel.new_ui.activities.ListMirakel ) ; withOptional ( de.azapps.mirakel.new_ui.activities.Optional<de.azapps.mirakel.new_ui.activities.DrawerLayout> , new Procedure < DrawerLayout > ( ) { @ java.lang.Override public void void ( final DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { de.azapps.mirakel.new_ui.activities.DrawerLayout . closeDrawer ( GravityCompat . START ) ; } } ) ; } 
@ java.lang.Override public void void ( final DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { de.azapps.mirakel.new_ui.activities.DrawerLayout . closeDrawer ( GravityCompat . START ) ; } 
private void void ( final Task de.azapps.mirakel.new_ui.activities.Task ) { de.azapps.mirakel.new_ui.activities.TaskFragment = TaskFragment . newInstance ( de.azapps.mirakel.new_ui.activities.Task ) ; de.azapps.mirakel.new_ui.activities.TaskFragment . show ( getSupportFragmentManager ( ) , java.lang.String ) ; } 
public void void ( final int int ) { final FloatingActionButton de.azapps.mirakel.new_ui.activities.FloatingActionButton = de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . floatingActionButton ; AnimationHelper . moveViewUp ( this , de.azapps.mirakel.new_ui.activities.FloatingActionButton , int ) ; } 
public void void ( final int int ) { final FloatingActionButton de.azapps.mirakel.new_ui.activities.FloatingActionButton = de.azapps.mirakel.new_ui.activities.TasksFragment ( ) . floatingActionButton ; AnimationHelper . moveViewDown ( this , de.azapps.mirakel.new_ui.activities.FloatingActionButton , int ) ; } 
@ java.lang.Override protected void void ( Bundle de.azapps.mirakel.new_ui.activities.Bundle ) { super. onRestoreInstanceState ( de.azapps.mirakel.new_ui.activities.Bundle ) ; de.azapps.mirakel.new_ui.activities.TaskFragment = ( TaskFragment ) getSupportFragmentManager ( ) . findFragmentByTag ( java.lang.String ) ; if ( de.azapps.mirakel.new_ui.activities.TaskFragment != null ) { de.azapps.mirakel.new_ui.activities.TaskFragment . onAttach ( this ) ; } } 
public void ( DrawerLayout de.azapps.mirakel.new_ui.activities.DrawerLayout ) { super( de.azapps.mirakel.new_ui.activities.MirakelActivity .this , de.azapps.mirakel.new_ui.activities.DrawerLayout , de.azapps.mirakel.new_ui.activities.MirakelActivity .this . de.azapps.mirakel.new_ui.activities.Toolbar , R . string . list_title , R . string . list_title ); } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.activities.View ) { super. onDrawerClosed ( de.azapps.mirakel.new_ui.activities.View ) ; AnalyticsWrapperBase . setScreen ( de.azapps.mirakel.new_ui.activities.TasksFragment ( ) ) ; invalidateOptionsMenu ( ) ; de.azapps.mirakel.new_ui.activities.ListsFragment ( ) . onCloseNavDrawer ( ) ; void ( de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState . de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState ) ; invalidateOptionsMenu ( ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.activities.View ) { super. onDrawerOpened ( de.azapps.mirakel.new_ui.activities.View ) ; AnalyticsWrapperBase . setScreen ( de.azapps.mirakel.new_ui.activities.ListsFragment ( ) ) ; invalidateOptionsMenu ( ) ; void ( de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState . de.azapps.mirakel.new_ui.activities.MirakelActivity.ActionBarState ) ; invalidateOptionsMenu ( ) ; } 
@ SuppressLint ( STRING ) @ java.lang.Override protected void void ( final Bundle de.azapps.mirakel.new_ui.activities.Bundle ) { super. onCreate ( de.azapps.mirakel.new_ui.activities.Bundle ) ; SpecialList . firstSpecialSafe ( ) ; final ListMirakel de.azapps.mirakel.new_ui.activities.ListMirakel = MirakelModelPreferences . getStartupList ( ) ; final Intent de.azapps.mirakel.new_ui.activities.Intent = new Intent ( de.azapps.mirakel.new_ui.activities.SplashScreenActivity .this , MirakelActivity .class ) ; de.azapps.mirakel.new_ui.activities.Intent . setAction ( DefinitionsHelper . SHOW_LIST ) ; de.azapps.mirakel.new_ui.activities.Intent . putExtra ( DefinitionsHelper . EXTRA_LIST , de.azapps.mirakel.new_ui.activities.ListMirakel ) ; finish ( ) ; startActivityForResult ( de.azapps.mirakel.new_ui.activities.Intent , NUMBER ) ; } 
@ java.lang.Override protected void void ( final int int , final int int , final Intent de.azapps.mirakel.new_ui.activities.Intent ) { finish ( ) ; } 
@ java.lang.Override protected void void ( Bundle de.azapps.mirakel.new_ui.activities.Bundle ) { super. onCreate ( de.azapps.mirakel.new_ui.activities.Bundle ) ; setContentView ( R . layout . activity_mirakel ) ; getActionBar ( ) . setBackgroundDrawable ( new ColorDrawable ( ThemeManager . getColor ( R . attr . colorPrimary ) ) ) ; } 
public void ( final Context de.azapps.mirakel.new_ui.adapter.Context , final Cursor de.azapps.mirakel.new_ui.adapter.Cursor ) { super( de.azapps.mirakel.new_ui.adapter.Context , de.azapps.mirakel.new_ui.adapter.Cursor , true ); de.azapps.mirakel.new_ui.adapter.LayoutInflater = ( LayoutInflater ) de.azapps.mirakel.new_ui.adapter.Context . getSystemService ( Context . LAYOUT_INFLATER_SERVICE ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.adapter.View de.azapps.mirakel.new_ui.adapter.View ( Context de.azapps.mirakel.new_ui.adapter.Context , Cursor de.azapps.mirakel.new_ui.adapter.Cursor , ViewGroup de.azapps.mirakel.new_ui.adapter.ViewGroup ) { final View de.azapps.mirakel.new_ui.adapter.View = de.azapps.mirakel.new_ui.adapter.LayoutInflater . inflate ( R . layout . row_search , de.azapps.mirakel.new_ui.adapter.ViewGroup , false ) ; de.azapps.mirakel.new_ui.adapter.View . setTag ( new de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder ( de.azapps.mirakel.new_ui.adapter.View ) ) ; return de.azapps.mirakel.new_ui.adapter.View ; } 
@ java.lang.Override public void void ( View de.azapps.mirakel.new_ui.adapter.View , Context de.azapps.mirakel.new_ui.adapter.Context , Cursor de.azapps.mirakel.new_ui.adapter.Cursor ) { final de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder = ( de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder ) de.azapps.mirakel.new_ui.adapter.View . getTag ( ) ; final SearchObject de.azapps.mirakel.new_ui.adapter.SearchObject = new SearchObject ( de.azapps.mirakel.new_ui.adapter.Cursor ) ; de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( de.azapps.mirakel.new_ui.adapter.SearchObject . getName ( ) ) ; switch ( de.azapps.mirakel.new_ui.adapter.SearchObject . getAutocompleteType ( ) ) { case TASK : if ( de.azapps.mirakel.new_ui.adapter.SearchObject . isDone ( ) ) { de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setPaintFlags ( de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . getPaintFlags ( ) | Paint . STRIKE_THRU_TEXT_FLAG ) ; } else { de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setPaintFlags ( de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . getPaintFlags ( ) & ~ Paint . STRIKE_THRU_TEXT_FLAG ) ; } break; case TAG : final Tag de.azapps.mirakel.new_ui.adapter.Tag = new Tag ( de.azapps.mirakel.new_ui.adapter.SearchObject . getObjId ( ) , de.azapps.mirakel.new_ui.adapter.SearchObject . getName ( ) , de.azapps.mirakel.new_ui.adapter.SearchObject . getBackgroundColor ( ) , false ) ; TagSpan de.azapps.mirakel.new_ui.adapter.TagSpan = new TagSpan ( de.azapps.mirakel.new_ui.adapter.Tag , de.azapps.mirakel.new_ui.adapter.Context ) ; SpannableStringBuilder de.azapps.mirakel.new_ui.adapter.SpannableStringBuilder = new SpannableStringBuilder ( ) ; de.azapps.mirakel.new_ui.adapter.SpannableStringBuilder . append ( new SpannableString ( de.azapps.mirakel.new_ui.adapter.Tag . getName ( ) ) ) ; de.azapps.mirakel.new_ui.adapter.SpannableStringBuilder . setSpan ( de.azapps.mirakel.new_ui.adapter.TagSpan , NUMBER , de.azapps.mirakel.new_ui.adapter.Tag . getName ( ) . length ( ) , Spannable . SPAN_EXCLUSIVE_EXCLUSIVE ) ; de.azapps.mirakel.new_ui.adapter.AutoCompleteAdapter.AutocompleteViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( de.azapps.mirakel.new_ui.adapter.SpannableStringBuilder , TextView . BufferType . SPANNABLE ) ; break; } } 
@ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( Cursor de.azapps.mirakel.new_ui.adapter.Cursor ) { final SearchObject de.azapps.mirakel.new_ui.adapter.SearchObject = new SearchObject ( de.azapps.mirakel.new_ui.adapter.Cursor ) ; return de.azapps.mirakel.new_ui.adapter.SearchObject . getName ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.adapter.Cursor de.azapps.mirakel.new_ui.adapter.Cursor ( final java.lang.CharSequence java.lang.CharSequence ) { if ( java.lang.CharSequence == null ) { return super. runQueryOnBackgroundThread ( null ) ; } return SearchObject . autocomplete ( mContext , java.lang.CharSequence . java.lang.String ( ) ) ; } 
public void ( final View de.azapps.mirakel.new_ui.adapter.View ) { super( de.azapps.mirakel.new_ui.adapter.View ); ButterKnife . inject ( this , de.azapps.mirakel.new_ui.adapter.View ) ; } 
public void ( final Context de.azapps.mirakel.new_ui.adapter.Context , final Cursor de.azapps.mirakel.new_ui.adapter.Cursor , final OnItemClickedListener < ListMirakel > de.azapps.mirakel.new_ui.adapter.OnItemClickedListener<de.azapps.mirakel.new_ui.adapter.ListMirakel> , final MultiSelectCallbacks < ListMirakel > de.azapps.mirakel.new_ui.adapter.MultiSelectCallbacks<de.azapps.mirakel.new_ui.adapter.ListMirakel> ) { super( de.azapps.mirakel.new_ui.adapter.Context , de.azapps.mirakel.new_ui.adapter.Cursor , de.azapps.mirakel.new_ui.adapter.OnItemClickedListener<de.azapps.mirakel.new_ui.adapter.ListMirakel> , de.azapps.mirakel.new_ui.adapter.MultiSelectCallbacks<de.azapps.mirakel.new_ui.adapter.ListMirakel> ); de.azapps.mirakel.new_ui.adapter.LayoutInflater = ( LayoutInflater ) de.azapps.mirakel.new_ui.adapter.Context . getSystemService ( Context . LAYOUT_INFLATER_SERVICE ) ; setHasStableIds ( true ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.new_ui.adapter.ListMirakel de.azapps.mirakel.new_ui.adapter.ListMirakel ( @ NonNull final Cursor de.azapps.mirakel.new_ui.adapter.Cursor ) { return ( ListMirakel ) ModelFactory . createModel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.new_ui.adapter.Cursor ) , ListMirakel .class ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder ( final ViewGroup de.azapps.mirakel.new_ui.adapter.ViewGroup , final int int ) { final View de.azapps.mirakel.new_ui.adapter.View = de.azapps.mirakel.new_ui.adapter.LayoutInflater . inflate ( R . layout . row_list , de.azapps.mirakel.new_ui.adapter.ViewGroup , false ) ; return new de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder ( de.azapps.mirakel.new_ui.adapter.View ) ; } 
@ java.lang.Override public void void ( final de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder , final Cursor de.azapps.mirakel.new_ui.adapter.Cursor , final int int ) { if ( int == MirakelModelPreferences . getDividerPosition ( ) ) { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ViewSwitcher . setDisplayedChild ( NUMBER ) ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . itemView . setBackgroundColor ( Color . TRANSPARENT ) ; } else { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ViewSwitcher . setDisplayedChild ( NUMBER ) ; final ListMirakel de.azapps.mirakel.new_ui.adapter.ListMirakel = de.azapps.mirakel.new_ui.adapter.ListMirakel ( int ) ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ListMirakel = de.azapps.mirakel.new_ui.adapter.ListMirakel ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( de.azapps.mirakel.new_ui.adapter.ListMirakel . getName ( ) ) ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ImageView . setVisibility ( View . GONE ) ; void ( de.azapps.mirakel.new_ui.adapter.ListMirakel , de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder ) ; if ( de.azapps.mirakel.new_ui.adapter.ListMirakel . isSpecial ( ) ) { new de.azapps.mirakel.new_ui.adapter.ListAdapter.UpdateTaskCountTask ( ) . execute ( de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder ) ; } else { final long long = de.azapps.mirakel.new_ui.adapter.Cursor . getLong ( de.azapps.mirakel.new_ui.adapter.Cursor . getColumnIndex ( STRING ) ) ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( java.lang.String . java.lang.String ( long ) ) ; } if ( selectedItems . get ( int ) ) { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . itemView . setBackgroundColor ( ThemeManager . getColor ( R . attr . colorSelectedRow ) ) ; } else { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . itemView . setBackgroundColor ( Color . TRANSPARENT ) ; } if ( selectMode ) { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ImageView . setVisibility ( View . VISIBLE ) ; } else { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ImageView . setVisibility ( View . GONE ) ; } } } 
public void ( final View de.azapps.mirakel.new_ui.adapter.View ) { super( de.azapps.mirakel.new_ui.adapter.View ); ButterKnife . inject ( this , de.azapps.mirakel.new_ui.adapter.View ) ; } 
@ java.lang.Override protected java.lang.Long java.lang.Long ( final de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder ... de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder[] ) { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder = de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder[] [ NUMBER ] ; return de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ListMirakel . countTasks ( ) ; } 
@ java.lang.Override protected void void ( final java.lang.Long java.lang.Long ) { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( java.lang.String . java.lang.String ( java.lang.Long ) ) ; } 
private void void ( final ListMirakel de.azapps.mirakel.new_ui.adapter.ListMirakel , final de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder ) { if ( de.azapps.mirakel.new_ui.adapter.ListMirakel . getIconPath ( ) . isPresent ( ) ) { final Uri de.azapps.mirakel.new_ui.adapter.Uri = de.azapps.mirakel.new_ui.adapter.ListMirakel . getIconPath ( ) . get ( ) ; final java.lang.String java.lang.String = de.azapps.mirakel.new_ui.adapter.Uri . toString ( ) ; try { final Bitmap de.azapps.mirakel.new_ui.adapter.Bitmap ; if ( java.lang.String . boolean ( STRING ) ) { de.azapps.mirakel.new_ui.adapter.Bitmap = BitmapFactory . decodeStream ( mContext . getAssets ( ) . open ( java.lang.String . java.lang.String ( STRING , STRING ) ) ) ; } else { final java.io.InputStream java.io.InputStream = mContext . getContentResolver ( ) . openInputStream ( de.azapps.mirakel.new_ui.adapter.Uri ) ; de.azapps.mirakel.new_ui.adapter.Bitmap = BitmapFactory . decodeStream ( java.io.InputStream ) ; } final BitmapDrawable de.azapps.mirakel.new_ui.adapter.BitmapDrawable = new BitmapDrawable ( mContext . getResources ( ) , de.azapps.mirakel.new_ui.adapter.Bitmap ) ; de.azapps.mirakel.new_ui.adapter.BitmapDrawable . setColorFilter ( ThemeManager . getColor ( R . attr . colorTextGrey ) , PorterDuff . Mode . MULTIPLY ) ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ImageView . setImageDrawable ( de.azapps.mirakel.new_ui.adapter.BitmapDrawable ) ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ImageView . setVisibility ( View . VISIBLE ) ; } catch ( final java.io.FileNotFoundException java.io.FileNotFoundException ) { Log . w ( java.lang.String , STRING , java.io.FileNotFoundException ) ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ImageView . setVisibility ( View . GONE ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . w ( java.lang.String , STRING , java.io.IOException ) ; de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ImageView . setVisibility ( View . GONE ) ; } } else { de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder . de.azapps.mirakel.new_ui.adapter.ImageView . setVisibility ( View . GONE ) ; } } 
@ java.lang.Override public int int ( ) { final int int = super. getItemCount ( ) ; if ( ( int == NUMBER ) || ( int < MirakelModelPreferences . getDividerPosition ( ) ) ) { return int ; } else { return int + NUMBER ; } } 
@ java.lang.Override public void void ( final de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder , int int ) { void ( de.azapps.mirakel.new_ui.adapter.ListAdapter.ListViewHolder , getCursor ( ) , int ) ; } 
@ java.lang.Override protected boolean boolean ( final int int ) { if ( int != MirakelModelPreferences . getDividerPosition ( ) ) { return super. toggleSelection ( int ) ; } return false ; } 
@ java.lang.Override public long long ( final int int ) { return int ; } 
@ NonNull protected de.azapps.mirakel.new_ui.adapter.ListMirakel de.azapps.mirakel.new_ui.adapter.ListMirakel ( int int ) { final Cursor de.azapps.mirakel.new_ui.adapter.Cursor = getCursor ( ) ; if ( ( int > NUMBER ) && ( int > MirakelModelPreferences . getDividerPosition ( ) ) ) { int -- ; } de.azapps.mirakel.new_ui.adapter.Cursor . moveToPosition ( int ) ; return de.azapps.mirakel.new_ui.adapter.ListMirakel ( de.azapps.mirakel.new_ui.adapter.Cursor ) ; } 
public void void ( final int int , final int int ) { if ( int == int ) { return; } final boolean boolean = selectedItems . get ( int ) ; selectedItems . delete ( int ) ; final int int = java.lang.Math . int ( int , int ) ; final int int = java.lang.Math . int ( int , int ) ; final int int = ( int > int ) ? NUMBER : - NUMBER ; for ( int int = int ; int <= int ; int ++ ) { final boolean boolean = selectedItems . get ( int ) ; selectedItems . delete ( int ) ; if ( boolean ) { selectedItems . put ( int + int , true ) ; } } if ( boolean ) { selectedItems . put ( int , true ) ; } } 
void void ( ) 
boolean boolean ( ) 
ListMirakelInterface . ListMirakelInterface.ShowDoneCases ListMirakelInterface.ShowDoneCases ( ) 
public void ( final Context de.azapps.mirakel.new_ui.adapter.Context , final Cursor de.azapps.mirakel.new_ui.adapter.Cursor , final OnItemClickedListener < TaskOverview > de.azapps.mirakel.new_ui.adapter.OnItemClickedListener<de.azapps.mirakel.new_ui.adapter.TaskOverview> , final MultiSelectCallbacks < TaskOverview > de.azapps.mirakel.new_ui.adapter.MultiSelectCallbacks<de.azapps.mirakel.new_ui.adapter.TaskOverview> , final de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskAdapterCallbacks de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskAdapterCallbacks ) { super( de.azapps.mirakel.new_ui.adapter.Context , de.azapps.mirakel.new_ui.adapter.Cursor , de.azapps.mirakel.new_ui.adapter.OnItemClickedListener<de.azapps.mirakel.new_ui.adapter.TaskOverview> , de.azapps.mirakel.new_ui.adapter.MultiSelectCallbacks<de.azapps.mirakel.new_ui.adapter.TaskOverview> ); de.azapps.mirakel.new_ui.adapter.LayoutInflater = LayoutInflater . from ( de.azapps.mirakel.new_ui.adapter.Context ) ; this . de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskAdapterCallbacks = de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskAdapterCallbacks ; setHasStableIds ( true ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.new_ui.adapter.TaskOverview de.azapps.mirakel.new_ui.adapter.TaskOverview ( @ NonNull final Cursor de.azapps.mirakel.new_ui.adapter.Cursor ) { return new TaskOverview ( CursorGetter . unsafeGetter ( de.azapps.mirakel.new_ui.adapter.Cursor ) ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder ( final ViewGroup de.azapps.mirakel.new_ui.adapter.ViewGroup , final int int ) { final View de.azapps.mirakel.new_ui.adapter.View = de.azapps.mirakel.new_ui.adapter.LayoutInflater . inflate ( R . layout . row_task , de.azapps.mirakel.new_ui.adapter.ViewGroup , false ) ; return new de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder ( de.azapps.mirakel.new_ui.adapter.View ) ; } 
@ java.lang.Override public void void ( final de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder , final Cursor de.azapps.mirakel.new_ui.adapter.Cursor , final int int ) { if ( int == NUMBER ) { final int int = ( int ) mContext . getResources ( ) . getDimension ( R . dimen . card_margin ) ; final int int = ( int ) mContext . getResources ( ) . getDimension ( R . dimen . card_margin_bottom ) ; final FrameLayout . FrameLayout FrameLayout.LayoutParams = new FrameLayout . FrameLayout ( ViewGroup . LayoutParams . MATCH_PARENT , ViewGroup . LayoutParams . WRAP_CONTENT ) ; FrameLayout.LayoutParams . setMargins ( int , int , int , int ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.CardView . setLayoutParams ( FrameLayout.LayoutParams ) ; } else { final int int = ( int ) mContext . getResources ( ) . getDimension ( R . dimen . card_margin ) ; final int int = ( int ) mContext . getResources ( ) . getDimension ( R . dimen . card_margin_top ) ; final int int = ( int ) mContext . getResources ( ) . getDimension ( R . dimen . card_margin_bottom ) ; final FrameLayout . FrameLayout FrameLayout.LayoutParams = new FrameLayout . FrameLayout ( ViewGroup . LayoutParams . MATCH_PARENT , ViewGroup . LayoutParams . WRAP_CONTENT ) ; FrameLayout.LayoutParams . setMargins ( int , int , int , int ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.CardView . setLayoutParams ( FrameLayout.LayoutParams ) ; } if ( ViewHelper . isRTL ( mContext ) ) { final int int = ( int ) mContext . getResources ( ) . getDimension ( R . dimen . priorityDoneSize ) ; LinearLayout . LinearLayout LinearLayout.LayoutParams = new LinearLayout . LinearLayout ( int , int ) ; LinearLayout.LayoutParams . setMargins ( ( int ) mContext . getResources ( ) . getDimension ( R . dimen . margin_progress_done ) , NUMBER , NUMBER , NUMBER ) ; params . gravity = Gravity . CENTER_VERTICAL ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.ProgressDoneView . setLayoutParams ( LinearLayout.LayoutParams ) ; LinearLayout.LayoutParams = new LinearLayout . LinearLayout ( ViewGroup . LayoutParams . WRAP_CONTENT , ViewGroup . LayoutParams . WRAP_CONTENT ) ; LinearLayout.LayoutParams . setMargins ( ( int ) mContext . getResources ( ) . getDimension ( R . dimen . task_due_margin ) , NUMBER , NUMBER , NUMBER ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setLayoutParams ( LinearLayout.LayoutParams ) ; } if ( int == ( getItemCount ( ) - NUMBER ) ) { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.ViewSwitcher . setDisplayedChild ( NUMBER ) ; final ListMirakelInterface . ListMirakelInterface ListMirakelInterface.ShowDoneCases = de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskAdapterCallbacks . ListMirakelInterface.ShowDoneCases ( ) ; if ( ListMirakelInterface.ShowDoneCases != ListMirakelInterface . ShowDoneCases . BOTH ) { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setVisibility ( View . GONE ) ; if ( ( ListMirakelInterface.ShowDoneCases == ListMirakelInterface . ShowDoneCases . ONLY_DONE ) && ! de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskAdapterCallbacks . boolean ( ) ) { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskAdapterCallbacks . void ( ) ; } } else { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setVisibility ( View . VISIBLE ) ; if ( de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskAdapterCallbacks . boolean ( ) ) { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( R . string . hide_done_tasks ) ; } else { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( R . string . show_done_tasks ) ; } } } else { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.ViewSwitcher . setDisplayedChild ( NUMBER ) ; final TaskOverview de.azapps.mirakel.new_ui.adapter.TaskOverview = new TaskOverview ( CursorGetter . unsafeGetter ( de.azapps.mirakel.new_ui.adapter.Cursor ) ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TaskOverview = de.azapps.mirakel.new_ui.adapter.TaskOverview ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TaskNameView . setText ( de.azapps.mirakel.new_ui.adapter.TaskOverview . getName ( ) ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TaskNameView . setStrikeThrough ( de.azapps.mirakel.new_ui.adapter.TaskOverview . isDone ( ) ) ; if ( de.azapps.mirakel.new_ui.adapter.TaskOverview . getDue ( ) . isPresent ( ) ) { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( DateTimeHelper . formatDate ( mContext , de.azapps.mirakel.new_ui.adapter.TaskOverview . getDue ( ) ) ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setTextColor ( TaskHelper . getTaskDueColor ( de.azapps.mirakel.new_ui.adapter.TaskOverview . getDue ( ) , de.azapps.mirakel.new_ui.adapter.TaskOverview . isDone ( ) ) ) ; } else { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setVisibility ( View . GONE ) ; } de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.TextView . setText ( de.azapps.mirakel.new_ui.adapter.TaskOverview . getListName ( ) ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.PriorityView . setPriority ( de.azapps.mirakel.new_ui.adapter.TaskOverview . getPriority ( ) ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.ProgressDoneView . setOnCheckedChangeListener ( null ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.ProgressDoneView . setChecked ( de.azapps.mirakel.new_ui.adapter.TaskOverview . isDone ( ) ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.ProgressDoneView . setProgress ( de.azapps.mirakel.new_ui.adapter.TaskOverview . getProgress ( ) ) ; de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.ProgressDoneView . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.new_ui.adapter.CompoundButton , final boolean boolean ) { final Optional < Task > de.azapps.mirakel.new_ui.adapter.Optional<de.azapps.mirakel.new_ui.adapter.Task> = de.azapps.mirakel.new_ui.adapter.TaskOverview . getTask ( ) ; if ( de.azapps.mirakel.new_ui.adapter.Optional<de.azapps.mirakel.new_ui.adapter.Task> . isPresent ( ) ) { final Task de.azapps.mirakel.new_ui.adapter.Task = de.azapps.mirakel.new_ui.adapter.Optional<de.azapps.mirakel.new_ui.adapter.Task> . get ( ) ; de.azapps.mirakel.new_ui.adapter.Task . setDone ( boolean ) ; de.azapps.mirakel.new_ui.adapter.Task . save ( ) ; } } } ) ; if ( Build . VERSION_CODES . LOLLIPOP <= Build . VERSION . SDK_INT ) { if ( selectedItems . get ( int ) ) { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.CardView . setBackgroundResource ( R . drawable . background_task_selected ) ; } else { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.CardView . setBackgroundResource ( R . drawable . background_task ) ; } } else { if ( selectedItems . get ( int ) ) { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.CardView . setCardBackgroundColor ( ThemeManager . getColor ( R . attr . colorSelectedRow ) ) ; } else { de.azapps.mirakel.new_ui.adapter.TaskAdapter.TaskViewHolder . de.azapps.mirakel.new_ui.adapter.CardView . setCardBackgroundColor ( ThemeManager . getColor ( R . attr . colorTaskCard ) ) ; } } } } 
@ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.new_ui.adapter.CompoundButton , final boolean boolean ) { final Optional < Task > de.azapps.mirakel.new_ui.adapter.Optional<de.azapps.mirakel.new_ui.adapter.Task> = de.azapps.mirakel.new_ui.adapter.TaskOverview . getTask ( ) ; if ( de.azapps.mirakel.new_ui.adapter.Optional<de.azapps.mirakel.new_ui.adapter.Task> . isPresent ( ) ) { final Task de.azapps.mirakel.new_ui.adapter.Task = de.azapps.mirakel.new_ui.adapter.Optional<de.azapps.mirakel.new_ui.adapter.Task> . get ( ) ; de.azapps.mirakel.new_ui.adapter.Task . setDone ( boolean ) ; de.azapps.mirakel.new_ui.adapter.Task . save ( ) ; } } 
public void ( final View de.azapps.mirakel.new_ui.adapter.View ) {            super(view); 
public static de.azapps.mirakel.new_ui.dialogs.PriorityDialog de.azapps.mirakel.new_ui.dialogs.PriorityDialog ( final @ Nullable de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener ) { de.azapps.mirakel.new_ui.dialogs.PriorityDialog de.azapps.mirakel.new_ui.dialogs.PriorityDialog = new de.azapps.mirakel.new_ui.dialogs.PriorityDialog ( ) ; de.azapps.mirakel.new_ui.dialogs.PriorityDialog . de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener = de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener ; de.azapps.mirakel.new_ui.dialogs.PriorityDialog . de.azapps.mirakel.new_ui.dialogs.Optional<java.lang.Integer> = absent ( ) ; return de.azapps.mirakel.new_ui.dialogs.PriorityDialog ; } 
public static de.azapps.mirakel.new_ui.dialogs.PriorityDialog de.azapps.mirakel.new_ui.dialogs.PriorityDialog ( final @ IntRange ( from = - NUMBER , to = NUMBER ) int int , final @ Nullable de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener ) { de.azapps.mirakel.new_ui.dialogs.PriorityDialog de.azapps.mirakel.new_ui.dialogs.PriorityDialog = new de.azapps.mirakel.new_ui.dialogs.PriorityDialog ( ) ; de.azapps.mirakel.new_ui.dialogs.PriorityDialog . de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener = de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener ; de.azapps.mirakel.new_ui.dialogs.PriorityDialog . de.azapps.mirakel.new_ui.dialogs.Optional<java.lang.Integer> = of ( int ) ; return de.azapps.mirakel.new_ui.dialogs.PriorityDialog ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.new_ui.dialogs.Dialog de.azapps.mirakel.new_ui.dialogs.Dialog ( Bundle de.azapps.mirakel.new_ui.dialogs.Bundle ) { final Dialog de.azapps.mirakel.new_ui.dialogs.Dialog = super. onCreateDialog ( de.azapps.mirakel.new_ui.dialogs.Bundle ) ; de.azapps.mirakel.new_ui.dialogs.Dialog . setTitle ( R . string . menu_set_priority ) ; return de.azapps.mirakel.new_ui.dialogs.Dialog ; } 
@ Nullable @ java.lang.Override public de.azapps.mirakel.new_ui.dialogs.View de.azapps.mirakel.new_ui.dialogs.View ( LayoutInflater de.azapps.mirakel.new_ui.dialogs.LayoutInflater , ViewGroup de.azapps.mirakel.new_ui.dialogs.ViewGroup , Bundle de.azapps.mirakel.new_ui.dialogs.Bundle ) { LinearLayout de.azapps.mirakel.new_ui.dialogs.LinearLayout = ( LinearLayout ) de.azapps.mirakel.new_ui.dialogs.LayoutInflater . inflate ( R . layout . priority_dialog , null ) ; ButterKnife . inject ( de.azapps.mirakel.new_ui.dialogs.LinearLayout ) ; if ( de.azapps.mirakel.new_ui.dialogs.Optional<java.lang.Integer> . isPresent ( ) ) { final @ IdRes int int ; switch ( de.azapps.mirakel.new_ui.dialogs.Optional<java.lang.Integer> . get ( ) ) { case - NUMBER : case - NUMBER : int = R . id . wrapper_priority_low ; break; case NUMBER : int = R . id . wrapper_priority_high ; break; case NUMBER : int = R . id . wrapper_priority_veryhigh ; break; case NUMBER : default: int = R . id . wrapper_priority_normal ; break; } ( ( RadioButton ) de.azapps.mirakel.new_ui.dialogs.LinearLayout . findViewById ( int ) . findViewById ( R . id . radio_priority ) ) . setChecked ( true ) ; } for ( int int = NUMBER ; int < de.azapps.mirakel.new_ui.dialogs.LinearLayout . getChildCount ( ) ; int ++ ) { de.azapps.mirakel.new_ui.dialogs.LinearLayout . getChildAt ( int ) . setOnClickListener ( this ) ; } return de.azapps.mirakel.new_ui.dialogs.LinearLayout ; } 
@ java.lang.Override @ OnClick ( { R . id . radio_priority , R . id . wrapper_priority_high , R . id . wrapper_priority_low , R . id . wrapper_priority_normal , R . id . wrapper_priority_veryhigh } ) public void void ( final View de.azapps.mirakel.new_ui.dialogs.View ) { if ( de.azapps.mirakel.new_ui.dialogs.View . getId ( ) == R . id . radio_priority && de.azapps.mirakel.new_ui.dialogs.View . getParent ( ) instanceof View ) { void ( ( View ) de.azapps.mirakel.new_ui.dialogs.View . getParent ( ) ) ; } if ( de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener != null ) { switch ( de.azapps.mirakel.new_ui.dialogs.View . getId ( ) ) { case R . id . wrapper_priority_veryhigh : de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener . void ( NUMBER ) ; break; case R . id . wrapper_priority_high : de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener . void ( NUMBER ) ; break; case R . id . wrapper_priority_low : de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener . void ( - NUMBER ) ; break; case R . id . wrapper_priority_normal : de.azapps.mirakel.new_ui.dialogs.PriorityDialog.OnPrioritySetListener . void ( NUMBER ) ; break; default: throw new java.lang.IllegalArgumentException ( STRING ) ; } } if ( de.azapps.mirakel.new_ui.dialogs.View . getParent ( ) instanceof LinearLayout ) { for ( int int = NUMBER ; int < ( ( LinearLayout ) de.azapps.mirakel.new_ui.dialogs.View . getParent ( ) ) . getChildCount ( ) ; int ++ ) { ( ( RadioButton ) ( ( LinearLayout ) de.azapps.mirakel.new_ui.dialogs.View . getParent ( ) ) . getChildAt ( int ) . findViewById ( R . id . radio_priority ) ) . setChecked ( false ) ; } ( ( RadioButton ) de.azapps.mirakel.new_ui.dialogs.View . findViewById ( R . id . radio_priority ) ) . setChecked ( true ) ; } dismiss ( ) ; } 
void void ( final @ IntRange ( from = - NUMBER , to = NUMBER ) int int ); 
public void ( ) {    } 
public static de.azapps.mirakel.new_ui.fragments.AddSubtaskFragment de.azapps.mirakel.new_ui.fragments.AddSubtaskFragment ( final Task de.azapps.mirakel.new_ui.fragments.Task ) { final de.azapps.mirakel.new_ui.fragments.AddSubtaskFragment de.azapps.mirakel.new_ui.fragments.AddSubtaskFragment = new de.azapps.mirakel.new_ui.fragments.AddSubtaskFragment ( ) ; final Bundle de.azapps.mirakel.new_ui.fragments.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.Task ) ; de.azapps.mirakel.new_ui.fragments.AddSubtaskFragment . setArguments ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; return de.azapps.mirakel.new_ui.fragments.AddSubtaskFragment ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { super. onCreate ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; setStyle ( DialogFragment . STYLE_NORMAL , R . style . DialogStyle ) ; final Bundle de.azapps.mirakel.new_ui.fragments.Bundle = getArguments ( ) ; de.azapps.mirakel.new_ui.fragments.Task = de.azapps.mirakel.new_ui.fragments.Bundle . getParcelable ( java.lang.String ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.fragments.Dialog de.azapps.mirakel.new_ui.fragments.Dialog ( final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { final View de.azapps.mirakel.new_ui.fragments.View = getActivity ( ) . getLayoutInflater ( ) . inflate ( R . layout . fragment_add_subtask , null ) ; ButterKnife . inject ( this , de.azapps.mirakel.new_ui.fragments.View ) ; de.azapps.mirakel.new_ui.fragments.MultiSelectModelAdapter<de.azapps.mirakel.new_ui.fragments.Task> = new MultiSelectModelAdapter <> ( getActivity ( ) , null , NUMBER , Task .class ) ; de.azapps.mirakel.new_ui.fragments.ListView . setAdapter ( de.azapps.mirakel.new_ui.fragments.MultiSelectModelAdapter<de.azapps.mirakel.new_ui.fragments.Task> ) ; getLoaderManager ( ) . initLoader ( NUMBER , null , this ) ; return new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) . setTitle ( R . string . add_subtask ) . setView ( de.azapps.mirakel.new_ui.fragments.View ) . setPositiveButton ( R . string . add , DialogInterface.OnClickListener ) . setNegativeButton ( android . R . string . cancel , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , int int ) { dismiss ( ) ; } } ) . create ( ) ; } 
public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , int int ) { dismiss ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.fragments.Loader de.azapps.mirakel.new_ui.fragments.Loader ( final int int , final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { final MirakelQueryBuilder de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder = new MirakelQueryBuilder ( getActivity ( ) ) ; Task . addBasicFiler ( de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder ) ; de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder . and ( Task . DONE , MirakelQueryBuilder . Operation . EQ , false ) ; if ( ! java.lang.String . boolean ( ) ) { de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder . and ( Task . NAME , MirakelQueryBuilder . Operation . LIKE , '%' + java.lang.String + '%' ) ; } de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder . and ( ModelBase . ID , MirakelQueryBuilder . Operation . NOT_IN , de.azapps.mirakel.new_ui.fragments.Task . getSubtasks ( ) ) ; de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder . and ( ModelBase . ID , MirakelQueryBuilder . Operation . NOT_EQ , de.azapps.mirakel.new_ui.fragments.Task ) ; return de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder . toSupportCursorLoader ( Task . URI ) ; } 
@ java.lang.Override public void void ( final Loader de.azapps.mirakel.new_ui.fragments.Loader , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.new_ui.fragments.MultiSelectModelAdapter<de.azapps.mirakel.new_ui.fragments.Task> . swapCursor ( ( Cursor ) java.lang.Object ) ; } 
@ java.lang.Override public void void ( final Loader de.azapps.mirakel.new_ui.fragments.Loader ) { de.azapps.mirakel.new_ui.fragments.MultiSelectModelAdapter<de.azapps.mirakel.new_ui.fragments.Task> . swapCursor ( null ) ; } 
@ OnClick ( R . id . subtask_new_task ) void void ( ) { if ( ! boolean ) { de.azapps.mirakel.new_ui.fragments.Button . setTextColor ( ThemeManager . getColor ( R . attr . colorTextBlack ) ) ; de.azapps.mirakel.new_ui.fragments.Button . setTextColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; boolean = true ; de.azapps.mirakel.new_ui.fragments.ViewSwitcher . showNext ( ) ; } } 
@ OnClick ( R . id . subtask_select_old ) void void ( ) { if ( boolean ) { de.azapps.mirakel.new_ui.fragments.Button . setTextColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; de.azapps.mirakel.new_ui.fragments.Button . setTextColor ( ThemeManager . getColor ( R . attr . colorTextBlack ) ) ; boolean = false ; de.azapps.mirakel.new_ui.fragments.ViewSwitcher . showNext ( ) ; } } 
private void void ( final java.lang.String java.lang.String ) { if ( ! java.lang.String . boolean ( ) ) { final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel = MirakelModelPreferences . getListForSubtask ( de.azapps.mirakel.new_ui.fragments.Task ) ; final Task de.azapps.mirakel.new_ui.fragments.Task = Semantic . createTask ( java.lang.String , Optional . fromNullable ( de.azapps.mirakel.new_ui.fragments.ListMirakel ) , true ) ; de.azapps.mirakel.new_ui.fragments.Task . addSubtask ( de.azapps.mirakel.new_ui.fragments.Task ) ; } } 
@ OnEditorAction ( R . id . subtask_add_task_edit ) boolean boolean ( final int int ) { if ( int == EditorInfo . IME_ACTION_SEND ) { void ( de.azapps.mirakel.new_ui.fragments.EditText . getText ( ) . toString ( ) ) ; dismiss ( ) ; return true ; } return false ; } 
@ OnTextChanged ( value = R . id . subtask_searchbox , callback = OnTextChanged . Callback . AFTER_TEXT_CHANGED ) void void ( ) { java.lang.String = de.azapps.mirakel.new_ui.fragments.EditText . getText ( ) . toString ( ) ; getLoaderManager ( ) . restartLoader ( NUMBER , null , de.azapps.mirakel.new_ui.fragments.AddSubtaskFragment .this ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , final int int ) { if ( boolean ) { void ( de.azapps.mirakel.new_ui.fragments.EditText . getText ( ) . toString ( ) ) ; } else { final java.util.Set<de.azapps.mirakel.new_ui.fragments.Task> < Task > java.util.Set<de.azapps.mirakel.new_ui.fragments.Task> = de.azapps.mirakel.new_ui.fragments.MultiSelectModelAdapter<de.azapps.mirakel.new_ui.fragments.Task> . getSelectedItems ( ) ; for ( final Task de.azapps.mirakel.new_ui.fragments.Task : java.util.Set<de.azapps.mirakel.new_ui.fragments.Task> ) { de.azapps.mirakel.new_ui.fragments.Task . addSubtask ( de.azapps.mirakel.new_ui.fragments.Task ) ; } } dismiss ( ) ; } 
public void ( ) { } 
public de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> < AccountMirakel > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ( ) { return de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ; } 
public void void ( final Optional < AccountMirakel > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) { this . de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ; final Bundle de.azapps.mirakel.new_ui.fragments.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . orNull ( ) ) ; getLoaderManager ( ) . restartLoader ( NUMBER , de.azapps.mirakel.new_ui.fragments.Bundle , this ) ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { super. onActivityCreated ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; de.azapps.mirakel.new_ui.fragments.ListAdapter = new ListAdapter ( getActivity ( ) , null , de.azapps.mirakel.new_ui.fragments.OnItemClickedListener<de.azapps.mirakel.new_ui.fragments.ListMirakel> , this ) ; getLoaderManager ( ) . initLoader ( NUMBER , null , this ) ; de.azapps.mirakel.new_ui.fragments.RecyclerView . setAdapter ( de.azapps.mirakel.new_ui.fragments.ListAdapter ) ; de.azapps.mirakel.new_ui.fragments.RecyclerView . setLayoutManager ( new LinearLayoutManager ( getActivity ( ) ) ) ; de.azapps.mirakel.new_ui.fragments.RecyclerView . setItemAnimator ( null ) ; final DragSortRecycler de.azapps.mirakel.new_ui.fragments.DragSortRecycler = new DragSortRecycler ( ) ; de.azapps.mirakel.new_ui.fragments.DragSortRecycler . setViewHandleId ( R . id . row_list_drag ) ; de.azapps.mirakel.new_ui.fragments.DragSortRecycler . setOnDragStateChangedListener ( new DragSortRecycler . DragSortRecycler ( ) { @ java.lang.Override public void void ( ) { ( ( LockableDrawer ) getActivity ( ) ) . lockDrawer ( ) ; } @ java.lang.Override public void void ( ) { ( ( LockableDrawer ) getActivity ( ) ) . unlockDrawer ( ) ; } } ) ; de.azapps.mirakel.new_ui.fragments.DragSortRecycler . setOnItemMovedListener ( this ) ; de.azapps.mirakel.new_ui.fragments.RecyclerView . addItemDecoration ( de.azapps.mirakel.new_ui.fragments.DragSortRecycler ) ; de.azapps.mirakel.new_ui.fragments.RecyclerView . addOnItemTouchListener ( de.azapps.mirakel.new_ui.fragments.DragSortRecycler ) ; de.azapps.mirakel.new_ui.fragments.RecyclerView . setOnScrollListener ( de.azapps.mirakel.new_ui.fragments.DragSortRecycler . getScrollListener ( ) ) ; } 
@ java.lang.Override public void void ( ) { ( ( LockableDrawer ) getActivity ( ) ) . lockDrawer ( ) ; } 
@ java.lang.Override public void void ( ) { ( ( LockableDrawer ) getActivity ( ) ) . unlockDrawer ( ) ; } 
@ java.lang.Override public void void ( final Activity de.azapps.mirakel.new_ui.fragments.Activity ) { super. onAttach ( de.azapps.mirakel.new_ui.fragments.Activity ) ; try { de.azapps.mirakel.new_ui.fragments.OnItemClickedListener<de.azapps.mirakel.new_ui.fragments.ListMirakel> = ( OnItemClickedListener < ListMirakel > ) de.azapps.mirakel.new_ui.fragments.Activity ; if ( ! ( ( de.azapps.mirakel.new_ui.fragments.Activity instanceof EventListener ) || ( de.azapps.mirakel.new_ui.fragments.Activity instanceof LockableDrawer ) ) ) { throw new java.lang.ClassCastException ( ) ; } } catch ( final java.lang.ClassCastException java.lang.ClassCastException ) { throw new java.lang.ClassCastException ( de.azapps.mirakel.new_ui.fragments.Activity . toString ( ) + STRING ) ; } } 
@ java.lang.Override public de.azapps.mirakel.new_ui.fragments.View de.azapps.mirakel.new_ui.fragments.View ( final LayoutInflater de.azapps.mirakel.new_ui.fragments.LayoutInflater , final ViewGroup de.azapps.mirakel.new_ui.fragments.ViewGroup , final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { final View de.azapps.mirakel.new_ui.fragments.View = de.azapps.mirakel.new_ui.fragments.LayoutInflater . inflate ( R . layout . fragment_lists , de.azapps.mirakel.new_ui.fragments.ViewGroup , false ) ; ButterKnife . inject ( this , de.azapps.mirakel.new_ui.fragments.View ) ; return de.azapps.mirakel.new_ui.fragments.View ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.fragments.Loader de.azapps.mirakel.new_ui.fragments.Loader ( final int int , final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { if ( de.azapps.mirakel.new_ui.fragments.Bundle != null ) { de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = Optional . fromNullable ( ( AccountMirakel ) de.azapps.mirakel.new_ui.fragments.Bundle . getParcelable ( java.lang.String ) ) ; if ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . isPresent ( ) && ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . get ( ) . getType ( ) == AccountMirakel . ACCOUNT_TYPES . ALL ) ) { de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = Optional . absent ( ) ; } final java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> < ListMirakel > java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> = de.azapps.mirakel.new_ui.fragments.Bundle . getParcelableArrayList ( java.lang.String ) ; if ( java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> != null ) { final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList <> ( Collections2 . transform ( java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> , new Function < ListMirakel , java.lang.Long > ( ) { @ java.lang.Override public java.lang.Long java.lang.Long ( @ Nullable final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ) { if ( de.azapps.mirakel.new_ui.fragments.ListMirakel != null ) { return de.azapps.mirakel.new_ui.fragments.ListMirakel . getId ( ) ; } else { return NUMBER ; } } } ) ) ; return ListMirakel . allWithSpecialMQB ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) . and ( ListMirakel . ID , MirakelQueryBuilder . Operation . NOT_IN , java.util.List<java.lang.Long> ) . toSupportCursorLoader ( MirakelInternalContentProvider . LIST_WITH_COUNT_URI ) ; } } return ListMirakel . allWithSpecialSupportCursorLoader ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) ; } 
@ java.lang.Override public java.lang.Long java.lang.Long ( @ Nullable final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ) { if ( de.azapps.mirakel.new_ui.fragments.ListMirakel != null ) { return de.azapps.mirakel.new_ui.fragments.ListMirakel . getId ( ) ; } else { return NUMBER ; } } 
@ java.lang.Override public void void ( final Loader de.azapps.mirakel.new_ui.fragments.Loader , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.new_ui.fragments.ListAdapter . swapCursor ( ( Cursor ) java.lang.Object ) ; } 
@ java.lang.Override public void void ( final Loader de.azapps.mirakel.new_ui.fragments.Loader ) { de.azapps.mirakel.new_ui.fragments.ListAdapter . swapCursor ( null ) ; } 
public void void ( ) { if ( de.azapps.mirakel.new_ui.fragments.ActionMode != null ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } } 
@ java.lang.Override public void void ( final boolean boolean ) { if ( boolean ) { de.azapps.mirakel.new_ui.fragments.ActionMode = getActivity ( ) . startActionMode ( this ) ; } else if ( de.azapps.mirakel.new_ui.fragments.ActionMode != null ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } } 
@ java.lang.Override public boolean boolean ( @ NonNull final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ) { if ( ! de.azapps.mirakel.new_ui.fragments.ListMirakel . isDeletable ( ) && ! de.azapps.mirakel.new_ui.fragments.ListMirakel . isEditable ( ) ) { SnackbarManager . show ( Snackbar . with ( getActivity ( ) ) . text ( R . string . can_not_edit_list ) . eventListener ( new SnackBarEventListener ( ) ) , getActivity ( ) ) ; return false ; } else { return true ; } } 
@ java.lang.Override public void void ( @ NonNull final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ) { void ( de.azapps.mirakel.new_ui.fragments.ListAdapter . getSelectedItemCount ( ) ) ; if ( ( de.azapps.mirakel.new_ui.fragments.ListAdapter . getSelectedItemCount ( ) > NUMBER ) && ( de.azapps.mirakel.new_ui.fragments.ActionMode == null ) ) { void ( true ) ; } if ( de.azapps.mirakel.new_ui.fragments.ListMirakel . isEditable ( ) ) { int ++ ; if ( int == NUMBER ) { de.azapps.mirakel.new_ui.fragments.ActionMode . getMenu ( ) . findItem ( R . id . menu_edit ) . setVisible ( true ) ; } else { de.azapps.mirakel.new_ui.fragments.ActionMode . getMenu ( ) . findItem ( R . id . menu_edit ) . setVisible ( false ) ; } } if ( de.azapps.mirakel.new_ui.fragments.ListMirakel . isDeletable ( ) ) { int ++ ; if ( int == NUMBER ) { de.azapps.mirakel.new_ui.fragments.ActionMode . getMenu ( ) . findItem ( R . id . menu_delete ) . setVisible ( true ) ; } } } 
@ java.lang.Override public void void ( @ NonNull final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ) { final int int = de.azapps.mirakel.new_ui.fragments.ListAdapter . getSelectedItemCount ( ) ; if ( ( int > NUMBER ) && ( de.azapps.mirakel.new_ui.fragments.ActionMode == null ) ) { void ( true ) ; } void ( int ) ; if ( int > NUMBER ) { if ( ( int == NUMBER ) && de.azapps.mirakel.new_ui.fragments.ListMirakel . isEditable ( ) ) { de.azapps.mirakel.new_ui.fragments.ActionMode . getMenu ( ) . findItem ( R . id . menu_edit ) . setVisible ( true ) ; } if ( de.azapps.mirakel.new_ui.fragments.ListMirakel . isDeletable ( ) ) { int -- ; if ( int == NUMBER ) { de.azapps.mirakel.new_ui.fragments.ActionMode . getMenu ( ) . findItem ( R . id . menu_delete ) . setVisible ( false ) ; } } } } 
public void void ( final int int ) { if ( de.azapps.mirakel.new_ui.fragments.ActionMode == null ) { void ( true ) ; } if ( int == NUMBER ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } else { de.azapps.mirakel.new_ui.fragments.ActionMode . setTitle ( getResources ( ) . getQuantityString ( R . plurals . list_multiselect_title , int , int ) ) ; } } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , final Menu de.azapps.mirakel.new_ui.fragments.Menu ) { final int int = de.azapps.mirakel.new_ui.fragments.ListAdapter . getSelectedItemCount ( ) ; final MenuInflater de.azapps.mirakel.new_ui.fragments.MenuInflater = de.azapps.mirakel.new_ui.fragments.ActionMode . getMenuInflater ( ) ; de.azapps.mirakel.new_ui.fragments.MenuInflater . inflate ( R . menu . multiselect_lists , de.azapps.mirakel.new_ui.fragments.Menu ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { getActivity ( ) . getWindow ( ) . setStatusBarColor ( ThemeManager . getColor ( R . attr . colorCABStatus ) ) ; } de.azapps.mirakel.new_ui.fragments.ActionMode . setTitle ( getResources ( ) . getQuantityString ( R . plurals . list_multiselect_title , int , int ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , final Menu de.azapps.mirakel.new_ui.fragments.Menu ) { return true ; } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , final MenuItem de.azapps.mirakel.new_ui.fragments.MenuItem ) { final java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> < ListMirakel > java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> = new java.util.ArrayList <> ( Collections2 . transform ( de.azapps.mirakel.new_ui.fragments.ListAdapter . getSelectedItems ( ) , new Function < ListMirakel , ListMirakel > ( ) { @ java.lang.Override public de.azapps.mirakel.new_ui.fragments.ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ( @ Nullable ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ) { if ( ( de.azapps.mirakel.new_ui.fragments.ListMirakel != null ) && de.azapps.mirakel.new_ui.fragments.ListMirakel . isSpecial ( ) ) { return SpecialList . get ( de.azapps.mirakel.new_ui.fragments.ListMirakel . getId ( ) ) . get ( ) ; } return de.azapps.mirakel.new_ui.fragments.ListMirakel ; } } ) ) ; switch ( de.azapps.mirakel.new_ui.fragments.MenuItem . getItemId ( ) ) { case R . id . menu_delete : void ( java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> ) ; break; case R . id . menu_edit : void ( java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> . get ( NUMBER ) ) ; break; default: return false ; } de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; return true ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.fragments.ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ( @ Nullable ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ) { if ( ( de.azapps.mirakel.new_ui.fragments.ListMirakel != null ) && de.azapps.mirakel.new_ui.fragments.ListMirakel . isSpecial ( ) ) { return SpecialList . get ( de.azapps.mirakel.new_ui.fragments.ListMirakel . getId ( ) ) . get ( ) ; } return de.azapps.mirakel.new_ui.fragments.ListMirakel ; } 
private void void ( final java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> < ListMirakel > java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> ) { final Bundle de.azapps.mirakel.new_ui.fragments.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . orNull ( ) ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelableArrayList ( java.lang.String , java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> ) ; getLoaderManager ( ) . restartLoader ( NUMBER , de.azapps.mirakel.new_ui.fragments.Bundle , this ) ; final int int = java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> . size ( ) ; SnackbarManager . show ( Snackbar . with ( getActivity ( ) ) . text ( getResources ( ) . getQuantityString ( R . plurals . list_multiselect_deleted , int , int ) ) . actionLabel ( R . string . undo ) . actionListener ( new ActionClickListener ( ) { @ java.lang.Override public void void ( Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> . clear ( ) ; } } ) . eventListener ( new SnackBarEventListener ( ) { @ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { super. onDismiss ( de.azapps.mirakel.new_ui.fragments.Snackbar ) ; ( ( MirakelActivity ) getActivity ( ) ) . moveFabDown ( de.azapps.mirakel.new_ui.fragments.Snackbar . getHeight ( ) ) ; new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { for ( final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel : java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> ) { de.azapps.mirakel.new_ui.fragments.ListMirakel . destroy ( ) ; } de.azapps.mirakel.new_ui.fragments.RecyclerView . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) ; } } ) ; } } ) . void ( ) ; } @ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { ( ( MirakelActivity ) getActivity ( ) ) . moveFABUp ( de.azapps.mirakel.new_ui.fragments.Snackbar . getHeight ( ) ) ; } } ) , getActivity ( ) ) ; } 
@ java.lang.Override public void void ( Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> . clear ( ) ; } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { super. onDismiss ( de.azapps.mirakel.new_ui.fragments.Snackbar ) ; ( ( MirakelActivity ) getActivity ( ) ) . moveFabDown ( de.azapps.mirakel.new_ui.fragments.Snackbar . getHeight ( ) ) ; new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { for ( final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel : java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> ) { de.azapps.mirakel.new_ui.fragments.ListMirakel . destroy ( ) ; } de.azapps.mirakel.new_ui.fragments.RecyclerView . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) ; } } ) ; } } ) . void ( ) ; } 
@ java.lang.Override public void void ( ) { for ( final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel : java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.ListMirakel> ) { de.azapps.mirakel.new_ui.fragments.ListMirakel . destroy ( ) ; } de.azapps.mirakel.new_ui.fragments.RecyclerView . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) ; } } ) ; } 
@ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) ; } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { ( ( MirakelActivity ) getActivity ( ) ) . moveFABUp ( de.azapps.mirakel.new_ui.fragments.Snackbar . getHeight ( ) ) ; } 
public void void ( final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ) { Context de.azapps.mirakel.new_ui.fragments.Context = new ContextThemeWrapper ( getActivity ( ) , R . style . MirakelBaseTheme ) ; final ListEditView de.azapps.mirakel.new_ui.fragments.ListEditView = new ListEditView ( de.azapps.mirakel.new_ui.fragments.Context ) ; de.azapps.mirakel.new_ui.fragments.ListEditView . setListMirakel ( de.azapps.mirakel.new_ui.fragments.ListMirakel ) ; final Dialog de.azapps.mirakel.new_ui.fragments.Dialog = new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.new_ui.fragments.Context ) . setView ( de.azapps.mirakel.new_ui.fragments.ListEditView ) . setTitle ( R . string . list_edit_title ) . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , final int int ) { de.azapps.mirakel.new_ui.fragments.ListEditView . saveList ( ) ; de.azapps.mirakel.new_ui.fragments.ListEditView . closeKeyBoard ( ) ; } } ) . setNegativeButton ( android . R . string . cancel , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , int int ) { de.azapps.mirakel.new_ui.fragments.ListEditView . closeKeyBoard ( ) ; } } ) . create ( ) ; de.azapps.mirakel.new_ui.fragments.Dialog . setOnShowListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { de.azapps.mirakel.new_ui.fragments.ListEditView . openKeyBoard ( ) ; } } ) ; de.azapps.mirakel.new_ui.fragments.Dialog . show ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , final int int ) { de.azapps.mirakel.new_ui.fragments.ListEditView . saveList ( ) ; de.azapps.mirakel.new_ui.fragments.ListEditView . closeKeyBoard ( ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , int int ) { de.azapps.mirakel.new_ui.fragments.ListEditView . closeKeyBoard ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { de.azapps.mirakel.new_ui.fragments.ListEditView . openKeyBoard ( ) ; } 
@ java.lang.Override public void void ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode ) { de.azapps.mirakel.new_ui.fragments.ListAdapter . clearSelections ( ) ; de.azapps.mirakel.new_ui.fragments.ActionMode = null ; int = NUMBER ; int = NUMBER ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { getActivity ( ) . getWindow ( ) . setStatusBarColor ( ThemeManager . getColor ( R . attr . colorPrimaryDark ) ) ; } } 
@ java.lang.Override public void void ( final int int , final int int ) { de.azapps.mirakel.new_ui.fragments.ListAdapter . onItemMoved ( int , int ) ; final int int = MirakelModelPreferences . getDividerPosition ( ) ; final int int ; final int int ; final boolean boolean ; if ( ( int < int ) && ( int >= int ) ) { MirakelModelPreferences . setDividerPosition ( int - NUMBER ) ; int = int ; int = int - NUMBER ; boolean = true ; } else if ( ( int > int ) && ( int <= int ) ) { MirakelModelPreferences . setDividerPosition ( int + NUMBER ) ; int = int - NUMBER ; int = int ; boolean = true ; } else if ( ( int > int ) && ( int > int ) ) { int = int - NUMBER ; int = int - NUMBER ; boolean = false ; } else { int = int ; int = int ; boolean = false ; } final Cursor de.azapps.mirakel.new_ui.fragments.Cursor = de.azapps.mirakel.new_ui.fragments.ListAdapter . getCursor ( ) ; de.azapps.mirakel.new_ui.fragments.Cursor . moveToPosition ( int ) ; final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel = new ListMirakel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.new_ui.fragments.Cursor ) ) ; de.azapps.mirakel.new_ui.fragments.Cursor . moveToPosition ( int ) ; final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel = new ListMirakel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.new_ui.fragments.Cursor ) ) ; MirakelInternalContentProvider . withTransaction ( new MirakelInternalContentProvider . MirakelInternalContentProvider ( ) { @ java.lang.Override public void void ( ) { for ( final java.lang.String java.lang.String : new java.lang.String [] { SpecialList . TABLE , ListMirakel . TABLE } ) { final ContentValues de.azapps.mirakel.new_ui.fragments.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.new_ui.fragments.ContentValues . put ( STRING , java.lang.String ) ; if ( int < int ) { getActivity ( ) . getContentResolver ( ) . update ( MirakelInternalContentProvider . UPDATE_LIST_MOVE_UP_URI , de.azapps.mirakel.new_ui.fragments.ContentValues , ListMirakel . LFT + STRING + de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) + STRING + ListMirakel . LFT + STRING + de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) , null ) ; } else if ( int > int ) { getActivity ( ) . getContentResolver ( ) . update ( MirakelInternalContentProvider . UPDATE_LIST_MOVE_DOWN_URI , de.azapps.mirakel.new_ui.fragments.ContentValues , ListMirakel . LFT + STRING + de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) + STRING + ListMirakel . LFT + STRING + de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) , null ) ; } else if ( boolean ) { void ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) ; return; } else { return; } getActivity ( ) . getContentResolver ( ) . update ( MirakelInternalContentProvider . UPDATE_LIST_FIX_RGT_URI , de.azapps.mirakel.new_ui.fragments.ContentValues , null , null ) ; } de.azapps.mirakel.new_ui.fragments.ListMirakel . setLft ( de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) ) ; de.azapps.mirakel.new_ui.fragments.ListMirakel . setRgt ( de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) + NUMBER ) ; de.azapps.mirakel.new_ui.fragments.ListMirakel . save ( ) ; } } ) ; } 
@ java.lang.Override public void void ( ) { for ( final java.lang.String java.lang.String : new java.lang.String [] { SpecialList . TABLE , ListMirakel . TABLE } ) { final ContentValues de.azapps.mirakel.new_ui.fragments.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.new_ui.fragments.ContentValues . put ( STRING , java.lang.String ) ; if ( int < int ) { getActivity ( ) . getContentResolver ( ) . update ( MirakelInternalContentProvider . UPDATE_LIST_MOVE_UP_URI , de.azapps.mirakel.new_ui.fragments.ContentValues , ListMirakel . LFT + STRING + de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) + STRING + ListMirakel . LFT + STRING + de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) , null ) ; } else if ( int > int ) { getActivity ( ) . getContentResolver ( ) . update ( MirakelInternalContentProvider . UPDATE_LIST_MOVE_DOWN_URI , de.azapps.mirakel.new_ui.fragments.ContentValues , ListMirakel . LFT + STRING + de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) + STRING + ListMirakel . LFT + STRING + de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) , null ) ; } else if ( boolean ) { void ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ) ; return; } else { return; } getActivity ( ) . getContentResolver ( ) . update ( MirakelInternalContentProvider . UPDATE_LIST_FIX_RGT_URI , de.azapps.mirakel.new_ui.fragments.ContentValues , null , null ) ; } de.azapps.mirakel.new_ui.fragments.ListMirakel . setLft ( de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) ) ; de.azapps.mirakel.new_ui.fragments.ListMirakel . setRgt ( de.azapps.mirakel.new_ui.fragments.ListMirakel . getLft ( ) + NUMBER ) ; de.azapps.mirakel.new_ui.fragments.ListMirakel . save ( ) ; } 
@ java.lang.Override public void void ( ) {    } 
@ java.lang.Override public void void ( ) {    } 
@ java.lang.Override public void void ( ) { void ( ) ; } 
@ java.lang.Override public void void ( final long long ) { if ( long == de.azapps.mirakel.new_ui.fragments.Task . getId ( ) ) { void ( ) ; } } 
public static de.azapps.mirakel.new_ui.fragments.TaskFragment de.azapps.mirakel.new_ui.fragments.TaskFragment ( final Task de.azapps.mirakel.new_ui.fragments.Task ) { final de.azapps.mirakel.new_ui.fragments.TaskFragment de.azapps.mirakel.new_ui.fragments.TaskFragment = new de.azapps.mirakel.new_ui.fragments.TaskFragment ( ) ; final Bundle de.azapps.mirakel.new_ui.fragments.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.Task ) ; de.azapps.mirakel.new_ui.fragments.TaskFragment . setArguments ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; return de.azapps.mirakel.new_ui.fragments.TaskFragment ; } 
private void void ( ) { final Optional < Task > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> = Task . get ( de.azapps.mirakel.new_ui.fragments.Task . getId ( ) ) ; if ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> . isPresent ( ) ) { de.azapps.mirakel.new_ui.fragments.Task = de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> . get ( ) ; } void ( ) ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { super. onSaveInstanceState ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.Task ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.EditText . onSaveInstanceState ( ) ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putInt ( java.lang.String , de.azapps.mirakel.new_ui.fragments.EditText . getSelectionEnd ( ) ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putInt ( java.lang.String , de.azapps.mirakel.new_ui.fragments.ViewSwitcher . getCurrentView ( ) . getId ( ) ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.fragments.LinearLayout . getVisibility ( ) == View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.fragments.LinearLayout . getVisibility ( ) == View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.fragments.LinearLayout . getVisibility ( ) == View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.fragments.LinearLayout . getVisibility ( ) == View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.fragments.EditText . hasFocus ( ) ) ; if ( de.azapps.mirakel.new_ui.fragments.Dialog != null ) { de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.Dialog . onSaveInstanceState ( ) ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.fragments.Dialog . isShowing ( ) ) ; } } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { super. onViewStateRestored ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; if ( de.azapps.mirakel.new_ui.fragments.Bundle != null ) { if ( de.azapps.mirakel.new_ui.fragments.EditText != null ) { de.azapps.mirakel.new_ui.fragments.EditText . onRestoreInstanceState ( de.azapps.mirakel.new_ui.fragments.Bundle . getParcelable ( java.lang.String ) ) ; } if ( de.azapps.mirakel.new_ui.fragments.ViewSwitcher != null ) { while ( de.azapps.mirakel.new_ui.fragments.ViewSwitcher . getCurrentView ( ) . getId ( ) != de.azapps.mirakel.new_ui.fragments.Bundle . getInt ( java.lang.String ) ) { de.azapps.mirakel.new_ui.fragments.ViewSwitcher . showNext ( ) ; } if ( de.azapps.mirakel.new_ui.fragments.Bundle . getInt ( java.lang.String ) == de.azapps.mirakel.new_ui.fragments.EditText . getId ( ) && de.azapps.mirakel.new_ui.fragments.Bundle . getBoolean ( java.lang.String ) ) { de.azapps.mirakel.new_ui.fragments.EditText . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.EditText . requestFocus ( ) ; de.azapps.mirakel.new_ui.fragments.EditText . setSelection ( de.azapps.mirakel.new_ui.fragments.Bundle . getInt ( java.lang.String ) ) ; } } , NUMBER ) ; } } void ( de.azapps.mirakel.new_ui.fragments.LinearLayout , java.lang.String , de.azapps.mirakel.new_ui.fragments.Bundle , R . id . add_note_menu ) ; void ( de.azapps.mirakel.new_ui.fragments.LinearLayout , java.lang.String , de.azapps.mirakel.new_ui.fragments.Bundle , R . id . add_file_menu ) ; void ( de.azapps.mirakel.new_ui.fragments.LinearLayout , java.lang.String , de.azapps.mirakel.new_ui.fragments.Bundle , R . id . add_tags_menu ) ; void ( de.azapps.mirakel.new_ui.fragments.LinearLayout , java.lang.String , de.azapps.mirakel.new_ui.fragments.Bundle , R . id . add_subtask_menu ) ; de.azapps.mirakel.new_ui.fragments.FileView . setActivity ( getActivity ( ) ) ; if ( de.azapps.mirakel.new_ui.fragments.Bundle . getParcelable ( java.lang.String ) != null ) { de.azapps.mirakel.new_ui.fragments.Dialog = de.azapps.mirakel.new_ui.fragments.Dialog ( ) ; de.azapps.mirakel.new_ui.fragments.Dialog . onRestoreInstanceState ( ( Bundle ) de.azapps.mirakel.new_ui.fragments.Bundle . getParcelable ( java.lang.String ) ) ; if ( de.azapps.mirakel.new_ui.fragments.Bundle . getBoolean ( java.lang.String , false ) && ! de.azapps.mirakel.new_ui.fragments.Dialog . isShowing ( ) ) { de.azapps.mirakel.new_ui.fragments.Dialog . show ( ) ; } } } } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.EditText . requestFocus ( ) ; de.azapps.mirakel.new_ui.fragments.EditText . setSelection ( de.azapps.mirakel.new_ui.fragments.Bundle . getInt ( java.lang.String ) ) ; } 
@ java.lang.Override public void void ( Activity de.azapps.mirakel.new_ui.fragments.Activity ) { super. onAttach ( de.azapps.mirakel.new_ui.fragments.Activity ) ; if ( de.azapps.mirakel.new_ui.fragments.FileView != null ) { de.azapps.mirakel.new_ui.fragments.FileView . setActivity ( de.azapps.mirakel.new_ui.fragments.Activity ) ; } } 
@ java.lang.Override public void void ( ) { super. onDetach ( ) ; if ( de.azapps.mirakel.new_ui.fragments.FileView != null ) { de.azapps.mirakel.new_ui.fragments.FileView . setActivity ( null ) ; } } 
void void ( final @ Nullable View de.azapps.mirakel.new_ui.fragments.View , final @ NonNull java.lang.String java.lang.String , final @ NonNull Bundle de.azapps.mirakel.new_ui.fragments.Bundle , final @ IdRes int int ) { if ( de.azapps.mirakel.new_ui.fragments.View != null && de.azapps.mirakel.new_ui.fragments.Bundle . getBoolean ( java.lang.String ) && de.azapps.mirakel.new_ui.fragments.View . getVisibility ( ) != View . VISIBLE ) { de.azapps.mirakel.new_ui.fragments.View . setVisibility ( View . VISIBLE ) ; void ( ) ; void ( de.azapps.mirakel.new_ui.fragments.IconizedMenu . getMenu ( ) , int ) ; } } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { setStyle ( DialogFragment . STYLE_NO_TITLE , ThemeManager . getDialogTheme ( ) ) ; java.util.Locale . void ( Helpers . getLocale ( getActivity ( ) ) ) ; super. onCreate ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; if ( de.azapps.mirakel.new_ui.fragments.Bundle != null ) { de.azapps.mirakel.new_ui.fragments.Task = de.azapps.mirakel.new_ui.fragments.Bundle . getParcelable ( java.lang.String ) ; } else { final Bundle de.azapps.mirakel.new_ui.fragments.Bundle = getArguments ( ) ; de.azapps.mirakel.new_ui.fragments.Task = de.azapps.mirakel.new_ui.fragments.Bundle . getParcelable ( java.lang.String ) ; } setRetainInstance ( true ) ; void ( ) ; } 
private void void ( ) { void ( ) ; de.azapps.mirakel.new_ui.fragments.MirakelContentObserver = new MirakelContentObserver ( new Handler ( Looper . getMainLooper ( ) ) , getActivity ( ) , Task . URI , this ) ; } 
private void void ( ) { if ( ( de.azapps.mirakel.new_ui.fragments.MirakelContentObserver != null ) && ( getActivity ( ) != null ) && ( getActivity ( ) . getContentResolver ( ) != null ) ) { getActivity ( ) . getContentResolver ( ) . unregisterContentObserver ( de.azapps.mirakel.new_ui.fragments.MirakelContentObserver ) ; } } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { void ( ) ; super. onDismiss ( de.azapps.mirakel.new_ui.fragments.DialogInterface ) ; final boolean boolean = boolean ( ) ; if ( ! boolean && de.azapps.mirakel.new_ui.fragments.Task . isStub ( ) && de.azapps.mirakel.new_ui.fragments.Task . getName ( ) . equals ( getString ( R . string . task_new ) ) ) { de.azapps.mirakel.new_ui.fragments.Task . destroy ( ) ; } else { de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } } 
@ java.lang.Override public de.azapps.mirakel.new_ui.fragments.View de.azapps.mirakel.new_ui.fragments.View ( final LayoutInflater de.azapps.mirakel.new_ui.fragments.LayoutInflater , final ViewGroup de.azapps.mirakel.new_ui.fragments.ViewGroup , final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { final View de.azapps.mirakel.new_ui.fragments.View = de.azapps.mirakel.new_ui.fragments.LayoutInflater . inflate ( R . layout . fragment_task , de.azapps.mirakel.new_ui.fragments.ViewGroup , false ) ; de.azapps.mirakel.new_ui.fragments.SoftKeyboard = new SoftKeyboard ( ( ViewGroup ) de.azapps.mirakel.new_ui.fragments.View ) ; de.azapps.mirakel.new_ui.fragments.SoftKeyboard . setSoftKeyboardCallback ( this ) ; ButterKnife . inject ( this , de.azapps.mirakel.new_ui.fragments.View ) ; void ( ) ; void ( ) ; return de.azapps.mirakel.new_ui.fragments.View ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
@ java.lang.Override public void void ( final int int , final int int , final Intent de.azapps.mirakel.new_ui.fragments.Intent ) { if ( ( int == int ) && ( int == Activity . RESULT_OK ) ) { de.azapps.mirakel.new_ui.fragments.FileView . addPhoto ( ) ; } else if ( ( int == int ) && ( int == Activity . RESULT_OK ) ) { de.azapps.mirakel.new_ui.fragments.FileView . addFile ( de.azapps.mirakel.new_ui.fragments.Intent . getData ( ) ) ; } } 
private void void ( ) { int = NUMBER ; de.azapps.mirakel.new_ui.fragments.IconizedMenu = new IconizedMenu ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.Button ) ; de.azapps.mirakel.new_ui.fragments.IconizedMenu . inflate ( R . menu . add_more_menu ) ; final Menu de.azapps.mirakel.new_ui.fragments.Menu = de.azapps.mirakel.new_ui.fragments.IconizedMenu . getMenu ( ) ; if ( de.azapps.mirakel.new_ui.fragments.Task . getContent ( ) . isEmpty ( ) ) { de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . GONE ) ; } else { void ( ) ; void ( de.azapps.mirakel.new_ui.fragments.Menu , R . id . add_note_menu ) ; } if ( de.azapps.mirakel.new_ui.fragments.Task . getFiles ( ) . isEmpty ( ) ) { de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . GONE ) ; } else { void ( ) ; void ( de.azapps.mirakel.new_ui.fragments.Menu , R . id . add_file_menu ) ; } if ( de.azapps.mirakel.new_ui.fragments.Task . getSubtasks ( ) . isEmpty ( ) ) { de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . GONE ) ; } else { void ( ) ; void ( de.azapps.mirakel.new_ui.fragments.Menu , R . id . add_subtask_menu ) ; } if ( de.azapps.mirakel.new_ui.fragments.Task . getTags ( ) . isEmpty ( ) ) { de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . GONE ) ; } else { void ( ) ; void ( de.azapps.mirakel.new_ui.fragments.Menu , R . id . add_tags_menu ) ; } MenuHelper . showMenuIcons ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.Menu ) ; MenuHelper . colorizeMenuItems ( de.azapps.mirakel.new_ui.fragments.Menu , ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; de.azapps.mirakel.new_ui.fragments.IconizedMenu . setOnMenuItemClickListener ( new IconizedMenu . IconizedMenu ( ) { @ java.lang.Override public boolean boolean ( final MenuItem de.azapps.mirakel.new_ui.fragments.MenuItem ) { de.azapps.mirakel.new_ui.fragments.MenuItem . setVisible ( false ) ; switch ( de.azapps.mirakel.new_ui.fragments.MenuItem . getItemId ( ) ) { case R . id . add_note_menu : de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.NoteView . handleEditNote ( ) ; break; case R . id . add_subtask_menu : de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.SubtasksView . handleAddSubtask ( ) ; break; case R . id . add_tags_menu : de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.LinearLayout . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.AddTagView . clearFocus ( ) ; de.azapps.mirakel.new_ui.fragments.AddTagView . onClick ( de.azapps.mirakel.new_ui.fragments.AddTagView ) ; } } , NUMBER ) ; break; case R . id . add_file_menu : de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.FileView . addFile ( ) ; break; } void ( ) ; return false ; } } ) ; } 
@ java.lang.Override public boolean boolean ( final MenuItem de.azapps.mirakel.new_ui.fragments.MenuItem ) { de.azapps.mirakel.new_ui.fragments.MenuItem . setVisible ( false ) ; switch ( de.azapps.mirakel.new_ui.fragments.MenuItem . getItemId ( ) ) { case R . id . add_note_menu : de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.NoteView . handleEditNote ( ) ; break; case R . id . add_subtask_menu : de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.SubtasksView . handleAddSubtask ( ) ; break; case R . id . add_tags_menu : de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.LinearLayout . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.AddTagView . clearFocus ( ) ; de.azapps.mirakel.new_ui.fragments.AddTagView . onClick ( de.azapps.mirakel.new_ui.fragments.AddTagView ) ; } } , NUMBER ) ; break; case R . id . add_file_menu : de.azapps.mirakel.new_ui.fragments.LinearLayout . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.fragments.FileView . addFile ( ) ; break; } void ( ) ; return false ; } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.AddTagView . clearFocus ( ) ; de.azapps.mirakel.new_ui.fragments.AddTagView . onClick ( de.azapps.mirakel.new_ui.fragments.AddTagView ) ; } 
private static void void ( final Menu de.azapps.mirakel.new_ui.fragments.Menu , final int int ) { final MenuItem de.azapps.mirakel.new_ui.fragments.MenuItem = de.azapps.mirakel.new_ui.fragments.Menu . findItem ( int ) ; if ( de.azapps.mirakel.new_ui.fragments.MenuItem != null ) { de.azapps.mirakel.new_ui.fragments.MenuItem . setVisible ( false ) ; } } 
@ OnClick ( R . id . task_button_add_more ) void void ( ) { de.azapps.mirakel.new_ui.fragments.IconizedMenu . show ( ) ; } 
private void void ( ) { int = int - NUMBER ; if ( int < NUMBER ) { de.azapps.mirakel.new_ui.fragments.Button . setTextColor ( ThemeManager . getColor ( R . attr . colorLightGrey ) ) ; de.azapps.mirakel.new_ui.fragments.Button . setEnabled ( false ) ; ViewHelper . setCompoundDrawable ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.Button , ThemeManager . getColoredIcon ( R . drawable . ic_plus_white_18dp , ThemeManager . getColor ( R . attr . colorLightGrey ) ) ) ; } } 
@ java.lang.Override public void void ( ) { if ( ( getDialog ( ) != null ) && getRetainInstance ( ) ) { getDialog ( ) . setOnDismissListener ( null ) ; } super. onDestroyView ( ) ; ButterKnife . reset ( this ) ; } 
private void void ( ) { de.azapps.mirakel.new_ui.fragments.ProgressDoneView . setProgress ( de.azapps.mirakel.new_ui.fragments.Task . getProgress ( ) ) ; de.azapps.mirakel.new_ui.fragments.ProgressDoneView . setChecked ( de.azapps.mirakel.new_ui.fragments.Task . isDone ( ) ) ; de.azapps.mirakel.new_ui.fragments.ProgressDoneView . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.new_ui.fragments.CompoundButton , final boolean boolean ) { de.azapps.mirakel.new_ui.fragments.Task . setDone ( boolean ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } } ) ; de.azapps.mirakel.new_ui.fragments.TextView . setText ( de.azapps.mirakel.new_ui.fragments.Task . getName ( ) ) ; void ( ) ; final Drawable de.azapps.mirakel.new_ui.fragments.Drawable = ThemeManager . getColoredIcon ( R . drawable . ic_track_changes_white_18dp , ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; ViewHelper . setCompoundDrawable ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.TextView , de.azapps.mirakel.new_ui.fragments.Drawable ) ; de.azapps.mirakel.new_ui.fragments.Slider . setProgress ( de.azapps.mirakel.new_ui.fragments.Task . getProgress ( ) ) ; de.azapps.mirakel.new_ui.fragments.Slider . setOnSeekBarChangeListener ( new SeekBar . SeekBar ( ) { @ java.lang.Override public void void ( SeekBar de.azapps.mirakel.new_ui.fragments.SeekBar , final int int , boolean boolean ) { new java.lang.Thread ( new java.lang.Runnable ( ) { public void void ( ) { if ( de.azapps.mirakel.new_ui.fragments.Task . getProgress ( ) == NUMBER && int > NUMBER ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SET_PROGRESS ) ; } de.azapps.mirakel.new_ui.fragments.Task . setProgress ( int ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } } ) . void ( ) ; } @ java.lang.Override public void void ( SeekBar de.azapps.mirakel.new_ui.fragments.SeekBar ) {            } @ java.lang.Override public void void ( SeekBar de.azapps.mirakel.new_ui.fragments.SeekBar ) {            } } ) ; de.azapps.mirakel.new_ui.fragments.NoteView . setNote ( de.azapps.mirakel.new_ui.fragments.Task . getContent ( ) ) ; de.azapps.mirakel.new_ui.fragments.NoteView . setOnNoteChangedListener ( de.azapps.mirakel.new_ui.fragments.Procedure<java.lang.String> ) ; de.azapps.mirakel.new_ui.fragments.DatesView . setData ( de.azapps.mirakel.new_ui.fragments.Task ) ; de.azapps.mirakel.new_ui.fragments.DatesView . setListeners ( View.OnClickListener , View.OnClickListener , View.OnClickListener , View.OnClickListener ) ; de.azapps.mirakel.new_ui.fragments.PriorityChangeView . setPriority ( de.azapps.mirakel.new_ui.fragments.Task . getPriority ( ) ) ; de.azapps.mirakel.new_ui.fragments.PriorityChangeView . setOnPriorityChangeListener ( this ) ; de.azapps.mirakel.new_ui.fragments.TagsView . setTags ( de.azapps.mirakel.new_ui.fragments.Task . getTags ( ) ) ; de.azapps.mirakel.new_ui.fragments.TagsView . setTagChangedListener ( this ) ; de.azapps.mirakel.new_ui.fragments.SubtasksView . initListeners ( this ) ; de.azapps.mirakel.new_ui.fragments.SubtasksView . setSubtasks ( de.azapps.mirakel.new_ui.fragments.Task . getSubtasks ( ) ) ; de.azapps.mirakel.new_ui.fragments.FileView . setFiles ( de.azapps.mirakel.new_ui.fragments.Task ) ; de.azapps.mirakel.new_ui.fragments.FileView . setActivity ( getActivity ( ) ) ; ViewHelper . setCompoundDrawable ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.Button , ThemeManager . getColoredIcon ( R . drawable . ic_plus_white_18dp , ThemeManager . getColor ( R . attr . colorTextGrey ) ) ) ; } 
@ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.new_ui.fragments.CompoundButton , final boolean boolean ) { de.azapps.mirakel.new_ui.fragments.Task . setDone ( boolean ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } 
@ java.lang.Override public void void ( SeekBar de.azapps.mirakel.new_ui.fragments.SeekBar , final int int , boolean boolean ) { new java.lang.Thread ( new java.lang.Runnable ( ) { public void void ( ) { if ( de.azapps.mirakel.new_ui.fragments.Task . getProgress ( ) == NUMBER && int > NUMBER ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SET_PROGRESS ) ; } de.azapps.mirakel.new_ui.fragments.Task . setProgress ( int ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } } ) . void ( ) ; } 
public void void ( ) { if ( de.azapps.mirakel.new_ui.fragments.Task . getProgress ( ) == NUMBER && int > NUMBER ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SET_PROGRESS ) ; } de.azapps.mirakel.new_ui.fragments.Task . setProgress ( int ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } 
@ java.lang.Override public void void ( SeekBar de.azapps.mirakel.new_ui.fragments.SeekBar ) {            } 
@ java.lang.Override public void void ( SeekBar de.azapps.mirakel.new_ui.fragments.SeekBar ) {            } 
@ java.lang.Override public void void ( final Tag de.azapps.mirakel.new_ui.fragments.Tag ) { de.azapps.mirakel.new_ui.fragments.Task . addTag ( de.azapps.mirakel.new_ui.fragments.Tag ) ; AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . ADD_TAG ) ; } 
@ java.lang.Override public void void ( final Tag de.azapps.mirakel.new_ui.fragments.Tag ) { de.azapps.mirakel.new_ui.fragments.Task . removeTag ( de.azapps.mirakel.new_ui.fragments.Tag ) ; } 
@ java.lang.Override public void void ( int int ) { de.azapps.mirakel.new_ui.fragments.Task . setPriority ( int ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SET_PRIORITY ) ; } 
@ OnEditorAction ( R . id . task_name_edit ) boolean boolean ( int int ) { switch ( int ) { case EditorInfo . IME_ACTION_DONE : case EditorInfo . IME_ACTION_SEND : void ( ) ; return true ; } return false ; } 
private void void ( ) { de.azapps.mirakel.new_ui.fragments.EditText . setText ( de.azapps.mirakel.new_ui.fragments.Task . getName ( ) ) ; if ( de.azapps.mirakel.new_ui.fragments.Task . isStub ( ) && ! boolean ) { boolean = true ; de.azapps.mirakel.new_ui.fragments.ViewSwitcher . showNext ( ) ; de.azapps.mirakel.new_ui.fragments.EditText . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.EditText . requestFocus ( ) ; de.azapps.mirakel.new_ui.fragments.EditText . selectAll ( ) ; } } , NUMBER ) ; } de.azapps.mirakel.new_ui.fragments.EditText . setOnKeyListener ( new View . View ( ) { @ java.lang.Override public boolean boolean ( final View de.azapps.mirakel.new_ui.fragments.View , final int int , final KeyEvent de.azapps.mirakel.new_ui.fragments.KeyEvent ) { if ( ( de.azapps.mirakel.new_ui.fragments.KeyEvent . getAction ( ) == KeyEvent . ACTION_DOWN ) && ( int == KeyEvent . KEYCODE_ENTER ) ) { void ( ) ; return true ; } return false ; } } ) ; de.azapps.mirakel.new_ui.fragments.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {            } @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {            } @ java.lang.Override public void void ( Editable de.azapps.mirakel.new_ui.fragments.Editable ) { de.azapps.mirakel.new_ui.fragments.Task . setName ( de.azapps.mirakel.new_ui.fragments.Editable . toString ( ) ) ; } } ) ; } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.EditText . requestFocus ( ) ; de.azapps.mirakel.new_ui.fragments.EditText . selectAll ( ) ; } 
@ java.lang.Override public boolean boolean ( final View de.azapps.mirakel.new_ui.fragments.View , final int int , final KeyEvent de.azapps.mirakel.new_ui.fragments.KeyEvent ) { if ( ( de.azapps.mirakel.new_ui.fragments.KeyEvent . getAction ( ) == KeyEvent . ACTION_DOWN ) && ( int == KeyEvent . KEYCODE_ENTER ) ) { void ( ) ; return true ; } return false ; } 
@ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {            } 
@ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {            } 
@ java.lang.Override public void void ( Editable de.azapps.mirakel.new_ui.fragments.Editable ) { de.azapps.mirakel.new_ui.fragments.Task . setName ( de.azapps.mirakel.new_ui.fragments.Editable . toString ( ) ) ; } 
private void void ( ) { de.azapps.mirakel.new_ui.fragments.EditText . clearFocus ( ) ; boolean ( ) ; de.azapps.mirakel.new_ui.fragments.EditText . setText ( de.azapps.mirakel.new_ui.fragments.Task . getName ( ) ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; de.azapps.mirakel.new_ui.fragments.ViewSwitcher . showPrevious ( ) ; } 
@ OnClick ( R . id . task_name ) void void ( ) { de.azapps.mirakel.new_ui.fragments.ViewSwitcher . showNext ( ) ; de.azapps.mirakel.new_ui.fragments.EditText . setText ( de.azapps.mirakel.new_ui.fragments.Task . getName ( ) ) ; de.azapps.mirakel.new_ui.fragments.EditText . requestFocus ( ) ; } 
@ java.lang.Override public void void ( final java.lang.String java.lang.String ) { if ( de.azapps.mirakel.new_ui.fragments.Task . getContent ( ) . isEmpty ( ) && ! java.lang.String . boolean ( ) ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . ADD_NOTE ) ; } de.azapps.mirakel.new_ui.fragments.Task . setContent ( java.lang.String ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.fragments.View ) { final SupportDatePickerDialog de.azapps.mirakel.new_ui.fragments.SupportDatePickerDialog = SupportDatePickerDialog . newInstance ( new DatePicker . DatePicker ( ) { @ java.lang.Override public void void ( final DatePicker de.azapps.mirakel.new_ui.fragments.DatePicker , final @ NonNull Optional < LocalDate > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> ) { if ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> . isPresent ( ) ) { de.azapps.mirakel.new_ui.fragments.Task . setDue ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> . get ( ) . toDateTimeAtStartOfDay ( ) ) ; } else { de.azapps.mirakel.new_ui.fragments.Task . setDue ( Optional .< DateTime > absent ( ) ) ; } de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SET_DUE ) ; } } , de.azapps.mirakel.new_ui.fragments.Task . getDue ( ) ) ; de.azapps.mirakel.new_ui.fragments.SupportDatePickerDialog . show ( getFragmentManager ( ) , STRING ) ; } 
@ java.lang.Override public void void ( final DatePicker de.azapps.mirakel.new_ui.fragments.DatePicker , final @ NonNull Optional < LocalDate > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> ) { if ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> . isPresent ( ) ) { de.azapps.mirakel.new_ui.fragments.Task . setDue ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> . get ( ) . toDateTimeAtStartOfDay ( ) ) ; } else { de.azapps.mirakel.new_ui.fragments.Task . setDue ( Optional .< DateTime > absent ( ) ) ; } de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SET_DUE ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.fragments.View ) { de.azapps.mirakel.new_ui.fragments.Dialog = de.azapps.mirakel.new_ui.fragments.Dialog ( ) ; de.azapps.mirakel.new_ui.fragments.Dialog . show ( ) ; } 
private de.azapps.mirakel.new_ui.fragments.Dialog de.azapps.mirakel.new_ui.fragments.Dialog ( ) { final ArrayAdapter < ListMirakel > de.azapps.mirakel.new_ui.fragments.ArrayAdapter<de.azapps.mirakel.new_ui.fragments.ListMirakel> = new ArrayAdapter <> ( getActivity ( ) , android . R . layout . simple_list_item_1 , ListMirakel . all ( false ) ) ; return new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) . setTitle ( R . string . task_move_to ) . setAdapter ( de.azapps.mirakel.new_ui.fragments.ArrayAdapter<de.azapps.mirakel.new_ui.fragments.ListMirakel> , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , final int int ) { de.azapps.mirakel.new_ui.fragments.Task . setList ( de.azapps.mirakel.new_ui.fragments.ArrayAdapter<de.azapps.mirakel.new_ui.fragments.ListMirakel> . getItem ( int ) ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; de.azapps.mirakel.new_ui.fragments.DialogInterface . dismiss ( ) ; } } ) . create ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , final int int ) { de.azapps.mirakel.new_ui.fragments.Task . setList ( de.azapps.mirakel.new_ui.fragments.ArrayAdapter<de.azapps.mirakel.new_ui.fragments.ListMirakel> . getItem ( int ) ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; de.azapps.mirakel.new_ui.fragments.DialogInterface . dismiss ( ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.fragments.View ) { final SupportDateTimeDialog de.azapps.mirakel.new_ui.fragments.SupportDateTimeDialog = SupportDateTimeDialog . newInstance ( new OnDateTimeSetListener ( ) { @ java.lang.Override public void void ( final @ NonNull Optional < DateTime > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.DateTime> ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SET_REMINDER ) ; de.azapps.mirakel.new_ui.fragments.Task . setReminder ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.DateTime> ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } } , de.azapps.mirakel.new_ui.fragments.Task . getReminder ( ) ) ; de.azapps.mirakel.new_ui.fragments.SupportDateTimeDialog . show ( getFragmentManager ( ) , STRING ) ; } 
@ java.lang.Override public void void ( final @ NonNull Optional < DateTime > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.DateTime> ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SET_REMINDER ) ; de.azapps.mirakel.new_ui.fragments.Task . setReminder ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.DateTime> ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.fragments.View ) { RecurrencePickerDialog de.azapps.mirakel.new_ui.fragments.RecurrencePickerDialog = RecurrencePickerDialog . newInstance ( new RecurrencePickerDialog . RecurrencePickerDialog ( ) { @ java.lang.Override public void void ( @ NonNull Optional < Recurring > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Recurring> ) { de.azapps.mirakel.new_ui.fragments.Task . setRecurrence ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Recurring> ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } } , de.azapps.mirakel.new_ui.fragments.Task . getRecurrence ( ) , true , false ) ; de.azapps.mirakel.new_ui.fragments.RecurrencePickerDialog . show ( getFragmentManager ( ) , STRING ) ; } 
@ java.lang.Override public void void ( @ NonNull Optional < Recurring > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Recurring> ) { de.azapps.mirakel.new_ui.fragments.Task . setRecurrence ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Recurring> ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } 
private boolean boolean ( ) { return Semantic . applySemantics ( de.azapps.mirakel.new_ui.fragments.Task , de.azapps.mirakel.new_ui.fragments.EditText . getText ( ) . toString ( ) ) ; } 
@ OnClick ( R . id . task_button_done ) void void ( ) { boolean ( ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; de.azapps.mirakel.new_ui.fragments.EditText . clearFocus ( ) ; de.azapps.mirakel.new_ui.fragments.AddTagView . clearFocus ( ) ; dismiss ( ) ; } 
@ java.lang.Override public void void ( java.lang.String java.lang.String ) { final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel = MirakelModelPreferences . getListForSubtask ( de.azapps.mirakel.new_ui.fragments.Task ) ; final Task de.azapps.mirakel.new_ui.fragments.Task = Semantic . createTask ( java.lang.String , Optional . fromNullable ( de.azapps.mirakel.new_ui.fragments.ListMirakel ) , true ) ; de.azapps.mirakel.new_ui.fragments.Task . addSubtask ( de.azapps.mirakel.new_ui.fragments.Task ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . ADD_SUBTASK ) ; } 
@ java.lang.Override public void void ( Task de.azapps.mirakel.new_ui.fragments.Task ) { final DialogFragment de.azapps.mirakel.new_ui.fragments.DialogFragment = de.azapps.mirakel.new_ui.fragments.TaskFragment . de.azapps.mirakel.new_ui.fragments.TaskFragment ( de.azapps.mirakel.new_ui.fragments.Task ) ; de.azapps.mirakel.new_ui.fragments.DialogFragment . show ( getFragmentManager ( ) , STRING ) ; } 
@ java.lang.Override public void void ( Task de.azapps.mirakel.new_ui.fragments.Task , boolean boolean ) { de.azapps.mirakel.new_ui.fragments.Task . setDone ( boolean ) ; de.azapps.mirakel.new_ui.fragments.Task . save ( ) ; } 
public void ( ) { } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { super. onSaveInstanceState ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putIntegerArrayList ( java.lang.String , de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedPositions ( ) ) ; } 
public de.azapps.mirakel.new_ui.fragments.ListMirakelInterface de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ( ) { return de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { super. onActivityCreated ( de.azapps.mirakel.new_ui.fragments.Bundle ) ; de.azapps.mirakel.new_ui.fragments.TaskAdapter = new TaskAdapter ( getActivity ( ) , null , de.azapps.mirakel.new_ui.fragments.OnItemClickedListener<de.azapps.mirakel.new_ui.fragments.TaskOverview> , this , this ) ; de.azapps.mirakel.new_ui.fragments.RecyclerView . setAdapter ( de.azapps.mirakel.new_ui.fragments.TaskAdapter ) ; de.azapps.mirakel.new_ui.fragments.RecyclerView . setLayoutManager ( new LinearLayoutManager ( getActivity ( ) ) ) ; if ( de.azapps.mirakel.new_ui.fragments.Bundle != null ) { final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = de.azapps.mirakel.new_ui.fragments.Bundle . getIntegerArrayList ( java.lang.String ) ; if ( ( java.util.List<java.lang.Integer> != null ) && ! java.util.List<java.lang.Integer> . boolean ( ) ) { de.azapps.mirakel.new_ui.fragments.TaskAdapter . setSelectedItems ( java.util.List<java.lang.Integer> ) ; ( ( MirakelActivity ) getActivity ( ) ) . moveFABUp ( ( int ) getResources ( ) . getDimension ( R . dimen . taskfragment_toolbar_hight ) ) ; } } } 
@ java.lang.Override public void void ( final Activity de.azapps.mirakel.new_ui.fragments.Activity ) { super. onAttach ( de.azapps.mirakel.new_ui.fragments.Activity ) ; try { de.azapps.mirakel.new_ui.fragments.OnItemClickedListener<de.azapps.mirakel.new_ui.fragments.TaskOverview> = ( OnItemClickedListener < TaskOverview > ) de.azapps.mirakel.new_ui.fragments.Activity ; } catch ( final java.lang.ClassCastException java.lang.ClassCastException ) { throw new java.lang.ClassCastException ( de.azapps.mirakel.new_ui.fragments.Activity . toString ( ) + STRING ) ; } } 
@ java.lang.Override public de.azapps.mirakel.new_ui.fragments.View de.azapps.mirakel.new_ui.fragments.View ( final LayoutInflater de.azapps.mirakel.new_ui.fragments.LayoutInflater , final ViewGroup de.azapps.mirakel.new_ui.fragments.ViewGroup , final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { final View de.azapps.mirakel.new_ui.fragments.View = de.azapps.mirakel.new_ui.fragments.LayoutInflater . inflate ( R . layout . fragment_tasks , de.azapps.mirakel.new_ui.fragments.ViewGroup , false ) ; ButterKnife . inject ( this , de.azapps.mirakel.new_ui.fragments.View ) ; return de.azapps.mirakel.new_ui.fragments.View ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
@ OnClick ( R . id . fabbutton ) public void void ( ) { final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel ; if ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface instanceof ListMirakel ) { de.azapps.mirakel.new_ui.fragments.ListMirakel = ( ListMirakel ) de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ; } else { de.azapps.mirakel.new_ui.fragments.ListMirakel = ListMirakel . getInboxList ( MirakelModelPreferences . getDefaultAccount ( ) ) ; } final Task de.azapps.mirakel.new_ui.fragments.Task = Semantic . createTask ( getString ( R . string . task_new ) , fromNullable ( de.azapps.mirakel.new_ui.fragments.ListMirakel ) , false ) ; de.azapps.mirakel.new_ui.fragments.Task . setIsStub ( true ) ; de.azapps.mirakel.new_ui.fragments.OnItemClickedListener<de.azapps.mirakel.new_ui.fragments.TaskOverview> . onItemSelected ( new TaskOverview ( de.azapps.mirakel.new_ui.fragments.Task ) ) ; } 
public void void ( final ListMirakelInterface de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) { void ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface , false ) ; } 
public void void ( final ListMirakelInterface de.azapps.mirakel.new_ui.fragments.ListMirakelInterface , final boolean boolean ) { getActivity ( ) . invalidateOptionsMenu ( ) ; if ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> . isPresent ( ) ) { de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> . get ( ) . dismiss ( ) ; } if ( ! ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface instanceof SearchListMirakel ) ) { this . de.azapps.mirakel.new_ui.fragments.ListMirakelInterface = this . de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ; } this . de.azapps.mirakel.new_ui.fragments.ListMirakelInterface = de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ; if ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface == null ) { de.azapps.mirakel.new_ui.fragments.ListMirakelInterface = de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ; } final Bundle de.azapps.mirakel.new_ui.fragments.Bundle = new Bundle ( ) ; ( ( MirakelActivity ) getActivity ( ) ) . updateToolbar ( MirakelActivity . ActionBarState . NORMAL ) ; if ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface instanceof SearchListMirakel ) { de.azapps.mirakel.new_ui.fragments.SearchObject = ( ( SearchListMirakel ) de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) . getSearch ( ) ; } else { de.azapps.mirakel.new_ui.fragments.SearchObject = null ; } de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putBoolean ( java.lang.String , boolean ) ; getLoaderManager ( ) . restartLoader ( NUMBER , de.azapps.mirakel.new_ui.fragments.Bundle , this ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.fragments.Loader de.azapps.mirakel.new_ui.fragments.Loader ( final int int , final Bundle de.azapps.mirakel.new_ui.fragments.Bundle ) { final MirakelQueryBuilder de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder ; try { de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder = de.azapps.mirakel.new_ui.fragments.ListMirakelInterface . getTasksQueryBuilder ( ) ; } catch ( AccountVanishedException de.azapps.mirakel.new_ui.fragments.AccountVanishedException ) { int ++ ; ErrorReporter . report ( ErrorType . ACCOUNT_VANISHED ) ; AccountMirakel de.azapps.mirakel.new_ui.fragments.AccountMirakel = AccountMirakel . getLocal ( ) ; if ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface instanceof SpecialList ) { ( ( SpecialList ) de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) . setAccount ( de.azapps.mirakel.new_ui.fragments.AccountMirakel ) ; } else { ContentValues de.azapps.mirakel.new_ui.fragments.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.new_ui.fragments.ContentValues . put ( ListMirakel . ACCOUNT_ID , de.azapps.mirakel.new_ui.fragments.AccountMirakel . getId ( ) ) ; getActivity ( ) . getContentResolver ( ) . update ( ListMirakel . URI , de.azapps.mirakel.new_ui.fragments.ContentValues , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.new_ui.fragments.AccountVanishedException . getAccountId ( ) ) } ) ; } if ( int > int ) { ErrorReporter . report ( ErrorType . ACCOUNTS_NOT_REPAIRABLE ) ; throw new java.lang.IllegalStateException ( STRING ) ; } else { return de.azapps.mirakel.new_ui.fragments.Loader ( int , de.azapps.mirakel.new_ui.fragments.Bundle ) ; } } int = NUMBER ; de.azapps.mirakel.new_ui.fragments.ListMirakelInterface = de.azapps.mirakel.new_ui.fragments.Bundle . getParcelable ( java.lang.String ) ; boolean = de.azapps.mirakel.new_ui.fragments.Bundle . getBoolean ( java.lang.String ) ; final java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> < TaskOverview > java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> = de.azapps.mirakel.new_ui.fragments.Bundle . getParcelableArrayList ( java.lang.String ) ; if ( java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> != null ) { final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList <> ( Collections2 . transform ( java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> , new Function < TaskOverview , java.lang.Long > ( ) { @ java.lang.Override public java.lang.Long java.lang.Long ( @ Nullable final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview ) { if ( de.azapps.mirakel.new_ui.fragments.TaskOverview != null ) { return de.azapps.mirakel.new_ui.fragments.TaskOverview . getId ( ) ; } else { return NUMBER ; } } } ) ) ; de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder . and ( Task . ID , MirakelQueryBuilder . Operation . NOT_IN , java.util.List<java.lang.Long> ) ; } if ( ! boolean ) { de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder . and ( Task . DONE , MirakelQueryBuilder . Operation . EQ , false ) ; } return de.azapps.mirakel.new_ui.fragments.MirakelQueryBuilder . toSupportCursorLoader ( Task . URI ) ; } 
@ java.lang.Override public java.lang.Long java.lang.Long ( @ Nullable final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview ) { if ( de.azapps.mirakel.new_ui.fragments.TaskOverview != null ) { return de.azapps.mirakel.new_ui.fragments.TaskOverview . getId ( ) ; } else { return NUMBER ; } } 
@ java.lang.Override public void void ( final Loader de.azapps.mirakel.new_ui.fragments.Loader , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.new_ui.fragments.TaskAdapter . swapCursor ( ( Cursor ) java.lang.Object ) ; } 
@ java.lang.Override public void void ( final Loader de.azapps.mirakel.new_ui.fragments.Loader ) { de.azapps.mirakel.new_ui.fragments.TaskAdapter . swapCursor ( null ) ; } 
@ java.lang.Override public void void ( boolean boolean ) { if ( boolean ) { de.azapps.mirakel.new_ui.fragments.ActionMode = getActivity ( ) . startActionMode ( new de.azapps.mirakel.new_ui.fragments.TasksFragment.MultiSelectCallbacks ( ) ) ; } else { if ( de.azapps.mirakel.new_ui.fragments.ActionMode == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } } 
@ java.lang.Override public boolean boolean ( @ NonNull final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview ) { return true ; } 
public void void ( final int int ) { if ( de.azapps.mirakel.new_ui.fragments.ActionMode == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( int == NUMBER ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } else { de.azapps.mirakel.new_ui.fragments.ActionMode . setTitle ( getResources ( ) . getQuantityString ( R . plurals . task_multiselect_title , int , int ) ) ; } } 
private void void ( ) { final java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> < TaskOverview > java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) ; if ( java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> . isEmpty ( ) ) { return; } final Optional < AccountMirakel > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> . get ( NUMBER ) . getAccountMirakel ( ) ; final boolean boolean ; if ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . isPresent ( ) ) { final long long = de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . get ( ) . getId ( ) ; boolean = Iterables . all ( java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> , new Predicate < TaskOverview > ( ) { @ java.lang.Override public boolean boolean ( @ Nullable TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview ) { final Optional < AccountMirakel > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ; if ( de.azapps.mirakel.new_ui.fragments.TaskOverview != null ) { de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = de.azapps.mirakel.new_ui.fragments.TaskOverview . getAccountMirakel ( ) ; } else { de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = absent ( ) ; } return de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . isPresent ( ) && ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . get ( ) . getId ( ) == long ) ; } } ) ; } else { boolean = true ; } if ( boolean ) { de.azapps.mirakel.new_ui.fragments.ImageView . setVisibility ( View . VISIBLE ) ; } else { de.azapps.mirakel.new_ui.fragments.ImageView . setVisibility ( View . GONE ) ; } } 
@ java.lang.Override public boolean boolean ( @ Nullable TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview ) { final Optional < AccountMirakel > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> ; if ( de.azapps.mirakel.new_ui.fragments.TaskOverview != null ) { de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = de.azapps.mirakel.new_ui.fragments.TaskOverview . getAccountMirakel ( ) ; } else { de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = absent ( ) ; } return de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . isPresent ( ) && ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . get ( ) . getId ( ) == long ) ; } 
@ java.lang.Override public void void ( @ NonNull final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview ) { if ( de.azapps.mirakel.new_ui.fragments.ActionMode == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } void ( de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItemCount ( ) ) ; void ( ) ; } 
@ java.lang.Override public void void ( @ NonNull final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview ) { if ( de.azapps.mirakel.new_ui.fragments.ActionMode == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } void ( de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItemCount ( ) ) ; void ( ) ; } 
@ OnLongClick ( { R . id . menu_delete , R . id . menu_move_task , R . id . menu_set_due , R . id . menu_set_priority , R . id . menu_set_tags } ) public boolean boolean ( final View de.azapps.mirakel.new_ui.fragments.View ) { final int [] int[] = new int [ NUMBER ] ; final Rect de.azapps.mirakel.new_ui.fragments.Rect = new Rect ( ) ; de.azapps.mirakel.new_ui.fragments.View . getLocationOnScreen ( int[] ) ; de.azapps.mirakel.new_ui.fragments.View . getWindowVisibleDisplayFrame ( de.azapps.mirakel.new_ui.fragments.Rect ) ; final int int = de.azapps.mirakel.new_ui.fragments.View . getWidth ( ) ; final int int = de.azapps.mirakel.new_ui.fragments.View . getHeight ( ) ; final int int = int[] [ NUMBER ] + ( int / NUMBER ) ; int int = int[] [ NUMBER ] + ( int / NUMBER ) ; if ( ViewCompat . getLayoutDirection ( de.azapps.mirakel.new_ui.fragments.View ) == ViewCompat . LAYOUT_DIRECTION_LTR ) { final int int = getActivity ( ) . getResources ( ) . getDisplayMetrics ( ) . widthPixels ; int = int - int ; } final Toast de.azapps.mirakel.new_ui.fragments.Toast = Toast . makeText ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.View . getContentDescription ( ) , Toast . LENGTH_SHORT ) ; final int int ; if ( int < de.azapps.mirakel.new_ui.fragments.Rect . height ( ) ) { int = Gravity . TOP ; } else { int = Gravity . BOTTOM ; } de.azapps.mirakel.new_ui.fragments.Toast . setGravity ( int | GravityCompat . END , int , int ) ; de.azapps.mirakel.new_ui.fragments.Toast . show ( ) ; return true ; } 
@ OnClick ( R . id . menu_delete ) void void ( ) { final java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> < TaskOverview > java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) ; final Bundle de.azapps.mirakel.new_ui.fragments.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) ; de.azapps.mirakel.new_ui.fragments.Bundle . putParcelableArrayList ( java.lang.String , java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) ; getLoaderManager ( ) . restartLoader ( NUMBER , de.azapps.mirakel.new_ui.fragments.Bundle , this ) ; final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar = Snackbar . with ( getActivity ( ) ) . text ( getResources ( ) . getQuantityString ( R . plurals . task_multiselect_deleted , java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> . size ( ) , java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> . size ( ) ) ) . actionLabel ( R . string . undo ) . actionListener ( new ActionClickListener ( ) { @ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> . clear ( ) ; } } ) . eventListener ( new SnackBarEventListener ( ) { @ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { super. onDismiss ( de.azapps.mirakel.new_ui.fragments.Snackbar ) ; de.azapps.mirakel.new_ui.fragments.Snackbar . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { ( ( MirakelActivity ) getActivity ( ) ) . moveFabDown ( de.azapps.mirakel.new_ui.fragments.Snackbar . getHeight ( ) ) ; } } , NUMBER ) ; new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { de.azapps.mirakel.new_ui.fragments.TaskOverview . destroy ( ) ; } de.azapps.mirakel.new_ui.fragments.RecyclerView . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) ; } } ) ; if ( de.azapps.mirakel.new_ui.fragments.TasksFragment .this . de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> . isPresent ( ) ) { de.azapps.mirakel.new_ui.fragments.TasksFragment .this . de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> = absent ( ) ; } } } ) . void ( ) ; } } ) ; de.azapps.mirakel.new_ui.fragments.TasksFragment .this . de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> = of ( de.azapps.mirakel.new_ui.fragments.Snackbar ) ; if ( de.azapps.mirakel.new_ui.fragments.ActionMode != null ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } SnackbarManager . show ( de.azapps.mirakel.new_ui.fragments.Snackbar , getActivity ( ) ) ; } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> . clear ( ) ; } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.new_ui.fragments.Snackbar ) { super. onDismiss ( de.azapps.mirakel.new_ui.fragments.Snackbar ) ; de.azapps.mirakel.new_ui.fragments.Snackbar . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { ( ( MirakelActivity ) getActivity ( ) ) . moveFabDown ( de.azapps.mirakel.new_ui.fragments.Snackbar . getHeight ( ) ) ; } } , NUMBER ) ; new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { de.azapps.mirakel.new_ui.fragments.TaskOverview . destroy ( ) ; } de.azapps.mirakel.new_ui.fragments.RecyclerView . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) ; } } ) ; if ( de.azapps.mirakel.new_ui.fragments.TasksFragment .this . de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> . isPresent ( ) ) { de.azapps.mirakel.new_ui.fragments.TasksFragment .this . de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> = absent ( ) ; } } } ) . void ( ) ; } 
@ java.lang.Override public void void ( ) { ( ( MirakelActivity ) getActivity ( ) ) . moveFabDown ( de.azapps.mirakel.new_ui.fragments.Snackbar . getHeight ( ) ) ; } 
@ java.lang.Override public void void ( ) { for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { de.azapps.mirakel.new_ui.fragments.TaskOverview . destroy ( ) ; } de.azapps.mirakel.new_ui.fragments.RecyclerView . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) ; } } ) ; if ( de.azapps.mirakel.new_ui.fragments.TasksFragment .this . de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> . isPresent ( ) ) { de.azapps.mirakel.new_ui.fragments.TasksFragment .this . de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> = absent ( ) ; } } 
@ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) ; } 
@ OnClick ( R . id . menu_move_task ) void void ( ) { final java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> < TaskOverview > java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) ; final AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) ; AlertDialogWrapper.Builder . setTitle ( R . string . dialog_move ) ; final Optional < AccountMirakel > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> = java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> . get ( NUMBER ) . getAccountMirakel ( ) ; if ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . isPresent ( ) ) { final Cursor de.azapps.mirakel.new_ui.fragments.Cursor = ListMirakel . allCursor ( of ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . get ( ) ) , false ) . getRawCursor ( ) ; final ArrayAdapter < ListMirakel > de.azapps.mirakel.new_ui.fragments.ArrayAdapter<de.azapps.mirakel.new_ui.fragments.ListMirakel> = new ArrayAdapter <> ( getActivity ( ) , R . layout . simple_list_item_1 , ListMirakel . all ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> , false ) ) ; AlertDialogWrapper.Builder . setAdapter ( de.azapps.mirakel.new_ui.fragments.ArrayAdapter<de.azapps.mirakel.new_ui.fragments.ListMirakel> , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , final int int ) { ListMirakel . allCursor ( of ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . get ( ) ) , false ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.new_ui.fragments.CursorGetter ) { de.azapps.mirakel.new_ui.fragments.CursorGetter . moveToPosition ( int ) ; final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel = new ListMirakel ( de.azapps.mirakel.new_ui.fragments.CursorGetter ) ; for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { de.azapps.mirakel.new_ui.fragments.TaskOverview . withTask ( new OptionalUtils . OptionalUtils < Task > ( ) { @ Override public void apply ( Task task ) { task . setList ( list , true ) ; task . save ( ) ; } } ) ; } } } ) ; if ( de.azapps.mirakel.new_ui.fragments.ActionMode != null ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } de.azapps.mirakel.new_ui.fragments.DialogInterface . dismiss ( ) ; de.azapps.mirakel.new_ui.fragments.Cursor . close ( ) ; } } ) . setOnCancelListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { de.azapps.mirakel.new_ui.fragments.Cursor . close ( ) ; } } ) . show ( ) ; } } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , final int int ) { ListMirakel . allCursor ( of ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.AccountMirakel> . get ( ) ) , false ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.new_ui.fragments.CursorGetter ) { de.azapps.mirakel.new_ui.fragments.CursorGetter . moveToPosition ( int ) ; final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel = new ListMirakel ( de.azapps.mirakel.new_ui.fragments.CursorGetter ) ; for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { de.azapps.mirakel.new_ui.fragments.TaskOverview . withTask ( new OptionalUtils . OptionalUtils < Task > ( ) { @ Override public void apply ( Task task ) { task . setList ( list , true ) ; task . save ( ) ; } } ) ; } } } ) ; if ( de.azapps.mirakel.new_ui.fragments.ActionMode != null ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } de.azapps.mirakel.new_ui.fragments.DialogInterface . dismiss ( ) ; de.azapps.mirakel.new_ui.fragments.Cursor . close ( ) ; } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.new_ui.fragments.CursorGetter ) { de.azapps.mirakel.new_ui.fragments.CursorGetter . moveToPosition ( int ) ; final ListMirakel de.azapps.mirakel.new_ui.fragments.ListMirakel = new ListMirakel ( de.azapps.mirakel.new_ui.fragments.CursorGetter ) ; for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { de.azapps.mirakel.new_ui.fragments.TaskOverview . withTask ( new OptionalUtils . OptionalUtils < Task > ( ) { @ Override public void apply ( Task task ) { task . setList ( list , true ) ; task . save ( ) ; } } ) ; } } 
@ Override public void apply ( Task task ) { task . setList ( list , true ) ; task . save ( ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { de.azapps.mirakel.new_ui.fragments.Cursor . close ( ) ; } 
@ OnClick ( R . id . menu_set_due ) void void ( ) { final java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> < TaskOverview > java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) ; final java.util.Calendar java.util.Calendar = new java.util.GregorianCalendar ( ) ; final SupportDatePickerDialog de.azapps.mirakel.new_ui.fragments.SupportDatePickerDialog = SupportDatePickerDialog . newInstance ( new DatePicker . DatePicker ( ) { @ java.lang.Override public void void ( @ NonNull DatePicker de.azapps.mirakel.new_ui.fragments.DatePicker , @ NonNull Optional < LocalDate > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> ) { super. onDateSet ( de.azapps.mirakel.new_ui.fragments.DatePicker , de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> ) ; final Optional < DateTime > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.DateTime> = de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> . isPresent ( ) ? of ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> . get ( ) . toDateTimeAtStartOfDay ( ) ) : Optional .< DateTime > absent ( ) ; for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { de.azapps.mirakel.new_ui.fragments.TaskOverview . withTask ( new OptionalUtils . OptionalUtils < Task > ( ) { @ Override public void apply ( final Task task ) { task . setDue ( due ) ; task . save ( ) ; } } ) ; } if ( de.azapps.mirakel.new_ui.fragments.ActionMode != null ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } } } , new LocalDate ( ) ) ; de.azapps.mirakel.new_ui.fragments.SupportDatePickerDialog . show ( getActivity ( ) . getSupportFragmentManager ( ) , STRING ) ; } 
@ java.lang.Override public void void ( @ NonNull DatePicker de.azapps.mirakel.new_ui.fragments.DatePicker , @ NonNull Optional < LocalDate > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> ) { super. onDateSet ( de.azapps.mirakel.new_ui.fragments.DatePicker , de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> ) ; final Optional < DateTime > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.DateTime> = de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> . isPresent ( ) ? of ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.LocalDate> . get ( ) . toDateTimeAtStartOfDay ( ) ) : Optional .< DateTime > absent ( ) ; for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { de.azapps.mirakel.new_ui.fragments.TaskOverview . withTask ( new OptionalUtils . OptionalUtils < Task > ( ) { @ Override public void apply ( final Task task ) { task . setDue ( due ) ; task . save ( ) ; } } ) ; } if ( de.azapps.mirakel.new_ui.fragments.ActionMode != null ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } } 
@ Override public void apply ( final Task task ) { task . setDue ( due ) ; task . save ( ) ; } 
@ OnClick ( R . id . menu_set_priority ) void void ( ) { final PriorityDialog de.azapps.mirakel.new_ui.fragments.PriorityDialog ; if ( de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItemCount ( ) == NUMBER ) { de.azapps.mirakel.new_ui.fragments.PriorityDialog = PriorityDialog . newInstance ( de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) . get ( NUMBER ) . getPriority ( ) , this ) ; } else { de.azapps.mirakel.new_ui.fragments.PriorityDialog = PriorityDialog . newInstance ( this ) ; } de.azapps.mirakel.new_ui.fragments.PriorityDialog . show ( getActivity ( ) . getSupportFragmentManager ( ) , STRING ) ; } 
@ OnClick ( R . id . menu_set_tags ) void void ( ) { Context de.azapps.mirakel.new_ui.fragments.Context = new ContextThemeWrapper ( getActivity ( ) , R . style . MirakelBaseTheme ) ; final LayoutInflater de.azapps.mirakel.new_ui.fragments.LayoutInflater = LayoutInflater . from ( de.azapps.mirakel.new_ui.fragments.Context ) ; final View de.azapps.mirakel.new_ui.fragments.View = de.azapps.mirakel.new_ui.fragments.LayoutInflater . inflate ( R . layout . add_tags_dialog , null ) ; final AddTagView de.azapps.mirakel.new_ui.fragments.AddTagView = ( AddTagView ) de.azapps.mirakel.new_ui.fragments.View . findViewById ( R . id . add_tags_dialog ) ; if ( de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItemCount ( ) == NUMBER ) { final Optional < Task > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) . get ( NUMBER ) . getTask ( ) ; if ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> . isPresent ( ) ) { de.azapps.mirakel.new_ui.fragments.AddTagView . setTags ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> . get ( ) . getTags ( ) ) ; } else { de.azapps.mirakel.new_ui.fragments.AddTagView . setTags ( new java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.Tag> < Tag > ( NUMBER ) ) ; } } else { de.azapps.mirakel.new_ui.fragments.AddTagView . setTags ( new java.util.ArrayList<de.azapps.mirakel.new_ui.fragments.Tag> < Tag > ( NUMBER ) ) ; } de.azapps.mirakel.new_ui.fragments.AddTagView . setAllowToggleBackground ( false ) ; final AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.new_ui.fragments.Context ) ; AlertDialogWrapper.Builder . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , int int ) { final java.util.List<de.azapps.mirakel.new_ui.fragments.Tag> < Tag > java.util.List<de.azapps.mirakel.new_ui.fragments.Tag> = de.azapps.mirakel.new_ui.fragments.AddTagView . getTags ( ) ; final java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> < TaskOverview > java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) ; for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { final Optional < Task > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> = de.azapps.mirakel.new_ui.fragments.TaskOverview . getTask ( ) ; OptionalUtils . withOptional ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> , new OptionalUtils . OptionalUtils < Task > ( ) { @ Override public void apply ( final Task task ) { task . setTags ( tags ) ; } } ) ; } } } ) ; AlertDialogWrapper.Builder . setTitle ( R . string . menu_set_tags ) ; final SoftKeyboard de.azapps.mirakel.new_ui.fragments.SoftKeyboard = new SoftKeyboard ( ( ViewGroup ) de.azapps.mirakel.new_ui.fragments.View ) ; AlertDialogWrapper.Builder . setView ( de.azapps.mirakel.new_ui.fragments.View ) ; final Dialog de.azapps.mirakel.new_ui.fragments.Dialog = AlertDialogWrapper.Builder . create ( ) ; de.azapps.mirakel.new_ui.fragments.Dialog . setOnShowListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { de.azapps.mirakel.new_ui.fragments.AddTagView . performClick ( ) ; final InputMethodManager de.azapps.mirakel.new_ui.fragments.InputMethodManager = ( InputMethodManager ) getActivity ( ) . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; de.azapps.mirakel.new_ui.fragments.InputMethodManager . toggleSoftInput ( InputMethodManager . SHOW_IMPLICIT , NUMBER ) ; de.azapps.mirakel.new_ui.fragments.AddTagView . performClick ( ) ; } } ) ; de.azapps.mirakel.new_ui.fragments.Dialog . setOnDismissListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { final InputMethodManager de.azapps.mirakel.new_ui.fragments.InputMethodManager = ( InputMethodManager ) getActivity ( ) . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; de.azapps.mirakel.new_ui.fragments.InputMethodManager . toggleSoftInput ( InputMethodManager . HIDE_IMPLICIT_ONLY , NUMBER ) ; de.azapps.mirakel.new_ui.fragments.AddTagView . clearFocus ( ) ; } } ) ; de.azapps.mirakel.new_ui.fragments.Dialog . show ( ) ; de.azapps.mirakel.new_ui.fragments.Dialog . getWindow ( ) . clearFlags ( WindowManager . LayoutParams . FLAG_NOT_FOCUSABLE | WindowManager . LayoutParams . FLAG_ALT_FOCUSABLE_IM ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface , int int ) { final java.util.List<de.azapps.mirakel.new_ui.fragments.Tag> < Tag > java.util.List<de.azapps.mirakel.new_ui.fragments.Tag> = de.azapps.mirakel.new_ui.fragments.AddTagView . getTags ( ) ; final java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> < TaskOverview > java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) ; for ( final TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { final Optional < Task > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> = de.azapps.mirakel.new_ui.fragments.TaskOverview . getTask ( ) ; OptionalUtils . withOptional ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> , new OptionalUtils . OptionalUtils < Task > ( ) { @ Override public void apply ( final Task task ) { task . setTags ( tags ) ; } } ) ; } } 
@ Override public void apply ( final Task task ) { task . setTags ( tags ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { de.azapps.mirakel.new_ui.fragments.AddTagView . performClick ( ) ; final InputMethodManager de.azapps.mirakel.new_ui.fragments.InputMethodManager = ( InputMethodManager ) getActivity ( ) . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; de.azapps.mirakel.new_ui.fragments.InputMethodManager . toggleSoftInput ( InputMethodManager . SHOW_IMPLICIT , NUMBER ) ; de.azapps.mirakel.new_ui.fragments.AddTagView . performClick ( ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.fragments.DialogInterface ) { final InputMethodManager de.azapps.mirakel.new_ui.fragments.InputMethodManager = ( InputMethodManager ) getActivity ( ) . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; de.azapps.mirakel.new_ui.fragments.InputMethodManager . toggleSoftInput ( InputMethodManager . HIDE_IMPLICIT_ONLY , NUMBER ) ; de.azapps.mirakel.new_ui.fragments.AddTagView . clearFocus ( ) ; } 
public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) ; } 
public void void ( ) { getActivity ( ) . startActionMode ( new de.azapps.mirakel.new_ui.fragments.TasksFragment.SearchCallbacks ( ) ) ; } 
@ java.lang.Override public void void ( ) { void ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface , ! boolean ) ; } 
@ java.lang.Override public boolean boolean ( ) { return boolean ; } 
@ java.lang.Override public ListMirakelInterface . ListMirakelInterface.ShowDoneCases ListMirakelInterface.ShowDoneCases ( ) { return de.azapps.mirakel.new_ui.fragments.ListMirakelInterface . shouldShowDoneToggle ( ) ; } 
public de.azapps.mirakel.new_ui.fragments.ListMirakelInterface de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ( ) { return de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ; } 
@ java.lang.Override public void void ( final @ IntRange ( from = - NUMBER , to = NUMBER ) int int ) { final java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> < TaskOverview > java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItems ( ) ; for ( TaskOverview de.azapps.mirakel.new_ui.fragments.TaskOverview : java.util.List<de.azapps.mirakel.new_ui.fragments.TaskOverview> ) { Optional < Task > de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> = de.azapps.mirakel.new_ui.fragments.TaskOverview . getTask ( ) ; OptionalUtils . withOptional ( de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Task> , new OptionalUtils . OptionalUtils < Task > ( ) { @ Override public void apply ( Task task ) { task . setPriority ( newPriority ) ; task . save ( ) ; } } ) ; } if ( de.azapps.mirakel.new_ui.fragments.ActionMode != null ) { de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; } } 
@ Override public void apply ( Task task ) { task . setPriority ( newPriority ) ; task . save ( ) ; } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , final Menu de.azapps.mirakel.new_ui.fragments.Menu ) { de.azapps.mirakel.new_ui.fragments.Menu . clear ( ) ; AnimationHelper . slideIn ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.LinearLayout ) ; ( ( MirakelActivity ) getActivity ( ) ) . moveFABUp ( ( int ) getResources ( ) . getDimension ( R . dimen . taskfragment_toolbar_hight ) ) ; ( ( MirakelActivity ) getActivity ( ) ) . updateToolbar ( MirakelActivity . ActionBarState . EMPTY ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { getActivity ( ) . getWindow ( ) . setStatusBarColor ( ThemeManager . getColor ( R . attr . colorCABStatus ) ) ; } final int int = de.azapps.mirakel.new_ui.fragments.TaskAdapter . getSelectedItemCount ( ) ; de.azapps.mirakel.new_ui.fragments.ActionMode . setTitle ( getResources ( ) . getQuantityString ( R . plurals . task_multiselect_title , int , int ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , Menu de.azapps.mirakel.new_ui.fragments.Menu ) { return true ; } 
@ java.lang.Override public boolean boolean ( ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , MenuItem de.azapps.mirakel.new_ui.fragments.MenuItem ) { return false ; } 
@ java.lang.Override public void void ( ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode ) { de.azapps.mirakel.new_ui.fragments.TaskAdapter . clearSelections ( ) ; de.azapps.mirakel.new_ui.fragments.ActionMode = null ; ( ( MirakelActivity ) getActivity ( ) ) . updateToolbar ( MirakelActivity . ActionBarState . NORMAL ) ; AnimationHelper . slideOut ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.LinearLayout ) ; if ( ! de.azapps.mirakel.new_ui.fragments.Optional<de.azapps.mirakel.new_ui.fragments.Snackbar> . isPresent ( ) ) { ( ( MirakelActivity ) getActivity ( ) ) . moveFabDown ( de.azapps.mirakel.new_ui.fragments.LinearLayout . getHeight ( ) ) ; } if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { getActivity ( ) . getWindow ( ) . setStatusBarColor ( ThemeManager . getColor ( R . attr . colorPrimaryDark ) ) ; } } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , final Menu de.azapps.mirakel.new_ui.fragments.Menu ) { ( ( MirakelActivity ) getActivity ( ) ) . updateToolbar ( MirakelActivity . ActionBarState . EMPTY ) ; de.azapps.mirakel.new_ui.fragments.ActionMode = de.azapps.mirakel.new_ui.fragments.ActionMode ; final SearchView de.azapps.mirakel.new_ui.fragments.SearchView = new SearchView ( getActivity ( ) ) ; de.azapps.mirakel.new_ui.fragments.SearchView . setSearchCallback ( this ) ; if ( de.azapps.mirakel.new_ui.fragments.SearchObject != null ) { de.azapps.mirakel.new_ui.fragments.SearchView . setSearch ( de.azapps.mirakel.new_ui.fragments.SearchObject ) ; } de.azapps.mirakel.new_ui.fragments.ActionMode . setCustomView ( de.azapps.mirakel.new_ui.fragments.SearchView ) ; de.azapps.mirakel.new_ui.fragments.SearchView . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.SearchView . showKeyboard ( ) ; } } , NUMBER ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { getActivity ( ) . getWindow ( ) . setStatusBarColor ( ThemeManager . getColor ( R . attr . colorCABStatus ) ) ; } return true ; } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.fragments.SearchView . showKeyboard ( ) ; } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , final Menu de.azapps.mirakel.new_ui.fragments.Menu ) { return true ; } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode , final MenuItem de.azapps.mirakel.new_ui.fragments.MenuItem ) { return false ; } 
@ java.lang.Override public void void ( final ActionMode de.azapps.mirakel.new_ui.fragments.ActionMode ) { ( ( MirakelActivity ) getActivity ( ) ) . updateToolbar ( MirakelActivity . ActionBarState . NORMAL ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { getActivity ( ) . getWindow ( ) . setStatusBarColor ( ThemeManager . getColor ( R . attr . colorPrimaryDark ) ) ; } } 
@ java.lang.Override public void void ( final SearchObject de.azapps.mirakel.new_ui.fragments.SearchObject ) { if ( de.azapps.mirakel.new_ui.fragments.ActionMode == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . SEARCHED ) ; de.azapps.mirakel.new_ui.fragments.ActionMode . finish ( ) ; final ListMirakelInterface de.azapps.mirakel.new_ui.fragments.ListMirakelInterface = new SearchListMirakel ( getActivity ( ) , de.azapps.mirakel.new_ui.fragments.SearchObject ) ; void ( de.azapps.mirakel.new_ui.fragments.ListMirakelInterface ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return Log . v ( java.lang.String , java.lang.String ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.Throwable java.lang.Throwable ) { return Log . v ( java.lang.String , java.lang.String , java.lang.Throwable ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return Log . d ( java.lang.String , java.lang.String ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.Throwable java.lang.Throwable ) { return Log . d ( java.lang.String , java.lang.String , java.lang.Throwable ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return Log . i ( java.lang.String , java.lang.String ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.Throwable java.lang.Throwable ) { return Log . i ( java.lang.String , java.lang.String , java.lang.Throwable ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return Log . w ( java.lang.String , java.lang.String ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.Throwable java.lang.Throwable ) { return Log . w ( java.lang.String , java.lang.String , java.lang.Throwable ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.Throwable java.lang.Throwable ) { return Log . w ( java.lang.String , STRING , java.lang.Throwable ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { return Log . e ( java.lang.String , java.lang.String ) ; } 
@ java.lang.Override public int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.Throwable java.lang.Throwable ) { return Log . e ( java.lang.String , java.lang.String , java.lang.Throwable ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Throwable java.lang.Throwable ) { return android . util . Log . getStackTraceString ( java.lang.Throwable ) ; } 
public static void void ( final Activity de.azapps.mirakel.new_ui.helper.Activity , final FileMirakel de.azapps.mirakel.new_ui.helper.FileMirakel , final boolean boolean ) { final MediaPlayer de.azapps.mirakel.new_ui.helper.MediaPlayer = new MediaPlayer ( ) ; final AudioManager de.azapps.mirakel.new_ui.helper.AudioManager = ( AudioManager ) de.azapps.mirakel.new_ui.helper.Activity . getSystemService ( Context . AUDIO_SERVICE ) ; if ( ! boolean ) { de.azapps.mirakel.new_ui.helper.AudioManager . setSpeakerphoneOn ( false ) ; de.azapps.mirakel.new_ui.helper.AudioManager . setMode ( AudioManager . MODE_IN_CALL ) ; de.azapps.mirakel.new_ui.helper.Activity . setVolumeControlStream ( AudioManager . STREAM_VOICE_CALL ) ; } java.io.FileInputStream java.io.FileInputStream ; try { java.io.FileInputStream = de.azapps.mirakel.new_ui.helper.FileMirakel . getFileStream ( de.azapps.mirakel.new_ui.helper.Activity ) ; ; de.azapps.mirakel.new_ui.helper.MediaPlayer . reset ( ) ; if ( ! boolean ) { de.azapps.mirakel.new_ui.helper.MediaPlayer . setAudioStreamType ( AudioManager . STREAM_VOICE_CALL ) ; } de.azapps.mirakel.new_ui.helper.MediaPlayer . setDataSource ( java.io.FileInputStream . java.io.FileDescriptor ( ) ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . prepare ( ) ; de.azapps.mirakel.new_ui.helper.AudioManager . setMode ( AudioManager . MODE_NORMAL ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING ) ; java.io.FileInputStream = null ; } final java.io.FileInputStream java.io.FileInputStream = java.io.FileInputStream ; final Dialog de.azapps.mirakel.new_ui.helper.Dialog = new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.new_ui.helper.Activity ) . setTitle ( R . string . audio_playback_title ) . setPositiveButton ( R . string . audio_playback_pause , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.helper.DialogInterface , int int ) { final Button de.azapps.mirakel.new_ui.helper.Button = ( ( AlertDialog ) de.azapps.mirakel.new_ui.helper.DialogInterface ) . getButton ( DialogInterface . BUTTON_POSITIVE ) ; if ( ! de.azapps.mirakel.new_ui.helper.MediaPlayer . isPlaying ( ) ) { de.azapps.mirakel.new_ui.helper.Button . setText ( R . string . audio_playback_play ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . start ( ) ; } else { de.azapps.mirakel.new_ui.helper.Button . setText ( R . string . audio_playback_pause ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . pause ( ) ; } de.azapps.mirakel.new_ui.helper.Button . invalidate ( ) ; } } ) . setNegativeButton ( R . string . audio_playback_stop , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.helper.DialogInterface , int int ) { de.azapps.mirakel.new_ui.helper.DialogInterface . dismiss ( ) ; } } ) . setOnDismissListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.helper.DialogInterface ) { de.azapps.mirakel.new_ui.helper.MediaPlayer . stop ( ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . release ( ) ; if ( java.io.FileInputStream != null ) { try { java.io.FileInputStream . void ( ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . wtf ( java.lang.String , STRING , java.io.IOException ) ; } } } } ) . show ( ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . start ( ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . setOnCompletionListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public void void ( final MediaPlayer de.azapps.mirakel.new_ui.helper.MediaPlayer ) { de.azapps.mirakel.new_ui.helper.Dialog . dismiss ( ) ; } } ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.helper.DialogInterface , int int ) { final Button de.azapps.mirakel.new_ui.helper.Button = ( ( AlertDialog ) de.azapps.mirakel.new_ui.helper.DialogInterface ) . getButton ( DialogInterface . BUTTON_POSITIVE ) ; if ( ! de.azapps.mirakel.new_ui.helper.MediaPlayer . isPlaying ( ) ) { de.azapps.mirakel.new_ui.helper.Button . setText ( R . string . audio_playback_play ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . start ( ) ; } else { de.azapps.mirakel.new_ui.helper.Button . setText ( R . string . audio_playback_pause ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . pause ( ) ; } de.azapps.mirakel.new_ui.helper.Button . invalidate ( ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.helper.DialogInterface , int int ) { de.azapps.mirakel.new_ui.helper.DialogInterface . dismiss ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.helper.DialogInterface ) { de.azapps.mirakel.new_ui.helper.MediaPlayer . stop ( ) ; de.azapps.mirakel.new_ui.helper.MediaPlayer . release ( ) ; if ( java.io.FileInputStream != null ) { try { java.io.FileInputStream . void ( ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . wtf ( java.lang.String , STRING , java.io.IOException ) ; } } } 
@ java.lang.Override public void void ( final MediaPlayer de.azapps.mirakel.new_ui.helper.MediaPlayer ) { de.azapps.mirakel.new_ui.helper.Dialog . dismiss ( ) ; } 
public void ( final @ NonNull java.util.List<de.azapps.mirakel.new_ui.helper.ImageView> < ImageView > java.util.List<de.azapps.mirakel.new_ui.helper.ImageView> , final @ NonNull Context de.azapps.mirakel.new_ui.helper.Context ) { java.util.List<de.azapps.mirakel.new_ui.helper.ImageView> = java.util.List<de.azapps.mirakel.new_ui.helper.ImageView> ; de.azapps.mirakel.new_ui.helper.Context = de.azapps.mirakel.new_ui.helper.Context ; } 
private de.azapps.mirakel.new_ui.helper.Drawable de.azapps.mirakel.new_ui.helper.Drawable ( final FileMirakel de.azapps.mirakel.new_ui.helper.FileMirakel , final Optional < Bitmap > de.azapps.mirakel.new_ui.helper.Optional<de.azapps.mirakel.new_ui.helper.Bitmap> ) { final Bitmap de.azapps.mirakel.new_ui.helper.Bitmap ; final float float = de.azapps.mirakel.new_ui.helper.Context . getResources ( ) . getDimension ( de . azapps . mirakel . model . R . dimen . file_preview_corner_radius ) ; if ( de.azapps.mirakel.new_ui.helper.Optional<de.azapps.mirakel.new_ui.helper.Bitmap> . isPresent ( ) ) { de.azapps.mirakel.new_ui.helper.Bitmap = de.azapps.mirakel.new_ui.helper.Optional<de.azapps.mirakel.new_ui.helper.Bitmap> . get ( ) ; } else { final int int ; if ( FileUtils . isAudio ( de.azapps.mirakel.new_ui.helper.FileMirakel . getFileUri ( ) ) ) { int = de . azapps . mirakel . model . R . drawable . ic_music_note_white_48dp ; } else if ( FileUtils . isVideo ( de.azapps.mirakel.new_ui.helper.FileMirakel . getFileUri ( ) ) ) { int = de . azapps . mirakel . model . R . drawable . ic_camcorder_white_48dp ; } else { int = de . azapps . mirakel . model . R . drawable . ic_description_white_48dp ; } final Bitmap de.azapps.mirakel.new_ui.helper.Bitmap = BitmapFactory . decodeResource ( de.azapps.mirakel.new_ui.helper.Context . getResources ( ) , int ) ; final ColorFilter de.azapps.mirakel.new_ui.helper.ColorFilter = new PorterDuffColorFilter ( ThemeManager . getColor ( de . azapps . mirakel . model . R . attr . colorPreviewBorder ) , PorterDuff . Mode . MULTIPLY ) ; de.azapps.mirakel.new_ui.helper.Bitmap = Bitmap . createBitmap ( de.azapps.mirakel.new_ui.helper.Bitmap . getWidth ( ) , de.azapps.mirakel.new_ui.helper.Bitmap . getHeight ( ) + ViewHelper . dpToPx ( de.azapps.mirakel.new_ui.helper.Context , NUMBER ) - ( int ) float , de.azapps.mirakel.new_ui.helper.Bitmap . getConfig ( ) ) ; Canvas de.azapps.mirakel.new_ui.helper.Canvas = new Canvas ( de.azapps.mirakel.new_ui.helper.Bitmap ) ; Paint de.azapps.mirakel.new_ui.helper.Paint = new Paint ( ) ; de.azapps.mirakel.new_ui.helper.Paint . setColorFilter ( de.azapps.mirakel.new_ui.helper.ColorFilter ) ; Rect de.azapps.mirakel.new_ui.helper.Rect = new Rect ( NUMBER , NUMBER , de.azapps.mirakel.new_ui.helper.Bitmap . getWidth ( ) , de.azapps.mirakel.new_ui.helper.Bitmap . getHeight ( ) ) ; de.azapps.mirakel.new_ui.helper.Canvas . drawBitmap ( de.azapps.mirakel.new_ui.helper.Bitmap , de.azapps.mirakel.new_ui.helper.Rect , de.azapps.mirakel.new_ui.helper.Rect , de.azapps.mirakel.new_ui.helper.Paint ) ; } final float float = de.azapps.mirakel.new_ui.helper.Context . getResources ( ) . getDimension ( de . azapps . mirakel . model . R . dimen . file_preview_size ) ; final float float = ( float ) ( ( float - de.azapps.mirakel.new_ui.helper.Bitmap . getHeight ( ) ) / NUMBER ) ; final float float = ( float ) ( ( float - de.azapps.mirakel.new_ui.helper.Bitmap . getWidth ( ) ) / NUMBER ) ; final RectF de.azapps.mirakel.new_ui.helper.RectF = new RectF ( float , float , float - float , float - float ) ; final Bitmap de.azapps.mirakel.new_ui.helper.Bitmap = Bitmap . createBitmap ( ( int ) float , ( int ) float , de.azapps.mirakel.new_ui.helper.Bitmap . getConfig ( ) ) ; final Canvas de.azapps.mirakel.new_ui.helper.Canvas = new Canvas ( de.azapps.mirakel.new_ui.helper.Bitmap ) ; de.azapps.mirakel.new_ui.helper.Canvas . drawColor ( Color . TRANSPARENT ) ; de.azapps.mirakel.new_ui.helper.Canvas . drawBitmap ( de.azapps.mirakel.new_ui.helper.Bitmap , null , de.azapps.mirakel.new_ui.helper.RectF , null ) ; final RectF de.azapps.mirakel.new_ui.helper.RectF = new RectF ( float / NUMBER , float / NUMBER , float - float / NUMBER , float - float / NUMBER ) ; final Paint de.azapps.mirakel.new_ui.helper.Paint = new Paint ( ) ; de.azapps.mirakel.new_ui.helper.Paint . setColor ( ThemeManager . getColor ( de . azapps . mirakel . model . R . attr . colorPreviewBorder ) ) ; de.azapps.mirakel.new_ui.helper.Paint . setAntiAlias ( true ) ; de.azapps.mirakel.new_ui.helper.Paint . setStrokeWidth ( float ) ; de.azapps.mirakel.new_ui.helper.Paint . setStyle ( Paint . Style . STROKE ) ; de.azapps.mirakel.new_ui.helper.Canvas . drawRoundRect ( de.azapps.mirakel.new_ui.helper.RectF , float , float , de.azapps.mirakel.new_ui.helper.Paint ) ; return new RoundedBitmapDrawable ( de.azapps.mirakel.new_ui.helper.Bitmap , de.azapps.mirakel.new_ui.helper.Context . getResources ( ) . getDimension ( de . azapps . mirakel . model . R . dimen . file_preview_corner_radius ) , NUMBER ) ; } 
@ java.lang.Override protected java.util.List<de.azapps.mirakel.new_ui.helper.Drawable> < Drawable > java.util.List<de.azapps.mirakel.new_ui.helper.Drawable> ( final FileMirakel ... de.azapps.mirakel.new_ui.helper.FileMirakel[] ) { return new java.util.ArrayList <> ( Collections2 . transform ( java.util.Arrays . java.util.List ( de.azapps.mirakel.new_ui.helper.FileMirakel[] ) , new Function < FileMirakel , Drawable > ( ) { @ java.lang.Override public de.azapps.mirakel.new_ui.helper.Drawable de.azapps.mirakel.new_ui.helper.Drawable ( final FileMirakel de.azapps.mirakel.new_ui.helper.FileMirakel ) { return de.azapps.mirakel.new_ui.helper.Drawable ( de.azapps.mirakel.new_ui.helper.FileMirakel , de.azapps.mirakel.new_ui.helper.FileMirakel . getPreview ( de.azapps.mirakel.new_ui.helper.Context ) ) ; } } ) ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.helper.Drawable de.azapps.mirakel.new_ui.helper.Drawable ( final FileMirakel de.azapps.mirakel.new_ui.helper.FileMirakel ) { return de.azapps.mirakel.new_ui.helper.Drawable ( de.azapps.mirakel.new_ui.helper.FileMirakel , de.azapps.mirakel.new_ui.helper.FileMirakel . getPreview ( de.azapps.mirakel.new_ui.helper.Context ) ) ; } 
@ java.lang.Override protected void void ( final java.util.List<de.azapps.mirakel.new_ui.helper.Drawable> < Drawable > java.util.List<de.azapps.mirakel.new_ui.helper.Drawable> ) { if ( ! isCancelled ( ) ) { for ( int int = NUMBER ; ( int < java.util.List<de.azapps.mirakel.new_ui.helper.ImageView> . size ( ) ) && ( int < java.util.List<de.azapps.mirakel.new_ui.helper.Drawable> . size ( ) ) ; int ++ ) { java.util.List<de.azapps.mirakel.new_ui.helper.ImageView> . get ( int ) . setImageDrawable ( java.util.List<de.azapps.mirakel.new_ui.helper.Drawable> . get ( int ) ) ; } } } 
public static de.azapps.mirakel.new_ui.helper.ListMirakel de.azapps.mirakel.new_ui.helper.ListMirakel ( final Context de.azapps.mirakel.new_ui.helper.Context , final ListMirakel de.azapps.mirakel.new_ui.helper.ListMirakel , final Helpers . Helpers Helpers.ExecInterface , final Preference de.azapps.mirakel.new_ui.helper.Preference ) { final java.lang.CharSequence [] java.lang.CharSequence[] = de.azapps.mirakel.new_ui.helper.Context . getResources ( ) . getStringArray ( R . array . task_sorting_items ) ; AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.new_ui.helper.Context ) ; AlertDialogWrapper.Builder . setTitle ( de.azapps.mirakel.new_ui.helper.Context . getString ( R . string . task_sorting_title ) ) ; AlertDialogWrapper.Builder . setItems ( java.lang.CharSequence[] , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.helper.DialogInterface , int int ) { de.azapps.mirakel.new_ui.helper.ListMirakel . setSortBy ( ListMirakel . SORT_BY . fromShort ( ( short ) int ) ) ; de.azapps.mirakel.new_ui.helper.ListMirakel . save ( ) ; if ( de.azapps.mirakel.new_ui.helper.Preference != null ) { de.azapps.mirakel.new_ui.helper.Preference . setSummary ( java.lang.CharSequence[] [ int ] ) ; } if ( Helpers.ExecInterface != null ) { Helpers.ExecInterface . exec ( ) ; } } } ) ; AlertDialogWrapper.Builder . show ( ) ; return de.azapps.mirakel.new_ui.helper.ListMirakel ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.helper.DialogInterface , int int ) { de.azapps.mirakel.new_ui.helper.ListMirakel . setSortBy ( ListMirakel . SORT_BY . fromShort ( ( short ) int ) ) ; de.azapps.mirakel.new_ui.helper.ListMirakel . save ( ) ; if ( de.azapps.mirakel.new_ui.helper.Preference != null ) { de.azapps.mirakel.new_ui.helper.Preference . setSummary ( java.lang.CharSequence[] [ int ] ) ; } if ( Helpers.ExecInterface != null ) { Helpers.ExecInterface . exec ( ) ; } } 
public void ( final Context de.azapps.mirakel.new_ui.search.Context , final SearchObject de.azapps.mirakel.new_ui.search.SearchObject ) { this . de.azapps.mirakel.new_ui.search.Context = de.azapps.mirakel.new_ui.search.Context ; this . de.azapps.mirakel.new_ui.search.SearchObject = de.azapps.mirakel.new_ui.search.SearchObject ; } 
private de.azapps.mirakel.new_ui.search.Uri de.azapps.mirakel.new_ui.search.Uri ( ) { switch ( de.azapps.mirakel.new_ui.search.SearchObject . getAutocompleteType ( ) ) { case TASK : return Task . URI ; case TAG : return MirakelInternalContentProvider . TASK_VIEW_TAG_JOIN_URI ; } throw new java.lang.IllegalArgumentException ( STRING ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.search.MirakelQueryBuilder de.azapps.mirakel.new_ui.search.MirakelQueryBuilder ( ) { final MirakelQueryBuilder de.azapps.mirakel.new_ui.search.MirakelQueryBuilder = new MirakelQueryBuilder ( de.azapps.mirakel.new_ui.search.Context ) ; switch ( de.azapps.mirakel.new_ui.search.SearchObject . getAutocompleteType ( ) ) { case TASK : de.azapps.mirakel.new_ui.search.MirakelQueryBuilder . and ( Task . VIEW_TABLE + '.' + Task . NAME , MirakelQueryBuilder . Operation . LIKE , '%' + de.azapps.mirakel.new_ui.search.SearchObject . getName ( ) + '%' ) ; break; case TAG : final MirakelQueryBuilder de.azapps.mirakel.new_ui.search.MirakelQueryBuilder = new MirakelQueryBuilder ( de.azapps.mirakel.new_ui.search.Context ) ; de.azapps.mirakel.new_ui.search.MirakelQueryBuilder . and ( Tag . TAG_CONNECTION_TABLE + STRING , MirakelQueryBuilder . Operation . EQ , de.azapps.mirakel.new_ui.search.SearchObject . getObjId ( ) ) . select ( Tag . TAG_CONNECTION_TABLE + STRING ) ; de.azapps.mirakel.new_ui.search.MirakelQueryBuilder . and ( Task . VIEW_TABLE + '.' + Task . ID , MirakelQueryBuilder . Operation . IN , de.azapps.mirakel.new_ui.search.MirakelQueryBuilder , MirakelInternalContentProvider . TAG_CONNECTION_URI ) ; break; } Task . addBasicFiler ( de.azapps.mirakel.new_ui.search.MirakelQueryBuilder ) ; ListMirakel . addSortBy ( de.azapps.mirakel.new_ui.search.MirakelQueryBuilder , ListMirakel . SORT_BY . OPT , true ) ; return de.azapps.mirakel.new_ui.search.MirakelQueryBuilder ; } 
@ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( ) { return new SpannableStringBuilder ( de.azapps.mirakel.new_ui.search.Context . getString ( R . string . search_title ) ) . append ( de.azapps.mirakel.new_ui.search.SearchObject . getText ( de.azapps.mirakel.new_ui.search.Context ) ) ; } 
public de.azapps.mirakel.new_ui.search.SearchObject de.azapps.mirakel.new_ui.search.SearchObject ( ) { return de.azapps.mirakel.new_ui.search.SearchObject ; } 
@ java.lang.Override public java.util.List<de.azapps.mirakel.new_ui.search.Task> < Task > java.util.List<de.azapps.mirakel.new_ui.search.Task> ( ) { return de.azapps.mirakel.new_ui.search.MirakelQueryBuilder ( ) . getList ( Task .class ) ; } 
@ java.lang.Override public long long ( ) { return de.azapps.mirakel.new_ui.search.MirakelQueryBuilder ( ) . count ( de.azapps.mirakel.new_ui.search.Uri ( ) ) ; } 
@ java.lang.Override public de.azapps.mirakel.new_ui.search.ShowDoneCases de.azapps.mirakel.new_ui.search.ShowDoneCases ( ) { return de.azapps.mirakel.new_ui.search.MirakelQueryBuilder ( ) . select ( STRING + Task . DONE + ')' , STRING ) . query ( Task . URI ) . doWithCursor ( new CursorWrapper . CursorWrapper < ShowDoneCases > ( ) { @ NonNull @ Override public ShowDoneCases convert ( @ NonNull final CursorGetter getter ) { if ( ! getter . moveToFirst ( ) ) { return ShowDoneCases . NOTHING ; } final long sum = getter . getLong ( NUMBER ) ; if ( sum == NUMBER ) { return ShowDoneCases . ONLY_UNDONE ; } if ( sum == getter . getLong ( NUMBER ) ) { return ShowDoneCases . ONLY_DONE ; } return ShowDoneCases . BOTH ; } } ) ; } 
@ NonNull @ Override public ShowDoneCases convert ( @ NonNull final CursorGetter getter ) { if ( ! getter . moveToFirst ( ) ) { return ShowDoneCases . NOTHING ; } final long sum = getter . getLong ( NUMBER ) ; if ( sum == NUMBER ) { return ShowDoneCases . ONLY_UNDONE ; } if ( sum == getter . getLong ( NUMBER ) ) { return ShowDoneCases . ONLY_DONE ; } return ShowDoneCases . BOTH ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.new_ui.search.Parcel , final int int ) { de.azapps.mirakel.new_ui.search.Parcel . writeParcelable ( this . de.azapps.mirakel.new_ui.search.SearchObject , NUMBER ) ; } 
private void ( final Parcel de.azapps.mirakel.new_ui.search.Parcel ) { this . de.azapps.mirakel.new_ui.search.SearchObject = de.azapps.mirakel.new_ui.search.Parcel . readParcelable ( SearchObject .class . java.lang.ClassLoader ( ) ) ; } 
public de.azapps.mirakel.new_ui.search.SearchListMirakel de.azapps.mirakel.new_ui.search.SearchListMirakel ( final Parcel de.azapps.mirakel.new_ui.search.Parcel ) { return new de.azapps.mirakel.new_ui.search.SearchListMirakel ( de.azapps.mirakel.new_ui.search.Parcel ) ; } 
public de.azapps.mirakel.new_ui.search.SearchListMirakel [] de.azapps.mirakel.new_ui.search.SearchListMirakel[] ( final int int ) { return new de.azapps.mirakel.new_ui.search.SearchListMirakel [ int ] ; } 
public static de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE ( java.lang.String java.lang.String ) { switch ( java.lang.String ) { case STRING : return de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE ; case STRING : return de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE ; default: throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
public void ( @ NonNull java.lang.String java.lang.String ) { this . int = - NUMBER ; this . int = - NUMBER ; this . java.lang.String = java.lang.String ; de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE = de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE . de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE ; int = NUMBER ; boolean = false ; } 
public void ( @ NonNull final Cursor de.azapps.mirakel.new_ui.search.Cursor ) { final CursorGetter de.azapps.mirakel.new_ui.search.CursorGetter = CursorGetter . unsafeGetter ( de.azapps.mirakel.new_ui.search.Cursor ) ; this . int = de.azapps.mirakel.new_ui.search.CursorGetter . getInt ( java.lang.String ) ; this . java.lang.String = de.azapps.mirakel.new_ui.search.CursorGetter . getString ( ModelBase . NAME ) ; this . de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE = de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE . de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE ( de.azapps.mirakel.new_ui.search.CursorGetter . getString ( java.lang.String ) ) ; this . int = de.azapps.mirakel.new_ui.search.CursorGetter . getInt ( java.lang.String ) ; this . int = de.azapps.mirakel.new_ui.search.CursorGetter . getInt ( Tag . BACKGROUND_COLOR ) ; this . boolean = de.azapps.mirakel.new_ui.search.CursorGetter . getBoolean ( Task . DONE ) ; } 
@ NonNull public java.lang.String java.lang.String ( ) { return java.lang.String ; } 
@ NonNull public java.lang.CharSequence java.lang.CharSequence ( Context de.azapps.mirakel.new_ui.search.Context ) { switch ( de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE ) { case de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE : return java.lang.String ; case de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE : Tag de.azapps.mirakel.new_ui.search.Tag = Tag . get ( int ) . get ( ) ; if ( de.azapps.mirakel.new_ui.search.Tag == null ) { return java.lang.String ; } else { final TagSpan de.azapps.mirakel.new_ui.search.TagSpan = new TagSpan ( de.azapps.mirakel.new_ui.search.Tag , de.azapps.mirakel.new_ui.search.Context ) ; SpannableStringBuilder de.azapps.mirakel.new_ui.search.SpannableStringBuilder = new SpannableStringBuilder ( ) ; de.azapps.mirakel.new_ui.search.SpannableStringBuilder . append ( new SpannableString ( de.azapps.mirakel.new_ui.search.Tag . getName ( ) ) ) ; de.azapps.mirakel.new_ui.search.SpannableStringBuilder . setSpan ( de.azapps.mirakel.new_ui.search.TagSpan , NUMBER , de.azapps.mirakel.new_ui.search.Tag . getName ( ) . length ( ) , Spannable . SPAN_EXCLUSIVE_EXCLUSIVE ) ; return de.azapps.mirakel.new_ui.search.SpannableStringBuilder ; } } return STRING ; } 
public int int ( ) { return int ; } 
public int int ( ) { return int ; } 
public int int ( ) { return int ; } 
public boolean boolean ( ) { return boolean ; } 
@ NonNull public de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE ( ) { return de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE ; } 
public static de.azapps.mirakel.new_ui.search.Cursor de.azapps.mirakel.new_ui.search.Cursor ( @ NonNull final Context de.azapps.mirakel.new_ui.search.Context , @ NonNull final java.lang.String java.lang.String ) { MirakelQueryBuilder de.azapps.mirakel.new_ui.search.MirakelQueryBuilder = new MirakelQueryBuilder ( de.azapps.mirakel.new_ui.search.Context ) ; de.azapps.mirakel.new_ui.search.MirakelQueryBuilder . and ( STRING , MirakelQueryBuilder . Operation . LIKE , '%' + java.lang.String + '%' ) . select ( ModelBase . ID , java.lang.String , ModelBase . NAME , java.lang.String , Tag . BACKGROUND_COLOR , Task . DONE , STRING + java.lang.String . int ( ) + STRING ) . sort ( STRING , MirakelQueryBuilder . Sorting . DESC ) ; return de.azapps.mirakel.new_ui.search.MirakelQueryBuilder . query ( MirakelInternalContentProvider . AUTOCOMPLETE_URI ) . getRawCursor ( ) ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( Parcel de.azapps.mirakel.new_ui.search.Parcel , int int ) { de.azapps.mirakel.new_ui.search.Parcel . writeString ( this . java.lang.String ) ; de.azapps.mirakel.new_ui.search.Parcel . writeInt ( this . int ) ; de.azapps.mirakel.new_ui.search.Parcel . writeInt ( this . int ) ; de.azapps.mirakel.new_ui.search.Parcel . writeInt ( this . int ) ; de.azapps.mirakel.new_ui.search.Parcel . writeByte ( boolean ? ( byte ) NUMBER : ( byte ) NUMBER ) ; de.azapps.mirakel.new_ui.search.Parcel . writeInt ( this . de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE == null ? - NUMBER : this . de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE . int ( ) ) ; } 
private void ( Parcel de.azapps.mirakel.new_ui.search.Parcel ) { this . java.lang.String = de.azapps.mirakel.new_ui.search.Parcel . readString ( ) ; this . int = de.azapps.mirakel.new_ui.search.Parcel . readInt ( ) ; this . int = de.azapps.mirakel.new_ui.search.Parcel . readInt ( ) ; this . int = de.azapps.mirakel.new_ui.search.Parcel . readInt ( ) ; this . boolean = de.azapps.mirakel.new_ui.search.Parcel . readByte ( ) != NUMBER ; int int = de.azapps.mirakel.new_ui.search.Parcel . readInt ( ) ; this . de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE = int == - NUMBER ? null : de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE . de.azapps.mirakel.new_ui.search.SearchObject.AUTOCOMPLETE_TYPE[] ( ) [ int ] ; } 
public de.azapps.mirakel.new_ui.search.SearchObject de.azapps.mirakel.new_ui.search.SearchObject ( Parcel de.azapps.mirakel.new_ui.search.Parcel ) { return new de.azapps.mirakel.new_ui.search.SearchObject ( de.azapps.mirakel.new_ui.search.Parcel ) ; } 
public de.azapps.mirakel.new_ui.search.SearchObject [] de.azapps.mirakel.new_ui.search.SearchObject[] ( int int ) { return new de.azapps.mirakel.new_ui.search.SearchObject [ int ] ; } 
void void ( Tag de.azapps.mirakel.new_ui.views.Tag ); 
void void ( Tag de.azapps.mirakel.new_ui.views.Tag ); 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , android . R . attr . autoCompleteTextViewStyle ); } 
@ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); final java.util.List<de.azapps.mirakel.new_ui.views.Tag> < Tag > java.util.List<de.azapps.mirakel.new_ui.views.Tag> = Tag . all ( ) ; for ( final Tag de.azapps.mirakel.new_ui.views.Tag : java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { java.util.Set<java.lang.String> . boolean ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ; } de.azapps.mirakel.new_ui.views.ArrayAdapter = new ArrayAdapter <> ( getContext ( ) , R . layout . simple_list_item_1 , new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ) ; setAdapter ( de.azapps.mirakel.new_ui.views.ArrayAdapter ) ; void ( ) ; de.azapps.mirakel.new_ui.views.Drawable = getBackground ( ) ; de.azapps.mirakel.new_ui.views.Drawable . setColorFilter ( ThemeManager . getPrimaryThemeColor ( ) , PorterDuff . Mode . SRC_IN ) ; void ( new ColorDrawable ( Color . TRANSPARENT ) ) ; setTokenizer ( new MultiAutoCompleteTextView . MultiAutoCompleteTextView ( ) ) ; setMovementMethod ( LinkMovementMethod . getInstance ( ) ) ; setOnKeyListener ( this ) ; setCustomSelectionActionModeCallback ( new ActionMode . ActionMode ( ) { @ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.views.ActionMode , final Menu de.azapps.mirakel.new_ui.views.Menu ) { return false ; } @ java.lang.Override public void void ( final ActionMode de.azapps.mirakel.new_ui.views.ActionMode ) {            } @ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.views.ActionMode , final Menu de.azapps.mirakel.new_ui.views.Menu ) { return false ; } @ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.views.ActionMode , final MenuItem de.azapps.mirakel.new_ui.views.MenuItem ) { return false ; } } ) ; setOnClickListener ( this ) ; setEnabled ( true ) ; setInputType ( InputType . TYPE_NULL ) ; clearFocus ( ) ; } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.views.ActionMode , final Menu de.azapps.mirakel.new_ui.views.Menu ) { return false ; } 
@ java.lang.Override public void void ( final ActionMode de.azapps.mirakel.new_ui.views.ActionMode ) {            } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.views.ActionMode , final Menu de.azapps.mirakel.new_ui.views.Menu ) { return false ; } 
@ java.lang.Override public boolean boolean ( final ActionMode de.azapps.mirakel.new_ui.views.ActionMode , final MenuItem de.azapps.mirakel.new_ui.views.MenuItem ) { return false ; } 
@ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) public void void ( final boolean boolean ) { boolean = boolean ; if ( ! boolean ) { void ( de.azapps.mirakel.new_ui.views.Drawable ) ; } } 
public void void ( @ Nullable final de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener ) { this . de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener = de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener ; } 
@ Nullable public java.util.List<de.azapps.mirakel.new_ui.views.Tag> < Tag > java.util.List<de.azapps.mirakel.new_ui.views.Tag> ( ) { return java.util.List<de.azapps.mirakel.new_ui.views.Tag> ; } 
private void void ( final Tag de.azapps.mirakel.new_ui.views.Tag ) { final View de.azapps.mirakel.new_ui.views.View = inflate ( getContext ( ) , R . layout . tag_edit_dialog , null ) ; final EditText de.azapps.mirakel.new_ui.views.EditText = ( EditText ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . tag_edit_name ) ; de.azapps.mirakel.new_ui.views.EditText . setText ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ; final ColorPicker de.azapps.mirakel.new_ui.views.ColorPicker = ( ColorPicker ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . color_picker ) ; final SVBar de.azapps.mirakel.new_ui.views.SVBar = ( SVBar ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . svbar_color_picker ) ; de.azapps.mirakel.new_ui.views.ColorPicker . addSVBar ( de.azapps.mirakel.new_ui.views.SVBar ) ; de.azapps.mirakel.new_ui.views.ColorPicker . setColor ( de.azapps.mirakel.new_ui.views.Tag . getBackgroundColor ( ) ) ; de.azapps.mirakel.new_ui.views.ColorPicker . setOldCenterColor ( de.azapps.mirakel.new_ui.views.Tag . getBackgroundColor ( ) ) ; new AlertDialogWrapper . AlertDialogWrapper ( getContext ( ) ) . setView ( de.azapps.mirakel.new_ui.views.View ) . setNegativeButton ( android . R . string . cancel , null ) . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , int int ) { de.azapps.mirakel.new_ui.views.Tag . setBackgroundColor ( de.azapps.mirakel.new_ui.views.ColorPicker . getColor ( ) ) ; de.azapps.mirakel.new_ui.views.Tag . setName ( de.azapps.mirakel.new_ui.views.EditText . getText ( ) . toString ( ) ) ; final Optional < Tag > de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> = Tag . getByName ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ; if ( ! de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> . isPresent ( ) || ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> . get ( ) . getId ( ) == de.azapps.mirakel.new_ui.views.Tag . getId ( ) ) ) { de.azapps.mirakel.new_ui.views.Tag . save ( ) ; } else if ( de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener != null ) { de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener . void ( de.azapps.mirakel.new_ui.views.Tag ) ; de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener . void ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> . get ( ) ) ; } void ( ) ; } } ) . show ( ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , int int ) { de.azapps.mirakel.new_ui.views.Tag . setBackgroundColor ( de.azapps.mirakel.new_ui.views.ColorPicker . getColor ( ) ) ; de.azapps.mirakel.new_ui.views.Tag . setName ( de.azapps.mirakel.new_ui.views.EditText . getText ( ) . toString ( ) ) ; final Optional < Tag > de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> = Tag . getByName ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ; if ( ! de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> . isPresent ( ) || ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> . get ( ) . getId ( ) == de.azapps.mirakel.new_ui.views.Tag . getId ( ) ) ) { de.azapps.mirakel.new_ui.views.Tag . save ( ) ; } else if ( de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener != null ) { de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener . void ( de.azapps.mirakel.new_ui.views.Tag ) ; de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener . void ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> . get ( ) ) ; } void ( ) ; } 
public void void ( final @ NonNull java.util.List<de.azapps.mirakel.new_ui.views.Tag> < Tag > java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { for ( final Tag de.azapps.mirakel.new_ui.views.Tag : java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { java.util.Set<java.lang.String> . boolean ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ; } java.util.List<de.azapps.mirakel.new_ui.views.Tag> = java.util.List<de.azapps.mirakel.new_ui.views.Tag> ; for ( final Tag de.azapps.mirakel.new_ui.views.Tag : java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { java.util.Set<java.lang.String> . boolean ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ; } void ( ) ; void ( ) ; } 
private void void ( ) { de.azapps.mirakel.new_ui.views.ArrayAdapter . clear ( ) ; de.azapps.mirakel.new_ui.views.ArrayAdapter . addAll ( java.util.Set<java.lang.String> ) ; } 
@ java.lang.Override @ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) protected void void ( ) { super. onAttachedToWindow ( ) ; final OnFocusChangeListener de.azapps.mirakel.new_ui.views.OnFocusChangeListener = getOnFocusChangeListener ( ) ; if ( de.azapps.mirakel.new_ui.views.OnFocusChangeListener != null ) { setOnFocusChangeListener ( new OnFocusChangeListener ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.views.View , final boolean boolean ) { de.azapps.mirakel.new_ui.views.OnFocusChangeListener . onFocusChange ( de.azapps.mirakel.new_ui.views.View , boolean ) ; if ( boolean ) { if ( boolean ) { void ( de.azapps.mirakel.new_ui.views.Drawable ) ; } setInputType ( InputType . TYPE_TEXT_FLAG_AUTO_COMPLETE ) ; if ( getText ( ) . length ( ) == NUMBER ) { boolean = true ; setText ( STRING ) ; boolean = false ; } } else { setInputType ( InputType . TYPE_NULL ) ; if ( boolean ) { void ( new ColorDrawable ( Color . TRANSPARENT ) ) ; } void ( java.lang.String ) ; java.lang.String = STRING ; void ( ) ; } } } ) ; } } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.views.View , final boolean boolean ) { de.azapps.mirakel.new_ui.views.OnFocusChangeListener . onFocusChange ( de.azapps.mirakel.new_ui.views.View , boolean ) ; if ( boolean ) { if ( boolean ) { void ( de.azapps.mirakel.new_ui.views.Drawable ) ; } setInputType ( InputType . TYPE_TEXT_FLAG_AUTO_COMPLETE ) ; if ( getText ( ) . length ( ) == NUMBER ) { boolean = true ; setText ( STRING ) ; boolean = false ; } } else { setInputType ( InputType . TYPE_NULL ) ; if ( boolean ) { void ( new ColorDrawable ( Color . TRANSPARENT ) ) ; } void ( java.lang.String ) ; java.lang.String = STRING ; void ( ) ; } } 
@ java.lang.Override protected void void ( ) { super. onDetachedFromWindow ( ) ; } 
private void void ( ) { final SpannableStringBuilder de.azapps.mirakel.new_ui.views.SpannableStringBuilder = new SpannableStringBuilder ( ) ; int int = NUMBER ; for ( final Tag de.azapps.mirakel.new_ui.views.Tag : java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { final java.lang.String java.lang.String = de.azapps.mirakel.new_ui.views.Tag . getName ( ) ; if ( ! TextUtils . isEmpty ( java.lang.String . java.lang.String ( ) ) ) { de.azapps.mirakel.new_ui.views.SpannableStringBuilder . append ( new SpannableString ( java.lang.String ) ) ; final int int = java.lang.String . int ( ) ; de.azapps.mirakel.new_ui.views.SpannableStringBuilder . setSpan ( new TagSpan ( de.azapps.mirakel.new_ui.views.Tag , getContext ( ) ) , int , int + int , Spannable . SPAN_EXCLUSIVE_EXCLUSIVE ) ; de.azapps.mirakel.new_ui.views.SpannableStringBuilder . setSpan ( new ClickableSpan ( ) { @ java.lang.Override public void void ( View de.azapps.mirakel.new_ui.views.View ) { void ( de.azapps.mirakel.new_ui.views.Tag ) ; } } , int , int + int , Spannable . SPAN_EXCLUSIVE_EXCLUSIVE ) ; int += int ; de.azapps.mirakel.new_ui.views.SpannableStringBuilder . append ( ',' ) ; de.azapps.mirakel.new_ui.views.SpannableStringBuilder . setSpan ( new ForegroundColorSpan ( Color . TRANSPARENT ) , int , ++ int , Spannable . SPAN_EXCLUSIVE_EXCLUSIVE ) ; } } de.azapps.mirakel.new_ui.views.SpannableStringBuilder . append ( new SpannableString ( java.lang.String ) ) ; if ( de.azapps.mirakel.new_ui.views.SpannableStringBuilder . length ( ) == NUMBER && hasFocus ( ) ) { de.azapps.mirakel.new_ui.views.SpannableStringBuilder . append ( ' ' ) ; } boolean = true ; setText ( de.azapps.mirakel.new_ui.views.SpannableStringBuilder ) ; boolean = false ; setSelection ( getText ( ) . length ( ) ) ; setPadding ( getPaddingLeft ( ) , getPaddingTop ( ) , getPaddingTop ( ) , ( int ) ViewHelper . dpToPx ( getContext ( ) , getContext ( ) . getResources ( ) . getDimension ( R . dimen . padding_default_half ) ) ) ; } 
@ java.lang.Override public void void ( View de.azapps.mirakel.new_ui.views.View ) { void ( de.azapps.mirakel.new_ui.views.Tag ) ; } 
@ java.lang.Override protected void void ( final java.lang.CharSequence java.lang.CharSequence , final int int , final int int , final int int ) { super. onTextChanged ( java.lang.CharSequence , int , int , int ) ; if ( boolean ) { return; } if ( ! TextUtils . isEmpty ( java.lang.CharSequence ) && ! TextUtils . isEmpty ( java.lang.CharSequence . java.lang.String ( ) . java.lang.String ( ) ) ) { final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( java.lang.CharSequence . java.lang.String ( ) . java.lang.String[] ( STRING ) ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList <> ( Collections2 . transform ( java.util.List<java.lang.String> , new Function < java.lang.String , java.lang.String > ( ) { @ Nullable @ java.lang.Override public java.lang.String java.lang.String ( @ Nullable final java.lang.String java.lang.String ) { return ( java.lang.String == null ) ? null : java.lang.String . java.lang.String ( ) ; } } ) ) ; final java.util.List<de.azapps.mirakel.new_ui.views.Tag> < Tag > java.util.List<de.azapps.mirakel.new_ui.views.Tag> = new java.util.ArrayList<de.azapps.mirakel.new_ui.views.Tag> <> ( java.util.List<java.lang.String> . int ( ) ) ; for ( final Tag de.azapps.mirakel.new_ui.views.Tag : this . java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { if ( ( de.azapps.mirakel.new_ui.views.Tag != null ) && ! java.util.List<java.lang.String> . boolean ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ) { java.util.List<de.azapps.mirakel.new_ui.views.Tag> . add ( de.azapps.mirakel.new_ui.views.Tag ) ; } } if ( int < int ) { for ( final Tag de.azapps.mirakel.new_ui.views.Tag : java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { if ( de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener != null ) { de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener . void ( de.azapps.mirakel.new_ui.views.Tag ) ; } this . java.util.List<de.azapps.mirakel.new_ui.views.Tag> . remove ( de.azapps.mirakel.new_ui.views.Tag ) ; java.util.Set<java.lang.String> . boolean ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ; } } if ( int < int ) { if ( ! java.lang.CharSequence . java.lang.String ( ) . boolean ( STRING ) && ! java.util.List<java.lang.String> . boolean ( ) ) { java.util.List<java.lang.String> . java.lang.String ( java.util.List<java.lang.String> . int ( ) - NUMBER ) ; } for ( final java.lang.String java.lang.String : java.util.List<java.lang.String> ) { void ( java.lang.String ) ; } } boolean boolean = ! java.lang.CharSequence . java.lang.String ( ) . boolean ( STRING ) ; if ( boolean && ( int < int ) && ! java.util.List<de.azapps.mirakel.new_ui.views.Tag> . isEmpty ( ) ) { final java.lang.String java.lang.String = java.util.List<java.lang.String> . java.lang.String ( java.util.List<java.lang.String> . int ( ) - NUMBER ) ; boolean = true ; for ( final Tag de.azapps.mirakel.new_ui.views.Tag : java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { if ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) . startsWith ( java.lang.String ) ) { boolean = false ; break; } } } if ( boolean ) { java.lang.String = java.util.List<java.lang.String> . java.lang.String ( java.util.List<java.lang.String> . int ( ) - NUMBER ) ; } else { java.lang.String = STRING ; } if ( boolean && ( int < int ) && ! this . java.util.List<de.azapps.mirakel.new_ui.views.Tag> . isEmpty ( ) ) { final java.lang.String java.lang.String = this . java.util.List<de.azapps.mirakel.new_ui.views.Tag> . get ( this . java.util.List<de.azapps.mirakel.new_ui.views.Tag> . size ( ) - NUMBER ) . getName ( ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = STRING ; } } if ( ! java.util.List<de.azapps.mirakel.new_ui.views.Tag> . isEmpty ( ) || ! java.util.List<java.lang.String> . boolean ( ) ) { void ( ) ; } void ( ) ; } if ( hasFocus ( ) && ( int == NUMBER && int == NUMBER || getText ( ) . length ( ) == NUMBER ) ) { boolean = true ; setText ( STRING ) ; setSelection ( getText ( ) . length ( ) ) ; boolean = false ; } } 
@ Nullable @ java.lang.Override public java.lang.String java.lang.String ( @ Nullable final java.lang.String java.lang.String ) { return ( java.lang.String == null ) ? null : java.lang.String . java.lang.String ( ) ; } 
private void void ( final @ NonNull java.lang.String java.lang.String ) { final Tag de.azapps.mirakel.new_ui.views.Tag ; final Optional < Tag > de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> = Tag . getByName ( java.lang.String ) ; if ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Tag = de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Tag> . get ( ) ; if ( java.util.List<de.azapps.mirakel.new_ui.views.Tag> . contains ( de.azapps.mirakel.new_ui.views.Tag ) ) { return; } } else { de.azapps.mirakel.new_ui.views.Tag = Tag . newTag ( java.lang.String ) ; } if ( de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener != null ) { de.azapps.mirakel.new_ui.views.AddTagView.TagChangedListener . void ( de.azapps.mirakel.new_ui.views.Tag ) ; } java.util.List<de.azapps.mirakel.new_ui.views.Tag> . add ( de.azapps.mirakel.new_ui.views.Tag ) ; java.util.Set<java.lang.String> . boolean ( de.azapps.mirakel.new_ui.views.Tag . getName ( ) ) ; } 
@ java.lang.Override @ TargetApi ( Build . VERSION_CODES . ICE_CREAM_SANDWICH ) public void void ( @ NonNull final Drawable de.azapps.mirakel.new_ui.views.Drawable ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ) { super. setBackground ( de.azapps.mirakel.new_ui.views.Drawable ) ; } else { setBackgroundDrawable ( de.azapps.mirakel.new_ui.views.Drawable ) ; } } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.views.View ) { setInputType ( InputType . TYPE_TEXT_FLAG_AUTO_COMPLETE ) ; requestFocusFromTouch ( ) ; } 
@ java.lang.Override public boolean boolean ( final View de.azapps.mirakel.new_ui.views.View , final int int , final KeyEvent de.azapps.mirakel.new_ui.views.KeyEvent ) { if ( ( de.azapps.mirakel.new_ui.views.KeyEvent . getAction ( ) == KeyEvent . ACTION_DOWN ) && ( int == KeyEvent . KEYCODE_ENTER ) ) { final java.lang.String [] java.lang.String[] = getText ( ) . toString ( ) . split ( STRING ) ; if ( java.lang.String[] . int > NUMBER ) { void ( java.lang.String[] [ java.lang.String[] . int - NUMBER ] ) ; void ( ) ; } clearFocus ( ) ; return true ; } return false ; } 
@ java.lang.Override public void void ( ) {    } 
@ java.lang.Override public void void ( ) {    } 
public float float ( ) { final TypedValue de.azapps.mirakel.new_ui.views.TypedValue = new TypedValue ( ) ; final DisplayMetrics de.azapps.mirakel.new_ui.views.DisplayMetrics = new DisplayMetrics ( ) ; getContext ( ) . getTheme ( ) . resolveAttribute ( android . R . attr . listPreferredItemHeight , de.azapps.mirakel.new_ui.views.TypedValue , true ) ; ( ( WindowManager ) ( getContext ( ) . getSystemService ( Context . WINDOW_SERVICE ) ) ) . getDefaultDisplay ( ) . getMetrics ( de.azapps.mirakel.new_ui.views.DisplayMetrics ) ; return TypedValue . complexToDimension ( value . data , de.azapps.mirakel.new_ui.views.DisplayMetrics ) ; } 
@ java.lang.Override public void void ( final int int ) { final int int = ( int ) ( ( ( int > NUMBER ) ? NUMBER : int ) * float ) ; setDropDownHeight ( int ) ; setDropDownVerticalOffset ( - NUMBER * int - getHeight ( ) ) ; super. onFilterComplete ( int ) ; } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); inflate ( de.azapps.mirakel.new_ui.views.Context , R . layout . view_dates , this ) ; ButterKnife . inject ( this , this ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setup ( R . drawable . ic_calendar_white_18dp , de.azapps.mirakel.new_ui.views.Context . getString ( R . string . task_due_header ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setup ( R . drawable . ic_history_white_18dp , de.azapps.mirakel.new_ui.views.Context . getString ( R . string . task_due_recurrence_header ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setup ( R . drawable . ic_alarm_white_18dp , de.azapps.mirakel.new_ui.views.Context . getString ( R . string . task_reminder_header ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setup ( R . drawable . ic_list_white_18dp , de.azapps.mirakel.new_ui.views.Context . getString ( R . string . task_list_header ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; } 
private void void ( ) { if ( isInEditMode ( ) ) { de.azapps.mirakel.new_ui.views.KeyValueView . setValue ( STRING ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setValue ( STRING ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setValue ( STRING ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setValue ( STRING ) ; } else { if ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.KeyValueView . setValue ( DateTimeHelper . formatDate ( getContext ( ) , de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( TaskHelper . getTaskDueColor ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> , boolean ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setVisibility ( VISIBLE ) ; if ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Recurring> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.KeyValueView . setValue ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Recurring> . get ( ) . generateDescription ( ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( ThemeManager . getColor ( R . attr . colorTextBlack ) ) ; } else { de.azapps.mirakel.new_ui.views.KeyValueView . setNoValue ( getContext ( ) . getString ( R . string . none_recurring ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; } } else { de.azapps.mirakel.new_ui.views.KeyValueView . setNoValue ( getContext ( ) . getString ( R . string . due_date ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setVisibility ( GONE ) ; } de.azapps.mirakel.new_ui.views.KeyValueView . setValue ( java.lang.String ) ; if ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.KeyValueView . setValue ( DateTimeHelper . formatReminder ( getContext ( ) , de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> . get ( ) ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( TaskHelper . getTaskDueColor ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> , false ) ) ; } else { de.azapps.mirakel.new_ui.views.KeyValueView . setNoValue ( getContext ( ) . getString ( R . string . reminder ) ) ; de.azapps.mirakel.new_ui.views.KeyValueView . setColor ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; } } invalidate ( ) ; requestLayout ( ) ; } 
public void void ( final Task de.azapps.mirakel.new_ui.views.Task ) { this . de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> = de.azapps.mirakel.new_ui.views.Task . getDue ( ) ; this . java.lang.String = de.azapps.mirakel.new_ui.views.Task . getList ( ) . getName ( ) ; this . de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> = de.azapps.mirakel.new_ui.views.Task . getReminder ( ) ; this . boolean = de.azapps.mirakel.new_ui.views.Task . isDone ( ) ; this . de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.Recurring> = de.azapps.mirakel.new_ui.views.Task . getRecurrence ( ) ; void ( ) ; } 
public void void ( final OnClickListener de.azapps.mirakel.new_ui.views.OnClickListener , final OnClickListener de.azapps.mirakel.new_ui.views.OnClickListener , final OnClickListener de.azapps.mirakel.new_ui.views.OnClickListener , final OnClickListener de.azapps.mirakel.new_ui.views.OnClickListener ) { this . de.azapps.mirakel.new_ui.views.OnClickListener = de.azapps.mirakel.new_ui.views.OnClickListener ; this . de.azapps.mirakel.new_ui.views.OnClickListener = de.azapps.mirakel.new_ui.views.OnClickListener ; this . de.azapps.mirakel.new_ui.views.OnClickListener = de.azapps.mirakel.new_ui.views.OnClickListener ; this . de.azapps.mirakel.new_ui.views.OnClickListener = de.azapps.mirakel.new_ui.views.OnClickListener ; void ( ) ; } 
@ OnClick ( R . id . dates_due ) void void ( ) { if ( de.azapps.mirakel.new_ui.views.OnClickListener != null ) { de.azapps.mirakel.new_ui.views.OnClickListener . onClick ( de.azapps.mirakel.new_ui.views.KeyValueView ) ; } } 
@ OnClick ( R . id . dates_due_recurrence ) void void ( ) { if ( ( de.azapps.mirakel.new_ui.views.OnClickListener != null ) && de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.DateTime> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.OnClickListener . onClick ( de.azapps.mirakel.new_ui.views.KeyValueView ) ; } } 
@ OnClick ( R . id . dates_list ) void void ( ) { if ( de.azapps.mirakel.new_ui.views.OnClickListener != null ) { de.azapps.mirakel.new_ui.views.OnClickListener . onClick ( de.azapps.mirakel.new_ui.views.KeyValueView ) ; } } 
@ OnClick ( R . id . dates_reminder ) void void ( ) { if ( de.azapps.mirakel.new_ui.views.OnClickListener != null ) { de.azapps.mirakel.new_ui.views.OnClickListener . onClick ( de.azapps.mirakel.new_ui.views.KeyValueView ) ; } } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); int = getResources ( ) . getInteger ( R . integer . file_count_per_line ) ; final int int = ( int ) getResources ( ) . getDimension ( R . dimen . file_preview_size ) ; final int int = ( int ) getResources ( ) . getDimension ( R . dimen . padding_default_half ) ; LinearLayout.LayoutParams = new LinearLayout . LinearLayout ( int , int ) ; int = ( int ) ( getResources ( ) . getDimension ( R . dimen . file_preview_padding ) / NUMBER ) ; LinearLayout.LayoutParams . setMargins ( int , int , int , int ) ; de.azapps.mirakel.new_ui.views.LayoutInflater = LayoutInflater . from ( de.azapps.mirakel.new_ui.views.Context ) ; } 
@ java.lang.Override protected void void ( final int int , final int int , final int int , final int int ) { super. onSizeChanged ( int , int , int , int ) ; int int = int / LinearLayout.LayoutParams . width ; while ( ( int - ( int * LinearLayout.LayoutParams . width ) ) < ( int + int ) ) { int -- ; } int = int ; final int int = ( int ) ( ( int - ( int * LinearLayout.LayoutParams . width ) ) / ( ( int + NUMBER ) * NUMBER ) ) ; LinearLayout.LayoutParams . leftMargin = int ; LinearLayout.LayoutParams . rightMargin = int ; void ( false ) ; } 
public void void ( ) { BottomSheet de.azapps.mirakel.new_ui.views.BottomSheet = new BottomSheet . BottomSheet ( de.azapps.mirakel.new_ui.views.Activity ) . title ( R . string . add_files ) . sheet ( R . menu . add_file_menu ) . grid ( ) . setOnDismissListener ( this ) . listener ( this ) . build ( ) ; Menu de.azapps.mirakel.new_ui.views.Menu = de.azapps.mirakel.new_ui.views.BottomSheet . getMenu ( ) ; MenuHelper . colorizeMenuItems ( de.azapps.mirakel.new_ui.views.Menu , ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; boolean = true ; de.azapps.mirakel.new_ui.views.BottomSheet . show ( ) ; } 
public void void ( ) { if ( ( de.azapps.mirakel.new_ui.views.Uri != null ) && ( de.azapps.mirakel.new_ui.views.Task != null ) ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . ADD_PHOTO ) ; java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . add ( FileMirakel . newFile ( getContext ( ) , de.azapps.mirakel.new_ui.views.Task , de.azapps.mirakel.new_ui.views.Uri ) . get ( ) ) ; de.azapps.mirakel.new_ui.views.Uri = null ; void ( ) ; } } 
public void void ( final @ NonNull Uri de.azapps.mirakel.new_ui.views.Uri ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . ADD_FILE ) ; final Optional < FileMirakel > de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.FileMirakel> = FileMirakel . newFile ( getContext ( ) , de.azapps.mirakel.new_ui.views.Task , de.azapps.mirakel.new_ui.views.Uri ) ; if ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.FileMirakel> . isPresent ( ) ) { java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . add ( de.azapps.mirakel.new_ui.views.Optional<de.azapps.mirakel.new_ui.views.FileMirakel> . get ( ) ) ; void ( ) ; } } 
public void void ( final @ NonNull Activity de.azapps.mirakel.new_ui.views.Activity ) { de.azapps.mirakel.new_ui.views.Activity = de.azapps.mirakel.new_ui.views.Activity ; } 
public void void ( final @ NonNull Task de.azapps.mirakel.new_ui.views.Task ) { if ( ( de.azapps.mirakel.new_ui.views.Task != null ) && ( de.azapps.mirakel.new_ui.views.Task . getId ( ) == de.azapps.mirakel.new_ui.views.Task . getId ( ) ) ) { return; } de.azapps.mirakel.new_ui.views.Task = de.azapps.mirakel.new_ui.views.Task ; this . java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> = de.azapps.mirakel.new_ui.views.Task . getFiles ( ) ; void ( ) ; } 
private void void ( ) { void ( true ) ; } 
private void void ( final boolean boolean ) { removeAllViews ( ) ; if ( boolean ) { java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . clear ( ) ; } int int = NUMBER ; final java.util.List<de.azapps.mirakel.new_ui.views.ImageView> < ImageView > java.util.List<de.azapps.mirakel.new_ui.views.ImageView> = new java.util.ArrayList <> ( java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . size ( ) ) ; while ( int < ( java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . size ( ) + NUMBER ) ) { final LinearLayout de.azapps.mirakel.new_ui.views.LinearLayout = new LinearLayout ( getContext ( ) ) ; de.azapps.mirakel.new_ui.views.LinearLayout . setOrientation ( HORIZONTAL ) ; de.azapps.mirakel.new_ui.views.LinearLayout . setGravity ( Gravity . CENTER_VERTICAL ) ; int = int ( int , java.util.List<de.azapps.mirakel.new_ui.views.ImageView> , de.azapps.mirakel.new_ui.views.LinearLayout ) ; addView ( de.azapps.mirakel.new_ui.views.LinearLayout ) ; } void ( ) ; new ImageLoader ( java.util.List<de.azapps.mirakel.new_ui.views.ImageView> , getContext ( ) ) . execute ( java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . toArray ( new FileMirakel [ java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . size ( ) ] ) ) ; } 
@ java.lang.Override public void void ( ) { void ( ) ; super. invalidate ( ) ; } 
private void void ( ) { if ( this . getOrientation ( ) == LinearLayout . VERTICAL ) { int int = NUMBER ; int int = NUMBER ; this . measureChildren ( NUMBER , NUMBER ) ; for ( int int = NUMBER ; int < this . getChildCount ( ) ; int ++ ) { View de.azapps.mirakel.new_ui.views.View = this . getChildAt ( int ) ; int += de.azapps.mirakel.new_ui.views.View . getMeasuredHeight ( ) ; int = ( int < de.azapps.mirakel.new_ui.views.View . getMeasuredWidth ( ) ) ? de.azapps.mirakel.new_ui.views.View . getMeasuredWidth ( ) : int ; } int = ( int < int ) ? int : int ; int = ( int < int ) ? int : int ; } this . setMeasuredDimension ( int , int ) ; } 
private void void ( ) { for ( final FileMirakel de.azapps.mirakel.new_ui.views.FileMirakel : java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> ) { if ( java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . remove ( de.azapps.mirakel.new_ui.views.FileMirakel ) ) { de.azapps.mirakel.new_ui.views.FileMirakel . destroy ( ) ; } } void ( ) ; } 
private int int ( int int , final java.util.List<de.azapps.mirakel.new_ui.views.ImageView> < ImageView > java.util.List<de.azapps.mirakel.new_ui.views.ImageView> , final LinearLayout de.azapps.mirakel.new_ui.views.LinearLayout ) { for ( int int = NUMBER ; int < int ; int ++ ) { if ( int < java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . size ( ) ) { final FileMirakel de.azapps.mirakel.new_ui.views.FileMirakel = java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . get ( int ) ; final View de.azapps.mirakel.new_ui.views.View = de.azapps.mirakel.new_ui.views.LayoutInflater . inflate ( R . layout . file_item , null ) ; de.azapps.mirakel.new_ui.views.View . setLayoutParams ( LinearLayout.LayoutParams ) ; void ( de.azapps.mirakel.new_ui.views.View , java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . contains ( de.azapps.mirakel.new_ui.views.FileMirakel ) ? ThemeManager . getColor ( R . attr . colorCAB ) : Color . TRANSPARENT ) ; java.util.List<de.azapps.mirakel.new_ui.views.ImageView> . add ( ( ImageView ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . file_preview_image ) ) ; ( ( TextView ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . file_preview_text ) ) . setText ( de.azapps.mirakel.new_ui.views.FileMirakel . getName ( ) ) ; de.azapps.mirakel.new_ui.views.View . setTag ( de.azapps.mirakel.new_ui.views.FileMirakel ) ; de.azapps.mirakel.new_ui.views.View . setOnClickListener ( this ) ; de.azapps.mirakel.new_ui.views.View . setOnLongClickListener ( this ) ; de.azapps.mirakel.new_ui.views.LinearLayout . addView ( de.azapps.mirakel.new_ui.views.View ) ; } else if ( int == java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . size ( ) ) { de.azapps.mirakel.new_ui.views.View = de.azapps.mirakel.new_ui.views.LayoutInflater . inflate ( R . layout . add_file_view , null ) ; de.azapps.mirakel.new_ui.views.View . setLayoutParams ( LinearLayout.LayoutParams ) ; de.azapps.mirakel.new_ui.views.ImageView = ( ImageView ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . add_file ) ; de.azapps.mirakel.new_ui.views.TextView = ( TextView ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . add_file_text ) ; de.azapps.mirakel.new_ui.views.View . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.views.View ) { if ( boolean ) { void ( ) ; } else { void ( ) ; } } } ) ; void ( ) ; de.azapps.mirakel.new_ui.views.LinearLayout . addView ( de.azapps.mirakel.new_ui.views.View ) ; } int ++ ; } return int ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.views.View ) { if ( boolean ) { void ( ) ; } else { void ( ) ; } } 
private void void ( final int int ) { final GradientDrawable de.azapps.mirakel.new_ui.views.GradientDrawable = ( GradientDrawable ) de.azapps.mirakel.new_ui.views.View . getBackground ( ) ; de.azapps.mirakel.new_ui.views.GradientDrawable . setColor ( int ) ; if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . JELLY_BEAN ) { de.azapps.mirakel.new_ui.views.View . setBackgroundDrawable ( de.azapps.mirakel.new_ui.views.GradientDrawable ) ; } else { de.azapps.mirakel.new_ui.views.View . setBackground ( de.azapps.mirakel.new_ui.views.GradientDrawable ) ; } } 
private void void ( ) { final int int = ThemeManager . getColor ( R . attr . colorPreviewBorder ) ; de.azapps.mirakel.new_ui.views.ImageView . setImageDrawable ( ThemeManager . getColoredIcon ( R . drawable . ic_plus_white_48dp , int ) ) ; void ( getResources ( ) . getColor ( android . R . color . transparent ) ) ; de.azapps.mirakel.new_ui.views.TextView . setText ( R . string . add_file ) ; de.azapps.mirakel.new_ui.views.TextView . setTextColor ( int ) ; boolean = false ; } 
private void void ( ) { final int int = ThemeManager . getColor ( R . attr . colorPreviewBorder ) ; de.azapps.mirakel.new_ui.views.ImageView . setImageDrawable ( ThemeManager . getColoredIcon ( R . drawable . ic_delete_white_48dp , int ) ) ; de.azapps.mirakel.new_ui.views.TextView . setText ( R . string . delete_files ) ; de.azapps.mirakel.new_ui.views.TextView . setTextColor ( int ) ; boolean = true ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.views.View ) { final FileMirakel de.azapps.mirakel.new_ui.views.FileMirakel = ( FileMirakel ) de.azapps.mirakel.new_ui.views.View . getTag ( ) ; if ( java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . isEmpty ( ) ) { if ( FileUtils . isAudio ( de.azapps.mirakel.new_ui.views.FileMirakel . getFileUri ( ) ) ) { new AlertDialogWrapper . AlertDialogWrapper ( getContext ( ) ) . setItems ( R . array . file_options_play , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , final int int ) { switch ( int ) { case NUMBER : AudioHelper . playBack ( de.azapps.mirakel.new_ui.views.Activity , de.azapps.mirakel.new_ui.views.FileMirakel , true ) ; break; case NUMBER : AudioHelper . playBack ( de.azapps.mirakel.new_ui.views.Activity , de.azapps.mirakel.new_ui.views.FileMirakel , false ) ; break; case NUMBER : void ( getContext ( ) , de.azapps.mirakel.new_ui.views.FileMirakel ) ; break; default: throw new java.lang.IllegalArgumentException ( STRING ) ; } } } ) . show ( ) ; } else { void ( getContext ( ) , de.azapps.mirakel.new_ui.views.FileMirakel ) ; } } else if ( java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . contains ( de.azapps.mirakel.new_ui.views.FileMirakel ) ) { void ( de.azapps.mirakel.new_ui.views.View , Color . TRANSPARENT ) ; java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . remove ( de.azapps.mirakel.new_ui.views.FileMirakel ) ; if ( boolean && java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . isEmpty ( ) ) { void ( ) ; } } else { java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . add ( de.azapps.mirakel.new_ui.views.FileMirakel ) ; void ( de.azapps.mirakel.new_ui.views.View , ThemeManager . getColor ( R . attr . colorCAB ) ) ; } } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , final int int ) { switch ( int ) { case NUMBER : AudioHelper . playBack ( de.azapps.mirakel.new_ui.views.Activity , de.azapps.mirakel.new_ui.views.FileMirakel , true ) ; break; case NUMBER : AudioHelper . playBack ( de.azapps.mirakel.new_ui.views.Activity , de.azapps.mirakel.new_ui.views.FileMirakel , false ) ; break; case NUMBER : void ( getContext ( ) , de.azapps.mirakel.new_ui.views.FileMirakel ) ; break; default: throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
private static void void ( final @ NonNull View de.azapps.mirakel.new_ui.views.View , final int int ) { final ImageView de.azapps.mirakel.new_ui.views.ImageView = ( ImageView ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . file_preview_image ) ; if ( de.azapps.mirakel.new_ui.views.ImageView != null ) { de.azapps.mirakel.new_ui.views.ImageView . setColorFilter ( int , PorterDuff . Mode . OVERLAY ) ; de.azapps.mirakel.new_ui.views.ImageView . invalidate ( ) ; } } 
@ java.lang.Override public boolean boolean ( final View de.azapps.mirakel.new_ui.views.View ) { final FileMirakel de.azapps.mirakel.new_ui.views.FileMirakel = ( FileMirakel ) de.azapps.mirakel.new_ui.views.View . getTag ( ) ; if ( ( de.azapps.mirakel.new_ui.views.View . getTag ( ) != null ) && ! java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . contains ( de.azapps.mirakel.new_ui.views.FileMirakel ) ) { java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . add ( de.azapps.mirakel.new_ui.views.FileMirakel ) ; void ( de.azapps.mirakel.new_ui.views.View , ThemeManager . getColor ( R . attr . colorCAB ) ) ; if ( java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . size ( ) == NUMBER ) { void ( ) ; } return true ; } return false ; } 
public static void void ( final Context de.azapps.mirakel.new_ui.views.Context , final FileMirakel de.azapps.mirakel.new_ui.views.FileMirakel ) { final java.lang.String java.lang.String = FileUtils . getMimeType ( de.azapps.mirakel.new_ui.views.FileMirakel . getFileUri ( ) ) ; final Intent de.azapps.mirakel.new_ui.views.Intent = new Intent ( ) ; de.azapps.mirakel.new_ui.views.Intent . setAction ( android . content . Intent . ACTION_VIEW ) ; de.azapps.mirakel.new_ui.views.Intent . setDataAndType ( de.azapps.mirakel.new_ui.views.FileMirakel . getFileUri ( ) , java.lang.String ) ; try { de.azapps.mirakel.new_ui.views.Context . startActivity ( de.azapps.mirakel.new_ui.views.Intent ) ; } catch ( final ActivityNotFoundException de.azapps.mirakel.new_ui.views.ActivityNotFoundException ) { ErrorReporter . report ( ErrorType . FILE_NO_ACTIVITY ) ; } } 
private de.azapps.mirakel.new_ui.views.Dialog de.azapps.mirakel.new_ui.views.Dialog ( ) { final View de.azapps.mirakel.new_ui.views.View = inflate ( getContext ( ) , R . layout . view_record_audio , null ) ; final FFTAudioView de.azapps.mirakel.new_ui.views.FFTAudioView = ( FFTAudioView ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . audio_view ) ; try { de.azapps.mirakel.new_ui.views.FFTAudioView . init ( FileUtils . getOutputMediaFile ( FileUtils . MEDIA_TYPE_AUDIO ) . getAbsolutePath ( ) , this ) ; } catch ( final java.io.IOException java.io.IOException ) { ErrorReporter . report ( ErrorType . FILE_NOT_FOUND ) ; Log . wtf ( java.lang.String , STRING , java.io.IOException ) ; return null ; } catch ( final FFTAudioView . FFTAudioView FFTAudioView.RecordingFailedException ) { Log . wtf ( java.lang.String , STRING ) ; ErrorReporter . report ( ErrorType . NO_SPEACH_RECOGNITION ) ; return null ; } Dialog de.azapps.mirakel.new_ui.views.Dialog = new AlertDialogWrapper . AlertDialogWrapper ( getContext ( ) ) . setTitle ( R . string . audio_record_title ) . setView ( de.azapps.mirakel.new_ui.views.View ) . setPositiveButton ( android . R . string . ok , null ) . setOnDismissListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface ) { de.azapps.mirakel.new_ui.views.FFTAudioView . stopRecording ( ) ; de.azapps.mirakel.new_ui.views.Dialog = null ; } } ) . create ( ) ; de.azapps.mirakel.new_ui.views.Dialog . setOnShowListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface ) { de.azapps.mirakel.new_ui.views.FFTAudioView . startRecording ( ) ; } } ) ; return de.azapps.mirakel.new_ui.views.Dialog ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface ) { de.azapps.mirakel.new_ui.views.FFTAudioView . stopRecording ( ) ; de.azapps.mirakel.new_ui.views.Dialog = null ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface ) { de.azapps.mirakel.new_ui.views.FFTAudioView . startRecording ( ) ; } 
void void ( ) { de.azapps.mirakel.new_ui.views.Dialog = de.azapps.mirakel.new_ui.views.Dialog ( ) ; if ( de.azapps.mirakel.new_ui.views.Dialog != null ) { de.azapps.mirakel.new_ui.views.Dialog . show ( ) ; } } 
@ java.lang.Override public void void ( final java.lang.String java.lang.String ) { final java.io.File java.io.File = new java.io.File ( java.lang.String ) ; AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . ADD_RECORDING ) ; java.util.List<de.azapps.mirakel.new_ui.views.FileMirakel> . add ( FileMirakel . newFile ( de.azapps.mirakel.new_ui.views.Task , java.io.File . java.lang.String ( ) , Uri . fromFile ( new java.io.File ( java.lang.String ) ) ) ) ; void ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , final int int ) { if ( de.azapps.mirakel.new_ui.views.Activity == null ) { ErrorReporter . report ( ErrorType . FILE_NO_ACTIVITY ) ; return; } switch ( int ) { case R . id . file_photo : try { final Intent de.azapps.mirakel.new_ui.views.Intent = new Intent ( MediaStore . ACTION_IMAGE_CAPTURE ) ; de.azapps.mirakel.new_ui.views.Uri = FileUtils . getOutputMediaFileUri ( FileUtils . MEDIA_TYPE_IMAGE ) ; if ( de.azapps.mirakel.new_ui.views.Uri == null ) { return; } de.azapps.mirakel.new_ui.views.Intent . putExtra ( MediaStore . EXTRA_OUTPUT , de.azapps.mirakel.new_ui.views.Uri ) ; de.azapps.mirakel.new_ui.views.Activity . startActivityForResult ( de.azapps.mirakel.new_ui.views.Intent , TaskFragment . REQUEST_IMAGE_CAPTURE ) ; } catch ( final ActivityNotFoundException de.azapps.mirakel.new_ui.views.ActivityNotFoundException ) { ErrorReporter . report ( ErrorType . PHOTO_NO_CAMERA ) ; } catch ( final java.io.IOException java.io.IOException ) { if ( java.io.IOException . java.lang.String ( ) . boolean ( FileUtils . ERROR_NO_MEDIA_DIR ) ) { ErrorReporter . report ( ErrorType . PHOTO_NO_MEDIA_DIRECTORY ) ; } } break; case R . id . file_audio : void ( ) ; break; case R . id . file_file : final Intent de.azapps.mirakel.new_ui.views.Intent = new Intent ( Intent . ACTION_GET_CONTENT ) ; de.azapps.mirakel.new_ui.views.Intent . setType ( STRING ) ; de.azapps.mirakel.new_ui.views.Intent . addCategory ( Intent . CATEGORY_OPENABLE ) ; try { de.azapps.mirakel.new_ui.views.Activity . startActivityForResult ( Intent . createChooser ( de.azapps.mirakel.new_ui.views.Intent , STRING ) , TaskFragment . FILE_SELECT_CODE ) ; } catch ( final android . android . android android.content.ActivityNotFoundException ) { Toast . makeText ( getContext ( ) , STRING , Toast . LENGTH_SHORT ) . show ( ) ; } break; default: throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
@ java.lang.Override protected de.azapps.mirakel.new_ui.views.Parcelable de.azapps.mirakel.new_ui.views.Parcelable ( ) { final Bundle de.azapps.mirakel.new_ui.views.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.views.Bundle . putParcelable ( java.lang.String , super. onSaveInstanceState ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putParcelableArrayList ( java.lang.String , java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> ) ; de.azapps.mirakel.new_ui.views.Bundle . putBoolean ( java.lang.String , boolean ) ; de.azapps.mirakel.new_ui.views.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.views.Uri ) ; return de.azapps.mirakel.new_ui.views.Bundle ; } 
@ java.lang.Override protected void void ( Parcelable de.azapps.mirakel.new_ui.views.Parcelable ) { if ( de.azapps.mirakel.new_ui.views.Parcelable == null || ! ( de.azapps.mirakel.new_ui.views.Parcelable instanceof Bundle ) ) { return; } final Bundle de.azapps.mirakel.new_ui.views.Bundle = ( Bundle ) de.azapps.mirakel.new_ui.views.Parcelable ; super. onRestoreInstanceState ( de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) ) ; de.azapps.mirakel.new_ui.views.Uri = de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) ; java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> = de.azapps.mirakel.new_ui.views.Bundle . getParcelableArrayList ( java.lang.String ) ; void ( false ) ; if ( ! java.util.ArrayList<de.azapps.mirakel.new_ui.views.FileMirakel> . isEmpty ( ) ) { postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( ) ; } } , NUMBER ) ; } if ( de.azapps.mirakel.new_ui.views.Bundle . getBoolean ( java.lang.String ) ) { void ( ) ; } } 
@ java.lang.Override public void void ( ) { void ( ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface ) { boolean = false ; } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); inflate ( de.azapps.mirakel.new_ui.views.Context , R . layout . view_key_value , this ) ; ButterKnife . inject ( this , this ) ; } 
public void void ( final int int , final java.lang.CharSequence java.lang.CharSequence ) { this . int = int ; this . java.lang.CharSequence = java.lang.CharSequence ; } 
public void void ( final int int ) { final Drawable de.azapps.mirakel.new_ui.views.Drawable = ThemeManager . getColoredIcon ( int , int ) ; de.azapps.mirakel.new_ui.views.ImageView . setImageDrawable ( de.azapps.mirakel.new_ui.views.Drawable ) ; de.azapps.mirakel.new_ui.views.TextView . setTextColor ( int ) ; } 
public void void ( final java.lang.CharSequence java.lang.CharSequence ) { final SpannableString de.azapps.mirakel.new_ui.views.SpannableString = new SpannableString ( java.lang.CharSequence + STRING + java.lang.CharSequence ) ; de.azapps.mirakel.new_ui.views.SpannableString . setSpan ( new TypefaceSpan ( STRING ) , java.lang.CharSequence . int ( ) , de.azapps.mirakel.new_ui.views.SpannableString . length ( ) , NUMBER ) ; de.azapps.mirakel.new_ui.views.TextView . setText ( de.azapps.mirakel.new_ui.views.SpannableString ) ; } 
public void void ( final java.lang.String java.lang.String ) { de.azapps.mirakel.new_ui.views.TextView . setText ( java.lang.String ) ; } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); inflate ( de.azapps.mirakel.new_ui.views.Context , R . layout . view_list_edit , this ) ; ButterKnife . inject ( this , this ) ; de.azapps.mirakel.new_ui.views.SoftKeyboard = new SoftKeyboard ( this ) ; } 
public void void ( final ListMirakel de.azapps.mirakel.new_ui.views.ListMirakel ) { this . de.azapps.mirakel.new_ui.views.ListMirakel = de.azapps.mirakel.new_ui.views.ListMirakel ; void ( ) ; } 
public void void ( ) { final java.lang.String java.lang.String = de.azapps.mirakel.new_ui.views.EditText . getText ( ) . toString ( ) ; de.azapps.mirakel.new_ui.views.ListMirakel . setName ( java.lang.String ) ; if ( de.azapps.mirakel.new_ui.views.ListMirakel . isStub ( ) ) { ListMirakel . safeNewList ( java.lang.String , de.azapps.mirakel.new_ui.views.ListMirakel . getAccount ( ) ) ; } else { de.azapps.mirakel.new_ui.views.ListMirakel . save ( ) ; } } 
private void void ( ) { de.azapps.mirakel.new_ui.views.EditText . setText ( de.azapps.mirakel.new_ui.views.ListMirakel . getName ( ) ) ; if ( de.azapps.mirakel.new_ui.views.ListMirakel . isStub ( ) && ( AccountMirakel . countMovableTo ( ) > NUMBER ) ) { final SimpleModelListAdapter < AccountMirakel > de.azapps.mirakel.new_ui.views.SimpleModelListAdapter<de.azapps.mirakel.new_ui.views.AccountMirakel> = new SimpleModelListAdapter <> ( getContext ( ) , AccountMirakel . allMovableToCursor ( ) . getRawCursor ( ) , NUMBER , AccountMirakel .class ) ; de.azapps.mirakel.new_ui.views.Spinner . setAdapter ( de.azapps.mirakel.new_ui.views.SimpleModelListAdapter<de.azapps.mirakel.new_ui.views.AccountMirakel> ) ; de.azapps.mirakel.new_ui.views.Spinner . setOnItemSelectedListener ( this ) ; de.azapps.mirakel.new_ui.views.Spinner . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.new_ui.views.TextView . setVisibility ( View . VISIBLE ) ; } else { de.azapps.mirakel.new_ui.views.Spinner . setVisibility ( View . GONE ) ; de.azapps.mirakel.new_ui.views.TextView . setVisibility ( View . GONE ) ; } } 
public void void ( ) { de.azapps.mirakel.new_ui.views.EditText . requestFocus ( ) ; if ( de.azapps.mirakel.new_ui.views.ListMirakel . isStub ( ) ) { de.azapps.mirakel.new_ui.views.EditText . selectAll ( ) ; } } 
public void void ( ) { de.azapps.mirakel.new_ui.views.EditText . clearFocus ( ) ; } 
@ java.lang.Override public void void ( final AdapterView < ? > de.azapps.mirakel.new_ui.views.AdapterView<?> , final View de.azapps.mirakel.new_ui.views.View , final int int , final long long ) { if ( ! boolean ) { boolean = true ; return; } final AccountMirakel de.azapps.mirakel.new_ui.views.AccountMirakel = ( AccountMirakel ) de.azapps.mirakel.new_ui.views.Spinner . getAdapter ( ) . getItem ( int ) ; de.azapps.mirakel.new_ui.views.ListMirakel . setAccount ( de.azapps.mirakel.new_ui.views.AccountMirakel ) ; } 
@ java.lang.Override public void void ( final AdapterView < ? > de.azapps.mirakel.new_ui.views.AdapterView<?> ) {    } 
public void ( Context de.azapps.mirakel.new_ui.views.Context , AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet ); inflateMenu ( R . menu . tasks_menu ) ; } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); inflate ( de.azapps.mirakel.new_ui.views.Context , R . layout . view_note , this ) ; ButterKnife . inject ( this , this ) ; } 
private void void ( ) { de.azapps.mirakel.new_ui.views.TextView . setText ( java.lang.String ) ; Linkify . addLinks ( de.azapps.mirakel.new_ui.views.TextView , Linkify . ALL ) ; invalidate ( ) ; requestLayout ( ) ; } 
public void void ( final java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; void ( ) ; } 
public void setOnNoteChangedListener ( final OptionalUtils . OptionalUtils < java.lang.String > noteChangedListener ) { this . noteChangedListener = noteChangedListener ; void ( ) ; } 
private de.azapps.mirakel.new_ui.views.Dialog de.azapps.mirakel.new_ui.views.Dialog ( ) { final View de.azapps.mirakel.new_ui.views.View = inflate ( getContext ( ) , R . layout . view_note_edit , null ) ; final EditText de.azapps.mirakel.new_ui.views.EditText = ( EditText ) de.azapps.mirakel.new_ui.views.View . findViewById ( R . id . note_edit_text ) ; de.azapps.mirakel.new_ui.views.EditText . setText ( java.lang.String ) ; de.azapps.mirakel.new_ui.views.EditText . setSelection ( java.lang.String . int ( ) ) ; final Dialog de.azapps.mirakel.new_ui.views.Dialog = new AlertDialogWrapper . AlertDialogWrapper ( getContext ( ) ) . setTitle ( getContext ( ) . getString ( R . string . edit_note ) ) . setView ( de.azapps.mirakel.new_ui.views.View ) . setPositiveButton ( R . string . save , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , int int ) { final java.lang.String java.lang.String = de.azapps.mirakel.new_ui.views.EditText . getText ( ) . toString ( ) ; de.azapps.mirakel.new_ui.views.TextView . setText ( java.lang.String ) ; noteChangedListener . apply ( java.lang.String ) ; de.azapps.mirakel.new_ui.views.NoteView .this . de.azapps.mirakel.new_ui.views.Dialog = null ; } } ) . setNegativeButton ( android . R . string . cancel , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , int int ) { de.azapps.mirakel.new_ui.views.NoteView .this . de.azapps.mirakel.new_ui.views.Dialog = null ; } } ) . create ( ) ; de.azapps.mirakel.new_ui.views.Dialog . setOnShowListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface ) { de.azapps.mirakel.new_ui.views.EditText . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.views.EditText . requestFocus ( ) ; } } , NUMBER ) ; } } ) ; return de.azapps.mirakel.new_ui.views.Dialog ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , int int ) { final java.lang.String java.lang.String = de.azapps.mirakel.new_ui.views.EditText . getText ( ) . toString ( ) ; de.azapps.mirakel.new_ui.views.TextView . setText ( java.lang.String ) ; noteChangedListener . apply ( java.lang.String ) ; de.azapps.mirakel.new_ui.views.NoteView .this . de.azapps.mirakel.new_ui.views.Dialog = null ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface , int int ) { de.azapps.mirakel.new_ui.views.NoteView .this . de.azapps.mirakel.new_ui.views.Dialog = null ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.new_ui.views.DialogInterface ) { de.azapps.mirakel.new_ui.views.EditText . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.views.EditText . requestFocus ( ) ; } } , NUMBER ) ; } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.views.EditText . requestFocus ( ) ; } 
@ OnClick ( { R . id . task_note_text , R . id . task_note_title } ) public void void ( ) { de.azapps.mirakel.new_ui.views.Dialog = de.azapps.mirakel.new_ui.views.Dialog ( ) ; de.azapps.mirakel.new_ui.views.Dialog . getWindow ( ) . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_STATE_VISIBLE ) ; de.azapps.mirakel.new_ui.views.Dialog . show ( ) ; } 
@ java.lang.Override protected de.azapps.mirakel.new_ui.views.Parcelable de.azapps.mirakel.new_ui.views.Parcelable ( ) { Bundle de.azapps.mirakel.new_ui.views.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.views.Bundle . putParcelable ( java.lang.String , super. onSaveInstanceState ( ) ) ; if ( de.azapps.mirakel.new_ui.views.Dialog != null ) { de.azapps.mirakel.new_ui.views.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.views.Dialog . onSaveInstanceState ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.views.Dialog . isShowing ( ) ) ; } de.azapps.mirakel.new_ui.views.Bundle . putString ( java.lang.String , java.lang.String ) ; return de.azapps.mirakel.new_ui.views.Bundle ; } 
@ java.lang.Override protected void void ( Parcelable de.azapps.mirakel.new_ui.views.Parcelable ) { if ( de.azapps.mirakel.new_ui.views.Parcelable == null || ! ( de.azapps.mirakel.new_ui.views.Parcelable instanceof Bundle ) ) { return; } Bundle de.azapps.mirakel.new_ui.views.Bundle = ( Bundle ) de.azapps.mirakel.new_ui.views.Parcelable ; super. onRestoreInstanceState ( de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) ) ; java.lang.String = ( ( Bundle ) de.azapps.mirakel.new_ui.views.Parcelable ) . getString ( java.lang.String ) ; de.azapps.mirakel.new_ui.views.Dialog = de.azapps.mirakel.new_ui.views.Dialog ( ) ; if ( de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) != null ) { de.azapps.mirakel.new_ui.views.Dialog . onRestoreInstanceState ( ( Bundle ) de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) ) ; } if ( de.azapps.mirakel.new_ui.views.Bundle . getBoolean ( java.lang.String , false ) && ! de.azapps.mirakel.new_ui.views.Dialog . isShowing ( ) ) { de.azapps.mirakel.new_ui.views.NoteView .this . de.azapps.mirakel.new_ui.views.Dialog . getWindow ( ) . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_STATE_UNCHANGED ) ; de.azapps.mirakel.new_ui.views.Dialog . show ( ) ; } } 
public void void ( int int ); 
public void ( Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( Context de.azapps.mirakel.new_ui.views.Context , AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( Context de.azapps.mirakel.new_ui.views.Context , AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); setOnClickListener ( this ) ; } 
protected int int ( int int ) { int int ; switch ( int ) { case - NUMBER : case - NUMBER : int = R . drawable . ic_priority_low_20dp ; break; case NUMBER : int = R . drawable . ic_priority_high_20dp ; break; case NUMBER : int = R . drawable . ic_priority_veryhigh_20dp ; break; case NUMBER : default: int = R . drawable . ic_priority_none_20dp ; break; } return int ; } 
protected int int ( ) { return R . layout . view_priority_change ; } 
public void void ( @ NonNull final de.azapps.mirakel.new_ui.views.PriorityChangeView.OnPriorityChangeListener de.azapps.mirakel.new_ui.views.PriorityChangeView.OnPriorityChangeListener ) { this . de.azapps.mirakel.new_ui.views.PriorityChangeView.OnPriorityChangeListener = de.azapps.mirakel.new_ui.views.PriorityChangeView.OnPriorityChangeListener ; rebuildLayout ( ) ; } 
@ java.lang.Override public void void ( View de.azapps.mirakel.new_ui.views.View ) { IconizedMenu de.azapps.mirakel.new_ui.views.IconizedMenu = new IconizedMenu ( new ContextThemeWrapper ( getContext ( ) , R . style . MirakelBaseTheme ) , de.azapps.mirakel.new_ui.views.View ) ; de.azapps.mirakel.new_ui.views.IconizedMenu . inflate ( R . menu . priority_menu ) ; de.azapps.mirakel.new_ui.views.IconizedMenu . setOnMenuItemClickListener ( new IconizedMenu . IconizedMenu ( ) { @ java.lang.Override public boolean boolean ( MenuItem de.azapps.mirakel.new_ui.views.MenuItem ) { final int int ; switch ( de.azapps.mirakel.new_ui.views.MenuItem . getItemId ( ) ) { case R . id . priority_2 : int = NUMBER ; break; case R . id . priority_1 : int = NUMBER ; break; case R . id . priority_0 : int = NUMBER ; break; case R . id . priority_m1 : int = - NUMBER ; break; default: throw new java.lang.IllegalArgumentException ( STRING ) ; } setPriority ( int ) ; if ( de.azapps.mirakel.new_ui.views.PriorityChangeView.OnPriorityChangeListener != null ) { de.azapps.mirakel.new_ui.views.PriorityChangeView.OnPriorityChangeListener . void ( int ) ; } return true ; } } ) ; MenuHelper . colorizeMenuItems ( de.azapps.mirakel.new_ui.views.IconizedMenu . getMenu ( ) , ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; de.azapps.mirakel.new_ui.views.IconizedMenu . show ( ) ; } 
@ java.lang.Override public boolean boolean ( MenuItem de.azapps.mirakel.new_ui.views.MenuItem ) { final int int ; switch ( de.azapps.mirakel.new_ui.views.MenuItem . getItemId ( ) ) { case R . id . priority_2 : int = NUMBER ; break; case R . id . priority_1 : int = NUMBER ; break; case R . id . priority_0 : int = NUMBER ; break; case R . id . priority_m1 : int = - NUMBER ; break; default: throw new java.lang.IllegalArgumentException ( STRING ) ; } setPriority ( int ) ; if ( de.azapps.mirakel.new_ui.views.PriorityChangeView.OnPriorityChangeListener != null ) { de.azapps.mirakel.new_ui.views.PriorityChangeView.OnPriorityChangeListener . void ( int ) ; } return true ; } 
protected boolean boolean ( ) { return false ; } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); inflate ( de.azapps.mirakel.new_ui.views.Context , int ( ) , this ) ; ButterKnife . inject ( this , this ) ; void ( ) ; } 
protected int int ( ) { return R . layout . view_priority ; } 
public int int ( ) { return int ; } 
public void void ( final int int ) { this . int = int ; void ( ) ; } 
protected int int ( int int ) { int int ; switch ( int ) { case - NUMBER : case - NUMBER : int = R . drawable . ic_priority_low_24dp ; break; case NUMBER : int = R . drawable . ic_priority_high_24dp ; break; case NUMBER : int = R . drawable . ic_priority_veryhigh_24dp ; break; case NUMBER : default: int = R . drawable . ic_priority_none_24dp ; break; } return int ; } 
protected void void ( ) { if ( boolean ( ) ) { de.azapps.mirakel.new_ui.views.ImageView . setVisibility ( GONE ) ; } else { de.azapps.mirakel.new_ui.views.ImageView . setVisibility ( VISIBLE ) ; int int = int ( int ) ; de.azapps.mirakel.new_ui.views.ImageView . setImageDrawable ( ThemeManager . getColoredIcon ( int , ThemeManager . getColor ( R . attr . colorTextWhite ) ) ) ; } } 
protected boolean boolean ( ) { return int == NUMBER ; } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet ); final TypedArray de.azapps.mirakel.new_ui.views.TypedArray = de.azapps.mirakel.new_ui.views.Context . getTheme ( ) . obtainStyledAttributes ( de.azapps.mirakel.new_ui.views.AttributeSet , R . styleable . ProgressDone , NUMBER , NUMBER ) ; try { int = de.azapps.mirakel.new_ui.views.TypedArray . getInt ( R . styleable . ProgressDone_progress_value , NUMBER ) ; int = de.azapps.mirakel.new_ui.views.TypedArray . getInt ( R . styleable . ProgressDone_progress_color , NUMBER ) ; int = de.azapps.mirakel.new_ui.views.TypedArray . getInt ( R . styleable . ProgressDone_progress_background_color , NUMBER ) ; } finally { de.azapps.mirakel.new_ui.views.TypedArray . recycle ( ) ; } de.azapps.mirakel.new_ui.views.Paint . setColor ( int ) ; de.azapps.mirakel.new_ui.views.Paint . setFlags ( Paint . ANTI_ALIAS_FLAG ) ; de.azapps.mirakel.new_ui.views.Paint . setColor ( int ) ; de.azapps.mirakel.new_ui.views.Paint . setFlags ( Paint . ANTI_ALIAS_FLAG ) ; de.azapps.mirakel.new_ui.views.Paint . setFlags ( Paint . ANTI_ALIAS_FLAG ) ; de.azapps.mirakel.new_ui.views.Paint . setColor ( Color . WHITE ) ; } 
@ SuppressLint ( STRING ) @ java.lang.Override public void void ( @ NonNull final Canvas de.azapps.mirakel.new_ui.views.Canvas ) { final Drawable de.azapps.mirakel.new_ui.views.Drawable = de.azapps.mirakel.new_ui.views.Drawable ; if ( de.azapps.mirakel.new_ui.views.Drawable != null ) { final int int = de.azapps.mirakel.new_ui.views.Canvas . save ( ) ; int int = getWidth ( ) / NUMBER ; int int = getHeight ( ) / NUMBER ; final int int = java.lang.Math . int ( int , int ) ; de.azapps.mirakel.new_ui.views.Canvas . drawCircle ( int , int , int , de.azapps.mirakel.new_ui.views.Paint ) ; final RectF de.azapps.mirakel.new_ui.views.RectF = new RectF ( int - int , int - int , int + int , int + int ) ; final float float = ( float ) ( ( NUMBER / NUMBER ) * int ) ; de.azapps.mirakel.new_ui.views.Canvas . drawArc ( de.azapps.mirakel.new_ui.views.RectF , NUMBER , float , true , de.azapps.mirakel.new_ui.views.Paint ) ; final int int = de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . or ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . or ( NUMBER ) ) / NUMBER + NUMBER ; final int int = de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . or ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . or ( NUMBER ) ) / NUMBER + NUMBER ; final RectF de.azapps.mirakel.new_ui.views.RectF = new RectF ( int - int , int - int , int + int , int + int ) ; de.azapps.mirakel.new_ui.views.Canvas . drawRect ( de.azapps.mirakel.new_ui.views.RectF , de.azapps.mirakel.new_ui.views.Paint ) ; de.azapps.mirakel.new_ui.views.Canvas . translate ( int - de.azapps.mirakel.new_ui.views.Drawable . getIntrinsicWidth ( ) / NUMBER , int - de.azapps.mirakel.new_ui.views.Drawable . getIntrinsicHeight ( ) / NUMBER ) ; de.azapps.mirakel.new_ui.views.Drawable . draw ( de.azapps.mirakel.new_ui.views.Canvas ) ; de.azapps.mirakel.new_ui.views.Canvas . restoreToCount ( int ) ; } } 
@ java.lang.Override public void void ( final Drawable de.azapps.mirakel.new_ui.views.Drawable ) { super. setButtonDrawable ( de.azapps.mirakel.new_ui.views.Drawable ) ; if ( de.azapps.mirakel.new_ui.views.Drawable != null ) { if ( de.azapps.mirakel.new_ui.views.Drawable != null ) { de.azapps.mirakel.new_ui.views.Drawable . setCallback ( null ) ; } de.azapps.mirakel.new_ui.views.Drawable . setCallback ( this ) ; de.azapps.mirakel.new_ui.views.Drawable . setVisible ( getVisibility ( ) == VISIBLE , false ) ; de.azapps.mirakel.new_ui.views.Drawable = de.azapps.mirakel.new_ui.views.Drawable ; new java.lang.Thread ( this ) . void ( ) ; } } 
public void void ( ) { final Bitmap de.azapps.mirakel.new_ui.views.Bitmap = de.azapps.mirakel.new_ui.views.Bitmap ( de.azapps.mirakel.new_ui.views.Drawable ) ; final int int = de.azapps.mirakel.new_ui.views.Bitmap . getWidth ( ) ; final int int = de.azapps.mirakel.new_ui.views.Bitmap . getHeight ( ) ; final int int = int / NUMBER ; final int int = int / NUMBER ; final int int = de.azapps.mirakel.new_ui.views.Bitmap . getPixel ( int , NUMBER ) ; final int int = de.azapps.mirakel.new_ui.views.Bitmap . getPixel ( NUMBER , int ) ; final int int = de.azapps.mirakel.new_ui.views.Bitmap . getPixel ( int , ( NUMBER * int ) - NUMBER ) ; final int int = de.azapps.mirakel.new_ui.views.Bitmap . getPixel ( ( NUMBER * int ) - NUMBER , int ) ; java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( ) ; java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( ) ; java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( ) ; java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( ) ; for ( int int = NUMBER ; ( int <= int ) && ( int <= int ) ; int ++ ) { if ( ( int < ( NUMBER * int ) ) && ( de.azapps.mirakel.new_ui.views.Bitmap . getPixel ( int , int ) != int ) ) { java.util.List<java.lang.Integer> . boolean ( int ) ; } else if ( ! java.util.List<java.lang.Integer> . boolean ( ) ) { if ( ! de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( int ( java.util.List<java.lang.Integer> ) + ( int ) ViewHelper . dpToPx ( getContext ( ) , NUMBER ) ) ; if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) - de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) ) ; } } java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( NUMBER ) ; } if ( ( int < ( NUMBER * int ) ) && ( de.azapps.mirakel.new_ui.views.Bitmap . getPixel ( int , int ) != int ) ) { java.util.List<java.lang.Integer> . boolean ( int ) ; } else if ( ! java.util.List<java.lang.Integer> . boolean ( ) ) { if ( ! de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( int ( java.util.List<java.lang.Integer> ) + ( int ) ViewHelper . dpToPx ( getContext ( ) , NUMBER ) ) ; if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) - de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) ) ; } } java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( NUMBER ) ; } if ( ( ( ( NUMBER * int ) - int ) > int ) && ( de.azapps.mirakel.new_ui.views.Bitmap . getPixel ( ( NUMBER * int ) - int , int ) != int ) ) { java.util.List<java.lang.Integer> . boolean ( ( NUMBER * int ) - int ) ; } else if ( ! java.util.List<java.lang.Integer> . boolean ( ) ) { if ( ! de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( int ( java.util.List<java.lang.Integer> ) - de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) - ( int ) ViewHelper . dpToPx ( getContext ( ) , NUMBER ) ) ; } else { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( int ( java.util.List<java.lang.Integer> ) ) ; } } java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( NUMBER ) ; } if ( ( ( ( NUMBER * int ) - int ) > int ) && ( de.azapps.mirakel.new_ui.views.Bitmap . getPixel ( int , ( NUMBER * int ) - int ) != int ) ) { java.util.List<java.lang.Integer> . boolean ( ( NUMBER * int ) - int ) ; } else if ( ! java.util.List<java.lang.Integer> . boolean ( ) ) { if ( ! de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( int ( java.util.List<java.lang.Integer> ) - de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) - ( int ) ViewHelper . dpToPx ( getContext ( ) , NUMBER ) ) ; } else { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( int ( java.util.List<java.lang.Integer> ) ) ; } } java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( NUMBER ) ; } if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) && de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) && de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) && de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { break; } } post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) - NUMBER ) ; } if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) - NUMBER ) ; } de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . or ( NUMBER ) + NUMBER ) ; de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . or ( NUMBER ) + NUMBER ) ; invalidate ( ) ; } } ) ; } 
@ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) - NUMBER ) ; } if ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . get ( ) - NUMBER ) ; } de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . or ( NUMBER ) + NUMBER ) ; de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> = of ( de.azapps.mirakel.new_ui.views.Optional<java.lang.Integer> . or ( NUMBER ) + NUMBER ) ; invalidate ( ) ; } 
private static int int ( final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { int int = NUMBER ; for ( final int int : java.util.List<java.lang.Integer> ) { int += int ; } return int / java.util.List<java.lang.Integer> . int ( ) ; } 
private static de.azapps.mirakel.new_ui.views.Bitmap de.azapps.mirakel.new_ui.views.Bitmap ( final Drawable de.azapps.mirakel.new_ui.views.Drawable ) { if ( de.azapps.mirakel.new_ui.views.Drawable instanceof BitmapDrawable ) { return ( ( BitmapDrawable ) de.azapps.mirakel.new_ui.views.Drawable ) . getBitmap ( ) ; } final Bitmap de.azapps.mirakel.new_ui.views.Bitmap = Bitmap . createBitmap ( de.azapps.mirakel.new_ui.views.Drawable . getIntrinsicWidth ( ) , de.azapps.mirakel.new_ui.views.Drawable . getIntrinsicHeight ( ) , Bitmap . Config . ARGB_8888 ) ; final Canvas de.azapps.mirakel.new_ui.views.Canvas = new Canvas ( de.azapps.mirakel.new_ui.views.Bitmap ) ; de.azapps.mirakel.new_ui.views.Drawable . setBounds ( NUMBER , NUMBER , de.azapps.mirakel.new_ui.views.Canvas . getWidth ( ) , de.azapps.mirakel.new_ui.views.Canvas . getHeight ( ) ) ; de.azapps.mirakel.new_ui.views.Drawable . draw ( de.azapps.mirakel.new_ui.views.Canvas ) ; return de.azapps.mirakel.new_ui.views.Bitmap ; } 
public int int ( ) { return int ; } 
public void void ( final int int ) { this . int = int ; invalidate ( ) ; requestLayout ( ) ; } 
private void void ( ) { invalidate ( ) ; requestLayout ( ) ; } 
public int int ( ) { return int ; } 
public void void ( final int int ) { this . int = int ; void ( ) ; } 
public int int ( ) { return int ; } 
public void void ( final int int ) { this . int = int ; void ( ) ; } 
public void void ( ) { de.azapps.mirakel.new_ui.views.AutoCompleteTextView . clearFocus ( ) ; de.azapps.mirakel.new_ui.views.AutoCompleteTextView . requestFocus ( ) ; } 
public void void ( SearchObject de.azapps.mirakel.new_ui.views.SearchObject ); 
public void ( Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( Context de.azapps.mirakel.new_ui.views.Context , AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); inflate ( de.azapps.mirakel.new_ui.views.Context , R . layout . view_search , this ) ; ButterKnife . inject ( this , this ) ; de.azapps.mirakel.new_ui.views.SoftKeyboard = new SoftKeyboard ( this ) ; de.azapps.mirakel.new_ui.views.AutoCompleteTextView . requestFocus ( ) ; de.azapps.mirakel.new_ui.views.AutoCompleteAdapter = new AutoCompleteAdapter ( de.azapps.mirakel.new_ui.views.Context , SearchObject . autocomplete ( de.azapps.mirakel.new_ui.views.Context , STRING ) ) ; de.azapps.mirakel.new_ui.views.AutoCompleteTextView . setAdapter ( de.azapps.mirakel.new_ui.views.AutoCompleteAdapter ) ; de.azapps.mirakel.new_ui.views.AutoCompleteTextView . setOnItemClickListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( AdapterView < ? > de.azapps.mirakel.new_ui.views.AdapterView<?> , View de.azapps.mirakel.new_ui.views.View , int int , long long ) { final Cursor de.azapps.mirakel.new_ui.views.Cursor = ( Cursor ) de.azapps.mirakel.new_ui.views.AutoCompleteAdapter . getItem ( int ) ; de.azapps.mirakel.new_ui.views.SearchObject = new SearchObject ( de.azapps.mirakel.new_ui.views.Cursor ) ; void ( ) ; } } ) ; de.azapps.mirakel.new_ui.views.AutoCompleteTextView . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {            } @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( de.azapps.mirakel.new_ui.views.SearchObject != null && de.azapps.mirakel.new_ui.views.SearchObject . getAutocompleteType ( ) == SearchObject . AUTOCOMPLETE_TYPE . TAG ) { de.azapps.mirakel.new_ui.views.SearchObject = null ; void ( ) ; return; } de.azapps.mirakel.new_ui.views.SearchObject = null ; if ( java.lang.CharSequence . int ( ) == NUMBER ) { de.azapps.mirakel.new_ui.views.Button . setVisibility ( GONE ) ; } else { de.azapps.mirakel.new_ui.views.Button . setVisibility ( VISIBLE ) ; } } @ java.lang.Override public void void ( Editable de.azapps.mirakel.new_ui.views.Editable ) {            } } ) ; de.azapps.mirakel.new_ui.views.AutoCompleteTextView . setOnEditorActionListener ( new TextView . TextView ( ) { @ java.lang.Override public boolean boolean ( TextView de.azapps.mirakel.new_ui.views.TextView , int int , KeyEvent de.azapps.mirakel.new_ui.views.KeyEvent ) { if ( int == EditorInfo . IME_ACTION_SEARCH ) { void ( ) ; return true ; } return false ; } } ) ; } 
@ java.lang.Override public void void ( AdapterView < ? > de.azapps.mirakel.new_ui.views.AdapterView<?> , View de.azapps.mirakel.new_ui.views.View , int int , long long ) { final Cursor de.azapps.mirakel.new_ui.views.Cursor = ( Cursor ) de.azapps.mirakel.new_ui.views.AutoCompleteAdapter . getItem ( int ) ; de.azapps.mirakel.new_ui.views.SearchObject = new SearchObject ( de.azapps.mirakel.new_ui.views.Cursor ) ; void ( ) ; } 
@ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {            } 
@ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( de.azapps.mirakel.new_ui.views.SearchObject != null && de.azapps.mirakel.new_ui.views.SearchObject . getAutocompleteType ( ) == SearchObject . AUTOCOMPLETE_TYPE . TAG ) { de.azapps.mirakel.new_ui.views.SearchObject = null ; void ( ) ; return; } de.azapps.mirakel.new_ui.views.SearchObject = null ; if ( java.lang.CharSequence . int ( ) == NUMBER ) { de.azapps.mirakel.new_ui.views.Button . setVisibility ( GONE ) ; } else { de.azapps.mirakel.new_ui.views.Button . setVisibility ( VISIBLE ) ; } } 
@ java.lang.Override public void void ( Editable de.azapps.mirakel.new_ui.views.Editable ) {            } 
@ java.lang.Override public boolean boolean ( TextView de.azapps.mirakel.new_ui.views.TextView , int int , KeyEvent de.azapps.mirakel.new_ui.views.KeyEvent ) { if ( int == EditorInfo . IME_ACTION_SEARCH ) { void ( ) ; return true ; } return false ; } 
@ java.lang.Override protected void void ( ) { super. onDetachedFromWindow ( ) ; if ( de.azapps.mirakel.new_ui.views.AutoCompleteAdapter != null ) { de.azapps.mirakel.new_ui.views.AutoCompleteAdapter . changeCursor ( null ) ; } } 
public void void ( de.azapps.mirakel.new_ui.views.SearchView.SearchCallback de.azapps.mirakel.new_ui.views.SearchView.SearchCallback ) { this . de.azapps.mirakel.new_ui.views.SearchView.SearchCallback = de.azapps.mirakel.new_ui.views.SearchView.SearchCallback ; } 
public void void ( final SearchObject de.azapps.mirakel.new_ui.views.SearchObject ) { de.azapps.mirakel.new_ui.views.SearchObject = null ; de.azapps.mirakel.new_ui.views.Button . setVisibility ( VISIBLE ) ; this . de.azapps.mirakel.new_ui.views.AutoCompleteTextView . setText ( de.azapps.mirakel.new_ui.views.SearchObject . getText ( getContext ( ) ) ) ; de.azapps.mirakel.new_ui.views.SearchObject = de.azapps.mirakel.new_ui.views.SearchObject ; } 
@ OnClick ( R . id . search_button ) public void void ( ) { Cursor de.azapps.mirakel.new_ui.views.Cursor = de.azapps.mirakel.new_ui.views.AutoCompleteAdapter . getCursor ( ) ; if ( de.azapps.mirakel.new_ui.views.Cursor != null && ! de.azapps.mirakel.new_ui.views.Cursor . isClosed ( ) ) { de.azapps.mirakel.new_ui.views.Cursor . close ( ) ; } if ( de.azapps.mirakel.new_ui.views.SearchView.SearchCallback != null ) { if ( de.azapps.mirakel.new_ui.views.SearchObject != null ) { de.azapps.mirakel.new_ui.views.SearchView.SearchCallback . void ( de.azapps.mirakel.new_ui.views.SearchObject ) ; } else { final java.lang.String java.lang.String = de.azapps.mirakel.new_ui.views.AutoCompleteTextView . getText ( ) . toString ( ) ; de.azapps.mirakel.new_ui.views.SearchView.SearchCallback . void ( new SearchObject ( java.lang.String ) ) ; } } } 
@ OnClick ( R . id . search_clear ) public void void ( ) { de.azapps.mirakel.new_ui.views.Button . setVisibility ( GONE ) ; de.azapps.mirakel.new_ui.views.AutoCompleteTextView . setText ( STRING ) ; } 
void void ( java.lang.String java.lang.String ); 
void void ( Task de.azapps.mirakel.new_ui.views.Task ); 
void void ( Task de.azapps.mirakel.new_ui.views.Task , boolean boolean ); 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); inflate ( de.azapps.mirakel.new_ui.views.Context , R . layout . view_subtasks , this ) ; de.azapps.mirakel.new_ui.views.LayoutInflater = LayoutInflater . from ( de.azapps.mirakel.new_ui.views.Context ) ; ButterKnife . inject ( this , this ) ; ViewHelper . setCompoundDrawable ( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.TextView , ThemeManager . getColoredIcon ( R . drawable . ic_plus_white_24dp , ThemeManager . getColor ( R . attr . colorLightGrey ) ) ) ; } 
public void void ( final de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener ) { this . de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener = de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener ; } 
public void void ( java.util.List<de.azapps.mirakel.new_ui.views.Task> < Task > java.util.List<de.azapps.mirakel.new_ui.views.Task> ) { de.azapps.mirakel.new_ui.views.LinearLayout . removeAllViews ( ) ; for ( final Task de.azapps.mirakel.new_ui.views.Task : java.util.List<de.azapps.mirakel.new_ui.views.Task> ) { final LinearLayout de.azapps.mirakel.new_ui.views.LinearLayout = ( LinearLayout ) de.azapps.mirakel.new_ui.views.LayoutInflater . inflate ( R . layout . row_subtask , de.azapps.mirakel.new_ui.views.LinearLayout , false ) ; CheckBox de.azapps.mirakel.new_ui.views.CheckBox = ( CheckBox ) de.azapps.mirakel.new_ui.views.LinearLayout . findViewById ( R . id . subtask_done ) ; de.azapps.mirakel.new_ui.views.CheckBox . setChecked ( de.azapps.mirakel.new_ui.views.Task . isDone ( ) ) ; TextView de.azapps.mirakel.new_ui.views.TextView = ( TextView ) de.azapps.mirakel.new_ui.views.LinearLayout . findViewById ( R . id . subtask_name ) ; de.azapps.mirakel.new_ui.views.TextView . setText ( de.azapps.mirakel.new_ui.views.Task . getName ( ) ) ; if ( de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener != null ) { de.azapps.mirakel.new_ui.views.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.new_ui.views.CompoundButton , final boolean boolean ) { de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener . void ( de.azapps.mirakel.new_ui.views.Task , boolean ) ; } } ) ; de.azapps.mirakel.new_ui.views.TextView . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.views.View ) { de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener . void ( de.azapps.mirakel.new_ui.views.Task ) ; } } ) ; } if ( de.azapps.mirakel.new_ui.views.Task . isDone ( ) ) { de.azapps.mirakel.new_ui.views.TextView . setPaintFlags ( de.azapps.mirakel.new_ui.views.TextView . getPaintFlags ( ) | Paint . STRIKE_THRU_TEXT_FLAG ) ; } else { de.azapps.mirakel.new_ui.views.TextView . setPaintFlags ( de.azapps.mirakel.new_ui.views.TextView . getPaintFlags ( ) & ~ Paint . STRIKE_THRU_TEXT_FLAG ) ; } de.azapps.mirakel.new_ui.views.LinearLayout . addView ( de.azapps.mirakel.new_ui.views.LinearLayout ) ; } de.azapps.mirakel.new_ui.views.EditText . setOnKeyListener ( new View . View ( ) { @ java.lang.Override public boolean boolean ( final View de.azapps.mirakel.new_ui.views.View , final int int , final KeyEvent de.azapps.mirakel.new_ui.views.KeyEvent ) { if ( ( de.azapps.mirakel.new_ui.views.KeyEvent . getAction ( ) == KeyEvent . ACTION_DOWN ) && ( int == KeyEvent . KEYCODE_ENTER ) ) { void ( ) ; return true ; } return false ; } } ) ; } 
@ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.new_ui.views.CompoundButton , final boolean boolean ) { de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener . void ( de.azapps.mirakel.new_ui.views.Task , boolean ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.new_ui.views.View ) { de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener . void ( de.azapps.mirakel.new_ui.views.Task ) ; } 
@ java.lang.Override public boolean boolean ( final View de.azapps.mirakel.new_ui.views.View , final int int , final KeyEvent de.azapps.mirakel.new_ui.views.KeyEvent ) { if ( ( de.azapps.mirakel.new_ui.views.KeyEvent . getAction ( ) == KeyEvent . ACTION_DOWN ) && ( int == KeyEvent . KEYCODE_ENTER ) ) { void ( ) ; return true ; } return false ; } 
@ OnClick ( R . id . task_subtasks_add ) public void void ( ) { postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; de.azapps.mirakel.new_ui.views.EditText . requestFocusFromTouch ( ) ; } } , NUMBER ) ; } 
@ java.lang.Override public void void ( ) { de.azapps.mirakel.new_ui.views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; de.azapps.mirakel.new_ui.views.EditText . requestFocusFromTouch ( ) ; } 
void void ( ) { de.azapps.mirakel.new_ui.views.EditText . clearFocus ( ) ; de.azapps.mirakel.new_ui.views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; java.lang.String java.lang.String = de.azapps.mirakel.new_ui.views.EditText . getText ( ) . toString ( ) . trim ( ) ; de.azapps.mirakel.new_ui.views.EditText . setText ( STRING ) ; if ( ! java.lang.String . boolean ( ) && de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener != null ) { de.azapps.mirakel.new_ui.views.SubtasksView.SubtaskListener . void ( java.lang.String ) ; } } 
@ OnEditorAction ( R . id . task_name_edit ) boolean boolean ( int int ) { switch ( int ) { case EditorInfo . IME_ACTION_DONE : case EditorInfo . IME_ACTION_SEND : void ( ) ; return true ; } return false ; } 
@ java.lang.Override protected de.azapps.mirakel.new_ui.views.Parcelable de.azapps.mirakel.new_ui.views.Parcelable ( ) { Bundle de.azapps.mirakel.new_ui.views.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.views.Bundle . putParcelable ( java.lang.String , super. onSaveInstanceState ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.views.EditText . onSaveInstanceState ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putInt ( java.lang.String , de.azapps.mirakel.new_ui.views.EditText . getSelectionEnd ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putInt ( java.lang.String , de.azapps.mirakel.new_ui.views.ViewSwitcher . getCurrentView ( ) . getId ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.views.EditText . hasFocus ( ) ) ; return de.azapps.mirakel.new_ui.views.Bundle ; } 
@ java.lang.Override protected void void ( Parcelable de.azapps.mirakel.new_ui.views.Parcelable ) { if ( de.azapps.mirakel.new_ui.views.Parcelable == null || ! ( de.azapps.mirakel.new_ui.views.Parcelable instanceof Bundle ) ) { return; } final Bundle de.azapps.mirakel.new_ui.views.Bundle = ( Bundle ) de.azapps.mirakel.new_ui.views.Parcelable ; super. onRestoreInstanceState ( de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) ) ; de.azapps.mirakel.new_ui.views.EditText . onRestoreInstanceState ( de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) ) ; if ( de.azapps.mirakel.new_ui.views.ViewSwitcher . getCurrentView ( ) . getId ( ) != de.azapps.mirakel.new_ui.views.Bundle . getInt ( java.lang.String ) ) { de.azapps.mirakel.new_ui.views.ViewSwitcher . showNext ( ) ; } de.azapps.mirakel.new_ui.views.EditText . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.new_ui.views.Bundle . getInt ( java.lang.String ) == de.azapps.mirakel.new_ui.views.EditText . getId ( ) && de.azapps.mirakel.new_ui.views.Bundle . getBoolean ( java.lang.String ) ) { de.azapps.mirakel.new_ui.views.EditText . requestFocus ( ) ; } de.azapps.mirakel.new_ui.views.EditText . setSelection ( de.azapps.mirakel.new_ui.views.Bundle . getInt ( java.lang.String ) ) ; } } , NUMBER ) ; } 
@ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.new_ui.views.Bundle . getInt ( java.lang.String ) == de.azapps.mirakel.new_ui.views.EditText . getId ( ) && de.azapps.mirakel.new_ui.views.Bundle . getBoolean ( java.lang.String ) ) { de.azapps.mirakel.new_ui.views.EditText . requestFocus ( ) ; } de.azapps.mirakel.new_ui.views.EditText . setSelection ( de.azapps.mirakel.new_ui.views.Bundle . getInt ( java.lang.String ) ) ; } 
public void ( final Tag de.azapps.mirakel.new_ui.views.Tag , final Context de.azapps.mirakel.new_ui.views.Context ) { this . de.azapps.mirakel.new_ui.views.Context = de.azapps.mirakel.new_ui.views.Context ; this . de.azapps.mirakel.new_ui.views.Paint = new Paint ( Paint . ANTI_ALIAS_FLAG ) ; this . de.azapps.mirakel.new_ui.views.Paint . setColor ( de.azapps.mirakel.new_ui.views.Tag . getBackgroundColor ( ) ) ; this . java.lang.String = de.azapps.mirakel.new_ui.views.Tag . getName ( ) ; this . de.azapps.mirakel.new_ui.views.Paint = new Paint ( Paint . ANTI_ALIAS_FLAG ) ; this . de.azapps.mirakel.new_ui.views.Paint . setTextSize ( de.azapps.mirakel.new_ui.views.Context . getResources ( ) . getDimension ( R . dimen . text_size_small ) ) ; this . de.azapps.mirakel.new_ui.views.Paint . setColor ( ( de.azapps.mirakel.new_ui.views.Tag . isDarkText ( ) ) ? ThemeManager . getColor ( R . attr . colorTextBlack ) : ThemeManager . getColor ( R . attr . colorTextWhite ) ) ; int = java.lang.Math . int ( float ( NUMBER ) ) ; float = this . de.azapps.mirakel.new_ui.views.Paint . measureText ( java.lang.String ) ; } 
private float float ( final float float ) { return de.azapps.mirakel.new_ui.views.Context . getResources ( ) . getDisplayMetrics ( ) . density * float ; } 
@ java.lang.Override public int int ( final Paint de.azapps.mirakel.new_ui.views.Paint , final java.lang.CharSequence java.lang.CharSequence , final int int , final int int , final Paint . Paint Paint.FontMetricsInt ) { return java.lang.Math . int ( float + ( NUMBER * int ) ) ; } 
@ java.lang.Override public void void ( final Canvas de.azapps.mirakel.new_ui.views.Canvas , final java.lang.CharSequence java.lang.CharSequence , final int int , final int int , final float float , final int int , final int int , final int int , final Paint de.azapps.mirakel.new_ui.views.Paint ) { final RectF de.azapps.mirakel.new_ui.views.RectF = new RectF ( float , int , float + float + ( NUMBER * int ) , int ) ; de.azapps.mirakel.new_ui.views.Canvas . drawRoundRect ( de.azapps.mirakel.new_ui.views.RectF , float ( NUMBER ) , float ( NUMBER ) , de.azapps.mirakel.new_ui.views.Paint ) ; de.azapps.mirakel.new_ui.views.Canvas . drawText ( this . java.lang.String , float + int , int - float ( NUMBER ) , de.azapps.mirakel.new_ui.views.Paint ) ; } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context ) { this( de.azapps.mirakel.new_ui.views.Context , null ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { this( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , NUMBER ); } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet , final int int ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet , int ); inflate ( de.azapps.mirakel.new_ui.views.Context , R . layout . view_tags , this ) ; ButterKnife . inject ( this , this ) ; final Drawable de.azapps.mirakel.new_ui.views.Drawable = ThemeManager . getColoredIcon ( R . drawable . ic_local_offer_white_18dp , ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; ViewHelper . setCompoundDrawable ( getContext ( ) , de.azapps.mirakel.new_ui.views.TextView , de.azapps.mirakel.new_ui.views.Drawable ) ; } 
public void void ( final java.util.List<de.azapps.mirakel.new_ui.views.Tag> < Tag > java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) { de.azapps.mirakel.new_ui.views.AddTagView . setTags ( java.util.List<de.azapps.mirakel.new_ui.views.Tag> ) ; invalidate ( ) ; requestLayout ( ) ; } 
public java.util.List<de.azapps.mirakel.new_ui.views.Tag> < Tag > java.util.List<de.azapps.mirakel.new_ui.views.Tag> ( ) { return de.azapps.mirakel.new_ui.views.AddTagView . getTags ( ) ; } 
public void void ( AddTagView . AddTagView AddTagView.TagChangedListener ) { de.azapps.mirakel.new_ui.views.AddTagView . setTagChangedListener ( AddTagView.TagChangedListener ) ; } 
@ java.lang.Override protected de.azapps.mirakel.new_ui.views.Parcelable de.azapps.mirakel.new_ui.views.Parcelable ( ) { Bundle de.azapps.mirakel.new_ui.views.Bundle = new Bundle ( ) ; de.azapps.mirakel.new_ui.views.Bundle . putParcelable ( java.lang.String , super. onSaveInstanceState ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.new_ui.views.AddTagView . onSaveInstanceState ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putInt ( java.lang.String , de.azapps.mirakel.new_ui.views.AddTagView . getSelectionEnd ( ) ) ; de.azapps.mirakel.new_ui.views.Bundle . putBoolean ( java.lang.String , de.azapps.mirakel.new_ui.views.AddTagView . hasFocus ( ) ) ; return de.azapps.mirakel.new_ui.views.Bundle ; } 
@ java.lang.Override protected void void ( Parcelable de.azapps.mirakel.new_ui.views.Parcelable ) { if ( de.azapps.mirakel.new_ui.views.Parcelable == null || ! ( de.azapps.mirakel.new_ui.views.Parcelable instanceof Bundle ) ) { return; } final Bundle de.azapps.mirakel.new_ui.views.Bundle = ( Bundle ) de.azapps.mirakel.new_ui.views.Parcelable ; super. onRestoreInstanceState ( de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) ) ; de.azapps.mirakel.new_ui.views.AddTagView . onRestoreInstanceState ( de.azapps.mirakel.new_ui.views.Bundle . getParcelable ( java.lang.String ) ) ; de.azapps.mirakel.new_ui.views.AddTagView . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.new_ui.views.Bundle . getBoolean ( java.lang.String ) ) { de.azapps.mirakel.new_ui.views.AddTagView . clearFocus ( ) ; de.azapps.mirakel.new_ui.views.AddTagView . onClick ( de.azapps.mirakel.new_ui.views.AddTagView ) ; } } } , NUMBER ) ; } 
@ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.new_ui.views.Bundle . getBoolean ( java.lang.String ) ) { de.azapps.mirakel.new_ui.views.AddTagView . clearFocus ( ) ; de.azapps.mirakel.new_ui.views.AddTagView . onClick ( de.azapps.mirakel.new_ui.views.AddTagView ) ; } } 
public void ( final Context de.azapps.mirakel.new_ui.views.Context , final AttributeSet de.azapps.mirakel.new_ui.views.AttributeSet ) { super( de.azapps.mirakel.new_ui.views.Context , de.azapps.mirakel.new_ui.views.AttributeSet ); de.azapps.mirakel.new_ui.views.Paint . setColor ( getTextColors ( ) . getDefaultColor ( ) ) ; boolean = ViewHelper . isRTL ( de.azapps.mirakel.new_ui.views.Context ) ; final TypedArray de.azapps.mirakel.new_ui.views.TypedArray = de.azapps.mirakel.new_ui.views.Context . getTheme ( ) . obtainStyledAttributes ( de.azapps.mirakel.new_ui.views.AttributeSet , R . styleable . TaskName , NUMBER , NUMBER ) ; try { int = ( int ) de.azapps.mirakel.new_ui.views.TypedArray . getDimension ( R . styleable . TaskName_strokeSize , ViewHelper . dpToPx ( de.azapps.mirakel.new_ui.views.Context , NUMBER ) ) ; int = ( int ) de.azapps.mirakel.new_ui.views.TypedArray . getDimension ( R . styleable . TaskName_strokeMargin , ViewHelper . dpToPx ( de.azapps.mirakel.new_ui.views.Context , NUMBER ) ) ; boolean = de.azapps.mirakel.new_ui.views.TypedArray . getBoolean ( R . styleable . TaskName_isStroked , false ) ; } finally { de.azapps.mirakel.new_ui.views.TypedArray . recycle ( ) ; } } 
public boolean boolean ( ) { return boolean ; } 
public void void ( final boolean boolean ) { boolean = boolean ; } 
@ java.lang.Override public void void ( @ NonNull final Canvas de.azapps.mirakel.new_ui.views.Canvas ) { super. onDraw ( de.azapps.mirakel.new_ui.views.Canvas ) ; if ( boolean ) { final Layout de.azapps.mirakel.new_ui.views.Layout = getLayout ( ) ; if ( de.azapps.mirakel.new_ui.views.Layout != null ) { final int int = de.azapps.mirakel.new_ui.views.Layout . getLineCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { de.azapps.mirakel.new_ui.views.Layout . getLineBounds ( int , de.azapps.mirakel.new_ui.views.Rect ) ; final float float = ( de.azapps.mirakel.new_ui.views.Rect . top + de.azapps.mirakel.new_ui.views.Rect . bottom ) / NUMBER + ( int == NUMBER ? int : NUMBER ) ; de.azapps.mirakel.new_ui.views.Rect . top = ( int ) ( float ) ; if ( boolean ) { de.azapps.mirakel.new_ui.views.Rect . left = ( int ) ( getWidth ( ) - int - de.azapps.mirakel.new_ui.views.Layout . getLineWidth ( int ) ) ; de.azapps.mirakel.new_ui.views.Rect . right = getWidth ( ) ; } else { de.azapps.mirakel.new_ui.views.Rect . left = - NUMBER * int ; de.azapps.mirakel.new_ui.views.Rect . right = ( int ) ( int + de.azapps.mirakel.new_ui.views.Layout . getLineWidth ( int ) ) ; } de.azapps.mirakel.new_ui.views.Rect . bottom = ( int ) ( float + int ) ; de.azapps.mirakel.new_ui.views.Canvas . drawRect ( de.azapps.mirakel.new_ui.views.Rect , de.azapps.mirakel.new_ui.views.Paint ) ; } } } } 
public void ( ) { super(); } 
@ Before public void void ( ) java.lang.Exception { void ( ) ; super. setUp ( ) ; } 
private void void ( ) { DatabaseHelper . getDatabaseHelper ( RuntimeEnvironment . application ) ; } 
@ After public void void ( ) { super. tearDown ( ) ; void ( ) ; ShadowSQLiteConnection . reset ( ) ; } 
public void void ( ) { MirakelInternalContentProvider . reset ( ) ; DatabaseHelper . resetDB ( ) ; } 
@ Before public void void ( ) java.lang.Exception { TestHelper . init ( RuntimeEnvironment . application ) ; RandomHelper . init ( RuntimeEnvironment . application ) ; } 
@ After public void void ( ) { TestHelper . terminate ( ) ; } 
void ( java.lang.Class<?> < ? > java.lang.Class<?> , java.lang.Integer java.lang.Integer ) throws de.azapps.mirakelandroid.test.InitializationError { super( java.lang.Class<> ); this . java.lang.Integer = java.lang.Integer ; this . java.lang.String = java.lang.Integer . java.lang.String ( ) ; } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return STRING + java.lang.Integer + STRING ; } 
@ java.lang.Override protected java.lang.String java.lang.String ( final FrameworkMethod de.azapps.mirakelandroid.test.FrameworkMethod ) { return de.azapps.mirakelandroid.test.FrameworkMethod . getName ( ) + java.lang.String ( ) ; } 
@ java.lang.Override protected void void ( java.util.List<java.lang.Throwable> < java.lang.Throwable > java.util.List<java.lang.Throwable> ) { validateOnlyOneConstructor ( java.util.List<java.lang.Throwable> ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + java.lang.String ; } 
protected boolean boolean ( FrameworkMethod de.azapps.mirakelandroid.test.FrameworkMethod , Config de.azapps.mirakelandroid.test.Config ) { return super. shouldIgnore ( de.azapps.mirakelandroid.test.FrameworkMethod , de.azapps.mirakelandroid.test.Config ) || ! boolean ( de.azapps.mirakelandroid.test.Config ) ; } 
private boolean boolean ( Config de.azapps.mirakelandroid.test.Config ) { if ( de.azapps.mirakelandroid.test.Config . sdk ( ) . length == NUMBER ) { return true ; } for ( int int : de.azapps.mirakelandroid.test.Config . sdk ( ) ) { if ( int == java.lang.Integer ) { return true ; } } return false ; } 
@ java.lang.Override protected int int ( Config de.azapps.mirakelandroid.test.Config , AndroidManifest de.azapps.mirakelandroid.test.AndroidManifest ) { return java.lang.Integer ; } 
@ java.lang.Override protected de.azapps.mirakelandroid.test.HelperTestRunner de.azapps.mirakelandroid.test.HelperTestRunner ( java.lang.Class java.lang.Class ) { try { return new HelperTestRunner ( java.lang.Class ) { @ java.lang.Override protected void void ( java.util.List<java.lang.Throwable> < java.lang.Throwable > java.util.List<java.lang.Throwable> ) { de.azapps.mirakelandroid.test.MultiApiRobolectricTestRunner.TestRunnerForApiVersion .this . validateOnlyOneConstructor ( java.util.List<java.lang.Throwable> ) ; } @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + de.azapps.mirakelandroid.test.MultiApiRobolectricTestRunner.TestRunnerForApiVersion .this . java.lang.String ( ) ; } } ; } catch ( InitializationError de.azapps.mirakelandroid.test.InitializationError ) { throw new java.lang.RuntimeException ( de.azapps.mirakelandroid.test.InitializationError ) ; } } 
@ java.lang.Override protected void void ( java.util.List<java.lang.Throwable> < java.lang.Throwable > java.util.List<java.lang.Throwable> ) { de.azapps.mirakelandroid.test.MultiApiRobolectricTestRunner.TestRunnerForApiVersion .this . validateOnlyOneConstructor ( java.util.List<java.lang.Throwable> ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + de.azapps.mirakelandroid.test.MultiApiRobolectricTestRunner.TestRunnerForApiVersion .this . java.lang.String ( ) ; } 
public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) throws java.lang.Throwable { super( java.lang.Class<> , java.util.Collections .< Runner > java.util.List<de.azapps.mirakelandroid.test.Runner> ( ) ); for ( java.lang.Integer java.lang.Integer : SdkConfig . getSupportedApis ( ) ) { java.util.ArrayList<de.azapps.mirakelandroid.test.Runner> . add ( de.azapps.mirakelandroid.test.MultiApiRobolectricTestRunner.TestRunnerForApiVersion ( java.lang.Integer ) ) ; } } 
protected de.azapps.mirakelandroid.test.MultiApiRobolectricTestRunner.TestRunnerForApiVersion de.azapps.mirakelandroid.test.MultiApiRobolectricTestRunner.TestRunnerForApiVersion ( java.lang.Integer java.lang.Integer ) throws de.azapps.mirakelandroid.test.InitializationError { return new de.azapps.mirakelandroid.test.MultiApiRobolectricTestRunner.TestRunnerForApiVersion ( getTestClass ( ) . getJavaClass ( ) , java.lang.Integer ) ; } 
@ java.lang.Override protected java.util.List<de.azapps.mirakelandroid.test.Runner> < Runner > java.util.List<de.azapps.mirakelandroid.test.Runner> ( ) { return java.util.ArrayList<de.azapps.mirakelandroid.test.Runner> ; } 
public static void void ( final Context de.azapps.mirakelandroid.test.Context ) { de.azapps.mirakelandroid.test.RandomHelper . de.azapps.mirakelandroid.test.Context = de.azapps.mirakelandroid.test.Context ; } 
public static int int ( ) { return java.security.SecureRandom . int ( ) ; } 
public static short short ( ) { return ( short ) java.security.SecureRandom . int ( ) ; } 
public static java.lang.Long java.lang.Long ( ) { return java.security.SecureRandom . long ( ) ; } 
public static boolean boolean ( ) { return java.security.SecureRandom . boolean ( ) ; } 
public static java.lang.String java.lang.String ( ) { return new java.math.BigInteger ( NUMBER , java.security.SecureRandom ) . java.lang.String ( NUMBER ) ; } 
public static de.azapps.mirakelandroid.test.SYNC_STATE de.azapps.mirakelandroid.test.SYNC_STATE ( ) { return SYNC_STATE . values ( ) [ java.security.SecureRandom . int ( SYNC_STATE . values ( ) . length ) ] ; } 
public static de.azapps.mirakelandroid.test.AccountMirakel de.azapps.mirakelandroid.test.AccountMirakel ( ) { java.util.List<de.azapps.mirakelandroid.test.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakelandroid.test.AccountMirakel> = AccountMirakel . all ( ) ; if ( java.util.List<de.azapps.mirakelandroid.test.AccountMirakel> . isEmpty ( ) ) { return AccountMirakel . getLocal ( ) ; } else { return java.util.List<de.azapps.mirakelandroid.test.AccountMirakel> . get ( java.security.SecureRandom . int ( java.util.List<de.azapps.mirakelandroid.test.AccountMirakel> . size ( ) ) ) ; } } 
public static java.lang.Integer java.lang.Integer ( ) { return int ( ) ; } 
public static de.azapps.mirakelandroid.test.ListMirakel de.azapps.mirakelandroid.test.ListMirakel ( ) { final java.util.List<de.azapps.mirakelandroid.test.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakelandroid.test.ListMirakel> = ListMirakel . all ( false ) ; return java.util.List<de.azapps.mirakelandroid.test.ListMirakel> . get ( java.security.SecureRandom . int ( java.util.List<de.azapps.mirakelandroid.test.ListMirakel> . size ( ) ) ) ; } 
public static java.util.Calendar java.util.Calendar ( ) { return java.util.GregorianCalendar ( ) ; } 
public static long long ( ) { return java.security.SecureRandom . long ( ) ; } 
public static de.azapps.mirakelandroid.test.Uri de.azapps.mirakelandroid.test.Uri ( ) { final java.lang.String java.lang.String = FileUtils . getMirakelDir ( ) + STRING ; final java.io.File java.io.File = new java.io.File ( java.lang.String ) ; return Uri . fromFile ( java.io.File ) ; } 
public static de.azapps.mirakelandroid.test.ACCOUNT_TYPES de.azapps.mirakelandroid.test.ACCOUNT_TYPES ( ) { ACCOUNT_TYPES de.azapps.mirakelandroid.test.ACCOUNT_TYPES ; do { de.azapps.mirakelandroid.test.ACCOUNT_TYPES = ACCOUNT_TYPES . values ( ) [ java.security.SecureRandom . int ( ACCOUNT_TYPES . values ( ) . length ) ] ; } while ( ACCOUNT_TYPES . LOCAL . equals ( de.azapps.mirakelandroid.test.ACCOUNT_TYPES ) ); return de.azapps.mirakelandroid.test.ACCOUNT_TYPES ; } 
public static < T > T T ( final java.util.List<T> < T > java.util.List<T> ) { if ( java.util.List<T> . boolean ( ) ) { return null ; } return java.util.List<T> . T ( java.security.SecureRandom . int ( java.util.List<T> . int ( ) ) ) ; } 
public static de.azapps.mirakelandroid.test.Task de.azapps.mirakelandroid.test.Task ( ) { Task . init ( de.azapps.mirakelandroid.test.Context ) ; final java.util.List<de.azapps.mirakelandroid.test.Task> < Task > java.util.List<de.azapps.mirakelandroid.test.Task> = Task . all ( ) ; return java.util.List<de.azapps.mirakelandroid.test.Task> . get ( java.security.SecureRandom . int ( java.util.List<de.azapps.mirakelandroid.test.Task> . size ( ) ) ) ; } 
public static de.azapps.mirakelandroid.test.SparseBooleanArray de.azapps.mirakelandroid.test.SparseBooleanArray ( ) { final SparseBooleanArray de.azapps.mirakelandroid.test.SparseBooleanArray = new SparseBooleanArray ( NUMBER ) ; de.azapps.mirakelandroid.test.SparseBooleanArray . append ( java.util.Calendar . int , boolean ( ) ) ; de.azapps.mirakelandroid.test.SparseBooleanArray . append ( java.util.Calendar . int , boolean ( ) ) ; de.azapps.mirakelandroid.test.SparseBooleanArray . append ( java.util.Calendar . int , boolean ( ) ) ; de.azapps.mirakelandroid.test.SparseBooleanArray . append ( java.util.Calendar . int , boolean ( ) ) ; de.azapps.mirakelandroid.test.SparseBooleanArray . append ( java.util.Calendar . int , boolean ( ) ) ; de.azapps.mirakelandroid.test.SparseBooleanArray . append ( java.util.Calendar . int , boolean ( ) ) ; de.azapps.mirakelandroid.test.SparseBooleanArray . append ( java.util.Calendar . int , boolean ( ) ) ; return de.azapps.mirakelandroid.test.SparseBooleanArray ; } 
public static java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) ; for ( int int = NUMBER ; int < java.security.SecureRandom . int ( NUMBER ) ; int ++ ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ( ) , java.lang.String ( ) ) ; } return java.util.Map<java.lang.String,java.lang.String> ; } 
public static java.util.GregorianCalendar java.util.GregorianCalendar ( ) { final java.util.GregorianCalendar java.util.GregorianCalendar = new java.util.GregorianCalendar ( ) ; java.util.GregorianCalendar . void ( java.util.Calendar . int , java.security.SecureRandom . int ( NUMBER ) ) ; java.util.GregorianCalendar . void ( java.util.Calendar . int , java.security.SecureRandom . int ( NUMBER ) ) ; java.util.GregorianCalendar . void ( java.util.Calendar . int , java.security.SecureRandom . int ( NUMBER ) ) ; java.util.GregorianCalendar . void ( java.util.Calendar . int , java.security.SecureRandom . int ( NUMBER ) ) ; java.util.GregorianCalendar . void ( java.util.Calendar . int , java.security.SecureRandom . int ( NUMBER ) ) ; return java.util.GregorianCalendar ; } 
public static de.azapps.mirakelandroid.test.Context de.azapps.mirakelandroid.test.Context ( ) { return de.azapps.mirakelandroid.test.Context ; } 
public static java.util.Map<java.lang.String,de.azapps.mirakelandroid.test.SpecialListsBaseProperty> < java.lang.String , SpecialListsBaseProperty > java.util.Map<java.lang.String,de.azapps.mirakelandroid.test.SpecialListsBaseProperty> ( ) { return new java.util.HashMap<java.lang.String,de.azapps.mirakelandroid.test.SpecialListsBaseProperty> <> ( ) ; } 
public static int int ( ) { return java.security.SecureRandom . int ( NUMBER ) - NUMBER ; } 
public static ListMirakel . ListMirakel.SORT_BY ListMirakel.SORT_BY ( ) { return ListMirakel . SORT_BY . fromShort ( ( short ) java.security.SecureRandom . int ( ListMirakel . SORT_BY . values ( ) . length ) ) ; } 
public static de.azapps.mirakelandroid.test.Optional<java.util.Calendar> < java.util.Calendar > de.azapps.mirakelandroid.test.Optional<java.util.Calendar> ( ) { if ( boolean ( ) ) { return of ( java.util.Calendar ( ) ) ; } else { return absent ( ) ; } } 
public static de.azapps.mirakelandroid.test.Optional<java.lang.Long> < java.lang.Long > de.azapps.mirakelandroid.test.Optional<java.lang.Long> ( ) { if ( boolean ( ) ) { return of ( java.lang.Long ( ) ) ; } else { return absent ( ) ; } } 
public static de.azapps.mirakelandroid.test.Optional<java.lang.String> < java.lang.String > de.azapps.mirakelandroid.test.Optional<java.lang.String> ( ) { if ( boolean ( ) ) { return of ( java.lang.String ( ) ) ; } else { return absent ( ) ; } } 
public static de.azapps.mirakelandroid.test.Optional<de.azapps.mirakelandroid.test.ListMirakel> < ListMirakel > de.azapps.mirakelandroid.test.Optional<de.azapps.mirakelandroid.test.ListMirakel> ( ) { if ( boolean ( ) ) { return of ( de.azapps.mirakelandroid.test.ListMirakel ( ) ) ; } else { return absent ( ) ; } } 
public static java.lang.Integer java.lang.Integer ( ) { if ( boolean ( ) ) { return null ; } return java.lang.Integer ( ) ; } 
public static int int ( final int int ) { return java.security.SecureRandom . int ( int ) ; } 
public static SpecialListsStringProperty . SpecialListsStringProperty.Type SpecialListsStringProperty.Type ( ) { return SpecialListsStringProperty . Type . values ( ) [ int ( SpecialListsStringProperty . Type . values ( ) . length ) ] ; } 
public static SpecialListsDueProperty . SpecialListsDueProperty.Unit SpecialListsDueProperty.Unit ( ) { return SpecialListsDueProperty . Unit . values ( ) [ int ( SpecialListsDueProperty . Unit . values ( ) . length ) ] ; } 
public static java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ( ) { final java.util.List<de.azapps.mirakelandroid.test.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakelandroid.test.ListMirakel> = ListMirakel . all ( false ) ; return new java.util.ArrayList <> ( Collections2 . transform ( java.util.List<de.azapps.mirakelandroid.test.ListMirakel> . subList ( NUMBER , int ( java.util.List<de.azapps.mirakelandroid.test.ListMirakel> . size ( ) ) ) , new Function < ListMirakel , java.lang.Integer > ( ) { @ java.lang.Override public java.lang.Integer java.lang.Integer ( final ListMirakel de.azapps.mirakelandroid.test.ListMirakel ) { return ( int ) de.azapps.mirakelandroid.test.ListMirakel . getId ( ) ; } } ) ) ; } 
@ java.lang.Override public java.lang.Integer java.lang.Integer ( final ListMirakel de.azapps.mirakelandroid.test.ListMirakel ) { return ( int ) de.azapps.mirakelandroid.test.ListMirakel . getId ( ) ; } 
public static java.util.List<de.azapps.mirakelandroid.test.SpecialList> < SpecialList > java.util.List<de.azapps.mirakelandroid.test.SpecialList> ( ) { final java.util.List<de.azapps.mirakelandroid.test.SpecialList> < SpecialList > java.util.List<de.azapps.mirakelandroid.test.SpecialList> = SpecialList . allSpecial ( ) ; return java.util.List<de.azapps.mirakelandroid.test.SpecialList> . subList ( NUMBER , int ( java.util.List<de.azapps.mirakelandroid.test.SpecialList> . size ( ) ) ) ; } 
public static SpecialListsProgressProperty . SpecialListsProgressProperty.OPERATION SpecialListsProgressProperty.OPERATION ( ) { return SpecialListsProgressProperty . OPERATION . values ( ) [ int ( SpecialListsProgressProperty . OPERATION . values ( ) . length ) ] ; } 
public static de.azapps.mirakelandroid.test.Optional<de.azapps.mirakelandroid.test.Uri> < Uri > de.azapps.mirakelandroid.test.Optional<de.azapps.mirakelandroid.test.Uri> ( ) { return absent ( ) ; } 
public static de.azapps.mirakelandroid.test.Optional<de.azapps.mirakelandroid.test.Recurring> < Recurring > de.azapps.mirakelandroid.test.Optional<de.azapps.mirakelandroid.test.Recurring> ( ) { if ( int ( NUMBER ) > NUMBER ) { return absent ( ) ; } final java.util.List<de.azapps.mirakelandroid.test.Recurring> < Recurring > java.util.List<de.azapps.mirakelandroid.test.Recurring> = Recurring . all ( ) ; return of ( java.util.List<de.azapps.mirakelandroid.test.Recurring> . get ( int ( java.util.List<de.azapps.mirakelandroid.test.Recurring> . size ( ) ) ) ) ; } 
public static de.azapps.mirakelandroid.test.Optional<java.lang.Integer> < java.lang.Integer > de.azapps.mirakelandroid.test.Optional<java.lang.Integer> ( ) { if ( int ( NUMBER ) > NUMBER ) { return absent ( ) ; } return of ( int ( ) ) ; } 
public static de.azapps.mirakelandroid.test.DateTime de.azapps.mirakelandroid.test.DateTime ( ) { return new DateTime ( ) . plusSeconds ( java.security.SecureRandom . int ( NUMBER ) ) . plusMinutes ( java.security.SecureRandom . int ( NUMBER ) ) . plusHours ( java.security.SecureRandom . int ( NUMBER ) ) . plusDays ( java.security.SecureRandom . int ( NUMBER ) ) . plusMonths ( java.security.SecureRandom . int ( NUMBER ) ) ; } 
public static de.azapps.mirakelandroid.test.Optional<de.azapps.mirakelandroid.test.DateTime> < DateTime > de.azapps.mirakelandroid.test.Optional<de.azapps.mirakelandroid.test.DateTime> ( ) { if ( int ( NUMBER ) > NUMBER ) { return absent ( ) ; } return of ( de.azapps.mirakelandroid.test.DateTime ( ) ) ; } 
public static de.azapps.mirakelandroid.test.Period de.azapps.mirakelandroid.test.Period ( ) { return new Period ( int ( NUMBER ) , int ( NUMBER ) , int ( NUMBER ) , int ( NUMBER ) , int ( NUMBER ) , int ( NUMBER ) , NUMBER , NUMBER ) ; } 
public static void void ( final Context de.azapps.mirakelandroid.test.Context ) { DefinitionsHelper . init ( de.azapps.mirakelandroid.test.Context , STRING ) ; MirakelPreferences . init ( de.azapps.mirakelandroid.test.Context ) ; ErrorReporter . init ( de.azapps.mirakelandroid.test.Context ) ; ThemeManager . init ( de.azapps.mirakelandroid.test.Context , R . style . MirakelBaseTheme , R . style . MirakelDialogTheme ) ; CursorGetter . init ( de.azapps.mirakelandroid.test.Context ) ; ModelBase . init ( de.azapps.mirakelandroid.test.Context ) ; final java.util.Locale java.util.Locale = Helpers . getLocale ( de.azapps.mirakelandroid.test.Context ) ; java.util.Locale . void ( java.util.Locale ) ; final Configuration de.azapps.mirakelandroid.test.Configuration = new Configuration ( ) ; config . locale = java.util.Locale ; de.azapps.mirakelandroid.test.Context . getResources ( ) . updateConfiguration ( de.azapps.mirakelandroid.test.Configuration , de.azapps.mirakelandroid.test.Context . getResources ( ) . getDisplayMetrics ( ) ) ; Semantic . init ( de.azapps.mirakelandroid.test.Context ) ; try { ListMirakel . newList ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomSORT_BY ( ) , RandomHelper . getRandomAccountMirakel ( ) ) ; } catch ( ListMirakel . ListMirakel ListMirakel.ListAlreadyExistsException ) { } final Task de.azapps.mirakelandroid.test.Task = Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) ) ; Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; Tag . newTag ( RandomHelper . getRandomString ( ) ) ; FileMirakel . newFile ( de.azapps.mirakelandroid.test.Context , de.azapps.mirakelandroid.test.Task , RandomHelper . getRandomUri ( ) ) ; Recurring . newRecurring ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPeriod ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomSparseBooleanArray ( ) ) ; Semantic . newSemantic ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomint ( ) , RandomHelper . getRandomint ( ) , RandomHelper . getRandomOptional_ListMirakel ( ) , RandomHelper . getRandomint ( ) ) ; } 
public static void void ( ) {    } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) ; final ACCOUNT_TYPES de.azapps.mirakel.model.account.ACCOUNT_TYPES = RandomHelper . getRandomACCOUNT_TYPES ( ) ; de.azapps.mirakel.model.account.AccountMirakel . setType ( de.azapps.mirakel.model.account.ACCOUNT_TYPES ) ; assertThat ( de.azapps.mirakel.model.account.AccountMirakel . getType ( ) ) . isEqualTo ( de.azapps.mirakel.model.account.ACCOUNT_TYPES ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; de.azapps.mirakel.model.account.AccountMirakel . setEnabled ( boolean ) ; assertThat ( de.azapps.mirakel.model.account.AccountMirakel . isEnabled ( ) ) . isEqualTo ( boolean ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) ; final Optional < java.lang.String > de.azapps.mirakel.model.account.Optional<java.lang.String> = RandomHelper . getRandomOptional_String ( ) ; de.azapps.mirakel.model.account.AccountMirakel . setSyncKey ( de.azapps.mirakel.model.account.Optional<java.lang.String> ) ; assertThat ( de.azapps.mirakel.model.account.AccountMirakel . getSyncKey ( ) ) . isEqualTo ( de.azapps.mirakel.model.account.Optional<java.lang.String> ) ; } 
@ Before public void void ( ) java.lang.Exception { super. setUp ( ) ; de.azapps.mirakel.model.account.SQLiteDatabase = DatabaseHelper . getDatabaseHelper ( RuntimeEnvironment . application ) . getWritableDatabase ( ) ; AccountMirakel . newAccount ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomACCOUNT_TYPES ( ) , RandomHelper . getRandomboolean ( ) ) ; } 
private static int int ( ) { final Cursor de.azapps.mirakel.model.account.Cursor = de.azapps.mirakel.model.account.SQLiteDatabase . rawQuery ( STRING , null ) ; de.azapps.mirakel.model.account.Cursor . moveToFirst ( ) ; return de.azapps.mirakel.model.account.Cursor . getInt ( NUMBER ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; AccountMirakel . newAccount ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomACCOUNT_TYPES ( ) , RandomHelper . getRandomboolean ( ) ) ; final int int = int ( ) ; assertThat ( int + NUMBER ) . isEqualTo ( int ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = AccountMirakel . newAccount ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomACCOUNT_TYPES ( ) , RandomHelper . getRandomboolean ( ) ) ; java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . add ( de.azapps.mirakel.model.account.AccountMirakel ) ; final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) ; } 
@ Test public void void ( ) { final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = AccountMirakel . newAccount ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomACCOUNT_TYPES ( ) , RandomHelper . getRandomboolean ( ) ) ; assertThat ( de.azapps.mirakel.model.account.AccountMirakel ) . isNotNull ( ) ; final Optional < AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . get ( de.azapps.mirakel.model.account.AccountMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ) . hasValue ( de.azapps.mirakel.model.account.AccountMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . size ( ) ) ; final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . get ( int ) ; de.azapps.mirakel.model.account.AccountMirakel . save ( ) ; final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . size ( ) ) ; final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . get ( int ) ; de.azapps.mirakel.model.account.AccountMirakel . setType ( RandomHelper . getRandomACCOUNT_TYPES ( ) ) ; de.azapps.mirakel.model.account.AccountMirakel . save ( ) ; final Optional < AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . get ( de.azapps.mirakel.model.account.AccountMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ) . hasValue ( de.azapps.mirakel.model.account.AccountMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . size ( ) ) ; final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . get ( int ) ; de.azapps.mirakel.model.account.AccountMirakel . setEnabled ( RandomHelper . getRandomboolean ( ) ) ; de.azapps.mirakel.model.account.AccountMirakel . save ( ) ; final Optional < AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . get ( de.azapps.mirakel.model.account.AccountMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ) . hasValue ( de.azapps.mirakel.model.account.AccountMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . size ( ) ) ; final AccountMirakel de.azapps.mirakel.model.account.AccountMirakel = java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . get ( int ) ; de.azapps.mirakel.model.account.AccountMirakel . setSyncKey ( RandomHelper . getRandomOptional_String ( ) ) ; de.azapps.mirakel.model.account.AccountMirakel . save ( ) ; final Optional < AccountMirakel > de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . get ( de.azapps.mirakel.model.account.AccountMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.account.Optional<de.azapps.mirakel.model.account.AccountMirakel> ) . hasValue ( de.azapps.mirakel.model.account.AccountMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; if ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . size ( ) < NUMBER ) { fail ( STRING ) ; } AccountMirakel de.azapps.mirakel.model.account.AccountMirakel ; do { de.azapps.mirakel.model.account.AccountMirakel = java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . get ( RandomHelper . getRandomint ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . size ( ) ) ) ; } while ( de.azapps.mirakel.model.account.AccountMirakel . equals ( AccountMirakel . getLocal ( ) ) ); final long long = de.azapps.mirakel.model.account.AccountMirakel . getId ( ) ; de.azapps.mirakel.model.account.AccountMirakel . destroy ( ) ; assertThat ( AccountMirakel . get ( long ) ) . isAbsent ( ) ; final java.util.List<de.azapps.mirakel.model.account.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.account.AccountMirakel> = AccountMirakel . all ( ) ; java.util.List<de.azapps.mirakel.model.account.AccountMirakel> . remove ( de.azapps.mirakel.model.account.AccountMirakel ) ; assertThat ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) ; assertThat ( java.util.List<de.azapps.mirakel.model.account.AccountMirakel> ) . doesNotContain ( de.azapps.mirakel.model.account.AccountMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; final FileMirakel de.azapps.mirakel.model.file.FileMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) ; final Task de.azapps.mirakel.model.file.Task = RandomHelper . getRandomTask ( ) ; de.azapps.mirakel.model.file.FileMirakel . setTask ( de.azapps.mirakel.model.file.Task ) ; assertThat ( de.azapps.mirakel.model.file.FileMirakel . getTask ( ) ) . isEqualTo ( de.azapps.mirakel.model.file.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; final FileMirakel de.azapps.mirakel.model.file.FileMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) ; final Uri de.azapps.mirakel.model.file.Uri = RandomHelper . getRandomUri ( ) ; de.azapps.mirakel.model.file.FileMirakel . setFileUri ( de.azapps.mirakel.model.file.Uri ) ; assertThat ( de.azapps.mirakel.model.file.FileMirakel . getFileUri ( ) ) . isEqualTo ( de.azapps.mirakel.model.file.Uri ) ; } 
@ Before public void void ( ) java.lang.Exception { super. setUp ( ) ; de.azapps.mirakel.model.file.SQLiteDatabase = DatabaseHelper . getDatabaseHelper ( RuntimeEnvironment . application ) . getWritableDatabase ( ) ; FileMirakel . newFile ( RandomHelper . getRandomTask ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomUri ( ) ) ; } 
private static int int ( ) { final Cursor de.azapps.mirakel.model.file.Cursor = de.azapps.mirakel.model.file.SQLiteDatabase . rawQuery ( STRING , null ) ; de.azapps.mirakel.model.file.Cursor . moveToFirst ( ) ; return de.azapps.mirakel.model.file.Cursor . getInt ( NUMBER ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; FileMirakel . newFile ( RandomHelper . getRandomTask ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomUri ( ) ) ; final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; final FileMirakel de.azapps.mirakel.model.file.FileMirakel = FileMirakel . newFile ( RandomHelper . getRandomTask ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomUri ( ) ) ; java.util.List<de.azapps.mirakel.model.file.FileMirakel> . add ( de.azapps.mirakel.model.file.FileMirakel ) ; final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) ; } 
@ Test public void void ( ) { final FileMirakel de.azapps.mirakel.model.file.FileMirakel = FileMirakel . newFile ( RandomHelper . getRandomTask ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomUri ( ) ) ; assertThat ( de.azapps.mirakel.model.file.FileMirakel ) . isNotNull ( ) ; final Optional < FileMirakel > de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . get ( de.azapps.mirakel.model.file.FileMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> ) . hasValue ( de.azapps.mirakel.model.file.FileMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> . size ( ) ) ; final FileMirakel de.azapps.mirakel.model.file.FileMirakel = java.util.List<de.azapps.mirakel.model.file.FileMirakel> . get ( int ) ; de.azapps.mirakel.model.file.FileMirakel . save ( ) ; final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> . size ( ) ) ; final FileMirakel de.azapps.mirakel.model.file.FileMirakel = java.util.List<de.azapps.mirakel.model.file.FileMirakel> . get ( int ) ; de.azapps.mirakel.model.file.FileMirakel . setTask ( RandomHelper . getRandomTask ( ) ) ; de.azapps.mirakel.model.file.FileMirakel . save ( ) ; final Optional < FileMirakel > de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . get ( de.azapps.mirakel.model.file.FileMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> ) . hasValue ( de.azapps.mirakel.model.file.FileMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> . size ( ) ) ; final FileMirakel de.azapps.mirakel.model.file.FileMirakel = java.util.List<de.azapps.mirakel.model.file.FileMirakel> . get ( int ) ; de.azapps.mirakel.model.file.FileMirakel . setFileUri ( RandomHelper . getRandomUri ( ) ) ; de.azapps.mirakel.model.file.FileMirakel . save ( ) ; final Optional < FileMirakel > de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . get ( de.azapps.mirakel.model.file.FileMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.file.Optional<de.azapps.mirakel.model.file.FileMirakel> ) . hasValue ( de.azapps.mirakel.model.file.FileMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> . size ( ) ) ; final FileMirakel de.azapps.mirakel.model.file.FileMirakel = java.util.List<de.azapps.mirakel.model.file.FileMirakel> . get ( int ) ; final long long = de.azapps.mirakel.model.file.FileMirakel . getId ( ) ; de.azapps.mirakel.model.file.FileMirakel . destroy ( ) ; assertThat ( FileMirakel . get ( long ) ) . isAbsent ( ) ; final java.util.List<de.azapps.mirakel.model.file.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.file.FileMirakel> = FileMirakel . all ( ) ; java.util.List<de.azapps.mirakel.model.file.FileMirakel> . remove ( int ) ; for ( int int = NUMBER ; int < java.util.List<de.azapps.mirakel.model.file.FileMirakel> . size ( ) ; int ++ ) { java.util.List<de.azapps.mirakel.model.file.FileMirakel> . set ( int , FileMirakel . get ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> . get ( int ) . getId ( ) ) . orNull ( ) ) ; } assertThat ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) ; assertThat ( java.util.List<de.azapps.mirakel.model.file.FileMirakel> ) . doesNotContain ( de.azapps.mirakel.model.file.FileMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; final SORT_BY de.azapps.mirakel.model.list.SORT_BY = RandomHelper . getRandomSORT_BY ( ) ; de.azapps.mirakel.model.list.ListMirakel . setSortBy ( de.azapps.mirakel.model.list.SORT_BY ) ; assertThat ( de.azapps.mirakel.model.list.ListMirakel . getSortBy ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.SORT_BY ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; final int int = RandomHelper . getRandomint ( ) ; de.azapps.mirakel.model.list.ListMirakel . setLft ( int ) ; assertThat ( de.azapps.mirakel.model.list.ListMirakel . getLft ( ) ) . isEqualTo ( int ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; final int int = RandomHelper . getRandomint ( ) ; de.azapps.mirakel.model.list.ListMirakel . setRgt ( int ) ; assertThat ( de.azapps.mirakel.model.list.ListMirakel . getRgt ( ) ) . isEqualTo ( int ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; final int int = RandomHelper . getRandomint ( ) ; de.azapps.mirakel.model.list.ListMirakel . setColor ( int ) ; assertThat ( de.azapps.mirakel.model.list.ListMirakel . getColor ( ) ) . isEqualTo ( int ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; final Optional < Uri > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> = RandomHelper . getRandomOptional_Uri ( ) ; de.azapps.mirakel.model.list.ListMirakel . setIconPath ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ) ; assertThat ( de.azapps.mirakel.model.list.ListMirakel . getIconPath ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.Uri> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; final AccountMirakel de.azapps.mirakel.model.list.AccountMirakel = RandomHelper . getRandomAccountMirakel ( ) ; de.azapps.mirakel.model.list.ListMirakel . setAccount ( de.azapps.mirakel.model.list.AccountMirakel ) ; assertThat ( de.azapps.mirakel.model.list.ListMirakel . getAccount ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.AccountMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; final SYNC_STATE de.azapps.mirakel.model.list.SYNC_STATE = RandomHelper . getRandomSYNC_STATE ( ) ; de.azapps.mirakel.model.list.ListMirakel . setSyncState ( de.azapps.mirakel.model.list.SYNC_STATE ) ; assertThat ( de.azapps.mirakel.model.list.ListMirakel . getSyncState ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.SYNC_STATE ) ; } 
@ Before public void void ( ) java.lang.Exception { super. setUp ( ) ; de.azapps.mirakel.model.list.SQLiteDatabase = DatabaseHelper . getDatabaseHelper ( RuntimeEnvironment . application ) . getWritableDatabase ( ) ; ListMirakel . newList ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomSORT_BY ( ) , RandomHelper . getRandomAccountMirakel ( ) ) ; } 
private static int int ( ) { final Cursor de.azapps.mirakel.model.list.Cursor = de.azapps.mirakel.model.list.SQLiteDatabase . rawQuery ( STRING , null ) ; de.azapps.mirakel.model.list.Cursor . moveToFirst ( ) ; return de.azapps.mirakel.model.list.Cursor . getInt ( NUMBER ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; try { ListMirakel . newList ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomSORT_BY ( ) , RandomHelper . getRandomAccountMirakel ( ) ) ; } catch ( ListMirakel . ListMirakel ListMirakel.ListAlreadyExistsException ) { fail ( STRING + ListMirakel.ListAlreadyExistsException . getMessage ( ) ) ; } final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; try { final ListMirakel de.azapps.mirakel.model.list.ListMirakel = ListMirakel . newList ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomSORT_BY ( ) , RandomHelper . getRandomAccountMirakel ( ) ) ; java.util.List<de.azapps.mirakel.model.list.ListMirakel> . add ( de.azapps.mirakel.model.list.ListMirakel ) ; final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; assertThat ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; } catch ( ListMirakel . ListMirakel ListMirakel.ListAlreadyExistsException ) { fail ( STRING + ListMirakel.ListAlreadyExistsException . getMessage ( ) ) ; } } 
@ Test public void void ( ) { try { final ListMirakel de.azapps.mirakel.model.list.ListMirakel = ListMirakel . newList ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomSORT_BY ( ) , RandomHelper . getRandomAccountMirakel ( ) ) ; assertThat ( de.azapps.mirakel.model.list.ListMirakel ) . isNotNull ( ) ; final long long = de.azapps.mirakel.model.list.ListMirakel . getId ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( long ) ; assertThat ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) . hasValue ( de.azapps.mirakel.model.list.ListMirakel ) ; } catch ( final ListMirakel . ListMirakel ListMirakel.ListAlreadyExistsException ) { fail ( STRING + ListMirakel.ListAlreadyExistsException . getMessage ( ) ) ; } } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; assertThat ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; try { de.azapps.mirakel.model.list.ListMirakel . setListName ( RandomHelper . getRandomString ( ) ) ; } catch ( ListMirakel . ListMirakel ListMirakel.ListAlreadyExistsException ) { fail ( STRING + ListMirakel.ListAlreadyExistsException . getMessage ( ) ) ; } de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.ListMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) . hasValue ( de.azapps.mirakel.model.list.ListMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; de.azapps.mirakel.model.list.ListMirakel . setSortBy ( RandomHelper . getRandomSORT_BY ( ) ) ; de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.ListMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) . hasValue ( de.azapps.mirakel.model.list.ListMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; de.azapps.mirakel.model.list.ListMirakel . setLft ( RandomHelper . getRandomint ( ) ) ; de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.ListMirakel . getId ( ) ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; de.azapps.mirakel.model.list.ListMirakel . setRgt ( RandomHelper . getRandomint ( ) ) ; de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.ListMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) . hasValue ( de.azapps.mirakel.model.list.ListMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; de.azapps.mirakel.model.list.ListMirakel . setColor ( RandomHelper . getRandomint ( ) ) ; de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.ListMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) . hasValue ( de.azapps.mirakel.model.list.ListMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; de.azapps.mirakel.model.list.ListMirakel . setIconPath ( RandomHelper . getRandomOptional_Uri ( ) ) ; de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.ListMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) . hasValue ( de.azapps.mirakel.model.list.ListMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; de.azapps.mirakel.model.list.ListMirakel . setAccount ( RandomHelper . getRandomAccountMirakel ( ) ) ; de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.ListMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) . hasValue ( de.azapps.mirakel.model.list.ListMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; de.azapps.mirakel.model.list.ListMirakel . setSyncState ( RandomHelper . getRandomSYNC_STATE ( ) ) ; de.azapps.mirakel.model.list.ListMirakel . save ( ) ; final Optional < ListMirakel > de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . get ( de.azapps.mirakel.model.list.ListMirakel . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.list.Optional<de.azapps.mirakel.model.list.ListMirakel> ) . hasValue ( de.azapps.mirakel.model.list.ListMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ) ; final ListMirakel de.azapps.mirakel.model.list.ListMirakel = java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) ; final long long = de.azapps.mirakel.model.list.ListMirakel . getId ( ) ; de.azapps.mirakel.model.list.ListMirakel . destroy ( ) ; assertThat ( ListMirakel . get ( long ) ) . isAbsent ( ) ; final java.util.List<de.azapps.mirakel.model.list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.list.ListMirakel> = ListMirakel . all ( false ) ; java.util.List<de.azapps.mirakel.model.list.ListMirakel> . remove ( int ) ; for ( int int = NUMBER ; int < java.util.List<de.azapps.mirakel.model.list.ListMirakel> . size ( ) ; int ++ ) { java.util.List<de.azapps.mirakel.model.list.ListMirakel> . set ( int , ListMirakel . get ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> . get ( int ) . getId ( ) ) . orNull ( ) ) ; } assertThat ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.list.ListMirakel> ) ; } 
@ Test public void void ( ) { java.util.List<de.azapps.mirakel.model.list.meta.SpecialList> < SpecialList > java.util.List<de.azapps.mirakel.model.list.meta.SpecialList> = SpecialList . allSpecial ( ) ; for ( SpecialList de.azapps.mirakel.model.list.meta.SpecialList : java.util.List<de.azapps.mirakel.model.list.meta.SpecialList> ) { assertThat ( de.azapps.mirakel.model.list.meta.SpecialList . isSpecial ( ) ) . isTrue ( ) ; } } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsDoneProperty de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty = new SpecialListsDoneProperty ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty . isSet ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( boolean ? STRING : STRING ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsDoneProperty ) ) { final SpecialListsDoneProperty de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty = ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty . isSet ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsReminderProperty de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty = new SpecialListsReminderProperty ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty . isSet ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( boolean ? STRING : STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . isEmpty ( ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsReminderProperty ) ) { final SpecialListsReminderProperty de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty = ( SpecialListsReminderProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty . isSet ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsReminderProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsFileProperty de.azapps.mirakel.model.list.meta.SpecialListsFileProperty = new SpecialListsFileProperty ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsFileProperty . isSet ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsFileProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ( boolean ? STRING : STRING ) + STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . isEmpty ( ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsFileProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsFileProperty ) ) { final SpecialListsFileProperty de.azapps.mirakel.model.list.meta.SpecialListsFileProperty = ( SpecialListsFileProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsFileProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsFileProperty . isSet ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsFileProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsDueExistsProperty de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty = new SpecialListsDueExistsProperty ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty . isSet ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( boolean ? STRING : STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . isEmpty ( ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsDueExistsProperty ) ) { final SpecialListsDueExistsProperty de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty = ( SpecialListsDueExistsProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty . isSet ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsDueExistsProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final java.lang.String java.lang.String = RandomHelper . getRandomString ( ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsStringProperty . SpecialListsStringProperty SpecialListsStringProperty.Type = RandomHelper . getRandomStringPropertyType ( ) ; final SpecialListsContentProperty de.azapps.mirakel.model.list.meta.SpecialListsContentProperty = new SpecialListsContentProperty ( boolean , java.lang.String , SpecialListsStringProperty.Type ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . getSearchString ( ) ) . isEqualTo ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . getType ( ) ) . isEqualTo ( SpecialListsStringProperty.Type ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . isSet ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ( boolean ? STRING : STRING ) + STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; switch ( SpecialListsStringProperty.Type ) { case BEGIN : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( java.lang.String + '%' ) ; break; case END : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( '%' + java.lang.String ) ; break; case CONTAINS : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( '%' + java.lang.String + '%' ) ; break; } final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsContentProperty ) ) { final SpecialListsContentProperty de.azapps.mirakel.model.list.meta.SpecialListsContentProperty = ( SpecialListsContentProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . getSearchString ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . getSearchString ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . getType ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . getType ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . isSet ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsContentProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final java.lang.String java.lang.String = RandomHelper . getRandomString ( ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsStringProperty . SpecialListsStringProperty SpecialListsStringProperty.Type = RandomHelper . getRandomStringPropertyType ( ) ; final SpecialListsNameProperty de.azapps.mirakel.model.list.meta.SpecialListsNameProperty = new SpecialListsNameProperty ( boolean , java.lang.String , SpecialListsStringProperty.Type ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . getSearchString ( ) ) . isEqualTo ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . getType ( ) ) . isEqualTo ( SpecialListsStringProperty.Type ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . isSet ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ( boolean ? STRING : STRING ) + STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; switch ( SpecialListsStringProperty.Type ) { case BEGIN : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( java.lang.String + '%' ) ; break; case END : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( '%' + java.lang.String ) ; break; case CONTAINS : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( '%' + java.lang.String + '%' ) ; break; } final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsNameProperty ) ) { final SpecialListsNameProperty de.azapps.mirakel.model.list.meta.SpecialListsNameProperty = ( SpecialListsNameProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . getSearchString ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . getSearchString ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . getType ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . getType ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . isSet ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsNameProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final java.lang.String java.lang.String = RandomHelper . getRandomString ( ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsStringProperty . SpecialListsStringProperty SpecialListsStringProperty.Type = RandomHelper . getRandomStringPropertyType ( ) ; final SpecialListsListNameProperty de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty = new SpecialListsListNameProperty ( boolean , java.lang.String , SpecialListsStringProperty.Type ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . getSearchString ( ) ) . isEqualTo ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . getType ( ) ) . isEqualTo ( SpecialListsStringProperty.Type ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . isSet ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( STRING + ( boolean ? STRING : STRING ) + STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; switch ( SpecialListsStringProperty.Type ) { case BEGIN : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( java.lang.String + '%' ) ; break; case END : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( '%' + java.lang.String ) ; break; case CONTAINS : assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( '%' + java.lang.String + '%' ) ; break; } final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsListNameProperty ) ) { final SpecialListsListNameProperty de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty = ( SpecialListsListNameProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . getSearchString ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . getSearchString ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . getType ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . getType ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . isSet ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsListNameProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsDueProperty . SpecialListsDueProperty SpecialListsDueProperty.Unit = RandomHelper . getRandomUnit ( ) ; final int int = java.lang.Math . int ( RandomHelper . getRandomint ( NUMBER ) ) ; final SpecialListsDueProperty de.azapps.mirakel.model.list.meta.SpecialListsDueProperty = new SpecialListsDueProperty ( SpecialListsDueProperty.Unit , int , boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . getUnit ( ) ) . isEqualTo ( SpecialListsDueProperty.Unit ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . getLength ( ) ) . isEqualTo ( int ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; DateTime de.azapps.mirakel.model.list.meta.DateTime = new LocalDate ( ) . toDateTimeAtStartOfDay ( ) . plusDays ( NUMBER ) . minusSeconds ( NUMBER ) ; switch ( SpecialListsDueProperty.Unit ) { case DAY : de.azapps.mirakel.model.list.meta.DateTime = de.azapps.mirakel.model.list.meta.DateTime . plusDays ( int ) ; break; case MONTH : de.azapps.mirakel.model.list.meta.DateTime = de.azapps.mirakel.model.list.meta.DateTime . plusMonths ( int ) ; break; case YEAR : de.azapps.mirakel.model.list.meta.DateTime = de.azapps.mirakel.model.list.meta.DateTime . plusYears ( int ) ; break; } assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( STRING + ( boolean ? '>' : '<' ) + STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( java.lang.String . java.lang.String ( de.azapps.mirakel.model.list.meta.DateTime . getMillis ( ) ) ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsDueProperty ) ) { final SpecialListsDueProperty de.azapps.mirakel.model.list.meta.SpecialListsDueProperty = ( SpecialListsDueProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . getUnit ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . getUnit ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . isSet ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . getLength ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . getLength ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsDueProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = RandomHelper . getRandomList_ListMirakel_ID ( ) ; final java.util.List<de.azapps.mirakel.model.list.meta.SpecialList> < SpecialList > java.util.List<de.azapps.mirakel.model.list.meta.SpecialList> = RandomHelper . getRandomList_SpecialList ( ) ; final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( java.util.List<java.lang.Integer> ) ; java.util.List<java.lang.Integer> . boolean ( Collections2 . transform ( java.util.List<de.azapps.mirakel.model.list.meta.SpecialList> , new Function < SpecialList , java.lang.Integer > ( ) { @ java.lang.Override public java.lang.Integer java.lang.Integer ( final SpecialList de.azapps.mirakel.model.list.meta.SpecialList ) { return ( int ) de.azapps.mirakel.model.list.meta.SpecialList . getId ( ) ; } } ) ) ; final SpecialListsListProperty de.azapps.mirakel.model.list.meta.SpecialListsListProperty = new SpecialListsListProperty ( boolean , java.util.List<java.lang.Integer> ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListProperty . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListProperty . getContent ( ) ) . containsExactlyElementsIn ( java.util.List<java.lang.Integer> ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsListProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; final java.util.List<de.azapps.mirakel.model.list.meta.MirakelQueryBuilder> < MirakelQueryBuilder > java.util.List<de.azapps.mirakel.model.list.meta.MirakelQueryBuilder> = new java.util.ArrayList <> ( Collections2 . transform ( java.util.List<de.azapps.mirakel.model.list.meta.SpecialList> , new Function < SpecialList , MirakelQueryBuilder > ( ) { @ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( final SpecialList de.azapps.mirakel.model.list.meta.SpecialList ) { return de.azapps.mirakel.model.list.meta.SpecialList . getWhereQueryForTasks ( ) ; } } ) ) ; final java.lang.String java.lang.String = TextUtils . join ( STRING , Collections2 . transform ( java.util.List<de.azapps.mirakel.model.list.meta.MirakelQueryBuilder> , new Function < MirakelQueryBuilder , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ) { return '(' + de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) + ')' ; } } ) ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList <> ( Collections2 . transform ( java.util.List<java.lang.Integer> , new Function < java.lang.Integer , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return java.lang.String . java.lang.String ( java.lang.Integer ) ; } } ) ) ; for ( final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder : java.util.List<de.azapps.mirakel.model.list.meta.MirakelQueryBuilder> ) { java.util.List<java.lang.String> . boolean ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) ; } java.lang.String java.lang.String = STRING ; if ( ! java.util.List<de.azapps.mirakel.model.list.meta.SpecialList> . isEmpty ( ) ) { java.lang.String += java.lang.String ; } if ( ! java.util.List<java.lang.Integer> . boolean ( ) ) { if ( ! java.lang.String . boolean ( ) ) { java.lang.String += STRING ; } java.lang.String += STRING + TextUtils . join ( STRING , Collections2 . transform ( java.util.List<java.lang.Integer> , new Function < java.lang.Integer , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return STRING ; } } ) ) + ')' ; } if ( boolean && ! java.lang.String . java.lang.String ( ) . boolean ( ) ) { java.lang.String = STRING + java.lang.String + ')' ; } assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( java.util.List<java.lang.String> . int ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactlyElementsIn ( java.util.List<java.lang.String> ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsListProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsListProperty ) ) { final SpecialListsListProperty de.azapps.mirakel.model.list.meta.SpecialListsListProperty = ( SpecialListsListProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsListProperty . isSet ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsListProperty . getContent ( ) ) . containsExactlyElementsIn ( de.azapps.mirakel.model.list.meta.SpecialListsListProperty . getContent ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsListProperty . serialize ( ) ) ; } } 
@ java.lang.Override public java.lang.Integer java.lang.Integer ( final SpecialList de.azapps.mirakel.model.list.meta.SpecialList ) { return ( int ) de.azapps.mirakel.model.list.meta.SpecialList . getId ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.model.list.meta.MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ( final SpecialList de.azapps.mirakel.model.list.meta.SpecialList ) { return de.azapps.mirakel.model.list.meta.SpecialList . getWhereQueryForTasks ( ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder ) { return '(' + de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) + ')' ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return java.lang.String . java.lang.String ( java.lang.Integer ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return STRING ; } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( NUMBER ) ; for ( int int = - NUMBER ; int < NUMBER ; int ++ ) { if ( RandomHelper . getRandomboolean ( ) ) { java.util.List<java.lang.Integer> . boolean ( int ) ; } } final SpecialListsPriorityProperty de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty = new SpecialListsPriorityProperty ( boolean , java.util.List<java.lang.Integer> ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . getContent ( ) ) . containsExactlyElementsIn ( java.util.List<java.lang.Integer> ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; java.lang.String java.lang.String ; if ( java.util.List<java.lang.Integer> . boolean ( ) ) { java.lang.String = STRING ; } else { java.lang.String = STRING + TextUtils . join ( STRING , Collections2 . transform ( java.util.List<java.lang.Integer> , new Function < java.lang.Integer , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return STRING ; } } ) ) + ')' ; if ( boolean ) { java.lang.String = STRING + java.lang.String ; } } assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( java.util.List<java.lang.Integer> . int ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactlyElementsIn ( Collections2 . transform ( java.util.List<java.lang.Integer> , new Function < java.lang.Integer , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return java.lang.String . java.lang.String ( java.lang.Integer ) ; } } ) ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsPriorityProperty ) ) { final SpecialListsPriorityProperty de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty = ( SpecialListsPriorityProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . isSet ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . getContent ( ) ) . containsExactlyElementsIn ( de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . getContent ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsPriorityProperty . serialize ( ) ) ; } } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return java.lang.String . java.lang.String ( java.lang.Integer ) ; } 
@ Test public void void ( ) { final int int = RandomHelper . getRandomint ( NUMBER ) ; final SpecialListsProgressProperty . SpecialListsProgressProperty SpecialListsProgressProperty.OPERATION = RandomHelper . getRandomOperation ( ) ; final SpecialListsProgressProperty de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty = new SpecialListsProgressProperty ( int , SpecialListsProgressProperty.OPERATION ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . getValue ( ) ) . isEqualTo ( int ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . getOperation ( ) ) . isEqualTo ( SpecialListsProgressProperty.OPERATION ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; java.lang.String java.lang.String ; switch ( SpecialListsProgressProperty.OPERATION ) { case GREATER_THAN : java.lang.String = STRING ; break; case EQUAL : java.lang.String = STRING ; break; case LESS_THAN : java.lang.String = STRING ; break; default: fail ( STRING ) ; return; } assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( STRING + java.lang.String + STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( java.lang.String . java.lang.String ( int ) ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsProgressProperty ) ) { final SpecialListsProgressProperty de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty = ( SpecialListsProgressProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . getValue ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . getValue ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . getOperation ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . getOperation ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsProgressProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsSubtaskProperty de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty = new SpecialListsSubtaskProperty ( boolean , boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . isParent ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ( boolean ? STRING : STRING ) + STRING + ( boolean ? STRING : STRING ) + STRING ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . isEmpty ( ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsSubtaskProperty ) ) { final SpecialListsSubtaskProperty de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty = ( SpecialListsSubtaskProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . isSet ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . isParent ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . isParent ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsSubtaskProperty . serialize ( ) ) ; } } 
@ Test public void void ( ) { final int int = RandomHelper . getRandomint ( NUMBER ) ; final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( int ) ; for ( int int = NUMBER ; int < int ; int ++ ) { java.util.List<java.lang.Integer> . boolean ( RandomHelper . getRandomint ( ) ) ; } final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsTagProperty de.azapps.mirakel.model.list.meta.SpecialListsTagProperty = new SpecialListsTagProperty ( boolean , java.util.List<java.lang.Integer> ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . getContent ( ) ) . containsExactlyElementsIn ( java.util.List<java.lang.Integer> ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; java.lang.String java.lang.String = STRING ; if ( ! java.util.List<java.lang.Integer> . boolean ( ) ) { java.lang.String = ( boolean ? STRING : STRING ) + STRING ; java.lang.String += TextUtils . join ( STRING , Collections2 . transform ( java.util.List<java.lang.Integer> , new Function < java.lang.Integer , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return STRING ; } } ) ) ; java.lang.String += STRING ; } assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( java.util.List<java.lang.Integer> . int ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactlyElementsIn ( Collections2 . transform ( java.util.List<java.lang.Integer> , new Function < java.lang.Integer , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return java.lang.String . java.lang.String ( java.lang.Integer ) ; } } ) ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsTagProperty ) ) { final SpecialListsTagProperty de.azapps.mirakel.model.list.meta.SpecialListsTagProperty = ( SpecialListsTagProperty ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . isSet ( ) ) . isEqualTo ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . isSet ( ) ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . getContent ( ) ) . containsExactlyElementsIn ( de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . getContent ( ) ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsTagProperty . serialize ( ) ) ; } } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return java.lang.String . java.lang.String ( java.lang.Integer ) ; } 
@ Test public void void ( ) { final boolean boolean = RandomHelper . getRandomboolean ( ) ; final SpecialListsDoneProperty de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty = new SpecialListsDoneProperty ( boolean ) ; final SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = new SpecialListsConjunctionList ( de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty , CONJUNCTION . AND ) ; final SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = new SpecialListsConjunctionList ( de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty , CONJUNCTION . OR ) ; final SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = new SpecialListsConjunctionList ( de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty , CONJUNCTION . AND ) ; de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . addChild ( de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty ) ; de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . addChild ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ) ; de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . addChild ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . AND ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . OR ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . AND ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsConjunctionList .class ) ; final SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . OR ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsConjunctionList .class ) ; final SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . AND ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . OR ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsConjunctionList .class ) ; SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . AND ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . AND ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; final MirakelQueryBuilder de.azapps.mirakel.model.list.meta.MirakelQueryBuilder = de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getWhereQueryBuilder ( RuntimeEnvironment . application ) ; java.lang.String java.lang.String = '(' + de.azapps.mirakel.model.list.meta.SpecialListsDoneProperty . getWhereQueryBuilder ( RuntimeEnvironment . application ) . getSelection ( ) + ')' ; final java.lang.String java.lang.String = java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( boolean ? STRING : STRING , boolean ? STRING : STRING , boolean ? STRING : STRING , boolean ? STRING : STRING ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> = SpecialListsWhereDeserializer . deserializeWhere ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . serialize ( ) , STRING ) ; if ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . isPresent ( ) && ( de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsConjunctionList ) ) { final SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.model.list.meta.Optional<de.azapps.mirakel.model.list.meta.SpecialListsBaseProperty> . get ( ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . AND ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsConjunctionList .class ) ; final SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . OR ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . OR ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsConjunctionList .class ) ; final SpecialListsConjunctionList de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . AND ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getOperation ( ) ) . isEqualTo ( CONJUNCTION . AND ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; assertThat ( de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isInstanceOf ( SpecialListsDoneProperty .class ) ; assertThat ( ( ( SpecialListsDoneProperty ) de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . getChilds ( ) . get ( NUMBER ) ) . isSet ( ) ) . isEqualTo ( boolean ) ; } else { fail ( STRING + de.azapps.mirakel.model.list.meta.SpecialListsConjunctionList . serialize ( ) ) ; } } 
@ Test public void void ( ) { final ListMirakel de.azapps.mirakel.model.ListMirakel = RandomHelper . getRandomListMirakel ( ) ; final Task de.azapps.mirakel.model.Task = new Task ( RandomHelper . getRandomString ( ) , de.azapps.mirakel.model.ListMirakel , RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; final Parcel de.azapps.mirakel.model.Parcel = Parcel . obtain ( ) ; de.azapps.mirakel.model.Task . writeToParcel ( de.azapps.mirakel.model.Parcel , NUMBER ) ; de.azapps.mirakel.model.Parcel . setDataPosition ( NUMBER ) ; Task de.azapps.mirakel.model.Task = Task . CREATOR . createFromParcel ( de.azapps.mirakel.model.Parcel ) ; assertThat ( de.azapps.mirakel.model.Task ) . isEqualTo ( de.azapps.mirakel.model.Task ) ; } 
@ Test public void void ( ) { final Tag de.azapps.mirakel.model.Tag = new Tag ( RandomHelper . getRandomint ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomint ( ) , RandomHelper . getRandomboolean ( ) ) ; final Parcel de.azapps.mirakel.model.Parcel = Parcel . obtain ( ) ; de.azapps.mirakel.model.Tag . writeToParcel ( de.azapps.mirakel.model.Parcel , NUMBER ) ; de.azapps.mirakel.model.Parcel . setDataPosition ( NUMBER ) ; final Tag de.azapps.mirakel.model.Tag = Tag . CREATOR . createFromParcel ( de.azapps.mirakel.model.Parcel ) ; assertThat ( de.azapps.mirakel.model.Tag ) . isEqualTo ( de.azapps.mirakel.model.Tag ) ; } 
@ Test public void void ( ) { final ListMirakel de.azapps.mirakel.model.ListMirakel = RandomHelper . getRandomListMirakel ( ) ; final Parcel de.azapps.mirakel.model.Parcel = Parcel . obtain ( ) ; de.azapps.mirakel.model.ListMirakel . writeToParcel ( de.azapps.mirakel.model.Parcel , NUMBER ) ; de.azapps.mirakel.model.Parcel . setDataPosition ( NUMBER ) ; final ListMirakel de.azapps.mirakel.model.ListMirakel = ListMirakel . CREATOR . createFromParcel ( de.azapps.mirakel.model.Parcel ) ; assertThat ( de.azapps.mirakel.model.ListMirakel ) . isEqualTo ( de.azapps.mirakel.model.ListMirakel ) ; } 
@ Test public void void ( ) { final Semantic de.azapps.mirakel.model.Semantic = new Semantic ( RandomHelper . getRandomint ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomPriority ( ) , RandomHelper . getRandomInteger ( ) , Optional .< ListMirakel > absent ( ) , RandomHelper . getRandomInteger ( ) ) ; final Parcel de.azapps.mirakel.model.Parcel = Parcel . obtain ( ) ; de.azapps.mirakel.model.Semantic . writeToParcel ( de.azapps.mirakel.model.Parcel , NUMBER ) ; de.azapps.mirakel.model.Parcel . setDataPosition ( NUMBER ) ; final Semantic de.azapps.mirakel.model.Semantic = Semantic . CREATOR . createFromParcel ( de.azapps.mirakel.model.Parcel ) ; assertThat ( de.azapps.mirakel.model.Semantic ) . isEqualTo ( de.azapps.mirakel.model.Semantic ) ; } 
@ Test public void void ( ) { final Recurring de.azapps.mirakel.model.Recurring = new Recurring ( RandomHelper . getRandomlong ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomPeriod ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomSparseBooleanArray ( ) , RandomHelper . getRandomOptional_Long ( ) ) ; final Parcel de.azapps.mirakel.model.Parcel = Parcel . obtain ( ) ; de.azapps.mirakel.model.Recurring . writeToParcel ( de.azapps.mirakel.model.Parcel , NUMBER ) ; de.azapps.mirakel.model.Parcel . setDataPosition ( NUMBER ) ; final Recurring de.azapps.mirakel.model.Recurring = Recurring . CREATOR . createFromParcel ( de.azapps.mirakel.model.Parcel ) ; assertThat ( de.azapps.mirakel.model.Recurring ) . isEqualTo ( de.azapps.mirakel.model.Recurring ) ; } 
@ Test public void void ( ) { final Task de.azapps.mirakel.model.Task = RandomHelper . getRandomTask ( ) ; final MatrixCursor de.azapps.mirakel.model.MatrixCursor = new MatrixCursor ( new java.lang.String [] { ModelBase . ID , ModelBase . NAME , FileMirakel . TASK , FileMirakel . PATH } ) ; de.azapps.mirakel.model.MatrixCursor . addRow ( new java.lang.Object [] { RandomHelper . getRandomInteger ( ) , RandomHelper . getRandomString ( ) , de.azapps.mirakel.model.Task . getId ( ) , RandomHelper . getRandomUri ( ) } ) ; de.azapps.mirakel.model.MatrixCursor . moveToFirst ( ) ; final FileMirakel de.azapps.mirakel.model.FileMirakel = new FileMirakel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.MatrixCursor ) ) ; final Parcel de.azapps.mirakel.model.Parcel = Parcel . obtain ( ) ; de.azapps.mirakel.model.FileMirakel . writeToParcel ( de.azapps.mirakel.model.Parcel , NUMBER ) ; de.azapps.mirakel.model.Parcel . setDataPosition ( NUMBER ) ; final FileMirakel de.azapps.mirakel.model.FileMirakel = FileMirakel . CREATOR . createFromParcel ( de.azapps.mirakel.model.Parcel ) ; assertThat ( de.azapps.mirakel.model.FileMirakel ) . isEqualTo ( de.azapps.mirakel.model.FileMirakel ) ; } 
@ Test public void void ( ) { final AccountMirakel de.azapps.mirakel.model.AccountMirakel = new AccountMirakel ( RandomHelper . getRandomint ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomACCOUNT_TYPES ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_String ( ) ) ; final Parcel de.azapps.mirakel.model.Parcel = Parcel . obtain ( ) ; de.azapps.mirakel.model.AccountMirakel . writeToParcel ( de.azapps.mirakel.model.Parcel , NUMBER ) ; de.azapps.mirakel.model.Parcel . setDataPosition ( NUMBER ) ; final AccountMirakel de.azapps.mirakel.model.AccountMirakel = AccountMirakel . CREATOR . createFromParcel ( de.azapps.mirakel.model.Parcel ) ; assertThat ( de.azapps.mirakel.model.AccountMirakel ) . isEqualTo ( de.azapps.mirakel.model.AccountMirakel ) ; } 
@ Test public void void ( ) { MatrixCursor de.azapps.mirakel.model.MatrixCursor = new MatrixCursor ( new java.lang.String [] { ModelBase . ID , ModelBase . NAME , SpecialList . WHERE_QUERY , SpecialList . ACTIVE , SpecialList . DEFAULT_LIST , SpecialList . DEFAULT_DUE , SpecialList . SORT_BY_FIELD , DatabaseHelper . SYNC_STATE_FIELD , SpecialList . COLOR , SpecialList . LFT , SpecialList . RGT , SpecialList . ICON_PATH , DatabaseHelper . CREATED_AT , DatabaseHelper . UPDATED_AT , ListMirakel . ACCOUNT_ID , ListMirakel . IS_SPECIAL } ) ; final int int = RandomHelper . getRandomint ( ) ; de.azapps.mirakel.model.MatrixCursor . addRow ( new java.lang.Object [] { int , RandomHelper . getRandomString ( ) , STRING , RandomHelper . getRandomboolean ( ) ? NUMBER : NUMBER , RandomHelper . getRandomint ( ) , RandomHelper . getRandomOptional_Integer ( ) . orNull ( ) , RandomHelper . getRandomSORT_BY ( ) . getShort ( ) , RandomHelper . getRandomSYNC_STATE ( ) . toInt ( ) , RandomHelper . getRandomint ( ) , RandomHelper . getRandomint ( ) , RandomHelper . getRandomint ( ) , RandomHelper . getRandomOptional_Uri ( ) . orNull ( ) , RandomHelper . getRandomDateTime ( ) . getMillis ( ) , RandomHelper . getRandomDateTime ( ) . getMillis ( ) , RandomHelper . getRandomAccountMirakel ( ) . getId ( ) , NUMBER } ) ; de.azapps.mirakel.model.MatrixCursor . moveToFirst ( ) ; SpecialList de.azapps.mirakel.model.SpecialList = new SpecialList ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.MatrixCursor ) ) ; final Parcel de.azapps.mirakel.model.Parcel = Parcel . obtain ( ) ; de.azapps.mirakel.model.SpecialList . writeToParcel ( de.azapps.mirakel.model.Parcel , NUMBER ) ; de.azapps.mirakel.model.Parcel . setDataPosition ( NUMBER ) ; final SpecialList de.azapps.mirakel.model.SpecialList = SpecialList . CREATOR . createFromParcel ( de.azapps.mirakel.model.Parcel ) ; assertThat ( de.azapps.mirakel.model.SpecialList ) . isEqualTo ( de.azapps.mirakel.model.SpecialList ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . EQ , NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . or ( ModelBase . ID , Operation . EQ , NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . EQ , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . GE , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . LE , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . GT , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . LT , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . LIKE , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . IN , NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
private static void void ( final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , final Operation de.azapps.mirakel.model.query_builder.Operation , final java.lang.String java.lang.String ) { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , de.azapps.mirakel.model.query_builder.Operation , NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + ' ' + java.lang.String + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . NOT_EQ , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . NOT_GE , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . NOT_LE , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . NOT_GT , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . NOT_LT , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; void ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Operation . NOT_LIKE , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . NOT_IN , NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( STRING + ModelBase . ID + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
private static void void ( final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , final Operation de.azapps.mirakel.model.query_builder.Operation , final java.lang.String java.lang.String ) { de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , de.azapps.mirakel.model.query_builder.Operation , NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( STRING + ModelBase . ID + ' ' + java.lang.String + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . EQ , NUMBER ) . and ( ModelBase . NAME , Operation . EQ , STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING + ModelBase . NAME + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . EQ , NUMBER ) . or ( ModelBase . NAME , Operation . EQ , STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING + ModelBase . NAME + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . EQ , NUMBER ) . or ( ModelBase . NAME , Operation . EQ , STRING ) ; final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( Task . DONE , Operation . EQ , false ) . and ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( Task . DONE + STRING + ModelBase . ID + STRING + ModelBase . NAME + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING , STRING , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . EQ , NUMBER ) . or ( ModelBase . NAME , Operation . EQ , STRING ) ; final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . or ( Task . DONE , Operation . EQ , false ) . or ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( Task . DONE + STRING + ModelBase . ID + STRING + ModelBase . NAME + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING , STRING , STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) . select ( ModelBase . ID ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . IN , de.azapps.mirakel.model.query_builder.MirakelQueryBuilder , Task . URI ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING + ModelBase . ID + STRING + Task . TABLE + ')' ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . isEmpty ( ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( Task . DONE , Operation . EQ , true ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( Task . DONE + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( Task . DONE , Operation . EQ , false ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( Task . DONE + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . EQ , NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( Task . PROGRESS , Operation . EQ , NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( Task . PROGRESS + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . NAME , Operation . EQ , STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . NAME + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( STRING ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; final Task de.azapps.mirakel.model.query_builder.Task = RandomHelper . getRandomTask ( ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . EQ , de.azapps.mirakel.model.query_builder.Task ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactly ( java.lang.String . java.lang.String ( de.azapps.mirakel.model.query_builder.Task . getId ( ) ) ) ; } 
@ Test public void void ( ) { final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = java.util.Arrays . java.util.List<java.lang.Integer> ( NUMBER , NUMBER , NUMBER , NUMBER ) ; final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . ID , Operation . IN , java.util.List<java.lang.Integer> ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . ID + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( java.util.List<java.lang.Integer> . int ( ) ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactlyElementsIn ( Collections2 . transform ( java.util.List<java.lang.Integer> , new Function < java.lang.Integer , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return java.lang.String . java.lang.String ( java.lang.Integer ) ; } } ) ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.Integer java.lang.Integer ) { return java.lang.String . java.lang.String ( java.lang.Integer ) ; } 
@ Test public void void ( ) { final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING ) ; final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ModelBase . NAME , Operation . IN , java.util.List<java.lang.String> ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelection ( ) ) . isEqualTo ( ModelBase . NAME + STRING ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . hasSize ( java.util.List<java.lang.String> . int ( ) ) ; assertThat ( de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getSelectionArguments ( ) ) . containsExactlyElementsIn ( java.util.List<java.lang.String> ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; final Optional < Task > de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Task> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . get ( Task .class ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Task> ) . isPresent ( ) ; final Cursor de.azapps.mirakel.model.query_builder.Cursor = RuntimeEnvironment . application . getContentResolver ( ) . query ( Task . URI , Task . allColumns , null , null , null ) ; assertThat ( de.azapps.mirakel.model.query_builder.Cursor . moveToFirst ( ) ) . isTrue ( ) ; Task de.azapps.mirakel.model.query_builder.Task = new Task ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Task> . get ( ) ) . isEqualTo ( de.azapps.mirakel.model.query_builder.Task ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; Optional < AccountMirakel > de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.AccountMirakel> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . get ( AccountMirakel .class ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.AccountMirakel> ) . isPresent ( ) ; Cursor de.azapps.mirakel.model.query_builder.Cursor = RuntimeEnvironment . application . getContentResolver ( ) . query ( AccountMirakel . URI , AccountMirakel . allColumns , null , null , null ) ; assertThat ( de.azapps.mirakel.model.query_builder.Cursor . moveToFirst ( ) ) . isTrue ( ) ; AccountMirakel de.azapps.mirakel.model.query_builder.AccountMirakel = new AccountMirakel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.AccountMirakel> . get ( ) ) . isEqualTo ( de.azapps.mirakel.model.query_builder.AccountMirakel ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; Optional < FileMirakel > de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.FileMirakel> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . get ( FileMirakel .class ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.FileMirakel> ) . isPresent ( ) ; Cursor de.azapps.mirakel.model.query_builder.Cursor = RuntimeEnvironment . application . getContentResolver ( ) . query ( FileMirakel . URI , FileMirakel . allColumns , null , null , null ) ; assertThat ( de.azapps.mirakel.model.query_builder.Cursor . moveToFirst ( ) ) . isTrue ( ) ; FileMirakel de.azapps.mirakel.model.query_builder.FileMirakel = new FileMirakel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.FileMirakel> . get ( ) ) . isEqualTo ( de.azapps.mirakel.model.query_builder.FileMirakel ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; Optional < Recurring > de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Recurring> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . get ( Recurring .class ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Recurring> ) . isPresent ( ) ; Cursor de.azapps.mirakel.model.query_builder.Cursor = RuntimeEnvironment . application . getContentResolver ( ) . query ( Recurring . URI , Recurring . allColumns , null , null , null ) ; assertThat ( de.azapps.mirakel.model.query_builder.Cursor . moveToFirst ( ) ) . isTrue ( ) ; Recurring de.azapps.mirakel.model.query_builder.Recurring = new Recurring ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Recurring> . get ( ) ) . isEqualTo ( de.azapps.mirakel.model.query_builder.Recurring ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; Optional < Semantic > de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Semantic> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . get ( Semantic .class ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Semantic> ) . isPresent ( ) ; Cursor de.azapps.mirakel.model.query_builder.Cursor = RuntimeEnvironment . application . getContentResolver ( ) . query ( Semantic . URI , Semantic . allColumns , null , null , null ) ; assertThat ( de.azapps.mirakel.model.query_builder.Cursor . moveToFirst ( ) ) . isTrue ( ) ; Semantic de.azapps.mirakel.model.query_builder.Semantic = new Semantic ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.Semantic> . get ( ) ) . isEqualTo ( de.azapps.mirakel.model.query_builder.Semantic ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; Optional < ListMirakel > de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.ListMirakel> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . get ( ListMirakel .class ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.ListMirakel> ) . isPresent ( ) ; Cursor de.azapps.mirakel.model.query_builder.Cursor = RuntimeEnvironment . application . getContentResolver ( ) . query ( ListMirakel . URI , ListMirakel . allColumns , null , null , null ) ; assertThat ( de.azapps.mirakel.model.query_builder.Cursor . moveToFirst ( ) ) . isTrue ( ) ; ListMirakel de.azapps.mirakel.model.query_builder.ListMirakel = new ListMirakel ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.ListMirakel> . get ( ) ) . isEqualTo ( de.azapps.mirakel.model.query_builder.ListMirakel ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . and ( ListMirakel . IS_SPECIAL , Operation . EQ , true ) ; final Optional < SpecialList > de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.SpecialList> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . get ( SpecialList .class ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.SpecialList> ) . isPresent ( ) ; Cursor de.azapps.mirakel.model.query_builder.Cursor = RuntimeEnvironment . application . getContentResolver ( ) . query ( SpecialList . URI , SpecialList . allColumns , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.SpecialList> . get ( ) . getId ( ) ) } , null ) ; assertThat ( de.azapps.mirakel.model.query_builder.Cursor . moveToFirst ( ) ) . isTrue ( ) ; final SpecialList de.azapps.mirakel.model.query_builder.SpecialList = new SpecialList ( CursorGetter . unsafeGetter ( de.azapps.mirakel.model.query_builder.Cursor ) ) ; de.azapps.mirakel.model.query_builder.Cursor . close ( ) ; assertThat ( de.azapps.mirakel.model.query_builder.Optional<de.azapps.mirakel.model.query_builder.SpecialList> . get ( ) ) . isEqualTo ( de.azapps.mirakel.model.query_builder.SpecialList ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; java.util.List<de.azapps.mirakel.model.query_builder.Task> < Task > java.util.List<de.azapps.mirakel.model.query_builder.Task> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getList ( Task .class ) ; java.util.List<de.azapps.mirakel.model.query_builder.Task> < Task > java.util.List<de.azapps.mirakel.model.query_builder.Task> = new Cursor2List <> ( new CursorWrapper . CursorWrapper < Task > ( ) { @ Override public Task convert ( @ NonNull CursorGetter getter ) { return new Task ( getter ) ; } } ) . convert ( CursorGetter . unsafeGetter ( RuntimeEnvironment . application . getContentResolver ( ) . query ( Task . URI , Task . allColumns , null , null , null ) ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.Task> ) . hasSize ( java.util.List<de.azapps.mirakel.model.query_builder.Task> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.Task> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.query_builder.Task> ) ; } 
@ Override public Task convert ( @ NonNull CursorGetter getter ) { return new Task ( getter ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; final java.util.List<de.azapps.mirakel.model.query_builder.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.query_builder.AccountMirakel> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getList ( AccountMirakel .class ) ; final java.util.List<de.azapps.mirakel.model.query_builder.AccountMirakel> < AccountMirakel > java.util.List<de.azapps.mirakel.model.query_builder.AccountMirakel> = new Cursor2List <> ( new CursorWrapper . CursorWrapper < AccountMirakel > ( ) { @ Override public AccountMirakel convert ( @ NonNull CursorGetter getter ) { return new AccountMirakel ( getter ) ; } } ) . convert ( CursorGetter . unsafeGetter ( RuntimeEnvironment . application . getContentResolver ( ) . query ( AccountMirakel . URI , AccountMirakel . allColumns , null , null , null ) ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.AccountMirakel> ) . hasSize ( java.util.List<de.azapps.mirakel.model.query_builder.AccountMirakel> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.AccountMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.query_builder.AccountMirakel> ) ; } 
@ Override public AccountMirakel convert ( @ NonNull CursorGetter getter ) { return new AccountMirakel ( getter ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; java.util.List<de.azapps.mirakel.model.query_builder.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.query_builder.FileMirakel> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getList ( FileMirakel .class ) ; java.util.List<de.azapps.mirakel.model.query_builder.FileMirakel> < FileMirakel > java.util.List<de.azapps.mirakel.model.query_builder.FileMirakel> = new Cursor2List <> ( new CursorWrapper . CursorWrapper < FileMirakel > ( ) { @ Override public FileMirakel convert ( @ NonNull CursorGetter getter ) { return new FileMirakel ( getter ) ; } } ) . convert ( CursorGetter . unsafeGetter ( RuntimeEnvironment . application . getContentResolver ( ) . query ( FileMirakel . URI , FileMirakel . allColumns , null , null , null ) ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.FileMirakel> ) . hasSize ( java.util.List<de.azapps.mirakel.model.query_builder.FileMirakel> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.FileMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.query_builder.FileMirakel> ) ; } 
@ Override public FileMirakel convert ( @ NonNull CursorGetter getter ) { return new FileMirakel ( getter ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; java.util.List<de.azapps.mirakel.model.query_builder.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.query_builder.Recurring> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getList ( Recurring .class ) ; java.util.List<de.azapps.mirakel.model.query_builder.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.query_builder.Recurring> = new Cursor2List <> ( new CursorWrapper . CursorWrapper < Recurring > ( ) { @ Override public Recurring convert ( @ NonNull CursorGetter getter ) { return new Recurring ( getter ) ; } } ) . convert ( CursorGetter . unsafeGetter ( RuntimeEnvironment . application . getContentResolver ( ) . query ( Recurring . URI , Recurring . allColumns , null , null , null ) ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.Recurring> ) . hasSize ( java.util.List<de.azapps.mirakel.model.query_builder.Recurring> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.Recurring> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.query_builder.Recurring> ) ; } 
@ Override public Recurring convert ( @ NonNull CursorGetter getter ) { return new Recurring ( getter ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; java.util.List<de.azapps.mirakel.model.query_builder.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.query_builder.Semantic> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getList ( Semantic .class ) ; java.util.List<de.azapps.mirakel.model.query_builder.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.query_builder.Semantic> = new Cursor2List <> ( new CursorWrapper . CursorWrapper < Semantic > ( ) { @ Override public Semantic convert ( @ NonNull CursorGetter getter ) { return new Semantic ( getter ) ; } } ) . convert ( CursorGetter . unsafeGetter ( RuntimeEnvironment . application . getContentResolver ( ) . query ( Semantic . URI , Semantic . allColumns , null , null , null ) ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.Semantic> ) . hasSize ( java.util.List<de.azapps.mirakel.model.query_builder.Semantic> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.Semantic> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.query_builder.Semantic> ) ; } 
@ Override public Semantic convert ( @ NonNull CursorGetter getter ) { return new Semantic ( getter ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; java.util.List<de.azapps.mirakel.model.query_builder.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.query_builder.ListMirakel> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getList ( ListMirakel .class ) ; java.util.List<de.azapps.mirakel.model.query_builder.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.model.query_builder.ListMirakel> = new Cursor2List <> ( new CursorWrapper . CursorWrapper < ListMirakel > ( ) { @ Override public ListMirakel convert ( @ NonNull CursorGetter getter ) { return new ListMirakel ( getter ) ; } } ) . convert ( CursorGetter . unsafeGetter ( RuntimeEnvironment . application . getContentResolver ( ) . query ( ListMirakel . URI , ListMirakel . allColumns , null , null , null ) ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.ListMirakel> ) . hasSize ( java.util.List<de.azapps.mirakel.model.query_builder.ListMirakel> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.ListMirakel> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.query_builder.ListMirakel> ) ; } 
@ Override public ListMirakel convert ( @ NonNull CursorGetter getter ) { return new ListMirakel ( getter ) ; } 
@ Test public void void ( ) { final MirakelQueryBuilder de.azapps.mirakel.model.query_builder.MirakelQueryBuilder = new MirakelQueryBuilder ( RuntimeEnvironment . application ) ; java.util.List<de.azapps.mirakel.model.query_builder.SpecialList> < SpecialList > java.util.List<de.azapps.mirakel.model.query_builder.SpecialList> = de.azapps.mirakel.model.query_builder.MirakelQueryBuilder . getList ( SpecialList .class ) ; java.util.List<de.azapps.mirakel.model.query_builder.SpecialList> < SpecialList > java.util.List<de.azapps.mirakel.model.query_builder.SpecialList> = new Cursor2List <> ( new CursorWrapper . CursorWrapper < SpecialList > ( ) { @ Override public SpecialList convert ( @ NonNull CursorGetter getter ) { return new SpecialList ( getter ) ; } } ) . convert ( CursorGetter . unsafeGetter ( RuntimeEnvironment . application . getContentResolver ( ) . query ( SpecialList . URI , SpecialList . allColumns , null , null , null ) ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.SpecialList> ) . hasSize ( java.util.List<de.azapps.mirakel.model.query_builder.SpecialList> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.query_builder.SpecialList> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.query_builder.SpecialList> ) ; } 
@ Override public SpecialList convert ( @ NonNull CursorGetter getter ) { return new SpecialList ( getter ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final java.lang.String java.lang.String = RandomHelper . getRandomString ( ) ; de.azapps.mirakel.model.recurring.Recurring . setLabel ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring . getLabel ( ) ) . isEqualTo ( java.lang.String ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; de.azapps.mirakel.model.recurring.Recurring . setForDue ( boolean ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring . isForDue ( ) ) . isEqualTo ( boolean ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final Period de.azapps.mirakel.model.recurring.Period = RandomHelper . getRandomPeriod ( ) ; de.azapps.mirakel.model.recurring.Recurring . setInterval ( de.azapps.mirakel.model.recurring.Period ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring . getInterval ( ) ) . isEqualTo ( de.azapps.mirakel.model.recurring.Period ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> = RandomHelper . getRandomOptional_DateTime ( ) ; de.azapps.mirakel.model.recurring.Recurring . setStartDate ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring . getStartDate ( ) ) . isEqualTo ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final Optional < DateTime > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> = RandomHelper . getRandomOptional_DateTime ( ) ; de.azapps.mirakel.model.recurring.Recurring . setEndDate ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring . getEndDate ( ) ) . isEqualTo ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.DateTime> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; de.azapps.mirakel.model.recurring.Recurring . setTemporary ( boolean ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring . isTemporary ( ) ) . isEqualTo ( boolean ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final SparseBooleanArray de.azapps.mirakel.model.recurring.SparseBooleanArray = RandomHelper . getRandomSparseBooleanArray ( ) ; de.azapps.mirakel.model.recurring.Recurring . setWeekdays ( de.azapps.mirakel.model.recurring.SparseBooleanArray ) ; java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = de.azapps.mirakel.model.recurring.Recurring . getWeekdays ( ) ; for ( int int = NUMBER ; int < de.azapps.mirakel.model.recurring.SparseBooleanArray . size ( ) ; int ++ ) { if ( de.azapps.mirakel.model.recurring.SparseBooleanArray . get ( int ) ) { assertThat ( java.util.List<java.lang.Integer> . boolean ( int ) ) . isTrue ( ) ; } else { assertThat ( java.util.List<java.lang.Integer> . boolean ( int ) ) . isFalse ( ) ; } } } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final Optional < java.lang.Long > de.azapps.mirakel.model.recurring.Optional<java.lang.Long> = RandomHelper . getRandomOptional_Long ( ) ; de.azapps.mirakel.model.recurring.Recurring . setDerivedFrom ( de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring . getDerivedFrom ( ) ) . isEqualTo ( de.azapps.mirakel.model.recurring.Optional<java.lang.Long> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; de.azapps.mirakel.model.recurring.Recurring . setExact ( boolean ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring . isExact ( ) ) . isEqualTo ( boolean ) ; } 
@ Before public void void ( ) java.lang.Exception { super. setUp ( ) ; de.azapps.mirakel.model.recurring.SQLiteDatabase = DatabaseHelper . getDatabaseHelper ( RuntimeEnvironment . application ) . getWritableDatabase ( ) ; Recurring . newRecurring ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPeriod ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomSparseBooleanArray ( ) ) ; } 
private static int int ( ) { final Cursor de.azapps.mirakel.model.recurring.Cursor = de.azapps.mirakel.model.recurring.SQLiteDatabase . rawQuery ( STRING , null ) ; de.azapps.mirakel.model.recurring.Cursor . moveToFirst ( ) ; return de.azapps.mirakel.model.recurring.Cursor . getInt ( NUMBER ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; Recurring . newRecurring ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPeriod ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomSparseBooleanArray ( ) ) ; final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = Recurring . newRecurring ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPeriod ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomSparseBooleanArray ( ) ) ; java.util.List<de.azapps.mirakel.model.recurring.Recurring> . add ( de.azapps.mirakel.model.recurring.Recurring ) ; final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) . hasSize ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; } 
@ Test public void void ( ) { final Recurring de.azapps.mirakel.model.recurring.Recurring = Recurring . newRecurring ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPeriod ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomSparseBooleanArray ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Recurring ) . isNotNull ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) . hasSize ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setLabel ( RandomHelper . getRandomString ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setForDue ( RandomHelper . getRandomboolean ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setInterval ( RandomHelper . getRandomPeriod ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setStartDate ( RandomHelper . getRandomOptional_DateTime ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setEndDate ( RandomHelper . getRandomOptional_DateTime ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setTemporary ( RandomHelper . getRandomboolean ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setWeekdays ( RandomHelper . getRandomSparseBooleanArray ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setDerivedFrom ( RandomHelper . getRandomOptional_Long ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; de.azapps.mirakel.model.recurring.Recurring . setExact ( RandomHelper . getRandomboolean ( ) ) ; de.azapps.mirakel.model.recurring.Recurring . save ( ) ; final Optional < Recurring > de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> = Recurring . get ( de.azapps.mirakel.model.recurring.Recurring . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.recurring.Optional<de.azapps.mirakel.model.recurring.Recurring> ) . hasValue ( de.azapps.mirakel.model.recurring.Recurring ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; final Recurring de.azapps.mirakel.model.recurring.Recurring = java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) ; final long long = de.azapps.mirakel.model.recurring.Recurring . getId ( ) ; de.azapps.mirakel.model.recurring.Recurring . destroy ( ) ; assertThat ( Recurring . get ( long ) ) . isAbsent ( ) ; final java.util.List<de.azapps.mirakel.model.recurring.Recurring> < Recurring > java.util.List<de.azapps.mirakel.model.recurring.Recurring> = Recurring . all ( ) ; java.util.List<de.azapps.mirakel.model.recurring.Recurring> . remove ( int ) ; for ( int int = NUMBER ; int < java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ; int ++ ) { java.util.List<de.azapps.mirakel.model.recurring.Recurring> . set ( int , Recurring . get ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . get ( int ) . getId ( ) ) . orNull ( ) ) ; } assertThat ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) . hasSize ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.recurring.Recurring> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) ; final java.lang.String java.lang.String = RandomHelper . getRandomString ( ) ; de.azapps.mirakel.model.semantic.Semantic . setCondition ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.semantic.Semantic . getCondition ( ) ) . isEqualTo ( java.lang.String ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) ; final Optional < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = RandomHelper . getRandomint ( NUMBER ) > NUMBER ? Optional .< java.lang.Integer > absent ( ) : of ( RandomHelper . getRandomPriority ( ) ) ; de.azapps.mirakel.model.semantic.Semantic . setPriority ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) ; assertThat ( de.azapps.mirakel.model.semantic.Semantic . getPriority ( ) ) . isEqualTo ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) ; final Optional < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = RandomHelper . getRandomOptional_Integer ( ) ; de.azapps.mirakel.model.semantic.Semantic . setDue ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) ; assertThat ( de.azapps.mirakel.model.semantic.Semantic . getDue ( ) ) . isEqualTo ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) ; final Optional < ListMirakel > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> = RandomHelper . getRandomOptional_ListMirakel ( ) ; de.azapps.mirakel.model.semantic.Semantic . setList ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> ) ; assertThat ( de.azapps.mirakel.model.semantic.Semantic . getList ( ) ) . isEqualTo ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.ListMirakel> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) ; final Optional < java.lang.Integer > de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> = RandomHelper . getRandomOptional_Integer ( ) ; de.azapps.mirakel.model.semantic.Semantic . setWeekday ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) ; assertThat ( de.azapps.mirakel.model.semantic.Semantic . getWeekday ( ) ) . isEqualTo ( de.azapps.mirakel.model.semantic.Optional<java.lang.Integer> ) ; } 
@ Before public void void ( ) java.lang.Exception { super. setUp ( ) ; de.azapps.mirakel.model.semantic.SQLiteDatabase = DatabaseHelper . getDatabaseHelper ( RuntimeEnvironment . application ) . getWritableDatabase ( ) ; Semantic . newSemantic ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPriority ( ) , RandomHelper . getRandomInteger ( ) , RandomHelper . getRandomOptional_ListMirakel ( ) , RandomHelper . getRandomInteger ( ) ) ; } 
private static int int ( ) { final Cursor de.azapps.mirakel.model.semantic.Cursor = de.azapps.mirakel.model.semantic.SQLiteDatabase . rawQuery ( STRING , null ) ; de.azapps.mirakel.model.semantic.Cursor . moveToFirst ( ) ; return de.azapps.mirakel.model.semantic.Cursor . getInt ( NUMBER ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; Semantic . newSemantic ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPriority ( ) , RandomHelper . getRandomInteger ( ) , RandomHelper . getRandomOptional_ListMirakel ( ) , RandomHelper . getRandomInteger ( ) ) ; final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = Semantic . newSemantic ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPriority ( ) , RandomHelper . getRandomInteger ( ) , RandomHelper . getRandomOptional_ListMirakel ( ) , RandomHelper . getRandomInteger ( ) ) ; java.util.List<de.azapps.mirakel.model.semantic.Semantic> . add ( de.azapps.mirakel.model.semantic.Semantic ) ; final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) . hasSize ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) ; } 
@ Test public void void ( ) { final Semantic de.azapps.mirakel.model.semantic.Semantic = Semantic . newSemantic ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomPriority ( ) , RandomHelper . getRandomInteger ( ) , RandomHelper . getRandomOptional_ListMirakel ( ) , RandomHelper . getRandomInteger ( ) ) ; assertThat ( de.azapps.mirakel.model.semantic.Semantic ) . isNotNull ( ) ; final long long = de.azapps.mirakel.model.semantic.Semantic . getId ( ) ; final Optional < Semantic > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> = Semantic . get ( long ) ; assertThat ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ) . hasValue ( de.azapps.mirakel.model.semantic.Semantic ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = java.util.List<de.azapps.mirakel.model.semantic.Semantic> . get ( int ) ; de.azapps.mirakel.model.semantic.Semantic . save ( ) ; final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) . hasSize ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = java.util.List<de.azapps.mirakel.model.semantic.Semantic> . get ( int ) ; de.azapps.mirakel.model.semantic.Semantic . setCondition ( RandomHelper . getRandomString ( ) ) ; de.azapps.mirakel.model.semantic.Semantic . save ( ) ; final Optional < Semantic > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> = Semantic . get ( de.azapps.mirakel.model.semantic.Semantic . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ) . hasValue ( de.azapps.mirakel.model.semantic.Semantic ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = java.util.List<de.azapps.mirakel.model.semantic.Semantic> . get ( int ) ; de.azapps.mirakel.model.semantic.Semantic . setPriority ( RandomHelper . getRandomint ( NUMBER ) > NUMBER ? Optional .< java.lang.Integer > absent ( ) : of ( RandomHelper . getRandomPriority ( ) ) ) ; de.azapps.mirakel.model.semantic.Semantic . save ( ) ; final Optional < Semantic > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> = Semantic . get ( de.azapps.mirakel.model.semantic.Semantic . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ) . hasValue ( de.azapps.mirakel.model.semantic.Semantic ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = java.util.List<de.azapps.mirakel.model.semantic.Semantic> . get ( int ) ; de.azapps.mirakel.model.semantic.Semantic . setDue ( RandomHelper . getRandomOptional_Integer ( ) ) ; de.azapps.mirakel.model.semantic.Semantic . save ( ) ; final Optional < Semantic > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> = Semantic . get ( de.azapps.mirakel.model.semantic.Semantic . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ) . hasValue ( de.azapps.mirakel.model.semantic.Semantic ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = java.util.List<de.azapps.mirakel.model.semantic.Semantic> . get ( int ) ; de.azapps.mirakel.model.semantic.Semantic . setList ( RandomHelper . getRandomOptional_ListMirakel ( ) ) ; de.azapps.mirakel.model.semantic.Semantic . save ( ) ; final Optional < Semantic > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> = Semantic . get ( de.azapps.mirakel.model.semantic.Semantic . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ) . hasValue ( de.azapps.mirakel.model.semantic.Semantic ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = java.util.List<de.azapps.mirakel.model.semantic.Semantic> . get ( int ) ; de.azapps.mirakel.model.semantic.Semantic . setWeekday ( RandomHelper . getRandomOptional_Integer ( ) ) ; de.azapps.mirakel.model.semantic.Semantic . save ( ) ; final Optional < Semantic > de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> = Semantic . get ( de.azapps.mirakel.model.semantic.Semantic . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.semantic.Optional<de.azapps.mirakel.model.semantic.Semantic> ) . hasValue ( de.azapps.mirakel.model.semantic.Semantic ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; final Semantic de.azapps.mirakel.model.semantic.Semantic = java.util.List<de.azapps.mirakel.model.semantic.Semantic> . get ( int ) ; final long long = de.azapps.mirakel.model.semantic.Semantic . getId ( ) ; de.azapps.mirakel.model.semantic.Semantic . destroy ( ) ; assertThat ( Semantic . get ( long ) ) . isAbsent ( ) ; final java.util.List<de.azapps.mirakel.model.semantic.Semantic> < Semantic > java.util.List<de.azapps.mirakel.model.semantic.Semantic> = Semantic . all ( ) ; java.util.List<de.azapps.mirakel.model.semantic.Semantic> . remove ( int ) ; for ( int int = NUMBER ; int < java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ; int ++ ) { java.util.List<de.azapps.mirakel.model.semantic.Semantic> . set ( int , Semantic . get ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . get ( int ) . getId ( ) ) . orNull ( ) ) ; } assertThat ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) . hasSize ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.semantic.Semantic> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; final Tag de.azapps.mirakel.model.tags.Tag = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) ; final int int = RandomHelper . getRandomint ( ) ; de.azapps.mirakel.model.tags.Tag . setBackgroundColor ( int ) ; assertThat ( de.azapps.mirakel.model.tags.Tag . getBackgroundColor ( ) ) . isEqualTo ( int ) ; } 
@ Before public void void ( ) java.lang.Exception { super. setUp ( ) ; de.azapps.mirakel.model.tags.SQLiteDatabase = DatabaseHelper . getDatabaseHelper ( RuntimeEnvironment . application ) . getWritableDatabase ( ) ; Tag . newTag ( RandomHelper . getRandomString ( ) ) ; Tag . newTag ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomint ( ) ) ; } 
private static int int ( ) { final Cursor de.azapps.mirakel.model.tags.Cursor = de.azapps.mirakel.model.tags.SQLiteDatabase . rawQuery ( STRING , null ) ; de.azapps.mirakel.model.tags.Cursor . moveToFirst ( ) ; return de.azapps.mirakel.model.tags.Cursor . getInt ( NUMBER ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; Tag . newTag ( RandomHelper . getRandomString ( ) ) ; final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; final Tag de.azapps.mirakel.model.tags.Tag = Tag . newTag ( RandomHelper . getRandomString ( ) ) ; java.util.List<de.azapps.mirakel.model.tags.Tag> . add ( de.azapps.mirakel.model.tags.Tag ) ; final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) . hasSize ( java.util.List<de.azapps.mirakel.model.tags.Tag> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) ; } 
@ Test public void void ( ) { final Tag de.azapps.mirakel.model.tags.Tag = Tag . newTag ( RandomHelper . getRandomString ( ) ) ; assertThat ( de.azapps.mirakel.model.tags.Tag ) . isNotNull ( ) ; final Optional < Tag > de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> = Tag . get ( de.azapps.mirakel.model.tags.Tag . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> ) . hasValue ( de.azapps.mirakel.model.tags.Tag ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; Tag . newTag ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomint ( ) ) ; final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; final Tag de.azapps.mirakel.model.tags.Tag = Tag . newTag ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomint ( ) ) ; java.util.List<de.azapps.mirakel.model.tags.Tag> . add ( de.azapps.mirakel.model.tags.Tag ) ; final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) . hasSize ( java.util.List<de.azapps.mirakel.model.tags.Tag> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) ; } 
@ Test public void void ( ) { final Tag de.azapps.mirakel.model.tags.Tag = Tag . newTag ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomint ( ) ) ; assertThat ( de.azapps.mirakel.model.tags.Tag ) . isNotNull ( ) ; final Optional < Tag > de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> = Tag . get ( de.azapps.mirakel.model.tags.Tag . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> ) . hasValue ( de.azapps.mirakel.model.tags.Tag ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.tags.Tag> . size ( ) ) ; final Tag de.azapps.mirakel.model.tags.Tag = java.util.List<de.azapps.mirakel.model.tags.Tag> . get ( int ) ; de.azapps.mirakel.model.tags.Tag . save ( ) ; final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) . hasSize ( java.util.List<de.azapps.mirakel.model.tags.Tag> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.tags.Tag> . size ( ) ) ; final Tag de.azapps.mirakel.model.tags.Tag = java.util.List<de.azapps.mirakel.model.tags.Tag> . get ( int ) ; de.azapps.mirakel.model.tags.Tag . setBackgroundColor ( RandomHelper . getRandomint ( ) ) ; de.azapps.mirakel.model.tags.Tag . save ( ) ; final Optional < Tag > de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> = Tag . get ( de.azapps.mirakel.model.tags.Tag . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.tags.Optional<de.azapps.mirakel.model.tags.Tag> ) . hasValue ( de.azapps.mirakel.model.tags.Tag ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.tags.Tag> . size ( ) ) ; final Tag de.azapps.mirakel.model.tags.Tag = java.util.List<de.azapps.mirakel.model.tags.Tag> . get ( int ) ; final long long = de.azapps.mirakel.model.tags.Tag . getId ( ) ; de.azapps.mirakel.model.tags.Tag . destroy ( ) ; assertThat ( Tag . get ( long ) . isPresent ( ) ) . isFalse ( ) ; final java.util.List<de.azapps.mirakel.model.tags.Tag> < Tag > java.util.List<de.azapps.mirakel.model.tags.Tag> = Tag . all ( ) ; java.util.List<de.azapps.mirakel.model.tags.Tag> . remove ( int ) ; for ( int int = NUMBER ; int < java.util.List<de.azapps.mirakel.model.tags.Tag> . size ( ) ; int ++ ) { java.util.List<de.azapps.mirakel.model.tags.Tag> . set ( int , Tag . get ( java.util.List<de.azapps.mirakel.model.tags.Tag> . get ( int ) . getId ( ) ) . orNull ( ) ) ; } assertThat ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) . hasSize ( java.util.List<de.azapps.mirakel.model.tags.Tag> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.tags.Tag> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final java.lang.String java.lang.String = RandomHelper . getRandomString ( ) ; de.azapps.mirakel.model.task.Task . setContent ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.task.Task . getContent ( ) ) . isEqualTo ( java.lang.String ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> = RandomHelper . getRandomOptional_DateTime ( ) ; de.azapps.mirakel.model.task.Task . setDue ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; assertThat ( de.azapps.mirakel.model.task.Task . getDue ( ) ) . isEqualTo ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final ListMirakel de.azapps.mirakel.model.task.ListMirakel = RandomHelper . getRandomListMirakel ( ) ; de.azapps.mirakel.model.task.Task . setList ( de.azapps.mirakel.model.task.ListMirakel ) ; assertThat ( de.azapps.mirakel.model.task.Task . getList ( ) ) . isEqualTo ( de.azapps.mirakel.model.task.ListMirakel ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final java.lang.String java.lang.String = RandomHelper . getRandomString ( ) ; de.azapps.mirakel.model.task.Task . setName ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.task.Task . getName ( ) ) . isEqualTo ( java.lang.String ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final int int = RandomHelper . getRandomPriority ( ) ; de.azapps.mirakel.model.task.Task . setPriority ( int ) ; assertThat ( de.azapps.mirakel.model.task.Task . getPriority ( ) ) . isEqualTo ( int ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final int int = RandomHelper . getRandomint ( ) ; de.azapps.mirakel.model.task.Task . setProgress ( int ) ; assertThat ( de.azapps.mirakel.model.task.Task . getProgress ( ) ) . isEqualTo ( int ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final Optional < Recurring > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> = RandomHelper . getRandomOptional_Recurring ( ) ; de.azapps.mirakel.model.task.Task . setRecurrence ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ) ; assertThat ( de.azapps.mirakel.model.task.Task . getRecurrence ( ) ) . isEqualTo ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; Optional < Recurring > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> = RandomHelper . getRandomOptional_Recurring ( ) ; long long = de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . isPresent ( ) ? de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . get ( ) . getId ( ) : - NUMBER ; de.azapps.mirakel.model.task.Task . setRecurringReminder ( long ) ; if ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . isPresent ( ) ) { assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> . get ( ) . getId ( ) ) . isEqualTo ( long ) ; } else { assertThat ( - NUMBER ) . isEqualTo ( long ) ; } } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final Optional < Recurring > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> = RandomHelper . getRandomOptional_Recurring ( ) ; de.azapps.mirakel.model.task.Task . setRecurringReminder ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ) ; assertThat ( de.azapps.mirakel.model.task.Task . getRecurringReminder ( ) ) . isEqualTo ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Recurring> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> = RandomHelper . getRandomOptional_DateTime ( ) ; de.azapps.mirakel.model.task.Task . setReminder ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; assertThat ( de.azapps.mirakel.model.task.Task . getReminder ( ) ) . isEqualTo ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final Optional < DateTime > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> = RandomHelper . getRandomOptional_DateTime ( ) ; de.azapps.mirakel.model.task.Task . setReminder ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; assertThat ( de.azapps.mirakel.model.task.Task . getReminder ( ) ) . isEqualTo ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.DateTime> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final SYNC_STATE de.azapps.mirakel.model.task.SYNC_STATE = RandomHelper . getRandomSYNC_STATE ( ) ; de.azapps.mirakel.model.task.Task . setSyncState ( de.azapps.mirakel.model.task.SYNC_STATE ) ; assertThat ( de.azapps.mirakel.model.task.Task . getSyncState ( ) ) . isEqualTo ( de.azapps.mirakel.model.task.SYNC_STATE ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final DateTime de.azapps.mirakel.model.task.DateTime = RandomHelper . getRandomDateTime ( ) ; de.azapps.mirakel.model.task.Task . setUpdatedAt ( de.azapps.mirakel.model.task.DateTime ) ; assertThat ( de.azapps.mirakel.model.task.Task . getUpdatedAt ( ) ) . isEqualTo ( de.azapps.mirakel.model.task.DateTime ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final java.lang.String java.lang.String = RandomHelper . getRandomString ( ) ; de.azapps.mirakel.model.task.Task . setUUID ( java.lang.String ) ; assertThat ( de.azapps.mirakel.model.task.Task . getUUID ( ) ) . isEqualTo ( java.lang.String ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = RandomHelper . getRandomElem ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; final boolean boolean = RandomHelper . getRandomboolean ( ) ; de.azapps.mirakel.model.task.Task . setIsStub ( boolean ) ; assertThat ( de.azapps.mirakel.model.task.Task . isStub ( ) ) . isEqualTo ( boolean ) ; } 
@ Before public void void ( ) java.lang.Exception { super. setUp ( ) ; de.azapps.mirakel.model.task.SQLiteDatabase = DatabaseHelper . getDatabaseHelper ( RuntimeEnvironment . application ) . getWritableDatabase ( ) ; Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) ) ; Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; } 
private static int int ( ) { final Cursor de.azapps.mirakel.model.task.Cursor = de.azapps.mirakel.model.task.SQLiteDatabase . rawQuery ( STRING , null ) ; de.azapps.mirakel.model.task.Cursor . moveToFirst ( ) ; return de.azapps.mirakel.model.task.Cursor . getInt ( NUMBER ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) ) ; final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) ) ; java.util.List<de.azapps.mirakel.model.task.Task> . add ( de.azapps.mirakel.model.task.Task ) ; final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . hasSize ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; } 
@ Test public void void ( ) { final Task de.azapps.mirakel.model.task.Task = Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Task ) . isNotNull ( ) ; final long long = de.azapps.mirakel.model.task.Task . getId ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( long ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; java.util.List<de.azapps.mirakel.model.task.Task> . add ( de.azapps.mirakel.model.task.Task ) ; final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . hasSize ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; } 
@ Test public void void ( ) { final Task de.azapps.mirakel.model.task.Task = Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Task ) . isNotNull ( ) ; final long long = de.azapps.mirakel.model.task.Task . getId ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( long ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final int int = int ( ) ; Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; final int int = int ( ) ; assertThat ( int ) . isEqualTo ( int + NUMBER ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final Task de.azapps.mirakel.model.task.Task = Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; java.util.List<de.azapps.mirakel.model.task.Task> . add ( de.azapps.mirakel.model.task.Task ) ; final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . hasSize ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; } 
@ Test public void void ( ) { final Task de.azapps.mirakel.model.task.Task = Task . newTask ( RandomHelper . getRandomString ( ) , RandomHelper . getRandomListMirakel ( ) , RandomHelper . getRandomString ( ) , RandomHelper . getRandomboolean ( ) , RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomPriority ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Task ) . isNotNull ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . hasSize ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setContent ( RandomHelper . getRandomString ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setDue ( RandomHelper . getRandomOptional_DateTime ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setList ( RandomHelper . getRandomListMirakel ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setName ( RandomHelper . getRandomString ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setPriority ( RandomHelper . getRandomPriority ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setProgress ( RandomHelper . getRandomint ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setRecurrence ( RandomHelper . getRandomOptional_Recurring ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setRecurringReminder ( RandomHelper . getRandomlong ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setRecurringReminder ( RandomHelper . getRandomOptional_Recurring ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setReminder ( RandomHelper . getRandomOptional_DateTime ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setReminder ( RandomHelper . getRandomOptional_DateTime ( ) , RandomHelper . getRandomboolean ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setSyncState ( RandomHelper . getRandomSYNC_STATE ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setUpdatedAt ( RandomHelper . getRandomDateTime ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setUUID ( RandomHelper . getRandomString ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; de.azapps.mirakel.model.task.Task . setIsStub ( RandomHelper . getRandomboolean ( ) ) ; de.azapps.mirakel.model.task.Task . save ( ) ; final Optional < Task > de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> = Task . get ( de.azapps.mirakel.model.task.Task . getId ( ) ) ; assertThat ( de.azapps.mirakel.model.task.Optional<de.azapps.mirakel.model.task.Task> ) . hasValue ( de.azapps.mirakel.model.task.Task ) ; } 
@ Test public void void ( ) { final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; final int int = new java.util.Random ( ) . int ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; final Task de.azapps.mirakel.model.task.Task = java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) ; final long long = de.azapps.mirakel.model.task.Task . getId ( ) ; de.azapps.mirakel.model.task.Task . destroy ( ) ; assertThat ( Task . get ( long ) ) . isAbsent ( ) ; final java.util.List<de.azapps.mirakel.model.task.Task> < Task > java.util.List<de.azapps.mirakel.model.task.Task> = Task . all ( ) ; java.util.List<de.azapps.mirakel.model.task.Task> . remove ( int ) ; for ( int int = NUMBER ; int < java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ; int ++ ) { java.util.List<de.azapps.mirakel.model.task.Task> . set ( int , Task . get ( java.util.List<de.azapps.mirakel.model.task.Task> . get ( int ) . getId ( ) ) . orNull ( ) ) ; } assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . hasSize ( java.util.List<de.azapps.mirakel.model.task.Task> . size ( ) ) ; assertThat ( java.util.List<de.azapps.mirakel.model.task.Task> ) . containsExactlyElementsIn ( java.util.List<de.azapps.mirakel.model.task.Task> ) ; } 
private void void ( java.lang.String java.lang.String , Recurring de.azapps.mirakel.tw_sync.Recurring ) { final JsonObject de.azapps.mirakel.tw_sync.JsonObject = new JsonObject ( ) ; TaskWarriorTaskSerializer . handleRecurrence ( de.azapps.mirakel.tw_sync.JsonObject , de.azapps.mirakel.tw_sync.Recurring ) ; java.lang.String java.lang.String = de.azapps.mirakel.tw_sync.JsonObject . get ( STRING ) . getAsString ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) . getInterval ( ) ) . isEqualTo ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) ; } 
private de.azapps.mirakel.tw_sync.Recurring de.azapps.mirakel.tw_sync.Recurring ( java.lang.String java.lang.String ) { final Recurring de.azapps.mirakel.tw_sync.Recurring ; try { de.azapps.mirakel.tw_sync.Recurring = new TaskWarriorRecurrence ( java.lang.String , Optional .< DateTime > absent ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.RuntimeException ( java.lang.Exception ) ; } return de.azapps.mirakel.tw_sync.Recurring ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getInterval ( ) ) . isEqualTo ( new Period ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) . normalizedStandard ( ) ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
@ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final Recurring de.azapps.mirakel.tw_sync.Recurring = de.azapps.mirakel.tw_sync.Recurring ( java.lang.String ) ; assertThat ( de.azapps.mirakel.tw_sync.Recurring . getWeekdays ( ) ) . containsExactly ( DateTimeConstants . MONDAY , DateTimeConstants . TUESDAY , DateTimeConstants . WEDNESDAY , DateTimeConstants . THURSDAY , DateTimeConstants . FRIDAY ) ; void ( java.lang.String , de.azapps.mirakel.tw_sync.Recurring ) ; } 
private boolean boolean ( final java.lang.String java.lang.String , final TaskWarriorTask de.azapps.mirakel.tw_sync.TaskWarriorTask ) { final JsonParser de.azapps.mirakel.tw_sync.JsonParser = new JsonParser ( ) ; final JsonObject de.azapps.mirakel.tw_sync.JsonObject = ( JsonObject ) de.azapps.mirakel.tw_sync.JsonParser . parse ( java.lang.String ) ; Task de.azapps.mirakel.tw_sync.Task = new Task ( ) ; de.azapps.mirakel.tw_sync.TaskWarriorTask . setToTask ( de.azapps.mirakel.tw_sync.Task ) ; final java.lang.String java.lang.String = new GsonBuilder ( ) . registerTypeAdapter ( Task .class , new TaskWarriorTaskSerializer ( RuntimeEnvironment . application ) ) . create ( ) . toJson ( de.azapps.mirakel.tw_sync.Task ) ; final JsonObject de.azapps.mirakel.tw_sync.JsonObject = ( JsonObject ) de.azapps.mirakel.tw_sync.JsonParser . parse ( java.lang.String ) ; return boolean ( de.azapps.mirakel.tw_sync.JsonObject , de.azapps.mirakel.tw_sync.JsonObject ) ; } 
private boolean boolean ( final JsonElement de.azapps.mirakel.tw_sync.JsonElement , final JsonElement de.azapps.mirakel.tw_sync.JsonElement ) { if ( de.azapps.mirakel.tw_sync.JsonElement == de.azapps.mirakel.tw_sync.JsonElement ) { return true ; } if ( de.azapps.mirakel.tw_sync.JsonElement . isJsonArray ( ) && ! de.azapps.mirakel.tw_sync.JsonElement . isJsonArray ( ) ) { fail ( STRING ) ; return false ; } if ( de.azapps.mirakel.tw_sync.JsonElement . isJsonNull ( ) && ! de.azapps.mirakel.tw_sync.JsonElement . isJsonNull ( ) ) { fail ( STRING ) ; return false ; } if ( de.azapps.mirakel.tw_sync.JsonElement . isJsonObject ( ) && ! de.azapps.mirakel.tw_sync.JsonElement . isJsonObject ( ) ) { fail ( STRING ) ; return false ; } if ( de.azapps.mirakel.tw_sync.JsonElement . isJsonPrimitive ( ) && ! de.azapps.mirakel.tw_sync.JsonElement . isJsonPrimitive ( ) ) { fail ( STRING ) ; return false ; } if ( de.azapps.mirakel.tw_sync.JsonElement . isJsonArray ( ) ) { final JsonArray de.azapps.mirakel.tw_sync.JsonArray = de.azapps.mirakel.tw_sync.JsonElement . getAsJsonArray ( ) ; final JsonArray de.azapps.mirakel.tw_sync.JsonArray = de.azapps.mirakel.tw_sync.JsonElement . getAsJsonArray ( ) ; if ( de.azapps.mirakel.tw_sync.JsonArray . size ( ) != de.azapps.mirakel.tw_sync.JsonArray . size ( ) ) { fail ( STRING + de.azapps.mirakel.tw_sync.JsonArray . size ( ) + STRING + de.azapps.mirakel.tw_sync.JsonArray . size ( ) + STRING ) ; return false ; } for ( int int = NUMBER ; int < de.azapps.mirakel.tw_sync.JsonArray . size ( ) ; int ++ ) { final JsonElement de.azapps.mirakel.tw_sync.JsonElement = de.azapps.mirakel.tw_sync.JsonArray . get ( int ) ; int int ; for ( int = NUMBER ; int < de.azapps.mirakel.tw_sync.JsonArray . size ( ) ; int ++ ) { if ( boolean ( de.azapps.mirakel.tw_sync.JsonElement , de.azapps.mirakel.tw_sync.JsonArray . get ( int ) ) ) { break; } } if ( int == de.azapps.mirakel.tw_sync.JsonArray . size ( ) ) { fail ( STRING + de.azapps.mirakel.tw_sync.JsonElement . toString ( ) + STRING + de.azapps.mirakel.tw_sync.JsonArray . toString ( ) + STRING ) ; return false ; } } return true ; } else if ( de.azapps.mirakel.tw_sync.JsonElement . isJsonPrimitive ( ) ) { final JsonPrimitive de.azapps.mirakel.tw_sync.JsonPrimitive = de.azapps.mirakel.tw_sync.JsonElement . getAsJsonPrimitive ( ) ; final JsonPrimitive de.azapps.mirakel.tw_sync.JsonPrimitive = de.azapps.mirakel.tw_sync.JsonElement . getAsJsonPrimitive ( ) ; if ( de.azapps.mirakel.tw_sync.JsonPrimitive . isBoolean ( ) && ! de.azapps.mirakel.tw_sync.JsonPrimitive . isBoolean ( ) ) { return false ; } else if ( de.azapps.mirakel.tw_sync.JsonPrimitive . isNumber ( ) && ! de.azapps.mirakel.tw_sync.JsonPrimitive . isNumber ( ) ) { return false ; } else if ( de.azapps.mirakel.tw_sync.JsonPrimitive . isString ( ) && ! de.azapps.mirakel.tw_sync.JsonPrimitive . isString ( ) ) { return false ; } if ( de.azapps.mirakel.tw_sync.JsonPrimitive . isBoolean ( ) ) { return de.azapps.mirakel.tw_sync.JsonPrimitive . getAsBoolean ( ) == de.azapps.mirakel.tw_sync.JsonPrimitive . getAsBoolean ( ) ; } else if ( de.azapps.mirakel.tw_sync.JsonPrimitive . isNumber ( ) && de.azapps.mirakel.tw_sync.JsonPrimitive . isNumber ( ) ) { return de.azapps.mirakel.tw_sync.JsonPrimitive . getAsNumber ( ) . equals ( de.azapps.mirakel.tw_sync.JsonPrimitive . getAsNumber ( ) ) ; } else if ( de.azapps.mirakel.tw_sync.JsonPrimitive . isString ( ) ) { return de.azapps.mirakel.tw_sync.JsonPrimitive . getAsString ( ) . equals ( de.azapps.mirakel.tw_sync.JsonPrimitive . getAsString ( ) ) ; } return false ; } else if ( de.azapps.mirakel.tw_sync.JsonElement . isJsonObject ( ) ) { final JsonObject de.azapps.mirakel.tw_sync.JsonObject = de.azapps.mirakel.tw_sync.JsonElement . getAsJsonObject ( ) ; final JsonObject de.azapps.mirakel.tw_sync.JsonObject = de.azapps.mirakel.tw_sync.JsonElement . getAsJsonObject ( ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> : de.azapps.mirakel.tw_sync.JsonObject . entrySet ( ) ) { for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> : de.azapps.mirakel.tw_sync.JsonObject . entrySet ( ) ) { if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getKey ( ) . equals ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getKey ( ) ) ) { java.util.List<java.lang.String> . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getKey ( ) ) ; if ( ! boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getValue ( ) , java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getValue ( ) ) ) { fail ( STRING + java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . toString ( ) + STRING + java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . toString ( ) ) ; return false ; } break; } } } boolean boolean = true ; java.lang.String java.lang.String = STRING ; if ( java.util.List<java.lang.String> . int ( ) != de.azapps.mirakel.tw_sync.JsonObject . entrySet ( ) . size ( ) ) { java.lang.String = java.lang.String ( de.azapps.mirakel.tw_sync.JsonObject , java.util.List<java.lang.String> , java.lang.String , de.azapps.mirakel.tw_sync.JsonObject . entrySet ( ) ) ; if ( ! java.lang.String . boolean ( ) ) { boolean = false ; java.lang.String += STRING ; } } if ( java.util.List<java.lang.String> . int ( ) != de.azapps.mirakel.tw_sync.JsonObject . entrySet ( ) . size ( ) ) { java.lang.String = java.lang.String ( de.azapps.mirakel.tw_sync.JsonObject , java.util.List<java.lang.String> , java.lang.String , de.azapps.mirakel.tw_sync.JsonObject . entrySet ( ) ) ; if ( ! java.lang.String . boolean ( ) ) { boolean = false ; java.lang.String += STRING ; } } if ( ! boolean && ! STRING . boolean ( java.lang.String ) ) { fail ( STRING + java.lang.String + STRING + de.azapps.mirakel.tw_sync.JsonElement . toString ( ) + STRING + de.azapps.mirakel.tw_sync.JsonElement . toString ( ) ) ; return false ; } return true ; } return false ; } 
private static java.lang.String java.lang.String ( final JsonObject de.azapps.mirakel.tw_sync.JsonObject , final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , final java.lang.String java.lang.String , final java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement>> < java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> < java.lang.String , JsonElement > > java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement>> ) { java.lang.String java.lang.String = java.lang.String ; for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> : java.util.Set<java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement>> ) { if ( ! java.util.List<java.lang.String> . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getKey ( ) ) && ! STRING . boolean ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getKey ( ) ) ) { java.lang.String += STRING + ( java.lang.String . int ( ) == NUMBER ? java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getKey ( ) : java.util.Map.Entry<java.lang.String,de.azapps.mirakel.tw_sync.JsonElement> . getKey ( ) + STRING ) ; } } return java.lang.String ; } 
private void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String )    throws java.lang.Exception { final Gson de.azapps.mirakel.tw_sync.Gson = new GsonBuilder ( ) . registerTypeAdapter ( TaskWarriorTask .class , new TaskWarriorTaskDeserializer ( ) ) . create ( ) ; final TaskWarriorTask de.azapps.mirakel.tw_sync.TaskWarriorTask = de.azapps.mirakel.tw_sync.Gson . fromJson ( java.lang.String , TaskWarriorTask .class ) ; assertTrue ( java.lang.String , boolean ( java.lang.String , de.azapps.mirakel.tw_sync.TaskWarriorTask ) ) ; } 
@ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; void ( STRING , java.lang.String ) ; } 
@ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; void ( STRING , java.lang.String ) ; } 
@ Test public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING ; void ( STRING , java.lang.String ) ; } 
@ Test public void void ( ) { Task de.azapps.mirakel.tw_sync.Task = new Task ( ) ; de.azapps.mirakel.tw_sync.Task . setUUID ( java . util . java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ) ; de.azapps.mirakel.tw_sync.Task . setPriority ( NUMBER ) ; de.azapps.mirakel.tw_sync.Task . setName ( RandomHelper . getRandomString ( ) ) ; ListMirakel de.azapps.mirakel.tw_sync.ListMirakel = ListMirakel . getInboxList ( AccountMirakel . getLocal ( ) ) ; de.azapps.mirakel.tw_sync.Task . setList ( de.azapps.mirakel.tw_sync.ListMirakel ) ; DateTime de.azapps.mirakel.tw_sync.DateTime = new DateTime ( ) ; de.azapps.mirakel.tw_sync.Task . setCreatedAt ( de.azapps.mirakel.tw_sync.DateTime ) ; DateTime de.azapps.mirakel.tw_sync.DateTime = new DateTime ( ) . plusDays ( NUMBER ) ; de.azapps.mirakel.tw_sync.Task . setUpdatedAt ( de.azapps.mirakel.tw_sync.DateTime ) ; DateTime de.azapps.mirakel.tw_sync.DateTime = new DateTime ( ) . plusDays ( NUMBER ) ; de.azapps.mirakel.tw_sync.Task . setDue ( of ( de.azapps.mirakel.tw_sync.DateTime ) ) ; java.lang.String java.lang.String = new GsonBuilder ( ) . registerTypeAdapter ( Task .class , new TaskWarriorTaskSerializer ( RuntimeEnvironment . application ) ) . create ( ) . toJson ( de.azapps.mirakel.tw_sync.Task ) ; java.lang.String java.lang.String = STRING + de.azapps.mirakel.tw_sync.Task . getUUID ( ) + STRING + STRING + STRING + de.azapps.mirakel.tw_sync.ListMirakel . getName ( ) + STRING + STRING + de.azapps.mirakel.tw_sync.DateTime . toString ( ISODateTimeFormat . basicDateTimeNoMillis ( ) . withZoneUTC ( ) ) + STRING + STRING + de.azapps.mirakel.tw_sync.Task . getName ( ) + STRING + STRING + de.azapps.mirakel.tw_sync.DateTime . toString ( ISODateTimeFormat . basicDateTimeNoMillis ( ) . withZoneUTC ( ) ) + STRING + STRING + de.azapps.mirakel.tw_sync.DateTime . toString ( ISODateTimeFormat . basicDateTimeNoMillis ( ) . withZoneUTC ( ) ) + STRING + STRING ; JsonParser de.azapps.mirakel.tw_sync.JsonParser = new JsonParser ( ) ; assertTrue ( boolean ( de.azapps.mirakel.tw_sync.JsonParser . parse ( java.lang.String ) , de.azapps.mirakel.tw_sync.JsonParser . parse ( java.lang.String ) ) ) ; } 
@ Before public void void ( ) java.lang.Exception { super. setUp ( ) ; final Bundle de.azapps.mirakel.tw_sync.Bundle = new Bundle ( ) ; de.azapps.mirakel.tw_sync.Bundle . putString ( SyncAdapter . BUNDLE_SERVER_TYPE , TaskWarriorSync . TYPE ) ; final Account de.azapps.mirakel.tw_sync.Account = new Account ( STRING , AccountMirakel . ACCOUNT_TYPE_MIRAKEL ) ; de.azapps.mirakel.tw_sync.Bundle . putString ( SyncAdapter . BUNDLE_ORG , STRING ) ; de.azapps.mirakel.tw_sync.Bundle . putString ( SyncAdapter . BUNDLE_SERVER_URL , STRING ) ; de.azapps.mirakel.tw_sync.Bundle . putString ( DefinitionsHelper . BUNDLE_CERT , STRING ) ; de.azapps.mirakel.tw_sync.Bundle . putString ( DefinitionsHelper . BUNDLE_CERT_CLIENT , STRING ) ; AccountManager . get ( RuntimeEnvironment . application ) . addAccountExplicitly ( de.azapps.mirakel.tw_sync.Account , STRING , de.azapps.mirakel.tw_sync.Bundle ) ; de.azapps.mirakel.tw_sync.AccountMirakel = AccountMirakel . newAccount ( STRING , AccountMirakel . ACCOUNT_TYPES . TASKWARRIOR , true ) ; de.azapps.mirakel.tw_sync.ListMirakel = ListMirakel . newList ( STRING , ListMirakel . SORT_BY . DUE , de.azapps.mirakel.tw_sync.AccountMirakel ) ; } 
@ Test public void void ( ) { final Msg de.azapps.mirakel.tw_sync.Msg = new Msg ( ) ; try { final java.lang.String java.lang.String = STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ; de.azapps.mirakel.tw_sync.Msg . parse ( java.lang.String ) ; } catch ( java.nio.charset.MalformedInputException java.nio.charset.MalformedInputException ) { fail ( java.nio.charset.MalformedInputException . java.lang.String ( ) ) ; } assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getPayload ( ) ) . isEqualTo ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; final TaskWarriorSync de.azapps.mirakel.tw_sync.TaskWarriorSync = new TaskWarriorSync ( RuntimeEnvironment . application ) ; final TaskWarriorAccount de.azapps.mirakel.tw_sync.TaskWarriorAccount = new TaskWarriorAccount ( de.azapps.mirakel.tw_sync.AccountMirakel , RuntimeEnvironment . application ) ; try { de.azapps.mirakel.tw_sync.TaskWarriorSync . parseTasks ( de.azapps.mirakel.tw_sync.TaskWarriorAccount , de.azapps.mirakel.tw_sync.Msg ) ; } catch ( TaskWarriorSyncFailedException de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException ) { fail ( de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException . getMessage ( ) ) ; } final Optional < Task > de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> = Task . getByUUID ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> ) . isPresent ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getList ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getPriority ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) . containsNoDuplicates ( ) ; for ( final Tag de.azapps.mirakel.tw_sync.Tag : de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) { assertThat ( de.azapps.mirakel.tw_sync.Tag . getName ( ) ) . isAnyOf ( STRING , STRING ) ; } assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getDue ( ) ) . isPresent ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getDue ( ) . get ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getCreatedAt ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getUpdatedAt ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; } 
@ Test public void void ( ) { final Msg de.azapps.mirakel.tw_sync.Msg = new Msg ( ) ; try { final java.lang.String java.lang.String = STRING + STRING + STRING + STRING + STRING + STRING + '\n' + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ; de.azapps.mirakel.tw_sync.Msg . parse ( java.lang.String ) ; } catch ( java.nio.charset.MalformedInputException java.nio.charset.MalformedInputException ) { fail ( java.nio.charset.MalformedInputException . java.lang.String ( ) ) ; } assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getPayload ( ) ) . isEqualTo ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; final TaskWarriorSync de.azapps.mirakel.tw_sync.TaskWarriorSync = new TaskWarriorSync ( RuntimeEnvironment . application ) ; final TaskWarriorAccount de.azapps.mirakel.tw_sync.TaskWarriorAccount = new TaskWarriorAccount ( de.azapps.mirakel.tw_sync.AccountMirakel , RuntimeEnvironment . application ) ; try { de.azapps.mirakel.tw_sync.TaskWarriorSync . parseTasks ( de.azapps.mirakel.tw_sync.TaskWarriorAccount , de.azapps.mirakel.tw_sync.Msg ) ; } catch ( TaskWarriorSyncFailedException de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException ) { fail ( de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException . getMessage ( ) ) ; } final Optional < Task > de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> = Task . getByUUID ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> ) . isPresent ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getList ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getPriority ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) . containsNoDuplicates ( ) ; for ( final Tag de.azapps.mirakel.tw_sync.Tag : de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) { assertThat ( de.azapps.mirakel.tw_sync.Tag . getName ( ) ) . isAnyOf ( STRING , STRING ) ; } assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getDue ( ) ) . isPresent ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getDue ( ) . get ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getCreatedAt ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getUpdatedAt ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; final Optional < Task > de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> = Task . getByUUID ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> ) . isPresent ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getList ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getPriority ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) . containsNoDuplicates ( ) ; for ( final Tag de.azapps.mirakel.tw_sync.Tag : de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) { assertThat ( de.azapps.mirakel.tw_sync.Tag . getName ( ) ) . isAnyOf ( STRING , STRING ) ; } assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getDue ( ) ) . isPresent ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getDue ( ) . get ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getCreatedAt ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getUpdatedAt ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; } 
@ Test public void void ( ) { final Task de.azapps.mirakel.tw_sync.Task = Task . newTask ( STRING , RandomHelper . getRandomListMirakel ( ) ) ; de.azapps.mirakel.tw_sync.Task . setUUID ( STRING ) ; de.azapps.mirakel.tw_sync.Task . save ( ) ; final Msg de.azapps.mirakel.tw_sync.Msg = new Msg ( ) ; try { final java.lang.String java.lang.String = STRING + STRING + STRING + STRING + STRING + STRING + '\n' + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ; de.azapps.mirakel.tw_sync.Msg . parse ( java.lang.String ) ; } catch ( java.nio.charset.MalformedInputException java.nio.charset.MalformedInputException ) { fail ( java.nio.charset.MalformedInputException . java.lang.String ( ) ) ; } assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getPayload ( ) ) . isEqualTo ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; final TaskWarriorSync de.azapps.mirakel.tw_sync.TaskWarriorSync = new TaskWarriorSync ( RuntimeEnvironment . application ) ; final TaskWarriorAccount de.azapps.mirakel.tw_sync.TaskWarriorAccount = new TaskWarriorAccount ( de.azapps.mirakel.tw_sync.AccountMirakel , RuntimeEnvironment . application ) ; try { de.azapps.mirakel.tw_sync.TaskWarriorSync . parseTasks ( de.azapps.mirakel.tw_sync.TaskWarriorAccount , de.azapps.mirakel.tw_sync.Msg ) ; } catch ( TaskWarriorSyncFailedException de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException ) { fail ( de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException . getMessage ( ) ) ; } final Optional < Task > de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> = Task . getByUUID ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> ) . isPresent ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getList ( ) . getName ( ) ) . isEqualTo ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getPriority ( ) ) . isEqualTo ( NUMBER ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) . hasSize ( NUMBER ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) . containsNoDuplicates ( ) ; for ( final Tag de.azapps.mirakel.tw_sync.Tag : de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getTags ( ) ) { assertThat ( de.azapps.mirakel.tw_sync.Tag . getName ( ) ) . isAnyOf ( STRING , STRING ) ; } assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getDue ( ) ) . isPresent ( ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getDue ( ) . get ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getCreatedAt ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> . get ( ) . getUpdatedAt ( ) ) . isEquivalentAccordingToCompareTo ( new DateTime ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , DateTimeZone . UTC ) . toDateTime ( DateTimeZone . getDefault ( ) ) ) ; } 
@ Test public void void ( ) { final Task de.azapps.mirakel.tw_sync.Task = Task . newTask ( STRING , de.azapps.mirakel.tw_sync.ListMirakel ) ; de.azapps.mirakel.tw_sync.Task . setUUID ( STRING ) ; de.azapps.mirakel.tw_sync.Task . save ( ) ; final Msg de.azapps.mirakel.tw_sync.Msg = new Msg ( ) ; try { final java.lang.String java.lang.String = STRING + STRING + STRING + STRING + STRING + STRING + '\n' + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ; de.azapps.mirakel.tw_sync.Msg . parse ( java.lang.String ) ; } catch ( java.nio.charset.MalformedInputException java.nio.charset.MalformedInputException ) { fail ( java.nio.charset.MalformedInputException . java.lang.String ( ) ) ; } assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getPayload ( ) ) . isEqualTo ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING ) ; final TaskWarriorSync de.azapps.mirakel.tw_sync.TaskWarriorSync = new TaskWarriorSync ( RuntimeEnvironment . application ) ; final TaskWarriorAccount de.azapps.mirakel.tw_sync.TaskWarriorAccount = new TaskWarriorAccount ( de.azapps.mirakel.tw_sync.AccountMirakel , RuntimeEnvironment . application ) ; try { de.azapps.mirakel.tw_sync.TaskWarriorSync . parseTasks ( de.azapps.mirakel.tw_sync.TaskWarriorAccount , de.azapps.mirakel.tw_sync.Msg ) ; } catch ( TaskWarriorSyncFailedException de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException ) { fail ( de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException . getMessage ( ) ) ; } final Optional < Task > de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> = Task . getByUUID ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Optional<de.azapps.mirakel.tw_sync.Task> ) . isAbsent ( ) ; } 
@ Test public void void ( ) { final Task de.azapps.mirakel.tw_sync.Task = Task . newTask ( STRING , de.azapps.mirakel.tw_sync.ListMirakel ) ; de.azapps.mirakel.tw_sync.Task . setUUID ( STRING ) ; de.azapps.mirakel.tw_sync.Task . save ( ) ; java.util.List<de.azapps.mirakel.tw_sync.Task> < Task > java.util.List<de.azapps.mirakel.tw_sync.Task> = Task . getTasksToSync ( de.azapps.mirakel.tw_sync.AccountMirakel ) ; assertThat ( java.util.List<de.azapps.mirakel.tw_sync.Task> ) . hasSize ( NUMBER ) ; assertThat ( java.util.List<de.azapps.mirakel.tw_sync.Task> ) . containsExactly ( de.azapps.mirakel.tw_sync.Task ) ; } 
@ Test public void void ( ) { final Task de.azapps.mirakel.tw_sync.Task = Task . newTask ( STRING , de.azapps.mirakel.tw_sync.ListMirakel ) ; de.azapps.mirakel.tw_sync.Task . setUUID ( STRING ) ; de.azapps.mirakel.tw_sync.Task . save ( ) ; java.util.List<de.azapps.mirakel.tw_sync.Task> < Task > java.util.List<de.azapps.mirakel.tw_sync.Task> = Task . getTasksToSync ( de.azapps.mirakel.tw_sync.AccountMirakel ) ; final TaskWarriorSync de.azapps.mirakel.tw_sync.TaskWarriorSync = new TaskWarriorSync ( RuntimeEnvironment . application ) ; final TaskWarriorAccount de.azapps.mirakel.tw_sync.TaskWarriorAccount = new TaskWarriorAccount ( de.azapps.mirakel.tw_sync.AccountMirakel , RuntimeEnvironment . application ) ; try { Msg de.azapps.mirakel.tw_sync.Msg = de.azapps.mirakel.tw_sync.TaskWarriorSync . getMsg ( de.azapps.mirakel.tw_sync.TaskWarriorAccount , java.util.List<de.azapps.mirakel.tw_sync.Task> ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( TaskWarriorSync . TW_PROTOCOL_VERSION ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( STRING ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( de.azapps.mirakel.tw_sync.TaskWarriorAccount . getOrg ( ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( de.azapps.mirakel.tw_sync.TaskWarriorAccount . getUser ( ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getHeader ( STRING ) ) . hasValue ( de.azapps.mirakel.tw_sync.TaskWarriorAccount . getUserPassword ( ) ) ; java.lang.String java.lang.String = ISODateTimeFormat . basicDateTimeNoMillis ( ) . withZoneUTC ( ) . print ( de.azapps.mirakel.tw_sync.Task . getCreatedAt ( ) ) ; assertThat ( de.azapps.mirakel.tw_sync.Msg . getPayload ( ) . trim ( ) ) . isEqualTo ( STRING + STRING + STRING + java.lang.String + STRING + STRING + STRING + STRING + java.lang.String + STRING ) ; } catch ( TaskWarriorSyncFailedException de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException ) { throw new java.lang.RuntimeException ( de.azapps.mirakel.tw_sync.TaskWarriorSyncFailedException ) ; } } 
public void ( final @ NonNull PreferenceScreen de.azapps.mirakel.settings.adapter.PreferenceScreen ) { de.azapps.mirakel.settings.adapter.PreferenceScreen = de.azapps.mirakel.settings.adapter.PreferenceScreen ; de.azapps.mirakel.settings.adapter.PreferenceScreen . setOnPreferenceChangeListener ( this ) ; de.azapps.mirakel.settings.adapter.LayoutInflater = LayoutInflater . from ( de.azapps.mirakel.settings.adapter.PreferenceScreen . getContext ( ) ) ; } 
public void void ( final @ NonNull PreferenceScreen de.azapps.mirakel.settings.adapter.PreferenceScreen ) { de.azapps.mirakel.settings.adapter.PreferenceScreen = de.azapps.mirakel.settings.adapter.PreferenceScreen ; notifyDataSetChanged ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.adapter.ExpandableSettingsAdapter.ViewHolder de.azapps.mirakel.settings.adapter.ExpandableSettingsAdapter.ViewHolder ( final ViewGroup de.azapps.mirakel.settings.adapter.ViewGroup , final int int ) { return new de.azapps.mirakel.settings.adapter.ExpandableSettingsAdapter.ViewHolder ( de.azapps.mirakel.settings.adapter.ViewGroup . getContext ( ) ) ; } 
public void void ( final @ Nullable SwipeLinearLayout . SwipeLinearLayout SwipeLinearLayout.OnItemRemoveListener ) { this . de.azapps.mirakel.settings.adapter.Optional<SwipeLinearLayout.OnItemRemoveListener> = fromNullable ( SwipeLinearLayout.OnItemRemoveListener ) ; } 
@ java.lang.Override public void void ( final de.azapps.mirakel.settings.adapter.ExpandableSettingsAdapter.ViewHolder de.azapps.mirakel.settings.adapter.ExpandableSettingsAdapter.ViewHolder , final int int ) { final Preference de.azapps.mirakel.settings.adapter.Preference = de.azapps.mirakel.settings.adapter.PreferenceScreen . getPreference ( int ) ; ( ( SwipeLinearLayout ) de.azapps.mirakel.settings.adapter.ExpandableSettingsAdapter.ViewHolder . itemView ) . removeAllViews ( ) ; ( ( SwipeLinearLayout ) de.azapps.mirakel.settings.adapter.ExpandableSettingsAdapter.ViewHolder . itemView ) . addView ( de.azapps.mirakel.settings.adapter.View ( int , de.azapps.mirakel.settings.adapter.Preference ) ) ; if ( de.azapps.mirakel.settings.adapter.Optional<SwipeLinearLayout.OnItemRemoveListener> . isPresent ( ) ) { ( ( SwipeLinearLayout ) de.azapps.mirakel.settings.adapter.ExpandableSettingsAdapter.ViewHolder . itemView ) . setOnItemRemovedListener ( new SwipeLinearLayout . SwipeLinearLayout ( ) { @ java.lang.Override public void void ( final int int , final int int ) { de.azapps.mirakel.settings.adapter.Optional<SwipeLinearLayout.OnItemRemoveListener> . get ( ) . onRemove ( int , int ) ; } } ) ; } } 
@ java.lang.Override public void void ( final int int , final int int ) { de.azapps.mirakel.settings.adapter.Optional<SwipeLinearLayout.OnItemRemoveListener> . get ( ) . onRemove ( int , int ) ; } 
private de.azapps.mirakel.settings.adapter.View de.azapps.mirakel.settings.adapter.View ( final int int , final @ NonNull Preference de.azapps.mirakel.settings.adapter.Preference ) { if ( de.azapps.mirakel.settings.adapter.Preference . getDependency ( ) != null ) { java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) , int ) ; de.azapps.mirakel.settings.adapter.Preference . setEnabled ( ( ( TwoStatePreference ) de.azapps.mirakel.settings.adapter.PreferenceScreen . findPreference ( de.azapps.mirakel.settings.adapter.Preference . getDependency ( ) ) ) . isChecked ( ) ) ; } final Preference . Preference Preference.OnPreferenceChangeListener = de.azapps.mirakel.settings.adapter.Preference . getOnPreferenceChangeListener ( ) ; de.azapps.mirakel.settings.adapter.Preference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.adapter.Preference , java.lang.Object java.lang.Object ) { notifyItemChanged ( int ) ; if ( java.util.Map<java.lang.String,java.lang.Integer> . boolean ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) && ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) != int ) ) { notifyItemChanged ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) ) ; } return ( Preference.OnPreferenceChangeListener == null ) || Preference.OnPreferenceChangeListener . onPreferenceChange ( de.azapps.mirakel.settings.adapter.Preference , java.lang.Object ) ; } } ) ; final View de.azapps.mirakel.settings.adapter.View = de.azapps.mirakel.settings.adapter.Preference . getView ( null , null ) ; final View . View View.OnClickListener = new View . View ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.settings.adapter.View ) { if ( de.azapps.mirakel.settings.adapter.Preference . hasKey ( ) ) { final java.lang.Integer java.lang.Integer = PreferencesHelper . findPreferenceScreenForPreference ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) , de.azapps.mirakel.settings.adapter.PreferenceScreen ) ; if ( java.lang.Integer != null ) { de.azapps.mirakel.settings.adapter.PreferenceScreen . onItemClick ( null , null , java.lang.Integer , NUMBER ) ; } if ( ! ( de.azapps.mirakel.settings.adapter.Preference instanceof DialogPreference ) ) { notifyItemChanged ( int ) ; } } } } ; if ( ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) != null ) && de.azapps.mirakel.settings.adapter.Preference . getKey ( ) . startsWith ( java.lang.String . java.lang.String ( SwipeLinearLayout . SWIPEABLE_VIEW ) ) ) { de.azapps.mirakel.settings.adapter.View . setTag ( SwipeLinearLayout . SWIPEABLE_VIEW , View.OnClickListener ) ; } de.azapps.mirakel.settings.adapter.View . setOnClickListener ( View.OnClickListener ) ; return de.azapps.mirakel.settings.adapter.View ; } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.adapter.Preference , java.lang.Object java.lang.Object ) { notifyItemChanged ( int ) ; if ( java.util.Map<java.lang.String,java.lang.Integer> . boolean ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) && ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) != int ) ) { notifyItemChanged ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) ) ; } return ( Preference.OnPreferenceChangeListener == null ) || Preference.OnPreferenceChangeListener . onPreferenceChange ( de.azapps.mirakel.settings.adapter.Preference , java.lang.Object ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.adapter.View ) { if ( de.azapps.mirakel.settings.adapter.Preference . hasKey ( ) ) { final java.lang.Integer java.lang.Integer = PreferencesHelper . findPreferenceScreenForPreference ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) , de.azapps.mirakel.settings.adapter.PreferenceScreen ) ; if ( java.lang.Integer != null ) { de.azapps.mirakel.settings.adapter.PreferenceScreen . onItemClick ( null , null , java.lang.Integer , NUMBER ) ; } if ( ! ( de.azapps.mirakel.settings.adapter.Preference instanceof DialogPreference ) ) { notifyItemChanged ( int ) ; } } } 
@ java.lang.Override public int int ( ) { return de.azapps.mirakel.settings.adapter.PreferenceScreen . getPreferenceCount ( ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.adapter.Preference , final java.lang.Object java.lang.Object ) { notifyDataSetChanged ( ) ; return true ; } 
@ NonNull public de.azapps.mirakel.settings.adapter.PreferenceScreen de.azapps.mirakel.settings.adapter.PreferenceScreen ( ) { return de.azapps.mirakel.settings.adapter.PreferenceScreen ; } 
public void ( final Context de.azapps.mirakel.settings.adapter.Context ) { super( new SwipeLinearLayout ( de.azapps.mirakel.settings.adapter.Context ) ); final SwipeLinearLayout de.azapps.mirakel.settings.adapter.SwipeLinearLayout = ( SwipeLinearLayout ) itemView ; de.azapps.mirakel.settings.adapter.SwipeLinearLayout . setLayoutParams ( new RelativeLayout . RelativeLayout ( ViewGroup . LayoutParams . MATCH_PARENT , ViewGroup . LayoutParams . WRAP_CONTENT ) ) ; } 
public void ( final @ NonNull PreferenceScreen de.azapps.mirakel.settings.adapter.PreferenceScreen ) { de.azapps.mirakel.settings.adapter.PreferenceScreen = de.azapps.mirakel.settings.adapter.PreferenceScreen ; de.azapps.mirakel.settings.adapter.PreferenceScreen . setOnPreferenceChangeListener ( this ) ; de.azapps.mirakel.settings.adapter.LayoutInflater = LayoutInflater . from ( de.azapps.mirakel.settings.adapter.PreferenceScreen . getContext ( ) ) ; } 
public void void ( final @ NonNull PreferenceScreen de.azapps.mirakel.settings.adapter.PreferenceScreen ) { de.azapps.mirakel.settings.adapter.PreferenceScreen = de.azapps.mirakel.settings.adapter.PreferenceScreen ; notifyDataSetChanged ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.adapter.SettingsGroupAdapter.ViewHolder de.azapps.mirakel.settings.adapter.SettingsGroupAdapter.ViewHolder ( final ViewGroup de.azapps.mirakel.settings.adapter.ViewGroup , final int int ) { return new de.azapps.mirakel.settings.adapter.SettingsGroupAdapter.ViewHolder ( ( LinearLayout ) de.azapps.mirakel.settings.adapter.LayoutInflater . inflate ( R . layout . preferences_group_card , null ) ) ; } 
public void void ( final @ Nullable SwipeLinearLayout . SwipeLinearLayout SwipeLinearLayout.OnItemRemoveListener ) { this . de.azapps.mirakel.settings.adapter.Optional<SwipeLinearLayout.OnItemRemoveListener> = fromNullable ( SwipeLinearLayout.OnItemRemoveListener ) ; } 
@ java.lang.Override public void void ( final de.azapps.mirakel.settings.adapter.SettingsGroupAdapter.ViewHolder de.azapps.mirakel.settings.adapter.SettingsGroupAdapter.ViewHolder , final int int ) { final Preference de.azapps.mirakel.settings.adapter.Preference = de.azapps.mirakel.settings.adapter.PreferenceScreen . getPreference ( int ) ; final CardView de.azapps.mirakel.settings.adapter.CardView = de.azapps.mirakel.settings.adapter.SettingsGroupAdapter.ViewHolder . de.azapps.mirakel.settings.adapter.CardView ; de.azapps.mirakel.settings.adapter.CardView . removeAllViews ( ) ; de.azapps.mirakel.settings.adapter.CardView . setRadius ( NUMBER ) ; if ( de.azapps.mirakel.settings.adapter.Preference instanceof PreferenceGroup ) { final SwipeLinearLayout de.azapps.mirakel.settings.adapter.SwipeLinearLayout = new SwipeLinearLayout ( de.azapps.mirakel.settings.adapter.SettingsGroupAdapter.ViewHolder . itemView . getContext ( ) ) ; if ( de.azapps.mirakel.settings.adapter.Optional<SwipeLinearLayout.OnItemRemoveListener> . isPresent ( ) ) { de.azapps.mirakel.settings.adapter.SwipeLinearLayout . setOnItemRemovedListener ( new SwipeLinearLayout . SwipeLinearLayout ( ) { @ java.lang.Override public void void ( final int int , final int int ) { de.azapps.mirakel.settings.adapter.Optional<SwipeLinearLayout.OnItemRemoveListener> . get ( ) . onRemove ( int , int ) ; } } ) ; } de.azapps.mirakel.settings.adapter.SwipeLinearLayout . setOrientation ( LinearLayout . VERTICAL ) ; final View de.azapps.mirakel.settings.adapter.View = de.azapps.mirakel.settings.adapter.Preference . getView ( null , null ) ; final TextView de.azapps.mirakel.settings.adapter.TextView = ( TextView ) de.azapps.mirakel.settings.adapter.View . findViewById ( android . R . id . title ) ; de.azapps.mirakel.settings.adapter.TextView . setTypeface ( Typeface . DEFAULT_BOLD ) ; de.azapps.mirakel.settings.adapter.TextView . setTextSize ( TypedValue . COMPLEX_UNIT_SP , NUMBER ) ; de.azapps.mirakel.settings.adapter.TextView . setTextColor ( ThemeManager . getAccentThemeColor ( ) ) ; if ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) != null && de.azapps.mirakel.settings.adapter.Preference . getKey ( ) . startsWith ( java.lang.String . java.lang.String ( SwipeLinearLayout . SWIPEABLE_VIEW ) ) ) { de.azapps.mirakel.settings.adapter.View . setTag ( SwipeLinearLayout . SWIPEABLE_VIEW , new View . View ( ) { @ java.lang.Override public void void ( View de.azapps.mirakel.settings.adapter.View ) { de.azapps.mirakel.settings.adapter.View . performClick ( ) ; } } ) ; } de.azapps.mirakel.settings.adapter.SwipeLinearLayout . addView ( de.azapps.mirakel.settings.adapter.View ) ; if ( ! ( de.azapps.mirakel.settings.adapter.Preference instanceof ExpandablePreference ) ) { final PreferenceGroup de.azapps.mirakel.settings.adapter.PreferenceGroup = ( PreferenceGroup ) de.azapps.mirakel.settings.adapter.Preference ; for ( int int = NUMBER ; int < de.azapps.mirakel.settings.adapter.PreferenceGroup . getPreferenceCount ( ) ; int ++ ) { de.azapps.mirakel.settings.adapter.SwipeLinearLayout . addView ( de.azapps.mirakel.settings.adapter.View ( int , de.azapps.mirakel.settings.adapter.PreferenceGroup . getPreference ( int ) ) ) ; } } de.azapps.mirakel.settings.adapter.CardView . addView ( de.azapps.mirakel.settings.adapter.SwipeLinearLayout ) ; } else { de.azapps.mirakel.settings.adapter.CardView . addView ( de.azapps.mirakel.settings.adapter.View ( int , de.azapps.mirakel.settings.adapter.Preference ) ) ; } ( ( View ) de.azapps.mirakel.settings.adapter.CardView . getParent ( ) ) . invalidate ( ) ; } 
@ java.lang.Override public void void ( final int int , final int int ) { de.azapps.mirakel.settings.adapter.Optional<SwipeLinearLayout.OnItemRemoveListener> . get ( ) . onRemove ( int , int ) ; } 
@ java.lang.Override public void void ( View de.azapps.mirakel.settings.adapter.View ) { de.azapps.mirakel.settings.adapter.View . performClick ( ) ; } 
private de.azapps.mirakel.settings.adapter.View de.azapps.mirakel.settings.adapter.View ( final int int , final @ NonNull Preference de.azapps.mirakel.settings.adapter.Preference ) { if ( de.azapps.mirakel.settings.adapter.Preference . getDependency ( ) != null ) { java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) , int ) ; de.azapps.mirakel.settings.adapter.Preference . setEnabled ( ( ( TwoStatePreference ) de.azapps.mirakel.settings.adapter.PreferenceScreen . findPreference ( de.azapps.mirakel.settings.adapter.Preference . getDependency ( ) ) ) . isChecked ( ) ) ; } final Preference . Preference Preference.OnPreferenceChangeListener = de.azapps.mirakel.settings.adapter.Preference . getOnPreferenceChangeListener ( ) ; de.azapps.mirakel.settings.adapter.Preference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.adapter.Preference , java.lang.Object java.lang.Object ) { notifyItemChanged ( int ) ; if ( java.util.Map<java.lang.String,java.lang.Integer> . boolean ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) && ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) != int ) ) { notifyItemChanged ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) ) ; } return ( Preference.OnPreferenceChangeListener == null ) || Preference.OnPreferenceChangeListener . onPreferenceChange ( de.azapps.mirakel.settings.adapter.Preference , java.lang.Object ) ; } } ) ; final View de.azapps.mirakel.settings.adapter.View = de.azapps.mirakel.settings.adapter.Preference . getView ( null , null ) ; final View . View View.OnClickListener = new View . View ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.settings.adapter.View ) { if ( de.azapps.mirakel.settings.adapter.Preference . hasKey ( ) ) { final java.lang.Integer java.lang.Integer = PreferencesHelper . findPreferenceScreenForPreference ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) , de.azapps.mirakel.settings.adapter.PreferenceScreen ) ; if ( java.lang.Integer != null ) { de.azapps.mirakel.settings.adapter.PreferenceScreen . onItemClick ( null , null , java.lang.Integer , NUMBER ) ; } if ( ! ( de.azapps.mirakel.settings.adapter.Preference instanceof DialogPreference ) ) { notifyItemChanged ( int ) ; } } } } ; if ( ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) != null ) && de.azapps.mirakel.settings.adapter.Preference . getKey ( ) . startsWith ( java.lang.String . java.lang.String ( SwipeLinearLayout . SWIPEABLE_VIEW ) ) ) { de.azapps.mirakel.settings.adapter.View . setTag ( SwipeLinearLayout . SWIPEABLE_VIEW , View.OnClickListener ) ; } de.azapps.mirakel.settings.adapter.View . setOnClickListener ( View.OnClickListener ) ; return de.azapps.mirakel.settings.adapter.View ; } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.adapter.Preference , java.lang.Object java.lang.Object ) { notifyItemChanged ( int ) ; if ( java.util.Map<java.lang.String,java.lang.Integer> . boolean ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) && ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) != int ) ) { notifyItemChanged ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) ) ) ; } return ( Preference.OnPreferenceChangeListener == null ) || Preference.OnPreferenceChangeListener . onPreferenceChange ( de.azapps.mirakel.settings.adapter.Preference , java.lang.Object ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.adapter.View ) { if ( de.azapps.mirakel.settings.adapter.Preference . hasKey ( ) ) { final java.lang.Integer java.lang.Integer = PreferencesHelper . findPreferenceScreenForPreference ( de.azapps.mirakel.settings.adapter.Preference . getKey ( ) , de.azapps.mirakel.settings.adapter.PreferenceScreen ) ; if ( java.lang.Integer != null ) { de.azapps.mirakel.settings.adapter.PreferenceScreen . onItemClick ( null , null , java.lang.Integer , NUMBER ) ; } if ( ! ( de.azapps.mirakel.settings.adapter.Preference instanceof DialogPreference ) ) { notifyItemChanged ( int ) ; } } } 
@ java.lang.Override public int int ( ) { return de.azapps.mirakel.settings.adapter.PreferenceScreen . getPreferenceCount ( ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.adapter.Preference , final java.lang.Object java.lang.Object ) { notifyDataSetChanged ( ) ; return true ; } 
@ NonNull public de.azapps.mirakel.settings.adapter.PreferenceScreen de.azapps.mirakel.settings.adapter.PreferenceScreen ( ) { return de.azapps.mirakel.settings.adapter.PreferenceScreen ; } 
public void ( final @ NonNull LinearLayout de.azapps.mirakel.settings.adapter.LinearLayout ) { super( de.azapps.mirakel.settings.adapter.LinearLayout ); de.azapps.mirakel.settings.adapter.LinearLayout . setLayoutParams ( new LinearLayout . LinearLayout ( ViewGroup . LayoutParams . MATCH_PARENT , ViewGroup . LayoutParams . WRAP_CONTENT ) ) ; de.azapps.mirakel.settings.adapter.CardView = ( CardView ) de.azapps.mirakel.settings.adapter.LinearLayout . findViewById ( R . id . card_wrapper ) ; } 
public static boolean boolean ( final Context de.azapps.mirakel.settings.custom_views.Context ) { final SharedPreferences de.azapps.mirakel.settings.custom_views.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( de.azapps.mirakel.settings.custom_views.Context ) ; final int int = de.azapps.mirakel.settings.custom_views.SharedPreferences . getInt ( java.lang.String , int ) ; int int = int ( de.azapps.mirakel.settings.custom_views.Context ) ; return int > int ; } 
private static int int ( Context de.azapps.mirakel.settings.custom_views.Context ) { int int ; try { int = de.azapps.mirakel.settings.custom_views.Context . getPackageManager ( ) . getPackageInfo ( de.azapps.mirakel.settings.custom_views.Context . getPackageName ( ) , NUMBER ) . versionCode ; } catch ( final PackageManager . PackageManager PackageManager.NameNotFoundException ) { int = int ; } return int ; } 
public static void void ( final Context de.azapps.mirakel.settings.custom_views.Context , final java.lang.String java.lang.String ) { LayoutInflater de.azapps.mirakel.settings.custom_views.LayoutInflater = ( LayoutInflater ) de.azapps.mirakel.settings.custom_views.Context . getSystemService ( Context . LAYOUT_INFLATER_SERVICE ) ; ChangeLogRecyclerView de.azapps.mirakel.settings.custom_views.ChangeLogRecyclerView = ( ChangeLogRecyclerView ) de.azapps.mirakel.settings.custom_views.LayoutInflater . inflate ( R . layout . changelog_dialog , null ) ; new AlertDialog . AlertDialog ( de.azapps.mirakel.settings.custom_views.Context ) . setTitle ( R . string . changelog ) . setView ( de.azapps.mirakel.settings.custom_views.ChangeLogRecyclerView ) . setPositiveButton ( R . string . title_donations , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface de.azapps.mirakel.settings.custom_views.DialogInterface , int int ) { final Intent de.azapps.mirakel.settings.custom_views.Intent = new Intent ( de.azapps.mirakel.settings.custom_views.Context , SettingsActivity .class ) ; de.azapps.mirakel.settings.custom_views.Intent . putExtra ( SettingsActivity . SHOW_FRAGMENT , Settings . DONATE . ordinal ( ) ) ; de.azapps.mirakel.settings.custom_views.Context . startActivity ( de.azapps.mirakel.settings.custom_views.Intent ) ; de.azapps.mirakel.settings.custom_views.DialogInterface . dismiss ( ) ; } } ) . setNeutralButton ( R . string . rate , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.custom_views.DialogInterface , final int int ) { try { de.azapps.mirakel.settings.custom_views.Context . startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING + java.lang.String ) ) ) ; } catch ( final android . android . android android.content.ActivityNotFoundException ) { de.azapps.mirakel.settings.custom_views.Context . startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING + java.lang.String ) ) ) ; } } } ) . setNegativeButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.settings.custom_views.DialogInterface , int int ) { de.azapps.mirakel.settings.custom_views.DialogInterface . dismiss ( ) ; } } ) . show ( ) ; final SharedPreferences de.azapps.mirakel.settings.custom_views.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( de.azapps.mirakel.settings.custom_views.Context ) ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.settings.custom_views.SharedPreferences . edit ( ) ; SharedPreferences.Editor . putInt ( java.lang.String , int ( de.azapps.mirakel.settings.custom_views.Context ) ) ; SharedPreferences.Editor . commit ( ) ; } 
public void void ( DialogInterface de.azapps.mirakel.settings.custom_views.DialogInterface , int int ) { final Intent de.azapps.mirakel.settings.custom_views.Intent = new Intent ( de.azapps.mirakel.settings.custom_views.Context , SettingsActivity .class ) ; de.azapps.mirakel.settings.custom_views.Intent . putExtra ( SettingsActivity . SHOW_FRAGMENT , Settings . DONATE . ordinal ( ) ) ; de.azapps.mirakel.settings.custom_views.Context . startActivity ( de.azapps.mirakel.settings.custom_views.Intent ) ; de.azapps.mirakel.settings.custom_views.DialogInterface . dismiss ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.custom_views.DialogInterface , final int int ) { try { de.azapps.mirakel.settings.custom_views.Context . startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING + java.lang.String ) ) ) ; } catch ( final android . android . android android.content.ActivityNotFoundException ) { de.azapps.mirakel.settings.custom_views.Context . startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING + java.lang.String ) ) ) ; } } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.settings.custom_views.DialogInterface , int int ) { de.azapps.mirakel.settings.custom_views.DialogInterface . dismiss ( ) ; } 
public void ( final Context de.azapps.mirakel.settings.custom_views.Context , final PreferenceScreen de.azapps.mirakel.settings.custom_views.PreferenceScreen ) { super( de.azapps.mirakel.settings.custom_views.Context , null ); de.azapps.mirakel.settings.custom_views.PreferenceScreen = de.azapps.mirakel.settings.custom_views.PreferenceScreen ; } 
@ java.lang.Override protected de.azapps.mirakel.settings.custom_views.View de.azapps.mirakel.settings.custom_views.View ( final ViewGroup de.azapps.mirakel.settings.custom_views.ViewGroup ) { super. onCreateView ( de.azapps.mirakel.settings.custom_views.ViewGroup ) ; de.azapps.mirakel.settings.custom_views.LinearLayout = new LinearLayout ( getContext ( ) ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . setOrientation ( LinearLayout . VERTICAL ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . setLayoutParams ( new LinearLayout . LinearLayout ( ViewGroup . LayoutParams . MATCH_PARENT , ViewGroup . LayoutParams . WRAP_CONTENT ) ) ; de.azapps.mirakel.settings.custom_views.ImageButton = new ImageButton ( getContext ( ) ) ; de.azapps.mirakel.settings.custom_views.ImageButton . setImageResource ( R . drawable . ic_expand_more_36px ) ; de.azapps.mirakel.settings.custom_views.ImageButton . setColorFilter ( ThemeManager . getColor ( R . attr . colorTextGrey ) ) ; de.azapps.mirakel.settings.custom_views.ImageButton . setOnClickListener ( this ) ; de.azapps.mirakel.settings.custom_views.ImageButton . setBackgroundColor ( Color . TRANSPARENT ) ; final LayoutInflater de.azapps.mirakel.settings.custom_views.LayoutInflater = ( LayoutInflater ) getContext ( ) . getSystemService ( Context . LAYOUT_INFLATER_SERVICE ) ; final View de.azapps.mirakel.settings.custom_views.View = de.azapps.mirakel.settings.custom_views.LayoutInflater . inflate ( R . layout . android_standard_preference , de.azapps.mirakel.settings.custom_views.ViewGroup , false ) ; de.azapps.mirakel.settings.custom_views.View . setOnClickListener ( this ) ; ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View . findViewById ( android . R . id . widget_frame ) ) . addView ( de.azapps.mirakel.settings.custom_views.ImageButton ) ; ( ( TextView ) de.azapps.mirakel.settings.custom_views.View . findViewById ( android . R . id . title ) ) . setText ( getTitle ( ) ) ; ( ( TextView ) de.azapps.mirakel.settings.custom_views.View . findViewById ( android . R . id . summary ) ) . setText ( getSummary ( ) ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . addView ( de.azapps.mirakel.settings.custom_views.View ) ; return de.azapps.mirakel.settings.custom_views.View ( de.azapps.mirakel.settings.custom_views.ViewGroup , false ) ; } 
private de.azapps.mirakel.settings.custom_views.View de.azapps.mirakel.settings.custom_views.View ( final ViewGroup de.azapps.mirakel.settings.custom_views.ViewGroup , final boolean boolean ) { if ( ( de.azapps.mirakel.settings.custom_views.LinearLayout != null ) && ( de.azapps.mirakel.settings.custom_views.LinearLayout != null ) ) { de.azapps.mirakel.settings.custom_views.LinearLayout . removeView ( de.azapps.mirakel.settings.custom_views.LinearLayout ) ; } de.azapps.mirakel.settings.custom_views.LinearLayout = new LinearLayout ( getContext ( ) ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . setOrientation ( LinearLayout . VERTICAL ) ; if ( ! boolean ) { LinearLayout.LayoutParams = new LinearLayout . LinearLayout ( ViewGroup . LayoutParams . WRAP_CONTENT , boolean ? ViewGroup . LayoutParams . WRAP_CONTENT : NUMBER ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) { LinearLayout.LayoutParams . setMarginStart ( ( int ) getContext ( ) . getResources ( ) . getDimension ( R . dimen . padding_settings_card ) ) ; } else { LinearLayout.LayoutParams . leftMargin = ( int ) getContext ( ) . getResources ( ) . getDimension ( R . dimen . padding_settings_card ) ; } } if ( LinearLayout.LayoutParams == null ) { return de.azapps.mirakel.settings.custom_views.LinearLayout ; } de.azapps.mirakel.settings.custom_views.LinearLayout . setLayoutParams ( LinearLayout.LayoutParams ) ; void ( java.util.List<de.azapps.mirakel.settings.custom_views.Preference> ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . addView ( de.azapps.mirakel.settings.custom_views.LinearLayout ) ; return de.azapps.mirakel.settings.custom_views.LinearLayout ; } 
private void void ( final @ NonNull java.util.List<de.azapps.mirakel.settings.custom_views.Preference> < Preference > java.util.List<de.azapps.mirakel.settings.custom_views.Preference> ) { for ( final Preference de.azapps.mirakel.settings.custom_views.Preference : java.util.List<de.azapps.mirakel.settings.custom_views.Preference> ) { final OnPreferenceChangeListener de.azapps.mirakel.settings.custom_views.OnPreferenceChangeListener = de.azapps.mirakel.settings.custom_views.Preference . getOnPreferenceChangeListener ( ) ; de.azapps.mirakel.settings.custom_views.Preference . setOnPreferenceChangeListener ( new OnPreferenceChangeListener ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.custom_views.Preference , java.lang.Object java.lang.Object ) { final boolean boolean = ( de.azapps.mirakel.settings.custom_views.OnPreferenceChangeListener != null ) && de.azapps.mirakel.settings.custom_views.OnPreferenceChangeListener . onPreferenceChange ( de.azapps.mirakel.settings.custom_views.Preference , java.lang.Object ) ; if ( de.azapps.mirakel.settings.custom_views.LinearLayout != null ) { onBindView ( de.azapps.mirakel.settings.custom_views.View ( null , true ) ) ; } return boolean ; } } ) ; final View de.azapps.mirakel.settings.custom_views.View = de.azapps.mirakel.settings.custom_views.Preference . getView ( null , null ) ; de.azapps.mirakel.settings.custom_views.View . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.settings.custom_views.View ) { final java.lang.Integer java.lang.Integer = PreferencesHelper . findPreferenceScreenForPreference ( de.azapps.mirakel.settings.custom_views.Preference . getKey ( ) , de.azapps.mirakel.settings.custom_views.PreferenceScreen ) ; if ( java.lang.Integer != null ) { de.azapps.mirakel.settings.custom_views.PreferenceScreen . onItemClick ( null , null , java.lang.Integer , NUMBER ) ; } if ( ! ( de.azapps.mirakel.settings.custom_views.Preference instanceof DialogPreference ) ) { notifyChanged ( ) ; } } } ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . addView ( de.azapps.mirakel.settings.custom_views.View ) ; if ( de.azapps.mirakel.settings.custom_views.Preference instanceof PreferenceGroup ) { final java.util.List<de.azapps.mirakel.settings.custom_views.Preference> < Preference > java.util.List<de.azapps.mirakel.settings.custom_views.Preference> = new java.util.ArrayList <> ( ( ( PreferenceGroup ) de.azapps.mirakel.settings.custom_views.Preference ) . getPreferenceCount ( ) ) ; for ( int int = NUMBER ; int < ( ( PreferenceGroup ) de.azapps.mirakel.settings.custom_views.Preference ) . getPreferenceCount ( ) ; int ++ ) { java.util.List<de.azapps.mirakel.settings.custom_views.Preference> . add ( ( ( PreferenceGroup ) de.azapps.mirakel.settings.custom_views.Preference ) . getPreference ( int ) ) ; } void ( java.util.List<de.azapps.mirakel.settings.custom_views.Preference> ) ; } } } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.custom_views.Preference , java.lang.Object java.lang.Object ) { final boolean boolean = ( de.azapps.mirakel.settings.custom_views.OnPreferenceChangeListener != null ) && de.azapps.mirakel.settings.custom_views.OnPreferenceChangeListener . onPreferenceChange ( de.azapps.mirakel.settings.custom_views.Preference , java.lang.Object ) ; if ( de.azapps.mirakel.settings.custom_views.LinearLayout != null ) { onBindView ( de.azapps.mirakel.settings.custom_views.View ( null , true ) ) ; } return boolean ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.custom_views.View ) { final java.lang.Integer java.lang.Integer = PreferencesHelper . findPreferenceScreenForPreference ( de.azapps.mirakel.settings.custom_views.Preference . getKey ( ) , de.azapps.mirakel.settings.custom_views.PreferenceScreen ) ; if ( java.lang.Integer != null ) { de.azapps.mirakel.settings.custom_views.PreferenceScreen . onItemClick ( null , null , java.lang.Integer , NUMBER ) ; } if ( ! ( de.azapps.mirakel.settings.custom_views.Preference instanceof DialogPreference ) ) { notifyChanged ( ) ; } } 
private void void ( final int int , final int int ) { final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator = new ValueAnimator ( ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . setIntValues ( int , int ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . setDuration ( NUMBER ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . setInterpolator ( new LinearInterpolator ( ) ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . addUpdateListener ( new ValueAnimator . ValueAnimator ( ) { @ java.lang.Override public void void ( final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator ) { if ( LinearLayout.LayoutParams != null ) { LinearLayout.LayoutParams . height = ( int ) de.azapps.mirakel.settings.custom_views.ValueAnimator . getAnimatedValue ( ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . setLayoutParams ( LinearLayout.LayoutParams ) ; } } } ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . addListener ( new Animator . Animator ( ) { @ java.lang.Override public void void ( Animator de.azapps.mirakel.settings.custom_views.Animator ) {            } @ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) { if ( int == NUMBER ) { de.azapps.mirakel.settings.custom_views.LinearLayout . setVisibility ( View . GONE ) ; } } @ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) {            } @ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) {            } } ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . start ( ) ; } 
@ java.lang.Override public void void ( final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator ) { if ( LinearLayout.LayoutParams != null ) { LinearLayout.LayoutParams . height = ( int ) de.azapps.mirakel.settings.custom_views.ValueAnimator . getAnimatedValue ( ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . setLayoutParams ( LinearLayout.LayoutParams ) ; } } 
@ java.lang.Override public void void ( Animator de.azapps.mirakel.settings.custom_views.Animator ) {            } 
@ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) { if ( int == NUMBER ) { de.azapps.mirakel.settings.custom_views.LinearLayout . setVisibility ( View . GONE ) ; } } 
@ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) {            } 
@ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) {            } 
public void void ( final boolean boolean ) { if ( boolean != boolean ) { void ( null ) ; boolean = boolean ; } } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.custom_views.View ) { if ( ( de.azapps.mirakel.settings.custom_views.LinearLayout == null ) || ( de.azapps.mirakel.settings.custom_views.ImageButton == null ) ) { return; } final int int = View . MeasureSpec . makeMeasureSpec ( NUMBER , View . MeasureSpec . UNSPECIFIED ) ; final int int = View . MeasureSpec . makeMeasureSpec ( NUMBER , View . MeasureSpec . UNSPECIFIED ) ; de.azapps.mirakel.settings.custom_views.LinearLayout . measure ( int , int ) ; if ( boolean ) { void ( de.azapps.mirakel.settings.custom_views.LinearLayout . getMeasuredHeight ( ) , NUMBER ) ; de.azapps.mirakel.settings.custom_views.ImageButton . setImageResource ( R . drawable . ic_expand_more_36px ) ; } else { de.azapps.mirakel.settings.custom_views.LinearLayout . setVisibility ( View . VISIBLE ) ; void ( NUMBER , de.azapps.mirakel.settings.custom_views.LinearLayout . getMeasuredHeight ( ) ) ; de.azapps.mirakel.settings.custom_views.ImageButton . setImageResource ( R . drawable . ic_expand_less_36px ) ; } boolean = ! boolean ; } 
public void void ( final @ NonNull Preference de.azapps.mirakel.settings.custom_views.Preference ) { java.util.List<de.azapps.mirakel.settings.custom_views.Preference> . add ( de.azapps.mirakel.settings.custom_views.Preference ) ; addPreference ( de.azapps.mirakel.settings.custom_views.Preference ) ; de.azapps.mirakel.settings.custom_views.View ( null , true ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { switch ( this ) { case de.azapps.mirakel.settings.custom_views.Settings : return AboutSettingsFragment .class . java.lang.String ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return BackupSettingsFragment .class . java.lang.String ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return DevSettingsFragment .class . java.lang.String ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return NotificationSettingsFragment .class . java.lang.String ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return UISettingsFragment .class . java.lang.String ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return DonationFragmentWrapper .class . java.lang.String ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return CreditsFragment .class . java.lang.String ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : break; case de.azapps.mirakel.settings.custom_views.Settings : break; case de.azapps.mirakel.settings.custom_views.Settings : return SemanticFragment .class . java.lang.String ( ) ; } return super. java.lang.String ( ) ; } 
public de.azapps.mirakel.settings.custom_views.Fragment de.azapps.mirakel.settings.custom_views.Fragment ( ) { switch ( this ) { case de.azapps.mirakel.settings.custom_views.Settings : return new AboutSettingsFragment ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return new BackupSettingsFragment ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return new DevSettingsFragment ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return new NotificationSettingsFragment ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return new UISettingsFragment ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return new CreditsFragment ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : return DonationFragmentWrapper . newInstance ( ) ; case de.azapps.mirakel.settings.custom_views.Settings : break; case de.azapps.mirakel.settings.custom_views.Settings : break; case de.azapps.mirakel.settings.custom_views.Settings : return new SemanticFragment ( ) ; } return new UISettingsFragment ( ) ; } 
public static void void ( @ NonNull final Context de.azapps.mirakel.settings.custom_views.Context ) { de.azapps.mirakel.settings.custom_views.Settings . de.azapps.mirakel.settings.custom_views.Context = de.azapps.mirakel.settings.custom_views.Context ; } 
void ( final int int ) { this . int = int ; de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> = absent ( ) ; } 
void ( final int int , final int int ) { this . int = int ; this . de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> = of ( int ) ; } 
public void ( final Context de.azapps.mirakel.settings.custom_views.Context ) { super( de.azapps.mirakel.settings.custom_views.Context ); int = ( int ) de.azapps.mirakel.settings.custom_views.Context . getResources ( ) . getDimension ( R . dimen . padding_settings_header_icon ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.custom_views.View de.azapps.mirakel.settings.custom_views.View ( final View de.azapps.mirakel.settings.custom_views.View , final ViewGroup de.azapps.mirakel.settings.custom_views.ViewGroup ) { final View de.azapps.mirakel.settings.custom_views.View = super. getView ( de.azapps.mirakel.settings.custom_views.View , de.azapps.mirakel.settings.custom_views.ViewGroup ) ; final ImageView de.azapps.mirakel.settings.custom_views.ImageView = ( ImageView ) de.azapps.mirakel.settings.custom_views.View . findViewById ( android . R . id . icon ) ; de.azapps.mirakel.settings.custom_views.ImageView . setColorFilter ( ThemeManager . getAccentThemeColor ( ) ) ; de.azapps.mirakel.settings.custom_views.ImageView . setPadding ( int , int , int , int ) ; final TextView de.azapps.mirakel.settings.custom_views.TextView = ( TextView ) de.azapps.mirakel.settings.custom_views.View . findViewById ( android . R . id . title ) ; de.azapps.mirakel.settings.custom_views.TextView . setTextColor ( ThemeManager . getColor ( R . attr . colorTextBlack ) ) ; de.azapps.mirakel.settings.custom_views.TextView . setTypeface ( Typeface . DEFAULT ) ; de.azapps.mirakel.settings.custom_views.TextView . setTextSize ( TypedValue . COMPLEX_UNIT_SP , NUMBER ) ; return de.azapps.mirakel.settings.custom_views.View ; } 
de.azapps.mirakel.settings.custom_views.Preference de.azapps.mirakel.settings.custom_views.Preference ( final @ NonNull OnItemClickedListener < de.azapps.mirakel.settings.custom_views.Settings > de.azapps.mirakel.settings.custom_views.OnItemClickedListener<de.azapps.mirakel.settings.custom_views.Settings> ) { final Preference de.azapps.mirakel.settings.custom_views.Preference = new de.azapps.mirakel.settings.custom_views.Settings.SettingsHeader ( de.azapps.mirakel.settings.custom_views.Context ) ; de.azapps.mirakel.settings.custom_views.Preference . setKey ( java.lang.String ( ) ) ; de.azapps.mirakel.settings.custom_views.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.custom_views.Preference ) { de.azapps.mirakel.settings.custom_views.OnItemClickedListener<de.azapps.mirakel.settings.custom_views.Settings> . onItemSelected ( de.azapps.mirakel.settings.custom_views.Settings .this ) ; return true ; } } ) ; if ( de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.settings.custom_views.Preference . setIcon ( de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> . get ( ) ) ; } de.azapps.mirakel.settings.custom_views.Preference . setTitle ( int ) ; return de.azapps.mirakel.settings.custom_views.Preference ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.custom_views.Preference ) { de.azapps.mirakel.settings.custom_views.OnItemClickedListener<de.azapps.mirakel.settings.custom_views.Settings> . onItemSelected ( de.azapps.mirakel.settings.custom_views.Settings .this ) ; return true ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return de.azapps.mirakel.settings.custom_views.Context . getString ( int ) ; } 
@ java.lang.Override public void void ( ) { } 
@ java.lang.Override public void void ( ) { } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public void void ( final Parcel de.azapps.mirakel.settings.custom_views.Parcel , final int int ) { de.azapps.mirakel.settings.custom_views.Parcel . writeInt ( this . int ) ; OptionalUtils . writeToParcel ( de.azapps.mirakel.settings.custom_views.Parcel , de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> ) ; } 
private void ( final Parcel de.azapps.mirakel.settings.custom_views.Parcel ) { this . int = de.azapps.mirakel.settings.custom_views.Parcel . readInt ( ) ; this . de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> = OptionalUtils . readFromParcel ( de.azapps.mirakel.settings.custom_views.Parcel , java.lang.Integer .class ) ; } 
public de.azapps.mirakel.settings.custom_views.Settings de.azapps.mirakel.settings.custom_views.Settings ( Parcel de.azapps.mirakel.settings.custom_views.Parcel ) { return de.azapps.mirakel.settings.custom_views.Settings ; } 
public de.azapps.mirakel.settings.custom_views.Settings [] de.azapps.mirakel.settings.custom_views.Settings[] ( int int ) { return new de.azapps.mirakel.settings.custom_views.Settings [ int ] ; } 
@ NonNull public de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> < java.lang.Integer > de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> ( ) { return de.azapps.mirakel.settings.custom_views.Optional<java.lang.Integer> ; } 
public de.azapps.mirakel.settings.custom_views.Intent de.azapps.mirakel.settings.custom_views.Intent ( final @ NonNull Context de.azapps.mirakel.settings.custom_views.Context ) { switch ( this ) { case de.azapps.mirakel.settings.custom_views.Settings : return new Intent ( de.azapps.mirakel.settings.custom_views.Context , AccountSettingsActivity .class ) ; case de.azapps.mirakel.settings.custom_views.Settings : return new Intent ( de.azapps.mirakel.settings.custom_views.Context , SpecialListListActivity .class ) ; case de.azapps.mirakel.settings.custom_views.Settings : case de.azapps.mirakel.settings.custom_views.Settings : case de.azapps.mirakel.settings.custom_views.Settings : case de.azapps.mirakel.settings.custom_views.Settings : case de.azapps.mirakel.settings.custom_views.Settings : case de.azapps.mirakel.settings.custom_views.Settings : case de.azapps.mirakel.settings.custom_views.Settings : case de.azapps.mirakel.settings.custom_views.Settings : return new Intent ( de.azapps.mirakel.settings.custom_views.Context , SettingsActivity .class ) ; } throw new java.lang.IllegalArgumentException ( STRING ) ; } 
public static de.azapps.mirakel.settings.custom_views.PreferenceScreen de.azapps.mirakel.settings.custom_views.PreferenceScreen ( final @ NonNull PreferenceScreen de.azapps.mirakel.settings.custom_views.PreferenceScreen , final @ NonNull OnItemClickedListener < de.azapps.mirakel.settings.custom_views.Settings > de.azapps.mirakel.settings.custom_views.OnItemClickedListener<de.azapps.mirakel.settings.custom_views.Settings> ) { for ( final java.util.Map . java.util.Map.Entry<java.lang.Integer,java.util.List<de.azapps.mirakel.settings.custom_views.Settings>> < java.lang.Integer , java.util.List<de.azapps.mirakel.settings.custom_views.Settings> < de.azapps.mirakel.settings.custom_views.Settings > > java.util.Map.Entry<java.lang.Integer,java.util.List<de.azapps.mirakel.settings.custom_views.Settings>> : java.util.Map<java.lang.Integer,java.util.List<de.azapps.mirakel.settings.custom_views.Settings>> . java.util.Set<java.util.Map.Entry<java.lang.Integer,java.util.List<de.azapps.mirakel.settings.custom_views.Settings>>> ( ) ) { final PreferenceCategory de.azapps.mirakel.settings.custom_views.PreferenceCategory = new PreferenceCategory ( de.azapps.mirakel.settings.custom_views.Context ) ; de.azapps.mirakel.settings.custom_views.PreferenceScreen . addPreference ( de.azapps.mirakel.settings.custom_views.PreferenceCategory ) ; de.azapps.mirakel.settings.custom_views.PreferenceCategory . setTitle ( java.util.Map.Entry<java.lang.Integer,java.util.List<de.azapps.mirakel.settings.custom_views.Settings>> . java.lang.Integer ( ) ) ; for ( final de.azapps.mirakel.settings.custom_views.Settings de.azapps.mirakel.settings.custom_views.Settings : java.util.Map.Entry<java.lang.Integer,java.util.List<de.azapps.mirakel.settings.custom_views.Settings>> . java.util.List<de.azapps.mirakel.settings.custom_views.Settings> ( ) ) { if ( de.azapps.mirakel.settings.custom_views.Settings == de.azapps.mirakel.settings.custom_views.Settings && ! MirakelCommonPreferences . isEnabledDebugMenu ( ) ) { continue; } de.azapps.mirakel.settings.custom_views.PreferenceCategory . addItemFromInflater ( de.azapps.mirakel.settings.custom_views.Settings . de.azapps.mirakel.settings.custom_views.Preference ( de.azapps.mirakel.settings.custom_views.OnItemClickedListener<de.azapps.mirakel.settings.custom_views.Settings> ) ) ; } } return de.azapps.mirakel.settings.custom_views.PreferenceScreen ; } 
public void ( final Context de.azapps.mirakel.settings.custom_views.Context , final AttributeSet de.azapps.mirakel.settings.custom_views.AttributeSet ) { super( de.azapps.mirakel.settings.custom_views.Context , de.azapps.mirakel.settings.custom_views.AttributeSet ); } 
@ java.lang.Override protected void void ( final AlertDialog . AlertDialog AlertDialog.Builder ) { super. onPrepareDialogBuilder ( AlertDialog.Builder ) ; final View de.azapps.mirakel.settings.custom_views.View = LayoutInflater . from ( getContext ( ) ) . inflate ( R . layout . slider_wrapper , null ) ; de.azapps.mirakel.settings.custom_views.Slider = ( Slider ) de.azapps.mirakel.settings.custom_views.View . findViewById ( R . id . progress_bar ) ; de.azapps.mirakel.settings.custom_views.Slider . setMax ( int ) ; de.azapps.mirakel.settings.custom_views.Slider . setProgress ( int ) ; AlertDialog.Builder . setView ( de.azapps.mirakel.settings.custom_views.View ) ; } 
public void void ( final int int ) { this . int = int ; if ( de.azapps.mirakel.settings.custom_views.Slider != null ) { de.azapps.mirakel.settings.custom_views.Slider . setProgress ( int ) ; } } 
public void void ( final int int ) { this . int = int ; if ( de.azapps.mirakel.settings.custom_views.Slider != null ) { de.azapps.mirakel.settings.custom_views.Slider . setMax ( int ) ; } } 
@ java.lang.Override protected void void ( final boolean boolean ) { super. onDialogClosed ( boolean ) ; if ( boolean && ( de.azapps.mirakel.settings.custom_views.Slider != null ) ) { int = de.azapps.mirakel.settings.custom_views.Slider . getProgress ( ) ; callChangeListener ( de.azapps.mirakel.settings.custom_views.Slider . getProgress ( ) ) ; } } 
@ java.lang.Override protected de.azapps.mirakel.settings.custom_views.View de.azapps.mirakel.settings.custom_views.View ( final ViewGroup de.azapps.mirakel.settings.custom_views.ViewGroup ) { return super. onCreateView ( de.azapps.mirakel.settings.custom_views.ViewGroup ) ; } 
public void ( final Context de.azapps.mirakel.settings.custom_views.Context ) { this( de.azapps.mirakel.settings.custom_views.Context , null ); } 
public void ( final Context de.azapps.mirakel.settings.custom_views.Context , final AttributeSet de.azapps.mirakel.settings.custom_views.AttributeSet ) { super( de.azapps.mirakel.settings.custom_views.Context , de.azapps.mirakel.settings.custom_views.AttributeSet ); requestDisallowInterceptTouchEvent ( true ) ; setWillNotDraw ( true ) ; RelativeLayout.LayoutParams = new RelativeLayout . RelativeLayout ( NUMBER , ViewGroup . LayoutParams . MATCH_PARENT ) ; RelativeLayout.LayoutParams . addRule ( RelativeLayout . CENTER_IN_PARENT ) ; boolean = ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) && ( de.azapps.mirakel.settings.custom_views.Context . getResources ( ) . getConfiguration ( ) . getLayoutDirection ( ) == View . LAYOUT_DIRECTION_RTL ) ; } 
@ java.lang.Override public boolean boolean ( @ NonNull final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent ) { switch ( de.azapps.mirakel.settings.custom_views.MotionEvent . getAction ( ) ) { case MotionEvent . ACTION_DOWN : if ( boolean ( de.azapps.mirakel.settings.custom_views.MotionEvent ) ) { boolean = false ; de.azapps.mirakel.settings.custom_views.VelocityTracker . addMovement ( de.azapps.mirakel.settings.custom_views.MotionEvent ) ; } return false ; case MotionEvent . ACTION_MOVE : if ( boolean ( de.azapps.mirakel.settings.custom_views.MotionEvent , ( int ) de.azapps.mirakel.settings.custom_views.MotionEvent . getX ( ) ) ) { return ! boolean ( de.azapps.mirakel.settings.custom_views.MotionEvent , ( int ) de.azapps.mirakel.settings.custom_views.MotionEvent . getX ( ) ) ; } break; case MotionEvent . ACTION_UP : if ( de.azapps.mirakel.settings.custom_views.View != null ) { if ( boolean ) { ( ( Button ) de.azapps.mirakel.settings.custom_views.View . findViewById ( R . id . undo ) ) . performClick ( ) ; } de.azapps.mirakel.settings.custom_views.View = null ; } break; default: break; } return false ; } 
private int int ( @ NonNull final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent ) { final double double = ( double ) ( de.azapps.mirakel.settings.custom_views.MotionEvent . getX ( ) - float ) ; final double double = ( double ) ( de.azapps.mirakel.settings.custom_views.MotionEvent . getY ( ) - float ) ; return ( int ) java.lang.Math . double ( ( double * double ) + ( double * double ) ) ; } 
boolean boolean ( @ NonNull final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent ) { de.azapps.mirakel.settings.custom_views.VelocityTracker . clear ( ) ; de.azapps.mirakel.settings.custom_views.View = null ; for ( int int = NUMBER ; int < getChildCount ( ) ; int ++ ) { final View de.azapps.mirakel.settings.custom_views.View = getChildAt ( int ) ; final Rect de.azapps.mirakel.settings.custom_views.Rect = new Rect ( de.azapps.mirakel.settings.custom_views.View . getLeft ( ) , de.azapps.mirakel.settings.custom_views.View . getTop ( ) , de.azapps.mirakel.settings.custom_views.View . getRight ( ) , de.azapps.mirakel.settings.custom_views.View . getBottom ( ) ) ; if ( de.azapps.mirakel.settings.custom_views.Rect . contains ( ( int ) de.azapps.mirakel.settings.custom_views.MotionEvent . getX ( ) , ( int ) de.azapps.mirakel.settings.custom_views.MotionEvent . getY ( ) ) ) { de.azapps.mirakel.settings.custom_views.View = de.azapps.mirakel.settings.custom_views.View ; int = int ; break; } } if ( ! ( de.azapps.mirakel.settings.custom_views.View instanceof ViewSwitcher ) ) { de.azapps.mirakel.settings.custom_views.View = null ; return false ; } float = de.azapps.mirakel.settings.custom_views.MotionEvent . getX ( ) ; float = de.azapps.mirakel.settings.custom_views.MotionEvent . getY ( ) ; return boolean ( de.azapps.mirakel.settings.custom_views.View ) ; } 
private static boolean boolean ( @ Nullable final View de.azapps.mirakel.settings.custom_views.View ) { if ( de.azapps.mirakel.settings.custom_views.View == null ) { return false ; } if ( de.azapps.mirakel.settings.custom_views.View . getTag ( int ) != null ) { return true ; } return ( de.azapps.mirakel.settings.custom_views.View instanceof LinearLayout ) && ( ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildCount ( ) > NUMBER ) && ( ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildAt ( NUMBER ) . getTag ( int ) != null ) ; } 
@ java.lang.Override public boolean boolean ( @ NonNull final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent ) { if ( super. onTouchEvent ( de.azapps.mirakel.settings.custom_views.MotionEvent ) ) { return true ; } de.azapps.mirakel.settings.custom_views.VelocityTracker . addMovement ( de.azapps.mirakel.settings.custom_views.MotionEvent ) ; de.azapps.mirakel.settings.custom_views.VelocityTracker . computeCurrentVelocity ( NUMBER ) ; final int int = ( int ) de.azapps.mirakel.settings.custom_views.MotionEvent . getRawX ( ) ; switch ( MotionEvent . obtain ( de.azapps.mirakel.settings.custom_views.MotionEvent ) . getActionMasked ( ) ) { case MotionEvent . ACTION_DOWN : break; case MotionEvent . ACTION_CANCEL : case MotionEvent . ACTION_UP : if ( boolean ( de.azapps.mirakel.settings.custom_views.MotionEvent , int ) ) { return false ; } break; case MotionEvent . ACTION_MOVE : if ( boolean ( de.azapps.mirakel.settings.custom_views.MotionEvent , int ) && boolean ( de.azapps.mirakel.settings.custom_views.MotionEvent , int ) ) { return false ; } break; default: return false ; } return true ; } 
private boolean boolean ( @ NonNull final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent , final int int ) { if ( ( boolean && de.azapps.mirakel.settings.custom_views.View != null ) || ( boolean ( de.azapps.mirakel.settings.custom_views.View ) && ! ( ( ViewConfiguration . getTapTimeout ( ) < ( de.azapps.mirakel.settings.custom_views.MotionEvent . getEventTime ( ) - de.azapps.mirakel.settings.custom_views.MotionEvent . getDownTime ( ) ) ) || ( ViewConfiguration . get ( getContext ( ) ) . getScaledTouchSlop ( ) < int ( de.azapps.mirakel.settings.custom_views.MotionEvent ) ) ) ) ) { void ( de.azapps.mirakel.settings.custom_views.View , NUMBER ) ; if ( boolean && ! boolean ) { ( ( Button ) de.azapps.mirakel.settings.custom_views.View . findViewById ( R . id . undo ) ) . performClick ( ) ; } else { de.azapps.mirakel.settings.custom_views.View . onTouchEvent ( de.azapps.mirakel.settings.custom_views.MotionEvent ) ; } de.azapps.mirakel.settings.custom_views.View = null ; return true ; } synchronized ( this ) { java.lang.Thread = new java.lang.Thread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { try { java.lang.Thread . void ( NUMBER ) ; } catch ( final java.lang.InterruptedException java.lang.InterruptedException ) { return; } synchronized ( de.azapps.mirakel.settings.custom_views.SwipeLinearLayout .this ) { if ( boolean && ( java.lang.Thread != null ) && ! java.lang.Thread . boolean ( ) && ( de.azapps.mirakel.settings.custom_views.View != null ) && ! boolean ) { de.azapps.mirakel.settings.custom_views.View . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( ( int ) ( int - float ) , NUMBER , new DecelerateInterpolator ( ) , new ValueAnimator . ValueAnimator ( ) { @ java.lang.Override public void void ( final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator ) { void ( de.azapps.mirakel.settings.custom_views.View , ( java.lang.Integer ) de.azapps.mirakel.settings.custom_views.ValueAnimator . getAnimatedValue ( ) ) ; } } , new de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.EndMoveAnimatorListener ( new de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd ( ) { @ java.lang.Override public void void ( @ NonNull final Animator de.azapps.mirakel.settings.custom_views.Animator ) { de.azapps.mirakel.settings.custom_views.View = null ; if ( getParent ( ) != null ) { getParent ( ) . requestDisallowInterceptTouchEvent ( false ) ; } } } ) ) ; } } ) ; java.lang.Thread = null ; } } } } ) ; java.lang.Thread . void ( ) ; } return false ; } 
@ java.lang.Override public void void ( ) { try { java.lang.Thread . void ( NUMBER ) ; } catch ( final java.lang.InterruptedException java.lang.InterruptedException ) { return; } synchronized ( de.azapps.mirakel.settings.custom_views.SwipeLinearLayout .this ) { if ( boolean && ( java.lang.Thread != null ) && ! java.lang.Thread . boolean ( ) && ( de.azapps.mirakel.settings.custom_views.View != null ) && ! boolean ) { de.azapps.mirakel.settings.custom_views.View . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( ( int ) ( int - float ) , NUMBER , new DecelerateInterpolator ( ) , new ValueAnimator . ValueAnimator ( ) { @ java.lang.Override public void void ( final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator ) { void ( de.azapps.mirakel.settings.custom_views.View , ( java.lang.Integer ) de.azapps.mirakel.settings.custom_views.ValueAnimator . getAnimatedValue ( ) ) ; } } , new de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.EndMoveAnimatorListener ( new de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd ( ) { @ java.lang.Override public void void ( @ NonNull final Animator de.azapps.mirakel.settings.custom_views.Animator ) { de.azapps.mirakel.settings.custom_views.View = null ; if ( getParent ( ) != null ) { getParent ( ) . requestDisallowInterceptTouchEvent ( false ) ; } } } ) ) ; } } ) ; java.lang.Thread = null ; } } } 
@ java.lang.Override public void void ( ) { void ( ( int ) ( int - float ) , NUMBER , new DecelerateInterpolator ( ) , new ValueAnimator . ValueAnimator ( ) { @ java.lang.Override public void void ( final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator ) { void ( de.azapps.mirakel.settings.custom_views.View , ( java.lang.Integer ) de.azapps.mirakel.settings.custom_views.ValueAnimator . getAnimatedValue ( ) ) ; } } , new de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.EndMoveAnimatorListener ( new de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd ( ) { @ java.lang.Override public void void ( @ NonNull final Animator de.azapps.mirakel.settings.custom_views.Animator ) { de.azapps.mirakel.settings.custom_views.View = null ; if ( getParent ( ) != null ) { getParent ( ) . requestDisallowInterceptTouchEvent ( false ) ; } } } ) ) ; } 
@ java.lang.Override public void void ( final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator ) { void ( de.azapps.mirakel.settings.custom_views.View , ( java.lang.Integer ) de.azapps.mirakel.settings.custom_views.ValueAnimator . getAnimatedValue ( ) ) ; } 
@ java.lang.Override public void void ( @ NonNull final Animator de.azapps.mirakel.settings.custom_views.Animator ) { de.azapps.mirakel.settings.custom_views.View = null ; if ( getParent ( ) != null ) { getParent ( ) . requestDisallowInterceptTouchEvent ( false ) ; } } 
private boolean boolean ( @ NonNull final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent , final int int ) { if ( getParent ( ) == null ) { return false ; } boolean = true ; getParent ( ) . requestDisallowInterceptTouchEvent ( true ) ; boolean ( ) ; void ( de.azapps.mirakel.settings.custom_views.View , ( int ) ( int - float ) ) ; if ( ( de.azapps.mirakel.settings.custom_views.View != null ) && ( int ( de.azapps.mirakel.settings.custom_views.MotionEvent ) > ( int / NUMBER ) ) && ( java.lang.Math . int ( de.azapps.mirakel.settings.custom_views.VelocityTracker . getXVelocity ( ) ) > int ) ) { if ( de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnItemRemoveListener> . isPresent ( ) ) { boolean = true ; void ( de.azapps.mirakel.settings.custom_views.View . getMeasuredHeight ( ) , NUMBER , new LinearInterpolator ( ) , new ValueAnimator . ValueAnimator ( ) { @ java.lang.Override public void void ( final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator ) { if ( de.azapps.mirakel.settings.custom_views.View != null ) { final ViewGroup . ViewGroup ViewGroup.LayoutParams = de.azapps.mirakel.settings.custom_views.View . getLayoutParams ( ) ; params . height = ( int ) de.azapps.mirakel.settings.custom_views.ValueAnimator . getAnimatedValue ( ) ; de.azapps.mirakel.settings.custom_views.View . setLayoutParams ( ViewGroup.LayoutParams ) ; } } } , new de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.EndMoveAnimatorListener ( new de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd ( ) { @ java.lang.Override public void void ( @ NonNull final Animator de.azapps.mirakel.settings.custom_views.Animator ) { if ( de.azapps.mirakel.settings.custom_views.View != null ) { de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnItemRemoveListener> . get ( ) . onRemove ( NUMBER , int ) ; removeView ( de.azapps.mirakel.settings.custom_views.View ) ; getParent ( ) . requestDisallowInterceptTouchEvent ( false ) ; de.azapps.mirakel.settings.custom_views.View = null ; boolean = false ; } } } ) ) ; } else if ( de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnUndoListener> . isPresent ( ) && ( de.azapps.mirakel.settings.custom_views.View instanceof ViewSwitcher ) ) { final ViewSwitcher de.azapps.mirakel.settings.custom_views.ViewSwitcher = ( ViewSwitcher ) de.azapps.mirakel.settings.custom_views.View ; boolean = true ; final int int = int ; final java.util.Timer java.util.Timer = new java.util.Timer ( ) ; de.azapps.mirakel.settings.custom_views.ViewSwitcher . findViewById ( R . id . undo ) . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.settings.custom_views.View ) { java.util.Timer . void ( ) ; java.util.Timer . int ( ) ; de.azapps.mirakel.settings.custom_views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; void ( de.azapps.mirakel.settings.custom_views.ViewSwitcher , NUMBER ) ; boolean = false ; } } ) ; de.azapps.mirakel.settings.custom_views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; java.util.Timer . void ( new java.util.TimerTask ( ) { @ java.lang.Override public void void ( ) { post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { removeView ( de.azapps.mirakel.settings.custom_views.ViewSwitcher ) ; if ( de.azapps.mirakel.settings.custom_views.View == de.azapps.mirakel.settings.custom_views.ViewSwitcher ) { de.azapps.mirakel.settings.custom_views.View = null ; boolean = false ; } de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnUndoListener> . get ( ) . onRemove ( int ) ; de.azapps.mirakel.settings.custom_views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; boolean = false ; } } ) ; } } , NUMBER ) ; } return true ; } return false ; } 
@ java.lang.Override public void void ( final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator ) { if ( de.azapps.mirakel.settings.custom_views.View != null ) { final ViewGroup . ViewGroup ViewGroup.LayoutParams = de.azapps.mirakel.settings.custom_views.View . getLayoutParams ( ) ; params . height = ( int ) de.azapps.mirakel.settings.custom_views.ValueAnimator . getAnimatedValue ( ) ; de.azapps.mirakel.settings.custom_views.View . setLayoutParams ( ViewGroup.LayoutParams ) ; } } 
@ java.lang.Override public void void ( @ NonNull final Animator de.azapps.mirakel.settings.custom_views.Animator ) { if ( de.azapps.mirakel.settings.custom_views.View != null ) { de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnItemRemoveListener> . get ( ) . onRemove ( NUMBER , int ) ; removeView ( de.azapps.mirakel.settings.custom_views.View ) ; getParent ( ) . requestDisallowInterceptTouchEvent ( false ) ; de.azapps.mirakel.settings.custom_views.View = null ; boolean = false ; } } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.custom_views.View ) { java.util.Timer . void ( ) ; java.util.Timer . int ( ) ; de.azapps.mirakel.settings.custom_views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; void ( de.azapps.mirakel.settings.custom_views.ViewSwitcher , NUMBER ) ; boolean = false ; } 
@ java.lang.Override public void void ( ) { post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { removeView ( de.azapps.mirakel.settings.custom_views.ViewSwitcher ) ; if ( de.azapps.mirakel.settings.custom_views.View == de.azapps.mirakel.settings.custom_views.ViewSwitcher ) { de.azapps.mirakel.settings.custom_views.View = null ; boolean = false ; } de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnUndoListener> . get ( ) . onRemove ( int ) ; de.azapps.mirakel.settings.custom_views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; boolean = false ; } } ) ; } 
@ java.lang.Override public void void ( ) { removeView ( de.azapps.mirakel.settings.custom_views.ViewSwitcher ) ; if ( de.azapps.mirakel.settings.custom_views.View == de.azapps.mirakel.settings.custom_views.ViewSwitcher ) { de.azapps.mirakel.settings.custom_views.View = null ; boolean = false ; } de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnUndoListener> . get ( ) . onRemove ( int ) ; de.azapps.mirakel.settings.custom_views.ViewSwitcher . setDisplayedChild ( NUMBER ) ; boolean = false ; } 
private boolean boolean ( @ NonNull final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent , final int int ) { if ( ! boolean ( de.azapps.mirakel.settings.custom_views.View ) ) { return false ; } final float float = java.lang.Math . float ( int - float ) ; final float float = java.lang.Math . int ( de.azapps.mirakel.settings.custom_views.MotionEvent . getY ( ) - float ) ; if ( float < ( NUMBER * float ) ) { return false ; } if ( float < ( int / NUMBER ) ) { return false ; } if ( ViewConfiguration . getTapTimeout ( ) > java.lang.Math . int ( de.azapps.mirakel.settings.custom_views.MotionEvent . getEventTime ( ) - de.azapps.mirakel.settings.custom_views.MotionEvent . getDownTime ( ) ) ) { return false ; } if ( ViewConfiguration . get ( getContext ( ) ) . getScaledTouchSlop ( ) > int ( de.azapps.mirakel.settings.custom_views.MotionEvent ) ) { return false ; } return true ; } 
private static void void ( final int int , final long long , @ NonNull final TimeInterpolator de.azapps.mirakel.settings.custom_views.TimeInterpolator , @ NonNull final ValueAnimator . ValueAnimator ValueAnimator.AnimatorUpdateListener , @ NonNull final Animator . Animator Animator.AnimatorListener ) { final ValueAnimator de.azapps.mirakel.settings.custom_views.ValueAnimator = new ValueAnimator ( ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . setIntValues ( int , NUMBER ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . setDuration ( long ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . setInterpolator ( de.azapps.mirakel.settings.custom_views.TimeInterpolator ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . addUpdateListener ( ValueAnimator.AnimatorUpdateListener ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . addListener ( Animator.AnimatorListener ) ; de.azapps.mirakel.settings.custom_views.ValueAnimator . start ( ) ; } 
@ java.lang.Override public void void ( final int int , final int int , final int int , final int int ) { super. onSizeChanged ( int , int , int , int ) ; int = int ; } 
private synchronized boolean boolean ( ) { if ( java.lang.Thread != null ) { java.lang.Thread . void ( ) ; java.lang.Thread = null ; } return de.azapps.mirakel.settings.custom_views.View != null ; } 
@ TargetApi ( Build . VERSION_CODES . JELLY_BEAN_MR1 ) private void void ( @ Nullable final View de.azapps.mirakel.settings.custom_views.View , final int int ) { if ( de.azapps.mirakel.settings.custom_views.View == null ) { return; } View de.azapps.mirakel.settings.custom_views.View = de.azapps.mirakel.settings.custom_views.View . findViewById ( R . id . swipe_child_wrapper ) ; if ( ( de.azapps.mirakel.settings.custom_views.View == null ) || ! ( ( de.azapps.mirakel.settings.custom_views.View instanceof LinearLayout ) && ( ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildCount ( ) > NUMBER ) ) ) { return; } final int int ; final int int ; if ( boolean ) { int = ( int > NUMBER ) ? NUMBER : NUMBER ; int = ( int > NUMBER ) ? NUMBER : NUMBER ; } else { int = ( int < NUMBER ) ? NUMBER : NUMBER ; int = ( int < NUMBER ) ? NUMBER : NUMBER ; } final LinearLayout . LinearLayout LinearLayout.LayoutParams = ( LinearLayout . LinearLayout ) ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildAt ( NUMBER ) . getLayoutParams ( ) ; cparams . width = ( int ) java.lang.Math . double ( int - java.lang.Math . int ( int ) , double ) ; if ( boolean ) { LinearLayout.LayoutParams . setMarginStart ( - NUMBER * int ) ; } else { cparams . leftMargin = int ; } ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildAt ( NUMBER ) . setLayoutParams ( LinearLayout.LayoutParams ) ; int int = NUMBER ; if ( ( ! boolean && ( int <= NUMBER ) ) || ( boolean && ( int >= NUMBER ) ) ) { int = NUMBER ; } final LinearLayout . LinearLayout LinearLayout.LayoutParams = ( LinearLayout . LinearLayout ) ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildAt ( int ) . getLayoutParams ( ) ; lparams . width = java.lang.Math . int ( int ) * int ; ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildAt ( int ) . setLayoutParams ( LinearLayout.LayoutParams ) ; final LinearLayout . LinearLayout LinearLayout.LayoutParams = ( LinearLayout . LinearLayout ) ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildAt ( int ) . getLayoutParams ( ) ; rparams . width = NUMBER ; ( ( LinearLayout ) de.azapps.mirakel.settings.custom_views.View ) . getChildAt ( int ) . setLayoutParams ( LinearLayout.LayoutParams ) ; de.azapps.mirakel.settings.custom_views.View . invalidate ( ) ; } 
public void void ( @ Nullable final de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnItemRemoveListener de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnItemRemoveListener ) { this . de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnItemRemoveListener> = fromNullable ( de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnItemRemoveListener ) ; } 
public void void ( @ Nullable final de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnUndoListener de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnUndoListener ) { this . de.azapps.mirakel.settings.custom_views.Optional<de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnUndoListener> = fromNullable ( de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.OnUndoListener ) ; } 
void void ( int int , int int ); 
void void ( int int ); 
@ java.lang.Override public void void ( @ NonNull final View de.azapps.mirakel.settings.custom_views.View , final int int ) { super. addView ( de.azapps.mirakel.settings.custom_views.View ( de.azapps.mirakel.settings.custom_views.View ) , int ) ; } 
@ java.lang.Override protected boolean boolean ( @ NonNull final View de.azapps.mirakel.settings.custom_views.View , final int int , final ViewGroup . ViewGroup ViewGroup.LayoutParams , final boolean boolean ) { return super. addViewInLayout ( de.azapps.mirakel.settings.custom_views.View ( de.azapps.mirakel.settings.custom_views.View ) , int , ViewGroup.LayoutParams , boolean ) ; } 
private de.azapps.mirakel.settings.custom_views.View de.azapps.mirakel.settings.custom_views.View ( final View de.azapps.mirakel.settings.custom_views.View ) { final View de.azapps.mirakel.settings.custom_views.View = LayoutInflater . from ( getContext ( ) ) . inflate ( R . layout . leave_behind_wrapper , null ) ; final FrameLayout de.azapps.mirakel.settings.custom_views.FrameLayout = ( FrameLayout ) de.azapps.mirakel.settings.custom_views.View . findViewById ( R . id . leave_behind_center ) ; void ( de.azapps.mirakel.settings.custom_views.View , de.azapps.mirakel.settings.custom_views.FrameLayout ) ; de.azapps.mirakel.settings.custom_views.FrameLayout . addView ( de.azapps.mirakel.settings.custom_views.View ) ; if ( boolean ( de.azapps.mirakel.settings.custom_views.View ) ) { de.azapps.mirakel.settings.custom_views.View . setTag ( int , de.azapps.mirakel.settings.custom_views.View . getTag ( int ) ) ; } return de.azapps.mirakel.settings.custom_views.View ; } 
@ TargetApi ( Build . VERSION_CODES . LOLLIPOP ) private void void ( @ NonNull final View de.azapps.mirakel.settings.custom_views.View , @ NonNull final FrameLayout de.azapps.mirakel.settings.custom_views.FrameLayout ) { if ( ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) && de.azapps.mirakel.settings.custom_views.View . isClickable ( ) ) { de.azapps.mirakel.settings.custom_views.FrameLayout . setForeground ( getContext ( ) . getDrawable ( R . drawable . ripple ) ) ; de.azapps.mirakel.settings.custom_views.FrameLayout . setClickable ( true ) ; de.azapps.mirakel.settings.custom_views.View . setOnTouchListener ( new OnTouchListener ( ) { @ java.lang.Override public boolean boolean ( final View de.azapps.mirakel.settings.custom_views.View , final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent ) { final float float = de.azapps.mirakel.settings.custom_views.MotionEvent . getX ( ) + de.azapps.mirakel.settings.custom_views.View . getLeft ( ) ; final float float = de.azapps.mirakel.settings.custom_views.MotionEvent . getY ( ) + de.azapps.mirakel.settings.custom_views.View . getTop ( ) ; de.azapps.mirakel.settings.custom_views.FrameLayout . drawableHotspotChanged ( float , float ) ; switch ( de.azapps.mirakel.settings.custom_views.MotionEvent . getActionMasked ( ) ) { case MotionEvent . ACTION_DOWN : de.azapps.mirakel.settings.custom_views.FrameLayout . setPressed ( true ) ; break; case MotionEvent . ACTION_UP : case MotionEvent . ACTION_CANCEL : de.azapps.mirakel.settings.custom_views.FrameLayout . setPressed ( false ) ; break; } return false ; } } ) ; } } 
@ java.lang.Override public boolean boolean ( final View de.azapps.mirakel.settings.custom_views.View , final MotionEvent de.azapps.mirakel.settings.custom_views.MotionEvent ) { final float float = de.azapps.mirakel.settings.custom_views.MotionEvent . getX ( ) + de.azapps.mirakel.settings.custom_views.View . getLeft ( ) ; final float float = de.azapps.mirakel.settings.custom_views.MotionEvent . getY ( ) + de.azapps.mirakel.settings.custom_views.View . getTop ( ) ; de.azapps.mirakel.settings.custom_views.FrameLayout . drawableHotspotChanged ( float , float ) ; switch ( de.azapps.mirakel.settings.custom_views.MotionEvent . getActionMasked ( ) ) { case MotionEvent . ACTION_DOWN : de.azapps.mirakel.settings.custom_views.FrameLayout . setPressed ( true ) ; break; case MotionEvent . ACTION_UP : case MotionEvent . ACTION_CANCEL : de.azapps.mirakel.settings.custom_views.FrameLayout . setPressed ( false ) ; break; } return false ; } 
@ java.lang.Override public void void ( @ NonNull final View de.azapps.mirakel.settings.custom_views.View , final int int , final ViewGroup . ViewGroup ViewGroup.LayoutParams ) { super. addView ( de.azapps.mirakel.settings.custom_views.View ( de.azapps.mirakel.settings.custom_views.View ) , int , ViewGroup.LayoutParams ) ; } 
void void ( @ NonNull final Animator de.azapps.mirakel.settings.custom_views.Animator ); 
void ( final de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd ) { this . de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd = de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd ; } 
@ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) { } 
@ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) { de.azapps.mirakel.settings.custom_views.SwipeLinearLayout.AnimationEnd . void ( de.azapps.mirakel.settings.custom_views.Animator ) ; } 
@ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) { } 
@ java.lang.Override public void void ( final Animator de.azapps.mirakel.settings.custom_views.Animator ) { } 
public void ( final Context de.azapps.mirakel.settings.custom_views.Context , final AttributeSet de.azapps.mirakel.settings.custom_views.AttributeSet ) { super( de.azapps.mirakel.settings.custom_views.Context , de.azapps.mirakel.settings.custom_views.AttributeSet ); } 
public void ( Activity de.azapps.mirakel.settings.custom_views.Activity ) { super( de.azapps.mirakel.settings.custom_views.Activity ); } 
@ java.lang.Override protected de.azapps.mirakel.settings.custom_views.View de.azapps.mirakel.settings.custom_views.View ( final ViewGroup de.azapps.mirakel.settings.custom_views.ViewGroup ) { final View de.azapps.mirakel.settings.custom_views.View = super. onCreateView ( de.azapps.mirakel.settings.custom_views.ViewGroup ) ; final ViewGroup de.azapps.mirakel.settings.custom_views.ViewGroup = ( ViewGroup ) de.azapps.mirakel.settings.custom_views.View . findViewById ( android . R . id . widget_frame ) ; if ( de.azapps.mirakel.settings.custom_views.ViewGroup != null ) { de.azapps.mirakel.settings.custom_views.ViewGroup . removeAllViews ( ) ; final SwitchCompat de.azapps.mirakel.settings.custom_views.SwitchCompat = new SwitchCompat ( getContext ( ) ) ; de.azapps.mirakel.settings.custom_views.SwitchCompat . setId ( R . id . switch_widget ) ; de.azapps.mirakel.settings.custom_views.ViewGroup . addView ( de.azapps.mirakel.settings.custom_views.SwitchCompat ) ; } return de.azapps.mirakel.settings.custom_views.View ; } 
@ java.lang.Override protected void void ( @ NonNull final View de.azapps.mirakel.settings.custom_views.View ) { super. onBindView ( de.azapps.mirakel.settings.custom_views.View ) ; final View de.azapps.mirakel.settings.custom_views.View = de.azapps.mirakel.settings.custom_views.View . findViewById ( R . id . switch_widget ) ; if ( ( de.azapps.mirakel.settings.custom_views.View != null ) && ( de.azapps.mirakel.settings.custom_views.View instanceof Checkable ) ) { if ( de.azapps.mirakel.settings.custom_views.View instanceof SwitchCompat ) { final SwitchCompat de.azapps.mirakel.settings.custom_views.SwitchCompat = ( SwitchCompat ) de.azapps.mirakel.settings.custom_views.View ; de.azapps.mirakel.settings.custom_views.SwitchCompat . setOnCheckedChangeListener ( null ) ; } ( ( Checkable ) de.azapps.mirakel.settings.custom_views.View ) . setChecked ( isChecked ( ) ) ; if ( de.azapps.mirakel.settings.custom_views.View instanceof SwitchCompat ) { final SwitchCompat de.azapps.mirakel.settings.custom_views.SwitchCompat = ( SwitchCompat ) de.azapps.mirakel.settings.custom_views.View ; de.azapps.mirakel.settings.custom_views.SwitchCompat . setTextOn ( getSwitchTextOn ( ) ) ; de.azapps.mirakel.settings.custom_views.SwitchCompat . setTextOff ( getSwitchTextOff ( ) ) ; de.azapps.mirakel.settings.custom_views.SwitchCompat . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.settings.custom_views.CompoundButton , final boolean boolean ) { if ( ! callChangeListener ( boolean ) ) { de.azapps.mirakel.settings.custom_views.CompoundButton . setChecked ( ! boolean ) ; return; } de.azapps.mirakel.settings.custom_views.SwitchCompatPreference .this . setChecked ( boolean ) ; } } ) ; } } void ( de.azapps.mirakel.settings.custom_views.View ) ; } 
@ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.settings.custom_views.CompoundButton , final boolean boolean ) { if ( ! callChangeListener ( boolean ) ) { de.azapps.mirakel.settings.custom_views.CompoundButton . setChecked ( ! boolean ) ; return; } de.azapps.mirakel.settings.custom_views.SwitchCompatPreference .this . setChecked ( boolean ) ; } 
private void void ( final View de.azapps.mirakel.settings.custom_views.View ) { final TextView de.azapps.mirakel.settings.custom_views.TextView = ( TextView ) de.azapps.mirakel.settings.custom_views.View . findViewById ( android . R . id . summary ) ; if ( de.azapps.mirakel.settings.custom_views.TextView != null ) { boolean boolean = true ; if ( isChecked ( ) && ! TextUtils . isEmpty ( getSummaryOn ( ) ) ) { de.azapps.mirakel.settings.custom_views.TextView . setText ( getSummaryOn ( ) . toString ( ) ) ; boolean = false ; } else if ( ! isChecked ( ) && ! TextUtils . isEmpty ( getSummaryOff ( ) ) ) { de.azapps.mirakel.settings.custom_views.TextView . setText ( getSummaryOff ( ) . toString ( ) ) ; boolean = false ; } if ( boolean ) { final java.lang.CharSequence java.lang.CharSequence = getSummary ( ) ; if ( ! TextUtils . isEmpty ( java.lang.CharSequence ) ) { de.azapps.mirakel.settings.custom_views.TextView . setText ( java.lang.CharSequence ) ; boolean = false ; } } int int = View . GONE ; if ( ! boolean ) { int = View . VISIBLE ; } if ( int != de.azapps.mirakel.settings.custom_views.TextView . getVisibility ( ) ) { de.azapps.mirakel.settings.custom_views.TextView . setVisibility ( int ) ; } } } 
@ java.lang.Override public void void ( Bundle de.azapps.mirakel.settings.fragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.fragments.Bundle ) ; addPreferencesFromResource ( R . xml . settings_about ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; final Intent de.azapps.mirakel.settings.fragments.Intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING ) ) ; de.azapps.mirakel.settings.fragments.Preference . setIntent ( de.azapps.mirakel.settings.fragments.Intent ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override @ SuppressLint ( STRING ) public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { ChangelogDialog . show ( getActivity ( ) , DefinitionsHelper . APK_NAME ) ; return true ; } } ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; if ( de.azapps.mirakel.settings.fragments.Preference != null ) { de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.fragments.Preference ) { if ( getActivity ( ) instanceof SettingsActivity ) { ( ( SettingsActivity ) getActivity ( ) ) . onItemSelected ( Settings . CREDITS ) ; } else { ( ( GenericModelDetailActivity ) getActivity ( ) ) . setFragment ( Settings . CREDITS . getFragment ( ) ) ; } return true ; } } ) ; } final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; if ( de.azapps.mirakel.settings.fragments.Preference != null ) { de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { Helpers . contact ( getActivity ( ) ) ; return false ; } } ) ; } final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; java.lang.String java.lang.String ; try { final ApplicationInfo de.azapps.mirakel.settings.fragments.ApplicationInfo = getActivity ( ) . getPackageManager ( ) . getApplicationInfo ( getActivity ( ) . getPackageName ( ) , NUMBER ) ; final java.util.zip.ZipFile java.util.zip.ZipFile = new java.util.zip.ZipFile ( ai . sourceDir ) ; final java.util.zip.ZipEntry java.util.zip.ZipEntry = java.util.zip.ZipFile . java.util.zip.ZipEntry ( STRING ) ; java.lang.String = java.text.DateFormat . java.text.DateFormat ( ) . java.lang.String ( new java.util.Date ( ( java.util.zip.ZipEntry . long ( ) ) ) ) ; java.util.zip.ZipFile . void ( ) ; } catch ( final java.lang.Exception java.lang.Exception ) { java.lang.String = STRING ; } de.azapps.mirakel.settings.fragments.Preference . setSummary ( getString ( R . string . version_string , DefinitionsHelper . VERSIONS_NAME , java.lang.String ) ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { private de.azapps.mirakel.settings.fragments.Toast de.azapps.mirakel.settings.fragments.Toast ; @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { if ( ++ int > NUMBER ) { MirakelCommonPreferences . toogleDebugMenu ( ) ; if ( MirakelCommonPreferences . isDebug ( ) ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . ACTIVATED_DEVELOPMENT_SETTINGS ) ; } int = NUMBER ; if ( this . de.azapps.mirakel.settings.fragments.Toast != null ) { this . de.azapps.mirakel.settings.fragments.Toast . cancel ( ) ; } this . de.azapps.mirakel.settings.fragments.Toast = Toast . makeText ( getActivity ( ) , getActivity ( ) . getString ( R . string . change_dev_mode , getActivity ( ) . getString ( MirakelCommonPreferences . isEnabledDebugMenu ( ) ? R . string . enabled : R . string . disabled ) ) , Toast . LENGTH_LONG ) ; this . de.azapps.mirakel.settings.fragments.Toast . show ( ) ; if ( getActivity ( ) instanceof SettingsActivity ) { ( ( SettingsActivity ) getActivity ( ) ) . reloadSettings ( ) ; } } else if ( int > NUMBER || MirakelCommonPreferences . isEnabledDebugMenu ( ) ) { if ( this . de.azapps.mirakel.settings.fragments.Toast != null ) { this . de.azapps.mirakel.settings.fragments.Toast . cancel ( ) ; } this . de.azapps.mirakel.settings.fragments.Toast = Toast . makeText ( getActivity ( ) , getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . dev_toast , NUMBER - int , NUMBER - int , getActivity ( ) . getString ( ! MirakelCommonPreferences . isEnabledDebugMenu ( ) ? R . string . enable : R . string . disable ) ) , Toast . LENGTH_SHORT ) ; this . de.azapps.mirakel.settings.fragments.Toast . show ( ) ; } return false ; } } ) ; } 
@ java.lang.Override @ SuppressLint ( STRING ) public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { ChangelogDialog . show ( getActivity ( ) , DefinitionsHelper . APK_NAME ) ; return true ; } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.fragments.Preference ) { if ( getActivity ( ) instanceof SettingsActivity ) { ( ( SettingsActivity ) getActivity ( ) ) . onItemSelected ( Settings . CREDITS ) ; } else { ( ( GenericModelDetailActivity ) getActivity ( ) ) . setFragment ( Settings . CREDITS . getFragment ( ) ) ; } return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { Helpers . contact ( getActivity ( ) ) ; return false ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { if ( ++ int > NUMBER ) { MirakelCommonPreferences . toogleDebugMenu ( ) ; if ( MirakelCommonPreferences . isDebug ( ) ) { AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . ACTIVATED_DEVELOPMENT_SETTINGS ) ; } int = NUMBER ; if ( this . de.azapps.mirakel.settings.fragments.Toast != null ) { this . de.azapps.mirakel.settings.fragments.Toast . cancel ( ) ; } this . de.azapps.mirakel.settings.fragments.Toast = Toast . makeText ( getActivity ( ) , getActivity ( ) . getString ( R . string . change_dev_mode , getActivity ( ) . getString ( MirakelCommonPreferences . isEnabledDebugMenu ( ) ? R . string . enabled : R . string . disabled ) ) , Toast . LENGTH_LONG ) ; this . de.azapps.mirakel.settings.fragments.Toast . show ( ) ; if ( getActivity ( ) instanceof SettingsActivity ) { ( ( SettingsActivity ) getActivity ( ) ) . reloadSettings ( ) ; } } else if ( int > NUMBER || MirakelCommonPreferences . isEnabledDebugMenu ( ) ) { if ( this . de.azapps.mirakel.settings.fragments.Toast != null ) { this . de.azapps.mirakel.settings.fragments.Toast . cancel ( ) ; } this . de.azapps.mirakel.settings.fragments.Toast = Toast . makeText ( getActivity ( ) , getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . dev_toast , NUMBER - int , NUMBER - int , getActivity ( ) . getString ( ! MirakelCommonPreferences . isEnabledDebugMenu ( ) ? R . string . enable : R . string . disable ) ) , Toast . LENGTH_SHORT ) ; this . de.azapps.mirakel.settings.fragments.Toast . show ( ) ; } return false ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.settings.fragments.Settings de.azapps.mirakel.settings.fragments.Settings ( ) { return Settings . ABOUT ; } 
@ java.lang.Override public void void ( Bundle de.azapps.mirakel.settings.fragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.fragments.Bundle ) ; addPreferencesFromResource ( R . xml . settings_backup ) ; final SwitchPreference de.azapps.mirakel.settings.fragments.SwitchPreference = ( SwitchPreference ) findPreference ( STRING ) ; final Optional < ListMirakel > de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> = MirakelModelPreferences . getImportDefaultList ( ) ; if ( de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( getString ( R . string . import_default_list_summary , de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> . get ( ) . getName ( ) ) ) ; } else { de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( R . string . import_no_default_list_summary ) ; } de.azapps.mirakel.settings.fragments.SwitchPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { if ( ( java.lang.Boolean ) java.lang.Object ) { final AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) ; AlertDialogWrapper.Builder . setTitle ( R . string . import_to ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> <> ( ) ; final int int = NUMBER ; for ( final ListMirakel de.azapps.mirakel.settings.fragments.ListMirakel : ListMirakel . all ( ) ) { if ( de.azapps.mirakel.settings.fragments.ListMirakel . getId ( ) > NUMBER ) { java.util.List<java.lang.String> . boolean ( de.azapps.mirakel.settings.fragments.ListMirakel . getName ( ) ) ; java.util.List<java.lang.Long> . boolean ( de.azapps.mirakel.settings.fragments.ListMirakel . getId ( ) ) ; } } AlertDialogWrapper.Builder . setSingleChoiceItems ( java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) , int , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( getActivity ( ) . getString ( R . string . import_default_list_summary , java.util.List<java.lang.String> . java.lang.String ( int ) ) ) ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = MirakelPreferences . getEditor ( ) ; SharedPreferences.Editor . putLong ( STRING , java.util.List<java.lang.Long> . java.lang.Long ( int ) ) ; SharedPreferences.Editor . commit ( ) ; de.azapps.mirakel.settings.fragments.DialogInterface . dismiss ( ) ; } } ) ; AlertDialogWrapper.Builder . setOnCancelListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface ) { de.azapps.mirakel.settings.fragments.SwitchPreference . setChecked ( false ) ; de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( R . string . import_no_default_list_summary ) ; } } ) ; AlertDialogWrapper.Builder . create ( ) . show ( ) ; } else { de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( R . string . import_no_default_list_summary ) ; } return true ; } } ) ; final EditTextPreference de.azapps.mirakel.settings.fragments.EditTextPreference = ( EditTextPreference ) findPreference ( STRING ) ; if ( de.azapps.mirakel.settings.fragments.EditTextPreference != null ) { de.azapps.mirakel.settings.fragments.EditTextPreference . setSummary ( MirakelCommonPreferences . getImportFileTitle ( ) ) ; } final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setSummary ( getString ( R . string . backup_click_summary , FileUtils . getExportDir ( ) . getAbsolutePath ( ) ) ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { ExportImport . exportDB ( getActivity ( ) ) ; return true ; } } ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { Helpers . showFileChooser ( SettingsActivity . FILE_IMPORT_DB , getActivity ( ) . getString ( R . string . import_title ) , getActivity ( ) ) ; return true ; } } ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { Helpers . showFileChooser ( SettingsActivity . FILE_ASTRID , getActivity ( ) . getString ( R . string . astrid_import_title ) , getActivity ( ) ) ; return true ; } } ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { AnyDoImport . handleImportAnyDo ( getActivity ( ) ) ; return true ; } } ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) . setTitle ( R . string . import_wunderlist_howto ) . setMessage ( R . string . import_wunderlist_howto_text ) . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { Helpers . showFileChooser ( SettingsActivity . FILE_WUNDERLIST , getActivity ( ) . getString ( R . string . import_wunderlist_title ) , getActivity ( ) ) ; } } ) . show ( ) ; return true ; } } ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { if ( ( java.lang.Boolean ) java.lang.Object ) { final AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) ; AlertDialogWrapper.Builder . setTitle ( R . string . import_to ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> <> ( ) ; final int int = NUMBER ; for ( final ListMirakel de.azapps.mirakel.settings.fragments.ListMirakel : ListMirakel . all ( ) ) { if ( de.azapps.mirakel.settings.fragments.ListMirakel . getId ( ) > NUMBER ) { java.util.List<java.lang.String> . boolean ( de.azapps.mirakel.settings.fragments.ListMirakel . getName ( ) ) ; java.util.List<java.lang.Long> . boolean ( de.azapps.mirakel.settings.fragments.ListMirakel . getId ( ) ) ; } } AlertDialogWrapper.Builder . setSingleChoiceItems ( java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) , int , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( getActivity ( ) . getString ( R . string . import_default_list_summary , java.util.List<java.lang.String> . java.lang.String ( int ) ) ) ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = MirakelPreferences . getEditor ( ) ; SharedPreferences.Editor . putLong ( STRING , java.util.List<java.lang.Long> . java.lang.Long ( int ) ) ; SharedPreferences.Editor . commit ( ) ; de.azapps.mirakel.settings.fragments.DialogInterface . dismiss ( ) ; } } ) ; AlertDialogWrapper.Builder . setOnCancelListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface ) { de.azapps.mirakel.settings.fragments.SwitchPreference . setChecked ( false ) ; de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( R . string . import_no_default_list_summary ) ; } } ) ; AlertDialogWrapper.Builder . create ( ) . show ( ) ; } else { de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( R . string . import_no_default_list_summary ) ; } return true ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( getActivity ( ) . getString ( R . string . import_default_list_summary , java.util.List<java.lang.String> . java.lang.String ( int ) ) ) ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = MirakelPreferences . getEditor ( ) ; SharedPreferences.Editor . putLong ( STRING , java.util.List<java.lang.Long> . java.lang.Long ( int ) ) ; SharedPreferences.Editor . commit ( ) ; de.azapps.mirakel.settings.fragments.DialogInterface . dismiss ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface ) { de.azapps.mirakel.settings.fragments.SwitchPreference . setChecked ( false ) ; de.azapps.mirakel.settings.fragments.SwitchPreference . setSummary ( R . string . import_no_default_list_summary ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { ExportImport . exportDB ( getActivity ( ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { Helpers . showFileChooser ( SettingsActivity . FILE_IMPORT_DB , getActivity ( ) . getString ( R . string . import_title ) , getActivity ( ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { Helpers . showFileChooser ( SettingsActivity . FILE_ASTRID , getActivity ( ) . getString ( R . string . astrid_import_title ) , getActivity ( ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { AnyDoImport . handleImportAnyDo ( getActivity ( ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) . setTitle ( R . string . import_wunderlist_howto ) . setMessage ( R . string . import_wunderlist_howto_text ) . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { Helpers . showFileChooser ( SettingsActivity . FILE_WUNDERLIST , getActivity ( ) . getString ( R . string . import_wunderlist_title ) , getActivity ( ) ) ; } } ) . show ( ) ; return true ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { Helpers . showFileChooser ( SettingsActivity . FILE_WUNDERLIST , getActivity ( ) . getString ( R . string . import_wunderlist_title ) , getActivity ( ) ) ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.settings.fragments.Settings de.azapps.mirakel.settings.fragments.Settings ( ) { return Settings . BACKUP ; } 
@ java.lang.Override public void void ( Bundle de.azapps.mirakel.settings.fragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.fragments.Bundle ) ; addPreferencesFromResource ( R . xml . settings_dev ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) . setTitle ( R . string . delete_done_warning ) . setMessage ( R . string . delete_done_warning_message ) . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { Task . deleteDoneTasks ( ) ; Toast . makeText ( getActivity ( ) , R . string . delete_done_success , Toast . LENGTH_SHORT ) . show ( ) ; android . os . Process . killProcess ( android . os . Process . myPid ( ) ) ; } } ) . setNegativeButton ( android . R . string . cancel , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) {                    } } ) . show ( ) ; return true ; } } ) ; final SwitchPreference de.azapps.mirakel.settings.fragments.SwitchPreference = ( SwitchPreference ) findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.SwitchPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { MirakelCommonPreferences . setDemoMode ( ( java.lang.Boolean ) java.lang.Object ) ; Helpers . restartApp ( getActivity ( ) ) ; return false ; } } ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { final java.io.File java.io.File = new java.io.File ( FileUtils . getMirakelDir ( ) , STRING + MirakelModelPreferences . getDBName ( ) ) ; java.io.File . boolean ( ) ; Helpers . restartApp ( getActivity ( ) ) ; return false ; } } ) ; final Intent de.azapps.mirakel.settings.fragments.Intent = new Intent ( getActivity ( ) , TagSettingsActivity .class ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.Preference . setIntent ( de.azapps.mirakel.settings.fragments.Intent ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) . setTitle ( R . string . delete_done_warning ) . setMessage ( R . string . delete_done_warning_message ) . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { Task . deleteDoneTasks ( ) ; Toast . makeText ( getActivity ( ) , R . string . delete_done_success , Toast . LENGTH_SHORT ) . show ( ) ; android . os . Process . killProcess ( android . os . Process . myPid ( ) ) ; } } ) . setNegativeButton ( android . R . string . cancel , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) {                    } } ) . show ( ) ; return true ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { Task . deleteDoneTasks ( ) ; Toast . makeText ( getActivity ( ) , R . string . delete_done_success , Toast . LENGTH_SHORT ) . show ( ) ; android . os . Process . killProcess ( android . os . Process . myPid ( ) ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) {                    } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { MirakelCommonPreferences . setDemoMode ( ( java.lang.Boolean ) java.lang.Object ) ; Helpers . restartApp ( getActivity ( ) ) ; return false ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { final java.io.File java.io.File = new java.io.File ( FileUtils . getMirakelDir ( ) , STRING + MirakelModelPreferences . getDBName ( ) ) ; java.io.File . boolean ( ) ; Helpers . restartApp ( getActivity ( ) ) ; return false ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.settings.fragments.Settings de.azapps.mirakel.settings.fragments.Settings ( ) { return Settings . DEV ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.settings.fragments.Settings de.azapps.mirakel.settings.fragments.Settings ( ) { return Settings . DONATE ; } 
@ java.lang.Override public void void ( Bundle de.azapps.mirakel.settings.fragments.Bundle ) { super. onActivityCreated ( de.azapps.mirakel.settings.fragments.Bundle ) ; if ( ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) != null ) { ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setTitle ( de.azapps.mirakel.settings.fragments.Settings ( ) . getName ( ) ) ; } } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
@ NonNull public static de.azapps.mirakel.settings.fragments.Fragment de.azapps.mirakel.settings.fragments.Fragment ( ) { return new de.azapps.mirakel.settings.fragments.DonationFragmentWrapper ( ) ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.settings.fragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.fragments.Bundle ) ; if ( ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) != null ) { ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setTitle ( getItem ( ) . getName ( ) ) ; } } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
protected void void ( ) { } 
protected void void ( final PreferenceScreen de.azapps.mirakel.settings.fragments.PreferenceScreen ) { void ( de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.fragments.View ) { void ( ) ; } 
@ java.lang.Override @ NonNull public de.azapps.mirakel.settings.fragments.View de.azapps.mirakel.settings.fragments.View ( @ NonNull final LayoutInflater de.azapps.mirakel.settings.fragments.LayoutInflater , final ViewGroup de.azapps.mirakel.settings.fragments.ViewGroup , final Bundle de.azapps.mirakel.settings.fragments.Bundle ) { final View de.azapps.mirakel.settings.fragments.View = de.azapps.mirakel.settings.fragments.LayoutInflater . inflate ( R . layout . generic_list_fragment , null ) ; de.azapps.mirakel.settings.fragments.RecyclerView = ( RecyclerView ) de.azapps.mirakel.settings.fragments.View . findViewById ( R . id . generic_list ) ; de.azapps.mirakel.settings.fragments.RecyclerView . setLayoutManager ( new LinearLayoutManager ( de.azapps.mirakel.settings.fragments.ViewGroup . getContext ( ) ) ) ; void ( getPreferenceScreen ( ) ) ; de.azapps.mirakel.settings.fragments.FloatingActionButton = ( FloatingActionButton ) de.azapps.mirakel.settings.fragments.View . findViewById ( R . id . fabbutton ) ; void ( de.azapps.mirakel.settings.fragments.FloatingActionButton ) ; setHasOptionsMenu ( boolean ( ) ) ; return de.azapps.mirakel.settings.fragments.View ; } 
protected void void ( final PreferenceScreen de.azapps.mirakel.settings.fragments.PreferenceScreen ) { final SettingsGroupAdapter de.azapps.mirakel.settings.fragments.SettingsGroupAdapter = new SettingsGroupAdapter ( de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; de.azapps.mirakel.settings.fragments.SettingsGroupAdapter . setRemoveListener ( SwipeLinearLayout.OnItemRemoveListener ( ) ) ; de.azapps.mirakel.settings.fragments.RecyclerView . setAdapter ( de.azapps.mirakel.settings.fragments.SettingsGroupAdapter ) ; } 
protected void void ( final FloatingActionButton de.azapps.mirakel.settings.fragments.FloatingActionButton ) { if ( boolean ( ) ) { de.azapps.mirakel.settings.fragments.FloatingActionButton . setImageResource ( R . drawable . ic_delete_24px ) ; de.azapps.mirakel.settings.fragments.FloatingActionButton . setOnClickListener ( this ) ; } else { de.azapps.mirakel.settings.fragments.FloatingActionButton . setVisibility ( View . GONE ) ; } } 
@ Nullable protected SwipeLinearLayout . SwipeLinearLayout.OnItemRemoveListener SwipeLinearLayout.OnItemRemoveListener ( ) { return null ; } 
protected boolean boolean ( ) { return false ; } 
protected boolean boolean ( ) { return false ; } 
@ java.lang.Override public void void ( final Menu de.azapps.mirakel.settings.fragments.Menu , final MenuInflater de.azapps.mirakel.settings.fragments.MenuInflater ) { de.azapps.mirakel.settings.fragments.MenuInflater . inflate ( R . menu . generic_model_menu , de.azapps.mirakel.settings.fragments.Menu ) ; final MenuItem de.azapps.mirakel.settings.fragments.MenuItem = de.azapps.mirakel.settings.fragments.Menu . findItem ( R . id . action_create_special ) ; de.azapps.mirakel.settings.fragments.MenuItem . setEnabled ( false ) ; de.azapps.mirakel.settings.fragments.MenuItem . setVisible ( false ) ; super. onCreateOptionsMenu ( de.azapps.mirakel.settings.fragments.Menu , de.azapps.mirakel.settings.fragments.MenuInflater ) ; } 
@ java.lang.Override public boolean boolean ( final MenuItem de.azapps.mirakel.settings.fragments.MenuItem ) { if ( de.azapps.mirakel.settings.fragments.MenuItem . getItemId ( ) == R . id . action_delete_special ) { void ( ) ; if ( ! MirakelCommonPreferences . isTablet ( ) ) { getActivity ( ) . finish ( ) ; } return true ; } else { return false ; } } 
protected void void ( ) { } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.settings.fragments.Bundle ) { try { super. onActivityCreated ( de.azapps.mirakel.settings.fragments.Bundle ) ; } catch ( final java.lang.RuntimeException java.lang.RuntimeException ) { } } 
@ java.lang.Override public void void ( Bundle de.azapps.mirakel.settings.fragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.fragments.Bundle ) ; addPreferencesFromResource ( R . xml . settings_notifications ) ; final java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> = ListMirakel . all ( ) ; final java.lang.CharSequence java.lang.CharSequence[] [] = new java.lang.String [ java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . size ( ) ] ; final java.lang.CharSequence java.lang.CharSequence[] [] = new java.lang.String [ java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . size ( ) ] ; int int = NUMBER ; for ( final ListMirakel de.azapps.mirakel.settings.fragments.ListMirakel : java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( de.azapps.mirakel.settings.fragments.ListMirakel . getId ( ) ) ; final java.lang.String java.lang.String = de.azapps.mirakel.settings.fragments.ListMirakel . getName ( ) ; java.lang.CharSequence[] [ int ] = java.lang.String ; java.lang.CharSequence[] [ int ] = java.lang.String ; int ++ ; } final SwitchPreference de.azapps.mirakel.settings.fragments.SwitchPreference = ( SwitchPreference ) findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.SwitchPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { if ( ( java.lang.Boolean ) java.lang.Object ) { getActivity ( ) . startService ( new Intent ( getActivity ( ) , NotificationService .class ) ) ; } else { if ( getActivity ( ) . startService ( new Intent ( getActivity ( ) , NotificationService .class ) ) != null ) { getActivity ( ) . stopService ( new Intent ( getActivity ( ) , NotificationService .class ) ) ; } } final SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.settings.fragments.Preference . getEditor ( ) ; SharedPreferences.Editor . putBoolean ( STRING , ( java.lang.Boolean ) java.lang.Object ) ; SharedPreferences.Editor . commit ( ) ; NotificationService . updateServices ( getActivity ( ) ) ; return true ; } } ) ; final SwitchPreference de.azapps.mirakel.settings.fragments.SwitchPreference = ( SwitchPreference ) findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.SwitchPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { final SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.settings.fragments.Preference . getEditor ( ) ; SharedPreferences.Editor . putBoolean ( STRING , ( java.lang.Boolean ) java.lang.Object ) ; SharedPreferences.Editor . commit ( ) ; NotificationService . updateServices ( getActivity ( ) ) ; return true ; } } ) ; final ListPreference de.azapps.mirakel.settings.fragments.ListPreference = ( ListPreference ) findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEntries ( java.lang.CharSequence[] ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEntryValues ( java.lang.CharSequence[] ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( MirakelCommonPreferences . getNotificationsListId ( ) + STRING ) ; final ListMirakel de.azapps.mirakel.settings.fragments.ListMirakel = MirakelModelPreferences . getNotificationsList ( ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( getString ( R . string . notifications_list_summary , de.azapps.mirakel.settings.fragments.ListMirakel . getName ( ) ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { Optional < ListMirakel > de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> = ListMirakel . get ( java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ) ; if ( ! de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> . isPresent ( ) ) { return false ; } final java.lang.String java.lang.String = de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> . get ( ) . getName ( ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( getActivity ( ) . getString ( R . string . notifications_list_summary , java.lang.String ) ) ; MirakelCommonPreferences . setNotificationsListId ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( ( java.lang.String ) java.lang.Object ) ; NotificationService . updateServices ( getActivity ( ) ) ; return false ; } } ) ; final SwitchPreference de.azapps.mirakel.settings.fragments.SwitchPreference = ( SwitchPreference ) findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.SwitchPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { final SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.settings.fragments.Preference . getEditor ( ) ; SharedPreferences.Editor . putBoolean ( STRING , ( java.lang.Boolean ) java.lang.Object ) ; SharedPreferences.Editor . commit ( ) ; ReminderAlarm . restart ( ) ; return true ; } } ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { if ( ( java.lang.Boolean ) java.lang.Object ) { getActivity ( ) . startService ( new Intent ( getActivity ( ) , NotificationService .class ) ) ; } else { if ( getActivity ( ) . startService ( new Intent ( getActivity ( ) , NotificationService .class ) ) != null ) { getActivity ( ) . stopService ( new Intent ( getActivity ( ) , NotificationService .class ) ) ; } } final SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.settings.fragments.Preference . getEditor ( ) ; SharedPreferences.Editor . putBoolean ( STRING , ( java.lang.Boolean ) java.lang.Object ) ; SharedPreferences.Editor . commit ( ) ; NotificationService . updateServices ( getActivity ( ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { final SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.settings.fragments.Preference . getEditor ( ) ; SharedPreferences.Editor . putBoolean ( STRING , ( java.lang.Boolean ) java.lang.Object ) ; SharedPreferences.Editor . commit ( ) ; NotificationService . updateServices ( getActivity ( ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { Optional < ListMirakel > de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> = ListMirakel . get ( java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ) ; if ( ! de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> . isPresent ( ) ) { return false ; } final java.lang.String java.lang.String = de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> . get ( ) . getName ( ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( getActivity ( ) . getString ( R . string . notifications_list_summary , java.lang.String ) ) ; MirakelCommonPreferences . setNotificationsListId ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( ( java.lang.String ) java.lang.Object ) ; NotificationService . updateServices ( getActivity ( ) ) ; return false ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { final SharedPreferences . SharedPreferences SharedPreferences.Editor = de.azapps.mirakel.settings.fragments.Preference . getEditor ( ) ; SharedPreferences.Editor . putBoolean ( STRING , ( java.lang.Boolean ) java.lang.Object ) ; SharedPreferences.Editor . commit ( ) ; ReminderAlarm . restart ( ) ; return true ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.settings.fragments.Settings de.azapps.mirakel.settings.fragments.Settings ( ) { return Settings . NOTIFICATION ; } 
@ java.lang.Override public void void ( final Activity de.azapps.mirakel.settings.fragments.Activity ) { super. onAttach ( de.azapps.mirakel.settings.fragments.Activity ) ; if ( de.azapps.mirakel.settings.fragments.Context == null ) { de.azapps.mirakel.settings.fragments.Context = de.azapps.mirakel.settings.fragments.Activity ; } java.util.List<de.azapps.mirakel.settings.fragments.Semantic> = Semantic . all ( ) ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.settings.fragments.Settings de.azapps.mirakel.settings.fragments.Settings ( ) { return Settings . TASK_TEMPLATES ; } 
@ java.lang.Override protected void void ( final PreferenceScreen de.azapps.mirakel.settings.fragments.PreferenceScreen ) { if ( recyclerView != null ) { final ExpandableSettingsAdapter de.azapps.mirakel.settings.fragments.ExpandableSettingsAdapter = new ExpandableSettingsAdapter ( de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; de.azapps.mirakel.settings.fragments.ExpandableSettingsAdapter . setRemoveListener ( SwipeLinearLayout.OnItemRemoveListener ( ) ) ; if ( ! boolean ) { recyclerView . addItemDecoration ( new DividerItemDecoration ( getActivity ( ) , null ) ) ; boolean = true ; } recyclerView . swapAdapter ( de.azapps.mirakel.settings.fragments.ExpandableSettingsAdapter , false ) ; } } 
@ java.lang.Override public void void ( ) { if ( de.azapps.mirakel.settings.fragments.Semantic != null ) { de.azapps.mirakel.settings.fragments.Semantic . destroy ( ) ; de.azapps.mirakel.settings.fragments.Semantic = null ; } super. onDestroy ( ) ; } 
private void void ( final ExpandablePreference de.azapps.mirakel.settings.fragments.ExpandablePreference , final Semantic de.azapps.mirakel.settings.fragments.Semantic ) { final PreferenceCategory de.azapps.mirakel.settings.fragments.PreferenceCategory = new PreferenceCategory ( de.azapps.mirakel.settings.fragments.Context ) ; de.azapps.mirakel.settings.fragments.PreferenceCategory . setTitle ( R . string . general ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . addChild ( de.azapps.mirakel.settings.fragments.PreferenceCategory ) ; final EditTextPreference de.azapps.mirakel.settings.fragments.EditTextPreference = new EditTextPreference ( de.azapps.mirakel.settings.fragments.Context ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setKey ( STRING + de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setDialogTitle ( R . string . settings_semantics_condition ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.fragments.Semantic . setCondition ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setSummary ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setText ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . setTitle ( de.azapps.mirakel.settings.fragments.Semantic . getName ( ) ) ; return true ; } } ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setText ( de.azapps.mirakel.settings.fragments.Semantic . getCondition ( ) ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setSummary ( de.azapps.mirakel.settings.fragments.Semantic . getCondition ( ) ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setTitle ( R . string . settings_semantics_condition ) ; de.azapps.mirakel.settings.fragments.PreferenceCategory . addPreference ( de.azapps.mirakel.settings.fragments.EditTextPreference ) ; final PreferenceCategory de.azapps.mirakel.settings.fragments.PreferenceCategory = new PreferenceCategory ( de.azapps.mirakel.settings.fragments.Context ) ; de.azapps.mirakel.settings.fragments.PreferenceCategory . setTitle ( R . string . settings_semantics_actions ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . addChild ( de.azapps.mirakel.settings.fragments.PreferenceCategory ) ; final ListPreference de.azapps.mirakel.settings.fragments.ListPreference = new ListPreference ( de.azapps.mirakel.settings.fragments.Context ) ; de.azapps.mirakel.settings.fragments.ListPreference . setTitle ( R . string . settings_semantics_priority ) ; de.azapps.mirakel.settings.fragments.ListPreference . setDialogTitle ( R . string . settings_semantics_priority ) ; de.azapps.mirakel.settings.fragments.ListPreference . setKey ( STRING + de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.fragments.Preference , java.lang.Object java.lang.Object ) { if ( java.lang.String . boolean ( java.lang.Object ) ) { de.azapps.mirakel.settings.fragments.Semantic . setPriority ( Optional .< java.lang.Integer > absent ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValueIndex ( NUMBER ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListPreference . getEntries ( ) [ NUMBER ] ) ; } else { de.azapps.mirakel.settings.fragments.Semantic . setPriority ( of ( java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( ( java.lang.String ) java.lang.Object ) ; } de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; return true ; } } ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEntries ( R . array . priority_entries ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEntryValues ( R . array . priority_entry_values ) ; if ( ! de.azapps.mirakel.settings.fragments.Semantic . getPriority ( ) . isPresent ( ) ) { de.azapps.mirakel.settings.fragments.ListPreference . setValueIndex ( NUMBER ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( getResources ( ) . getStringArray ( R . array . priority_entries ) [ NUMBER ] ) ; } else { de.azapps.mirakel.settings.fragments.ListPreference . setValue ( de.azapps.mirakel.settings.fragments.Semantic . getPriority ( ) . get ( ) . toString ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListPreference . getValue ( ) ) ; } de.azapps.mirakel.settings.fragments.PreferenceCategory . addPreference ( de.azapps.mirakel.settings.fragments.ListPreference ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = new Preference ( de.azapps.mirakel.settings.fragments.Context ) ; de.azapps.mirakel.settings.fragments.Preference . setTitle ( R . string . settings_semantics_due ) ; de.azapps.mirakel.settings.fragments.Preference . setKey ( STRING + de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ) ; de.azapps.mirakel.settings.fragments.Preference . setSummary ( java.lang.String ( de.azapps.mirakel.settings.fragments.Semantic ) ) ; de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { final DueDialog de.azapps.mirakel.settings.fragments.DueDialog = new DueDialog ( de.azapps.mirakel.settings.fragments.Context , false ) ; de.azapps.mirakel.settings.fragments.DueDialog . setTitle ( de.azapps.mirakel.settings.fragments.Preference . getTitle ( ) ) ; de.azapps.mirakel.settings.fragments.DueDialog . setValue ( int ) ; de.azapps.mirakel.settings.fragments.DueDialog . setNegativeButton ( android . R . string . cancel , null ) ; de.azapps.mirakel.settings.fragments.DueDialog . setNeutralButton ( R . string . no_date , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { de.azapps.mirakel.settings.fragments.Semantic . setDue ( Optional .< java.lang.Integer > absent ( ) ) ; de.azapps.mirakel.settings.fragments.Preference . setSummary ( java.lang.String ( de.azapps.mirakel.settings.fragments.Semantic ) ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; } } ) ; de.azapps.mirakel.settings.fragments.DueDialog . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { final int int = de.azapps.mirakel.settings.fragments.DueDialog . getValue ( ) ; final DueDialog . DueDialog DueDialog.VALUE = de.azapps.mirakel.settings.fragments.DueDialog . getDayYear ( ) ; switch ( DueDialog.VALUE ) { case DAY : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int ) ) ; break; case MONTH : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int * NUMBER ) ) ; break; case YEAR : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int * NUMBER ) ) ; break; case HOUR : case MINUTE : default: break; } de.azapps.mirakel.settings.fragments.Preference . setSummary ( java.lang.String ( de.azapps.mirakel.settings.fragments.Semantic ) ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; } } ) ; de.azapps.mirakel.settings.fragments.DueDialog . show ( ) ; return false ; } } ) ; de.azapps.mirakel.settings.fragments.PreferenceCategory . addPreference ( de.azapps.mirakel.settings.fragments.Preference ) ; final Optional < java.lang.Integer > de.azapps.mirakel.settings.fragments.Optional<java.lang.Integer> = de.azapps.mirakel.settings.fragments.Semantic . getWeekday ( ) ; final ListPreference de.azapps.mirakel.settings.fragments.ListPreference = new ListPreference ( de.azapps.mirakel.settings.fragments.Context ) ; de.azapps.mirakel.settings.fragments.ListPreference . setTitle ( R . string . settings_semantics_weekday ) ; de.azapps.mirakel.settings.fragments.ListPreference . setDialogTitle ( R . string . settings_semantics_weekday ) ; de.azapps.mirakel.settings.fragments.ListPreference . setKey ( STRING + de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.fragments.Preference , java.lang.Object java.lang.Object ) { java.lang.Integer java.lang.Integer = java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ; if ( java.lang.Integer == NUMBER ) { java.lang.Integer = null ; } de.azapps.mirakel.settings.fragments.Semantic . setWeekday ( fromNullable ( java.lang.Integer ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListPreference . getEntry ( ) ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; return true ; } } ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEntries ( R . array . weekdays ) ; final java.lang.CharSequence [] java.lang.CharSequence[] = { STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING } ; de.azapps.mirakel.settings.fragments.ListPreference . setEntryValues ( java.lang.CharSequence[] ) ; if ( de.azapps.mirakel.settings.fragments.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.settings.fragments.ListPreference . setValueIndex ( de.azapps.mirakel.settings.fragments.Optional<java.lang.Integer> . get ( ) ) ; } else { de.azapps.mirakel.settings.fragments.ListPreference . setValueIndex ( NUMBER ) ; } de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListPreference . getEntry ( ) ) ; de.azapps.mirakel.settings.fragments.PreferenceCategory . addPreference ( de.azapps.mirakel.settings.fragments.ListPreference ) ; final ListPreference de.azapps.mirakel.settings.fragments.ListPreference = new ListPreference ( de.azapps.mirakel.settings.fragments.Context ) ; de.azapps.mirakel.settings.fragments.ListPreference . setTitle ( R . string . settings_semantics_list ) ; de.azapps.mirakel.settings.fragments.ListPreference . setDialogTitle ( R . string . settings_semantics_list ) ; de.azapps.mirakel.settings.fragments.ListPreference . setKey ( STRING + de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { if ( java.lang.String . boolean ( java.lang.Object ) ) { de.azapps.mirakel.settings.fragments.Semantic . setList ( Optional .< ListMirakel > absent ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValueIndex ( NUMBER ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListPreference . getEntries ( ) [ NUMBER ] ) ; } else { final Optional < ListMirakel > de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> = ListMirakel . get ( java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ) ; de.azapps.mirakel.settings.fragments.Semantic . setList ( de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( ( java.lang.String ) java.lang.Object ) ; OptionalUtils . withOptional ( de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> , new OptionalUtils . OptionalUtils < ListMirakel > ( ) { @ Override public void apply ( final ListMirakel input ) { semanticsList . setSummary ( input . getName ( ) ) ; } } ) ; } de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; return true ; } } ) ; final java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> = ListMirakel . all ( false ) ; final java.lang.CharSequence [] java.lang.CharSequence[] = new java.lang.CharSequence [ java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . size ( ) + NUMBER ] ; final java.lang.CharSequence [] java.lang.CharSequence[] = new java.lang.CharSequence [ java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . size ( ) + NUMBER ] ; java.lang.CharSequence[] [ NUMBER ] = getString ( R . string . semantics_no_list ) ; java.lang.CharSequence[] [ NUMBER ] = java.lang.String ; for ( int int = NUMBER ; int < java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . size ( ) ; int ++ ) { java.lang.CharSequence[] [ int + NUMBER ] = java.lang.String . java.lang.String ( java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . get ( int ) . getId ( ) ) ; java.lang.CharSequence[] [ int + NUMBER ] = java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . get ( int ) . getName ( ) ; } de.azapps.mirakel.settings.fragments.ListPreference . setEntries ( java.lang.CharSequence[] ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEntryValues ( java.lang.CharSequence[] ) ; if ( ! de.azapps.mirakel.settings.fragments.Semantic . getList ( ) . isPresent ( ) ) { de.azapps.mirakel.settings.fragments.ListPreference . setValueIndex ( NUMBER ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( getString ( R . string . semantics_no_list ) ) ; } else { final ListMirakel de.azapps.mirakel.settings.fragments.ListMirakel = de.azapps.mirakel.settings.fragments.Semantic . getList ( ) . get ( ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( java.lang.String . java.lang.String ( de.azapps.mirakel.settings.fragments.ListMirakel . getId ( ) ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListMirakel . getName ( ) ) ; } de.azapps.mirakel.settings.fragments.PreferenceCategory . addPreference ( de.azapps.mirakel.settings.fragments.ListPreference ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.fragments.Semantic . setCondition ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setSummary ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.EditTextPreference . setText ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . setTitle ( de.azapps.mirakel.settings.fragments.Semantic . getName ( ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.fragments.Preference , java.lang.Object java.lang.Object ) { if ( java.lang.String . boolean ( java.lang.Object ) ) { de.azapps.mirakel.settings.fragments.Semantic . setPriority ( Optional .< java.lang.Integer > absent ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValueIndex ( NUMBER ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListPreference . getEntries ( ) [ NUMBER ] ) ; } else { de.azapps.mirakel.settings.fragments.Semantic . setPriority ( of ( java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( ( java.lang.String ) java.lang.Object ) ; } de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { final DueDialog de.azapps.mirakel.settings.fragments.DueDialog = new DueDialog ( de.azapps.mirakel.settings.fragments.Context , false ) ; de.azapps.mirakel.settings.fragments.DueDialog . setTitle ( de.azapps.mirakel.settings.fragments.Preference . getTitle ( ) ) ; de.azapps.mirakel.settings.fragments.DueDialog . setValue ( int ) ; de.azapps.mirakel.settings.fragments.DueDialog . setNegativeButton ( android . R . string . cancel , null ) ; de.azapps.mirakel.settings.fragments.DueDialog . setNeutralButton ( R . string . no_date , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { de.azapps.mirakel.settings.fragments.Semantic . setDue ( Optional .< java.lang.Integer > absent ( ) ) ; de.azapps.mirakel.settings.fragments.Preference . setSummary ( java.lang.String ( de.azapps.mirakel.settings.fragments.Semantic ) ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; } } ) ; de.azapps.mirakel.settings.fragments.DueDialog . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { final int int = de.azapps.mirakel.settings.fragments.DueDialog . getValue ( ) ; final DueDialog . DueDialog DueDialog.VALUE = de.azapps.mirakel.settings.fragments.DueDialog . getDayYear ( ) ; switch ( DueDialog.VALUE ) { case DAY : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int ) ) ; break; case MONTH : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int * NUMBER ) ) ; break; case YEAR : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int * NUMBER ) ) ; break; case HOUR : case MINUTE : default: break; } de.azapps.mirakel.settings.fragments.Preference . setSummary ( java.lang.String ( de.azapps.mirakel.settings.fragments.Semantic ) ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; } } ) ; de.azapps.mirakel.settings.fragments.DueDialog . show ( ) ; return false ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { de.azapps.mirakel.settings.fragments.Semantic . setDue ( Optional .< java.lang.Integer > absent ( ) ) ; de.azapps.mirakel.settings.fragments.Preference . setSummary ( java.lang.String ( de.azapps.mirakel.settings.fragments.Semantic ) ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.fragments.DialogInterface , final int int ) { final int int = de.azapps.mirakel.settings.fragments.DueDialog . getValue ( ) ; final DueDialog . DueDialog DueDialog.VALUE = de.azapps.mirakel.settings.fragments.DueDialog . getDayYear ( ) ; switch ( DueDialog.VALUE ) { case DAY : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int ) ) ; break; case MONTH : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int * NUMBER ) ) ; break; case YEAR : de.azapps.mirakel.settings.fragments.Semantic . setDue ( of ( int * NUMBER ) ) ; break; case HOUR : case MINUTE : default: break; } de.azapps.mirakel.settings.fragments.Preference . setSummary ( java.lang.String ( de.azapps.mirakel.settings.fragments.Semantic ) ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.fragments.Preference , java.lang.Object java.lang.Object ) { java.lang.Integer java.lang.Integer = java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ; if ( java.lang.Integer == NUMBER ) { java.lang.Integer = null ; } de.azapps.mirakel.settings.fragments.Semantic . setWeekday ( fromNullable ( java.lang.Integer ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListPreference . getEntry ( ) ) ; de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { if ( java.lang.String . boolean ( java.lang.Object ) ) { de.azapps.mirakel.settings.fragments.Semantic . setList ( Optional .< ListMirakel > absent ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValueIndex ( NUMBER ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( de.azapps.mirakel.settings.fragments.ListPreference . getEntries ( ) [ NUMBER ] ) ; } else { final Optional < ListMirakel > de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> = ListMirakel . get ( java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ) ; de.azapps.mirakel.settings.fragments.Semantic . setList ( de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> ) ; de.azapps.mirakel.settings.fragments.ListPreference . setValue ( ( java.lang.String ) java.lang.Object ) ; OptionalUtils . withOptional ( de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.ListMirakel> , new OptionalUtils . OptionalUtils < ListMirakel > ( ) { @ Override public void apply ( final ListMirakel input ) { semanticsList . setSummary ( input . getName ( ) ) ; } } ) ; } de.azapps.mirakel.settings.fragments.Semantic . save ( ) ; return true ; } 
@ Override public void apply ( final ListMirakel input ) { semanticsList . setSummary ( input . getName ( ) ) ; } 
protected java.lang.String java.lang.String ( final @ NonNull Semantic de.azapps.mirakel.settings.fragments.Semantic ) { final Optional < java.lang.Integer > de.azapps.mirakel.settings.fragments.Optional<java.lang.Integer> = de.azapps.mirakel.settings.fragments.Semantic . getDue ( ) ; final java.lang.String java.lang.String ; if ( ! de.azapps.mirakel.settings.fragments.Optional<java.lang.Integer> . isPresent ( ) ) { this . int = NUMBER ; java.lang.String = getString ( R . string . semantics_no_due ) ; } else { final java.lang.Integer java.lang.Integer = de.azapps.mirakel.settings.fragments.Optional<java.lang.Integer> . get ( ) ; if ( ( ( java.lang.Integer % NUMBER ) == NUMBER ) && ( java.lang.Integer != NUMBER ) ) { this . int = java.lang.Integer / NUMBER ; java.lang.String = this . int + STRING + getResources ( ) . getQuantityString ( R . plurals . due_year , this . int ) ; } else if ( ( ( java.lang.Integer % NUMBER ) == NUMBER ) && ( java.lang.Integer != NUMBER ) ) { this . int = java.lang.Integer / NUMBER ; java.lang.String = this . int + STRING + getResources ( ) . getQuantityString ( R . plurals . due_month , this . int ) ; } else { this . int = java.lang.Integer ; java.lang.String = this . int + STRING + getResources ( ) . getQuantityString ( R . plurals . due_day , this . int ) ; } } return java.lang.String ; } 
@ NonNull public de.azapps.mirakel.settings.fragments.View de.azapps.mirakel.settings.fragments.View ( @ NonNull final LayoutInflater de.azapps.mirakel.settings.fragments.LayoutInflater , final ViewGroup de.azapps.mirakel.settings.fragments.ViewGroup , final Bundle de.azapps.mirakel.settings.fragments.Bundle ) { final View de.azapps.mirakel.settings.fragments.View = super. onCreateView ( de.azapps.mirakel.settings.fragments.LayoutInflater , de.azapps.mirakel.settings.fragments.ViewGroup , de.azapps.mirakel.settings.fragments.Bundle ) ; recyclerView . addItemDecoration ( new DividerItemDecoration ( getResources ( ) . getDrawable ( android . R . drawable . divider_horizontal_dark ) ) ) ; return de.azapps.mirakel.settings.fragments.View ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.settings.fragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.fragments.Bundle ) ; addPreferencesFromResource ( R . xml . settings_about ) ; de.azapps.mirakel.settings.fragments.PreferenceScreen = getPreferenceScreen ( ) ; de.azapps.mirakel.settings.fragments.PreferenceScreen . removeAll ( ) ; for ( final Semantic de.azapps.mirakel.settings.fragments.Semantic : java.util.List<de.azapps.mirakel.settings.fragments.Semantic> ) { final ExpandablePreference de.azapps.mirakel.settings.fragments.ExpandablePreference = new ExpandablePreference ( de.azapps.mirakel.settings.fragments.Context , de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . setKey ( SwipeLinearLayout . SWIPEABLE_VIEW + de.azapps.mirakel.settings.fragments.Semantic . getName ( ) + de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ) ; de.azapps.mirakel.settings.fragments.PreferenceScreen . addPreference ( de.azapps.mirakel.settings.fragments.ExpandablePreference ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . setTitle ( de.azapps.mirakel.settings.fragments.Semantic . getName ( ) ) ; void ( de.azapps.mirakel.settings.fragments.ExpandablePreference , de.azapps.mirakel.settings.fragments.Semantic ) ; java.util.List<de.azapps.mirakel.settings.fragments.ExpandablePreference> . add ( de.azapps.mirakel.settings.fragments.ExpandablePreference ) ; } updateScreen ( de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
@ java.lang.Override protected boolean boolean ( ) { return true ; } 
@ java.lang.Override public void void ( final Menu de.azapps.mirakel.settings.fragments.Menu , final MenuInflater de.azapps.mirakel.settings.fragments.MenuInflater ) { de.azapps.mirakel.settings.fragments.MenuInflater . inflate ( R . menu . semantic_menu , de.azapps.mirakel.settings.fragments.Menu ) ; } 
@ java.lang.Override public boolean boolean ( final MenuItem de.azapps.mirakel.settings.fragments.MenuItem ) { if ( de.azapps.mirakel.settings.fragments.MenuItem . getItemId ( ) == R . id . action_create_semantic ) { final Semantic de.azapps.mirakel.settings.fragments.Semantic = Semantic . newSemantic ( getString ( R . string . semantic_new ) , null , null , Optional .< ListMirakel > absent ( ) , null ) ; AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . CREATED_SEMANTIC ) ; java.util.List<de.azapps.mirakel.settings.fragments.Semantic> . add ( de.azapps.mirakel.settings.fragments.Semantic ) ; final ExpandablePreference de.azapps.mirakel.settings.fragments.ExpandablePreference = new ExpandablePreference ( de.azapps.mirakel.settings.fragments.Context , de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . setKey ( SwipeLinearLayout . SWIPEABLE_VIEW + de.azapps.mirakel.settings.fragments.Semantic . getName ( ) + de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . setTitle ( de.azapps.mirakel.settings.fragments.Semantic . getName ( ) ) ; de.azapps.mirakel.settings.fragments.PreferenceScreen . addPreference ( de.azapps.mirakel.settings.fragments.ExpandablePreference ) ; void ( de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; de.azapps.mirakel.settings.fragments.ExpandablePreference . setExpanded ( true ) ; void ( de.azapps.mirakel.settings.fragments.ExpandablePreference , de.azapps.mirakel.settings.fragments.Semantic ) ; recyclerView . smoothScrollToPosition ( java.util.List<de.azapps.mirakel.settings.fragments.ExpandablePreference> . size ( ) ) ; return true ; } else { return false ; } } 
@ java.lang.Override @ Nullable protected SwipeLinearLayout . SwipeLinearLayout.OnItemRemoveListener SwipeLinearLayout.OnItemRemoveListener ( ) { return this ; } 
@ java.lang.Override public void void ( final int int , final int int ) { if ( int < java.util.List<de.azapps.mirakel.settings.fragments.Semantic> . size ( ) ) { if ( de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.Pair<java.lang.Integer,de.azapps.mirakel.settings.fragments.Snackbar>> . isPresent ( ) && ( de.azapps.mirakel.settings.fragments.Semantic != null ) ) { void ( de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.Pair<java.lang.Integer,de.azapps.mirakel.settings.fragments.Snackbar>> . get ( ) . first ) ; } de.azapps.mirakel.settings.fragments.Semantic = java.util.List<de.azapps.mirakel.settings.fragments.Semantic> . remove ( int ) ; final long long = de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ; de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.Pair<java.lang.Integer,de.azapps.mirakel.settings.fragments.Snackbar>> = of ( new Pair <> ( int , Snackbar . with ( getActivity ( ) ) . text ( getActivity ( ) . getString ( R . string . delete_semantic ) ) . actionLabel ( R . string . undo ) . eventListener ( new de.azapps.mirakel.settings.fragments.SemanticFragment.SnackbarEventListener ( long , int ) ) . actionListener ( new ActionClickListener ( ) { @ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.fragments.Snackbar ) { java.util.List<de.azapps.mirakel.settings.fragments.Semantic> . add ( int , de.azapps.mirakel.settings.fragments.Semantic ) ; de.azapps.mirakel.settings.fragments.Semantic = null ; updateScreen ( de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; } } ) ) ) ; SnackbarManager . show ( de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.Pair<java.lang.Integer,de.azapps.mirakel.settings.fragments.Snackbar>> . get ( ) . second ) ; } } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.fragments.Snackbar ) { java.util.List<de.azapps.mirakel.settings.fragments.Semantic> . add ( int , de.azapps.mirakel.settings.fragments.Semantic ) ; de.azapps.mirakel.settings.fragments.Semantic = null ; updateScreen ( de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; } 
private void void ( final int int ) { final Preference de.azapps.mirakel.settings.fragments.Preference = de.azapps.mirakel.settings.fragments.PreferenceScreen . getPreference ( int ) ; de.azapps.mirakel.settings.fragments.PreferenceScreen . removePreference ( de.azapps.mirakel.settings.fragments.Preference ) ; if ( de.azapps.mirakel.settings.fragments.Semantic != null ) { de.azapps.mirakel.settings.fragments.Semantic . destroy ( ) ; de.azapps.mirakel.settings.fragments.Semantic = null ; } } 
public void ( final long long , final int int ) { this . long = long ; this . int = int ; } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.fragments.Snackbar ) {        } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.fragments.Snackbar ) {        } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.fragments.Snackbar ) {        } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.fragments.Snackbar ) {        } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.fragments.Snackbar ) {        } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.fragments.Snackbar ) { if ( ( de.azapps.mirakel.settings.fragments.Semantic != null ) && ( long == de.azapps.mirakel.settings.fragments.Semantic . getId ( ) ) ) { void ( int ) ; updateScreen ( de.azapps.mirakel.settings.fragments.PreferenceScreen ) ; } de.azapps.mirakel.settings.fragments.Optional<de.azapps.mirakel.settings.fragments.Pair<java.lang.Integer,de.azapps.mirakel.settings.fragments.Snackbar>> = absent ( ) ; } 
@ java.lang.Override public void void ( Bundle de.azapps.mirakel.settings.fragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.fragments.Bundle ) ; addPreferencesFromResource ( R . xml . settings_gui ) ; final java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> = ListMirakel . all ( ) ; final java.lang.CharSequence java.lang.CharSequence[] [] = new java.lang.String [ java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . size ( ) ] ; final java.lang.CharSequence java.lang.CharSequence[] [] = new java.lang.String [ java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> . size ( ) ] ; int int = NUMBER ; for ( final ListMirakel de.azapps.mirakel.settings.fragments.ListMirakel : java.util.List<de.azapps.mirakel.settings.fragments.ListMirakel> ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( de.azapps.mirakel.settings.fragments.ListMirakel . getId ( ) ) ; final java.lang.String java.lang.String = de.azapps.mirakel.settings.fragments.ListMirakel . getName ( ) ; java.lang.CharSequence[] [ int ] = java.lang.String ; java.lang.CharSequence[] [ int ] = java.lang.String ; int ++ ; } final ListPreference de.azapps.mirakel.settings.fragments.ListPreference = ( ListPreference ) findPreference ( STRING ) ; void ( de.azapps.mirakel.settings.fragments.ListPreference , MirakelCommonPreferences . getLanguage ( ) ) ; de.azapps.mirakel.settings.fragments.ListPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { void ( de.azapps.mirakel.settings.fragments.ListPreference , java.lang.Object . java.lang.String ( ) ) ; MirakelPreferences . getEditor ( ) . putString ( STRING , java.lang.Object . java.lang.String ( ) ) . commit ( ) ; Helpers . restartApp ( getActivity ( ) ) ; return false ; } } ) ; final ListPreference de.azapps.mirakel.settings.fragments.ListPreference = ( ListPreference ) findPreference ( STRING ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEntries ( java.lang.CharSequence[] ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEntryValues ( java.lang.CharSequence[] ) ; de.azapps.mirakel.settings.fragments.ListPreference . setEnabled ( true ) ; final Preference de.azapps.mirakel.settings.fragments.Preference = findPreference ( STRING ) ; if ( de.azapps.mirakel.settings.fragments.Preference != null ) { de.azapps.mirakel.settings.fragments.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { if ( getActivity ( ) instanceof SettingsActivity ) { ( ( SettingsActivity ) getActivity ( ) ) . onItemSelected ( Settings . TASK_TEMPLATES ) ; } else { ( ( GenericModelDetailActivity ) getActivity ( ) ) . setFragment ( Settings . TASK_TEMPLATES . getFragment ( ) ) ; } return true ; } } ) ; } final SwitchCompatPreference de.azapps.mirakel.settings.fragments.SwitchCompatPreference = ( SwitchCompatPreference ) findPreference ( STRING ) ; if ( de.azapps.mirakel.settings.fragments.SwitchCompatPreference != null ) { if ( DefinitionsHelper . isFdroid ( ) ) { getPreferenceScreen ( ) . removePreference ( de.azapps.mirakel.settings.fragments.SwitchCompatPreference ) ; } else { de.azapps.mirakel.settings.fragments.SwitchCompatPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.fragments.Preference , java.lang.Object java.lang.Object ) { boolean boolean = ( boolean ) java.lang.Object ; if ( ! boolean ) { AnalyticsWrapperBase . getWrapper ( ) . doNotTrack ( ) ; } return true ; } } ) ; } } } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference , final java.lang.Object java.lang.Object ) { void ( de.azapps.mirakel.settings.fragments.ListPreference , java.lang.Object . java.lang.String ( ) ) ; MirakelPreferences . getEditor ( ) . putString ( STRING , java.lang.Object . java.lang.String ( ) ) . commit ( ) ; Helpers . restartApp ( getActivity ( ) ) ; return false ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.fragments.Preference ) { if ( getActivity ( ) instanceof SettingsActivity ) { ( ( SettingsActivity ) getActivity ( ) ) . onItemSelected ( Settings . TASK_TEMPLATES ) ; } else { ( ( GenericModelDetailActivity ) getActivity ( ) ) . setFragment ( Settings . TASK_TEMPLATES . getFragment ( ) ) ; } return true ; } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.fragments.Preference , java.lang.Object java.lang.Object ) { boolean boolean = ( boolean ) java.lang.Object ; if ( ! boolean ) { AnalyticsWrapperBase . getWrapper ( ) . doNotTrack ( ) ; } return true ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; AnalyticsWrapperBase . setScreen ( this ) ; } 
private void void ( final ListPreference de.azapps.mirakel.settings.fragments.ListPreference , final java.lang.String java.lang.String ) { final java.lang.String [] java.lang.String[] = getResources ( ) . getStringArray ( R . array . language_keys ) ; de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( java.lang.String[] [ NUMBER ] ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { if ( java.lang.String . boolean ( java.lang.String[] [ int ] ) ) { de.azapps.mirakel.settings.fragments.ListPreference . setSummary ( getResources ( ) . getStringArray ( R . array . language_values ) [ int ] ) ; break; } } } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.settings.fragments.Settings de.azapps.mirakel.settings.fragments.Settings ( ) { return Settings . UI ; } 
@ Nullable public static java.lang.Integer java.lang.Integer ( @ NonNull final java.lang.String java.lang.String , final @ NonNull PreferenceScreen de.azapps.mirakel.settings.helper.PreferenceScreen ) { final android . android . android android.widget.Adapter = de.azapps.mirakel.settings.helper.PreferenceScreen . getRootAdapter ( ) ; for ( int int = NUMBER ; int < android.widget.Adapter . getCount ( ) ; int ++ ) { final java.lang.String java.lang.String = ( ( Preference ) android.widget.Adapter . getItem ( int ) ) . getKey ( ) ; if ( java.lang.String != null && java.lang.String . boolean ( java.lang.String ) ) { return int ; } if ( android.widget.Adapter . getItem ( int ) instanceof PreferenceScreen ) { final java.lang.Integer java.lang.Integer = java.lang.Integer ( java.lang.String , ( PreferenceScreen ) android.widget.Adapter . getItem ( int ) ) ; if ( java.lang.Integer != null ) { return java.lang.Integer ; } } } return null ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.model_settings.account.AccountMirakel de.azapps.mirakel.settings.model_settings.account.AccountMirakel ( ) { return AccountMirakel . getLocal ( ) ; } 
@ java.lang.Override protected int int ( ) { return R . xml . settings_account ; } 
@ java.lang.Override protected boolean boolean ( ) { return true ; } 
@ java.lang.Override protected boolean boolean ( ) { return false ; } 
@ java.lang.Override protected void void ( ) { final AccountManager de.azapps.mirakel.settings.model_settings.account.AccountManager = AccountManager . get ( getActivity ( ) ) ; final AccountMirakel de.azapps.mirakel.settings.model_settings.account.AccountMirakel = mItem ; final Account de.azapps.mirakel.settings.model_settings.account.Account = de.azapps.mirakel.settings.model_settings.account.AccountMirakel . getAndroidAccount ( ) ; final Preference de.azapps.mirakel.settings.model_settings.account.Preference = findPreference ( STRING ) ; final EditTextPreference de.azapps.mirakel.settings.model_settings.account.EditTextPreference = ( EditTextPreference ) findPreference ( STRING ) ; final SwitchPreference de.azapps.mirakel.settings.model_settings.account.SwitchPreference = ( SwitchPreference ) findPreference ( STRING ) ; final Preference de.azapps.mirakel.settings.model_settings.account.Preference = findPreference ( STRING ) ; final SwitchPreference de.azapps.mirakel.settings.model_settings.account.SwitchPreference = ( SwitchPreference ) findPreference ( STRING ) ; final Preference de.azapps.mirakel.settings.model_settings.account.Preference = findPreference ( STRING ) ; de.azapps.mirakel.settings.model_settings.account.Preference . setEnabled ( false ) ; de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel . getName ( ) ) ; if ( AccountMirakel . ACCOUNT_TYPES . TASKWARRIOR == de.azapps.mirakel.settings.model_settings.account.AccountMirakel . getType ( ) ) { de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setEnabled ( false ) ; de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setSummary ( de.azapps.mirakel.settings.model_settings.account.AccountManager . getUserData ( de.azapps.mirakel.settings.model_settings.account.Account , SyncAdapter . BUNDLE_SERVER_URL ) ) ; de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setText ( de.azapps.mirakel.settings.model_settings.account.AccountManager . getUserData ( de.azapps.mirakel.settings.model_settings.account.Account , SyncAdapter . BUNDLE_SERVER_URL ) ) ; de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.account.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.account.AccountManager . setUserData ( de.azapps.mirakel.settings.model_settings.account.Account , SyncAdapter . BUNDLE_SERVER_URL , ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setSummary ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setText ( ( java.lang.String ) java.lang.Object ) ; return false ; } } ) ; } else { de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setEnabled ( false ) ; de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setSummary ( STRING ) ; } de.azapps.mirakel.settings.model_settings.account.SwitchPreference . setChecked ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel . isEnabled ( ) ) ; de.azapps.mirakel.settings.model_settings.account.SwitchPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.account.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.account.AccountMirakel . setEnabled ( ( java.lang.Boolean ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.account.AccountMirakel . save ( ) ; return true ; } } ) ; if ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel . getType ( ) == AccountMirakel . ACCOUNT_TYPES . LOCAL ) { removePreference ( STRING ) ; removePreference ( STRING ) ; removePreference ( STRING ) ; } de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel . getType ( ) . typeName ( getActivity ( ) ) ) ; de.azapps.mirakel.settings.model_settings.account.SwitchPreference . setChecked ( MirakelModelPreferences . getDefaultAccount ( ) . getId ( ) == de.azapps.mirakel.settings.model_settings.account.AccountMirakel . getId ( ) ) ; de.azapps.mirakel.settings.model_settings.account.SwitchPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.account.Preference , final java.lang.Object java.lang.Object ) { if ( ( java.lang.Boolean ) java.lang.Object ) { MirakelModelPreferences . setDefaultAccount ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel ) ; } else { MirakelModelPreferences . setDefaultAccount ( AccountMirakel . getLocal ( ) ) ; } de.azapps.mirakel.settings.model_settings.account.SwitchPreference . setChecked ( ( java.lang.Boolean ) java.lang.Object ) ; return false ; } } ) ; de.azapps.mirakel.settings.model_settings.account.Preference . setEnabled ( false ) ; if ( MirakelModelPreferences . getSyncFrequency ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel ) == - NUMBER ) { de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( R . string . sync_frequency_summary_man ) ; } else { de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( this . getString ( R . string . sync_frequency_summary , MirakelModelPreferences . getSyncFrequency ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel ) ) ) ; } de.azapps.mirakel.settings.model_settings.account.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.account.Preference ) { int int = MirakelModelPreferences . getSyncFrequency ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel ) ; if ( int == - NUMBER ) { int = NUMBER ; } final int int = int % NUMBER ; int = ( int ) java.lang.Math . double ( int / NUMBER ) ; final TimePicker de.azapps.mirakel.settings.model_settings.account.TimePicker = new TimePicker ( getActivity ( ) ) ; de.azapps.mirakel.settings.model_settings.account.TimePicker . setIs24HourView ( true ) ; de.azapps.mirakel.settings.model_settings.account.TimePicker . setCurrentHour ( int ) ; de.azapps.mirakel.settings.model_settings.account.TimePicker . setCurrentMinute ( int ) ; final AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) . setTitle ( R . string . sync_frequency ) . setView ( de.azapps.mirakel.settings.model_settings.account.TimePicker ) . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { int int = de.azapps.mirakel.settings.model_settings.account.TimePicker . getCurrentHour ( ) * NUMBER + de.azapps.mirakel.settings.model_settings.account.TimePicker . getCurrentMinute ( ) ; if ( int == NUMBER ) { int = - NUMBER ; } final Bundle de.azapps.mirakel.settings.model_settings.account.Bundle = new Bundle ( ) ; if ( int == - NUMBER ) { de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( R . string . sync_frequency_summary_man ) ; } else { de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( getActivity ( ) . getString ( R . string . sync_frequency_summary , int ) ) ; } if ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel != null ) { ContentResolver . removePeriodicSync ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , de.azapps.mirakel.settings.model_settings.account.Bundle ) ; if ( int != - NUMBER ) { ContentResolver . setSyncAutomatically ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , true ) ; ContentResolver . setIsSyncable ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , NUMBER ) ; ContentResolver . addPeriodicSync ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , de.azapps.mirakel.settings.model_settings.account.Bundle , int * NUMBER ) ; } } else { Log . d ( java.lang.String , STRING ) ; } MirakelModelPreferences . setSyncFrequency ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel , int ) ; } } ) ; AlertDialogWrapper.Builder . show ( ) ; return false ; } } ) ; if ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel . getType ( ) != AccountMirakel . ACCOUNT_TYPES . TASKWARRIOR ) { removePreference ( STRING ) ; } else { de.azapps.mirakel.settings.model_settings.account.Preference . setEnabled ( true ) ; } } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.account.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.account.AccountManager . setUserData ( de.azapps.mirakel.settings.model_settings.account.Account , SyncAdapter . BUNDLE_SERVER_URL , ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setSummary ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.account.EditTextPreference . setText ( ( java.lang.String ) java.lang.Object ) ; return false ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.account.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.account.AccountMirakel . setEnabled ( ( java.lang.Boolean ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.account.AccountMirakel . save ( ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.account.Preference , final java.lang.Object java.lang.Object ) { if ( ( java.lang.Boolean ) java.lang.Object ) { MirakelModelPreferences . setDefaultAccount ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel ) ; } else { MirakelModelPreferences . setDefaultAccount ( AccountMirakel . getLocal ( ) ) ; } de.azapps.mirakel.settings.model_settings.account.SwitchPreference . setChecked ( ( java.lang.Boolean ) java.lang.Object ) ; return false ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.account.Preference ) { int int = MirakelModelPreferences . getSyncFrequency ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel ) ; if ( int == - NUMBER ) { int = NUMBER ; } final int int = int % NUMBER ; int = ( int ) java.lang.Math . double ( int / NUMBER ) ; final TimePicker de.azapps.mirakel.settings.model_settings.account.TimePicker = new TimePicker ( getActivity ( ) ) ; de.azapps.mirakel.settings.model_settings.account.TimePicker . setIs24HourView ( true ) ; de.azapps.mirakel.settings.model_settings.account.TimePicker . setCurrentHour ( int ) ; de.azapps.mirakel.settings.model_settings.account.TimePicker . setCurrentMinute ( int ) ; final AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( getActivity ( ) ) . setTitle ( R . string . sync_frequency ) . setView ( de.azapps.mirakel.settings.model_settings.account.TimePicker ) . setPositiveButton ( android . R . string . ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { int int = de.azapps.mirakel.settings.model_settings.account.TimePicker . getCurrentHour ( ) * NUMBER + de.azapps.mirakel.settings.model_settings.account.TimePicker . getCurrentMinute ( ) ; if ( int == NUMBER ) { int = - NUMBER ; } final Bundle de.azapps.mirakel.settings.model_settings.account.Bundle = new Bundle ( ) ; if ( int == - NUMBER ) { de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( R . string . sync_frequency_summary_man ) ; } else { de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( getActivity ( ) . getString ( R . string . sync_frequency_summary , int ) ) ; } if ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel != null ) { ContentResolver . removePeriodicSync ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , de.azapps.mirakel.settings.model_settings.account.Bundle ) ; if ( int != - NUMBER ) { ContentResolver . setSyncAutomatically ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , true ) ; ContentResolver . setIsSyncable ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , NUMBER ) ; ContentResolver . addPeriodicSync ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , de.azapps.mirakel.settings.model_settings.account.Bundle , int * NUMBER ) ; } } else { Log . d ( java.lang.String , STRING ) ; } MirakelModelPreferences . setSyncFrequency ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel , int ) ; } } ) ; AlertDialogWrapper.Builder . show ( ) ; return false ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { int int = de.azapps.mirakel.settings.model_settings.account.TimePicker . getCurrentHour ( ) * NUMBER + de.azapps.mirakel.settings.model_settings.account.TimePicker . getCurrentMinute ( ) ; if ( int == NUMBER ) { int = - NUMBER ; } final Bundle de.azapps.mirakel.settings.model_settings.account.Bundle = new Bundle ( ) ; if ( int == - NUMBER ) { de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( R . string . sync_frequency_summary_man ) ; } else { de.azapps.mirakel.settings.model_settings.account.Preference . setSummary ( getActivity ( ) . getString ( R . string . sync_frequency_summary , int ) ) ; } if ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel != null ) { ContentResolver . removePeriodicSync ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , de.azapps.mirakel.settings.model_settings.account.Bundle ) ; if ( int != - NUMBER ) { ContentResolver . setSyncAutomatically ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , true ) ; ContentResolver . setIsSyncable ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , NUMBER ) ; ContentResolver . addPeriodicSync ( de.azapps.mirakel.settings.model_settings.account.Account , DefinitionsHelper . AUTHORITY_TYP , de.azapps.mirakel.settings.model_settings.account.Bundle , int * NUMBER ) ; } } else { Log . d ( java.lang.String , STRING ) ; } MirakelModelPreferences . setSyncFrequency ( de.azapps.mirakel.settings.model_settings.account.AccountMirakel , int ) ; } 
@ java.lang.Override protected void void ( final Bundle de.azapps.mirakel.settings.model_settings.account.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.model_settings.account.Bundle ) ; AlertDialogWrapper . AlertDialogWrapper AlertDialogWrapper.Builder = new AlertDialogWrapper . AlertDialogWrapper ( this ) ; AlertDialogWrapper.Builder . setTitle ( R . string . settings_dev_sync ) . setMessage ( R . string . sync_message ) . setPositiveButton ( R . string . sync_contact_us , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , int int ) { Helpers . contact ( de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this , getString ( R . string . sync_help_dev ) ) ; } } ) . setNeutralButton ( R . string . title_donations , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , int int ) { final Intent de.azapps.mirakel.settings.model_settings.account.Intent = new Intent ( de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this , SettingsActivity .class ) ; de.azapps.mirakel.settings.model_settings.account.Intent . putExtra ( SettingsActivity . SHOW_FRAGMENT , de . azapps . mirakel . settings . custom_views . Settings . DONATE . ordinal ( ) ) ; de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this . startActivity ( de.azapps.mirakel.settings.model_settings.account.Intent ) ; de.azapps.mirakel.settings.model_settings.account.DialogInterface . dismiss ( ) ; } } ) . setNegativeButton ( R . string . sync_understand , null ) . show ( ) ; } 
@ java.lang.Override public void void ( DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , int int ) { Helpers . contact ( de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this , getString ( R . string . sync_help_dev ) ) ; } 
public void void ( DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , int int ) { final Intent de.azapps.mirakel.settings.model_settings.account.Intent = new Intent ( de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this , SettingsActivity .class ) ; de.azapps.mirakel.settings.model_settings.account.Intent . putExtra ( SettingsActivity . SHOW_FRAGMENT , de . azapps . mirakel . settings . custom_views . Settings . DONATE . ordinal ( ) ) ; de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this . startActivity ( de.azapps.mirakel.settings.model_settings.account.Intent ) ; de.azapps.mirakel.settings.model_settings.account.DialogInterface . dismiss ( ) ; } 
private void void ( final int int , final int int , final android . android . android . android android.content.DialogInterface.OnClickListener ) { new AlertDialogWrapper . AlertDialogWrapper ( this ) . setTitle ( int ) . setMessage ( int ) . setPositiveButton ( android . R . string . ok , android.content.DialogInterface.OnClickListener ) . show ( ) ; } 
protected void void ( ) { new AlertDialogWrapper . AlertDialogWrapper ( this ) . setTitle ( R . string . sync_caldav ) . setMessage ( Html . fromHtml ( this . getString ( R . string . sync_caldav_howto ) ) ) . setNegativeButton ( R . string . download , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { Helpers . openURL ( getBaseContext ( ) , STRING ) ; } } ) . setPositiveButton ( R . string . sync_add_account , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { startActivity ( new Intent ( Settings . ACTION_ADD_ACCOUNT ) ) ; } } ) . show ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { Helpers . openURL ( getBaseContext ( ) , STRING ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { startActivity ( new Intent ( Settings . ACTION_ADD_ACCOUNT ) ) ; } 
@ java.lang.Override protected boolean boolean ( ) { return false ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.model_settings.account.Optional<android.app.Fragment> < android . android . android > de.azapps.mirakel.settings.model_settings.account.Optional<android.app.Fragment> ( final @ NonNull AccountMirakel de.azapps.mirakel.settings.model_settings.account.AccountMirakel ) { return of ( ( Fragment ) new AccountDetailFragment ( ) ) ; } 
@ NonNull @ java.lang.Override protected java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.account.GenericModelListActivity> < ? extends GenericModelListActivity > java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.account.GenericModelListActivity> ( ) { return de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .class ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.model_settings.account.AccountMirakel de.azapps.mirakel.settings.model_settings.account.AccountMirakel ( ) { return AccountMirakel . getLocal ( ) ; } 
@ NonNull @ java.lang.Override protected void void ( @ NonNull Context de.azapps.mirakel.settings.model_settings.account.Context ) { final java.lang.CharSequence [] java.lang.CharSequence[] = getResources ( ) . getTextArray ( R . array . sync_types ) ; new AlertDialogWrapper . AlertDialogWrapper ( this ) . setTitle ( R . string . sync_add ) . setItems ( java.lang.CharSequence[] , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { switch ( int ) { case NUMBER : void ( R . string . alert_caldav_title , R . string . alert_caldav , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { void ( ) ; } } ) ; break; case NUMBER : void ( R . string . alert_taskwarrior_title , R . string . alert_taskwarrior , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { startActivity ( new Intent ( de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this , TaskWarriorSetupActivity .class ) ) ; } } ) ; break; default: break; } de.azapps.mirakel.settings.model_settings.account.DialogInterface . dismiss ( ) ; } } ) . show ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { switch ( int ) { case NUMBER : void ( R . string . alert_caldav_title , R . string . alert_caldav , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { void ( ) ; } } ) ; break; case NUMBER : void ( R . string . alert_taskwarrior_title , R . string . alert_taskwarrior , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { startActivity ( new Intent ( de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this , TaskWarriorSetupActivity .class ) ) ; } } ) ; break; default: break; } de.azapps.mirakel.settings.model_settings.account.DialogInterface . dismiss ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { void ( ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.account.DialogInterface , final int int ) { startActivity ( new Intent ( de.azapps.mirakel.settings.model_settings.account.AccountSettingsActivity .this , TaskWarriorSetupActivity .class ) ) ; } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return getString ( R . string . sync_title ) ; } 
@ java.lang.Override protected java.lang.Class<de.azapps.mirakel.settings.model_settings.account.AccountMirakel> < AccountMirakel > java.lang.Class<de.azapps.mirakel.settings.model_settings.account.AccountMirakel> ( ) { return AccountMirakel .class ; } 
@ java.lang.Override protected de.azapps.mirakel.settings.model_settings.account.Cursor de.azapps.mirakel.settings.model_settings.account.Cursor ( ) { return new MirakelQueryBuilder ( this ) . query ( AccountMirakel . URI ) . getRawCursor ( ) ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) ; setContentView ( R . layout . activity_generic_model_detail ) ; void ( ) ; if ( getSupportActionBar ( ) != null ) { getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; } if ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle == null ) { final java.lang.Class<?> < ? > java.lang.Class<?> = ( java.lang.Class<?> < ? > ) getIntent ( ) . getSerializableExtra ( java.lang.String ) ; java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListActivity> = ( java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListActivity> < ? extends GenericModelListActivity > ) getIntent ( ) . getSerializableExtra ( java.lang.String ) ; final java.lang.Object java.lang.Object ; try { java.lang.Object = java.lang.Class<> . newInstance ( ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException java.lang.ReflectiveOperationException ) { Log . wtf ( java.lang.String , STRING + java.lang.Class<> . java.lang.String ( ) ) ; throw new java.lang.IllegalArgumentException ( STRING + java.lang.Class<> . java.lang.String ( ) , java.lang.ReflectiveOperationException ) ; } void ( java.lang.Object ) ; } } 
@ java.lang.Override protected java.util.Locale java.util.Locale ( ) { return Helpers . getLocale ( this ) ; } 
private void void ( final @ NonNull java.lang.Object java.lang.Object ) { final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle = new Bundle ( ) ; final IGenericElementInterface de.azapps.mirakel.settings.model_settings.generic_list.IGenericElementInterface = getIntent ( ) . getParcelableExtra ( GenericModelDetailFragment . ARG_ITEM ) ; setTitle ( de.azapps.mirakel.settings.model_settings.generic_list.IGenericElementInterface . getName ( ) ) ; de.azapps.mirakel.settings.model_settings.generic_list.Bundle . putParcelable ( GenericModelDetailFragment . ARG_ITEM , de.azapps.mirakel.settings.model_settings.generic_list.IGenericElementInterface ) ; java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; if ( java.lang.Object instanceof android . android . android ) { ( ( android . android . android ) java.lang.Object ) . setArguments ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) ; getFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . speciallist_detail_container , ( ( android . android . android ) java.lang.Object ) , java.lang.String ) . commit ( ) ; } else if ( java.lang.Object instanceof Fragment ) { ( ( Fragment ) java.lang.Object ) . setArguments ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) ; getSupportFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . speciallist_detail_container , ( ( Fragment ) java.lang.Object ) , java.lang.String ) . commit ( ) ; boolean = true ; } } 
public void void ( final @ NonNull android . android . android android.app.Fragment ) { void ( android.app.Fragment ) ; } 
public void void ( final @ NonNull Fragment de.azapps.mirakel.settings.model_settings.generic_list.Fragment ) { void ( de.azapps.mirakel.settings.model_settings.generic_list.Fragment ) ; } 
@ java.lang.Override public void void ( ) { if ( java.util.List<java.lang.Object> . int ( ) > NUMBER ) { java.util.List<java.lang.Object> . java.lang.Object ( java.util.List<java.lang.Object> . int ( ) - NUMBER ) ; void ( java.util.List<java.lang.Object> . java.lang.Object ( java.util.List<java.lang.Object> . int ( ) - NUMBER ) ) ; java.util.List<java.lang.Object> . java.lang.Object ( java.util.List<java.lang.Object> . int ( ) - NUMBER ) ; } else { super. onBackPressed ( ) ; } } 
protected void void ( ) { final Toolbar de.azapps.mirakel.settings.model_settings.generic_list.Toolbar = ( Toolbar ) findViewById ( R . id . actionbar ) ; de.azapps.mirakel.settings.model_settings.generic_list.Toolbar . setBackgroundResource ( R . color . colorPrimary ) ; de.azapps.mirakel.settings.model_settings.generic_list.Toolbar . setVisibility ( View . VISIBLE ) ; setSupportActionBar ( de.azapps.mirakel.settings.model_settings.generic_list.Toolbar ) ; getSupportActionBar ( ) . setElevation ( getResources ( ) . getDimension ( R . dimen . actionbar_elevation ) ) ; } 
@ java.lang.Override public void void ( final Configuration de.azapps.mirakel.settings.model_settings.generic_list.Configuration ) { super. onConfigurationChanged ( de.azapps.mirakel.settings.model_settings.generic_list.Configuration ) ; if ( MirakelCommonPreferences . isTablet ( ) ) { setResult ( int , getIntent ( ) ) ; finish ( ) ; } } 
@ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public boolean boolean ( final MenuItem de.azapps.mirakel.settings.model_settings.generic_list.MenuItem ) { final int int = de.azapps.mirakel.settings.model_settings.generic_list.MenuItem . getItemId ( ) ; if ( int == android . R . id . home ) { NavUtils . navigateUpTo ( this , new Intent ( this , java.lang.Class<> ) ) ; return true ; } return super. onOptionsItemSelected ( de.azapps.mirakel.settings.model_settings.generic_list.MenuItem ) ; } 
@ java.lang.Override protected void void ( final int int , final int int , final Intent de.azapps.mirakel.settings.model_settings.generic_list.Intent ) { if ( SettingsHelper . handleActivityResult ( int , int , de.azapps.mirakel.settings.model_settings.generic_list.Intent , this ) ) { finish ( ) ; } } 
public void ( ) {    } 
@ NonNull protected abstract T T ( ) 
protected abstract int int ( ) 
protected abstract void void ( ) 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) { if ( getArguments ( ) . containsKey ( java.lang.String ) ) { T = getArguments ( ) . getParcelable ( java.lang.String ) ; } else { T = T ( ) ; } super. onCreate ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) ; final int int = int ( ) ; if ( int != int ) { addPreferencesFromResource ( int ( ) ) ; void ( ) ; } } 
@ java.lang.Override public void void ( ) { super. onPause ( ) ; T . save ( ) ; } 
protected void void ( ) { if ( MirakelCommonPreferences . isTablet ( ) && ( getActivity ( ) instanceof GenericModelListActivity ) ) { ( ( GenericModelListActivity ) getActivity ( ) ) . updateList ( ) ; } } 
@ NonNull @ java.lang.Override public T T ( ) { return T ; } 
protected void void ( final java.lang.String java.lang.String ) { final Preference de.azapps.mirakel.settings.model_settings.generic_list.Preference = findPreference ( java.lang.String ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.Preference != null ) { getPreferenceScreen ( ) . removePreference ( de.azapps.mirakel.settings.model_settings.generic_list.Preference ) ; } } 
@ java.lang.Override protected void void ( ) { super. onFABClicked ( ) ; if ( T != null ) { T . destroy ( ) ; if ( getActivity ( ) instanceof GenericModelDetailActivity ) { getActivity ( ) . setResult ( GenericModelDetailActivity . NEED_UPDATE , null ) ; getActivity ( ) . finish ( ) ; } void ( ) ; } } 
@ java.lang.Override protected void void ( ) { T . destroy ( ) ; } 
protected abstract boolean boolean ( ) 
@ NonNull protected de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> < android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> ( final @ NonNull T T ) { return absent ( ) ; } 
@ NonNull protected de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> < android . android . android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> ( final @ NonNull T T ) { return absent ( ) ; } 
@ NonNull protected abstract java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListActivity> < ? extends de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListActivity > java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListActivity> ( ) 
private de.azapps.mirakel.settings.model_settings.generic_list.Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle ( final T T ) { final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle = new Bundle ( ) ; de.azapps.mirakel.settings.model_settings.generic_list.Bundle . putParcelable ( GenericModelDetailFragment . ARG_ITEM , T ) ; return de.azapps.mirakel.settings.model_settings.generic_list.Bundle ; } 
private de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> < android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> ( final @ NonNull T T ) { final Optional < android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> ( T ) ; if ( ! de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> . isPresent ( ) ) { return absent ( ) ; } de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> . get ( ) . setArguments ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ( T ) ) ; return de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> ; } 
private de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> < android . android . android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> ( final @ NonNull T T ) { final Optional < android . android . android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> ( T ) ; if ( ! de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . isPresent ( ) ) { return absent ( ) ; } de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . get ( ) . setArguments ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ( T ) ) ; return de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> ; } 
@ NonNull protected abstract T T ( ) 
protected abstract void void ( final @ NonNull Context de.azapps.mirakel.settings.model_settings.generic_list.Context ); 
protected abstract java.lang.String java.lang.String ( ) 
@ java.lang.Override protected void void ( final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) ; setContentView ( R . layout . activity_generic_model_twopane ) ; void ( ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; de.azapps.mirakel.settings.model_settings.generic_list.FrameLayout = ( FrameLayout ) findViewById ( R . id . generic_model_detail_container ) ; boolean = false ; de.azapps.mirakel.settings.model_settings.generic_list.FrameLayout . setVisibility ( boolean ? View . VISIBLE : View . GONE ) ; final FragmentTransaction de.azapps.mirakel.settings.model_settings.generic_list.FragmentTransaction = getFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . generic_model_list_container , new GenericModelListFragment ( ) ) ; if ( boolean ) { if ( ! boolean ( ) ) { final Optional < Fragment > de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> ( T ( ) ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . isPresent ( ) ) { de.azapps.mirakel.settings.model_settings.generic_list.FragmentTransaction . replace ( R . id . generic_model_detail_container , de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . get ( ) ) ; } } else { final Optional < android . android . android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> ( T ( ) ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . isPresent ( ) ) { getSupportFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . generic_model_detail_container , de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . get ( ) ) . commit ( ) ; } } } de.azapps.mirakel.settings.model_settings.generic_list.FragmentTransaction . commit ( ) ; } 
@ java.lang.Override protected java.util.Locale java.util.Locale ( ) { return Helpers . getLocale ( this ) ; } 
protected void void ( ) { final Toolbar de.azapps.mirakel.settings.model_settings.generic_list.Toolbar = ( Toolbar ) findViewById ( R . id . actionbar ) ; de.azapps.mirakel.settings.model_settings.generic_list.Toolbar . setClickable ( true ) ; de.azapps.mirakel.settings.model_settings.generic_list.Toolbar . setOnMenuItemClickListener ( new Toolbar . Toolbar ( ) { @ java.lang.Override public boolean boolean ( final MenuItem de.azapps.mirakel.settings.model_settings.generic_list.MenuItem ) { return boolean ( de.azapps.mirakel.settings.model_settings.generic_list.MenuItem ) ; } } ) ; de.azapps.mirakel.settings.model_settings.generic_list.Toolbar . setBackgroundColor ( ThemeManager . getColor ( R . attr . colorPrimary ) ) ; de.azapps.mirakel.settings.model_settings.generic_list.Toolbar . setVisibility ( View . VISIBLE ) ; setSupportActionBar ( de.azapps.mirakel.settings.model_settings.generic_list.Toolbar ) ; getSupportActionBar ( ) . setElevation ( getResources ( ) . getDimension ( R . dimen . actionbar_elevation ) ) ; getSupportActionBar ( ) . setDisplayShowHomeEnabled ( true ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar ( ) . setHomeButtonEnabled ( true ) ; } 
@ java.lang.Override public boolean boolean ( final MenuItem de.azapps.mirakel.settings.model_settings.generic_list.MenuItem ) { return boolean ( de.azapps.mirakel.settings.model_settings.generic_list.MenuItem ) ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public void void ( final Configuration de.azapps.mirakel.settings.model_settings.generic_list.Configuration ) { T T = null ; final GenericModelDetailFragment < T > de.azapps.mirakel.settings.model_settings.generic_list.GenericModelDetailFragment<T> = ( GenericModelDetailFragment < T > ) getFragmentManager ( ) . findFragmentById ( R . id . speciallist_detail_container ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.GenericModelDetailFragment<T> != null ) { T = de.azapps.mirakel.settings.model_settings.generic_list.GenericModelDetailFragment<T> . getItem ( ) ; } super. onConfigurationChanged ( de.azapps.mirakel.settings.model_settings.generic_list.Configuration ) ; if ( boolean != MirakelCommonPreferences . isTablet ( ) ) { boolean = MirakelCommonPreferences . isTablet ( ) ; de.azapps.mirakel.settings.model_settings.generic_list.FrameLayout . setVisibility ( boolean ? View . VISIBLE : View . GONE ) ; invalidateOptionsMenu ( ) ; if ( boolean ) { if ( ! boolean ( ) ) { final Optional < Fragment > de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> ( T ( ) ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . isPresent ( ) ) { getFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . generic_model_detail_container , de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . get ( ) ) . commitAllowingStateLoss ( ) ; } } else { final Optional < android . android . android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> ( T ( ) ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . isPresent ( ) ) { getSupportFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . generic_model_detail_container , de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . get ( ) ) . commitAllowingStateLoss ( ) ; } } } else { if ( getSupportActionBar ( ) != null ) { getSupportActionBar ( ) . setTitle ( java.lang.String ( ) ) ; } if ( T != null ) { void ( T ) ; } } } } 
@ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) protected void void ( final int int , final int int , final Intent de.azapps.mirakel.settings.model_settings.generic_list.Intent ) { if ( getIntent ( ) != null && getIntent ( ) . hasExtra ( SettingsActivity . SHOW_FRAGMENT ) ) { finish ( ) ; } if ( int == int ) { switch ( int ) { case GenericModelDetailActivity . NEED_UPDATE : void ( ) ; break; case GenericModelDetailActivity . SWITCH_LAYOUT : if ( boolean && ( de.azapps.mirakel.settings.model_settings.generic_list.Intent != null ) ) { if ( ! boolean ( ) ) { final Optional < Fragment > de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> ( ( T ) de.azapps.mirakel.settings.model_settings.generic_list.Intent . getParcelableExtra ( GenericModelDetailFragment . ARG_ITEM ) ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . isPresent ( ) ) { getFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . generic_model_detail_container , de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . get ( ) ) . commitAllowingStateLoss ( ) ; } } else { final Optional < android . android . android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> ( ( T ) de.azapps.mirakel.settings.model_settings.generic_list.Intent . getParcelableExtra ( GenericModelDetailFragment . ARG_ITEM ) ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . isPresent ( ) ) { getSupportFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . generic_model_detail_container , de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . get ( ) ) . commitAllowingStateLoss ( ) ; } } } } } else if ( SettingsHelper . handleActivityResult ( int , int , de.azapps.mirakel.settings.model_settings.generic_list.Intent , this ) ) { finish ( ) ; } java.util.List<T> . void ( ) ; super. onActivityResult ( int , int , de.azapps.mirakel.settings.model_settings.generic_list.Intent ) ; } 
public void void ( ) { ( ( GenericModelListFragment ) getFragmentManager ( ) . findFragmentById ( R . id . generic_model_list_container ) ) . reload ( ) ; } 
protected boolean boolean ( ) { return false ; } 
@ java.lang.Override public boolean boolean ( final Menu de.azapps.mirakel.settings.model_settings.generic_list.Menu ) { final MenuInflater de.azapps.mirakel.settings.model_settings.generic_list.MenuInflater = getMenuInflater ( ) ; de.azapps.mirakel.settings.model_settings.generic_list.MenuInflater . inflate ( R . menu . generic_model_menu , de.azapps.mirakel.settings.model_settings.generic_list.Menu ) ; final MenuItem de.azapps.mirakel.settings.model_settings.generic_list.MenuItem = de.azapps.mirakel.settings.model_settings.generic_list.Menu . findItem ( R . id . action_delete_special ) ; de.azapps.mirakel.settings.model_settings.generic_list.MenuItem . setEnabled ( false ) ; de.azapps.mirakel.settings.model_settings.generic_list.MenuItem . setVisible ( false ) ; if ( ! boolean ( ) ) { final MenuItem de.azapps.mirakel.settings.model_settings.generic_list.MenuItem = de.azapps.mirakel.settings.model_settings.generic_list.Menu . findItem ( R . id . action_create_special ) ; de.azapps.mirakel.settings.model_settings.generic_list.MenuItem . setEnabled ( false ) ; de.azapps.mirakel.settings.model_settings.generic_list.MenuItem . setVisible ( false ) ; } return true ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public boolean boolean ( MenuItem de.azapps.mirakel.settings.model_settings.generic_list.MenuItem ) { int int = de.azapps.mirakel.settings.model_settings.generic_list.MenuItem . getItemId ( ) ; if ( int == android . R . id . home ) { finish ( ) ; return true ; } else if ( int == R . id . action_create_special ) { void ( this ) ; return true ; } else if ( ( int == R . id . action_delete_special ) && ! java.util.List<T> . boolean ( ) ) { final T T = java.util.List<T> . T ( java.util.List<T> . int ( ) - NUMBER ) ; T . destroy ( ) ; void ( T ( ) ) ; return true ; } return super. onOptionsItemSelected ( de.azapps.mirakel.settings.model_settings.generic_list.MenuItem ) ; } 
@ java.lang.Override public void void ( final @ NonNull T T ) { java.util.List<T> . boolean ( T ) ; final Optional < Fragment > de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.app.Fragment> ( T ) ; final Optional < android . android . android . android . android > de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> = de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> ( T ) ; if ( boolean ) { if ( ! boolean ( ) && de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . isPresent ( ) ) { getFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . generic_model_detail_container , de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . get ( ) ) . commit ( ) ; } else if ( boolean ( ) && de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . isPresent ( ) ) { getSupportFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . generic_model_detail_container , de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . get ( ) ) . commit ( ) ; } } else { final Intent de.azapps.mirakel.settings.model_settings.generic_list.Intent = new Intent ( this , GenericModelDetailActivity .class ) ; boolean boolean = false ; de.azapps.mirakel.settings.model_settings.generic_list.Intent . putExtra ( GenericModelDetailFragment . ARG_ITEM , T ) ; if ( ! boolean ( ) && de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . isPresent ( ) ) { de.azapps.mirakel.settings.model_settings.generic_list.Intent . putExtra ( GenericModelDetailActivity . FRAGMENT , ( ( java.lang.Object ) de.azapps.mirakel.settings.model_settings.generic_list.Optional<de.azapps.mirakel.settings.model_settings.generic_list.Fragment> . get ( ) ) . java.lang.Class<? extends java.lang.Object> ( ) ) ; boolean = true ; } else if ( boolean ( ) && de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . isPresent ( ) ) { de.azapps.mirakel.settings.model_settings.generic_list.Intent . putExtra ( GenericModelDetailActivity . FRAGMENT , ( ( java.lang.Object ) de.azapps.mirakel.settings.model_settings.generic_list.Optional<android.support.v4.app.Fragment> . get ( ) ) . java.lang.Class<? extends java.lang.Object> ( ) ) ; boolean = true ; } if ( boolean ) { de.azapps.mirakel.settings.model_settings.generic_list.Intent . putExtra ( GenericModelDetailActivity . BACK_ACTIVITY , java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListActivity> ( ) ) ; startActivityForResult ( de.azapps.mirakel.settings.model_settings.generic_list.Intent , int ) ; } } } 
@ java.lang.Override protected void void ( ) { super. onResume ( ) ; void ( ) ; } 
@ java.lang.Override public void void ( ) { if ( java.util.List<T> . int ( ) > NUMBER ) { java.util.List<T> . T ( java.util.List<T> . int ( ) - NUMBER ) ; void ( java.util.List<T> . T ( java.util.List<T> . int ( ) - NUMBER ) ) ; java.util.List<T> . T ( java.util.List<T> . int ( ) - NUMBER ) ; } else { super. onBackPressed ( ) ; } } 
@ NonNull @ java.lang.Override public RecyclerView . RecyclerView.LayoutManager RecyclerView.LayoutManager ( final @ NonNull Context de.azapps.mirakel.settings.model_settings.generic_list.Context ) { return new LinearLayoutManager ( de.azapps.mirakel.settings.model_settings.generic_list.Context ) ; } 
public void void ( ) { void ( this ) ; void ( ) ; } 
@ java.lang.Override public boolean boolean ( ) { return true ; } 
@ java.lang.Override protected void void ( ) { super. onDestroy ( ) ; void ( ) ; } 
private void void ( ) { if ( de.azapps.mirakel.settings.model_settings.generic_list.Cursor != null ) { de.azapps.mirakel.settings.model_settings.generic_list.Cursor . close ( ) ; } } 
@ Nullable @ java.lang.Override public RecyclerView . RecyclerView.Adapter RecyclerView.Adapter ( final @ NonNull PreferenceFragment de.azapps.mirakel.settings.model_settings.generic_list.PreferenceFragment ) { void ( ) ; de.azapps.mirakel.settings.model_settings.generic_list.Cursor = de.azapps.mirakel.settings.model_settings.generic_list.Cursor ( ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.Cursor != null ) { return new SimpleModelAdapter <> ( this , de.azapps.mirakel.settings.model_settings.generic_list.Cursor , java.lang.Class<T> ( ) , this ) ; } return null ; } 
@ Nullable protected java.lang.Class<T> < T > java.lang.Class<T> ( ) { return null ; } 
@ Nullable protected de.azapps.mirakel.settings.model_settings.generic_list.Cursor de.azapps.mirakel.settings.model_settings.generic_list.Cursor ( ) { return null ; } 
public void void ( ) { if ( de.azapps.mirakel.settings.model_settings.generic_list.RecyclerView != null ) { de.azapps.mirakel.settings.model_settings.generic_list.RecyclerView . setLayoutManager ( de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks . RecyclerView.LayoutManager ( getActivity ( ) ) ) ; de.azapps.mirakel.settings.model_settings.generic_list.RecyclerView . setAdapter ( de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks . RecyclerView.Adapter ( this ) ) ; } } 
@ java.lang.Override public void void ( View de.azapps.mirakel.settings.model_settings.generic_list.View ) { de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks . void ( ) ; } 
@ Nullable public RecyclerView . RecyclerView.Adapter RecyclerView.Adapter ( final @ NonNull PreferenceFragment de.azapps.mirakel.settings.model_settings.generic_list.PreferenceFragment ); 
@ NonNull public RecyclerView . RecyclerView.LayoutManager RecyclerView.LayoutManager ( final @ NonNull Context de.azapps.mirakel.settings.model_settings.generic_list.Context ); 
public void void ( ) 
public boolean boolean ( ) 
@ java.lang.Override @ Nullable public RecyclerView . RecyclerView.Adapter RecyclerView.Adapter ( final @ NonNull PreferenceFragment de.azapps.mirakel.settings.model_settings.generic_list.PreferenceFragment ) { return null ; } 
@ NonNull @ java.lang.Override public RecyclerView . RecyclerView.LayoutManager RecyclerView.LayoutManager ( final @ NonNull Context de.azapps.mirakel.settings.model_settings.generic_list.Context ) { return new LinearLayoutManager ( de.azapps.mirakel.settings.model_settings.generic_list.Context ) ; } 
@ java.lang.Override public void void ( ) { } 
@ java.lang.Override public boolean boolean ( ) { return true ; } 
public void ( ) { de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks = de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) ; void ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.generic_list.View de.azapps.mirakel.settings.model_settings.generic_list.View ( final LayoutInflater de.azapps.mirakel.settings.model_settings.generic_list.LayoutInflater , ViewGroup de.azapps.mirakel.settings.model_settings.generic_list.ViewGroup , final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) { final View de.azapps.mirakel.settings.model_settings.generic_list.View = de.azapps.mirakel.settings.model_settings.generic_list.LayoutInflater . inflate ( R . layout . generic_list_fragment , de.azapps.mirakel.settings.model_settings.generic_list.ViewGroup , false ) ; de.azapps.mirakel.settings.model_settings.generic_list.RecyclerView = ( RecyclerView ) de.azapps.mirakel.settings.model_settings.generic_list.View . findViewById ( R . id . generic_list ) ; de.azapps.mirakel.settings.model_settings.generic_list.FloatingActionButton = ( FloatingActionButton ) de.azapps.mirakel.settings.model_settings.generic_list.View . findViewById ( R . id . fabbutton ) ; de.azapps.mirakel.settings.model_settings.generic_list.FloatingActionButton . setOnClickListener ( this ) ; de.azapps.mirakel.settings.model_settings.generic_list.FloatingActionButton . setVisibility ( de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks . boolean ( ) ? View . VISIBLE : View . GONE ) ; if ( ! ( de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks . RecyclerView.Adapter ( this ) instanceof SettingsGroupAdapter ) ) { de.azapps.mirakel.settings.model_settings.generic_list.RecyclerView . addItemDecoration ( new DividerItemDecoration ( de.azapps.mirakel.settings.model_settings.generic_list.View . getContext ( ) , null , false , false ) ) ; } return de.azapps.mirakel.settings.model_settings.generic_list.View ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.model_settings.generic_list.View , final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) { super. onViewCreated ( de.azapps.mirakel.settings.model_settings.generic_list.View , de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) ; if ( ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle != null ) && de.azapps.mirakel.settings.model_settings.generic_list.Bundle . containsKey ( java.lang.String ) ) { void ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle . getInt ( java.lang.String ) ) ; } } 
@ java.lang.Override public void void ( Configuration de.azapps.mirakel.settings.model_settings.generic_list.Configuration ) { super. onConfigurationChanged ( de.azapps.mirakel.settings.model_settings.generic_list.Configuration ) ; if ( de.azapps.mirakel.settings.model_settings.generic_list.RecyclerView != null ) { de.azapps.mirakel.settings.model_settings.generic_list.RecyclerView . getAdapter ( ) . notifyDataSetChanged ( ) ; } } 
@ java.lang.Override public void void ( final Activity de.azapps.mirakel.settings.model_settings.generic_list.Activity ) { super. onAttach ( de.azapps.mirakel.settings.model_settings.generic_list.Activity ) ; if ( ! ( de.azapps.mirakel.settings.model_settings.generic_list.Activity instanceof de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks = ( de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks ) de.azapps.mirakel.settings.model_settings.generic_list.Activity ; if ( de.azapps.mirakel.settings.model_settings.generic_list.FloatingActionButton != null ) { de.azapps.mirakel.settings.model_settings.generic_list.FloatingActionButton . setVisibility ( de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks . boolean ( ) ? View . VISIBLE : View . GONE ) ; } } 
@ java.lang.Override public void void ( ) { super. onDetach ( ) ; de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks = de.azapps.mirakel.settings.model_settings.generic_list.GenericModelListFragment.Callbacks ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) { super. onSaveInstanceState ( de.azapps.mirakel.settings.model_settings.generic_list.Bundle ) ; if ( int != ListView . INVALID_POSITION ) { de.azapps.mirakel.settings.model_settings.generic_list.Bundle . putInt ( java.lang.String , int ) ; } } 
private void void ( final int int ) { if ( int == ListView . INVALID_POSITION ) { } else { } int = int ; } 
@ NonNull public abstract T T ( ) 
public abstract void void ( @ NonNull SpecialList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList ); 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment ( @ NonNull final SpecialList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList , @ NonNull final SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty , @ NonNull final java.util.ArrayList<java.lang.Integer> < java.lang.Integer > java.util.ArrayList<java.lang.Integer> , @ NonNull final de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.OnPropertyEditListener de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.OnPropertyEditListener , @ NonNull final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList ) { final de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment = new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment ( ) ; final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle = new Bundle ( ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle . putIntegerArrayList ( java.lang.String , java.util.ArrayList<java.lang.Integer> ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment . setArguments ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.OnPropertyEditListener = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.OnPropertyEditListener ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList = getArguments ( ) . getParcelable ( java.lang.String ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = getArguments ( ) . getParcelable ( java.lang.String ) ; java.util.ArrayList<java.lang.Integer> = getArguments ( ) . getIntegerArrayList ( java.lang.String ) ; } 
@ java.lang.Override public int int ( ) { return ThemeManager . getDialogTheme ( ) ; } 
@ java.lang.Override public void void ( ) { super. onResume ( ) ; getDialog ( ) . getWindow ( ) . setLayout ( WindowManager . LayoutParams . MATCH_PARENT , WindowManager . LayoutParams . WRAP_CONTENT ) ; } 
private static int int ( final SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) { if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty != null ) { if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsDoneProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsContentProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsDueProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsFileProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsListProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsNameProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsPriorityProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsProgressProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsReminderProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsTagProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsSubtaskProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsConjunctionList ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsListNameProperty ) { return int ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsDueExistsProperty ) { return int ; } } throw new java.lang.IllegalArgumentException ( STRING + ( ( java.lang.Object ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View ( final LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.LayoutInflater , @ Nullable final ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.ViewGroup , @ Nullable final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Bundle ) { final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.LayoutInflater . inflate ( R . layout . special_lists_edit_dialog_fragment , null ) ; final ArrayAdapter < java.lang.CharSequence > de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.ArrayAdapter<java.lang.CharSequence> = ArrayAdapter . createFromResource ( getActivity ( ) , R . array . special_lists_filter_type , android . R . layout . simple_spinner_dropdown_item ) ; final Spinner de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Spinner = ( Spinner ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View . findViewById ( R . id . property_spinner ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Spinner . setAdapter ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.ArrayAdapter<java.lang.CharSequence> ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Spinner . setOnItemSelectedListener ( this ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Spinner . setSelection ( int ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) , false ) ; void ( int ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ) ; final Button de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Button = ( Button ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View . findViewById ( R . id . saveButton ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Button . setOnClickListener ( this ) ; ( ( LinearLayout ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View ) . setShowDividers ( LinearLayout . SHOW_DIVIDER_END ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View ; } 
private void void ( final int int ) { final BasePropertyFragement de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement ; switch ( int ) { case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsDoneProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = NegatedPropertyFragment . newInstance ( ( SpecialListsBooleanProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsFileProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = NegatedPropertyFragment . newInstance ( ( SpecialListsBooleanProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsContentProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = StringPropertyFragment . newInstance ( ( SpecialListsStringProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsDueProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = DuePropertyFragment . newInstance ( ( SpecialListsDueProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsListProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = ListPropertyFragment . newInstance ( ( SpecialListsListProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsNameProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = StringPropertyFragment . newInstance ( ( SpecialListsStringProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsPriorityProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = PriorityPropertyFragment . newInstance ( ( SpecialListsPriorityProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsProgressProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = ProgressPropertyFragment . newInstance ( ( SpecialListsProgressProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsReminderProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = NegatedPropertyFragment . newInstance ( ( SpecialListsReminderProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsTagProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = TagPropertyFragment . newInstance ( ( SpecialListsTagProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsSubtaskProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = SubtaskPropertyFragment . newInstance ( ( SpecialListsSubtaskProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsConjunctionList ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty , ( ( java.util.ArrayList<java.lang.Integer> . int ( ) % NUMBER ) == NUMBER ) ? CONJUNCTION . AND : CONJUNCTION . OR ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = ConjunctionFragment . newInstance ( ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList , java.util.ArrayList<java.lang.Integer> ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsListNameProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = StringPropertyFragment . newInstance ( ( SpecialListsStringProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; case int : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsDueExistsProperty ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement = NegatedPropertyFragment . newInstance ( ( SpecialListsDueExistsProperty ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; break; default: Log . wtf ( java.lang.String , STRING ) ; return; } getActivity ( ) . runOnUiThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { final FragmentTransaction de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.FragmentTransaction = getChildFragmentManager ( ) . beginTransaction ( ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.FragmentTransaction . replace ( R . id . property_dialog_container , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement , java.lang.String ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.FragmentTransaction . commit ( ) ; } } ) ; if ( getDialog ( ) != null ) { getDialog ( ) . setTitle ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty . getTitle ( getActivity ( ) ) ) ; } } 
@ java.lang.Override public void void ( ) { final FragmentTransaction de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.FragmentTransaction = getChildFragmentManager ( ) . beginTransaction ( ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.FragmentTransaction . replace ( R . id . property_dialog_container , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.BasePropertyFragement , java.lang.String ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.FragmentTransaction . commit ( ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View ) { final SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = ( ( BasePropertyFragement ) getChildFragmentManager ( ) . findFragmentByTag ( java.lang.String ) ) . getProperty ( ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList , java.util.ArrayList<java.lang.Integer> , new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.WorkOnTree ( ) { @ java.lang.Override public void void ( final int int , @ NonNull final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList ) { if ( int >= java.util.ArrayList<java.lang.Integer> . int ( ) ) { return; } if ( java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( int ) != ConjunctionFragment . NEW_PROPERTY ) { if ( java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( int ) < de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList . getChilds ( ) . size ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList . getChilds ( ) . set ( java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( int ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList . addChild ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; } } else { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList . getChilds ( ) . add ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; } } @ NonNull @ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> ( ) { return of ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; } } , NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList . save ( ) ; dismiss ( ) ; } 
@ java.lang.Override public void void ( final int int , @ NonNull final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList ) { if ( int >= java.util.ArrayList<java.lang.Integer> . int ( ) ) { return; } if ( java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( int ) != ConjunctionFragment . NEW_PROPERTY ) { if ( java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( int ) < de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList . getChilds ( ) . size ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList . getChilds ( ) . set ( java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( int ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList . addChild ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; } } else { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList . getChilds ( ) . add ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; } } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> ( ) { return of ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.DialogInterface ) { super. onDismiss ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.DialogInterface ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.OnPropertyEditListener . void ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList ) ; } 
@ java.lang.Override public void void ( final AdapterView < ? > de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.AdapterView<?> , final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.View , final int int , final long long ) { void ( int ) ; } 
@ java.lang.Override public void void ( final AdapterView < ? > de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.AdapterView<?> ) {    } 
void void ( final int int , @ NonNull final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsConjunctionList ); 
@ NonNull de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> ( ) 
@ NonNull public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList ( @ NonNull final SpecialList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList , @ NonNull final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> , @ NonNull final de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.WorkOnTree de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.WorkOnTree , final int int ) { if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList . getWhere ( ) . isPresent ( ) ) { SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList . getWhere ( ) . get ( ) ; SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ; int int = NUMBER ; if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsConjunctionList ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ; for (; int < java.util.List<java.lang.Integer> . int ( ) - int ; int ++ ) { SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = ( ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) . getChilds ( ) . get ( java.util.List<java.lang.Integer> . java.lang.Integer ( int ) ) ; if ( ! ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty instanceof SpecialListsConjunctionList ) ) { final java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> < SpecialListsBaseProperty > java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> = new java.util.ArrayList<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> <> ( NUMBER ) ; java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> . add ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsConjunctionList ( ( ( int % NUMBER ) == NUMBER ) ? CONJUNCTION . AND : CONJUNCTION . OR , java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> ) ; ( ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) . getChilds ( ) . set ( java.util.List<java.lang.Integer> . java.lang.Integer ( int ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ; ++ int ; break; } de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ; } } else { java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> < SpecialListsBaseProperty > java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> = new java.util.ArrayList<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> <> ( NUMBER ) ; java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> . add ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = new SpecialListsConjunctionList ( SpecialListsConjunctionList . CONJUNCTION . AND , java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ; } de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.WorkOnTree . void ( int , ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList . setWhere ( of ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty ) ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList . setWhere ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.EditDialogFragment.WorkOnTree . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialListsBaseProperty> ( ) ) ; } return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.SpecialList ; } 
protected void ( ) {    } 
@ java.lang.Override public void void ( @ NonNull final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) ; if ( ( getArguments ( ) != null ) && getArguments ( ) . containsKey ( java.lang.String ) ) { T = getArguments ( ) . getParcelable ( java.lang.String ) ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
public T T ( ) { return T ; } 
public void void ( @ NonNull final T T ) { this . T = T ; } 
protected static < S extends de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.BasePropertyFragement > S S ( final S S , final SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty ) { final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle = new Bundle ( ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty ) ; S . setArguments ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) ; return S ; } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment ( @ NonNull final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList , @ NonNull final SpecialList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList , @ NonNull final java.util.ArrayList<java.lang.Integer> < java.lang.Integer > java.util.ArrayList<java.lang.Integer> ) { final de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment = new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment ( ) ; final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle = new Bundle ( ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle . putParcelable ( PROPERTY_KEY , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle . putIntegerArrayList ( java.lang.String , java.util.ArrayList<java.lang.Integer> ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle . putParcelable ( java.lang.String , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment . setArguments ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment ; } 
@ java.lang.Override public void void ( @ NonNull final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) ; if ( ( getArguments ( ) != null ) && getArguments ( ) . containsKey ( java.lang.String ) && getArguments ( ) . containsKey ( java.lang.String ) ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList = getArguments ( ) . getParcelable ( java.lang.String ) ; java.util.ArrayList<java.lang.Integer> = getArguments ( ) . getIntegerArrayList ( java.lang.String ) ; } else { throw new java.lang.IllegalArgumentException ( STRING ) ; } } 
private static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList ( @ NonNull final Optional < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> , @ NonNull final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> ) { if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> . isPresent ( ) ) { if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsConjunctionList ) { SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Optional<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> . get ( ) ; for ( int int = NUMBER ; int < java.util.List<java.lang.Integer> . int ( ) ; int ++ ) { if ( java.util.List<java.lang.Integer> . java.lang.Integer ( int ) == int ) { final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList = new SpecialListsConjunctionList ( ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList . getConjunction ( ) == SpecialListsConjunctionList . CONJUNCTION . AND ) ? SpecialListsConjunctionList . CONJUNCTION . OR : SpecialListsConjunctionList . CONJUNCTION . AND , new java.util.ArrayList<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> < SpecialListsBaseProperty > ( ) ) ; java.util.List<java.lang.Integer> . java.lang.Integer ( int , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList . getChilds ( ) . size ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList . getChilds ( ) . add ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList ; } if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList . getChilds ( ) . get ( java.util.List<java.lang.Integer> . java.lang.Integer ( int ) ) instanceof SpecialListsConjunctionList ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList . getChilds ( ) . get ( java.util.List<java.lang.Integer> . java.lang.Integer ( int ) ) ; } else { final java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> < SpecialListsBaseProperty > java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> = new java.util.ArrayList<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> <> ( NUMBER ) ; java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> . add ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList . getChilds ( ) . get ( java.util.List<java.lang.Integer> . java.lang.Integer ( int ) ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList = new SpecialListsConjunctionList ( ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList . getConjunction ( ) == SpecialListsConjunctionList . CONJUNCTION . AND ) ? SpecialListsConjunctionList . CONJUNCTION . OR : SpecialListsConjunctionList . CONJUNCTION . AND , java.util.List<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> ) ; break; } } return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList ; } } return new SpecialListsConjunctionList ( SpecialListsConjunctionList . CONJUNCTION . AND , new java.util.ArrayList<de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty> < SpecialListsBaseProperty > ( NUMBER ) ) ; } 
@ TargetApi ( Build . VERSION_CODES . JELLY_BEAN_MR1 ) @ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( final LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater , @ Nullable final ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup , @ Nullable final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater ; final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater . inflate ( R . layout . speciallist_condition_list , null ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout = ( SwipeLinearLayout ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . speciallist_items ) ; final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . speciallist_add_condition ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . setOnClickListener ( this ) ; final ImageView de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ImageView = ( ImageView ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . speciallist_add_condition_image ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ImageView . setImageDrawable ( ThemeManager . getColoredIcon ( R . drawable . ic_plus_white_24dp , ThemeManager . getAccentThemeColor ( ) ) ) ; property = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList . getWhere ( ) , java.util.ArrayList<java.lang.Integer> ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ImageView . setOnClickListener ( this ) ; final Button de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Button = ( Button ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . speciallist_add_condition_button ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Button . setOnClickListener ( this ) ; void ( ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout . setOnUndoListener ( this ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } 
private void void ( ) { int int = NUMBER ; for ( final SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty : property . getChilds ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout . addView ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty , int ) , int ++ ) ; } } 
@ java.lang.Override public void void ( @ NonNull final SpecialList de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList ) { java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( java.util.ArrayList<java.lang.Integer> . int ( ) - NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout . removeViews ( NUMBER , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout . getChildCount ( ) - NUMBER ) ; property = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsConjunctionList ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList . getWhere ( ) , java.util.ArrayList<java.lang.Integer> ) ; void ( ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ) { final SpecialListsDoneProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsDoneProperty = new SpecialListsDoneProperty ( false ) ; java.util.ArrayList<java.lang.Integer> . boolean ( int ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout . addView ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsDoneProperty , java.util.ArrayList<java.lang.Integer> . int ( ) - NUMBER ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout . getChildCount ( ) - NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout . requestLayout ( ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout . getParent ( ) . invalidateChild ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SwipeLinearLayout , new Rect ( ) ) ; EditDialogFragment . newInstance ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsDoneProperty , java.util.ArrayList<java.lang.Integer> , this , this . property ) . show ( ( ( AppCompatActivity ) getActivity ( ) ) . getSupportFragmentManager ( ) , STRING ) ; } 
private de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( final SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty , final int int ) { final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = new SpecialListsViewHelper ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty , getActivity ( ) ) . getView ( null , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater , null ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . setTag ( SwipeLinearLayout . SWIPEABLE_VIEW , NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ) { java.util.ArrayList<java.lang.Integer> . boolean ( int ) ; EditDialogFragment . newInstance ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty , java.util.ArrayList<java.lang.Integer> , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment .this , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment .this . property ) . show ( ( ( AppCompatActivity ) getActivity ( ) ) . getSupportFragmentManager ( ) , STRING ) ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ) { java.util.ArrayList<java.lang.Integer> . boolean ( int ) ; EditDialogFragment . newInstance ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialList , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBaseProperty , java.util.ArrayList<java.lang.Integer> , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment .this , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ConjunctionFragment .this . property ) . show ( ( ( AppCompatActivity ) getActivity ( ) ) . getSupportFragmentManager ( ) , STRING ) ; } 
@ java.lang.Override public void void ( final int int ) { if ( int < property . getChilds ( ) . size ( ) ) { this . property . getChilds ( ) . remove ( int ) ; } } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment ( SpecialListsDueProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsDueProperty ) { return setInitialArguments ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment ( ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsDueProperty ) ; } 
public void ( ) { super(); this . java.lang.String[] = new java.lang.String [ NUMBER ] ; for ( int int = NUMBER ; int < this . java.lang.String[] . int ; int ++ ) { this . java.lang.String[] [ int ] = ( int > NUMBER ? STRING : STRING ) + ( int - NUMBER ) + STRING ; } } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater , @ Nullable ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup , @ Nullable Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater . inflate ( R . layout . due_dialog , null ) ; final NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker = ( NumberPicker ) this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . due_day_year ) ; final NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker = ( NumberPicker ) this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . due_val ) ; final CheckBox de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox = ( CheckBox ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . due_dialog_negated ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setVisibility ( View . VISIBLE ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setChecked ( property . isSet ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } } ) ; final java.lang.String java.lang.String[] [] = java.lang.String[] ( NUMBER , boolean ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setDisplayedValues ( java.lang.String[] ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setMaxValue ( java.lang.String[] . int - NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setMaxValue ( this . java.lang.String[] . int - NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setValue ( NUMBER + property . getLength ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setMinValue ( NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setDisplayedValues ( this . java.lang.String[] ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setDescendantFocusability ( ViewGroup . FOCUS_BLOCK_DESCENDANTS ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setDescendantFocusability ( ViewGroup . FOCUS_BLOCK_DESCENDANTS ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setWrapSelectorWheel ( false ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setOnValueChangedListener ( new NumberPicker . NumberPicker ( ) { @ java.lang.Override public void void ( final NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker , final int int , final int int ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setDisplayedValues ( java.lang.String[] ( int - NUMBER , boolean ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment .this . int = int - NUMBER ; property . setLength ( int ) ; } } ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setOnValueChangedListener ( new NumberPicker . NumberPicker ( ) { @ java.lang.Override public void void ( final NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker , final int int , final int int ) { switch ( int ) { case NUMBER : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment .this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ; property . setUnit ( SpecialListsDueProperty . Unit . DAY ) ; break; case NUMBER : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment .this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ; property . setUnit ( SpecialListsDueProperty . Unit . MONTH ) ; break; case NUMBER : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment .this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ; property . setUnit ( SpecialListsDueProperty . Unit . YEAR ) ; break; default: break; } } } ) ; switch ( property . getUnit ( ) ) { case DAY : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setValue ( NUMBER ) ; break; case MONTH : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setValue ( NUMBER ) ; break; case YEAR : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setValue ( NUMBER ) ; break; } return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } 
@ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } 
@ java.lang.Override public void void ( final NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker , final int int , final int int ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setDisplayedValues ( java.lang.String[] ( int - NUMBER , boolean ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment .this . int = int - NUMBER ; property . setLength ( int ) ; } 
@ java.lang.Override public void void ( final NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker , final int int , final int int ) { switch ( int ) { case NUMBER : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment .this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ; property . setUnit ( SpecialListsDueProperty . Unit . DAY ) ; break; case NUMBER : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment .this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ; property . setUnit ( SpecialListsDueProperty . Unit . MONTH ) ; break; case NUMBER : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment .this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ; property . setUnit ( SpecialListsDueProperty . Unit . YEAR ) ; break; default: break; } } 
public int int ( ) { switch ( this ) { case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return NUMBER ; case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return NUMBER ; case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return NUMBER ; case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return NUMBER ; case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return NUMBER ; default: break; } return NUMBER ; } 
protected java.lang.String java.lang.String ( ) { switch ( this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ) { case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_minute , this . int ) ; case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_hour , this . int ) ; case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_day , this . int ) ; case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_month , this . int ) ; case de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE : return getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_year , this . int ) ; default: break; } return STRING ; } 
protected java.lang.String [] java.lang.String[] ( final int int , final boolean boolean ) { final int int = boolean ? NUMBER : NUMBER ; int int = NUMBER ; final java.lang.String [] java.lang.String[] = new java.lang.String [ int ] ; if ( boolean ) { java.lang.String[] [ int ++ ] = getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_minute , int ) ; java.lang.String[] [ int ++ ] = getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_hour , int ) ; } java.lang.String[] [ int ++ ] = getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_day , int ) ; java.lang.String[] [ int ++ ] = getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_month , int ) ; java.lang.String[] [ int ] = getActivity ( ) . getResources ( ) . getQuantityString ( R . plurals . due_year , int ) ; return java.lang.String[] ; } 
public void void ( final int int , final de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ) { final int int = this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE . int ( ) ; ( ( NumberPicker ) this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . due_day_year ) ) . setValue ( int ) ; ( ( NumberPicker ) this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . due_val ) ) . setValue ( int + NUMBER ) ; } 
public int int ( ) { return this . int ; } 
public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ( ) { return this . de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.DuePropertyFragment.VALUE ; } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ListPropertyFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ListPropertyFragment ( final SpecialListsListProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsListProperty ) { return setInitialArguments ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ListPropertyFragment ( ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsListProperty ) ; } 
@ NonNull @ java.lang.Override protected java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> ( ) { java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> = new java.util.HashMap<java.lang.String,java.lang.Integer> <> ( ) ; for ( ListMirakel de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ListMirakel : ListMirakel . all ( true ) ) { java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ListMirakel . getName ( ) , ( int ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ListMirakel . getId ( ) ) ; } return java.util.Map<java.lang.String,java.lang.Integer> ; } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NegatedPropertyFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NegatedPropertyFragment ( final SpecialListsBooleanProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBooleanProperty ) { return setInitialArguments ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NegatedPropertyFragment ( ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsBooleanProperty ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( final LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater , final ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup , final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { final View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater . inflate ( R . layout . fragment_negated_property , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup , false ) ; CheckBox de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox = ( CheckBox ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . negated_property_checkbox ) ; if ( property instanceof SpecialListsDoneProperty ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setText ( R . string . done_text ) ; } else if ( property instanceof SpecialListsReminderProperty ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setText ( R . string . reminder_text ) ; } else if ( property instanceof SpecialListsFileProperty ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setText ( R . string . file_text ) ; } else if ( property instanceof SpecialListsDueExistsProperty ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setText ( R . string . due_exist_text ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setText ( STRING ) ; } de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setChecked ( property . isSet ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } 
@ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.PriorityPropertyFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.PriorityPropertyFragment ( final SpecialListsPriorityProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsPriorityProperty ) { return setInitialArguments ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.PriorityPropertyFragment ( ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsPriorityProperty ) ; } 
@ NonNull @ java.lang.Override protected java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> ( ) { final java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> = new java.util.HashMap<java.lang.String,java.lang.Integer> <> ( NUMBER ) ; for ( int int = - NUMBER ; int < NUMBER ; int ++ ) { java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( java.lang.String . java.lang.String ( int ) , int ) ; } return java.util.Map<java.lang.String,java.lang.Integer> ; } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ProgressPropertyFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ProgressPropertyFragment ( SpecialListsProgressProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsProgressProperty ) { return setInitialArguments ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ProgressPropertyFragment ( ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsProgressProperty ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater , @ Nullable ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup , @ Nullable Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater . inflate ( R . layout . progress_dialog , null ) ; NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker = ( NumberPicker ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . progress_op ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setMinValue ( NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setMaxValue ( NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setDisplayedValues ( new java.lang.String [] { STRING , STRING , STRING } ) ; switch ( property . getOperation ( ) ) { case GREATER_THAN : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setValue ( NUMBER ) ; break; case EQUAL : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setValue ( NUMBER ) ; break; case LESS_THAN : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setValue ( NUMBER ) ; break; } de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setOnValueChangedListener ( new NumberPicker . NumberPicker ( ) { @ java.lang.Override public void void ( NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker , int int , int int ) { switch ( int ) { case NUMBER : property . setOperation ( SpecialListsProgressProperty . OPERATION . LESS_THAN ) ; break; case NUMBER : property . setOperation ( SpecialListsProgressProperty . OPERATION . EQUAL ) ; break; case NUMBER : property . setOperation ( SpecialListsProgressProperty . OPERATION . GREATER_THAN ) ; break; } } } ) ; NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker = ( NumberPicker ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . progress_value ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setMinValue ( NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setMaxValue ( NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setValue ( property . getValue ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker . setOnValueChangedListener ( new NumberPicker . NumberPicker ( ) { @ java.lang.Override public void void ( NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker , int int , int int ) { property . setValue ( int ) ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } 
@ java.lang.Override public void void ( NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker , int int , int int ) { switch ( int ) { case NUMBER : property . setOperation ( SpecialListsProgressProperty . OPERATION . LESS_THAN ) ; break; case NUMBER : property . setOperation ( SpecialListsProgressProperty . OPERATION . EQUAL ) ; break; case NUMBER : property . setOperation ( SpecialListsProgressProperty . OPERATION . GREATER_THAN ) ; break; } } 
@ java.lang.Override public void void ( NumberPicker de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.NumberPicker , int int , int int ) { property . setValue ( int ) ; } 
@ NonNull protected abstract java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> ( ) 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( final LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater , @ Nullable final ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup , @ Nullable final Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater . inflate ( R . layout . edit_set_property_fragment , null ) ; ListView de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ListView = ( ListView ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . set_property_listView ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ListView . setAdapter ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SetPropertyFragment<T>.PropertyAdapter ( getActivity ( ) , java.util.Map<java.lang.String,java.lang.Integer> ( ) , new java.util.HashSet <> ( property . getContent ( ) ) ) ) ; CheckBox de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox = ( CheckBox ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . set_property_invert ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setChecked ( property . isSet ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } 
@ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } 
public void ( Context de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Context , java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> , java.util.Set<java.lang.Integer> < java.lang.Integer > java.util.Set<java.lang.Integer> ) { super( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Context , NUMBER , new java.util.ArrayList ( java.util.Map<java.lang.String,java.lang.Integer> . java.util.Set<java.lang.String> ( ) ) ); this . java.util.Set<java.lang.Integer> = java.util.Set<java.lang.Integer> ; this . java.util.Map<java.lang.String,java.lang.Integer> = java.util.Map<java.lang.String,java.lang.Integer> ; } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( int int , View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View , ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup ) { if ( int >= java.util.Map<java.lang.String,java.lang.Integer> . int ( ) ) { return null ; } CheckBox de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox ; if ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View == null || ! ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View instanceof CheckBox ) ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox = new CheckBox ( getContext ( ) ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox = ( CheckBox ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } java.lang.String java.lang.String = getItem ( int ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setText ( java.lang.String ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setChecked ( java.util.Set<java.lang.Integer> . boolean ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( java.lang.String ) ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setOnCheckedChangeListener ( this ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox ; } 
@ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { if ( boolean ) { java.util.Set<java.lang.Integer> . boolean ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton . getText ( ) ) ) ; } else { java.util.Set<java.lang.Integer> . boolean ( java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton . getText ( ) ) ) ; } property . setContent ( new java.util.ArrayList <> ( java.util.Set<java.lang.Integer> ) ) ; } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.StringPropertyFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.StringPropertyFragment ( SpecialListsStringProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsStringProperty ) { return setInitialArguments ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.StringPropertyFragment ( ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsStringProperty ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater , @ Nullable ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup , @ Nullable Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater . inflate ( R . layout . content_name_dialog , null ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.EditText = ( EditText ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . where_like ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.EditText . setText ( property . getSearchString ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { } @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { property . setSearchString ( java.lang.CharSequence . java.lang.String ( ) ) ; void ( ) ; } @ java.lang.Override public void void ( Editable de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Editable ) { } } ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioGroup = ( RadioGroup ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . where_like_radio ) ; switch ( property . getType ( ) ) { case BEGIN : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioGroup . check ( R . id . where_like_begin ) ; break; case END : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioGroup . check ( R . id . where_like_end ) ; break; case CONTAINS : de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioGroup . check ( R . id . where_like_contain ) ; break; } de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioGroup . setOnCheckedChangeListener ( new RadioGroup . RadioGroup ( ) { @ java.lang.Override public void void ( RadioGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioGroup , int int ) { if ( int == R . id . where_like_begin ) { property . setType ( SpecialListsStringProperty . Type . BEGIN ) ; } else if ( int == R . id . where_like_end ) { property . setType ( SpecialListsStringProperty . Type . END ) ; } else if ( int == R . id . where_like_contain ) { property . setType ( SpecialListsStringProperty . Type . CONTAINS ) ; } } } ) ; CheckBox de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox = ( CheckBox ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . where_like_inverte ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setChecked ( property . isSet ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } } ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioButton = ( RadioButton ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . where_like_begin ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioButton = ( RadioButton ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . where_like_contain ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioButton = ( RadioButton ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . where_like_end ) ; void ( ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } 
@ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { } 
@ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { property . setSearchString ( java.lang.CharSequence . java.lang.String ( ) ) ; void ( ) ; } 
@ java.lang.Override public void void ( Editable de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Editable ) { } 
@ java.lang.Override public void void ( RadioGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioGroup , int int ) { if ( int == R . id . where_like_begin ) { property . setType ( SpecialListsStringProperty . Type . BEGIN ) ; } else if ( int == R . id . where_like_end ) { property . setType ( SpecialListsStringProperty . Type . END ) ; } else if ( int == R . id . where_like_contain ) { property . setType ( SpecialListsStringProperty . Type . CONTAINS ) ; } } 
@ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } 
private void void ( ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioButton . setText ( getActivity ( ) . getString ( R . string . where_like_begin_text , STRING + property . getSearchString ( ) + STRING ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioButton . setText ( getActivity ( ) . getString ( R . string . where_like_contain_text , STRING + property . getSearchString ( ) + STRING ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.RadioButton . setText ( getActivity ( ) . getString ( R . string . where_like_end_text , STRING + property . getSearchString ( ) + STRING ) ) ; } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SubtaskPropertyFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SubtaskPropertyFragment ( SpecialListsSubtaskProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsSubtaskProperty ) { return setInitialArguments ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SubtaskPropertyFragment ( ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsSubtaskProperty ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ( LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater , @ Nullable ViewGroup de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.ViewGroup , @ Nullable Bundle de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Bundle ) { View de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View = de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.LayoutInflater . inflate ( R . layout . special_list_subtask_edit , null ) ; final CheckBox de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox = ( CheckBox ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . subtask_has ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setChecked ( property . isSet ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } } ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox ) ; final CheckBox de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox = ( CheckBox ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View . findViewById ( R . id . subtask_parent ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setChecked ( property . isParent ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setParent ( boolean ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox ) ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.View ; } 
@ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setIsNegated ( boolean ) ; } 
@ java.lang.Override public void void ( CompoundButton de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CompoundButton , boolean boolean ) { property . setParent ( boolean ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox ) ; } 
private void void ( CheckBox de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox ) { if ( property . isParent ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setText ( R . string . has_subtasks ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.CheckBox . setText ( R . string . has_parent ) ; } } 
public static de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.TagPropertyFragment de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.TagPropertyFragment ( SpecialListsTagProperty de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsTagProperty ) { return setInitialArguments ( new de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.TagPropertyFragment ( ) , de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.SpecialListsTagProperty ) ; } 
@ NonNull @ java.lang.Override protected java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> ( ) { java.util.Map<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.Map<java.lang.String,java.lang.Integer> = new java.util.HashMap<java.lang.String,java.lang.Integer> <> ( ) ; for ( Tag de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Tag : Tag . all ( ) ) { java.util.Map<java.lang.String,java.lang.Integer> . java.lang.Integer ( de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Tag . getName ( ) , ( int ) de.azapps.mirakel.settings.model_settings.special_list.dialogfragments.editfragments.Tag . getId ( ) ) ; } return java.util.Map<java.lang.String,java.lang.Integer> ; } 
public void ( final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsBaseProperty , final @ NonNull Context de.azapps.mirakel.settings.model_settings.special_list.helper.Context ) { this . de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsBaseProperty> = of ( de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsBaseProperty ) ; this . de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type = de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type . de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type ; this . de.azapps.mirakel.settings.model_settings.special_list.helper.Context = de.azapps.mirakel.settings.model_settings.special_list.helper.Context ; } 
public void ( final @ NonNull Preference de.azapps.mirakel.settings.model_settings.special_list.helper.Preference , final @ NonNull Context de.azapps.mirakel.settings.model_settings.special_list.helper.Context ) { this . de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.Preference> = of ( de.azapps.mirakel.settings.model_settings.special_list.helper.Preference ) ; this . de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type = de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type . de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type ; this . de.azapps.mirakel.settings.model_settings.special_list.helper.Context = de.azapps.mirakel.settings.model_settings.special_list.helper.Context ; } 
@ NonNull public de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type ( ) { return de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type ; } 
@ NonNull public de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsBaseProperty> < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsBaseProperty> ( ) { return de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsBaseProperty> ; } 
@ NonNull public de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.Preference> < Preference > de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.Preference> ( ) { return de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.Preference> ; } 
public de.azapps.mirakel.settings.model_settings.special_list.helper.View de.azapps.mirakel.settings.model_settings.special_list.helper.View ( View de.azapps.mirakel.settings.model_settings.special_list.helper.View , final @ NonNull LayoutInflater de.azapps.mirakel.settings.model_settings.special_list.helper.LayoutInflater , final @ NonNull ViewGroup de.azapps.mirakel.settings.model_settings.special_list.helper.ViewGroup ) { if ( de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type == de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type . de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.Type ) { return de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.Preference> . get ( ) . getView ( null , de.azapps.mirakel.settings.model_settings.special_list.helper.ViewGroup ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder ; if ( de.azapps.mirakel.settings.model_settings.special_list.helper.View == null || ! ( de.azapps.mirakel.settings.model_settings.special_list.helper.View . getTag ( ) instanceof de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder ) ) { de.azapps.mirakel.settings.model_settings.special_list.helper.View = de.azapps.mirakel.settings.model_settings.special_list.helper.LayoutInflater . inflate ( android . R . layout . simple_list_item_2 , null ) ; de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder = new de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder ( de.azapps.mirakel.settings.model_settings.special_list.helper.View ) ; de.azapps.mirakel.settings.model_settings.special_list.helper.View . setTag ( de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder ) ; de.azapps.mirakel.settings.model_settings.special_list.helper.View . setId ( R . id . remove_handle ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder = ( de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder ) de.azapps.mirakel.settings.model_settings.special_list.helper.View . getTag ( ) ; } de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder . de.azapps.mirakel.settings.model_settings.special_list.helper.TextView . setText ( de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsBaseProperty> . get ( ) . getTitle ( de.azapps.mirakel.settings.model_settings.special_list.helper.Context ) ) ; de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsViewHelper.ConditionViewHolder . de.azapps.mirakel.settings.model_settings.special_list.helper.TextView . setText ( de.azapps.mirakel.settings.model_settings.special_list.helper.Optional<de.azapps.mirakel.settings.model_settings.special_list.helper.SpecialListsBaseProperty> . get ( ) . getSummary ( de.azapps.mirakel.settings.model_settings.special_list.helper.Context ) ) ; return de.azapps.mirakel.settings.model_settings.special_list.helper.View ; } } 
public void ( final @ NonNull View de.azapps.mirakel.settings.model_settings.special_list.helper.View ) { de.azapps.mirakel.settings.model_settings.special_list.helper.TextView = ( TextView ) de.azapps.mirakel.settings.model_settings.special_list.helper.View . findViewById ( android . R . id . text1 ) ; de.azapps.mirakel.settings.model_settings.special_list.helper.TextView = ( TextView ) de.azapps.mirakel.settings.model_settings.special_list.helper.View . findViewById ( android . R . id . text2 ) ; } 
public void ( ) {    } 
@ java.lang.Override protected boolean boolean ( ) { return true ; } 
@ java.lang.Override protected boolean boolean ( ) { return ! MirakelCommonPreferences . isTablet ( ) ; } 
@ java.lang.Override protected void void ( final FloatingActionButton de.azapps.mirakel.settings.model_settings.special_list.FloatingActionButton ) { super. configureFab ( de.azapps.mirakel.settings.model_settings.special_list.FloatingActionButton ) ; de.azapps.mirakel.settings.model_settings.special_list.FloatingActionButton . setImageResource ( R . drawable . ic_plus_white_24dp ) ; } 
@ java.lang.Override protected void void ( ) { final SpecialListsDoneProperty de.azapps.mirakel.settings.model_settings.special_list.SpecialListsDoneProperty = new SpecialListsDoneProperty ( false ) ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> = de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getWhere ( ) ; final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList ; if ( ! de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . isPresent ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = new SpecialListsConjunctionList ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsDoneProperty , SpecialListsConjunctionList . CONJUNCTION . AND ) ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsConjunctionList ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList . getChilds ( ) . add ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsDoneProperty ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = new SpecialListsConjunctionList ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) , SpecialListsConjunctionList . CONJUNCTION . AND ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList . getChilds ( ) . add ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsDoneProperty ) ; } de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setWhere ( Optional .< SpecialListsBaseProperty > of ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList ) ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; updateScreen ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( ) ) ; final java.util.ArrayList<java.lang.Integer> < java.lang.Integer > java.util.ArrayList<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( ) ; java.util.ArrayList<java.lang.Integer> . boolean ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList . getChilds ( ) . size ( ) - NUMBER ) ; EditDialogFragment . newInstance ( de.azapps.mirakel.settings.model_settings.special_list.SpecialList , de.azapps.mirakel.settings.model_settings.special_list.SpecialListsDoneProperty , java.util.ArrayList<java.lang.Integer> , de.azapps.mirakel.settings.model_settings.special_list.SpecialListDetailFragment .this , de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList ) . show ( ( ( AppCompatActivity ) de.azapps.mirakel.settings.model_settings.special_list.Context ) . getSupportFragmentManager ( ) , STRING ) ; } 
@ java.lang.Override @ Nullable protected SwipeLinearLayout . SwipeLinearLayout.OnItemRemoveListener SwipeLinearLayout.OnItemRemoveListener ( ) { return this ; } 
@ java.lang.Override public void void ( final CompoundButton de.azapps.mirakel.settings.model_settings.special_list.CompoundButton , final boolean boolean ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setActive ( boolean ) ; } 
@ java.lang.Override public de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( ) { final PreferenceScreen de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen = getPreferenceManager ( ) . createPreferenceScreen ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ; return de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ) ; } 
public void void ( Bundle de.azapps.mirakel.settings.model_settings.special_list.Bundle ) { if ( getArguments ( ) . containsKey ( GenericModelDetailFragment . ARG_ITEM ) ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList = getArguments ( ) . getParcelable ( GenericModelDetailFragment . ARG_ITEM ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.SpecialList = SpecialList . firstSpecialSafe ( ) ; } AnalyticsWrapperBase . track ( AnalyticsWrapperBase . ACTION . CREATED_META_LIST ) ; super. onCreate ( de.azapps.mirakel.settings.model_settings.special_list.Bundle ) ; } 
@ NonNull private de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( final @ NonNull PreferenceScreen de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ) { final PreferenceCategory de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory = new PreferenceCategory ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory . setTitle ( R . string . special_list_summary ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory ) ; final EditTextPreference de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference = de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference ( ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference ) ; final SwitchPreference de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference = de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference ( ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference ) ; if ( MirakelCommonPreferences . isEnabledDebugMenu ( ) ) { final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference = de.azapps.mirakel.settings.model_settings.special_list.Preference ( ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.Preference ) ; } final PreferenceCategory de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory = new PreferenceCategory ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory . setTitle ( R . string . special_lists_defaults ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory ) ; final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference = de.azapps.mirakel.settings.model_settings.special_list.Preference ( ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.Preference ) ; final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference = de.azapps.mirakel.settings.model_settings.special_list.Preference ( ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.Preference ) ; final PreferenceCategory de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory = new PreferenceCategory ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory . setTitle ( R . string . special_lists_condition_title ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory ) ; if ( de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getWhere ( ) . isPresent ( ) ) { void ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceCategory , de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getWhere ( ) . get ( ) , true , new java.util.ArrayList<java.lang.Integer> < java.lang.Integer > ( ) ) ; } return de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ; } 
private void void ( final @ NonNull PreferenceGroup de.azapps.mirakel.settings.model_settings.special_list.PreferenceGroup , final @ NonNull SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty , final boolean boolean , final @ NonNull java.util.ArrayList<java.lang.Integer> < java.lang.Integer > java.util.ArrayList<java.lang.Integer> ) { if ( boolean && ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty instanceof SpecialListsConjunctionList ) ) { for ( int int = NUMBER ; int < ( ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty ) . getChilds ( ) . size ( ) ; int ++ ) { final java.util.ArrayList<java.lang.Integer> < java.lang.Integer > java.util.ArrayList<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer> <> ( java.util.ArrayList<java.lang.Integer> ) ; java.util.ArrayList<java.lang.Integer> . boolean ( int ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceGroup , ( ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty ) . getChilds ( ) . get ( int ) , false , java.util.ArrayList<java.lang.Integer> ) ; } } else { final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference = new Preference ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ; de.azapps.mirakel.settings.model_settings.special_list.Preference . setTitle ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty . getTitle ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ) ; de.azapps.mirakel.settings.model_settings.special_list.Preference . setSummary ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty . getSummary ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ) ; de.azapps.mirakel.settings.model_settings.special_list.Preference . setKey ( SwipeLinearLayout . SWIPEABLE_VIEW + java.lang.String . java.lang.String ( java.util.UUID . java.util.UUID ( ) ) ) ; de.azapps.mirakel.settings.model_settings.special_list.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.model_settings.special_list.Preference ) { final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> = de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getWhere ( ) ; if ( ! de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . isPresent ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = new SpecialListsConjunctionList ( SpecialListsConjunctionList . CONJUNCTION . AND , new java.util.ArrayList<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> < SpecialListsBaseProperty > ( NUMBER ) ) ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsConjunctionList ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = new SpecialListsConjunctionList ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) , SpecialListsConjunctionList . CONJUNCTION . AND ) ; } EditDialogFragment . newInstance ( de.azapps.mirakel.settings.model_settings.special_list.SpecialList , de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty , java.util.ArrayList<java.lang.Integer> , de.azapps.mirakel.settings.model_settings.special_list.SpecialListDetailFragment .this , de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList ) . show ( ( ( AppCompatActivity ) getActivity ( ) ) . getSupportFragmentManager ( ) , STRING ) ; return true ; } } ) ; de.azapps.mirakel.settings.model_settings.special_list.PreferenceGroup . addItemFromInflater ( de.azapps.mirakel.settings.model_settings.special_list.Preference ) ; } } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.model_settings.special_list.Preference ) { final SpecialListsConjunctionList de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList ; final Optional < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> = de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getWhere ( ) ; if ( ! de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . isPresent ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = new SpecialListsConjunctionList ( SpecialListsConjunctionList . CONJUNCTION . AND , new java.util.ArrayList<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> < SpecialListsBaseProperty > ( NUMBER ) ) ; } else if ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsConjunctionList ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) ; } else { de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList = new SpecialListsConjunctionList ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) , SpecialListsConjunctionList . CONJUNCTION . AND ) ; } EditDialogFragment . newInstance ( de.azapps.mirakel.settings.model_settings.special_list.SpecialList , de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty , java.util.ArrayList<java.lang.Integer> , de.azapps.mirakel.settings.model_settings.special_list.SpecialListDetailFragment .this , de.azapps.mirakel.settings.model_settings.special_list.SpecialListsConjunctionList ) . show ( ( ( AppCompatActivity ) getActivity ( ) ) . getSupportFragmentManager ( ) , STRING ) ; return true ; } 
@ java.lang.Override protected void void ( ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList . destroy ( ) ; } 
private de.azapps.mirakel.settings.model_settings.special_list.Preference de.azapps.mirakel.settings.model_settings.special_list.Preference ( ) { final ListPreference de.azapps.mirakel.settings.model_settings.special_list.ListPreference = new ListPreference ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setKey ( STRING ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setTitle ( R . string . special_list_def_date ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.ListPreference , de.azapps.mirakel.settings.model_settings.special_list.Context , de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setEntries ( R . array . special_list_def_date_picker ) ; final int [] int[] = getResources ( ) . getIntArray ( R . array . special_list_def_date_picker_val ) ; final java.lang.String [] java.lang.String[] = new java.lang.String [ int[] . int ] ; int int = NUMBER ; final java.lang.Integer java.lang.Integer = de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getDefaultDate ( ) . or ( SpecialList . NULL_DATE_VALUE ) ; for ( int int = NUMBER ; int < int[] . int ; int ++ ) { java.lang.String[] [ int ] = java.lang.String . java.lang.String ( int[] [ int ] ) ; if ( ( ( java.lang.Integer ) int[] [ int ] ) . boolean ( java.lang.Integer ) ) { int = int ; } } de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setEntryValues ( java.lang.String[] ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setValueIndex ( int ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setDialogTitle ( R . string . special_list_def_date ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference , final java.lang.Object java.lang.Object ) { Optional < java.lang.Integer > de.azapps.mirakel.settings.model_settings.special_list.Optional<java.lang.Integer> = of ( java.lang.Integer . java.lang.Integer ( ( java.lang.String ) java.lang.Object ) ) ; if ( de.azapps.mirakel.settings.model_settings.special_list.Optional<java.lang.Integer> . get ( ) == SpecialList . NULL_DATE_VALUE ) { de.azapps.mirakel.settings.model_settings.special_list.Optional<java.lang.Integer> = Optional . absent ( ) ; } de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setDefaultDate ( de.azapps.mirakel.settings.model_settings.special_list.Optional<java.lang.Integer> ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.ListPreference , de.azapps.mirakel.settings.model_settings.special_list.Context , de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) ; return true ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.ListPreference ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference , final java.lang.Object java.lang.Object ) { Optional < java.lang.Integer > de.azapps.mirakel.settings.model_settings.special_list.Optional<java.lang.Integer> = of ( java.lang.Integer . java.lang.Integer ( ( java.lang.String ) java.lang.Object ) ) ; if ( de.azapps.mirakel.settings.model_settings.special_list.Optional<java.lang.Integer> . get ( ) == SpecialList . NULL_DATE_VALUE ) { de.azapps.mirakel.settings.model_settings.special_list.Optional<java.lang.Integer> = Optional . absent ( ) ; } de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setDefaultDate ( de.azapps.mirakel.settings.model_settings.special_list.Optional<java.lang.Integer> ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.ListPreference , de.azapps.mirakel.settings.model_settings.special_list.Context , de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) ; return true ; } 
@ java.lang.Override public void void ( final Activity de.azapps.mirakel.settings.model_settings.special_list.Activity ) { super. onAttach ( de.azapps.mirakel.settings.model_settings.special_list.Activity ) ; if ( de.azapps.mirakel.settings.model_settings.special_list.Context == null ) { de.azapps.mirakel.settings.model_settings.special_list.Context = de.azapps.mirakel.settings.model_settings.special_list.Activity ; } } 
private de.azapps.mirakel.settings.model_settings.special_list.Preference de.azapps.mirakel.settings.model_settings.special_list.Preference ( ) { final java.util.List<de.azapps.mirakel.settings.model_settings.special_list.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.settings.model_settings.special_list.ListMirakel> = ListMirakel . all ( false ) ; final ListPreference de.azapps.mirakel.settings.model_settings.special_list.ListPreference = new ListPreference ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setKey ( STRING ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setDialogTitle ( R . string . special_list_def_list ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setTitle ( R . string . special_list_def_list ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setOnPreferenceChangeListener ( null ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.ListPreference , de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) ; final java.util.List<java.lang.CharSequence> < java.lang.CharSequence > java.util.List<java.lang.CharSequence> = new java.util.ArrayList <> ( java.util.List<de.azapps.mirakel.settings.model_settings.special_list.ListMirakel> . size ( ) ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList <> ( java.util.List<de.azapps.mirakel.settings.model_settings.special_list.ListMirakel> . size ( ) ) ; int int = NUMBER ; final ListMirakel de.azapps.mirakel.settings.model_settings.special_list.ListMirakel = de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getDefaultList ( ) ; for ( final ListMirakel de.azapps.mirakel.settings.model_settings.special_list.ListMirakel : java.util.List<de.azapps.mirakel.settings.model_settings.special_list.ListMirakel> ) { if ( ! de.azapps.mirakel.settings.model_settings.special_list.ListMirakel . isSpecial ( ) ) { java.util.List<java.lang.CharSequence> . boolean ( de.azapps.mirakel.settings.model_settings.special_list.ListMirakel . getName ( ) ) ; java.util.List<java.lang.String> . boolean ( java.lang.String . java.lang.String ( de.azapps.mirakel.settings.model_settings.special_list.ListMirakel . getId ( ) ) ) ; if ( de.azapps.mirakel.settings.model_settings.special_list.ListMirakel . equals ( de.azapps.mirakel.settings.model_settings.special_list.ListMirakel ) ) { int = java.util.List<java.lang.CharSequence> . int ( ) - NUMBER ; } } } de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setEntryValues ( java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setEntries ( java.util.List<java.lang.CharSequence> . java.lang.CharSequence[] ( new java.lang.CharSequence [ java.util.List<java.lang.CharSequence> . int ( ) ] ) ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setValueIndex ( int ) ; de.azapps.mirakel.settings.model_settings.special_list.ListPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setDefaultList ( ListMirakel . get ( java.lang.Long . java.lang.Long ( ( java.lang.String ) java.lang.Object ) ) ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.ListPreference , de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) ; return true ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.ListPreference ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setDefaultList ( ListMirakel . get ( java.lang.Long . java.lang.Long ( ( java.lang.String ) java.lang.Object ) ) ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; void ( de.azapps.mirakel.settings.model_settings.special_list.ListPreference , de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) ; return true ; } 
private de.azapps.mirakel.settings.model_settings.special_list.Preference de.azapps.mirakel.settings.model_settings.special_list.Preference ( ) { final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference = new Preference ( de.azapps.mirakel.settings.model_settings.special_list.Context ) ; de.azapps.mirakel.settings.model_settings.special_list.Preference . setKey ( STRING ) ; de.azapps.mirakel.settings.model_settings.special_list.Preference . setTitle ( R . string . special_list_where ) ; de.azapps.mirakel.settings.model_settings.special_list.Preference . setSummary ( de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getWhereQueryForTasks ( ) . select ( STRING ) . toString ( Task . URI ) ) ; de.azapps.mirakel.settings.model_settings.special_list.Preference . setEnabled ( false ) ; return de.azapps.mirakel.settings.model_settings.special_list.Preference ; } 
private de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference ( ) { final SwitchPreference de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference = new SwitchCompatPreference ( getActivity ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference . setKey ( STRING ) ; de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference . setTitle ( R . string . special_list_active ) ; de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference . setChecked ( de.azapps.mirakel.settings.model_settings.special_list.SpecialList . isActive ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.model_settings.special_list.Preference ) { boolean boolean = ! de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference . isChecked ( ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setActive ( boolean ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; return true ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference ; } 
@ java.lang.Override public boolean boolean ( Preference de.azapps.mirakel.settings.model_settings.special_list.Preference ) { boolean boolean = ! de.azapps.mirakel.settings.model_settings.special_list.SwitchPreference . isChecked ( ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setActive ( boolean ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; return true ; } 
private de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference ( ) { final EditTextPreference de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference = new EditTextPreference ( getActivity ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference . setKey ( STRING ) ; de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference . setDialogTitle ( R . string . special_list_name ) ; de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference . setTitle ( R . string . special_list_name ) ; de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference . setSummary ( de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getName ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setName ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference . setSummary ( ( java.lang.String ) java.lang.Object ) ; return true ; } } ) ; return de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.special_list.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setName ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; de.azapps.mirakel.settings.model_settings.special_list.EditTextPreference . setSummary ( ( java.lang.String ) java.lang.Object ) ; return true ; } 
private static void void ( final @ NonNull Preference de.azapps.mirakel.settings.model_settings.special_list.Preference , final @ NonNull SpecialList de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) { java.lang.String java.lang.String = STRING ; if ( de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getDefaultList ( ) != null ) { java.lang.String = de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getDefaultList ( ) . getName ( ) ; } de.azapps.mirakel.settings.model_settings.special_list.Preference . setSummary ( java.lang.String ) ; } 
private static void void ( final @ NonNull Preference de.azapps.mirakel.settings.model_settings.special_list.Preference , final @ NonNull Context de.azapps.mirakel.settings.model_settings.special_list.Context , final @ NonNull SpecialList de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) { final int [] int[] = de.azapps.mirakel.settings.model_settings.special_list.Context . getResources ( ) . getIntArray ( R . array . special_list_def_date_picker_val ) ; for ( int int = NUMBER ; int < int[] . int ; int ++ ) { if ( ! de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getDefaultDate ( ) . isPresent ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.Preference . setSummary ( de.azapps.mirakel.settings.model_settings.special_list.Context . getResources ( ) . getStringArray ( R . array . special_list_def_date_picker ) [ NUMBER ] ) ; } else if ( int[] [ int ] == de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getDefaultDate ( ) . get ( ) ) { de.azapps.mirakel.settings.model_settings.special_list.Preference . setSummary ( de.azapps.mirakel.settings.model_settings.special_list.Context . getResources ( ) . getStringArray ( R . array . special_list_def_date_picker ) [ int ] ) ; } } } 
@ java.lang.Override public void void ( @ NonNull final SpecialList de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList = de.azapps.mirakel.settings.model_settings.special_list.SpecialList ; updateScreen ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( ) ) ; } 
@ java.lang.Override @ NonNull public de.azapps.mirakel.settings.model_settings.special_list.SpecialList de.azapps.mirakel.settings.model_settings.special_list.SpecialList ( ) { return de.azapps.mirakel.settings.model_settings.special_list.SpecialList ; } 
@ java.lang.Override public void void ( final int int , final int int ) { final Optional < SpecialListsBaseProperty > de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> = de.azapps.mirakel.settings.model_settings.special_list.SpecialList . getWhere ( ) ; if ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . isPresent ( ) ) { final ActionClickListener de.azapps.mirakel.settings.model_settings.special_list.ActionClickListener ; if ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) instanceof SpecialListsConjunctionList ) { final SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty = ( ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) ) . getChilds ( ) . remove ( int - NUMBER ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setWhere ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; de.azapps.mirakel.settings.model_settings.special_list.ActionClickListener = new ActionClickListener ( ) { @ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.model_settings.special_list.Snackbar ) { ( ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) ) . getChilds ( ) . add ( int - NUMBER , de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setWhere ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; updateScreen ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( ) ) ; } } ; } else { final SpecialListsBaseProperty de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty = de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setWhere ( Optional .< SpecialListsBaseProperty > absent ( ) ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; de.azapps.mirakel.settings.model_settings.special_list.ActionClickListener = new ActionClickListener ( ) { @ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.model_settings.special_list.Snackbar ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setWhere ( of ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty ) ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; updateScreen ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( ) ) ; } } ; } SnackbarManager . show ( Snackbar . with ( getActivity ( ) ) . text ( getActivity ( ) . getString ( R . string . delete_condition ) ) . actionLabel ( R . string . undo ) . actionListener ( de.azapps.mirakel.settings.model_settings.special_list.ActionClickListener ) . eventListener ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListDetailFragment.LocalEventListener ) ) ; } } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.model_settings.special_list.Snackbar ) { ( ( SpecialListsConjunctionList ) de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> . get ( ) ) . getChilds ( ) . add ( int - NUMBER , de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setWhere ( de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty> ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; updateScreen ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( ) ) ; } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.model_settings.special_list.Snackbar ) { de.azapps.mirakel.settings.model_settings.special_list.SpecialList . setWhere ( of ( de.azapps.mirakel.settings.model_settings.special_list.SpecialListsBaseProperty ) ) ; de.azapps.mirakel.settings.model_settings.special_list.SpecialList . save ( ) ; updateScreen ( de.azapps.mirakel.settings.model_settings.special_list.PreferenceScreen ( ) ) ; } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.model_settings.special_list.Snackbar ) { super. onShow ( de.azapps.mirakel.settings.model_settings.special_list.Snackbar ) ; if ( ( ( FrameLayout . FrameLayout ) de.azapps.mirakel.settings.model_settings.special_list.Snackbar . getLayoutParams ( ) ) . bottomMargin == NUMBER ) { AnimationHelper . moveViewUp ( getActivity ( ) , mFab , de.azapps.mirakel.settings.model_settings.special_list.Snackbar . getHeight ( ) ) ; } } 
@ java.lang.Override public void void ( final Snackbar de.azapps.mirakel.settings.model_settings.special_list.Snackbar ) { super. onDismiss ( de.azapps.mirakel.settings.model_settings.special_list.Snackbar ) ; if ( ( ( FrameLayout . FrameLayout ) de.azapps.mirakel.settings.model_settings.special_list.Snackbar . getLayoutParams ( ) ) . bottomMargin == NUMBER ) { AnimationHelper . moveViewDown ( getActivity ( ) , mFab , de.azapps.mirakel.settings.model_settings.special_list.Snackbar . getHeight ( ) ) ; } } 
@ java.lang.Override protected boolean boolean ( ) { return false ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.Fragment> < Fragment > de.azapps.mirakel.settings.model_settings.special_list.Optional<de.azapps.mirakel.settings.model_settings.special_list.Fragment> ( final @ NonNull SpecialList de.azapps.mirakel.settings.model_settings.special_list.SpecialList ) { return of ( ( Fragment ) new SpecialListDetailFragment ( ) ) ; } 
@ NonNull @ java.lang.Override protected java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.special_list.GenericModelListActivity> < ? extends GenericModelListActivity > java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.special_list.GenericModelListActivity> ( ) { return de.azapps.mirakel.settings.model_settings.special_list.SpecialListListActivity .class ; } 
@ java.lang.Override public boolean boolean ( ) { return false ; } 
@ java.lang.Override protected boolean boolean ( ) { return true ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.model_settings.special_list.SpecialList de.azapps.mirakel.settings.model_settings.special_list.SpecialList ( ) { return SpecialList . firstSpecialSafe ( ) ; } 
@ java.lang.Override protected void void ( final @ NonNull Context de.azapps.mirakel.settings.model_settings.special_list.Context ) { try { onItemSelected ( SpecialList . newList ( de.azapps.mirakel.settings.model_settings.special_list.Context . getString ( R . string . special_lists_new ) , Optional .< SpecialListsBaseProperty > absent ( ) , true ) ) ; } catch ( final ListMirakel . ListMirakel ListMirakel.ListAlreadyExistsException ) { } } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return getString ( R . string . special_lists_title ) ; } 
@ java.lang.Override protected java.lang.Class<de.azapps.mirakel.settings.model_settings.special_list.SpecialList> < SpecialList > java.lang.Class<de.azapps.mirakel.settings.model_settings.special_list.SpecialList> ( ) { return SpecialList .class ; } 
@ java.lang.Override protected de.azapps.mirakel.settings.model_settings.special_list.Cursor de.azapps.mirakel.settings.model_settings.special_list.Cursor ( ) { return new MirakelQueryBuilder ( this ) . and ( DatabaseHelper . SYNC_STATE_FIELD , MirakelQueryBuilder . Operation . NOT_EQ , DefinitionsHelper . SYNC_STATE . DELETE . toInt ( ) ) . and ( ListMirakel . IS_SPECIAL , MirakelQueryBuilder . Operation . EQ , true ) . sort ( ListMirakel . LFT , MirakelQueryBuilder . Sorting . ASC ) . query ( ListMirakel . URI ) . getRawCursor ( ) ; } 
@ java.lang.Override protected boolean boolean ( ) { return ! MirakelCommonPreferences . isTablet ( ) ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.model_settings.tag.Tag de.azapps.mirakel.settings.model_settings.tag.Tag ( ) { return Tag . newTag ( getString ( R . string . tag_new ) ) ; } 
@ java.lang.Override protected int int ( ) { return R . xml . settings_tag ; } 
@ java.lang.Override protected void void ( ) { final Tag de.azapps.mirakel.settings.model_settings.tag.Tag = mItem ; final EditTextPreference de.azapps.mirakel.settings.model_settings.tag.EditTextPreference = ( EditTextPreference ) findPreference ( STRING ) ; final ColorPickerPref de.azapps.mirakel.settings.model_settings.tag.ColorPickerPref = ( ColorPickerPref ) findPreference ( STRING ) ; de.azapps.mirakel.settings.model_settings.tag.EditTextPreference . setSummary ( de.azapps.mirakel.settings.model_settings.tag.Tag . getName ( ) ) ; de.azapps.mirakel.settings.model_settings.tag.EditTextPreference . setText ( de.azapps.mirakel.settings.model_settings.tag.Tag . getName ( ) ) ; de.azapps.mirakel.settings.model_settings.tag.EditTextPreference . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.tag.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.tag.Tag . setName ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.tag.Tag . save ( ) ; de.azapps.mirakel.settings.model_settings.tag.EditTextPreference . setSummary ( de.azapps.mirakel.settings.model_settings.tag.Tag . getName ( ) ) ; updateList ( ) ; return true ; } } ) ; de.azapps.mirakel.settings.model_settings.tag.ColorPickerPref . setColor ( de.azapps.mirakel.settings.model_settings.tag.Tag . getBackgroundColor ( ) ) ; de.azapps.mirakel.settings.model_settings.tag.ColorPickerPref . setOldColor ( de.azapps.mirakel.settings.model_settings.tag.Tag . getBackgroundColor ( ) ) ; de.azapps.mirakel.settings.model_settings.tag.ColorPickerPref . setOnPreferenceChangeListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.tag.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.tag.Tag . setBackgroundColor ( de.azapps.mirakel.settings.model_settings.tag.ColorPickerPref . getColor ( ) ) ; de.azapps.mirakel.settings.model_settings.tag.Tag . save ( ) ; return true ; } } ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.tag.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.tag.Tag . setName ( ( java.lang.String ) java.lang.Object ) ; de.azapps.mirakel.settings.model_settings.tag.Tag . save ( ) ; de.azapps.mirakel.settings.model_settings.tag.EditTextPreference . setSummary ( de.azapps.mirakel.settings.model_settings.tag.Tag . getName ( ) ) ; updateList ( ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.settings.model_settings.tag.Preference , final java.lang.Object java.lang.Object ) { de.azapps.mirakel.settings.model_settings.tag.Tag . setBackgroundColor ( de.azapps.mirakel.settings.model_settings.tag.ColorPickerPref . getColor ( ) ) ; de.azapps.mirakel.settings.model_settings.tag.Tag . save ( ) ; return true ; } 
@ java.lang.Override protected boolean boolean ( ) { return false ; } 
@ java.lang.Override protected boolean boolean ( ) { return true ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.model_settings.tag.Optional<de.azapps.mirakel.settings.model_settings.tag.Fragment> < Fragment > de.azapps.mirakel.settings.model_settings.tag.Optional<de.azapps.mirakel.settings.model_settings.tag.Fragment> ( final @ NonNull Tag de.azapps.mirakel.settings.model_settings.tag.Tag ) { return of ( ( android . android . android ) new TagDetailFragment ( ) ) ; } 
@ NonNull @ java.lang.Override protected java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.tag.GenericModelListActivity> < ? extends GenericModelListActivity > java.lang.Class<? extends de.azapps.mirakel.settings.model_settings.tag.GenericModelListActivity> ( ) { return de.azapps.mirakel.settings.model_settings.tag.TagSettingsActivity .class ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.model_settings.tag.Tag de.azapps.mirakel.settings.model_settings.tag.Tag ( ) { return Tag . getSafeFirst ( ) ; } 
@ java.lang.Override protected void void ( @ NonNull final Context de.azapps.mirakel.settings.model_settings.tag.Context ) { onItemSelected ( Tag . newTag ( getString ( R . string . tag_new ) ) ) ; } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return getString ( R . string . tag_settings ) ; } 
@ java.lang.Override protected java.lang.Class<de.azapps.mirakel.settings.model_settings.tag.Tag> < Tag > java.lang.Class<de.azapps.mirakel.settings.model_settings.tag.Tag> ( ) { return Tag .class ; } 
@ java.lang.Override protected de.azapps.mirakel.settings.model_settings.tag.Cursor de.azapps.mirakel.settings.model_settings.tag.Cursor ( ) { return new MirakelQueryBuilder ( this ) . query ( Tag . URI ) . getRawCursor ( ) ; } 
@ java.lang.Override protected void void ( final Bundle de.azapps.mirakel.settings.Bundle ) { super. onCreate ( de.azapps.mirakel.settings.Bundle ) ; void ( ) ; } 
@ java.lang.Override protected void void ( ) { super. onResume ( ) ; void ( ) ; if ( getIntent ( ) . hasExtra ( java.lang.String ) && getIntent ( ) . getIntExtra ( java.lang.String , NUMBER ) < Settings . values ( ) . length ) { onItemSelected ( Settings . values ( ) [ getIntent ( ) . getIntExtra ( java.lang.String , NUMBER ) ] ) ; } } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.Optional<de.azapps.mirakel.settings.Fragment> < Fragment > de.azapps.mirakel.settings.Optional<de.azapps.mirakel.settings.Fragment> ( final @ NonNull Settings de.azapps.mirakel.settings.Settings ) { if ( java.util.Set<de.azapps.mirakel.settings.Settings> . contains ( de.azapps.mirakel.settings.Settings ) ) { final Intent de.azapps.mirakel.settings.Intent = de.azapps.mirakel.settings.Settings . getIntent ( this ) ; startActivity ( de.azapps.mirakel.settings.Intent ) ; return Optional . absent ( ) ; } else { return Optional . of ( de.azapps.mirakel.settings.Settings . getFragment ( ) ) ; } } 
@ java.lang.Override protected boolean boolean ( ) { return false ; } 
@ NonNull @ java.lang.Override protected java.lang.Class<? extends de.azapps.mirakel.settings.GenericModelListActivity> < ? extends GenericModelListActivity > java.lang.Class<? extends de.azapps.mirakel.settings.GenericModelListActivity> ( ) { return this . java.lang.Class<? extends de.azapps.mirakel.settings.SettingsActivity> ( ) ; } 
@ NonNull @ java.lang.Override protected de.azapps.mirakel.settings.Settings de.azapps.mirakel.settings.Settings ( ) { return Settings . UI ; } 
@ java.lang.Override protected void void ( @ NonNull final Context de.azapps.mirakel.settings.Context ) { } 
@ java.lang.Override protected java.lang.String java.lang.String ( ) { return getString ( R . string . title_settings ) ; } 
@ java.lang.Override public boolean boolean ( final MenuItem de.azapps.mirakel.settings.MenuItem ) { switch ( de.azapps.mirakel.settings.MenuItem . getItemId ( ) ) { case android . R . id . home : final Optional < java.lang.Class<?> < ? > > de.azapps.mirakel.settings.Optional<java.lang.Class<?>> = Helpers . getMainActivity ( ) ; if ( de.azapps.mirakel.settings.Optional<java.lang.Class<?>> . isPresent ( ) ) { NavUtils . navigateUpTo ( this , new Intent ( this , de.azapps.mirakel.settings.Optional<java.lang.Class<?>> . get ( ) ) ) ; } return true ; } return super. onOptionsItemSelected ( de.azapps.mirakel.settings.MenuItem ) ; } 
@ Nullable @ java.lang.Override public RecyclerView . RecyclerView.Adapter RecyclerView.Adapter ( final @ NonNull PreferenceFragment de.azapps.mirakel.settings.PreferenceFragment ) { de.azapps.mirakel.settings.SettingsGroupAdapter = new SettingsGroupAdapter ( Settings . inflateHeaders ( de.azapps.mirakel.settings.PreferenceFragment . getPreferenceManager ( ) . createPreferenceScreen ( this ) , this ) ) ; return de.azapps.mirakel.settings.SettingsGroupAdapter ; } 
public void void ( ) { if ( de.azapps.mirakel.settings.SettingsGroupAdapter != null ) { final PreferenceScreen de.azapps.mirakel.settings.PreferenceScreen = de.azapps.mirakel.settings.SettingsGroupAdapter . getScreen ( ) ; de.azapps.mirakel.settings.PreferenceScreen . removeAll ( ) ; de.azapps.mirakel.settings.SettingsGroupAdapter . updateScreen ( Settings . inflateHeaders ( de.azapps.mirakel.settings.PreferenceScreen , this ) ) ; } } 
@ java.lang.Override public boolean boolean ( ) { return false ; } 
public static boolean boolean ( final int int , final int int , final @ NonNull Intent de.azapps.mirakel.settings.Intent , final @ NonNull Context de.azapps.mirakel.settings.Context ) { final java.io.FileInputStream java.io.FileInputStream ; switch ( int ) { case SettingsActivity . FILE_IMPORT_DB : if ( int != Activity . RESULT_OK ) { return false ; } final Uri de.azapps.mirakel.settings.Uri = de.azapps.mirakel.settings.Intent . getData ( ) ; if ( de.azapps.mirakel.settings.Uri == null || ! STRING . boolean ( FileUtils . getFileExtension ( de.azapps.mirakel.settings.Uri ) ) ) { ErrorReporter . report ( ErrorType . FILE_NOT_MIRAKEL_DB ) ; } try { java.io.FileInputStream = FileUtils . getStreamFromUri ( de.azapps.mirakel.settings.Context , de.azapps.mirakel.settings.Uri ) ; } catch ( final java.io.FileNotFoundException java.io.FileNotFoundException ) { ErrorReporter . report ( ErrorType . FILE_NOT_MIRAKEL_DB ) ; break; } new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.settings.Context ) . setTitle ( R . string . import_sure ) . setMessage ( de.azapps.mirakel.settings.Context . getString ( R . string . import_sure_summary , FileUtils . getNameFromUri ( de.azapps.mirakel.settings.Context , de.azapps.mirakel.settings.Uri ) ) ) . setNegativeButton ( android . R . string . cancel , null ) . setPositiveButton ( android . R . string . yes , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.DialogInterface , final int int ) { ExportImport . importDB ( de.azapps.mirakel.settings.Context , java.io.FileInputStream ) ; } } ) . create ( ) . show ( ) ; break; case SettingsActivity . FILE_ASTRID : case SettingsActivity . FILE_ANY_DO : case SettingsActivity . FILE_WUNDERLIST : if ( int != Activity . RESULT_OK ) { return true ; } try { java.io.FileInputStream = FileUtils . getStreamFromUri ( de.azapps.mirakel.settings.Context , de.azapps.mirakel.settings.Intent . getData ( ) ) ; } catch ( final java.io.FileNotFoundException java.io.FileNotFoundException ) { ErrorReporter . report ( ErrorType . FILE_NOT_FOUND ) ; break; } new AsyncTask < java.lang.String , java.lang.Void , java.lang.Boolean > ( ) { de.azapps.mirakel.settings.ProgressDialog de.azapps.mirakel.settings.ProgressDialog ; @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( final java.lang.String ... java.lang.String[] ) { switch ( int ) { case SettingsActivity . FILE_ASTRID : return ExportImport . importAstrid ( de.azapps.mirakel.settings.Context , java.io.FileInputStream , FileUtils . getMimeType ( de.azapps.mirakel.settings.Intent . getData ( ) ) ) ; case SettingsActivity . FILE_ANY_DO : try { return AnyDoImport . exec ( de.azapps.mirakel.settings.Context , java.io.FileInputStream ) ; } catch ( final DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; Log . wtf ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; return true ; } case SettingsActivity . FILE_WUNDERLIST : return WunderlistImport . exec ( java.io.FileInputStream ) ; default: return false ; } } @ java.lang.Override protected void void ( final java.lang.Boolean java.lang.Boolean ) { this . de.azapps.mirakel.settings.ProgressDialog . dismiss ( ) ; if ( ! java.lang.Boolean ) { ErrorReporter . report ( ErrorType . ASTRID_ERROR ) ; } else { Toast . makeText ( de.azapps.mirakel.settings.Context , R . string . astrid_success , Toast . LENGTH_SHORT ) . show ( ) ; Helpers . restartApp ( de.azapps.mirakel.settings.Context ) ; } } @ java.lang.Override protected void void ( ) { this . de.azapps.mirakel.settings.ProgressDialog = ProgressDialog . show ( de.azapps.mirakel.settings.Context , de.azapps.mirakel.settings.Context . getString ( R . string . importing ) , de.azapps.mirakel.settings.Context . getString ( R . string . wait ) , true ) ; } } . execute ( STRING ) ; break; case SettingsActivity . DONATE : if ( int != Activity . RESULT_OK ) { return false ; } if ( ! MirakelCommonPreferences . isTablet ( ) ) { return true ; } break; default: break; } return false ; } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.settings.DialogInterface , final int int ) { ExportImport . importDB ( de.azapps.mirakel.settings.Context , java.io.FileInputStream ) ; } 
@ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( final java.lang.String ... java.lang.String[] ) { switch ( int ) { case SettingsActivity . FILE_ASTRID : return ExportImport . importAstrid ( de.azapps.mirakel.settings.Context , java.io.FileInputStream , FileUtils . getMimeType ( de.azapps.mirakel.settings.Intent . getData ( ) ) ) ; case SettingsActivity . FILE_ANY_DO : try { return AnyDoImport . exec ( de.azapps.mirakel.settings.Context , java.io.FileInputStream ) ; } catch ( final DefinitionsHelper . DefinitionsHelper DefinitionsHelper.NoSuchListException ) { ErrorReporter . report ( ErrorType . LIST_VANISHED ) ; Log . wtf ( java.lang.String , STRING , DefinitionsHelper.NoSuchListException ) ; return true ; } case SettingsActivity . FILE_WUNDERLIST : return WunderlistImport . exec ( java.io.FileInputStream ) ; default: return false ; } } 
@ java.lang.Override protected void void ( final java.lang.Boolean java.lang.Boolean ) { this . de.azapps.mirakel.settings.ProgressDialog . dismiss ( ) ; if ( ! java.lang.Boolean ) { ErrorReporter . report ( ErrorType . ASTRID_ERROR ) ; } else { Toast . makeText ( de.azapps.mirakel.settings.Context , R . string . astrid_success , Toast . LENGTH_SHORT ) . show ( ) ; Helpers . restartApp ( de.azapps.mirakel.settings.Context ) ; } } 
@ java.lang.Override protected void void ( ) { this . de.azapps.mirakel.settings.ProgressDialog = ProgressDialog . show ( de.azapps.mirakel.settings.Context , de.azapps.mirakel.settings.Context . getString ( R . string . importing ) , de.azapps.mirakel.settings.Context . getString ( R . string . wait ) , true ) ; } 
public int int ( ) { switch ( this ) { case de.azapps.widgets.DueDialog.VALUE : return NUMBER ; case de.azapps.widgets.DueDialog.VALUE : return NUMBER ; case de.azapps.widgets.DueDialog.VALUE : return NUMBER ; case de.azapps.widgets.DueDialog.VALUE : return NUMBER ; case de.azapps.widgets.DueDialog.VALUE : return NUMBER ; default: break; } return NUMBER ; } 
public void void ( final int int , final OnClickListener de.azapps.widgets.OnClickListener ) { setButton ( BUTTON_NEGATIVE , this . de.azapps.widgets.Context . getString ( int ) , de.azapps.widgets.OnClickListener ) ; } 
public void void ( final int int , final OnClickListener de.azapps.widgets.OnClickListener ) { setButton ( BUTTON_POSITIVE , this . de.azapps.widgets.Context . getString ( int ) , de.azapps.widgets.OnClickListener ) ; } 
public void void ( final int int , final OnClickListener de.azapps.widgets.OnClickListener ) { setButton ( BUTTON_NEUTRAL , this . de.azapps.widgets.Context . getString ( int ) , de.azapps.widgets.OnClickListener ) ; } 
@ SuppressLint ( STRING ) public void ( final Context de.azapps.widgets.Context , final boolean boolean ) { super( de.azapps.widgets.Context ); this . de.azapps.widgets.Context = de.azapps.widgets.Context ; this . java.lang.String[] = new java.lang.String [ NUMBER ] ; for ( int int = NUMBER ; int < this . java.lang.String[] . int ; int ++ ) { this . java.lang.String[] [ int ] = ( int > NUMBER ? STRING : STRING ) + ( int - NUMBER ) + STRING ; } this . de.azapps.widgets.View = de.azapps.widgets.View ( ) ; final NumberPicker de.azapps.widgets.NumberPicker = ( NumberPicker ) this . de.azapps.widgets.View . findViewById ( R . id . due_day_year ) ; final NumberPicker de.azapps.widgets.NumberPicker = ( NumberPicker ) this . de.azapps.widgets.View . findViewById ( R . id . due_val ) ; final java.lang.String java.lang.String[] [] = java.lang.String[] ( NUMBER , boolean ) ; de.azapps.widgets.NumberPicker . setDisplayedValues ( java.lang.String[] ) ; de.azapps.widgets.NumberPicker . setMaxValue ( java.lang.String[] . int - NUMBER ) ; de.azapps.widgets.NumberPicker . setMaxValue ( this . java.lang.String[] . int - NUMBER ) ; de.azapps.widgets.NumberPicker . setValue ( NUMBER ) ; de.azapps.widgets.NumberPicker . setMinValue ( NUMBER ) ; de.azapps.widgets.NumberPicker . setDisplayedValues ( this . java.lang.String[] ) ; de.azapps.widgets.NumberPicker . setDescendantFocusability ( ViewGroup . FOCUS_BLOCK_DESCENDANTS ) ; de.azapps.widgets.NumberPicker . setDescendantFocusability ( ViewGroup . FOCUS_BLOCK_DESCENDANTS ) ; de.azapps.widgets.NumberPicker . setWrapSelectorWheel ( false ) ; de.azapps.widgets.NumberPicker . setOnValueChangedListener ( new NumberPicker . NumberPicker ( ) { @ java.lang.Override public void void ( final NumberPicker de.azapps.widgets.NumberPicker , final int int , final int int ) { de.azapps.widgets.NumberPicker . setDisplayedValues ( java.lang.String[] ( int - NUMBER , boolean ) ) ; de.azapps.widgets.DueDialog .this . int = int - NUMBER ; } } ) ; de.azapps.widgets.NumberPicker . setOnValueChangedListener ( new NumberPicker . NumberPicker ( ) { @ java.lang.Override public void void ( final NumberPicker de.azapps.widgets.NumberPicker , final int int , final int int ) { switch ( int ) { case NUMBER : de.azapps.widgets.DueDialog .this . de.azapps.widgets.DueDialog.VALUE = de.azapps.widgets.DueDialog.VALUE . de.azapps.widgets.DueDialog.VALUE ; break; case NUMBER : de.azapps.widgets.DueDialog .this . de.azapps.widgets.DueDialog.VALUE = de.azapps.widgets.DueDialog.VALUE . de.azapps.widgets.DueDialog.VALUE ; break; case NUMBER : de.azapps.widgets.DueDialog .this . de.azapps.widgets.DueDialog.VALUE = de.azapps.widgets.DueDialog.VALUE . de.azapps.widgets.DueDialog.VALUE ; break; default: break; } } } ) ; setView ( this . de.azapps.widgets.View ) ; } 
@ java.lang.Override public void void ( final NumberPicker de.azapps.widgets.NumberPicker , final int int , final int int ) { de.azapps.widgets.NumberPicker . setDisplayedValues ( java.lang.String[] ( int - NUMBER , boolean ) ) ; de.azapps.widgets.DueDialog .this . int = int - NUMBER ; } 
@ java.lang.Override public void void ( final NumberPicker de.azapps.widgets.NumberPicker , final int int , final int int ) { switch ( int ) { case NUMBER : de.azapps.widgets.DueDialog .this . de.azapps.widgets.DueDialog.VALUE = de.azapps.widgets.DueDialog.VALUE . de.azapps.widgets.DueDialog.VALUE ; break; case NUMBER : de.azapps.widgets.DueDialog .this . de.azapps.widgets.DueDialog.VALUE = de.azapps.widgets.DueDialog.VALUE . de.azapps.widgets.DueDialog.VALUE ; break; case NUMBER : de.azapps.widgets.DueDialog .this . de.azapps.widgets.DueDialog.VALUE = de.azapps.widgets.DueDialog.VALUE . de.azapps.widgets.DueDialog.VALUE ; break; default: break; } } 
protected java.lang.String java.lang.String ( ) { switch ( this . de.azapps.widgets.DueDialog.VALUE ) { case de.azapps.widgets.DueDialog.VALUE : return this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_minute , this . int ) ; case de.azapps.widgets.DueDialog.VALUE : return this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_hour , this . int ) ; case de.azapps.widgets.DueDialog.VALUE : return this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_day , this . int ) ; case de.azapps.widgets.DueDialog.VALUE : return this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_month , this . int ) ; case de.azapps.widgets.DueDialog.VALUE : return this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_year , this . int ) ; default: break; } return STRING ; } 
protected java.lang.String [] java.lang.String[] ( final int int , final boolean boolean ) { final int int = boolean ? NUMBER : NUMBER ; int int = NUMBER ; final java.lang.String [] java.lang.String[] = new java.lang.String [ int ] ; if ( boolean ) { java.lang.String[] [ int ++ ] = this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_minute , int ) ; java.lang.String[] [ int ++ ] = this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_hour , int ) ; } java.lang.String[] [ int ++ ] = this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_day , int ) ; java.lang.String[] [ int ++ ] = this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_month , int ) ; java.lang.String[] [ int ] = this . de.azapps.widgets.Context . getResources ( ) . getQuantityString ( R . plurals . due_year , int ) ; return java.lang.String[] ; } 
protected de.azapps.widgets.View de.azapps.widgets.View ( ) { return getLayoutInflater ( ) . inflate ( R . layout . due_dialog , null ) ; } 
public void void ( final int int ) { final int int = this . de.azapps.widgets.DueDialog.VALUE . int ( ) ; ( ( NumberPicker ) this . de.azapps.widgets.View . findViewById ( R . id . due_day_year ) ) . setValue ( int ) ; ( ( NumberPicker ) this . de.azapps.widgets.View . findViewById ( R . id . due_val ) ) . setValue ( int + NUMBER ) ; } 
public int int ( ) { return this . int ; } 
public de.azapps.widgets.DueDialog.VALUE de.azapps.widgets.DueDialog.VALUE ( ) { return this . de.azapps.widgets.DueDialog.VALUE ; } 
public void ( final java.lang.String java.lang.String ) { super( TW_ERRORS . NOT_SUPPORTED_SECONED_RECURRING , java.lang.String ); } 
public void ( final @ NonNull java.lang.String java.lang.String , final @ NonNull Optional < DateTime > de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> ) throws de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorRecurrence.NotSupportedRecurrenceException { super(); final java.util.Scanner java.util.Scanner = new java.util.Scanner ( java.lang.String ) ; java.util.Scanner . java.util.Scanner ( STRING ) ; int int = NUMBER ; if ( java.util.Scanner . boolean ( ) ) { int = java.util.Scanner . int ( ) ; } java.util.Scanner . void ( ) ; switch ( java.lang.String . java.lang.String ( java.lang.String . java.lang.String ( int ) , STRING ) . java.lang.String ( STRING , STRING ) ) { case STRING : case STRING : int = NUMBER ; case STRING : case STRING : case STRING : case STRING : case STRING : recurringInterval = new Period ( ) . withYears ( int ) ; break; case STRING : recurringInterval = new Period ( ) . withMonths ( NUMBER ) ; break; case STRING : case STRING : recurringInterval = new Period ( ) . withYears ( NUMBER ) ; break; case STRING : recurringInterval = new Period ( ) . withMonths ( NUMBER ) ; break; case STRING : case STRING : recurringInterval = new Period ( ) . withWeeks ( NUMBER ) ; break; case STRING : int = NUMBER ; case STRING : case STRING : case STRING : recurringInterval = new Period ( ) . withDays ( int ) ; break; case STRING : case STRING : case STRING : case STRING : case STRING : recurringInterval = new Period ( ) . withHours ( int ) ; break; case STRING : case STRING : case STRING : recurringInterval = new Period ( ) . withMinutes ( int ) ; break; case STRING : int = NUMBER ; case STRING : case STRING : case STRING : case STRING : case STRING : case STRING : case STRING : recurringInterval = new Period ( ) . withMonths ( int ) ; break; case STRING : int = NUMBER ; case STRING : case STRING : case STRING : case STRING : case STRING : recurringInterval = new Period ( ) . withMonths ( NUMBER * int ) ; break; case STRING : case STRING : int = NUMBER ; case STRING : case STRING : case STRING : case STRING : case STRING : recurringInterval = new Period ( ) . withWeeks ( int ) ; break; case STRING : final SparseBooleanArray de.azapps.mirakel.sync.taskwarrior.model.SparseBooleanArray = new SparseBooleanArray ( NUMBER ) ; for ( int int = DateTimeConstants . MONDAY ; int <= DateTimeConstants . SUNDAY ; int ++ ) { de.azapps.mirakel.sync.taskwarrior.model.SparseBooleanArray . put ( int , ( int != DateTimeConstants . SATURDAY ) && ( int != DateTimeConstants . SUNDAY ) ) ; } setWeekdays ( de.azapps.mirakel.sync.taskwarrior.model.SparseBooleanArray ) ; break; case STRING : case STRING : case STRING : case STRING : default: Log . w ( java.lang.String , STRING + java.lang.String ) ; throw new de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorRecurrence.NotSupportedRecurrenceException ( STRING + java.lang.String ) ; } setForDue ( true ) ; setEndDate ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> ) ; setExact ( false ) ; setName ( java.lang.String ) ; setTemporary ( true ) ; if ( recurringInterval == null ) { recurringInterval = new Period ( ) ; } recurringInterval = recurringInterval . normalizedStandard ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask ( final JsonElement de.azapps.mirakel.sync.taskwarrior.model.JsonElement , final java.lang.reflect.Type java.lang.reflect.Type , final JsonDeserializationContext de.azapps.mirakel.sync.taskwarrior.model.JsonDeserializationContext ) throws de.azapps.mirakel.sync.taskwarrior.model.JsonParseException { final JsonObject de.azapps.mirakel.sync.taskwarrior.model.JsonObject = de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsJsonObject ( ) ; final JsonElement de.azapps.mirakel.sync.taskwarrior.model.JsonElement = de.azapps.mirakel.sync.taskwarrior.model.JsonObject . get ( STRING ) ; final JsonElement de.azapps.mirakel.sync.taskwarrior.model.JsonElement = de.azapps.mirakel.sync.taskwarrior.model.JsonObject . get ( STRING ) ; final JsonElement de.azapps.mirakel.sync.taskwarrior.model.JsonElement = de.azapps.mirakel.sync.taskwarrior.model.JsonObject . get ( STRING ) ; final JsonElement de.azapps.mirakel.sync.taskwarrior.model.JsonElement = de.azapps.mirakel.sync.taskwarrior.model.JsonObject . get ( STRING ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.JsonElement == null || de.azapps.mirakel.sync.taskwarrior.model.JsonElement == null || de.azapps.mirakel.sync.taskwarrior.model.JsonElement == null || de.azapps.mirakel.sync.taskwarrior.model.JsonElement == null || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . isJsonPrimitive ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . isJsonPrimitive ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . isJsonPrimitive ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . isJsonPrimitive ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsJsonPrimitive ( ) . isString ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsJsonPrimitive ( ) . isString ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsJsonPrimitive ( ) . isString ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsJsonPrimitive ( ) . isString ( ) ) { throw new JsonParseException ( STRING ) ; } final TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask = new TaskWarriorTask ( de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsString ( ) , de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsString ( ) , de.azapps.mirakel.sync.taskwarrior.model.DateTime ( de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsString ( ) ) , de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsString ( ) ) ; for ( final java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> < java.lang.String , JsonElement > java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> : de.azapps.mirakel.sync.taskwarrior.model.JsonObject . entrySet ( ) ) { switch ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getKey ( ) ) { case STRING : case STRING : case STRING : case STRING : break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setPriority ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setPriorityNumber ( ( int ) java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsDouble ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setProgress ( ( int ) java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsDouble ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setProject ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setModified ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setDue ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setReminder ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonArray ( ) ) { final JsonArray de.azapps.mirakel.sync.taskwarrior.model.JsonArray = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonArray ( ) ; for ( int int = NUMBER ; int < de.azapps.mirakel.sync.taskwarrior.model.JsonArray . size ( ) ; int ++ ) { if ( de.azapps.mirakel.sync.taskwarrior.model.JsonArray . get ( int ) . isJsonObject ( ) ) { final JsonElement de.azapps.mirakel.sync.taskwarrior.model.JsonElement = de.azapps.mirakel.sync.taskwarrior.model.JsonArray . get ( int ) . getAsJsonObject ( ) . get ( STRING ) ; final JsonElement de.azapps.mirakel.sync.taskwarrior.model.JsonElement = de.azapps.mirakel.sync.taskwarrior.model.JsonArray . get ( int ) . getAsJsonObject ( ) . get ( STRING ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.JsonElement == null || de.azapps.mirakel.sync.taskwarrior.model.JsonElement == null || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . isJsonPrimitive ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . isJsonPrimitive ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsJsonPrimitive ( ) . isString ( ) || ! de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsJsonPrimitive ( ) . isString ( ) ) { throw new JsonParseException ( STRING ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . addAnnotation ( de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsString ( ) , de.azapps.mirakel.sync.taskwarrior.model.DateTime ( de.azapps.mirakel.sync.taskwarrior.model.JsonElement . getAsString ( ) ) ) ; } } else { throw new JsonParseException ( STRING ) ; } } } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { final java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ; de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . addDepends ( java.lang.String . java.lang.String[] ( STRING ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonArray ( ) ) { final JsonArray de.azapps.mirakel.sync.taskwarrior.model.JsonArray = java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonArray ( ) ; for ( int int = NUMBER ; int < de.azapps.mirakel.sync.taskwarrior.model.JsonArray . size ( ) ; int ++ ) { if ( de.azapps.mirakel.sync.taskwarrior.model.JsonArray . get ( int ) . isJsonPrimitive ( ) && de.azapps.mirakel.sync.taskwarrior.model.JsonArray . get ( int ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . addTags ( de.azapps.mirakel.sync.taskwarrior.model.JsonArray . get ( int ) . getAsString ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } } } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setRecur ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setImask ( ( int ) java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsDouble ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setParent ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setMask ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; case STRING : if ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . isJsonPrimitive ( ) && java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsJsonPrimitive ( ) . isString ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . setUntil ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ) ; } else { throw new JsonParseException ( STRING ) ; } break; default: de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask . addUDA ( java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getKey ( ) , java.util.Map.Entry<java.lang.String,de.azapps.mirakel.sync.taskwarrior.model.JsonElement> . getValue ( ) . getAsString ( ) ) ; break; } } return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask ; } 
@ NonNull private static de.azapps.mirakel.sync.taskwarrior.model.DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ( final java.lang.String java.lang.String ) { return ISODateTimeFormat . basicDateTimeNoMillis ( ) . parseDateTime ( java.lang.String ) ; } 
public static de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority ( @ Nullable java.lang.String java.lang.String ) { if ( java.lang.String == null ) { java.lang.String = STRING ; } switch ( java.lang.String . java.lang.String ( ) . java.lang.String ( ) ) { case STRING : return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority ; case STRING : return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority ; case STRING : return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority ; default: Log . w ( java.lang.String , STRING + java.lang.String ) ; ErrorReporter . report ( ErrorType . TASKWARRIOR_NON_STANDARD_PRIORIRTY ) ; return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority ; } } 
public static de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ( @ Nullable java.lang.String java.lang.String ) { if ( java.lang.String == null ) { java.lang.String = STRING ; } switch ( java.lang.String . java.lang.String ( ) . java.lang.String ( ) ) { case STRING : return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ; case STRING : return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ; case STRING : return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ; case STRING : return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ; case STRING : return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ; default: Log . w ( java.lang.String , STRING + java.lang.String ) ; ErrorReporter . report ( ErrorType . TASKWARRIOR_NON_STANDARD_STATUS ) ; return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ; } } 
public void ( @ NonNull final java.lang.String java.lang.String , final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . java.lang.String = java.lang.String ; this . de.azapps.mirakel.sync.taskwarrior.model.DateTime = de.azapps.mirakel.sync.taskwarrior.model.DateTime ; } 
public void ( @ NonNull final java.lang.String java.lang.String , @ NonNull final java.lang.String java.lang.String , final @ NonNull DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime , @ NonNull final java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status = de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status . de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ( java.lang.String ) ; this . de.azapps.mirakel.sync.taskwarrior.model.DateTime = de.azapps.mirakel.sync.taskwarrior.model.DateTime ; this . java.lang.String = java.lang.String ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority> = of ( de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority . de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority ( java.lang.String ) ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> = of ( java.lang.String ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String . java.lang.String ( STRING , STRING ) ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } 
public void void ( @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> = of ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
public void void ( @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> = of ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
public void void ( @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> = of ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
public void void ( @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> = of ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
public void void ( @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> = of ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
public void void ( @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> = of ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
public void void ( @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> = of ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> = of ( java.lang.String ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> = of ( java.lang.String ) ; } 
public void void ( final int int ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> = of ( int ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> = of ( java.lang.String ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String , @ NonNull final java.lang.String java.lang.String ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; } 
public void void ( final int int ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> = of ( int ) ; } 
public void void ( @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> = of ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
public void void ( @ NonNull final java.lang.String java.lang.String , @ NonNull final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { java.util.List<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation> . boolean ( new de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation ( java.lang.String , de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ) ; } 
public void void ( final int int ) { this . de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> = of ( int ) ; } 
public void void ( final @ NonNull java.lang.String [] java.lang.String[] ) { java.util.List<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; } 
public void void ( final @ NonNull java.lang.String [] java.lang.String[] ) { java.util.List<java.lang.String> . boolean ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; } 
@ NonNull public java.lang.String java.lang.String ( ) { return java.lang.String ; } 
@ NonNull public de.azapps.mirakel.sync.taskwarrior.model.ContentProviderOperation de.azapps.mirakel.sync.taskwarrior.model.ContentProviderOperation ( final long long , final @ NonNull java.lang.String java.lang.String , final @ NonNull java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> , final long long ) throws de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTaskDeletedException { return ContentProviderOperation . newUpdate ( Task . URI ) . withValues ( de.azapps.mirakel.sync.taskwarrior.model.ContentValues ( java.util.Map<java.lang.String,java.lang.Long> , of ( java.lang.String ) , long ) ) . withSelection ( Task . ID + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( long ) } ) . build ( ) ; } 
@ NonNull public de.azapps.mirakel.sync.taskwarrior.model.ContentProviderOperation de.azapps.mirakel.sync.taskwarrior.model.ContentProviderOperation ( final long long , @ NonNull final java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> ) throws de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTaskDeletedException { return ContentProviderOperation . newInsert ( Task . URI ) . withValues ( de.azapps.mirakel.sync.taskwarrior.model.ContentValues ( java.util.Map<java.lang.String,java.lang.Long> , Optional .< java.lang.String > absent ( ) , long ) ) . build ( ) ; } 
@ NonNull private de.azapps.mirakel.sync.taskwarrior.model.ContentValues de.azapps.mirakel.sync.taskwarrior.model.ContentValues ( final @ NonNull java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> , final @ NonNull Optional < java.lang.String > de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> , final long long ) throws de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTaskDeletedException { final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = OptionalUtils . withOptional ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> , new Function < java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > > ( ) { @ java.lang.Override public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( java.lang.String java.lang.String ) { return Task . parseAdditionalEntries ( java.lang.String ) ; } } , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( NUMBER ) ) ; final ContentValues de.azapps.mirakel.sync.taskwarrior.model.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . NAME , java.lang.String ) ; de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( DatabaseHelper . CREATED_AT , de.azapps.mirakel.sync.taskwarrior.model.DateTime . getMillis ( ) ) ; de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . UUID , java.lang.String ) ; switch ( de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ) { case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . DONE , false ) ; break; case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : throw new TaskWarriorTaskDeletedException ( ) ; case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . DONE , true ) ; break; case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; break; case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . RECURRING_SHOWN , false ) ; break; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority> . isPresent ( ) ) { switch ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority> . get ( ) ) { case H : de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . PRIORITY , NUMBER ) ; break; case M : de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . PRIORITY , NUMBER ) ; break; case L : if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . isPresent ( ) && ( ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . get ( ) == - NUMBER ) || ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . get ( ) == - NUMBER ) ) ) { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . PRIORITY , de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . get ( ) ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . PRIORITY , - NUMBER ) ; } break; } } else { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . PRIORITY , NUMBER ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . LIST_ID , java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . get ( ) ) ) ; } else { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( Task . NO_PROJECT , STRING ) ; de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . LIST_ID , long ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . DUE , de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . get ( ) . getMillis ( ) ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . DUE , ( java.lang.Integer ) null ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . REMINDER , de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . get ( ) . getMillis ( ) ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . REMINDER , ( java.lang.Integer ) null ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . PROGRESS , de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . get ( ) ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . PROGRESS , NUMBER ) ; } de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( DatabaseHelper . UPDATED_AT , de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . or ( new DateTime ( ) ) . getMillis ( ) ) ; de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . CONTENT , TextUtils . join ( STRING , Collections2 . transform ( java.util.List<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation> , new Function < de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation ) { return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation . java.lang.String ; } } ) ) ) ; void ( java.util.Map<java.lang.String,java.lang.String> ) ; de.azapps.mirakel.sync.taskwarrior.model.ContentValues . put ( Task . ADDITIONAL_ENTRIES , Task . serializeAdditionalEntries ( java.util.Map<java.lang.String,java.lang.String> ) ) ; return de.azapps.mirakel.sync.taskwarrior.model.ContentValues ; } 
@ java.lang.Override public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( java.lang.String java.lang.String ) { return Task . parseAdditionalEntries ( java.lang.String ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation ) { return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation . java.lang.String ; } 
private void void ( final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ) { if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . isPresent ( ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , java.lang.String . java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . get ( ) ) ) ; } else { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . isPresent ( ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , java.lang.String . java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . get ( ) ) ) ; } else { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . isPresent ( ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , java.lang.String . java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . get ( ) ) ) ; } else { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . isPresent ( ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , java.lang.String . java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . get ( ) ) ) ; } else { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . isPresent ( ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , java.lang.String . java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . get ( ) ) ) ; } else { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ; } java.util.Map<java.lang.String,java.lang.String> . void ( java.util.Map<java.lang.String,java.lang.String> ) ; } 
public boolean boolean ( ) { return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status != de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status . de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ; } 
public boolean boolean ( ) { return de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . isPresent ( ) ; } 
public boolean boolean ( ) { return de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . isPresent ( ) ; } 
public boolean boolean ( ) { return de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . isPresent ( ) && de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . isPresent ( ) ; } 
public int int ( ) { if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . isPresent ( ) ) { return de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . get ( ) ; } throw new java.lang.IllegalStateException ( STRING ) ; } 
@ NonNull public java.lang.String java.lang.String ( ) { if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . isPresent ( ) ) { return de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . get ( ) ; } throw new java.lang.IllegalStateException ( STRING ) ; } 
@ NonNull public java.lang.String java.lang.String ( ) { if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . isPresent ( ) ) { return de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . get ( ) ; } else { throw new java.lang.IllegalStateException ( STRING ) ; } } 
@ NonNull public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ; } 
@ NonNull public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ; } 
public de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorRecurrence> < TaskWarriorRecurrence > de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorRecurrence> ( ) TaskWarriorRecurrence . TaskWarriorRecurrence.NotSupportedRecurrenceException { if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . isPresent ( ) ) { return of ( new TaskWarriorRecurrence ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . get ( ) , de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> ) ) ; } return absent ( ) ; } 
@ VisibleForTesting public void void ( @ NonNull final Task de.azapps.mirakel.sync.taskwarrior.model.Task ) { de.azapps.mirakel.sync.taskwarrior.model.Task . setName ( java.lang.String ) ; de.azapps.mirakel.sync.taskwarrior.model.Task . setUUID ( java.lang.String ) ; switch ( de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status ) { case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : de.azapps.mirakel.sync.taskwarrior.model.Task . setDone ( false ) ; break; case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : de.azapps.mirakel.sync.taskwarrior.model.Task . setSyncState ( DefinitionsHelper . SYNC_STATE . DELETE ) ; break; case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : de.azapps.mirakel.sync.taskwarrior.model.Task . setDone ( true ) ; break; case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : de.azapps.mirakel.sync.taskwarrior.model.Task . addAdditionalEntry ( STRING , STRING ) ; break; case de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Status : break; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority> . isPresent ( ) ) { switch ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Priority> . get ( ) ) { case H : de.azapps.mirakel.sync.taskwarrior.model.Task . setPriority ( NUMBER ) ; break; case M : de.azapps.mirakel.sync.taskwarrior.model.Task . setPriority ( NUMBER ) ; break; case L : if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . isPresent ( ) && ( ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . get ( ) == - NUMBER ) || ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . get ( ) == - NUMBER ) ) ) { de.azapps.mirakel.sync.taskwarrior.model.Task . setPriority ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.Integer> . get ( ) ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.Task . setPriority ( - NUMBER ) ; } break; } } else { de.azapps.mirakel.sync.taskwarrior.model.Task . setPriority ( NUMBER ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . isPresent ( ) ) { final ListMirakel de.azapps.mirakel.sync.taskwarrior.model.ListMirakel ; try { final Optional < ListMirakel > de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.ListMirakel> = ListMirakel . findByName ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . get ( ) ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.ListMirakel> . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.ListMirakel = de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.ListMirakel> . get ( ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.ListMirakel = ListMirakel . newList ( de.azapps.mirakel.sync.taskwarrior.model.Optional<java.lang.String> . get ( ) , ListMirakel . SORT_BY . DUE , AccountMirakel . getLocal ( ) ) ; } } catch ( ListMirakel . ListMirakel ListMirakel.ListAlreadyExistsException ) { Log . wtf ( java.lang.String , STRING ) ; throw new java.lang.RuntimeException ( STRING , ListMirakel.ListAlreadyExistsException ) ; } de.azapps.mirakel.sync.taskwarrior.model.Task . setList ( de.azapps.mirakel.sync.taskwarrior.model.ListMirakel ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.Task . addAdditionalEntry ( Task . NO_PROJECT , STRING ) ; de.azapps.mirakel.sync.taskwarrior.model.Task . setList ( ListMirakel . getInboxList ( AccountMirakel . getLocal ( ) ) ) ; } de.azapps.mirakel.sync.taskwarrior.model.Task . setDue ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> ) ; de.azapps.mirakel.sync.taskwarrior.model.Task . setReminder ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> ) ; de.azapps.mirakel.sync.taskwarrior.model.Task . setUpdatedAt ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.DateTime> . or ( new DateTime ( ) ) ) ; de.azapps.mirakel.sync.taskwarrior.model.Task . setCreatedAt ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; if ( ! java.util.List<java.lang.String> . boolean ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.Task . getTags ( ) . addAll ( Collections2 . transform ( java.util.List<java.lang.String> , new Function < java.lang.String , Tag > ( ) { @ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.model.Tag de.azapps.mirakel.sync.taskwarrior.model.Tag ( final java.lang.String java.lang.String ) { return Tag . newTag ( java.lang.String ) ; } } ) ) ; } de.azapps.mirakel.sync.taskwarrior.model.Task . setContent ( TextUtils . join ( STRING , Collections2 . transform ( java.util.List<de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation> , new Function < de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( final de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation ) { return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation . java.lang.String ; } } ) ) ) ; for ( final java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.Task . addAdditionalEntry ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.model.Tag de.azapps.mirakel.sync.taskwarrior.model.Tag ( final java.lang.String java.lang.String ) { return Tag . newTag ( java.lang.String ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation ) { return de.azapps.mirakel.sync.taskwarrior.model.TaskWarriorTask.Annotation . java.lang.String ; } 
public void ( final Context de.azapps.mirakel.sync.taskwarrior.model.Context ) { this . de.azapps.mirakel.sync.taskwarrior.model.Context = de.azapps.mirakel.sync.taskwarrior.model.Context ; } 
private java.lang.String java.lang.String ( final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime ) { if ( de.azapps.mirakel.sync.taskwarrior.model.DateTime . isBefore ( NUMBER ) ) { return ISODateTimeFormat . basicDateTimeNoMillis ( ) . print ( NUMBER ) ; } return ISODateTimeFormat . basicDateTimeNoMillis ( ) . withZoneUTC ( ) . print ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } 
private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER ) ; } if ( java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( ) - NUMBER ) ; } return java.lang.String ; } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.model.JsonElement de.azapps.mirakel.sync.taskwarrior.model.JsonElement ( final Task de.azapps.mirakel.sync.taskwarrior.model.Task , final java.lang.reflect.Type java.lang.reflect.Type , final JsonSerializationContext de.azapps.mirakel.sync.taskwarrior.model.JsonSerializationContext ) { final JsonObject de.azapps.mirakel.sync.taskwarrior.model.JsonObject = new JsonObject ( ) ; final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = de.azapps.mirakel.sync.taskwarrior.model.Task . getAdditionalEntries ( ) ; boolean boolean = false ; if ( de.azapps.mirakel.sync.taskwarrior.model.Task . getRecurrence ( ) . isPresent ( ) ) { if ( new MirakelQueryBuilder ( de.azapps.mirakel.sync.taskwarrior.model.Context ) . and ( Recurring . CHILD , Operation . EQ , de.azapps.mirakel.sync.taskwarrior.model.Task ) . count ( MirakelInternalContentProvider . RECURRING_TW_URI ) == NUMBER ) { boolean = true ; } } final Pair < java.lang.String , java.lang.String > de.azapps.mirakel.sync.taskwarrior.model.Pair<java.lang.String,java.lang.String> = de.azapps.mirakel.sync.taskwarrior.model.Pair<java.lang.String,java.lang.String> ( de.azapps.mirakel.sync.taskwarrior.model.Task , boolean ) ; final java.lang.String java.lang.String = statusEnd . second ; final java.lang.String java.lang.String = statusEnd . first ; java.lang.String java.lang.String = null ; switch ( de.azapps.mirakel.sync.taskwarrior.model.Task . getPriority ( ) ) { case - NUMBER : case - NUMBER : java.lang.String = STRING ; break; case NUMBER : java.lang.String = STRING ; break; case NUMBER : java.lang.String = STRING ; break; default: break; } java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.model.Task . getUUID ( ) ; if ( java.lang.String . java.lang.String ( ) . boolean ( ) ) { java.lang.String = java . util . java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ; de.azapps.mirakel.sync.taskwarrior.model.Task . setUUID ( java.lang.String ) ; de.azapps.mirakel.sync.taskwarrior.model.Task . save ( false ) ; } de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ) ; de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ) ; de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Task . getCreatedAt ( ) ) ) ; de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Task . getName ( ) ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.Task . getDue ( ) . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Task . getDue ( ) . get ( ) ) ) ; } if ( ! de.azapps.mirakel.sync.taskwarrior.model.Task . containsAdditional ( Task . NO_PROJECT ) ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Task . getList ( ) . getName ( ) ) ; } if ( java.lang.String != null ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ) ; if ( STRING . boolean ( java.lang.String ) && ( de.azapps.mirakel.sync.taskwarrior.model.Task . getPriority ( ) != - NUMBER ) ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Task . getPriority ( ) ) ; } } de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Task . getUpdatedAt ( ) ) ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.Task . getReminder ( ) . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Task . getReminder ( ) . get ( ) ) ) ; } if ( java.lang.String != null ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Task . getProgress ( ) != NUMBER ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Task . getProgress ( ) ) ; } if ( ! de.azapps.mirakel.sync.taskwarrior.model.Task . getTags ( ) . isEmpty ( ) ) { final JsonArray de.azapps.mirakel.sync.taskwarrior.model.JsonArray = new JsonArray ( ) ; for ( final Tag de.azapps.mirakel.sync.taskwarrior.model.Tag : de.azapps.mirakel.sync.taskwarrior.model.Task . getTags ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.JsonArray . add ( new JsonPrimitive ( de.azapps.mirakel.sync.taskwarrior.model.Tag . getName ( ) . trim ( ) . replace ( STRING , STRING ) ) ) ; } de.azapps.mirakel.sync.taskwarrior.model.JsonObject . add ( STRING , de.azapps.mirakel.sync.taskwarrior.model.JsonArray ) ; } if ( ! de.azapps.mirakel.sync.taskwarrior.model.Task . getContent ( ) . isEmpty ( ) ) { final JsonArray de.azapps.mirakel.sync.taskwarrior.model.JsonArray = new JsonArray ( ) ; final java.lang.String java.lang.String[] [] = de.azapps.mirakel.sync.taskwarrior.model.Task . getContent ( ) . split ( STRING ) ; DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime = de.azapps.mirakel.sync.taskwarrior.model.Task . getUpdatedAt ( ) ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { final JsonObject de.azapps.mirakel.sync.taskwarrior.model.JsonObject = new JsonObject ( ) ; de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ) ; de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.String . java.lang.String ( STRING , STRING ) ) ; de.azapps.mirakel.sync.taskwarrior.model.JsonArray . add ( de.azapps.mirakel.sync.taskwarrior.model.JsonObject ) ; de.azapps.mirakel.sync.taskwarrior.model.DateTime = de.azapps.mirakel.sync.taskwarrior.model.DateTime . plusSeconds ( NUMBER ) ; } de.azapps.mirakel.sync.taskwarrior.model.JsonObject . add ( STRING , de.azapps.mirakel.sync.taskwarrior.model.JsonArray ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Task . countSubtasks ( ) > NUMBER ) { boolean boolean = true ; final java.util.List<de.azapps.mirakel.sync.taskwarrior.model.Task> < Task > java.util.List<de.azapps.mirakel.sync.taskwarrior.model.Task> = de.azapps.mirakel.sync.taskwarrior.model.Task . getSubtasks ( ) ; final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( java.util.List<de.azapps.mirakel.sync.taskwarrior.model.Task> . size ( ) * NUMBER ) ; for ( final Task de.azapps.mirakel.sync.taskwarrior.model.Task : java.util.List<de.azapps.mirakel.sync.taskwarrior.model.Task> ) { if ( boolean ) { boolean = false ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( ',' ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( de.azapps.mirakel.sync.taskwarrior.model.Task . getUUID ( ) ) ; } de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.StringBuilder . java.lang.String ( ) ) ; } if ( de.azapps.mirakel.sync.taskwarrior.model.Task . getRecurrence ( ) . isPresent ( ) && de.azapps.mirakel.sync.taskwarrior.model.Task . getDue ( ) . isPresent ( ) ) { void ( de.azapps.mirakel.sync.taskwarrior.model.JsonObject , de.azapps.mirakel.sync.taskwarrior.model.Task . getRecurrence ( ) . get ( ) ) ; if ( boolean ) { final Cursor de.azapps.mirakel.sync.taskwarrior.model.Cursor = de.azapps.mirakel.sync.taskwarrior.model.Context . getContentResolver ( ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI , new java.lang.String [] { STRING , STRING } , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Task . getId ( ) ) } , STRING ) ; final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( de.azapps.mirakel.sync.taskwarrior.model.Cursor . getCount ( ) ) ; de.azapps.mirakel.sync.taskwarrior.model.Cursor . moveToFirst ( ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.Cursor . getCount ( ) > NUMBER ) { int int = - NUMBER ; do { final int int = de.azapps.mirakel.sync.taskwarrior.model.Cursor . getInt ( NUMBER ) ; if ( int <= int ) { final long long = de.azapps.mirakel.sync.taskwarrior.model.Cursor . getLong ( NUMBER ) ; final Optional < Task > de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> = Task . get ( long , true ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> . get ( ) . destroy ( true ) ; } else { Task . destroyRecurrenceGarbageForTask ( long ) ; } continue; } while ( ++ int < int ) { java.lang.StringBuilder . java.lang.StringBuilder ( 'X' ) ; } final Optional < Task > de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> = Task . get ( de.azapps.mirakel.sync.taskwarrior.model.Cursor . getLong ( NUMBER ) ) ; if ( ! de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> . isPresent ( ) ) { Log . wtf ( java.lang.String , STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( 'X' ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Pair<java.lang.String,java.lang.String> ( de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> . get ( ) , false ) . second ) ) ; } } while ( de.azapps.mirakel.sync.taskwarrior.model.Cursor . moveToNext ( ) ); } de.azapps.mirakel.sync.taskwarrior.model.Cursor . close ( ) ; de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , java.lang.StringBuilder . java.lang.String ( ) ) ; } else { final Cursor de.azapps.mirakel.sync.taskwarrior.model.Cursor = de.azapps.mirakel.sync.taskwarrior.model.Context . getContentResolver ( ) . query ( MirakelInternalContentProvider . RECURRING_TW_URI , new java.lang.String [] { STRING , STRING } , STRING , new java.lang.String [] { java.lang.String . java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Task . getId ( ) ) } , null ) ; de.azapps.mirakel.sync.taskwarrior.model.Cursor . moveToFirst ( ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.Cursor . getCount ( ) > NUMBER ) { final Optional < Task > de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> = Task . get ( de.azapps.mirakel.sync.taskwarrior.model.Cursor . getLong ( NUMBER ) ) ; if ( ! de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.model.Task . destroy ( ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Optional<de.azapps.mirakel.sync.taskwarrior.model.Task> . get ( ) . getUUID ( ) ) ; de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Cursor . getInt ( NUMBER ) ) ; } } else { Log . wtf ( java.lang.String , STRING ) ; } de.azapps.mirakel.sync.taskwarrior.model.Cursor . close ( ) ; } } for ( final java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { if ( ! java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) . boolean ( Task . NO_PROJECT ) && ! STRING . boolean ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , java.lang.String ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ) ; } } return de.azapps.mirakel.sync.taskwarrior.model.JsonObject ; } 
private static java.lang.String java.lang.String ( final java.lang.String java.lang.String ) { switch ( java.lang.String ) { case STRING : case STRING : return STRING ; case STRING : return STRING ; case STRING : return STRING ; case STRING : return STRING ; default: break; } return STRING ; } 
public static void void ( final JsonObject de.azapps.mirakel.sync.taskwarrior.model.JsonObject , final Recurring de.azapps.mirakel.sync.taskwarrior.model.Recurring ) { if ( de.azapps.mirakel.sync.taskwarrior.model.Recurring == null ) { Log . wtf ( java.lang.String , STRING ) ; return; } if ( ! de.azapps.mirakel.sync.taskwarrior.model.Recurring . getWeekdays ( ) . isEmpty ( ) ) { switch ( de.azapps.mirakel.sync.taskwarrior.model.Recurring . getWeekdays ( ) . size ( ) ) { case NUMBER : de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , STRING ) ; return; case NUMBER : de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , STRING ) ; return; case NUMBER : final java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = de.azapps.mirakel.sync.taskwarrior.model.Recurring . getWeekdays ( ) ; for ( java.lang.Integer java.lang.Integer = DateTimeConstants . MONDAY ; java.lang.Integer <= DateTimeConstants . FRIDAY ; java.lang.Integer ++ ) { if ( ! java.util.List<java.lang.Integer> . boolean ( java.lang.Integer ) ) { Log . w ( java.lang.String , STRING ) ; return; } } de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , STRING ) ; return; default: Log . w ( java.lang.String , STRING ) ; return; } } final long long = de.azapps.mirakel.sync.taskwarrior.model.Recurring . getIntervalMs ( ) / ( NUMBER * NUMBER ) ; if ( long > NUMBER ) { Period de.azapps.mirakel.sync.taskwarrior.model.Period = de.azapps.mirakel.sync.taskwarrior.model.Recurring . getInterval ( ) ; if ( de.azapps.mirakel.sync.taskwarrior.model.Recurring . getInterval ( ) . getMinutes ( ) > NUMBER ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Period . toStandardMinutes ( ) . getMinutes ( ) + STRING ) ; } else if ( de.azapps.mirakel.sync.taskwarrior.model.Recurring . getInterval ( ) . getHours ( ) > NUMBER ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Period . toStandardHours ( ) . getHours ( ) + STRING ) ; } else if ( de.azapps.mirakel.sync.taskwarrior.model.Recurring . getInterval ( ) . getDays ( ) > NUMBER ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Period . toStandardDays ( ) . getDays ( ) + STRING ) ; } else if ( de.azapps.mirakel.sync.taskwarrior.model.Recurring . getInterval ( ) . getWeeks ( ) > NUMBER ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Period . toStandardWeeks ( ) . getWeeks ( ) + STRING ) ; } else if ( de.azapps.mirakel.sync.taskwarrior.model.Recurring . getInterval ( ) . getMonths ( ) > NUMBER ) { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Period . getMonths ( ) + ( NUMBER * de.azapps.mirakel.sync.taskwarrior.model.Period . getYears ( ) ) + STRING ) ; } else { de.azapps.mirakel.sync.taskwarrior.model.JsonObject . addProperty ( STRING , de.azapps.mirakel.sync.taskwarrior.model.Period . getYears ( ) + STRING ) ; } } } 
private de.azapps.mirakel.sync.taskwarrior.model.Pair<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > de.azapps.mirakel.sync.taskwarrior.model.Pair<java.lang.String,java.lang.String> ( final Task de.azapps.mirakel.sync.taskwarrior.model.Task , final boolean boolean ) { final DateTime de.azapps.mirakel.sync.taskwarrior.model.DateTime = new DateTime ( ) ; java.lang.String java.lang.String = null ; java.lang.String java.lang.String = STRING ; if ( de.azapps.mirakel.sync.taskwarrior.model.Task . getSyncState ( ) == SYNC_STATE . DELETE ) { java.lang.String = STRING ; java.lang.String = java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } else if ( de.azapps.mirakel.sync.taskwarrior.model.Task . isDone ( ) ) { java.lang.String = STRING ; if ( de.azapps.mirakel.sync.taskwarrior.model.Task . containsAdditional ( STRING ) ) { java.lang.String = java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Task . getAdditionalRaw ( STRING ) ) ; } else { java.lang.String = java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.DateTime ) ; } } else if ( de.azapps.mirakel.sync.taskwarrior.model.Task . getRecurrence ( ) . isPresent ( ) && boolean ) { java.lang.String = STRING ; } else if ( de.azapps.mirakel.sync.taskwarrior.model.Task . containsAdditional ( STRING ) ) { java.lang.String = java.lang.String ( de.azapps.mirakel.sync.taskwarrior.model.Task . getAdditionalString ( STRING ) ) ; } return new Pair <> ( java.lang.String , java.lang.String ) ; } 
public void ( ) { this . java.lang.String = STRING ; this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING + DefinitionsHelper . VERSIONS_NAME ) ; } 
public void void ( ) { this . java.util.Map<java.lang.String,java.lang.String> . void ( ) ; this . java.lang.String = STRING ; } 
public void void ( final java.lang.String java.lang.String , final int int ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String . java.lang.String ( int ) ) ; } 
public void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; } 
public void void ( final java.lang.String java.lang.String , final double double ) { this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String . java.lang.String ( double ) ) ; } 
public void void ( final java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; } 
public de.azapps.mirakel.sync.taskwarrior.network_helper.Optional<java.lang.String> < java.lang.String > de.azapps.mirakel.sync.taskwarrior.network_helper.Optional<java.lang.String> ( final java.lang.String java.lang.String ) { if ( java.util.Map<java.lang.String,java.lang.String> . boolean ( java.lang.String ) ) { return Optional . of ( java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ) ; } else { return Optional . absent ( ) ; } } 
public java.lang.String java.lang.String ( ) { return this . java.lang.String ; } 
public java.lang.String java.lang.String ( ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( final java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : this . java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) + STRING + java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) + '\n' ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( '\n' + this . java.lang.String + '\n' ) ; return java.lang.StringBuilder . java.lang.String ( ) ; } 
public void void ( final java.lang.String java.lang.String ) throws java.nio.charset.MalformedInputException { this . java.util.Map<java.lang.String,java.lang.String> . void ( ) ; this . java.lang.String = STRING ; final int int = java.lang.String . int ( STRING ) ; if ( int == - NUMBER ) { throw new java.nio.charset.MalformedInputException ( java.lang.String . int ( ) ) ; } final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String ( NUMBER , int ) . java.lang.String[] ( STRING ) ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { final int int = java.lang.String . int ( ':' ) ; if ( int == - NUMBER ) { throw new java.nio.charset.MalformedInputException ( java.lang.String . int ( ) ) ; } this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String . java.lang.String ( NUMBER , int ) . java.lang.String ( ) , java.lang.String . java.lang.String ( int + NUMBER ) . java.lang.String ( ) ) ; } this . java.lang.String = java.lang.String . java.lang.String ( int + NUMBER ) . java.lang.String ( ) ; } 
private static java.util.List<java.security.cert.X509Certificate> < java.security.cert.X509Certificate > java.util.List<java.security.cert.X509Certificate> ( final java.lang.String java.lang.String )    throws de.azapps.mirakel.sync.taskwarrior.network_helper.TLSClient.NoSuchCertificateException { if ( java.lang.String == null ) { throw new de.azapps.mirakel.sync.taskwarrior.network_helper.TLSClient.NoSuchCertificateException ( ) ; } final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; final java.util.List<java.security.cert.X509Certificate> < java.security.cert.X509Certificate > java.util.List<java.security.cert.X509Certificate> = new java.util.ArrayList<java.security.cert.X509Certificate> <> ( java.lang.String[] . int ) ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { if ( java.lang.String . java.lang.String ( ) . boolean ( ) ) { continue; } try { java.util.List<java.security.cert.X509Certificate> . boolean ( ( java.security.cert.X509Certificate ) java.security.cert.CertificateFactory . java.security.cert.CertificateFactory ( STRING ) . java.security.cert.Certificate ( new java.io.StringBufferInputStream ( java.lang.String . java.lang.String ( ) + STRING ) ) ) ; } catch ( final java.security.cert.CertificateException java.security.cert.CertificateException ) { Log . wtf ( java.lang.String , STRING + java.lang.String , java.security.cert.CertificateException ) ; return java.util.List<java.security.cert.X509Certificate> ; } } return java.util.List<java.security.cert.X509Certificate> ; } 
private static java.security.interfaces.RSAPrivateKey java.security.interfaces.RSAPrivateKey ( final java.lang.String java.lang.String )    throws java.text.ParseException { final byte [] byte[] = byte[] ( java.lang.String , STRING , STRING ) ; final java.security.spec.PKCS8EncodedKeySpec java.security.spec.PKCS8EncodedKeySpec = new java.security.spec.PKCS8EncodedKeySpec ( byte[] ) ; final java.security.KeyFactory java.security.KeyFactory ; try { java.security.KeyFactory = java.security.KeyFactory . java.security.KeyFactory ( STRING , STRING ) ; } catch ( final java.security.NoSuchAlgorithmException java.security.NoSuchAlgorithmException ) { Log . e ( java.lang.String , STRING , java.security.NoSuchAlgorithmException ) ; return null ; } catch ( final java.security.NoSuchProviderException java.security.NoSuchProviderException ) { Log . e ( java.lang.String , STRING , java.security.NoSuchProviderException ) ; return null ; } try { return ( java.security.interfaces.RSAPrivateKey ) java.security.KeyFactory . java.security.PrivateKey ( java.security.spec.PKCS8EncodedKeySpec ) ; } catch ( final java.security.spec.InvalidKeySpecException java.security.spec.InvalidKeySpecException ) { Log . e ( java.lang.String , STRING , java.security.spec.InvalidKeySpecException ) ; return null ; } } 
private static byte [] byte[] ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.String java.lang.String )    throws java.text.ParseException { java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( java.lang.String ) ; if ( java.lang.String[] . int < NUMBER ) { throw new java.text.ParseException ( STRING , NUMBER ) ; } java.lang.String[] = java.lang.String[] [ NUMBER ] . java.lang.String[] ( java.lang.String ) ; try { return Base64 . decode ( java.lang.String[] [ NUMBER ] , Base64 . NO_PADDING ) ; } catch ( final java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { throw new java.text.ParseException ( STRING , NUMBER ) ; } } 
public void ( ) { this . javax.net.ssl.SSLSocket = null ; this . javax.net.ssl.SSLSocketFactory = null ; this . java.io.InputStream = null ; this . java.io.OutputStream = null ; } 
public void void ( ) { if ( this . javax.net.ssl.SSLSocket == null ) { Log . e ( java.lang.String , STRING ) ; return; } try { this . java.io.OutputStream . void ( ) ; this . java.io.InputStream . void ( ) ; this . java.io.OutputStream . void ( ) ; this . javax.net.ssl.SSLSocket . void ( ) ; this . javax.net.ssl.SSLSocket = null ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; } catch ( final java.lang.NullPointerException java.lang.NullPointerException ) { Log . e ( java.lang.String , STRING , java.lang.NullPointerException ) ; } } 
@ SuppressLint ( STRING ) private static void void ( final javax.net.ssl.SSLSocket javax.net.ssl.SSLSocket ) { final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.LinkedList<java.lang.String> <> ( ) ; for ( final java.lang.String java.lang.String : javax.net.ssl.SSLSocket . java.lang.String[] ( ) ) { if ( ! java.lang.String . java.lang.String ( ) . boolean ( STRING ) ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } javax.net.ssl.SSLSocket . void ( java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING , STRING ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( javax.net.ssl.SSLSocket . java.lang.String[] ( ) ) ; final java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( java.util.List<java.lang.String> ) ; java.util.HashSet<java.lang.String> . boolean ( java.util.List<java.lang.String> ) ; final java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( java.util.Arrays . java.util.List<java.lang.String> ( javax.net.ssl.SSLSocket . java.lang.String[] ( ) ) ) ; java.util.HashSet<java.lang.String> . boolean ( java.util.HashSet<java.lang.String> ) ; if ( java.util.HashSet<java.lang.String> . boolean ( ) ) { javax.net.ssl.SSLSocket . void ( java.util.HashSet<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.HashSet<java.lang.String> . int ( ) ] ) ) ; } else { javax.net.ssl.SSLSocket . void ( java.util.HashSet<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.HashSet<java.lang.String> . int ( ) ] ) ) ; } } 
public void void ( final java.lang.String java.lang.String , final int int ) throws java.io.IOException { Log . i ( java.lang.String , STRING ) ; if ( this . javax.net.ssl.SSLSocket != null ) { try { this . javax.net.ssl.SSLSocket . void ( ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; } } try { Log . d ( java.lang.String , STRING + java.lang.String + ':' + int ) ; this . javax.net.ssl.SSLSocket = ( javax.net.ssl.SSLSocket ) this . javax.net.ssl.SSLSocketFactory . java.net.Socket ( ) ; void ( this . javax.net.ssl.SSLSocket ) ; this . javax.net.ssl.SSLSocket . void ( true ) ; this . javax.net.ssl.SSLSocket . void ( true ) ; this . javax.net.ssl.SSLSocket . void ( true ) ; this . javax.net.ssl.SSLSocket . void ( true ) ; this . javax.net.ssl.SSLSocket . void ( new java.net.InetSocketAddress ( java.lang.String , int ) ) ; this . javax.net.ssl.SSLSocket . void ( ) ; this . java.io.OutputStream = this . javax.net.ssl.SSLSocket . java.io.OutputStream ( ) ; this . java.io.InputStream = this . javax.net.ssl.SSLSocket . java.io.InputStream ( ) ; Log . d ( java.lang.String , STRING + java.lang.String + ':' + int ) ; return; } catch ( final java.net.UnknownHostException java.net.UnknownHostException ) { Log . e ( java.lang.String , STRING , java.net.UnknownHostException ) ; } catch ( final java.net.ConnectException java.net.ConnectException ) { Log . e ( java.lang.String , STRING , java.net.ConnectException ) ; } catch ( final java.net.SocketException java.net.SocketException ) { Log . e ( java.lang.String , STRING , java.net.SocketException ) ; } throw new java.io.IOException ( ) ; } 
public void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.String java.lang.String ) throws java.text.ParseException , java.security.cert.CertificateException , de.azapps.mirakel.sync.taskwarrior.network_helper.TLSClient.NoSuchCertificateException { try { final java.util.List<java.security.cert.X509Certificate> < java.security.cert.X509Certificate > java.util.List<java.security.cert.X509Certificate> = java.util.List<java.security.cert.X509Certificate> ( java.lang.String ) ; final java.security.cert.X509Certificate java.security.cert.X509Certificate = ( java.security.cert.X509Certificate ) java.security.cert.CertificateFactory . java.security.cert.CertificateFactory ( STRING ) . java.security.cert.Certificate ( new java.io.StringBufferInputStream ( java.lang.String ) ) ; final java.security.interfaces.RSAPrivateKey java.security.interfaces.RSAPrivateKey = java.security.interfaces.RSAPrivateKey ( java.lang.String ) ; final java.security.KeyStore java.security.KeyStore = java.security.KeyStore . java.security.KeyStore ( java.security.KeyStore . java.lang.String ( ) ) ; java.security.KeyStore . void ( null ) ; final java.security.cert.Certificate [] java.security.cert.Certificate[] = new java.security.cert.Certificate [ java.util.List<java.security.cert.X509Certificate> . int ( ) + NUMBER ] ; int int = java.security.cert.Certificate[] . int - NUMBER ; for ( final java.security.cert.X509Certificate java.security.cert.X509Certificate : java.util.List<java.security.cert.X509Certificate> ) { java.security.KeyStore . void ( STRING , java.security.cert.X509Certificate ) ; java.security.cert.Certificate[] [ int -- ] = java.security.cert.X509Certificate ; } java.security.KeyStore . void ( STRING , java.security.cert.X509Certificate ) ; java.security.cert.Certificate[] [ NUMBER ] = java.security.cert.X509Certificate ; final javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory = javax.net.ssl.KeyManagerFactory . javax.net.ssl.KeyManagerFactory ( javax.net.ssl.KeyManagerFactory . java.lang.String ( ) ) ; final java.lang.String java.lang.String = STRING ; java.security.KeyStore . void ( STRING , new java.security.KeyStore . java.security.KeyStore.PrivateKeyEntry ( java.security.interfaces.RSAPrivateKey , java.security.cert.Certificate[] ) , new java.security.KeyStore . java.security.KeyStore.PasswordProtection ( java.lang.String . char[] ( ) ) ) ; javax.net.ssl.KeyManagerFactory . void ( java.security.KeyStore , java.lang.String . char[] ( ) ) ; final javax.net.ssl.SSLContext javax.net.ssl.SSLContext = javax.net.ssl.SSLContext . javax.net.ssl.SSLContext ( STRING ) ; final javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory = javax.net.ssl.TrustManagerFactory . javax.net.ssl.TrustManagerFactory ( javax.net.ssl.TrustManagerFactory . java.lang.String ( ) ) ; javax.net.ssl.TrustManagerFactory . void ( java.security.KeyStore ) ; final javax.net.ssl.TrustManager [] javax.net.ssl.TrustManager[] = javax.net.ssl.TrustManagerFactory . javax.net.ssl.TrustManager[] ( ) ; javax.net.ssl.SSLContext . void ( javax.net.ssl.KeyManagerFactory . javax.net.ssl.KeyManager[] ( ) , javax.net.ssl.TrustManager[] , new java.security.SecureRandom ( ) ) ; this . javax.net.ssl.SSLSocketFactory = javax.net.ssl.SSLContext . javax.net.ssl.SSLSocketFactory ( ) ; } catch ( final java.security.UnrecoverableKeyException java.security.UnrecoverableKeyException ) { Log . w ( java.lang.String , STRING ) ; throw new java.security.cert.CertificateException ( java.security.UnrecoverableKeyException ) ; } catch ( final java.security.KeyManagementException java.security.KeyManagementException ) { Log . w ( java.lang.String , STRING ) ; throw new java.security.cert.CertificateException ( java.security.KeyManagementException ) ; } catch ( final java.security.KeyStoreException java.security.KeyStoreException ) { Log . w ( java.lang.String , STRING ) ; throw new java.security.cert.CertificateException ( java.security.KeyStoreException ) ; } catch ( final java.security.NoSuchAlgorithmException java.security.NoSuchAlgorithmException ) { Log . w ( java.lang.String , STRING ) ; throw new java.security.cert.CertificateException ( java.security.NoSuchAlgorithmException ) ; } catch ( final java.security.cert.CertificateException java.security.cert.CertificateException ) { Log . w ( java.lang.String , STRING ) ; throw new java.security.cert.CertificateException ( java.security.cert.CertificateException ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . w ( java.lang.String , STRING ) ; throw new java.security.cert.CertificateException ( java.io.IOException ) ; } } 
public java.lang.String java.lang.String ( ) { Log . i ( java.lang.String , STRING + this . javax.net.ssl.SSLSocket . java.net.InetAddress ( ) + ':' + this . javax.net.ssl.SSLSocket . int ( ) ) ; if ( ! this . javax.net.ssl.SSLSocket . boolean ( ) ) { Log . e ( java.lang.String , STRING ) ; return null ; } try { final byte [] byte[] = new byte [ NUMBER ] ; this . java.io.InputStream . int ( byte[] ) ; final java.util.Scanner java.util.Scanner = new java.util.Scanner ( this . java.io.InputStream ) ; final java.util.Scanner java.util.Scanner = java.util.Scanner . java.util.Scanner ( STRING ) ; final java.lang.String java.lang.String = java.util.Scanner . boolean ( ) ? java.util.Scanner . java.lang.String ( ) : STRING ; java.util.Scanner . void ( ) ; java.util.Scanner . void ( ) ; return java.lang.String ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; } return null ; } 
public void void ( final java.lang.String java.lang.String ) { final java.io.DataOutputStream java.io.DataOutputStream = new java.io.DataOutputStream ( java.io.OutputStream ) ; if ( ! this . javax.net.ssl.SSLSocket . boolean ( ) ) { Log . e ( java.lang.String , STRING ) ; return; } try { final byte [] byte[] = java.lang.String . byte[] ( STRING ) ; java.io.DataOutputStream . void ( byte[] . int ) ; java.io.DataOutputStream . void ( byte[] ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; } try { java.io.DataOutputStream . void ( ) ; java.io.DataOutputStream . void ( ) ; this . java.io.OutputStream . void ( ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; } } 
@ java.lang.Override public void void ( ) { this . de.azapps.mirakel.sync.taskwarrior.services.Authenticator = new Authenticator ( this ) ; } 
@ java.lang.Override public void void ( ) { } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.services.IBinder de.azapps.mirakel.sync.taskwarrior.services.IBinder ( final Intent de.azapps.mirakel.sync.taskwarrior.services.Intent ) { return this . de.azapps.mirakel.sync.taskwarrior.services.Authenticator . getIBinder ( ) ; } 
public void ( final Context de.azapps.mirakel.sync.taskwarrior.services.Context ) { super( de.azapps.mirakel.sync.taskwarrior.services.Context ); this . de.azapps.mirakel.sync.taskwarrior.services.Context = de.azapps.mirakel.sync.taskwarrior.services.Context ; } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.services.Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ( final AccountAuthenticatorResponse de.azapps.mirakel.sync.taskwarrior.services.AccountAuthenticatorResponse , final java.lang.String java.lang.String , final java.lang.String java.lang.String , final java.lang.String [] java.lang.String[] , final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ) { Log . v ( java.lang.String , STRING ) ; final Intent de.azapps.mirakel.sync.taskwarrior.services.Intent = new Intent ( this . de.azapps.mirakel.sync.taskwarrior.services.Context , TaskWarriorSetupActivity .class ) ; de.azapps.mirakel.sync.taskwarrior.services.Intent . putExtra ( AccountManager . KEY_ACCOUNT_AUTHENTICATOR_RESPONSE , de.azapps.mirakel.sync.taskwarrior.services.AccountAuthenticatorResponse ) ; final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle = new Bundle ( ) ; de.azapps.mirakel.sync.taskwarrior.services.Bundle . putParcelable ( AccountManager . KEY_INTENT , de.azapps.mirakel.sync.taskwarrior.services.Intent ) ; return de.azapps.mirakel.sync.taskwarrior.services.Bundle ; } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.services.Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ( final AccountAuthenticatorResponse de.azapps.mirakel.sync.taskwarrior.services.AccountAuthenticatorResponse , final Account de.azapps.mirakel.sync.taskwarrior.services.Account , final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ) { Log . v ( java.lang.String , STRING ) ; return null ; } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.services.Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ( final AccountAuthenticatorResponse de.azapps.mirakel.sync.taskwarrior.services.AccountAuthenticatorResponse , final java.lang.String java.lang.String ) { Log . v ( java.lang.String , STRING ) ; throw new java.lang.UnsupportedOperationException ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.services.Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ( final AccountAuthenticatorResponse de.azapps.mirakel.sync.taskwarrior.services.AccountAuthenticatorResponse , final Account de.azapps.mirakel.sync.taskwarrior.services.Account , final java.lang.String java.lang.String , final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ) throws de.azapps.mirakel.sync.taskwarrior.services.NetworkErrorException { Log . v ( java.lang.String , STRING ) ; if ( ! java.lang.String . boolean ( AccountMirakel . ACCOUNT_TYPE_MIRAKEL ) ) { final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle = new Bundle ( ) ; de.azapps.mirakel.sync.taskwarrior.services.Bundle . putString ( AccountManager . KEY_ERROR_MESSAGE , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.services.Bundle ; } final AccountManager de.azapps.mirakel.sync.taskwarrior.services.AccountManager = AccountManager . get ( this . de.azapps.mirakel.sync.taskwarrior.services.Context ) ; final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.services.AccountManager . getPassword ( de.azapps.mirakel.sync.taskwarrior.services.Account ) ; if ( java.lang.String != null ) { final java.lang.String java.lang.String = STRING ; if ( ! TextUtils . isEmpty ( java.lang.String ) ) { final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle = new Bundle ( ) ; de.azapps.mirakel.sync.taskwarrior.services.Bundle . putString ( AccountManager . KEY_ACCOUNT_NAME , account . name ) ; de.azapps.mirakel.sync.taskwarrior.services.Bundle . putString ( AccountManager . KEY_ACCOUNT_TYPE , AccountMirakel . ACCOUNT_TYPE_MIRAKEL ) ; de.azapps.mirakel.sync.taskwarrior.services.Bundle . putString ( AccountManager . KEY_AUTHTOKEN , java.lang.String ) ; return de.azapps.mirakel.sync.taskwarrior.services.Bundle ; } } throw new NetworkErrorException ( ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( final java.lang.String java.lang.String ) { Log . v ( java.lang.String , STRING ) ; return null ; } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.services.Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ( final AccountAuthenticatorResponse de.azapps.mirakel.sync.taskwarrior.services.AccountAuthenticatorResponse , final Account de.azapps.mirakel.sync.taskwarrior.services.Account , final java.lang.String [] java.lang.String[] ) { Log . v ( java.lang.String , STRING ) ; final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle = new Bundle ( ) ; de.azapps.mirakel.sync.taskwarrior.services.Bundle . putBoolean ( AccountManager . KEY_BOOLEAN_RESULT , false ) ; return de.azapps.mirakel.sync.taskwarrior.services.Bundle ; } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.services.Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ( final AccountAuthenticatorResponse de.azapps.mirakel.sync.taskwarrior.services.AccountAuthenticatorResponse , final Account de.azapps.mirakel.sync.taskwarrior.services.Account , final java.lang.String java.lang.String , final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle ) { Log . v ( java.lang.String , STRING ) ; return null ; } 
public void ( final Context de.azapps.mirakel.sync.taskwarrior.services.Context , final boolean boolean ) { super( de.azapps.mirakel.sync.taskwarrior.services.Context , boolean ); this . de.azapps.mirakel.sync.taskwarrior.services.Context = de.azapps.mirakel.sync.taskwarrior.services.Context ; this . de.azapps.mirakel.sync.taskwarrior.services.NotificationManager = ( NotificationManager ) this . de.azapps.mirakel.sync.taskwarrior.services.Context . getSystemService ( Context . NOTIFICATION_SERVICE ) ; } 
public void ( final Context de.azapps.mirakel.sync.taskwarrior.services.Context , final boolean boolean , final boolean boolean ) { super( de.azapps.mirakel.sync.taskwarrior.services.Context , boolean , boolean ); this . de.azapps.mirakel.sync.taskwarrior.services.Context = de.azapps.mirakel.sync.taskwarrior.services.Context ; this . de.azapps.mirakel.sync.taskwarrior.services.NotificationManager = ( NotificationManager ) this . de.azapps.mirakel.sync.taskwarrior.services.Context . getSystemService ( Context . NOTIFICATION_SERVICE ) ; } 
@ java.lang.Override public void void ( final Account de.azapps.mirakel.sync.taskwarrior.services.Account , final Bundle de.azapps.mirakel.sync.taskwarrior.services.Bundle , final java.lang.String java.lang.String , final ContentProviderClient de.azapps.mirakel.sync.taskwarrior.services.ContentProviderClient , final SyncResult de.azapps.mirakel.sync.taskwarrior.services.SyncResult ) { if ( MirakelCommonPreferences . isDemoMode ( ) ) { return; } boolean boolean = false ; if ( de.azapps.mirakel.sync.taskwarrior.services.Bundle . containsKey ( ContentResolver . SYNC_EXTRAS_MANUAL ) ) { boolean = true ; } try { void ( boolean ) ; } catch ( final java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { Log . wtf ( java.lang.String , STRING , java.lang.ClassNotFoundException ) ; return; } java.lang.String java.lang.String = AccountManager . get ( this . de.azapps.mirakel.sync.taskwarrior.services.Context ) . getUserData ( de.azapps.mirakel.sync.taskwarrior.services.Account , java.lang.String ) ; if ( java.lang.String == null ) { java.lang.String = TaskWarriorSync . TYPE ; } boolean boolean = false ; if ( java.lang.String . boolean ( TaskWarriorSync . TYPE ) ) { TW_ERRORS de.azapps.mirakel.sync.taskwarrior.services.TW_ERRORS = TW_ERRORS . NO_ERROR ; try { final Optional < AccountMirakel > de.azapps.mirakel.sync.taskwarrior.services.Optional<de.azapps.mirakel.sync.taskwarrior.services.AccountMirakel> = AccountMirakel . get ( de.azapps.mirakel.sync.taskwarrior.services.Account ) ; if ( de.azapps.mirakel.sync.taskwarrior.services.Optional<de.azapps.mirakel.sync.taskwarrior.services.AccountMirakel> . isPresent ( ) ) { final TaskWarriorAccount de.azapps.mirakel.sync.taskwarrior.services.TaskWarriorAccount = new TaskWarriorAccount ( de.azapps.mirakel.sync.taskwarrior.services.Optional<de.azapps.mirakel.sync.taskwarrior.services.AccountMirakel> . get ( ) , getContext ( ) ) ; new TaskWarriorSync ( this . de.azapps.mirakel.sync.taskwarrior.services.Context ) . sync ( de.azapps.mirakel.sync.taskwarrior.services.TaskWarriorAccount , false ) ; } } catch ( final TaskWarriorSyncFailedException de.azapps.mirakel.sync.taskwarrior.services.TaskWarriorSyncFailedException ) { Log . e ( java.lang.String , STRING , de.azapps.mirakel.sync.taskwarrior.services.TaskWarriorSyncFailedException ) ; de.azapps.mirakel.sync.taskwarrior.services.TW_ERRORS = de.azapps.mirakel.sync.taskwarrior.services.TaskWarriorSyncFailedException . getError ( ) ; } boolean = boolean ( boolean , de.azapps.mirakel.sync.taskwarrior.services.TW_ERRORS ) ; } else { Log . wtf ( java.lang.String , STRING ) ; } this . de.azapps.mirakel.sync.taskwarrior.services.NotificationManager . cancel ( de.azapps.mirakel.sync.taskwarrior.services.SyncAdapter . int ) ; try { void ( boolean , boolean ) ; } catch ( final java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { throw new java.lang.RuntimeException ( java.lang.ClassNotFoundException ) ; } } 
private void void ( final boolean boolean ) throws java.lang.ClassNotFoundException { final Intent de.azapps.mirakel.sync.taskwarrior.services.Intent = new Intent ( this . de.azapps.mirakel.sync.taskwarrior.services.Context , java.lang.Class . java.lang.Class<?> ( DefinitionsHelper . MIRAKEL_ACTIVITY_CLASS ) ) ; de.azapps.mirakel.sync.taskwarrior.services.Intent . setAction ( DefinitionsHelper . SHOW_LISTS ) ; final PendingIntent de.azapps.mirakel.sync.taskwarrior.services.PendingIntent = PendingIntent . getService ( this . de.azapps.mirakel.sync.taskwarrior.services.Context , NUMBER , de.azapps.mirakel.sync.taskwarrior.services.Intent , NUMBER ) ; final NotificationCompat . NotificationCompat NotificationCompat.Builder = new NotificationCompat . NotificationCompat ( this . de.azapps.mirakel.sync.taskwarrior.services.Context ) . setContentTitle ( STRING ) . setContentText ( STRING ) . setSmallIcon ( android . R . drawable . stat_notify_sync ) . setWhen ( java.lang.System . long ( ) ) . setOngoing ( true ) . setContentIntent ( de.azapps.mirakel.sync.taskwarrior.services.PendingIntent ) ; if ( boolean ) { this . de.azapps.mirakel.sync.taskwarrior.services.NotificationManager . notify ( de.azapps.mirakel.sync.taskwarrior.services.SyncAdapter . int , NotificationCompat.Builder . build ( ) ) ; } } 
private boolean boolean ( boolean boolean , final TW_ERRORS de.azapps.mirakel.sync.taskwarrior.services.TW_ERRORS ) { switch ( de.azapps.mirakel.sync.taskwarrior.services.TW_ERRORS ) { case NO_ERROR : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . finish_sync ) ; boolean = true ; break; case TRY_LATER : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . message_try_later ) ; break; case ACCESS_DENIED : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . message_access_denied ) ; break; case CANNOT_CREATE_SOCKET : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . message_create_socket ) ; break; case ACCOUNT_SUSPENDED : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . message_account_suspended ) ; break; case CANNOT_PARSE_MESSAGE : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . message_parse_message ) ; break; case MESSAGE_ERRORS : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . message_message_error ) ; break; case CONFIG_PARSE_ERROR : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . wrong_config ) ; break; case NO_SUCH_CERT : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . cert_not_found ) ; break; case COULD_NOT_FIND_COMMON_ANCESTOR : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . could_not_find_common_ancestor ) ; break; case CLIENT_SYNC_KEY_NOT_FOUND : java.lang.CharSequence = this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . client_sync_key_not_found ) ; break; case ACCOUNT_VANISHED : java.lang.CharSequence = de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . account_vanished ) ; break; case NOT_ENABLED : default: return true ; } Log . d ( java.lang.String , STRING ) ; return boolean ; } 
private void void ( final boolean boolean , final boolean boolean ) throws java.lang.ClassNotFoundException { if ( boolean && ! boolean ) { final java.lang.String java.lang.String = STRING + this . de.azapps.mirakel.sync.taskwarrior.services.Context . getText ( R . string . finish_sync ) ; final Intent de.azapps.mirakel.sync.taskwarrior.services.Intent = new Intent ( this . de.azapps.mirakel.sync.taskwarrior.services.Context , java.lang.Class . java.lang.Class<?> ( DefinitionsHelper . MIRAKEL_ACTIVITY_CLASS ) ) ; de.azapps.mirakel.sync.taskwarrior.services.Intent . setAction ( DefinitionsHelper . SHOW_MESSAGE ) ; de.azapps.mirakel.sync.taskwarrior.services.Intent . putExtra ( Intent . EXTRA_SUBJECT , java.lang.String ) ; de.azapps.mirakel.sync.taskwarrior.services.Intent . putExtra ( Intent . EXTRA_TEXT , java.lang.CharSequence ) ; de.azapps.mirakel.sync.taskwarrior.services.Intent . setData ( Uri . parse ( de.azapps.mirakel.sync.taskwarrior.services.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; final PendingIntent de.azapps.mirakel.sync.taskwarrior.services.PendingIntent = PendingIntent . getActivity ( this . de.azapps.mirakel.sync.taskwarrior.services.Context , NUMBER , de.azapps.mirakel.sync.taskwarrior.services.Intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; final Notification de.azapps.mirakel.sync.taskwarrior.services.Notification = new NotificationCompat . NotificationCompat ( this . de.azapps.mirakel.sync.taskwarrior.services.Context ) . setContentTitle ( java.lang.String ) . setContentText ( java.lang.CharSequence ) . setSmallIcon ( android . R . drawable . stat_notify_sync ) . setPriority ( NotificationCompat . PRIORITY_LOW ) . setContentIntent ( de.azapps.mirakel.sync.taskwarrior.services.PendingIntent ) . build ( ) ; notification . flags = Notification . FLAG_AUTO_CANCEL ; this . de.azapps.mirakel.sync.taskwarrior.services.NotificationManager . notify ( de.azapps.mirakel.sync.taskwarrior.services.SyncAdapter . int , de.azapps.mirakel.sync.taskwarrior.services.Notification ) ; } } 
public static java.lang.CharSequence java.lang.CharSequence ( ) { final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence ; java.lang.CharSequence = null ; return java.lang.CharSequence ; } 
@ java.lang.Override public void void ( ) { synchronized ( java.lang.Object ) { if ( de.azapps.mirakel.sync.taskwarrior.services.SyncAdapter == null ) { de.azapps.mirakel.sync.taskwarrior.services.SyncAdapter = new SyncAdapter ( getApplicationContext ( ) , true ) ; } } } 
@ java.lang.Override public de.azapps.mirakel.sync.taskwarrior.services.IBinder de.azapps.mirakel.sync.taskwarrior.services.IBinder ( final Intent de.azapps.mirakel.sync.taskwarrior.services.Intent ) { return de.azapps.mirakel.sync.taskwarrior.services.SyncAdapter . getSyncAdapterBinder ( ) ; } 
public void ( final de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec , final de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec , final de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec ) { this . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec = de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec ; this . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec = de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec ; this . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec = de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec ; } 
@ java.lang.Override protected java.lang.Integer java.lang.Integer ( final java.net.URL ... java.net.URL[] ) { final java.net.URL java.net.URL = java.net.URL[] [ NUMBER ] ; try { final java.net.HttpURLConnection java.net.HttpURLConnection = ( java.net.HttpURLConnection ) java.net.URL . java.net.URLConnection ( ) ; java.net.HttpURLConnection . void ( STRING ) ; java.net.HttpURLConnection . void ( true ) ; java.net.HttpURLConnection . void ( ) ; if ( java.net.HttpURLConnection . int ( ) != java.net.HttpURLConnection . int ) { return java.lang.Integer ; } void ( java.net.HttpURLConnection . java.io.InputStream ( ) , false ) ; } catch ( final java.net.ProtocolException java.net.ProtocolException ) { Log . e ( java.lang.String , STRING , java.net.ProtocolException ) ; return java.lang.Integer ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; return java.lang.Integer ; } return java.lang.Integer ; } 
@ java.lang.Override protected void void ( final java.lang.Integer java.lang.Integer ) { this . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec . void ( java.lang.Integer ) ; } 
@ java.lang.Override protected void void ( ) { this . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec . void ( null ) ; } 
@ java.lang.Override protected void void ( final java.lang.Integer ... java.lang.Integer[] ) { super. onProgressUpdate ( java.lang.Integer[] ) ; this . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec . void ( java.lang.Integer[] [ NUMBER ] ) ; } 
void void ( final java.lang.Integer java.lang.Integer ); 
@ java.lang.Override protected void void ( final int int , final int int , final Intent de.azapps.mirakel.sync.taskwarrior.Intent ) { super. onActivityResult ( int , int , de.azapps.mirakel.sync.taskwarrior.Intent ) ; if ( int != RESULT_OK ) { return; } switch ( int ) { case int : final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.Intent . getStringExtra ( STRING ) ; void ( java.lang.String ) ; break; case int : void ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; break; default: break; } } 
private void void ( final Intent de.azapps.mirakel.sync.taskwarrior.Intent ) { try { final java.io.InputStream java.io.InputStream = FileUtils . getStreamFromUri ( this , de.azapps.mirakel.sync.taskwarrior.Intent . getData ( ) ) ; void ( java.io.InputStream , true ) ; } catch ( final java.io.FileNotFoundException java.io.FileNotFoundException ) { Log . e ( java.lang.String , STRING , java.io.FileNotFoundException ) ; ErrorReporter . report ( ErrorType . TASKWARRIOR_FILE_NOT_FOUND ) ; } } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.sync.taskwarrior.Bundle ) { super. onCreate ( de.azapps.mirakel.sync.taskwarrior.Bundle ) ; this . de.azapps.mirakel.sync.taskwarrior.AccountManager = AccountManager . get ( this ) ; final Intent de.azapps.mirakel.sync.taskwarrior.Intent = getIntent ( ) ; if ( ( de.azapps.mirakel.sync.taskwarrior.Intent != null ) && Intent . ACTION_VIEW . equals ( de.azapps.mirakel.sync.taskwarrior.Intent . getAction ( ) ) && ( de.azapps.mirakel.sync.taskwarrior.Intent . getData ( ) != null ) ) { void ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; } ThemeManager . setTheme ( this ) ; setContentView ( R . layout . activity_sync_taskwarrior ) ; final Button de.azapps.mirakel.sync.taskwarrior.Button = ( Button ) findViewById ( R . id . sync_taskwarrior_scan_qr ) ; de.azapps.mirakel.sync.taskwarrior.Button . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.sync.taskwarrior.View ) { try { final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( STRING ) ; de.azapps.mirakel.sync.taskwarrior.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( de.azapps.mirakel.sync.taskwarrior.Intent , de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity . int ) ; } catch ( final java.lang.RuntimeException java.lang.RuntimeException ) { new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity .this ) . setTitle ( R . string . no_barcode_app ) . setMessage ( R . string . no_barcode_app_message ) . setPositiveButton ( R . string . no_barcode_app_install , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.sync.taskwarrior.DialogInterface , final int int ) { final Uri de.azapps.mirakel.sync.taskwarrior.Uri = Uri . parse ( STRING ) ; final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( Intent . ACTION_VIEW , de.azapps.mirakel.sync.taskwarrior.Uri ) ; startActivity ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; } } ) . show ( ) ; } } } ) ; final Button de.azapps.mirakel.sync.taskwarrior.Button = ( Button ) findViewById ( R . id . sync_taskwarrior_select_file ) ; de.azapps.mirakel.sync.taskwarrior.Button . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.sync.taskwarrior.View ) { Helpers . showFileChooser ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity . int , getString ( R . string . select_config ) , de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity .this ) ; } } ) ; final Button de.azapps.mirakel.sync.taskwarrior.Button = ( Button ) findViewById ( R . id . sync_taskwarrior_register ) ; de.azapps.mirakel.sync.taskwarrior.Button . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.sync.taskwarrior.View ) { final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING ) ) ; startActivity ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; } } ) ; final Button de.azapps.mirakel.sync.taskwarrior.Button = ( Button ) findViewById ( R . id . sync_taskwarrior_how_to ) ; de.azapps.mirakel.sync.taskwarrior.Button . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View de.azapps.mirakel.sync.taskwarrior.View ) { final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING ) ) ; startActivity ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; } } ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.sync.taskwarrior.View ) { try { final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( STRING ) ; de.azapps.mirakel.sync.taskwarrior.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( de.azapps.mirakel.sync.taskwarrior.Intent , de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity . int ) ; } catch ( final java.lang.RuntimeException java.lang.RuntimeException ) { new AlertDialogWrapper . AlertDialogWrapper ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity .this ) . setTitle ( R . string . no_barcode_app ) . setMessage ( R . string . no_barcode_app_message ) . setPositiveButton ( R . string . no_barcode_app_install , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.sync.taskwarrior.DialogInterface , final int int ) { final Uri de.azapps.mirakel.sync.taskwarrior.Uri = Uri . parse ( STRING ) ; final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( Intent . ACTION_VIEW , de.azapps.mirakel.sync.taskwarrior.Uri ) ; startActivity ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; } } ) . show ( ) ; } } 
@ java.lang.Override public void void ( final DialogInterface de.azapps.mirakel.sync.taskwarrior.DialogInterface , final int int ) { final Uri de.azapps.mirakel.sync.taskwarrior.Uri = Uri . parse ( STRING ) ; final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( Intent . ACTION_VIEW , de.azapps.mirakel.sync.taskwarrior.Uri ) ; startActivity ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.sync.taskwarrior.View ) { Helpers . showFileChooser ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity . int , getString ( R . string . select_config ) , de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity .this ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.sync.taskwarrior.View ) { final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING ) ) ; startActivity ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; } 
@ java.lang.Override public void void ( final View de.azapps.mirakel.sync.taskwarrior.View ) { final Intent de.azapps.mirakel.sync.taskwarrior.Intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING ) ) ; startActivity ( de.azapps.mirakel.sync.taskwarrior.Intent ) ; } 
private java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( final java.io.InputStream java.io.InputStream )    throws java.io.IOException { final java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.io.InputStream ) ) ; final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> <> ( NUMBER ) ; de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE = de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE ; java.lang.String java.lang.String ; java.lang.String java.lang.String = null ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; while ( ( java.lang.String = java.io.BufferedReader . java.lang.String ( ) ) != null ) { if ( STRING . boolean ( java.lang.String ) && java.lang.String . boolean ( STRING ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.StringBuilder . java.lang.String ( ) ) ; de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE = de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE ; } switch ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE ) { case de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE : final java.lang.String [] java.lang.String[] = java.util.regex.Pattern . java.lang.String[] ( java.lang.String , NUMBER ) ; if ( java.lang.String[] . int != NUMBER ) { continue; } final java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] . java.lang.String ( ) . java.lang.String ( ) ; final java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] . java.lang.String ( ) ; if ( java.lang.String . boolean ( ) ) { java.lang.String = java.lang.String ; java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE = de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE ; } else { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.String ) ; } break; case de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE : java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( '\n' ) ; if ( java.lang.String . boolean ( STRING ) && ! STRING . boolean ( java.lang.String ) ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.StringBuilder . java.lang.String ( ) ) ; de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE = de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE ; } break; } } if ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE == de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE . de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.PARSE_STATE ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , java.lang.StringBuilder . java.lang.String ( ) ) ; } return java.util.Map<java.lang.String,java.lang.String> ; } 
public void ( final java.lang.String java.lang.String ) { super( java.lang.String ); } 
private void void ( final java.io.InputStream java.io.InputStream , final boolean boolean ) { try { void ( java.io.InputStream ) ; Toast . makeText ( this , getString ( R . string . sync_taskwarrior_setup_success ) , Toast . LENGTH_LONG ) . show ( ) ; finish ( ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; ErrorReporter . report ( ErrorType . TASKWARRIOR_FILE_NOT_FOUND ) ; } catch ( final de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.ParseException de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.ParseException ) { Log . e ( java.lang.String , STRING , de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.ParseException ) ; if ( boolean ) { Toast . makeText ( this , de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.ParseException . java.lang.String ( ) , Toast . LENGTH_LONG ) . show ( ) ; } } } 
private void void ( final java.io.InputStream java.io.InputStream )    throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.ParseException , java.io.IOException { final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ; try { java.util.Map<java.lang.String,java.lang.String> = java.util.Map<java.lang.String,java.lang.String> ( java.io.InputStream ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; throw new de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.ParseException ( getString ( R . string . config_404 ) ) ; } final java.lang.String [] java.lang.String[] = { STRING , STRING , STRING , STRING , STRING , STRING , STRING } ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { if ( ! java.util.Map<java.lang.String,java.lang.String> . boolean ( java.lang.String ) ) { throw new de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.ParseException ( getString ( R . string . config_error_empty , java.lang.String ) ) ; } } final Bundle de.azapps.mirakel.sync.taskwarrior.Bundle = new Bundle ( ) ; de.azapps.mirakel.sync.taskwarrior.Bundle . putString ( SyncAdapter . BUNDLE_SERVER_TYPE , TaskWarriorSync . TYPE ) ; final Account de.azapps.mirakel.sync.taskwarrior.Account = new Account ( java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) , AccountMirakel . ACCOUNT_TYPE_MIRAKEL ) ; de.azapps.mirakel.sync.taskwarrior.Bundle . putString ( SyncAdapter . BUNDLE_ORG , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; de.azapps.mirakel.sync.taskwarrior.Bundle . putString ( SyncAdapter . BUNDLE_SERVER_URL , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; de.azapps.mirakel.sync.taskwarrior.Bundle . putString ( DefinitionsHelper . BUNDLE_CERT , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; de.azapps.mirakel.sync.taskwarrior.Bundle . putString ( DefinitionsHelper . BUNDLE_CERT_CLIENT , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) ) ; this . de.azapps.mirakel.sync.taskwarrior.AccountManager . addAccountExplicitly ( de.azapps.mirakel.sync.taskwarrior.Account , java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) + STRING + java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( STRING ) , de.azapps.mirakel.sync.taskwarrior.Bundle ) ; } 
public void void ( java.lang.String java.lang.String ) { this . de.azapps.mirakel.sync.taskwarrior.ProgressDialog = new ProgressDialog ( this ) ; this . de.azapps.mirakel.sync.taskwarrior.ProgressDialog . setMessage ( getString ( R . string . sync_taskwarrior_configuring ) ) ; this . de.azapps.mirakel.sync.taskwarrior.ProgressDialog . setIndeterminate ( true ) ; this . de.azapps.mirakel.sync.taskwarrior.ProgressDialog . show ( ) ; if ( ! java.lang.String . boolean ( STRING ) ) { java.lang.String = STRING + java.lang.String ; } try { final java.net.URL java.net.URL = new java.net.URL ( java.lang.String ) ; final de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.DownloadTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.DownloadTask = new de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.DownloadTask ( new de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec ( ) { @ java.lang.Override public void void ( final java.lang.Integer java.lang.Integer ) {                } } , new de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec ( ) { @ java.lang.Override public void void ( final java.lang.Integer java.lang.Integer ) {                } } , new de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.Exec ( ) { @ java.lang.Override public void void ( final java.lang.Integer java.lang.Integer ) { if ( ! java.lang.Integer . boolean ( java.lang.Integer ) ) { ErrorReporter . report ( ErrorType . TASKWARRIOR_COULD_NOT_DOWNLOAD ) ; } else { Toast . makeText ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity .this , getString ( R . string . sync_taskwarrior_setup_success ) , Toast . LENGTH_LONG ) . show ( ) ; } de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity .this . de.azapps.mirakel.sync.taskwarrior.ProgressDialog . dismiss ( ) ; finish ( ) ; } } ) ; de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity.DownloadTask . execute ( java.net.URL ) ; } catch ( final java.net.MalformedURLException java.net.MalformedURLException ) { this . de.azapps.mirakel.sync.taskwarrior.ProgressDialog . dismiss ( ) ; ErrorReporter . report ( ErrorType . TASKWARRIOR_URL_NOT_FOUND ) ; this . de.azapps.mirakel.sync.taskwarrior.ProgressDialog . dismiss ( ) ; } } 
@ java.lang.Override public void void ( final java.lang.Integer java.lang.Integer ) {                } 
@ java.lang.Override public void void ( final java.lang.Integer java.lang.Integer ) {                } 
@ java.lang.Override public void void ( final java.lang.Integer java.lang.Integer ) { if ( ! java.lang.Integer . boolean ( java.lang.Integer ) ) { ErrorReporter . report ( ErrorType . TASKWARRIOR_COULD_NOT_DOWNLOAD ) ; } else { Toast . makeText ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity .this , getString ( R . string . sync_taskwarrior_setup_success ) , Toast . LENGTH_LONG ) . show ( ) ; } de.azapps.mirakel.sync.taskwarrior.TaskWarriorSetupActivity .this . de.azapps.mirakel.sync.taskwarrior.ProgressDialog . dismiss ( ) ; finish ( ) ; } 
public void ( final Context de.azapps.mirakel.sync.taskwarrior.Context ) { this . de.azapps.mirakel.sync.taskwarrior.Context = de.azapps.mirakel.sync.taskwarrior.Context ; } 
private void void ( final TaskWarriorAccount de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , final Msg de.azapps.mirakel.sync.taskwarrior.Msg )    throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException { Log . longInfo ( de.azapps.mirakel.sync.taskwarrior.Msg . getPayload ( ) ) ; final TLSClient de.azapps.mirakel.sync.taskwarrior.TLSClient = de.azapps.mirakel.sync.taskwarrior.TLSClient ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount ) ; final Msg de.azapps.mirakel.sync.taskwarrior.Msg = de.azapps.mirakel.sync.taskwarrior.Msg ( de.azapps.mirakel.sync.taskwarrior.Msg , de.azapps.mirakel.sync.taskwarrior.TLSClient ) ; void ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , de.azapps.mirakel.sync.taskwarrior.TLSClient , de.azapps.mirakel.sync.taskwarrior.Msg ) ; void ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , de.azapps.mirakel.sync.taskwarrior.Msg ) ; de.azapps.mirakel.sync.taskwarrior.TLSClient . close ( ) ; } 
@ VisibleForTesting public void void ( TaskWarriorAccount de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , Msg de.azapps.mirakel.sync.taskwarrior.Msg ) throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException { if ( ( de.azapps.mirakel.sync.taskwarrior.Msg . getPayload ( ) == null ) || de.azapps.mirakel.sync.taskwarrior.Msg . getPayload ( ) . isEmpty ( ) ) { Log . i ( java.lang.String , STRING ) ; } else { final java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> < java.lang.String , TaskWarriorTask > java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> = new java.util.HashMap<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> <> ( NUMBER ) ; final Optional < java.lang.String > de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> = void ( de.azapps.mirakel.sync.taskwarrior.Msg , java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> ) ; final java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> = java.util.Map<java.lang.String,java.lang.Long> ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> ) ; final java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> = java.util.Map<java.lang.String,java.lang.Long> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> ) ; final java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> = new java.util.HashMap <> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . size ( ) ) ; final ListMirakel de.azapps.mirakel.sync.taskwarrior.ListMirakel = ListMirakel . getInboxList ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getAccountMirakel ( ) ) ; final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList <> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . size ( ) ) ; final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList <> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . size ( ) ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList <> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . keySet ( ) ) ; if ( ! java.util.List<java.lang.String> . boolean ( ) ) { for ( int int = NUMBER ; int < ( ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . size ( ) / int ) + NUMBER ) ; int ++ ) { int int = ( int + NUMBER ) * int ; if ( int > java.util.List<java.lang.String> . int ( ) ) { int = java.util.List<java.lang.String> . int ( ) ; } if ( int <= int * int ) { break; } final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.List<java.lang.String> . java.util.List<java.lang.String> ( int * int , int ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( NUMBER ) ; final java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> = java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> , java.util.Map<java.lang.String,java.lang.Long> , de.azapps.mirakel.sync.taskwarrior.ListMirakel , java.util.List<java.lang.Long> , java.util.List<java.lang.Long> , java.util.List<java.lang.String> , java.util.Map<java.lang.String,java.lang.Long> ) ; void ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> , java.util.Map<java.lang.String,java.lang.Long> , de.azapps.mirakel.sync.taskwarrior.ListMirakel , java.util.List<java.lang.String> , java.util.List<java.lang.String> , java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> ) ; try { de.azapps.mirakel.sync.taskwarrior.Context . getContentResolver ( ) . applyBatch ( DefinitionsHelper . AUTHORITY_INTERNAL , java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> ) ; } catch ( RemoteException | OperationApplicationException java.lang.Object ) { Log . wtf ( java.lang.String , STRING , java.lang.Object ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CANNOT_PARSE_MESSAGE , java.lang.Object ) ; } if ( ! java.util.List<java.lang.String> . boolean ( ) ) { new MirakelQueryBuilder ( de.azapps.mirakel.sync.taskwarrior.Context ) . select ( Task . UUID , Task . ID ) . and ( Task . UUID , Operation . IN , java.util.List<java.lang.String> ) . query ( Task . URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.sync.taskwarrior.CursorGetter ) { while ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . moveToNext ( ) ) { java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( Task . UUID ) , de.azapps.mirakel.sync.taskwarrior.CursorGetter . getLong ( Task . ID ) ) ; } } } ) ; } } de.azapps.mirakel.sync.taskwarrior.Context . getContentResolver ( ) . delete ( Task . URI , Task . ID + STRING + TextUtils . join ( STRING , java.util.List<java.lang.Long> ) + ')' , null ) ; void ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> , java.util.Map<java.lang.String,java.lang.Long> , java.util.List<java.lang.Long> , java.util.Map<java.lang.String,java.lang.Long> ) ; } de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . setSyncKey ( de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> ) ; } final Optional < java.lang.String > de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> = de.azapps.mirakel.sync.taskwarrior.Msg . getHeader ( STRING ) ; if ( de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> . isPresent ( ) && ! de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> . get ( ) . isEmpty ( ) ) { Log . v ( java.lang.String , STRING + de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> . get ( ) ) ; } } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.sync.taskwarrior.CursorGetter ) { while ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . moveToNext ( ) ) { java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( Task . UUID ) , de.azapps.mirakel.sync.taskwarrior.CursorGetter . getLong ( Task . ID ) ) ; } } 
private void void ( TaskWarriorAccount de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , TLSClient de.azapps.mirakel.sync.taskwarrior.TLSClient , Msg de.azapps.mirakel.sync.taskwarrior.Msg ) throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException { final int int = java.lang.Integer . int ( de.azapps.mirakel.sync.taskwarrior.Msg . getHeader ( STRING ) . or ( STRING ) ) ; final TW_ERRORS de.azapps.mirakel.sync.taskwarrior.TW_ERRORS = TW_ERRORS . getError ( int ) ; if ( de.azapps.mirakel.sync.taskwarrior.TW_ERRORS != TW_ERRORS . NO_ERROR ) { de.azapps.mirakel.sync.taskwarrior.TLSClient . close ( ) ; final Optional < java.lang.String > de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> = de.azapps.mirakel.sync.taskwarrior.Msg . getHeader ( STRING ) ; if ( de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> . isPresent ( ) ) { if ( de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> . get ( ) . contains ( STRING ) ) { Looper . prepare ( ) ; ExportImport . exportDB ( de.azapps.mirakel.sync.taskwarrior.Context ) ; de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . setSyncKey ( Optional .< java.lang.String > absent ( ) ) ; void ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , true ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . COULD_NOT_FIND_COMMON_ANCESTOR , STRING ) ; } else if ( de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> . get ( ) . contains ( STRING ) ) { throw new TaskWarriorSyncFailedException ( TW_ERRORS . ACCESS_DENIED , STRING ) ; } } throw new TaskWarriorSyncFailedException ( de.azapps.mirakel.sync.taskwarrior.TW_ERRORS ) ; } if ( STRING . boolean ( de.azapps.mirakel.sync.taskwarrior.Msg . getHeader ( STRING ) . or ( STRING ) ) ) { Log . d ( java.lang.String , STRING ) ; int ++ ; if ( int > NUMBER ) { throw new TaskWarriorSyncFailedException ( TW_ERRORS . CLIENT_SYNC_KEY_NOT_FOUND , STRING ) ; } de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . setSyncKey ( Optional .< java.lang.String > absent ( ) ) ; try { void ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , false ) ; } catch ( final TaskWarriorSyncFailedException de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException ) { if ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException . getError ( ) != TW_ERRORS . NOT_ENABLED ) { de.azapps.mirakel.sync.taskwarrior.TLSClient . close ( ) ; throw new TaskWarriorSyncFailedException ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException . getError ( ) , de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException ) ; } } finally { int = NUMBER ; } } } 
@ NonNull private de.azapps.mirakel.sync.taskwarrior.Msg de.azapps.mirakel.sync.taskwarrior.Msg ( final @ NonNull Msg de.azapps.mirakel.sync.taskwarrior.Msg , final @ NonNull TLSClient de.azapps.mirakel.sync.taskwarrior.TLSClient ) throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException { de.azapps.mirakel.sync.taskwarrior.TLSClient . send ( de.azapps.mirakel.sync.taskwarrior.Msg . serialize ( ) ) ; final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.TLSClient . recv ( ) ; if ( MirakelCommonPreferences . isEnabledDebugMenu ( ) && MirakelCommonPreferences . isDumpTw ( ) ) { Log . longInfo ( java.lang.String ) ; try { FileUtils . writeToFile ( new java.io.File ( FileUtils . getLogDir ( ) , java.lang.String ( ) + STRING ) , java.lang.String ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; } } final Msg de.azapps.mirakel.sync.taskwarrior.Msg = new Msg ( ) ; try { de.azapps.mirakel.sync.taskwarrior.Msg . parse ( java.lang.String ) ; } catch ( final java.nio.charset.MalformedInputException java.nio.charset.MalformedInputException ) { Log . e ( java.lang.String , STRING , java.nio.charset.MalformedInputException ) ; de.azapps.mirakel.sync.taskwarrior.TLSClient . close ( ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CANNOT_PARSE_MESSAGE , STRING , java.nio.charset.MalformedInputException ) ; } catch ( final java.lang.NullPointerException java.lang.NullPointerException ) { Log . wtf ( java.lang.String , STRING , java.lang.NullPointerException ) ; de.azapps.mirakel.sync.taskwarrior.TLSClient . close ( ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CANNOT_PARSE_MESSAGE , STRING , java.lang.NullPointerException ) ; } return de.azapps.mirakel.sync.taskwarrior.Msg ; } 
@ NonNull private static de.azapps.mirakel.sync.taskwarrior.TLSClient de.azapps.mirakel.sync.taskwarrior.TLSClient ( @ NonNull final TaskWarriorAccount de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount )    throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException { final TLSClient de.azapps.mirakel.sync.taskwarrior.TLSClient = new TLSClient ( ) ; try { de.azapps.mirakel.sync.taskwarrior.TLSClient . init ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getRootCert ( ) , de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getUserCert ( ) , de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getUserId ( ) ) ; } catch ( final java.text.ParseException java.text.ParseException ) { Log . e ( java.lang.String , STRING , java.text.ParseException ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CONFIG_PARSE_ERROR , STRING , java.text.ParseException ) ; } catch ( final java.security.cert.CertificateException java.security.cert.CertificateException ) { Log . e ( java.lang.String , STRING , java.security.cert.CertificateException ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CONFIG_PARSE_ERROR , STRING , java.security.cert.CertificateException ) ; } catch ( final NoSuchCertificateException de.azapps.mirakel.sync.taskwarrior.NoSuchCertificateException ) { Log . e ( java.lang.String , STRING , de.azapps.mirakel.sync.taskwarrior.NoSuchCertificateException ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . NO_SUCH_CERT , STRING , de.azapps.mirakel.sync.taskwarrior.NoSuchCertificateException ) ; } try { de.azapps.mirakel.sync.taskwarrior.TLSClient . connect ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getHost ( ) , de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getPort ( ) ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; de.azapps.mirakel.sync.taskwarrior.TLSClient . close ( ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CANNOT_CREATE_SOCKET , STRING , java.io.IOException ) ; } return de.azapps.mirakel.sync.taskwarrior.TLSClient ; } 
@ NonNull private static de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> < java.lang.String > de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> ( final @ NonNull Msg de.azapps.mirakel.sync.taskwarrior.Msg , final @ NonNull java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> < java.lang.String , TaskWarriorTask > java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> ) { Optional < java.lang.String > de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> = absent ( ) ; final java.lang.String java.lang.String[] [] = de.azapps.mirakel.sync.taskwarrior.Msg . getPayload ( ) . split ( STRING ) ; final Gson de.azapps.mirakel.sync.taskwarrior.Gson = new GsonBuilder ( ) . registerTypeAdapter ( TaskWarriorTask .class , new TaskWarriorTaskDeserializer ( ) ) . create ( ) ; for ( final java.lang.String java.lang.String : java.lang.String[] ) { if ( java.lang.String . char ( NUMBER ) != '{' ) { Log . d ( java.lang.String , STRING + java.lang.String ) ; de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> = of ( java.lang.String ) ; continue; } final TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask = de.azapps.mirakel.sync.taskwarrior.Gson . fromJson ( java.lang.String , TaskWarriorTask .class ) ; java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . put ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUUID ( ) , de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask ) ; } return de.azapps.mirakel.sync.taskwarrior.Optional<java.lang.String> ; } 
private void void ( final @ NonNull java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> < java.lang.String , TaskWarriorTask > java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> , final @ NonNull java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> , @ NonNull final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> , final @ NonNull java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> ) throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException { final java.lang.String java.lang.String = TextUtils . join ( STRING , java.util.List<java.lang.Long> ) ; de.azapps.mirakel.sync.taskwarrior.Context . getContentResolver ( ) . delete ( MirakelInternalContentProvider . SUBTASK_URI , STRING + java.lang.String + ')' , null ) ; de.azapps.mirakel.sync.taskwarrior.Context . getContentResolver ( ) . delete ( MirakelInternalContentProvider . TAG_CONNECTION_URI , STRING + java.lang.String + ')' , null ) ; de.azapps.mirakel.sync.taskwarrior.Context . getContentResolver ( ) . delete ( MirakelInternalContentProvider . RECURRING_TW_URI , Recurring . CHILD + STRING + java.lang.String + ')' , null ) ; final java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> = new java.util.ArrayList <> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . size ( ) ) ; final java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> = new java.util.HashMap<java.lang.String,java.lang.Long> <> ( NUMBER ) ; for ( final TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask : java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . values ( ) ) { if ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . isNotDeleted ( ) ) { for ( final java.lang.String java.lang.String : de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getTags ( ) ) { final ContentValues de.azapps.mirakel.sync.taskwarrior.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( STRING , java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUUID ( ) ) ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( STRING , java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String ) ) ; java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( MirakelInternalContentProvider . TAG_CONNECTION_URI ) . withValues ( de.azapps.mirakel.sync.taskwarrior.ContentValues ) . build ( ) ) ; } for ( final java.lang.String java.lang.String : de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getDependencies ( ) ) { final ContentValues de.azapps.mirakel.sync.taskwarrior.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( STRING , java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUUID ( ) ) ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( STRING , java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String ) ) ; java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( MirakelInternalContentProvider . SUBTASK_URI ) . withValues ( de.azapps.mirakel.sync.taskwarrior.ContentValues ) . build ( ) ) ; } if ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . isRecurringMaster ( ) ) { try { final Optional < TaskWarriorRecurrence > de.azapps.mirakel.sync.taskwarrior.Optional<de.azapps.mirakel.sync.taskwarrior.TaskWarriorRecurrence> = de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getRecurrence ( ) ; if ( de.azapps.mirakel.sync.taskwarrior.Optional<de.azapps.mirakel.sync.taskwarrior.TaskWarriorRecurrence> . isPresent ( ) ) { de.azapps.mirakel.sync.taskwarrior.Optional<de.azapps.mirakel.sync.taskwarrior.TaskWarriorRecurrence> . get ( ) . create ( ) ; java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUUID ( ) , de.azapps.mirakel.sync.taskwarrior.Optional<de.azapps.mirakel.sync.taskwarrior.TaskWarriorRecurrence> . get ( ) . getId ( ) ) ; final ContentValues de.azapps.mirakel.sync.taskwarrior.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( Task . RECURRING , de.azapps.mirakel.sync.taskwarrior.Optional<de.azapps.mirakel.sync.taskwarrior.TaskWarriorRecurrence> . get ( ) . getId ( ) ) ; java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> . add ( ContentProviderOperation . newUpdate ( Task . URI ) . withSelection ( Task . UUID + STRING , new java.lang.String [] { de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUUID ( ) } ) . withValues ( de.azapps.mirakel.sync.taskwarrior.ContentValues ) . build ( ) ) ; } } catch ( final TaskWarriorRecurrence . TaskWarriorRecurrence TaskWarriorRecurrence.NotSupportedRecurrenceException ) { } } } } final java.util.Collection<de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> < TaskWarriorTask > java.util.Collection<de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> = Collections2 . filter ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . values ( ) , new Predicate < TaskWarriorTask > ( ) { @ java.lang.Override public boolean boolean ( TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask ) { return de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . isRecurringChild ( ) ; } } ) ; for ( final TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask : java.util.Collection<de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> ) { final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getParent ( ) ; final ContentValues de.azapps.mirakel.sync.taskwarrior.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( Task . RECURRING , java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String ) ) ; java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> . add ( ContentProviderOperation . newUpdate ( Task . URI ) . withSelection ( Task . UUID + STRING , new java.lang.String [] { de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUUID ( ) } ) . withValues ( de.azapps.mirakel.sync.taskwarrior.ContentValues ) . build ( ) ) ; final ContentValues de.azapps.mirakel.sync.taskwarrior.ContentValues = new ContentValues ( ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( Recurring . CHILD , java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUUID ( ) ) ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( Recurring . PARENT , java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String ) ) ; de.azapps.mirakel.sync.taskwarrior.ContentValues . put ( Recurring . OFFSET_COUNT , de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getImask ( ) ) ; java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( MirakelInternalContentProvider . RECURRING_TW_URI ) . withValues ( de.azapps.mirakel.sync.taskwarrior.ContentValues ) . build ( ) ) ; } try { de.azapps.mirakel.sync.taskwarrior.Context . getContentResolver ( ) . applyBatch ( DefinitionsHelper . AUTHORITY_INTERNAL , java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> ) ; } catch ( RemoteException | OperationApplicationException java.lang.Object ) { Log . wtf ( java.lang.String , STRING , java.lang.Object ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CANNOT_PARSE_MESSAGE , java.lang.Object ) ; } } 
@ java.lang.Override public boolean boolean ( TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask ) { return de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . isRecurringChild ( ) ; } 
private void void ( final @ NonNull java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> < java.lang.String , TaskWarriorTask > java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> , final @ NonNull java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> , final @ NonNull ListMirakel de.azapps.mirakel.sync.taskwarrior.ListMirakel , final @ NonNull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , final @ NonNull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , final @ NonNull java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> ) { for ( final java.lang.String java.lang.String : java.util.List<java.lang.String> ) { try { java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> . add ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . get ( java.lang.String ) . getInsert ( de.azapps.mirakel.sync.taskwarrior.ListMirakel . getId ( ) , java.util.Map<java.lang.String,java.lang.Long> ) ) ; } catch ( final TaskWarriorTaskDeletedException de.azapps.mirakel.sync.taskwarrior.TaskWarriorTaskDeletedException ) { Log . d ( java.lang.String , STRING , de.azapps.mirakel.sync.taskwarrior.TaskWarriorTaskDeletedException ) ; } java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } 
@ NonNull private java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> ( final @ NonNull java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> < java.lang.String , TaskWarriorTask > java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> , final @ NonNull java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> , final @ NonNull ListMirakel de.azapps.mirakel.sync.taskwarrior.ListMirakel , final @ NonNull java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> , final @ NonNull java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> , final @ NonNull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , final @ NonNull java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> ) { final java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> = new java.util.ArrayList <> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . size ( ) ) ; new MirakelQueryBuilder ( de.azapps.mirakel.sync.taskwarrior.Context ) . select ( Task . UUID , Task . ID , Task . ADDITIONAL_ENTRIES ) . and ( Task . UUID , Operation . IN , java.util.List<java.lang.String> ) . query ( Task . URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.sync.taskwarrior.CursorGetter ) { while ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . moveToNext ( ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( Task . UUID ) ; final long long = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getLong ( Task . ID ) ; final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( Task . ADDITIONAL_ENTRIES ) ; final TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask = java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . get ( java.lang.String ) ; if ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . isNotDeleted ( ) ) { try { java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> . add ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUpdate ( long , java.lang.String , java.util.Map<java.lang.String,java.lang.Long> , de.azapps.mirakel.sync.taskwarrior.ListMirakel . getId ( ) ) ) ; java.util.List<java.lang.Long> . boolean ( long ) ; java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String , long ) ; } catch ( final TaskWarriorTaskDeletedException de.azapps.mirakel.sync.taskwarrior.TaskWarriorTaskDeletedException ) { Log . w ( java.lang.String , STRING , de.azapps.mirakel.sync.taskwarrior.TaskWarriorTaskDeletedException ) ; java.util.List<java.lang.Long> . boolean ( long ) ; } } else { java.util.List<java.lang.Long> . boolean ( long ) ; } java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } } ) ; return java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> ; } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.sync.taskwarrior.CursorGetter ) { while ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . moveToNext ( ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( Task . UUID ) ; final long long = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getLong ( Task . ID ) ; final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( Task . ADDITIONAL_ENTRIES ) ; final TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask = java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . get ( java.lang.String ) ; if ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . isNotDeleted ( ) ) { try { java.util.ArrayList<de.azapps.mirakel.sync.taskwarrior.ContentProviderOperation> . add ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getUpdate ( long , java.lang.String , java.util.Map<java.lang.String,java.lang.Long> , de.azapps.mirakel.sync.taskwarrior.ListMirakel . getId ( ) ) ) ; java.util.List<java.lang.Long> . boolean ( long ) ; java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String , long ) ; } catch ( final TaskWarriorTaskDeletedException de.azapps.mirakel.sync.taskwarrior.TaskWarriorTaskDeletedException ) { Log . w ( java.lang.String , STRING , de.azapps.mirakel.sync.taskwarrior.TaskWarriorTaskDeletedException ) ; java.util.List<java.lang.Long> . boolean ( long ) ; } } else { java.util.List<java.lang.Long> . boolean ( long ) ; } java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } 
private java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> ( final @ NonNull TaskWarriorAccount de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , final @ NonNull java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> < java.lang.String , TaskWarriorTask > java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> ) { final java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( NUMBER ) ; for ( final TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask : java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . values ( ) ) { if ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . hasProject ( ) ) { java.util.Set<java.lang.String> . boolean ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getProject ( ) ) ; } } final java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> = new java.util.HashMap<java.lang.String,java.lang.Long> <> ( java.util.Set<java.lang.String> . int ( ) ) ; new MirakelQueryBuilder ( de.azapps.mirakel.sync.taskwarrior.Context ) . and ( ListMirakel . NAME , Operation . IN , new java.util.ArrayList <> ( java.util.Set<java.lang.String> ) ) . and ( ListMirakel . ACCOUNT_ID , Operation . EQ , de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getAccountMirakel ( ) . getId ( ) ) . select ( java.util.Arrays . java.util.List<java.lang.String> ( new java.lang.String [] { ListMirakel . ID , ListMirakel . NAME } ) ) . query ( ListMirakel . URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.sync.taskwarrior.CursorGetter ) { while ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . moveToNext ( ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( ListMirakel . NAME ) ; java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String , de.azapps.mirakel.sync.taskwarrior.CursorGetter . getLong ( ListMirakel . ID ) ) ; java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } } } ) ; for ( final java.lang.String java.lang.String : java.util.Set<java.lang.String> ) { try { final ListMirakel de.azapps.mirakel.sync.taskwarrior.ListMirakel = ListMirakel . newList ( java.lang.String , ListMirakel . SORT_BY . DUE , de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getAccountMirakel ( ) ) ; java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.ListMirakel . getName ( ) , de.azapps.mirakel.sync.taskwarrior.ListMirakel . getId ( ) ) ; } catch ( final ListMirakel . ListMirakel ListMirakel.ListAlreadyExistsException ) { throw new java.lang.IllegalStateException ( STRING , ListMirakel.ListAlreadyExistsException ) ; } } return java.util.Map<java.lang.String,java.lang.Long> ; } 
@ java.lang.Override public void void ( @ NonNull CursorGetter de.azapps.mirakel.sync.taskwarrior.CursorGetter ) { while ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . moveToNext ( ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( ListMirakel . NAME ) ; java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( java.lang.String , de.azapps.mirakel.sync.taskwarrior.CursorGetter . getLong ( ListMirakel . ID ) ) ; java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } } 
private java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> ( final @ NonNull java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> < java.lang.String , TaskWarriorTask > java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> ) { final java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( TaskWarriorTask de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask : java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . values ( ) ) { java.util.Set<java.lang.String> . boolean ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask . getTags ( ) ) ; } final java.util.Map<java.lang.String,java.lang.Long> < java.lang.String , java.lang.Long > java.util.Map<java.lang.String,java.lang.Long> = new java.util.HashMap <> ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . size ( ) ) ; new MirakelQueryBuilder ( de.azapps.mirakel.sync.taskwarrior.Context ) . and ( ListMirakel . NAME , Operation . IN , new java.util.ArrayList <> ( java.util.Set<java.lang.String> ) ) . select ( java.util.Arrays . java.util.List<java.lang.String> ( new java.lang.String [] { Tag . ID , Tag . NAME } ) ) . query ( Tag . URI ) . doWithCursor ( new CursorWrapper . CursorWrapper ( ) { @ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.sync.taskwarrior.CursorGetter ) { while ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . moveToNext ( ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( Tag . NAME ) ; if ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . containsKey ( java.lang.String ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . remove ( java.lang.String ) ; } } } } ) ; for ( final java.lang.String java.lang.String : java.util.Set<java.lang.String> ) { final Tag de.azapps.mirakel.sync.taskwarrior.Tag = Tag . newTag ( java.lang.String ) ; java.util.Map<java.lang.String,java.lang.Long> . java.lang.Long ( de.azapps.mirakel.sync.taskwarrior.Tag . getName ( ) , de.azapps.mirakel.sync.taskwarrior.Tag . getId ( ) ) ; } return java.util.Map<java.lang.String,java.lang.Long> ; } 
@ java.lang.Override public void void ( @ NonNull final CursorGetter de.azapps.mirakel.sync.taskwarrior.CursorGetter ) { while ( de.azapps.mirakel.sync.taskwarrior.CursorGetter . moveToNext ( ) ) { final java.lang.String java.lang.String = de.azapps.mirakel.sync.taskwarrior.CursorGetter . getString ( Tag . NAME ) ; if ( java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . containsKey ( java.lang.String ) ) { java.util.Map<java.lang.String,de.azapps.mirakel.sync.taskwarrior.TaskWarriorTask> . remove ( java.lang.String ) ; } } } 
java.lang.String java.lang.String ( ) { return new java.text.SimpleDateFormat ( STRING , Helpers . getLocale ( this . de.azapps.mirakel.sync.taskwarrior.Context ) ) . java.lang.String ( new java.util.Date ( ) ) ; } 
public void void ( final @ NonNull TaskWarriorAccount de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , final boolean boolean ) throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException { final java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> < Task > java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> ; if ( boolean ) { java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> = new java.util.ArrayList <> ( NUMBER ) ; } else { Optional < AccountMirakel > de.azapps.mirakel.sync.taskwarrior.Optional<de.azapps.mirakel.sync.taskwarrior.AccountMirakel> = AccountMirakel . get ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getAndroidAccount ( ) ) ; if ( de.azapps.mirakel.sync.taskwarrior.Optional<de.azapps.mirakel.sync.taskwarrior.AccountMirakel> . isPresent ( ) ) { java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> = Task . getTasksToSync ( de.azapps.mirakel.sync.taskwarrior.Optional<de.azapps.mirakel.sync.taskwarrior.AccountMirakel> . get ( ) ) ; } else { java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> = new java.util.ArrayList <> ( NUMBER ) ; } } final Msg de.azapps.mirakel.sync.taskwarrior.Msg = de.azapps.mirakel.sync.taskwarrior.Msg ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> ) ; try { void ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , de.azapps.mirakel.sync.taskwarrior.Msg ) ; } catch ( final TaskWarriorSyncFailedException de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException ) { throw new TaskWarriorSyncFailedException ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException . getError ( ) , de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException ) ; } Log . w ( java.lang.String , STRING ) ; Task . resetSyncState ( java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> ) ; } 
@ NonNull @ VisibleForTesting public de.azapps.mirakel.sync.taskwarrior.Msg de.azapps.mirakel.sync.taskwarrior.Msg ( @ NonNull TaskWarriorAccount de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount , java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> < Task > java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> ) throws de.azapps.mirakel.sync.taskwarrior.TaskWarriorSyncFailedException { final Msg de.azapps.mirakel.sync.taskwarrior.Msg = new Msg ( ) ; de.azapps.mirakel.sync.taskwarrior.Msg . set ( STRING , java.lang.String ) ; de.azapps.mirakel.sync.taskwarrior.Msg . set ( STRING , STRING ) ; de.azapps.mirakel.sync.taskwarrior.Msg . set ( STRING , de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getOrg ( ) ) ; de.azapps.mirakel.sync.taskwarrior.Msg . set ( STRING , de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getUser ( ) ) ; de.azapps.mirakel.sync.taskwarrior.Msg . set ( STRING , de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getUserPassword ( ) ) ; final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; OptionalUtils . withOptional ( de.azapps.mirakel.sync.taskwarrior.TaskWarriorAccount . getSyncKey ( ) , new OptionalUtils . OptionalUtils < java.lang.String > ( ) { @ Override public void apply ( final String input ) { payload . append ( input ) . append ( '\n' ) ; } } ) ; for ( final Task de.azapps.mirakel.sync.taskwarrior.Task : java.util.List<de.azapps.mirakel.sync.taskwarrior.Task> ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ( de.azapps.mirakel.sync.taskwarrior.Task ) ) . append ( '\n' ) ; } de.azapps.mirakel.sync.taskwarrior.Msg . setPayload ( java.lang.StringBuilder . java.lang.String ( ) ) ; if ( MirakelCommonPreferences . isDumpTw ( ) ) { try { final java.io.FileWriter java.io.FileWriter = new java.io.FileWriter ( new java.io.File ( FileUtils . getLogDir ( ) , java.lang.String ( ) + STRING ) ) ; java.io.FileWriter . void ( java.lang.StringBuilder . java.lang.String ( ) ) ; java.io.FileWriter . void ( ) ; } catch ( final java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING , java.io.IOException ) ; } } return de.azapps.mirakel.sync.taskwarrior.Msg ; } 
@ Override public void apply ( final String input ) { payload . append ( input ) . append ( '\n' ) ; } 
@ NonNull java.lang.String java.lang.String ( @ NonNull final Task de.azapps.mirakel.sync.taskwarrior.Task ) { return new GsonBuilder ( ) . registerTypeAdapter ( Task .class , new TaskWarriorTaskSerializer ( this . de.azapps.mirakel.sync.taskwarrior.Context ) ) . create ( ) . toJson ( de.azapps.mirakel.sync.taskwarrior.Task ) ; } 
public void ( @ NonNull final AccountMirakel de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel , final Context de.azapps.mirakel.sync.taskwarrior.utilities.Context ) { this . de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel = de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel ; de.azapps.mirakel.sync.taskwarrior.utilities.AccountManager = AccountManager . get ( de.azapps.mirakel.sync.taskwarrior.utilities.Context ) ; de.azapps.mirakel.sync.taskwarrior.utilities.Account = de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel . getAndroidAccount ( ) ; } 
public java.lang.String java.lang.String ( ) de.azapps.mirakel.sync.taskwarrior.utilities.TaskWarriorSyncFailedException { if ( java.lang.String == null ) { java.lang.String = this . de.azapps.mirakel.sync.taskwarrior.utilities.AccountManager . getUserData ( de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel . getAndroidAccount ( ) , SyncAdapter . BUNDLE_SERVER_URL ) ; final java.lang.String java.lang.String[] [] = java.lang.String . java.lang.String ( ) . java.lang.String[] ( STRING ) ; if ( java.lang.String[] . int != NUMBER ) { Log . wtf ( java.lang.String , STRING ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CONFIG_PARSE_ERROR , STRING ) ; } java.lang.String = java.lang.String[] [ NUMBER ] ; int = java.lang.Integer . int ( java.lang.String[] [ NUMBER ] ) ; } return java.lang.String ; } 
public java.lang.String java.lang.String ( ) de.azapps.mirakel.sync.taskwarrior.utilities.TaskWarriorSyncFailedException { java.lang.String ( ) ; return java.lang.String ; } 
public int int ( ) de.azapps.mirakel.sync.taskwarrior.utilities.TaskWarriorSyncFailedException { java.lang.String ( ) ; return int ; } 
public de.azapps.mirakel.sync.taskwarrior.utilities.Optional<java.lang.String> < java.lang.String > de.azapps.mirakel.sync.taskwarrior.utilities.Optional<java.lang.String> ( ) { return de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel . getSyncKey ( ) ; } 
public void void ( @ NonNull final Optional < java.lang.String > de.azapps.mirakel.sync.taskwarrior.utilities.Optional<java.lang.String> ) { de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel . setSyncKey ( de.azapps.mirakel.sync.taskwarrior.utilities.Optional<java.lang.String> ) ; de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel . save ( ) ; } 
public java.lang.String java.lang.String ( ) { return this . de.azapps.mirakel.sync.taskwarrior.utilities.Account . name ; } 
public java.lang.String java.lang.String ( ) { return this . de.azapps.mirakel.sync.taskwarrior.utilities.AccountManager . getUserData ( this . de.azapps.mirakel.sync.taskwarrior.utilities.Account , SyncAdapter . BUNDLE_ORG ) ; } 
public java.lang.String java.lang.String ( ) { return this . de.azapps.mirakel.sync.taskwarrior.utilities.AccountManager . getUserData ( this . de.azapps.mirakel.sync.taskwarrior.utilities.Account , DefinitionsHelper . BUNDLE_CERT ) ; } 
public java.lang.String java.lang.String ( ) { return this . de.azapps.mirakel.sync.taskwarrior.utilities.AccountManager . getUserData ( this . de.azapps.mirakel.sync.taskwarrior.utilities.Account , DefinitionsHelper . BUNDLE_CERT_CLIENT ) ; } 
public java.lang.String java.lang.String ( ) de.azapps.mirakel.sync.taskwarrior.utilities.TaskWarriorSyncFailedException { if ( java.lang.String == null ) { java.lang.String = this . de.azapps.mirakel.sync.taskwarrior.utilities.AccountManager . getPassword ( this . de.azapps.mirakel.sync.taskwarrior.utilities.Account ) ; final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; if ( java.lang.String[] . int < NUMBER ) { Log . wtf ( java.lang.String , STRING ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CONFIG_PARSE_ERROR , STRING ) ; } if ( java.lang.String[] . int != NUMBER ) { java.lang.String = java.lang.String[] [ java.lang.String[] . int - NUMBER ] . java.lang.String ( ) ; java.lang.String = java.lang.String[] [ java.lang.String[] . int - NUMBER ] . java.lang.String ( ) ; this . de.azapps.mirakel.sync.taskwarrior.utilities.AccountManager . setPassword ( this . de.azapps.mirakel.sync.taskwarrior.utilities.Account , java.lang.String + STRING + java.lang.String ) ; } else { java.lang.String = java.lang.String[] [ NUMBER ] . java.lang.String ( ) ; java.lang.String = java.lang.String[] [ NUMBER ] . java.lang.String ( ) ; } if ( ! java.lang.String . boolean ( ) && ( java.lang.String . int ( ) != NUMBER ) ) { Log . wtf ( java.lang.String , STRING ) ; throw new TaskWarriorSyncFailedException ( TW_ERRORS . CONFIG_PARSE_ERROR , STRING ) ; } } return java.lang.String ; } 
public java.lang.String java.lang.String ( ) de.azapps.mirakel.sync.taskwarrior.utilities.TaskWarriorSyncFailedException { java.lang.String ( ) ; return java.lang.String ; } 
public java.lang.String java.lang.String ( ) de.azapps.mirakel.sync.taskwarrior.utilities.TaskWarriorSyncFailedException { java.lang.String ( ) ; return java.lang.String ; } 
@ NonNull public de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel ( ) { return de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel ; } 
public de.azapps.mirakel.sync.taskwarrior.utilities.Account de.azapps.mirakel.sync.taskwarrior.utilities.Account ( ) { return de.azapps.mirakel.sync.taskwarrior.utilities.Account ; } 
public void ( final TW_ERRORS de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ) { super(); this . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS = de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; java.lang.String = STRING ; } 
public void ( final TW_ERRORS de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS , final java.lang.String java.lang.String ) { super(); this . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS = de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; this . java.lang.String = java.lang.String ; } 
public void ( final TW_ERRORS de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS , final java.lang.String java.lang.String , final java.lang.Throwable java.lang.Throwable ) { super( java.lang.Throwable ); this . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS = de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; this . java.lang.String = java.lang.String ; } 
public void ( final TW_ERRORS de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS , final java.lang.Throwable java.lang.Throwable ) { super( java.lang.Throwable ); this . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS = de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; this . java.lang.String = java.lang.Throwable . java.lang.String ( ) ; } 
public de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ( ) { return this . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; } 
public void ( final AccountMirakel de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel ) { this . de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel = de.azapps.mirakel.sync.taskwarrior.utilities.AccountMirakel ; } 
public de.azapps.mirakel.sync.taskwarrior.utilities.Msg de.azapps.mirakel.sync.taskwarrior.utilities.Msg ( ) { return null ; } 
public static de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ( final int int ) { switch ( int ) { case NUMBER : Log . d ( java.lang.String , STRING ) ; break; case NUMBER : Log . d ( java.lang.String , STRING ) ; break; case NUMBER : Log . d ( java.lang.String , STRING + STRING ) ; break; case NUMBER : Log . d ( java.lang.String , STRING + STRING ) ; break; case NUMBER : Log . d ( java.lang.String , STRING + STRING + STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; case NUMBER : Log . e ( java.lang.String , STRING ) ; return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS . de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; default: Log . d ( java.lang.String , STRING + int ) ; break; } return de.azapps.mirakel.sync.taskwarrior.utilities.TW_ERRORS ; } 
public void ( final PreferenceFragment de.azapps.mirakel.helper.PreferenceFragment ) { super( de.azapps.mirakel.helper.PreferenceFragment ); } 
@ SuppressLint ( STRING ) public void void ( final Context de.azapps.mirakel.helper.Context , final int int ) { final java.util.List<de.azapps.mirakel.helper.ListMirakel> < ListMirakel > java.util.List<de.azapps.mirakel.helper.ListMirakel> = ListMirakel . all ( ) ; final java.lang.CharSequence [] java.lang.CharSequence[] = new java.lang.String [ java.util.List<de.azapps.mirakel.helper.ListMirakel> . size ( ) ] ; final java.lang.CharSequence [] java.lang.CharSequence[] = new java.lang.String [ java.util.List<de.azapps.mirakel.helper.ListMirakel> . size ( ) ] ; int int = NUMBER ; for ( final ListMirakel de.azapps.mirakel.helper.ListMirakel : java.util.List<de.azapps.mirakel.helper.ListMirakel> ) { java.lang.CharSequence[] [ int ] = java.lang.String . java.lang.String ( de.azapps.mirakel.helper.ListMirakel . getId ( ) ) ; java.lang.CharSequence[] [ int ] = de.azapps.mirakel.helper.ListMirakel . getName ( ) ; int ++ ; } final ListMirakel de.azapps.mirakel.helper.ListMirakel = WidgetHelper . getList ( de.azapps.mirakel.helper.Context , int ) ; final SwitchCompatPreference de.azapps.mirakel.helper.SwitchCompatPreference = ( SwitchCompatPreference ) findPreference ( STRING ) ; final ListPreference de.azapps.mirakel.helper.ListPreference = ( ListPreference ) findPreference ( STRING ) ; de.azapps.mirakel.helper.ListPreference . setEntries ( java.lang.CharSequence[] ) ; de.azapps.mirakel.helper.ListPreference . setEntryValues ( java.lang.CharSequence[] ) ; de.azapps.mirakel.helper.ListPreference . setSummary ( this . activity . getString ( R . string . widget_list_summary , de.azapps.mirakel.helper.ListMirakel ) ) ; de.azapps.mirakel.helper.ListPreference . setValue ( java.lang.String . java.lang.String ( de.azapps.mirakel.helper.ListMirakel . getId ( ) ) ) ; de.azapps.mirakel.helper.ListPreference . setOnPreferenceChangeListener ( new OnPreferenceChangeListener ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setList ( de.azapps.mirakel.helper.Context , int , java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ) ; final Optional < ListMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = ListMirakel . get ( java.lang.Long . long ( ( java.lang.String ) java.lang.Object ) ) ; if ( ! de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . isPresent ( ) ) { return true ; } final java.lang.String java.lang.String = de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . get ( ) . getName ( ) ; de.azapps.mirakel.helper.ListPreference . setSummary ( de.azapps.mirakel.helper.PreferencesWidgetHelper .this . activity . getString ( R . string . notifications_list_summary , java.lang.String ) ) ; return true ; } } ) ; de.azapps.mirakel.helper.SwitchCompatPreference . setChecked ( WidgetHelper . isDark ( de.azapps.mirakel.helper.Context , int ) ) ; de.azapps.mirakel.helper.SwitchCompatPreference . setOnPreferenceChangeListener ( new OnPreferenceChangeListener ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setDark ( de.azapps.mirakel.helper.Context , int , ( java.lang.Boolean ) java.lang.Object ) ; return true ; } } ) ; final SwitchCompatPreference de.azapps.mirakel.helper.SwitchCompatPreference = ( SwitchCompatPreference ) findPreference ( STRING ) ; if ( de.azapps.mirakel.helper.SwitchCompatPreference != null ) { de.azapps.mirakel.helper.SwitchCompatPreference . setChecked ( WidgetHelper . gethasGradient ( de.azapps.mirakel.helper.Context , int ) ) ; de.azapps.mirakel.helper.SwitchCompatPreference . setOnPreferenceChangeListener ( new OnPreferenceChangeListener ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setHasGradient ( de.azapps.mirakel.helper.Context , int , ( java.lang.Boolean ) java.lang.Object ) ; return true ; } } ) ; } final SwitchCompatPreference de.azapps.mirakel.helper.SwitchCompatPreference = ( SwitchCompatPreference ) findPreference ( STRING ) ; de.azapps.mirakel.helper.SwitchCompatPreference . setChecked ( WidgetHelper . showDone ( de.azapps.mirakel.helper.Context , int ) ) ; de.azapps.mirakel.helper.SwitchCompatPreference . setOnPreferenceChangeListener ( new OnPreferenceChangeListener ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setDone ( de.azapps.mirakel.helper.Context , int , ( java.lang.Boolean ) java.lang.Object ) ; return true ; } } ) ; final SwitchCompatPreference de.azapps.mirakel.helper.SwitchCompatPreference = ( SwitchCompatPreference ) findPreference ( STRING ) ; de.azapps.mirakel.helper.SwitchCompatPreference . setChecked ( WidgetHelper . dueColors ( de.azapps.mirakel.helper.Context , int ) ) ; de.azapps.mirakel.helper.SwitchCompatPreference . setOnPreferenceChangeListener ( new OnPreferenceChangeListener ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setDueColors ( de.azapps.mirakel.helper.Context , int , ( java.lang.Boolean ) java.lang.Object ) ; return true ; } } ) ; final SliderPreference de.azapps.mirakel.helper.SliderPreference = ( SliderPreference ) findPreference ( STRING ) ; final ColorPickerPref de.azapps.mirakel.helper.ColorPickerPref = ( ColorPickerPref ) findPreference ( STRING ) ; de.azapps.mirakel.helper.ColorPickerPref . setColor ( WidgetHelper . getFontColor ( de.azapps.mirakel.helper.Context , int ) ) ; de.azapps.mirakel.helper.ColorPickerPref . setOldColor ( WidgetHelper . getFontColor ( de.azapps.mirakel.helper.Context , int ) ) ; de.azapps.mirakel.helper.ColorPickerPref . setOnPreferenceChangeListener ( new OnPreferenceChangeListener ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setFontColor ( de.azapps.mirakel.helper.Context , int , de.azapps.mirakel.helper.ColorPickerPref . getColor ( ) ) ; return false ; } } ) ; final int int = ( int ) ( NUMBER - ( WidgetHelper . getTransparency ( de.azapps.mirakel.helper.Context , int ) / NUMBER ) ) ; de.azapps.mirakel.helper.SliderPreference . setSummary ( this . activity . getString ( R . string . widget_transparency_summary , int ) ) ; de.azapps.mirakel.helper.SliderPreference . setMax ( NUMBER ) ; de.azapps.mirakel.helper.SliderPreference . setProgress ( int ) ; de.azapps.mirakel.helper.SliderPreference . setPositiveButtonText ( android . R . string . ok ) ; de.azapps.mirakel.helper.SliderPreference . setNegativeButtonText ( android . R . string . cancel ) ; de.azapps.mirakel.helper.SliderPreference . setDialogTitle ( R . string . widget_transparency ) ; de.azapps.mirakel.helper.SliderPreference . setOnPreferenceChangeListener ( new OnPreferenceChangeListener ( ) { @ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setTransparency ( de.azapps.mirakel.helper.Context , int , ( int ) ( NUMBER - ( ( java.lang.Integer ) java.lang.Object * NUMBER ) ) ) ; de.azapps.mirakel.helper.SliderPreference . setSummary ( de.azapps.mirakel.helper.PreferencesWidgetHelper .this . activity . getString ( R . string . widget_transparency_summary , ( java.lang.Integer ) java.lang.Object ) ) ; return true ; } } ) ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setList ( de.azapps.mirakel.helper.Context , int , java.lang.Integer . int ( ( java.lang.String ) java.lang.Object ) ) ; final Optional < ListMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = ListMirakel . get ( java.lang.Long . long ( ( java.lang.String ) java.lang.Object ) ) ; if ( ! de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . isPresent ( ) ) { return true ; } final java.lang.String java.lang.String = de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . get ( ) . getName ( ) ; de.azapps.mirakel.helper.ListPreference . setSummary ( de.azapps.mirakel.helper.PreferencesWidgetHelper .this . activity . getString ( R . string . notifications_list_summary , java.lang.String ) ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setDark ( de.azapps.mirakel.helper.Context , int , ( java.lang.Boolean ) java.lang.Object ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setHasGradient ( de.azapps.mirakel.helper.Context , int , ( java.lang.Boolean ) java.lang.Object ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setDone ( de.azapps.mirakel.helper.Context , int , ( java.lang.Boolean ) java.lang.Object ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setDueColors ( de.azapps.mirakel.helper.Context , int , ( java.lang.Boolean ) java.lang.Object ) ; return true ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setFontColor ( de.azapps.mirakel.helper.Context , int , de.azapps.mirakel.helper.ColorPickerPref . getColor ( ) ) ; return false ; } 
@ java.lang.Override public boolean boolean ( final Preference de.azapps.mirakel.helper.Preference , final java.lang.Object java.lang.Object ) { WidgetHelper . setTransparency ( de.azapps.mirakel.helper.Context , int , ( int ) ( NUMBER - ( ( java.lang.Integer ) java.lang.Object * NUMBER ) ) ) ; de.azapps.mirakel.helper.SliderPreference . setSummary ( de.azapps.mirakel.helper.PreferencesWidgetHelper .this . activity . getString ( R . string . widget_transparency_summary , ( java.lang.Integer ) java.lang.Object ) ) ; return true ; } 
public static de.azapps.mirakel.helper.RemoteViews de.azapps.mirakel.helper.RemoteViews ( final RemoteViews de.azapps.mirakel.helper.RemoteViews , final Task de.azapps.mirakel.helper.Task , final Context de.azapps.mirakel.helper.Context , final int int ) { final Optional < java.lang.Class<?> < ? > > de.azapps.mirakel.helper.Optional<java.lang.Class<?>> = Helpers . getMainActivity ( ) ; if ( ! de.azapps.mirakel.helper.Optional<java.lang.Class<?>> . isPresent ( ) ) { return null ; } final Intent de.azapps.mirakel.helper.Intent = new Intent ( de.azapps.mirakel.helper.Context , de.azapps.mirakel.helper.Optional<java.lang.Class<?>> . get ( ) ) ; de.azapps.mirakel.helper.Intent . setAction ( DefinitionsHelper . SHOW_TASK ) ; final Bundle de.azapps.mirakel.helper.Bundle = new Bundle ( ) ; de.azapps.mirakel.helper.Bundle . putParcelable ( DefinitionsHelper . EXTRA_TASK , de.azapps.mirakel.helper.Task ) ; de.azapps.mirakel.helper.Intent . putExtra ( DefinitionsHelper . BUNDLE_WRAPPER , de.azapps.mirakel.helper.Bundle ) ; de.azapps.mirakel.helper.Intent . setData ( Uri . parse ( de.azapps.mirakel.helper.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; final PendingIntent de.azapps.mirakel.helper.PendingIntent = PendingIntent . getActivity ( de.azapps.mirakel.helper.Context , NUMBER , de.azapps.mirakel.helper.Intent , NUMBER ) ; de.azapps.mirakel.helper.RemoteViews . setOnClickPendingIntent ( R . id . tasks_row , de.azapps.mirakel.helper.PendingIntent ) ; SpannableStringBuilder de.azapps.mirakel.helper.SpannableStringBuilder = new SpannableStringBuilder ( ) ; de.azapps.mirakel.helper.RemoteViews . setInt ( R . id . tasks_row_priority , STRING , TaskHelper . getPrioColor ( de.azapps.mirakel.helper.Task . getPriority ( ) ) ) ; final int int ; if ( de.azapps.mirakel.helper.Task . getDue ( ) . isPresent ( ) ) { de.azapps.mirakel.helper.SpannableStringBuilder . append ( DateTimeHelper . formatDate ( de.azapps.mirakel.helper.Context , de.azapps.mirakel.helper.Task . getDue ( ) ) ) ; de.azapps.mirakel.helper.SpannableStringBuilder . setSpan ( new ForegroundColorSpan ( TaskHelper . getTaskDueColor ( de.azapps.mirakel.helper.Task . getDue ( ) , de.azapps.mirakel.helper.Task . isDone ( ) ) ) , NUMBER , de.azapps.mirakel.helper.SpannableStringBuilder . length ( ) , NUMBER ) ; de.azapps.mirakel.helper.SpannableStringBuilder . append ( STRING ) ; int = de.azapps.mirakel.helper.SpannableStringBuilder . length ( ) ; } else { int = NUMBER ; } de.azapps.mirakel.helper.SpannableStringBuilder . append ( de.azapps.mirakel.helper.Task . getName ( ) ) ; de.azapps.mirakel.helper.SpannableStringBuilder . setSpan ( new ForegroundColorSpan ( de.azapps.mirakel.helper.WidgetHelper . int ( de.azapps.mirakel.helper.Context , int ) ) , int , de.azapps.mirakel.helper.SpannableStringBuilder . length ( ) , NUMBER ) ; de.azapps.mirakel.helper.RemoteViews . setTextViewText ( R . id . tasks_row_text , de.azapps.mirakel.helper.SpannableStringBuilder ) ; return de.azapps.mirakel.helper.RemoteViews ; } 
private static de.azapps.mirakel.helper.SharedPreferences de.azapps.mirakel.helper.SharedPreferences ( final Context de.azapps.mirakel.helper.Context ) { if ( de.azapps.mirakel.helper.SharedPreferences == null ) { de.azapps.mirakel.helper.SharedPreferences = de.azapps.mirakel.helper.Context . getSharedPreferences ( java.lang.String , NUMBER ) ; } return de.azapps.mirakel.helper.SharedPreferences ; } 
private static java.lang.String java.lang.String ( final int int , final java.lang.String java.lang.String ) { return java.lang.String + int + '_' + java.lang.String ; } 
private static boolean boolean ( final Context de.azapps.mirakel.helper.Context , final int int , final java.lang.String java.lang.String , final boolean boolean ) { return de.azapps.mirakel.helper.SharedPreferences ( de.azapps.mirakel.helper.Context ) . getBoolean ( java.lang.String ( int , java.lang.String ) , boolean ) ; } 
private static int int ( final Context de.azapps.mirakel.helper.Context , final int int , final java.lang.String java.lang.String , final int int ) { return de.azapps.mirakel.helper.SharedPreferences ( de.azapps.mirakel.helper.Context ) . getInt ( java.lang.String ( int , java.lang.String ) , int ) ; } 
public static boolean boolean ( final Context de.azapps.mirakel.helper.Context , final int int ) { return boolean ( de.azapps.mirakel.helper.Context , int , STRING , true ) ; } 
public static boolean boolean ( final Context de.azapps.mirakel.helper.Context , final int int ) { return boolean ( de.azapps.mirakel.helper.Context , int , STRING , false ) ; } 
public static boolean boolean ( final Context de.azapps.mirakel.helper.Context , final int int ) { return boolean ( de.azapps.mirakel.helper.Context , int , STRING , true ) ; } 
public static int int ( final Context de.azapps.mirakel.helper.Context , final int int ) { return int ( de.azapps.mirakel.helper.Context , int , STRING , de.azapps.mirakel.helper.Context . getResources ( ) . getColor ( android . R . color . white ) ) ; } 
public static int int ( final Context de.azapps.mirakel.helper.Context , final int int ) { return int ( de.azapps.mirakel.helper.Context , int , STRING , NUMBER ) ; } 
@ NonNull public static de.azapps.mirakel.helper.ListMirakel de.azapps.mirakel.helper.ListMirakel ( final Context de.azapps.mirakel.helper.Context , final int int ) { final int int = de.azapps.mirakel.helper.SharedPreferences ( de.azapps.mirakel.helper.Context ) . getInt ( java.lang.String ( int , STRING ) , NUMBER ) ; final Optional < ListMirakel > de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> = ListMirakel . get ( int ) ; if ( ! de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . isPresent ( ) ) { return SpecialList . firstSpecialSafe ( ) ; } else { return de.azapps.mirakel.helper.Optional<de.azapps.mirakel.helper.ListMirakel> . get ( ) ; } } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final int int ) { final Editor de.azapps.mirakel.helper.Editor = de.azapps.mirakel.helper.SharedPreferences ( de.azapps.mirakel.helper.Context ) . edit ( ) ; de.azapps.mirakel.helper.Editor . putInt ( java.lang.String ( int , STRING ) , int ) ; de.azapps.mirakel.helper.Editor . commit ( ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final java.lang.String java.lang.String , final boolean boolean ) { final Editor de.azapps.mirakel.helper.Editor = de.azapps.mirakel.helper.SharedPreferences ( de.azapps.mirakel.helper.Context ) . edit ( ) ; de.azapps.mirakel.helper.Editor . putBoolean ( java.lang.String ( int , java.lang.String ) , boolean ) ; de.azapps.mirakel.helper.Editor . commit ( ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final java.lang.String java.lang.String , final int int ) { final Editor de.azapps.mirakel.helper.Editor = de.azapps.mirakel.helper.SharedPreferences ( de.azapps.mirakel.helper.Context ) . edit ( ) ; de.azapps.mirakel.helper.Editor . putInt ( java.lang.String ( int , java.lang.String ) , int ) ; de.azapps.mirakel.helper.Editor . commit ( ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final boolean boolean ) { void ( de.azapps.mirakel.helper.Context , int , STRING , boolean ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final boolean boolean ) { void ( de.azapps.mirakel.helper.Context , int , STRING , boolean ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final boolean boolean ) { void ( de.azapps.mirakel.helper.Context , int , STRING , boolean ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final int int ) { void ( de.azapps.mirakel.helper.Context , int , STRING , int ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final int int ) { void ( de.azapps.mirakel.helper.Context , int , STRING , int ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final int int , final java.lang.Boolean java.lang.Boolean ) { void ( de.azapps.mirakel.helper.Context , int , STRING , java.lang.Boolean ) ; } 
public static boolean boolean ( final Context de.azapps.mirakel.helper.Context , final int int ) { return boolean ( de.azapps.mirakel.helper.Context , int , STRING , true ) ; } 
public static void void ( final Context de.azapps.mirakel.helper.Context , final SparseIntArray de.azapps.mirakel.helper.SparseIntArray , final int [] int[] ) { for ( final int int : int[] ) { final int int = de.azapps.mirakel.helper.SharedPreferences ( de.azapps.mirakel.helper.Context ) . getInt ( java.lang.String ( int , STRING ) , NUMBER ) ; void ( de.azapps.mirakel.helper.Context , int , de.azapps.mirakel.helper.SparseIntArray . get ( int , int ) ) ; } } 
public static void void ( final SparseIntArray de.azapps.mirakel.widget.SparseIntArray ) { de.azapps.mirakel.widget.SparseIntArray = de.azapps.mirakel.widget.SparseIntArray ; } 
@ java.lang.Override @ SuppressLint ( STRING ) public void void ( final Context de.azapps.mirakel.widget.Context , final AppWidgetManager de.azapps.mirakel.widget.AppWidgetManager , final int [] int[] ) { if ( de.azapps.mirakel.widget.SparseIntArray != null ) { WidgetHelper . updateListIDs ( de.azapps.mirakel.widget.Context , de.azapps.mirakel.widget.SparseIntArray , int[] ) ; de.azapps.mirakel.widget.SparseIntArray = null ; } for ( final int int : int[] ) { Log . v ( java.lang.String , STRING + int ) ; final boolean boolean = WidgetHelper . isDark ( de.azapps.mirakel.widget.Context , int ) ; final int int = R . layout . widget_minimal ; final RemoteViews de.azapps.mirakel.widget.RemoteViews = new RemoteViews ( de.azapps.mirakel.widget.Context . getPackageName ( ) , int ) ; final Intent de.azapps.mirakel.widget.Intent = new Intent ( de.azapps.mirakel.widget.Context , MainWidgetService .class ) ; de.azapps.mirakel.widget.Intent . putExtra ( AppWidgetManager . EXTRA_APPWIDGET_ID , int ) ; de.azapps.mirakel.widget.Intent . setData ( Uri . parse ( de.azapps.mirakel.widget.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; final Intent de.azapps.mirakel.widget.Intent = new Intent ( de.azapps.mirakel.widget.Context , de.azapps.mirakel.widget.MainWidgetProvider .class ) ; de.azapps.mirakel.widget.Intent . setData ( Uri . parse ( de.azapps.mirakel.widget.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; de.azapps.mirakel.widget.Intent . putExtra ( java.lang.String , int ) ; de.azapps.mirakel.widget.Intent . setExtrasClassLoader ( Task .class . java.lang.ClassLoader ( ) ) ; final PendingIntent de.azapps.mirakel.widget.PendingIntent = PendingIntent . getBroadcast ( de.azapps.mirakel.widget.Context , NUMBER , de.azapps.mirakel.widget.Intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; de.azapps.mirakel.widget.RemoteViews . setPendingIntentTemplate ( R . id . widget_tasks_list , de.azapps.mirakel.widget.PendingIntent ) ; final int int ; if ( WidgetHelper . gethasGradient ( de.azapps.mirakel.widget.Context , int ) ) { int = boolean ? R . drawable . widget_background_minimalistic_dark : R . drawable . widget_background_minimalistic ; } else { int = boolean ? R . drawable . widget_background_minimalistic_dark_wo_gradient : R . drawable . widget_background_minimalistic_wo_gradient ; } final GradientDrawable de.azapps.mirakel.widget.GradientDrawable = ( GradientDrawable ) de.azapps.mirakel.widget.Context . getResources ( ) . getDrawable ( int ) ; de.azapps.mirakel.widget.GradientDrawable . setAlpha ( WidgetHelper . getTransparency ( de.azapps.mirakel.widget.Context , int ) ) ; final DisplayMetrics de.azapps.mirakel.widget.DisplayMetrics = de.azapps.mirakel.widget.Context . getResources ( ) . getDisplayMetrics ( ) ; final Bitmap de.azapps.mirakel.widget.Bitmap = Bitmap . createBitmap ( metrics . widthPixels , metrics . heightPixels , Config . ARGB_8888 ) ; final Canvas de.azapps.mirakel.widget.Canvas = new Canvas ( de.azapps.mirakel.widget.Bitmap ) ; de.azapps.mirakel.widget.GradientDrawable . setBounds ( NUMBER , NUMBER , de.azapps.mirakel.widget.Canvas . getWidth ( ) , de.azapps.mirakel.widget.Canvas . getHeight ( ) ) ; de.azapps.mirakel.widget.GradientDrawable . draw ( de.azapps.mirakel.widget.Canvas ) ; de.azapps.mirakel.widget.RemoteViews . setImageViewBitmap ( R . id . widget_background , de.azapps.mirakel.widget.Bitmap ) ; de.azapps.mirakel.widget.RemoteViews . setTextColor ( R . id . widget_list_name , WidgetHelper . getFontColor ( de.azapps.mirakel.widget.Context , int ) ) ; final ListMirakel de.azapps.mirakel.widget.ListMirakel = WidgetHelper . getList ( de.azapps.mirakel.widget.Context , int ) ; final Intent de.azapps.mirakel.widget.Intent = new Intent ( de.azapps.mirakel.widget.Context , MainWidgetSettingsActivity .class ) ; de.azapps.mirakel.widget.Intent . putExtra ( java.lang.String , int ) ; de.azapps.mirakel.widget.Intent . setData ( Uri . parse ( de.azapps.mirakel.widget.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; final PendingIntent de.azapps.mirakel.widget.PendingIntent = PendingIntent . getActivity ( de.azapps.mirakel.widget.Context , NUMBER , de.azapps.mirakel.widget.Intent , NUMBER ) ; de.azapps.mirakel.widget.RemoteViews . setOnClickPendingIntent ( R . id . widget_preferences , de.azapps.mirakel.widget.PendingIntent ) ; de.azapps.mirakel.widget.RemoteViews . setImageViewBitmap ( R . id . widget_preferences , de.azapps.mirakel.widget.Bitmap ( WidgetHelper . getFontColor ( de.azapps.mirakel.widget.Context , int ) , de.azapps.mirakel.widget.Context . getResources ( ) . getDrawable ( R . drawable . ic_action_overflow ) , new int [] { NUMBER , NUMBER , NUMBER } , NUMBER ) ) ; de.azapps.mirakel.widget.RemoteViews . setImageViewBitmap ( R . id . widget_add_task , de.azapps.mirakel.widget.Bitmap ( WidgetHelper . getFontColor ( de.azapps.mirakel.widget.Context , int ) , de.azapps.mirakel.widget.Context . getResources ( ) . getDrawable ( R . drawable . ic_action_new ) , new int [] { NUMBER , NUMBER , NUMBER } , NUMBER ) ) ; final Optional < java.lang.Class<?> < ? > > de.azapps.mirakel.widget.Optional<java.lang.Class<?>> = Helpers . getMainActivity ( ) ; if ( ! de.azapps.mirakel.widget.Optional<java.lang.Class<?>> . isPresent ( ) ) { return; } final Intent de.azapps.mirakel.widget.Intent = new Intent ( de.azapps.mirakel.widget.Context , de.azapps.mirakel.widget.Optional<java.lang.Class<?>> . get ( ) ) ; de.azapps.mirakel.widget.Intent . setAction ( DefinitionsHelper . SHOW_LIST_FROM_WIDGET ) ; de.azapps.mirakel.widget.Intent . putExtra ( DefinitionsHelper . EXTRA_LIST , de.azapps.mirakel.widget.ListMirakel ) ; de.azapps.mirakel.widget.Intent . setData ( Uri . parse ( DefinitionsHelper . SHOW_LIST_FROM_WIDGET + de.azapps.mirakel.widget.ListMirakel . getId ( ) ) ) ; final PendingIntent de.azapps.mirakel.widget.PendingIntent = PendingIntent . getActivity ( de.azapps.mirakel.widget.Context , NUMBER , de.azapps.mirakel.widget.Intent , NUMBER ) ; de.azapps.mirakel.widget.RemoteViews . setOnClickPendingIntent ( R . id . widget_list_name , de.azapps.mirakel.widget.PendingIntent ) ; de.azapps.mirakel.widget.RemoteViews . setTextViewText ( R . id . widget_list_name , de.azapps.mirakel.widget.ListMirakel . getName ( ) ) ; final Intent de.azapps.mirakel.widget.Intent = new Intent ( de.azapps.mirakel.widget.Context , de.azapps.mirakel.widget.Optional<java.lang.Class<?>> . get ( ) ) ; de.azapps.mirakel.widget.Intent . setAction ( DefinitionsHelper . ADD_TASK_FROM_WIDGET ) ; de.azapps.mirakel.widget.Intent . putExtra ( DefinitionsHelper . EXTRA_LIST , de.azapps.mirakel.widget.ListMirakel ) ; de.azapps.mirakel.widget.Intent . setData ( Uri . parse ( DefinitionsHelper . ADD_TASK_FROM_WIDGET + de.azapps.mirakel.widget.ListMirakel . getId ( ) ) ) ; final PendingIntent de.azapps.mirakel.widget.PendingIntent = PendingIntent . getActivity ( de.azapps.mirakel.widget.Context , NUMBER , de.azapps.mirakel.widget.Intent , NUMBER ) ; de.azapps.mirakel.widget.RemoteViews . setOnClickPendingIntent ( R . id . widget_add_task , de.azapps.mirakel.widget.PendingIntent ) ; de.azapps.mirakel.widget.RemoteViews . setRemoteAdapter ( R . id . widget_tasks_list , de.azapps.mirakel.widget.Intent ) ; try { de.azapps.mirakel.widget.AppWidgetManager . updateAppWidget ( new int [] { int } , de.azapps.mirakel.widget.RemoteViews ) ; de.azapps.mirakel.widget.AppWidgetManager . notifyAppWidgetViewDataChanged ( int , R . id . widget_tasks_list ) ; } catch ( final java.lang.RuntimeException java.lang.RuntimeException ) { Log . d ( java.lang.String , STRING , java.lang.RuntimeException ) ; return; } de.azapps.mirakel.widget.RemoteViews . setEmptyView ( R . id . widget_tasks_list , R . id . empty_view ) ; de.azapps.mirakel.widget.AppWidgetManager . updateAppWidget ( int , de.azapps.mirakel.widget.RemoteViews ) ; } } 
private static de.azapps.mirakel.widget.Bitmap de.azapps.mirakel.widget.Bitmap ( final int int , final Drawable de.azapps.mirakel.widget.Drawable , final int [] int[] , final int int ) { final Bitmap de.azapps.mirakel.widget.Bitmap ; final Bitmap de.azapps.mirakel.widget.Bitmap = ( ( BitmapDrawable ) de.azapps.mirakel.widget.Drawable ) . getBitmap ( ) ; de.azapps.mirakel.widget.Bitmap = de.azapps.mirakel.widget.Bitmap . copy ( Bitmap . Config . ARGB_8888 , true ) ; for ( int int = NUMBER ; int < de.azapps.mirakel.widget.Bitmap . getWidth ( ) ; int ++ ) { for ( int int = NUMBER ; int < de.azapps.mirakel.widget.Bitmap . getHeight ( ) ; int ++ ) { if ( boolean ( de.azapps.mirakel.widget.Bitmap . getPixel ( int , int ) , int[] , int ) ) { de.azapps.mirakel.widget.Bitmap . setPixel ( int , int , int ) ; } } } return de.azapps.mirakel.widget.Bitmap ; } 
private static boolean boolean ( final int int , final int [] int[] , final int int ) { return ( java.lang.Math . int ( Color . red ( int ) - int[] [ NUMBER ] ) < int ) && ( java.lang.Math . int ( Color . green ( int ) - int[] [ NUMBER ] ) < int ) && ( java.lang.Math . int ( Color . blue ( int ) - int[] [ NUMBER ] ) < int ) ; } 
@ SuppressLint ( STRING ) @ java.lang.Override public void void ( @ NonNull final Context de.azapps.mirakel.widget.Context , @ NonNull final Intent de.azapps.mirakel.widget.Intent ) { if ( java.lang.String . boolean ( de.azapps.mirakel.widget.Intent . getAction ( ) ) ) { final Task de.azapps.mirakel.widget.Task = de.azapps.mirakel.widget.Intent . getBundleExtra ( DefinitionsHelper . BUNDLE_WRAPPER ) . getParcelable ( java.lang.String ) ; final Optional < java.lang.Class<?> < ? > > de.azapps.mirakel.widget.Optional<java.lang.Class<?>> = Helpers . getMainActivity ( ) ; if ( ! de.azapps.mirakel.widget.Optional<java.lang.Class<?>> . isPresent ( ) ) { return; } final Intent de.azapps.mirakel.widget.Intent = new Intent ( de.azapps.mirakel.widget.Context , de.azapps.mirakel.widget.Optional<java.lang.Class<?>> . get ( ) ) ; de.azapps.mirakel.widget.Intent . setAction ( DefinitionsHelper . SHOW_TASK_FROM_WIDGET ) ; de.azapps.mirakel.widget.Intent . putExtra ( DefinitionsHelper . EXTRA_TASK , de.azapps.mirakel.widget.Task ) ; de.azapps.mirakel.widget.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; de.azapps.mirakel.widget.Intent . setData ( Uri . parse ( de.azapps.mirakel.widget.Intent . toUri ( Intent . URI_INTENT_SCHEME ) ) ) ; de.azapps.mirakel.widget.Context . startActivity ( de.azapps.mirakel.widget.Intent ) ; } if ( STRING . boolean ( de.azapps.mirakel.widget.Intent . getAction ( ) ) ) { final AppWidgetManager de.azapps.mirakel.widget.AppWidgetManager = AppWidgetManager . getInstance ( de.azapps.mirakel.widget.Context ) ; void ( de.azapps.mirakel.widget.Context , de.azapps.mirakel.widget.AppWidgetManager , de.azapps.mirakel.widget.AppWidgetManager . getAppWidgetIds ( new ComponentName ( de.azapps.mirakel.widget.Context , de.azapps.mirakel.widget.MainWidgetProvider .class ) ) ) ; } super. onReceive ( de.azapps.mirakel.widget.Context , de.azapps.mirakel.widget.Intent ) ; } 
@ java.lang.Override public de.azapps.mirakel.widget.RemoteViewsFactory de.azapps.mirakel.widget.RemoteViewsFactory ( final Intent de.azapps.mirakel.widget.Intent ) { Log . wtf ( java.lang.String , STRING ) ; return new de.azapps.mirakel.widget.MainWidgetViewsFactory ( getApplicationContext ( ) , de.azapps.mirakel.widget.Intent ) ; } 
public void ( final Context de.azapps.mirakel.widget.Context , final Intent de.azapps.mirakel.widget.Intent ) { if ( de.azapps.mirakel.widget.Intent . getIntExtra ( MainWidgetProvider . EXTRA_WIDGET_LAYOUT , MainWidgetProvider . NORMAL_WIDGET ) != MainWidgetProvider . NORMAL_WIDGET ) { Log . wtf ( java.lang.String , STRING ) ; } this . de.azapps.mirakel.widget.Context = de.azapps.mirakel.widget.Context ; this . int = de.azapps.mirakel.widget.Intent . getIntExtra ( AppWidgetManager . EXTRA_APPWIDGET_ID , NUMBER ) ; } 
@ java.lang.Override public void void ( ) { void ( ) ; } 
private void void ( ) { final long long = Binder . clearCallingIdentity ( ) ; this . de.azapps.mirakel.widget.ListMirakel = WidgetHelper . getList ( this . de.azapps.mirakel.widget.Context , this . int ) ; Binder . restoreCallingIdentity ( long ) ; int ( ) ; } 
@ java.lang.Override public void void ( ) { } 
@ java.lang.Override public int int ( ) { final long long = Binder . clearCallingIdentity ( ) ; this . java.util.List<de.azapps.mirakel.widget.Task> = Task . getTasks ( this . de.azapps.mirakel.widget.ListMirakel , this . de.azapps.mirakel.widget.ListMirakel . getSortBy ( ) , WidgetHelper . showDone ( this . de.azapps.mirakel.widget.Context , this . int ) ) ; Binder . restoreCallingIdentity ( long ) ; return this . java.util.List<de.azapps.mirakel.widget.Task> . size ( ) ; } 
@ java.lang.Override public de.azapps.mirakel.widget.RemoteViews de.azapps.mirakel.widget.RemoteViews ( final int int ) { if ( int >= this . java.util.List<de.azapps.mirakel.widget.Task> . size ( ) ) { Log . w ( java.lang.String , STRING ) ; return null ; } final Task de.azapps.mirakel.widget.Task = this . java.util.List<de.azapps.mirakel.widget.Task> . get ( int ) ; RemoteViews de.azapps.mirakel.widget.RemoteViews = new RemoteViews ( this . de.azapps.mirakel.widget.Context . getPackageName ( ) , R . layout . widget_row_minimal ) ; de.azapps.mirakel.widget.RemoteViews = WidgetHelper . configureItem ( de.azapps.mirakel.widget.RemoteViews , de.azapps.mirakel.widget.Task , this . de.azapps.mirakel.widget.Context , this . int ) ; final Intent de.azapps.mirakel.widget.Intent = new Intent ( MainWidgetProvider . CLICK_TASK ) ; final Bundle de.azapps.mirakel.widget.Bundle = new Bundle ( ) ; de.azapps.mirakel.widget.Bundle . putParcelable ( MainWidgetProvider . EXTRA_TASK , de.azapps.mirakel.widget.Task ) ; de.azapps.mirakel.widget.Intent . putExtra ( DefinitionsHelper . BUNDLE_WRAPPER , de.azapps.mirakel.widget.Bundle ) ; de.azapps.mirakel.widget.RemoteViews . setOnClickFillInIntent ( R . id . tasks_row , de.azapps.mirakel.widget.Intent ) ; return de.azapps.mirakel.widget.RemoteViews ; } 
@ java.lang.Override public de.azapps.mirakel.widget.RemoteViews de.azapps.mirakel.widget.RemoteViews ( ) { return null ; } 
@ java.lang.Override public int int ( ) { return NUMBER ; } 
@ java.lang.Override public long long ( final int int ) { return int ; } 
@ java.lang.Override public boolean boolean ( ) { return false ; } 
@ java.lang.Override public void void ( ) { void ( ) ; } 
@ java.lang.Override protected void void ( Bundle de.azapps.mirakel.widget.Bundle ) { int = getIntent ( ) . getIntExtra ( MainWidgetProvider . EXTRA_WIDGET_ID , NUMBER ) ; Intent de.azapps.mirakel.widget.Intent = getIntent ( ) ; de.azapps.mirakel.widget.Intent . putExtra ( FRAGMENT , MainWidgetSettingsFragment .class ) ; de.azapps.mirakel.widget.Intent . putExtra ( GenericModelDetailFragment . ARG_ITEM , ( Parcelable ) Settings . WIDGET ) ; setIntent ( de.azapps.mirakel.widget.Intent ) ; super. onCreate ( de.azapps.mirakel.widget.Bundle ) ; if ( getSupportActionBar ( ) != null ) { getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( false ) ; } if ( ! backstack . isEmpty ( ) ) { ( ( MainWidgetSettingsFragment ) backstack . get ( NUMBER ) ) . setup ( int ) ; } } 
@ SuppressLint ( STRING ) @ java.lang.Override protected void void ( ) { super. onPause ( ) ; Log . d ( STRING , STRING ) ; final Intent de.azapps.mirakel.widget.Intent = new Intent ( this , MainWidgetProvider .class ) ; de.azapps.mirakel.widget.Intent . setAction ( STRING ) ; de.azapps.mirakel.widget.Intent . putExtra ( AppWidgetManager . EXTRA_APPWIDGET_IDS , new int [] { int } ) ; AppWidgetManager . getInstance ( this ) . notifyAppWidgetViewDataChanged ( int , R . id . widget_tasks_list ) ; sendBroadcast ( de.azapps.mirakel.widget.Intent ) ; finish ( ) ; } 
@ java.lang.Override public void void ( ) { final Intent de.azapps.mirakel.widget.Intent = new Intent ( Intent . ACTION_MAIN ) ; de.azapps.mirakel.widget.Intent . addCategory ( Intent . CATEGORY_HOME ) ; de.azapps.mirakel.widget.Intent . setFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( de.azapps.mirakel.widget.Intent ) ; } 
@ java.lang.Override public void void ( final Bundle de.azapps.mirakel.widget.Bundle ) { super. onCreate ( de.azapps.mirakel.widget.Bundle ) ; addPreferencesFromResource ( R . xml . settings_widget ) ; Log . e ( java.lang.String , STRING + this . int ) ; new PreferencesWidgetHelper ( this ) . setFunctionsWidget ( getActivity ( ) , this . int ) ; } 
public void void ( final int int ) { this . int = int ; } 
@ NonNull @ java.lang.Override public de.azapps.mirakel.widget.Settings de.azapps.mirakel.widget.Settings ( ) { return Settings . WIDGET ; } 
public static void void ( final Marker org.onebusaway.android.map.googlemapsv2.Marker , final LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . ICE_CREAM_SANDWICH ) { void ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } else if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . HONEYCOMB_MR1 ) { void ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } else { void ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } 
private static void void ( final Marker org.onebusaway.android.map.googlemapsv2.Marker , final LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { final org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator = new org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator.Linear ( ) ; final LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Marker . getPosition ( ) ; final Handler org.onebusaway.android.map.googlemapsv2.Handler = new Handler ( ) ; final long long = SystemClock . uptimeMillis ( ) ; final Interpolator org.onebusaway.android.map.googlemapsv2.Interpolator = new AccelerateDecelerateInterpolator ( ) ; final float float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Handler . post ( new java.lang.Runnable ( ) { long long ; float float ; float float ; @ java.lang.Override public void void ( ) { long = SystemClock . uptimeMillis ( ) - long ; float = long / float ; float = org.onebusaway.android.map.googlemapsv2.Interpolator . getInterpolation ( float ) ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ) ; if ( float < NUMBER ) { org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( this , NUMBER ) ; } } } ) ; } 
@ java.lang.Override public void void ( ) { long = SystemClock . uptimeMillis ( ) - long ; float = long / float ; float = org.onebusaway.android.map.googlemapsv2.Interpolator . getInterpolation ( float ) ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ) ; if ( float < NUMBER ) { org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( this , NUMBER ) ; } } 
@ TargetApi ( Build . VERSION_CODES . HONEYCOMB_MR1 ) private static void void ( final Marker org.onebusaway.android.map.googlemapsv2.Marker , final LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { final org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator = new org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator.Linear ( ) ; final LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Marker . getPosition ( ) ; ValueAnimator org.onebusaway.android.map.googlemapsv2.ValueAnimator = new ValueAnimator ( ) ; org.onebusaway.android.map.googlemapsv2.ValueAnimator . addUpdateListener ( new ValueAnimator . ValueAnimator ( ) { @ java.lang.Override public void void ( ValueAnimator org.onebusaway.android.map.googlemapsv2.ValueAnimator ) { float float = org.onebusaway.android.map.googlemapsv2.ValueAnimator . getAnimatedFraction ( ) ; LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } ) ; org.onebusaway.android.map.googlemapsv2.ValueAnimator . setFloatValues ( NUMBER , NUMBER ) ; org.onebusaway.android.map.googlemapsv2.ValueAnimator . setDuration ( NUMBER ) ; org.onebusaway.android.map.googlemapsv2.ValueAnimator . start ( ) ; } 
@ java.lang.Override public void void ( ValueAnimator org.onebusaway.android.map.googlemapsv2.ValueAnimator ) { float float = org.onebusaway.android.map.googlemapsv2.ValueAnimator . getAnimatedFraction ( ) ; LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } 
@ TargetApi ( Build . VERSION_CODES . ICE_CREAM_SANDWICH ) private static void void ( Marker org.onebusaway.android.map.googlemapsv2.Marker , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { final org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator = new org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator.Linear ( ) ; TypeEvaluator < LatLng > org.onebusaway.android.map.googlemapsv2.TypeEvaluator<org.onebusaway.android.map.googlemapsv2.LatLng> = new TypeEvaluator < LatLng > ( ) { @ java.lang.Override public org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( float float , LatLng org.onebusaway.android.map.googlemapsv2.LatLng , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { return org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } ; Property < Marker , LatLng > org.onebusaway.android.map.googlemapsv2.Property<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.LatLng> = Property . of ( Marker .class , LatLng .class , STRING ) ; ObjectAnimator org.onebusaway.android.map.googlemapsv2.ObjectAnimator = ObjectAnimator . ofObject ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.Property<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.LatLng> , org.onebusaway.android.map.googlemapsv2.TypeEvaluator<org.onebusaway.android.map.googlemapsv2.LatLng> , org.onebusaway.android.map.googlemapsv2.LatLng ) ; org.onebusaway.android.map.googlemapsv2.ObjectAnimator . setDuration ( NUMBER ) ; org.onebusaway.android.map.googlemapsv2.ObjectAnimator . start ( ) ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( float float , LatLng org.onebusaway.android.map.googlemapsv2.LatLng , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { return org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } 
org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( float float , LatLng org.onebusaway.android.map.googlemapsv2.LatLng , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ); 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( float float , LatLng org.onebusaway.android.map.googlemapsv2.LatLng , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { double double = ( b . latitude - a . latitude ) * float + a . latitude ; double double = b . longitude - a . longitude ; if ( java.lang.Math . double ( double ) > NUMBER ) { double -= java.lang.Math . double ( double ) * NUMBER ; } double double = double * float + a . longitude ; return new LatLng ( double , double ) ; } 
void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , Location org.onebusaway.android.map.googlemapsv2.Location ); 
void void ( boolean boolean ); 
public static org.onebusaway.android.map.googlemapsv2.BaseMapFragment org.onebusaway.android.map.googlemapsv2.BaseMapFragment ( ) { return new org.onebusaway.android.map.googlemapsv2.BaseMapFragment ( ) ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.View org.onebusaway.android.map.googlemapsv2.View ( LayoutInflater org.onebusaway.android.map.googlemapsv2.LayoutInflater , ViewGroup org.onebusaway.android.map.googlemapsv2.ViewGroup , Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { View org.onebusaway.android.map.googlemapsv2.View = super. onCreateView ( org.onebusaway.android.map.googlemapsv2.LayoutInflater , org.onebusaway.android.map.googlemapsv2.ViewGroup , org.onebusaway.android.map.googlemapsv2.Bundle ) ; org.onebusaway.android.map.googlemapsv2.LocationHelper = new LocationHelper ( getActivity ( ) ) ; org.onebusaway.android.map.googlemapsv2.LocationHelper . registerListener ( this ) ; if ( MapHelpV2 . isMapsInstalled ( getActivity ( ) ) ) { org.onebusaway.android.map.googlemapsv2.Bundle = org.onebusaway.android.map.googlemapsv2.Bundle ; getMapAsync ( this ) ; } else { MapHelpV2 . promptUserInstallMaps ( getActivity ( ) ) ; } Location org.onebusaway.android.map.googlemapsv2.Location = Application . getLastKnownLocation ( getActivity ( ) , org.onebusaway.android.map.googlemapsv2.LocationHelper . getGoogleApiClient ( ) ) ; if ( org.onebusaway.android.map.googlemapsv2.Location != null ) { final long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( NUMBER ) ; if ( java.lang.System . long ( ) - org.onebusaway.android.map.googlemapsv2.Location . getTime ( ) < long ) { void ( org.onebusaway.android.map.googlemapsv2.Location ) ; } } return org.onebusaway.android.map.googlemapsv2.View ; } 
@ java.lang.Override public void void ( com . com.amazon . com.amazon . com.amazon . com.amazon com.amazon.geo.mapsv2.AmazonMap ) { com.amazon.geo.mapsv2.AmazonMap = com.amazon.geo.mapsv2.AmazonMap ; void ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } 
private void void ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { UiSettings org.onebusaway.android.map.googlemapsv2.UiSettings = com.amazon.geo.mapsv2.AmazonMap . getUiSettings ( ) ; com.amazon.geo.mapsv2.AmazonMap . setMyLocationEnabled ( true ) ; com.amazon.geo.mapsv2.AmazonMap . setLocationSource ( this ) ; com.amazon.geo.mapsv2.AmazonMap . setOnCameraChangeListener ( this ) ; org.onebusaway.android.map.googlemapsv2.UiSettings . setMyLocationButtonEnabled ( false ) ; org.onebusaway.android.map.googlemapsv2.UiSettings . setZoomControlsEnabled ( false ) ; org.onebusaway.android.map.googlemapsv2.UiSettings . setMapToolbarEnabled ( false ) ; org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay = new SimpleMarkerOverlay ( com.amazon.geo.mapsv2.AmazonMap ) ; if ( org.onebusaway.android.map.googlemapsv2.Bundle != null ) { void ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } else { Bundle org.onebusaway.android.map.googlemapsv2.Bundle = getActivity ( ) . getIntent ( ) . getExtras ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Bundle == null ) { org.onebusaway.android.map.googlemapsv2.Bundle = new Bundle ( ) ; } double double = org.onebusaway.android.map.googlemapsv2.Bundle . getDouble ( MapParams . CENTER_LAT , NUMBER ) ; double double = org.onebusaway.android.map.googlemapsv2.Bundle . getDouble ( MapParams . CENTER_LON , NUMBER ) ; if ( double == NUMBER && double == NUMBER ) { PreferenceUtils . maybeRestoreMapViewToBundle ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } void ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } } 
private void void ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { java.lang.String = org.onebusaway.android.map.googlemapsv2.Bundle . getString ( MapParams . STOP_ID ) ; int = org.onebusaway.android.map.googlemapsv2.Bundle . getInt ( MapParams . MAP_PADDING_LEFT , MapParams . DEFAULT_MAP_PADDING ) ; int = org.onebusaway.android.map.googlemapsv2.Bundle . getInt ( MapParams . MAP_PADDING_TOP , MapParams . DEFAULT_MAP_PADDING ) ; int = org.onebusaway.android.map.googlemapsv2.Bundle . getInt ( MapParams . MAP_PADDING_RIGHT , MapParams . DEFAULT_MAP_PADDING ) ; int = org.onebusaway.android.map.googlemapsv2.Bundle . getInt ( MapParams . MAP_PADDING_BOTTOM , MapParams . DEFAULT_MAP_PADDING ) ; void ( int , int , int , int ) ; java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.Bundle . getString ( MapParams . MODE ) ; if ( java.lang.String == null ) { java.lang.String = MapParams . MODE_STOP ; } void ( java.lang.String , org.onebusaway.android.map.googlemapsv2.Bundle ) ; } 
@ java.lang.Override public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . destroy ( ) ; } super. onDestroy ( ) ; } 
@ java.lang.Override public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.LocationHelper != null ) { org.onebusaway.android.map.googlemapsv2.LocationHelper . onPause ( ) ; } if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onPause ( ) ; } Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.Location ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Location != null ) { PreferenceUtils . saveMapViewToPreferences ( org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) , org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) , float ( ) ) ; } boolean = false ; super. onPause ( ) ; } 
@ java.lang.Override public void void ( boolean boolean ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onHidden ( boolean ) ; } super. onHiddenChanged ( boolean ) ; } 
@ java.lang.Override public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.LocationHelper != null ) { org.onebusaway.android.map.googlemapsv2.LocationHelper . onResume ( ) ; } boolean = true ; if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onResume ( ) ; } super. onResume ( ) ; } 
@ java.lang.Override public void void ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onSaveInstanceState ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } org.onebusaway.android.map.googlemapsv2.Bundle . putString ( MapParams . MODE , java.lang.String ( ) ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putString ( MapParams . STOP_ID , java.lang.String ) ; Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.Location ( ) ; if ( com.amazon.geo.mapsv2.AmazonMap != null ) { org.onebusaway.android.map.googlemapsv2.Bundle . putDouble ( MapParams . CENTER_LAT , org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putDouble ( MapParams . CENTER_LON , org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putFloat ( MapParams . ZOOM , float ( ) ) ; } org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( MapParams . MAP_PADDING_LEFT , int ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( MapParams . MAP_PADDING_TOP , int ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( MapParams . MAP_PADDING_RIGHT , int ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( MapParams . MAP_PADDING_BOTTOM , int ) ; } 
@ java.lang.Override public void void ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onViewStateRestored ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } super. onViewStateRestored ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } 
public boolean boolean ( ) { return ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) && MapParams . MODE_ROUTE . equals ( org.onebusaway.android.map.googlemapsv2.MapModeController . getMode ( ) ) ; } 
public boolean boolean ( ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay != null ) { return true ; } if ( com.amazon.geo.mapsv2.AmazonMap == null ) { return false ; } org.onebusaway.android.map.googlemapsv2.StopOverlay = new StopOverlay ( getActivity ( ) , com.amazon.geo.mapsv2.AmazonMap ) ; org.onebusaway.android.map.googlemapsv2.StopOverlay . setOnFocusChangeListener ( this ) ; return true ; } 
public void void ( ) { Activity org.onebusaway.android.map.googlemapsv2.Activity = getActivity ( ) ; if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay == null && org.onebusaway.android.map.googlemapsv2.Activity != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay = new VehicleOverlay ( org.onebusaway.android.map.googlemapsv2.Activity , com.amazon.geo.mapsv2.AmazonMap ) ; org.onebusaway.android.map.googlemapsv2.VehicleOverlay . setController ( this ) ; } } 
protected void void ( int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment ( int , this ) . show ( getFragmentManager ( ) , org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . java.lang.String ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { return org.onebusaway.android.map.googlemapsv2.MapModeController . getMode ( ) ; } return null ; } 
@ java.lang.Override public void void ( java.lang.String java.lang.String , Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { java.lang.String java.lang.String = java.lang.String ( ) ; if ( java.lang.String != null && java.lang.String . boolean ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.MapModeController . setState ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; return; } if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . destroy ( ) ; } if ( org.onebusaway.android.map.googlemapsv2.StopOverlay != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay . clear ( false ) ; } if ( MapParams . MODE_ROUTE . equals ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.MapModeController = new RouteMapController ( this ) ; } else if ( MapParams . MODE_STOP . equals ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.MapModeController = new StopMapController ( this ) ; } else if ( MapParams . MODE_DIRECTIONS . equals ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.MapModeController = new DirectionsMapController ( this ) ; } org.onebusaway.android.map.googlemapsv2.MapModeController . setState ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; org.onebusaway.android.map.googlemapsv2.MapModeController . onResume ( ) ; } 
@ java.lang.Override public MapModeController . MapModeController.ObaMapView MapModeController.ObaMapView ( ) { return this ; } 
@ java.lang.Override public int int ( Location org.onebusaway.android.map.googlemapsv2.Location , java.lang.Float java.lang.Float ) { if ( org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay == null ) { return - NUMBER ; } return org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay . addMarker ( org.onebusaway.android.map.googlemapsv2.Location , java.lang.Float ) ; } 
@ java.lang.Override public void void ( int int ) { if ( org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay == null ) { return; } org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay . removeMarker ( int ) ; } 
@ java.lang.Override public void void ( java.lang.Integer java.lang.Integer , java.lang.Integer java.lang.Integer , java.lang.Integer java.lang.Integer , java.lang.Integer java.lang.Integer ) { if ( java.lang.Integer != null ) { int = java.lang.Integer ; } if ( java.lang.Integer != null ) { int = java.lang.Integer ; } if ( java.lang.Integer != null ) { int = java.lang.Integer ; } if ( java.lang.Integer != null ) { int = java.lang.Integer ; } if ( com.amazon.geo.mapsv2.AmazonMap != null ) { com.amazon.geo.mapsv2.AmazonMap . setPadding ( int , int , int , int ) ; } } 
@ java.lang.Override public void void ( boolean boolean ) { if ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener != null ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener . void ( boolean ) ; } } 
@ java.lang.Override public void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , ObaReferences org.onebusaway.android.map.googlemapsv2.ObaReferences ) { if ( boolean ( ) && java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay . populateStops ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , org.onebusaway.android.map.googlemapsv2.ObaReferences ) ; } } 
@ java.lang.Override public void void ( ) { java.lang.String java.lang.String = Application . get ( ) . getCustomApiUrl ( ) ; if ( boolean && ( Application . get ( ) . getCurrentRegion ( ) != null || ! TextUtils . isEmpty ( java.lang.String ) ) ) { if ( boolean && UIUtils . canManageDialog ( getActivity ( ) ) ) { void ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . int ) ; } } } 
@ java.lang.Override public void void ( boolean boolean ) { if ( ! isAdded ( ) ) { return; } Location org.onebusaway.android.map.googlemapsv2.Location = Application . getLastKnownLocation ( getActivity ( ) , org.onebusaway.android.map.googlemapsv2.LocationHelper . getGoogleApiClient ( ) ) ; Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.Location ( ) ; if ( boolean && ( org.onebusaway.android.map.googlemapsv2.Location == null || ( org.onebusaway.android.map.googlemapsv2.Location != null && org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) == NUMBER && org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) == NUMBER ) ) ) { void ( ) ; } } 
public void void ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener = org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener ; } 
public void void ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener = org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener ; } 
public void void ( final ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , final java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , final Location org.onebusaway.android.map.googlemapsv2.Location ) { org.onebusaway.android.map.googlemapsv2.Handler . post ( new java.lang.Runnable ( ) { public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null ) { java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) ; } else { java.lang.String = null ; } if ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener != null ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener . void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , org.onebusaway.android.map.googlemapsv2.Location ) ; } } } ) ; } 
public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null ) { java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) ; } else { java.lang.String = null ; } if ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener != null ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener . void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , org.onebusaway.android.map.googlemapsv2.Location ) ; } } 
@ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public boolean boolean ( boolean boolean , boolean boolean ) { if ( ! LocationUtils . isLocationEnabled ( getActivity ( ) ) && boolean && UIUtils . canManageDialog ( getActivity ( ) ) ) { SharedPreferences org.onebusaway.android.map.googlemapsv2.SharedPreferences = Application . getPrefs ( ) ; if ( ! org.onebusaway.android.map.googlemapsv2.SharedPreferences . getBoolean ( getString ( R . string . preference_key_never_show_location_dialog ) , false ) ) { void ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . int ) ; } return false ; } GoogleApiClient org.onebusaway.android.map.googlemapsv2.GoogleApiClient = null ; if ( org.onebusaway.android.map.googlemapsv2.LocationHelper != null ) { org.onebusaway.android.map.googlemapsv2.GoogleApiClient = org.onebusaway.android.map.googlemapsv2.LocationHelper . getGoogleApiClient ( ) ; } Location org.onebusaway.android.map.googlemapsv2.Location = Application . getLastKnownLocation ( getActivity ( ) , org.onebusaway.android.map.googlemapsv2.GoogleApiClient ) ; if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { Toast . makeText ( getActivity ( ) , getResources ( ) . getString ( R . string . main_waiting_for_location ) , Toast . LENGTH_SHORT ) . show ( ) ; return false ; } void ( org.onebusaway.android.map.googlemapsv2.Location , boolean , boolean ) ; return true ; } 
private void void ( Location org.onebusaway.android.map.googlemapsv2.Location , boolean boolean , boolean boolean ) { if ( com.amazon.geo.mapsv2.AmazonMap != null ) { CameraPosition . CameraPosition CameraPosition.Builder = new CameraPosition . CameraPosition ( ) . target ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; if ( boolean ) { CameraPosition.Builder . zoom ( float ) ; } else { CameraPosition.Builder . zoom ( com.amazon.geo.mapsv2.AmazonMap . getCameraPosition ( ) . zoom ) ; } if ( boolean ) { com.amazon.geo.mapsv2.AmazonMap . animateCamera ( CameraUpdateFactory . newCameraPosition ( CameraPosition.Builder . build ( ) ) ) ; } else { com.amazon.geo.mapsv2.AmazonMap . moveCamera ( CameraUpdateFactory . newCameraPosition ( CameraPosition.Builder . build ( ) ) ) ; } } if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onLocation ( ) ; } } 
public void void ( ) { ObaRegion org.onebusaway.android.map.googlemapsv2.ObaRegion = Application . get ( ) . getCurrentRegion ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaRegion != null && com.amazon.geo.mapsv2.AmazonMap != null ) { LatLngBounds org.onebusaway.android.map.googlemapsv2.LatLngBounds = MapHelpV2 . getRegionBounds ( org.onebusaway.android.map.googlemapsv2.ObaRegion ) ; int int = getResources ( ) . getDisplayMetrics ( ) . widthPixels ; int int = getResources ( ) . getDisplayMetrics ( ) . heightPixels ; int int = NUMBER ; com.amazon.geo.mapsv2.AmazonMap . animateCamera ( ( CameraUpdateFactory . newLatLngBounds ( org.onebusaway.android.map.googlemapsv2.LatLngBounds , int , int , int ) ) ) ; } } 
public static void void ( ObaResponse org.onebusaway.android.map.googlemapsv2.ObaResponse ) { Context org.onebusaway.android.map.googlemapsv2.Context = Application . get ( ) . getApplicationContext ( ) ; int int ; if ( org.onebusaway.android.map.googlemapsv2.ObaResponse != null ) { int = org.onebusaway.android.map.googlemapsv2.ObaResponse . getCode ( ) ; } else { int = ObaApi . OBA_INTERNAL_ERROR ; } if ( UIUtils . canManageDialog ( org.onebusaway.android.map.googlemapsv2.Context ) ) { Toast . makeText ( org.onebusaway.android.map.googlemapsv2.Context , org.onebusaway.android.map.googlemapsv2.Context . getString ( UIUtils . getMapErrorString ( org.onebusaway.android.map.googlemapsv2.Context , int ) ) , Toast . LENGTH_LONG ) . show ( ) ; } } 
@ java.lang.Override public void void ( float float ) { if ( com.amazon.geo.mapsv2.AmazonMap != null ) { com.amazon.geo.mapsv2.AmazonMap . moveCamera ( CameraUpdateFactory . zoomTo ( float ) ) ; } } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.Location org.onebusaway.android.map.googlemapsv2.Location ( ) { if ( com.amazon.geo.mapsv2.AmazonMap != null ) { LatLng org.onebusaway.android.map.googlemapsv2.LatLng = com.amazon.geo.mapsv2.AmazonMap . getCameraPosition ( ) . target ; if ( org.onebusaway.android.map.googlemapsv2.LatLng == null || org.onebusaway.android.map.googlemapsv2.LatLng != org.onebusaway.android.map.googlemapsv2.LatLng ) { org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.LatLng ; org.onebusaway.android.map.googlemapsv2.Location = MapHelpV2 . makeLocation ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } return org.onebusaway.android.map.googlemapsv2.Location ; } 
@ java.lang.Override public void void ( Location org.onebusaway.android.map.googlemapsv2.Location , boolean boolean , boolean boolean ) { if ( com.amazon.geo.mapsv2.AmazonMap != null ) { CameraPosition org.onebusaway.android.map.googlemapsv2.CameraPosition = com.amazon.geo.mapsv2.AmazonMap . getCameraPosition ( ) ; LatLng org.onebusaway.android.map.googlemapsv2.LatLng = MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ; LatLng org.onebusaway.android.map.googlemapsv2.LatLng ; if ( boolean ( ) && boolean ) { double double = NUMBER ; double double = ( double ( ) * double ) / NUMBER ; org.onebusaway.android.map.googlemapsv2.LatLng = new LatLng ( target . latitude - double , target . longitude ) ; org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.LatLng ; } if ( boolean ) { com.amazon.geo.mapsv2.AmazonMap . animateCamera ( CameraUpdateFactory . newCameraPosition ( new CameraPosition . CameraPosition ( ) . target ( org.onebusaway.android.map.googlemapsv2.LatLng ) . zoom ( cp . zoom ) . bearing ( cp . bearing ) . tilt ( cp . tilt ) . build ( ) ) ) ; } else { com.amazon.geo.mapsv2.AmazonMap . moveCamera ( CameraUpdateFactory . newCameraPosition ( new CameraPosition . CameraPosition ( ) . target ( org.onebusaway.android.map.googlemapsv2.LatLng ) . zoom ( cp . zoom ) . bearing ( cp . bearing ) . tilt ( cp . tilt ) . build ( ) ) ) ; } } } 
@ java.lang.Override public double double ( ) { VisibleRegion org.onebusaway.android.map.googlemapsv2.VisibleRegion = com.amazon.geo.mapsv2.AmazonMap . getProjection ( ) . getVisibleRegion ( ) ; return java.lang.Math . int ( vr . latLngBounds . northeast . latitude - vr . latLngBounds . southwest . latitude ) ; } 
@ java.lang.Override public double double ( ) { VisibleRegion org.onebusaway.android.map.googlemapsv2.VisibleRegion = com.amazon.geo.mapsv2.AmazonMap . getProjection ( ) . getVisibleRegion ( ) ; return java.lang.Math . int ( vr . latLngBounds . northeast . longitude - vr . latLngBounds . southwest . longitude ) ; } 
@ java.lang.Override public float float ( ) { return com.amazon.geo.mapsv2.AmazonMap . getCameraPosition ( ) . zoom ; } 
@ java.lang.Override public void void ( int int , ObaShape [] org.onebusaway.android.map.googlemapsv2.ObaShape[] , boolean boolean ) { if ( com.amazon.geo.mapsv2.AmazonMap != null ) { if ( boolean ) { java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . clear ( ) ; } PolylineOptions org.onebusaway.android.map.googlemapsv2.PolylineOptions ; int int = NUMBER ; for ( ObaShape org.onebusaway.android.map.googlemapsv2.ObaShape : org.onebusaway.android.map.googlemapsv2.ObaShape[] ) { org.onebusaway.android.map.googlemapsv2.PolylineOptions = new PolylineOptions ( ) ; org.onebusaway.android.map.googlemapsv2.PolylineOptions . color ( int ) ; for ( Location org.onebusaway.android.map.googlemapsv2.Location : org.onebusaway.android.map.googlemapsv2.ObaShape . getPoints ( ) ) { org.onebusaway.android.map.googlemapsv2.PolylineOptions . add ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; } java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . add ( com.amazon.geo.mapsv2.AmazonMap . addPolyline ( org.onebusaway.android.map.googlemapsv2.PolylineOptions ) ) ; int += org.onebusaway.android.map.googlemapsv2.PolylineOptions . getPoints ( ) . size ( ) ; } Log . d ( java.lang.String , STRING + int ) ; } } 
@ java.lang.Override public void void ( int int , ObaShape [] org.onebusaway.android.map.googlemapsv2.ObaShape[] ) { void ( int , org.onebusaway.android.map.googlemapsv2.ObaShape[] , true ) ; } 
@ java.lang.Override public void void ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { void ( ) ; if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay . updateVehicles ( java.util.HashSet<java.lang.String> , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ; } } 
@ java.lang.Override public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay . clear ( ) ; } } 
@ java.lang.Override public void void ( ) { if ( com.amazon.geo.mapsv2.AmazonMap != null ) { if ( ! java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . isEmpty ( ) ) { LatLngBounds . LatLngBounds LatLngBounds.Builder = new LatLngBounds . LatLngBounds ( ) ; for ( Polyline org.onebusaway.android.map.googlemapsv2.Polyline : java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> ) { for ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng : org.onebusaway.android.map.googlemapsv2.Polyline . getPoints ( ) ) { LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } Activity org.onebusaway.android.map.googlemapsv2.Activity = getActivity ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Activity != null ) { int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Activity , float ) ; com.amazon.geo.mapsv2.AmazonMap . moveCamera ( ( CameraUpdateFactory . newLatLngBounds ( LatLngBounds.Builder . build ( ) , int ) ) ) ; } } else { Toast . makeText ( getActivity ( ) , getString ( R . string . route_info_no_shape_data ) , Toast . LENGTH_SHORT ) . show ( ) ; } } } 
@ java.lang.Override public void void ( ) { if ( com.amazon.geo.mapsv2.AmazonMap != null ) { if ( ! java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . isEmpty ( ) ) { LatLngBounds . LatLngBounds LatLngBounds.Builder = new LatLngBounds . LatLngBounds ( ) ; for ( Polyline org.onebusaway.android.map.googlemapsv2.Polyline : java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> ) { for ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng : org.onebusaway.android.map.googlemapsv2.Polyline . getPoints ( ) ) { LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } Activity org.onebusaway.android.map.googlemapsv2.Activity = getActivity ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Activity != null ) { int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Activity , float ) ; com.amazon.geo.mapsv2.AmazonMap . moveCamera ( ( CameraUpdateFactory . newLatLngBounds ( LatLngBounds.Builder . build ( ) , getResources ( ) . getDisplayMetrics ( ) . widthPixels , getResources ( ) . getDisplayMetrics ( ) . heightPixels , int ) ) ) ; } } } } 
@ java.lang.Override public void void ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { if ( com.amazon.geo.mapsv2.AmazonMap == null ) { return; } LatLng org.onebusaway.android.map.googlemapsv2.LatLng = MapHelpV2 . getClosestVehicle ( org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse , java.util.HashSet<java.lang.String> , org.onebusaway.android.map.googlemapsv2.Location ( ) ) ; LatLngBounds org.onebusaway.android.map.googlemapsv2.LatLngBounds = com.amazon.geo.mapsv2.AmazonMap . getProjection ( ) . getVisibleRegion ( ) . latLngBounds ; if ( org.onebusaway.android.map.googlemapsv2.LatLng == null || org.onebusaway.android.map.googlemapsv2.LatLngBounds . contains ( org.onebusaway.android.map.googlemapsv2.LatLng ) ) { return; } LatLngBounds . LatLngBounds LatLngBounds.Builder = new LatLngBounds . LatLngBounds ( ) ; LatLngBounds.Builder . include ( visibleBounds . northeast ) ; LatLngBounds.Builder . include ( visibleBounds . southwest ) ; LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; Activity org.onebusaway.android.map.googlemapsv2.Activity = getActivity ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Activity != null ) { int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Activity , float ) ; com.amazon.geo.mapsv2.AmazonMap . animateCamera ( CameraUpdateFactory . newLatLngBounds ( LatLngBounds.Builder . build ( ) , int ) ) ; } } 
@ java.lang.Override public void void ( ) { for ( Polyline org.onebusaway.android.map.googlemapsv2.Polyline : java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> ) { org.onebusaway.android.map.googlemapsv2.Polyline . remove ( ) ; } java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . clear ( ) ; } 
@ java.lang.Override public void void ( boolean boolean ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay . clear ( boolean ) ; } } 
@ java.lang.Override public boolean boolean ( ) { return true ; } 
@ java.lang.Override public void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { if ( boolean ( ) ) { org.onebusaway.android.map.googlemapsv2.StopOverlay . setFocus ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } } 
@ java.lang.Override public void void ( CameraPosition org.onebusaway.android.map.googlemapsv2.CameraPosition ) { Log . d ( java.lang.String , STRING ) ; if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . notifyMapChanged ( ) ; } } 
@ java.lang.Override public void void ( OnLocationChangedListener org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener ) { org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener = org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener ; } 
@ java.lang.Override public void void ( ) { org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener = null ; } 
public void void ( Location org.onebusaway.android.map.googlemapsv2.Location ) { if ( org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener != null ) { org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener . onLocationChanged ( org.onebusaway.android.map.googlemapsv2.Location ) ; } } 
@ java.lang.Override public void void ( ) { } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; } 
static org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment ( int int , org.onebusaway.android.map.googlemapsv2.BaseMapFragment org.onebusaway.android.map.googlemapsv2.BaseMapFragment ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment = org.onebusaway.android.map.googlemapsv2.BaseMapFragment ; org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment = new org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment ( ) ; Bundle org.onebusaway.android.map.googlemapsv2.Bundle = new Bundle ( ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( java.lang.String , int ) ; org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . setArguments ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . setCancelable ( false ) ; return org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.Dialog org.onebusaway.android.map.googlemapsv2.Dialog ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { int = getArguments ( ) . getInt ( java.lang.String ) ; switch ( int ) { case int : return org.onebusaway.android.map.googlemapsv2.Dialog ( ) ; case int : return org.onebusaway.android.map.googlemapsv2.Dialog ( ) ; default: throw new java.lang.IllegalArgumentException ( STRING + java.lang.String ) ; } } 
private org.onebusaway.android.map.googlemapsv2.Dialog org.onebusaway.android.map.googlemapsv2.Dialog ( ) { Drawable org.onebusaway.android.map.googlemapsv2.Drawable = getResources ( ) . getDrawable ( android . R . drawable . ic_dialog_map ) ; DrawableCompat . setTint ( org.onebusaway.android.map.googlemapsv2.Drawable , getResources ( ) . getColor ( R . color . theme_primary ) ) ; AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) . setTitle ( R . string . main_outofrange_title ) . setIcon ( org.onebusaway.android.map.googlemapsv2.Drawable ) . setCancelable ( false ) . setMessage ( getString ( R . string . main_outofrange , Application . get ( ) . getCurrentRegion ( ) != null ? Application . get ( ) . getCurrentRegion ( ) . getName ( ) : STRING ) ) . setPositiveButton ( R . string . main_outofrange_yes , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . void ( ) ; } } ) . setNegativeButton ( R . string . main_outofrange_no , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . boolean = false ; } } ) ; return AlertDialog.Builder . create ( ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . void ( ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . boolean = false ; } 
@ java.lang.SuppressWarnings ( STRING ) private org.onebusaway.android.map.googlemapsv2.Dialog org.onebusaway.android.map.googlemapsv2.Dialog ( ) { View org.onebusaway.android.map.googlemapsv2.View = getActivity ( ) . getLayoutInflater ( ) . inflate ( R . layout . no_location_dialog , null ) ; CheckBox org.onebusaway.android.map.googlemapsv2.CheckBox = ( CheckBox ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . location_never_ask_again ) ; org.onebusaway.android.map.googlemapsv2.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton org.onebusaway.android.map.googlemapsv2.CompoundButton , boolean boolean ) { PreferenceUtils . saveBoolean ( getString ( R . string . preference_key_never_show_location_dialog ) , boolean ) ; } } ) ; Drawable org.onebusaway.android.map.googlemapsv2.Drawable = getResources ( ) . getDrawable ( android . R . drawable . ic_dialog_map ) ; DrawableCompat . setTint ( org.onebusaway.android.map.googlemapsv2.Drawable , getResources ( ) . getColor ( R . color . theme_primary ) ) ; AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) . setTitle ( R . string . main_nolocation_title ) . setIcon ( org.onebusaway.android.map.googlemapsv2.Drawable ) . setCancelable ( false ) . setView ( org.onebusaway.android.map.googlemapsv2.View ) . setPositiveButton ( R . string . rt_yes , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { startActivityForResult ( new Intent ( Settings . ACTION_LOCATION_SOURCE_SETTINGS ) , int ) ; } } ) . setNegativeButton ( R . string . rt_no , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . org.onebusaway.android.map.googlemapsv2.MapModeController . onLocation ( ) ; } } ) ; return AlertDialog.Builder . create ( ) ; } 
@ java.lang.Override public void void ( CompoundButton org.onebusaway.android.map.googlemapsv2.CompoundButton , boolean boolean ) { PreferenceUtils . saveBoolean ( getString ( R . string . preference_key_never_show_location_dialog ) , boolean ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { startActivityForResult ( new Intent ( Settings . ACTION_LOCATION_SOURCE_SETTINGS ) , int ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . org.onebusaway.android.map.googlemapsv2.MapModeController . onLocation ( ) ; } 
public static final org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( double double , double double ) { return new LatLng ( double , double ) ; } 
public static final org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( Location org.onebusaway.android.map.googlemapsv2.Location ) { return org.onebusaway.android.map.googlemapsv2.LatLng ( org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) , org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) ) ; } 
public static final org.onebusaway.android.map.googlemapsv2.Location org.onebusaway.android.map.googlemapsv2.Location ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { Location org.onebusaway.android.map.googlemapsv2.Location = new Location ( STRING ) ; org.onebusaway.android.map.googlemapsv2.Location . setLatitude ( latLng . latitude ) ; org.onebusaway.android.map.googlemapsv2.Location . setLongitude ( latLng . longitude ) ; return org.onebusaway.android.map.googlemapsv2.Location ; } 
public static org.onebusaway.android.map.googlemapsv2.LatLngBounds org.onebusaway.android.map.googlemapsv2.LatLngBounds ( ObaRegion org.onebusaway.android.map.googlemapsv2.ObaRegion ) { if ( org.onebusaway.android.map.googlemapsv2.ObaRegion == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } double double = NUMBER ; double double = - NUMBER ; double double = NUMBER ; double double = - NUMBER ; for ( ObaRegion . ObaRegion ObaRegion.Bounds : org.onebusaway.android.map.googlemapsv2.ObaRegion . getBounds ( ) ) { double double = ObaRegion.Bounds . getLat ( ) ; double double = ObaRegion.Bounds . getLatSpan ( ) / NUMBER ; double double = double - double ; double double = double + double ; if ( double < double ) { double = double ; } if ( double > double ) { double = double ; } double double = ObaRegion.Bounds . getLon ( ) ; double double = ObaRegion.Bounds . getLonSpan ( ) / NUMBER ; double double = double - double ; double double = double + double ; if ( double < double ) { double = double ; } if ( double > double ) { double = double ; } } LatLngBounds . LatLngBounds LatLngBounds.Builder = new LatLngBounds . LatLngBounds ( ) ; LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.MapHelpV2 . org.onebusaway.android.map.googlemapsv2.LatLng ( double , double ) ) ; LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.MapHelpV2 . org.onebusaway.android.map.googlemapsv2.LatLng ( double , double ) ) ; return LatLngBounds.Builder . build ( ) ; } 
public static boolean boolean ( Context org.onebusaway.android.map.googlemapsv2.Context ) { return ProprietaryMapHelpV2 . isMapsInstalled ( org.onebusaway.android.map.googlemapsv2.Context ) ; } 
public static void void ( final Context org.onebusaway.android.map.googlemapsv2.Context ) { ProprietaryMapHelpV2 . promptUserInstallMaps ( org.onebusaway.android.map.googlemapsv2.Context ) ; } 
public static org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse , java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , Location org.onebusaway.android.map.googlemapsv2.Location ) { if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { return null ; } float float = java.lang.Float . float ; ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = null ; Location org.onebusaway.android.map.googlemapsv2.Location = null ; java.lang.Float java.lang.Float ; for ( ObaTripDetails org.onebusaway.android.map.googlemapsv2.ObaTripDetails : org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrips ( ) ) { Location org.onebusaway.android.map.googlemapsv2.Location ; ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.ObaTripDetails . getStatus ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus == null ) { continue; } java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrip ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) . getRouteId ( ) ; if ( ! java.util.HashSet<java.lang.String> . boolean ( java.lang.String ) ) { continue; } if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastKnownLocation ( ) != null ) { org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastKnownLocation ( ) ; } else if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getPosition ( ) != null ) { org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getPosition ( ) ; } else { continue; } java.lang.Float = org.onebusaway.android.map.googlemapsv2.Location . distanceTo ( org.onebusaway.android.map.googlemapsv2.Location ) ; if ( java.lang.Float < float ) { org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.Location ; org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.ObaTripStatus ; float = java.lang.Float ; } } if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { return null ; } Log . d ( java.lang.String , STRING + org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getVehicleId ( ) + STRING + STRING + org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) + STRING + org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) + STRING + org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) ) ; return org.onebusaway.android.map.googlemapsv2.LatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ; } 
public static boolean boolean ( Context org.onebusaway.android.map.googlemapsv2.Context ) { int int = AmazonMapsRuntimeUtil . isAmazonMapsRuntimeAvailable ( org.onebusaway.android.map.googlemapsv2.Context ) ; return int == ConnectionResult . SUCCESS ; } 
public static void void ( final Context org.onebusaway.android.map.googlemapsv2.Context ) { if ( org.onebusaway.android.map.googlemapsv2.Context instanceof Activity ) { Activity org.onebusaway.android.map.googlemapsv2.Activity = ( Activity ) org.onebusaway.android.map.googlemapsv2.Context ; int int = AmazonMapsRuntimeUtil . isAmazonMapsRuntimeAvailable ( org.onebusaway.android.map.googlemapsv2.Context ) ; AmazonMapsRuntimeUtil . getErrorDialog ( int , org.onebusaway.android.map.googlemapsv2.Activity , NUMBER ) . show ( ) ; } } 
public static org.onebusaway.android.map.googlemapsv2.CustomAddress org.onebusaway.android.map.googlemapsv2.CustomAddress ( Context org.onebusaway.android.map.googlemapsv2.Context , Intent org.onebusaway.android.map.googlemapsv2.Intent ) { return null ; } 
public void ( int int , Fragment org.onebusaway.android.map.googlemapsv2.Fragment , ObaRegion org.onebusaway.android.map.googlemapsv2.ObaRegion ) { int = int ; org.onebusaway.android.map.googlemapsv2.Fragment = org.onebusaway.android.map.googlemapsv2.Fragment ; org.onebusaway.android.map.googlemapsv2.ObaRegion = org.onebusaway.android.map.googlemapsv2.ObaRegion ; } 
@ java.lang.Override public void void ( View org.onebusaway.android.map.googlemapsv2.View ) { } 
public static void void ( Marker org.onebusaway.android.map.googlemapsv2.Marker , float float ) { } 
public void ( AmazonMap org.onebusaway.android.map.googlemapsv2.AmazonMap ) { org.onebusaway.android.map.googlemapsv2.AmazonMap = org.onebusaway.android.map.googlemapsv2.AmazonMap ; } 
public synchronized int int ( Location org.onebusaway.android.map.googlemapsv2.Location , java.lang.Float java.lang.Float ) { MarkerOptions org.onebusaway.android.map.googlemapsv2.MarkerOptions = new MarkerOptions ( ) . position ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; if ( java.lang.Float != null ) { org.onebusaway.android.map.googlemapsv2.MarkerOptions . icon ( BitmapDescriptorFactory . defaultMarker ( java.lang.Float ) ) ; } Marker org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.AmazonMap . addMarker ( org.onebusaway.android.map.googlemapsv2.MarkerOptions ) ; org.onebusaway.android.map.googlemapsv2.SparseArray<org.onebusaway.android.map.googlemapsv2.Marker> . put ( int , org.onebusaway.android.map.googlemapsv2.Marker ) ; int int = int ; int ++ ; return int ; } 
public void void ( int int ) { Marker org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.SparseArray<org.onebusaway.android.map.googlemapsv2.Marker> . get ( int ) ; if ( org.onebusaway.android.map.googlemapsv2.Marker != null ) { org.onebusaway.android.map.googlemapsv2.Marker . remove ( ) ; org.onebusaway.android.map.googlemapsv2.SparseArray<org.onebusaway.android.map.googlemapsv2.Marker> . remove ( int ) ; } } 
void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , Location org.onebusaway.android.map.googlemapsv2.Location ); 
public void ( Activity org.onebusaway.android.map.googlemapsv2.Activity , AmazonMap org.onebusaway.android.map.googlemapsv2.AmazonMap ) { org.onebusaway.android.map.googlemapsv2.Activity = org.onebusaway.android.map.googlemapsv2.Activity ; org.onebusaway.android.map.googlemapsv2.AmazonMap = org.onebusaway.android.map.googlemapsv2.AmazonMap ; void ( ) ; org.onebusaway.android.map.googlemapsv2.AmazonMap . setOnMarkerClickListener ( this ) ; org.onebusaway.android.map.googlemapsv2.AmazonMap . setOnMapClickListener ( this ) ; } 
public void void ( org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener = org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener ; } 
public synchronized void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , ObaReferences org.onebusaway.android.map.googlemapsv2.ObaReferences ) { void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , org.onebusaway.android.map.googlemapsv2.ObaReferences . getRoutes ( ) ) ; } 
public synchronized void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } 
private void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { void ( ) ; org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } 
public synchronized int int ( ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData != null ) { return org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . int ( ) ; } else { return NUMBER ; } } 
public synchronized void void ( boolean boolean ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . void ( boolean ) ; } } 
private static final void void ( ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; int = org.onebusaway.android.map.googlemapsv2.Resources . getDimensionPixelSize ( R . dimen . map_stop_shadow_size_6 ) ; float = int / NUMBER ; float = int / NUMBER ; float float = int / NUMBER ; float = float - float ; float = ( float / ( int + float ) ) * NUMBER ; org.onebusaway.android.map.googlemapsv2.Paint = new Paint ( ) ; org.onebusaway.android.map.googlemapsv2.Paint . setColor ( Color . WHITE ) ; org.onebusaway.android.map.googlemapsv2.Paint . setStyle ( Paint . Style . STROKE ) ; org.onebusaway.android.map.googlemapsv2.Paint . setStrokeWidth ( NUMBER ) ; org.onebusaway.android.map.googlemapsv2.Paint . setAntiAlias ( true ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String java.lang.String ) throws java.lang.NullPointerException { if ( java.lang.String == null ) { throw new java.lang.IllegalArgumentException ( java.lang.String ) ; } Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; Context org.onebusaway.android.map.googlemapsv2.Context = Application . get ( ) ; java.lang.Float java.lang.Float = null ; Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ; Canvas org.onebusaway.android.map.googlemapsv2.Canvas ; Drawable org.onebusaway.android.map.googlemapsv2.Drawable ; java.lang.Float java.lang.Float = null , java.lang.Float = null ; Paint org.onebusaway.android.map.googlemapsv2.Paint = new Paint ( ) ; org.onebusaway.android.map.googlemapsv2.Paint . setStyle ( Paint . Style . FILL ) ; org.onebusaway.android.map.googlemapsv2.Paint . setAntiAlias ( true ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( int , int , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( int , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , ( int ) float , int , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER , float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( ( int ) float , ( int ) float , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( NUMBER , NUMBER , float , float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = int / NUMBER + float / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER - float / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , int , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( ( int ) float , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER , float , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( ( int ) float , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , int ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) , float , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER - float / NUMBER ; java.lang.Float = int / NUMBER + float / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( int , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , ( int ) ( org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - float ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , NUMBER , int , int ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) - float , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = ( int + float / NUMBER ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , int , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , NUMBER , int , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) - float , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , ( int ) float , int , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) - float , float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = ( float ) int / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - ( float ) int / NUMBER ; } else { throw new java.lang.IllegalArgumentException ( java.lang.String ) ; } org.onebusaway.android.map.googlemapsv2.Drawable . draw ( org.onebusaway.android.map.googlemapsv2.Canvas ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { return org.onebusaway.android.map.googlemapsv2.Bitmap ; } final float float = int / NUMBER ; Path org.onebusaway.android.map.googlemapsv2.Path = new Path ( ) ; float float = NUMBER , float = NUMBER ; float float = NUMBER , float = NUMBER ; float float = NUMBER , float = NUMBER ; float float = NUMBER , float = NUMBER ; if ( java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) ) { float = int / NUMBER ; float = NUMBER ; float = ( int / NUMBER ) - ( float / NUMBER ) ; float = float ; float = int / NUMBER ; float = float - float ; float = ( int / NUMBER ) + ( float / NUMBER ) ; float = float ; } else if ( java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) ) { float = NUMBER ; float = int / NUMBER ; float = float ; float = ( int / NUMBER ) - ( float / NUMBER ) ; float = float - float ; float = int / NUMBER ; float = float ; float = ( int / NUMBER ) + ( float / NUMBER ) ; } org.onebusaway.android.map.googlemapsv2.Path . setFillType ( Path . FillType . EVEN_ODD ) ; org.onebusaway.android.map.googlemapsv2.Path . moveTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . lineTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . lineTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . lineTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . lineTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . close ( ) ; Matrix org.onebusaway.android.map.googlemapsv2.Matrix = new Matrix ( ) ; org.onebusaway.android.map.googlemapsv2.Matrix . postRotate ( java.lang.Float , java.lang.Float , java.lang.Float ) ; org.onebusaway.android.map.googlemapsv2.Path . transform ( org.onebusaway.android.map.googlemapsv2.Matrix ) ; org.onebusaway.android.map.googlemapsv2.Canvas . drawPath ( org.onebusaway.android.map.googlemapsv2.Path , org.onebusaway.android.map.googlemapsv2.Paint ) ; org.onebusaway.android.map.googlemapsv2.Canvas . drawPath ( org.onebusaway.android.map.googlemapsv2.Path , org.onebusaway.android.map.googlemapsv2.Paint ) ; return org.onebusaway.android.map.googlemapsv2.Bitmap ; } 
private static float float ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else { return NUMBER ; } } 
private static float float ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else { return NUMBER ; } } 
private static org.onebusaway.android.map.googlemapsv2.BitmapDescriptor org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } } 
public org.onebusaway.android.map.googlemapsv2.ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ( ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData != null ) { return org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaStop ( ) ; } return null ; } 
public void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { void ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaStop == null ) { void ( null ) ; return; } if ( ! org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . boolean ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ) { java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> = new java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > ( ) ; java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> . add ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ; void ( java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } void ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ; } 
@ java.lang.Override public boolean boolean ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { long long = java.lang.Long . long , long = java.lang.Long . long ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) { long = SystemClock . elapsedRealtimeNanos ( ) ; } ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop = org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaStop ( org.onebusaway.android.map.googlemapsv2.Marker ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) { long = SystemClock . elapsedRealtimeNanos ( ) ; Log . d ( java.lang.String , STRING + java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( long - long , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) + STRING ) ; } if ( org.onebusaway.android.map.googlemapsv2.ObaStop == null ) { return false ; } if ( BuildConfig . DEBUG ) { Toast . makeText ( org.onebusaway.android.map.googlemapsv2.Activity , org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } void ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ; Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaStop . getLocation ( ) ; Location org.onebusaway.android.map.googlemapsv2.Location = Application . getLastKnownLocation ( org.onebusaway.android.map.googlemapsv2.Activity , null ) ; ObaAnalytics . trackBusStopDistance ( org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) , org.onebusaway.android.map.googlemapsv2.Location , org.onebusaway.android.map.googlemapsv2.Location ) ; return true ; } 
private void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . void ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> = org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> ( ) ; org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener . void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , org.onebusaway.android.map.googlemapsv2.ObaStop . getLocation ( ) ) ; } 
@ java.lang.Override public void void ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { Log . d ( java.lang.String , STRING ) ; void ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } 
private void void ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaStop ( ) != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . void ( ) ; } Location org.onebusaway.android.map.googlemapsv2.Location = null ; if ( org.onebusaway.android.map.googlemapsv2.LatLng != null ) { org.onebusaway.android.map.googlemapsv2.Location = MapHelpV2 . makeLocation ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener . void ( null , null , org.onebusaway.android.map.googlemapsv2.Location ) ; } 
private void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData == null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData = new org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData ( ) ; } } 
void ( ) { java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = new java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> = new java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> < Marker , ObaStop > ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> = new java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > ( ) ; java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> = new java.util.LinkedList<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > ( ) ; } 
synchronized void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { int int = NUMBER ; if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) >= int ) { Log . d ( java.lang.String , STRING + int + STRING ) ; void ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . clear ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> . clear ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null && java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> != null ) { void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; int ++ ; } } for ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop : java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> ) { if ( ! java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . containsKey ( org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) ) ) { void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; int ++ ; } } Log . d ( java.lang.String , STRING + int + STRING + java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) ) ; } 
private void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { Marker org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.AmazonMap . addMarker ( new MarkerOptions ( ) . position ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.ObaStop . getLocation ( ) ) ) . icon ( org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( org.onebusaway.android.map.googlemapsv2.ObaStop . getDirection ( ) ) ) . flat ( true ) . anchor ( float ( org.onebusaway.android.map.googlemapsv2.ObaStop . getDirection ( ) ) , float ( org.onebusaway.android.map.googlemapsv2.ObaStop . getDirection ( ) ) ) ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . put ( org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) , org.onebusaway.android.map.googlemapsv2.Marker ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> . put ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.ObaStop ) ; for ( ObaRoute org.onebusaway.android.map.googlemapsv2.ObaRoute : java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { if ( ! java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> . containsKey ( org.onebusaway.android.map.googlemapsv2.ObaRoute . getId ( ) ) ) { java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> . put ( org.onebusaway.android.map.googlemapsv2.ObaRoute . getId ( ) , org.onebusaway.android.map.googlemapsv2.ObaRoute ) ; } } } 
synchronized org.onebusaway.android.map.googlemapsv2.ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { return java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> . get ( org.onebusaway.android.map.googlemapsv2.Marker ) ; } 
synchronized boolean boolean ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ) { if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null ) { return boolean ( org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) ) ; } else { return false ; } } 
synchronized boolean boolean ( java.lang.String java.lang.String ) { if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> != null ) { return java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . containsKey ( java.lang.String ) ; } else { return false ; } } 
synchronized java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> ( ) { return new java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } 
void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ) { if ( org.onebusaway.android.map.googlemapsv2.Marker != null ) { org.onebusaway.android.map.googlemapsv2.Marker . remove ( ) ; } org.onebusaway.android.map.googlemapsv2.ObaStop = org.onebusaway.android.map.googlemapsv2.ObaStop ; java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> . clear ( ) ; java.lang.String [] java.lang.String[] = org.onebusaway.android.map.googlemapsv2.ObaStop . getRouteIds ( ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { ObaRoute org.onebusaway.android.map.googlemapsv2.ObaRoute = java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> . get ( java.lang.String[] [ int ] ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaRoute != null ) { java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> . add ( org.onebusaway.android.map.googlemapsv2.ObaRoute ) ; } } LatLng org.onebusaway.android.map.googlemapsv2.LatLng = new LatLng ( org.onebusaway.android.map.googlemapsv2.ObaStop . getLatitude ( ) - NUMBER , org.onebusaway.android.map.googlemapsv2.ObaStop . getLongitude ( ) ) ; org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.AmazonMap . addMarker ( new MarkerOptions ( ) . position ( org.onebusaway.android.map.googlemapsv2.LatLng ) ) ; } 
private void void ( final Marker org.onebusaway.android.map.googlemapsv2.Marker ) { final Handler org.onebusaway.android.map.googlemapsv2.Handler = new Handler ( ) ; final long long = SystemClock . uptimeMillis ( ) ; final long long = NUMBER ; Projection org.onebusaway.android.map.googlemapsv2.Projection = org.onebusaway.android.map.googlemapsv2.AmazonMap . getProjection ( ) ; final LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Marker . getPosition ( ) ; Point org.onebusaway.android.map.googlemapsv2.Point = org.onebusaway.android.map.googlemapsv2.Projection . toScreenLocation ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; org.onebusaway.android.map.googlemapsv2.Point . offset ( NUMBER , - NUMBER ) ; final LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Projection . fromScreenLocation ( org.onebusaway.android.map.googlemapsv2.Point ) ; final Interpolator org.onebusaway.android.map.googlemapsv2.Interpolator = new BounceInterpolator ( ) ; org.onebusaway.android.map.googlemapsv2.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { long long = SystemClock . uptimeMillis ( ) - long ; float float = org.onebusaway.android.map.googlemapsv2.Interpolator . getInterpolation ( ( float ) long / long ) ; double double = float * markerLatLng . longitude + ( NUMBER - float ) * startLatLng . longitude ; double double = float * markerLatLng . latitude + ( NUMBER - float ) * startLatLng . latitude ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( new LatLng ( double , double ) ) ; if ( float < NUMBER ) { org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( this , NUMBER ) ; } } } ) ; } 
@ java.lang.Override public void void ( ) { long long = SystemClock . uptimeMillis ( ) - long ; float float = org.onebusaway.android.map.googlemapsv2.Interpolator . getInterpolation ( ( float ) long / long ) ; double double = float * markerLatLng . longitude + ( NUMBER - float ) * startLatLng . longitude ; double double = float * markerLatLng . latitude + ( NUMBER - float ) * startLatLng . latitude ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( new LatLng ( double , double ) ) ; if ( float < NUMBER ) { org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( this , NUMBER ) ; } } 
org.onebusaway.android.map.googlemapsv2.ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ( ) { return org.onebusaway.android.map.googlemapsv2.ObaStop ; } 
void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.Marker != null ) { org.onebusaway.android.map.googlemapsv2.Marker . remove ( ) ; org.onebusaway.android.map.googlemapsv2.Marker = null ; } java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> . clear ( ) ; org.onebusaway.android.map.googlemapsv2.ObaStop = null ; } 
private void void ( ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> : java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . entrySet ( ) ) { java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) . remove ( ) ; } } 
synchronized void void ( boolean boolean ) { if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> != null ) { void ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . clear ( ) ; } if ( java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> != null ) { java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> . clear ( ) ; } if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> != null ) { java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> . clear ( ) ; } if ( boolean ) { void ( ) ; } else { if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null && java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> != null ) { void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } } } 
synchronized int int ( ) { return java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) ; } 
java.lang.String java.lang.String ( ) 
public void ( Activity org.onebusaway.android.map.googlemapsv2.Activity , AmazonMap org.onebusaway.android.map.googlemapsv2.AmazonMap ) { org.onebusaway.android.map.googlemapsv2.Activity = org.onebusaway.android.map.googlemapsv2.Activity ; org.onebusaway.android.map.googlemapsv2.AmazonMap = org.onebusaway.android.map.googlemapsv2.AmazonMap ; void ( ) ; org.onebusaway.android.map.googlemapsv2.AmazonMap . setOnInfoWindowClickListener ( this ) ; org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter = new org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter ( org.onebusaway.android.map.googlemapsv2.Activity ) ; org.onebusaway.android.map.googlemapsv2.AmazonMap . setInfoWindowAdapter ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter ) ; } 
public void void ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller = org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller ; } 
public void void ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { void ( ) ; org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ; org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . void ( java.util.HashSet<java.lang.String> , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ; } 
public synchronized int int ( ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData != null ) { return org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . int ( ) ; } else { return NUMBER ; } } 
public synchronized void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . void ( ) ; org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData = null ; } if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter . void ( ) ; } } 
private static final void void ( ) { final int int = NUMBER ; if ( org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> == null ) { org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> = new LruCache <> ( int ) ; } if ( org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> == null ) { org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> = new LruCache <> ( int ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int , int int ) { if ( ! boolean ( int ) ) { int = int ; } java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , int , int ) ; Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . get ( java.lang.String ) ; if ( org.onebusaway.android.map.googlemapsv2.Bitmap == null ) { switch ( int ) { case ObaRoute . TYPE_BUS : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; case ObaRoute . TYPE_FERRY : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; case ObaRoute . TYPE_TRAM : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; case ObaRoute . TYPE_SUBWAY : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; case ObaRoute . TYPE_RAIL : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; } } org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . put ( java.lang.String , org.onebusaway.android.map.googlemapsv2.Bitmap ) ; return org.onebusaway.android.map.googlemapsv2.Bitmap ; } 
private static boolean boolean ( int int ) { return int == ObaRoute . TYPE_BUS || int == ObaRoute . TYPE_FERRY || int == ObaRoute . TYPE_TRAM || int == ObaRoute . TYPE_SUBWAY || int == ObaRoute . TYPE_RAIL ; } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_none_inside ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_none_inside ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_none_inside ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_none_inside ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_none_inside ) ; } } 
private void void ( java.lang.String java.lang.String , Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ) { if ( org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) == null ) { org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . put ( java.lang.String , org.onebusaway.android.map.googlemapsv2.Bitmap ) ; } } 
private org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String java.lang.String ) { return org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . get ( java.lang.String ) ; } 
private java.lang.String java.lang.String ( int int , int int , int int ) { if ( ! boolean ( int ) ) { int = int ; } return java.lang.String . java.lang.String ( int ) + STRING + java.lang.String . java.lang.String ( int ) + STRING + java.lang.String . java.lang.String ( int ) ; } 
private org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int , int int , int int ) { int int = ContextCompat . getColor ( org.onebusaway.android.map.googlemapsv2.Activity , int ) ; if ( int == ObaRoute . TYPE_CABLECAR ) { int = ObaRoute . TYPE_TRAM ; } java.lang.String java.lang.String = java.lang.String ( int , int , int ) ; Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; if ( org.onebusaway.android.map.googlemapsv2.Bitmap == null ) { org.onebusaway.android.map.googlemapsv2.Bitmap = UIUtils . colorBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap ( int , int ) , int ) ; void ( java.lang.String , org.onebusaway.android.map.googlemapsv2.Bitmap ) ; } return org.onebusaway.android.map.googlemapsv2.Bitmap ; } 
@ java.lang.Override public void void ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter . void ( ) ; ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaTripStatus ( org.onebusaway.android.map.googlemapsv2.Marker ) ; if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller != null && org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller . java.lang.String ( ) != null ) { TripDetailsActivity . start ( org.onebusaway.android.map.googlemapsv2.Activity , org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) , org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller . java.lang.String ( ) , TripDetailsListFragment . SCROLL_MODE_VEHICLE ) ; } else { TripDetailsActivity . start ( org.onebusaway.android.map.googlemapsv2.Activity , org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) , TripDetailsListFragment . SCROLL_MODE_VEHICLE ) ; } } 
private void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData == null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData = new org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData ( ) ; } } 
void ( ) { java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> = new java.util.HashMap <> ( int ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = new java.util.HashMap <> ( int ) ; } 
synchronized void void ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { int int = NUMBER ; int int = NUMBER ; ObaTripDetails [] org.onebusaway.android.map.googlemapsv2.ObaTripDetails[] = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrips ( ) ; java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( ObaTripDetails org.onebusaway.android.map.googlemapsv2.ObaTripDetails : org.onebusaway.android.map.googlemapsv2.ObaTripDetails[] ) { ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.ObaTripDetails . getStatus ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus != null ) { java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrip ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) . getRouteId ( ) ; if ( java.util.HashSet<java.lang.String> . boolean ( java.lang.String ) ) { Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastKnownLocation ( ) ; boolean boolean = true ; if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getPosition ( ) ; boolean = false ; } if ( ! org.onebusaway.android.map.googlemapsv2.ObaTripStatus . isPredicted ( ) ) { boolean = false ; } Marker org.onebusaway.android.map.googlemapsv2.Marker = java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . get ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) ; if ( org.onebusaway.android.map.googlemapsv2.Marker == null ) { void ( org.onebusaway.android.map.googlemapsv2.Location , boolean , org.onebusaway.android.map.googlemapsv2.ObaTripStatus , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ; int ++ ; } else { void ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.Location , boolean , org.onebusaway.android.map.googlemapsv2.ObaTripStatus , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ; int ++ ; } java.util.HashSet<java.lang.String> . boolean ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) ; } } } int int = int ( java.util.HashSet<java.lang.String> ) ; Log . d ( java.lang.String , STRING + int + STRING + int + STRING + int + STRING + java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) ) ; Log . d ( java.lang.String , STRING + org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . size ( ) + STRING + org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . hitCount ( ) + STRING + org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . missCount ( ) ) ; Log . d ( java.lang.String , java.lang.String . java.lang.String ( STRING , org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . size ( ) , org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . hitCount ( ) , org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . missCount ( ) ) ) ; } 
private void void ( Location org.onebusaway.android.map.googlemapsv2.Location , boolean boolean , ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { Marker org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.AmazonMap . addMarker ( new MarkerOptions ( ) . position ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) . title ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getVehicleId ( ) ) . icon ( org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( boolean , org.onebusaway.android.map.googlemapsv2.ObaTripStatus , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ) ) ; ProprietaryMapHelpV2 . setZIndex ( org.onebusaway.android.map.googlemapsv2.Marker , float ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . put ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) , org.onebusaway.android.map.googlemapsv2.Marker ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . put ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.ObaTripStatus ) ; } 
private void void ( Marker org.onebusaway.android.map.googlemapsv2.Marker , Location org.onebusaway.android.map.googlemapsv2.Location , boolean boolean , ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { boolean boolean = org.onebusaway.android.map.googlemapsv2.Marker . isInfoWindowShown ( ) ; org.onebusaway.android.map.googlemapsv2.Marker . setIcon ( org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( boolean , org.onebusaway.android.map.googlemapsv2.ObaTripStatus , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . put ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.ObaTripStatus ) ; Location org.onebusaway.android.map.googlemapsv2.Location = MapHelpV2 . makeLocation ( org.onebusaway.android.map.googlemapsv2.Marker . getPosition ( ) ) ; if ( org.onebusaway.android.map.googlemapsv2.Location . distanceTo ( org.onebusaway.android.map.googlemapsv2.Location ) < double ) { AnimationUtil . animateMarkerTo ( org.onebusaway.android.map.googlemapsv2.Marker , MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; } else { org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; } if ( boolean ) { org.onebusaway.android.map.googlemapsv2.Marker . showInfoWindow ( ) ; } } 
private int int ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> ) { int int = NUMBER ; try { java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> < java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > > java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> = java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . entrySet ( ) . iterator ( ) ; while ( java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> . hasNext ( ) ) { java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> . next ( ) ; java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getKey ( ) ; Marker org.onebusaway.android.map.googlemapsv2.Marker = java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) ; if ( ! java.util.HashSet<java.lang.String> . boolean ( java.lang.String ) ) { java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) . remove ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . remove ( org.onebusaway.android.map.googlemapsv2.Marker ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> . remove ( ) ; int ++ ; } } } catch ( java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException ) { Log . w ( java.lang.String , STRING + java.lang.UnsupportedOperationException ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = new java.util.HashMap <> ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> : java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . entrySet ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getKey ( ) ; Marker org.onebusaway.android.map.googlemapsv2.Marker = java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) ; if ( ! java.util.HashSet<java.lang.String> . boolean ( java.lang.String ) ) { java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) . remove ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . remove ( org.onebusaway.android.map.googlemapsv2.Marker ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . remove ( java.lang.String ) ; int ++ ; } } } return int ; } 
private org.onebusaway.android.map.googlemapsv2.BitmapDescriptor org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( boolean boolean , ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrip ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) . getRouteId ( ) ; ObaRoute org.onebusaway.android.map.googlemapsv2.ObaRoute = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getRoute ( java.lang.String ) ; int int = org.onebusaway.android.map.googlemapsv2.ObaRoute . getType ( ) ; int int ; if ( boolean ) { long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getScheduleDeviation ( ) ) ; int = ArrivalInfoUtils . computeColorFromDeviation ( long ) ; } else { int = R . color . stop_info_scheduled_time ; } double double = MathUtils . toDirection ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getOrientation ( ) ) ; int int = MathUtils . getHalfWindIndex ( ( float ) double , int - NUMBER ) ; Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int , int , int ) ; return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; } 
synchronized org.onebusaway.android.map.googlemapsv2.ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { return java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . get ( org.onebusaway.android.map.googlemapsv2.Marker ) ; } 
private void void ( ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> : java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . entrySet ( ) ) { java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) . remove ( ) ; } } 
synchronized void void ( ) { if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> != null ) { void ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . clear ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = null ; } if ( java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> != null ) { java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . clear ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> = null ; } } 
synchronized int int ( ) { return java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) ; } 
protected static boolean boolean ( ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus ) { boolean boolean = true ; Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastKnownLocation ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { boolean = false ; } if ( ! org.onebusaway.android.map.googlemapsv2.ObaTripStatus . isPredicted ( ) ) { boolean = false ; } return boolean ; } 
public void ( Context org.onebusaway.android.map.googlemapsv2.Context ) { this . org.onebusaway.android.map.googlemapsv2.LayoutInflater = LayoutInflater . from ( org.onebusaway.android.map.googlemapsv2.Context ) ; this . org.onebusaway.android.map.googlemapsv2.Context = org.onebusaway.android.map.googlemapsv2.Context ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.View org.onebusaway.android.map.googlemapsv2.View ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { return null ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.View org.onebusaway.android.map.googlemapsv2.View ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData == null ) { return null ; } ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaTripStatus ( org.onebusaway.android.map.googlemapsv2.Marker ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus == null ) { org.onebusaway.android.map.googlemapsv2.Marker = null ; return null ; } org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.Marker ; View org.onebusaway.android.map.googlemapsv2.View = org.onebusaway.android.map.googlemapsv2.LayoutInflater . inflate ( R . layout . vehicle_info_window , null ) ; Resources org.onebusaway.android.map.googlemapsv2.Resources = org.onebusaway.android.map.googlemapsv2.Context . getResources ( ) ; TextView org.onebusaway.android.map.googlemapsv2.TextView = ( TextView ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . route_and_destination ) ; TextView org.onebusaway.android.map.googlemapsv2.TextView = ( TextView ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . status ) ; TextView org.onebusaway.android.map.googlemapsv2.TextView = ( TextView ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . last_updated ) ; ImageView org.onebusaway.android.map.googlemapsv2.ImageView = ( ImageView ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . trip_more_info ) ; org.onebusaway.android.map.googlemapsv2.ImageView . setColorFilter ( org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . switch_thumb_normal_material_dark ) ) ; ObaTrip org.onebusaway.android.map.googlemapsv2.ObaTrip = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrip ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) ; ObaRoute org.onebusaway.android.map.googlemapsv2.ObaRoute = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getRoute ( org.onebusaway.android.map.googlemapsv2.ObaTrip . getRouteId ( ) ) ; org.onebusaway.android.map.googlemapsv2.TextView . setText ( UIUtils . getRouteDisplayName ( org.onebusaway.android.map.googlemapsv2.ObaRoute ) + STRING + org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . trip_info_separator ) + STRING + UIUtils . formatDisplayText ( org.onebusaway.android.map.googlemapsv2.ObaTrip . getHeadsign ( ) ) ) ; boolean boolean = boolean ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus ) ; org.onebusaway.android.map.googlemapsv2.TextView . setBackgroundResource ( R . drawable . round_corners_style_b_status ) ; GradientDrawable org.onebusaway.android.map.googlemapsv2.GradientDrawable = ( GradientDrawable ) org.onebusaway.android.map.googlemapsv2.TextView . getBackground ( ) ; int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Context , NUMBER ) ; int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Context , NUMBER ) ; int int ; if ( boolean ) { long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getScheduleDeviation ( ) ) ; java.lang.String java.lang.String = ArrivalInfoUtils . computeArrivalLabelFromDelay ( org.onebusaway.android.map.googlemapsv2.Resources , long ) ; org.onebusaway.android.map.googlemapsv2.TextView . setText ( java.lang.String ) ; int = ArrivalInfoUtils . computeColorFromDeviation ( long ) ; org.onebusaway.android.map.googlemapsv2.GradientDrawable . setColor ( org.onebusaway.android.map.googlemapsv2.Resources . getColor ( int ) ) ; org.onebusaway.android.map.googlemapsv2.TextView . setPadding ( int , int , int , int ) ; } else { org.onebusaway.android.map.googlemapsv2.TextView . setText ( org.onebusaway.android.map.googlemapsv2.Resources . getString ( R . string . stop_info_scheduled ) ) ; int = R . color . stop_info_scheduled_time ; org.onebusaway.android.map.googlemapsv2.GradientDrawable . setColor ( org.onebusaway.android.map.googlemapsv2.Resources . getColor ( int ) ) ; org.onebusaway.android.map.googlemapsv2.TextView . setText ( org.onebusaway.android.map.googlemapsv2.Resources . getString ( R . string . vehicle_last_updated_scheduled ) ) ; org.onebusaway.android.map.googlemapsv2.TextView . setPadding ( int , int , int , int ) ; return org.onebusaway.android.map.googlemapsv2.View ; } long long = java.lang.System . long ( ) ; long long ; if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastLocationUpdateTime ( ) != NUMBER ) { long = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastLocationUpdateTime ( ) ; } else { long = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastUpdateTime ( ) ; } long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( long - long ) ; long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( long ) ; long long = long % NUMBER ; java.lang.String java.lang.String ; if ( long < NUMBER ) { java.lang.String = org.onebusaway.android.map.googlemapsv2.Resources . getString ( R . string . vehicle_last_updated_sec , long ) ; } else { java.lang.String = org.onebusaway.android.map.googlemapsv2.Resources . getString ( R . string . vehicle_last_updated_min_and_sec , long , long ) ; } org.onebusaway.android.map.googlemapsv2.TextView . setText ( java.lang.String ) ; if ( org.onebusaway.android.map.googlemapsv2.Handler != null ) { org.onebusaway.android.map.googlemapsv2.Handler . removeCallbacks ( java.lang.Runnable ) ; org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( java.lang.Runnable , long ) ; } return org.onebusaway.android.map.googlemapsv2.View ; } 
public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.Marker != null && org.onebusaway.android.map.googlemapsv2.Marker . isInfoWindowShown ( ) ) { org.onebusaway.android.map.googlemapsv2.Marker . showInfoWindow ( ) ; } } 
public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.Handler != null ) { org.onebusaway.android.map.googlemapsv2.Handler . removeCallbacks ( java.lang.Runnable ) ; } } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.adapter.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.adapter.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.adapter.test.ObaRegion ) ; ObaArrivalInfoResponse org.onebusaway.android.adapter.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.adapter.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.adapter.test.ObaStop = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.adapter.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.adapter.test.ObaStop . getId ( ) ) ; final java.util.List<org.onebusaway.android.adapter.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.adapter.test.ObaRoute> = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.adapter.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.adapter.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.adapter.test.ObaAgency = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.adapter.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.adapter.test.ObaAgency . getId ( ) ) ; final ObaArrivalInfo [] org.onebusaway.android.adapter.test.ObaArrivalInfo[] = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleA = new ArrivalsListAdapterStyleA ( getContext ( ) ) ; org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleA . setData ( org.onebusaway.android.adapter.test.ObaArrivalInfo[] , new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) , org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getCurrentTime ( ) ) ; View org.onebusaway.android.adapter.test.View = org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleA . getView ( NUMBER , null , null ) ; assertNotNull ( org.onebusaway.android.adapter.test.View ) ; } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.adapter.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.adapter.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.adapter.test.ObaRegion ) ; ObaArrivalInfoResponse org.onebusaway.android.adapter.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.adapter.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.adapter.test.ObaStop = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.adapter.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.adapter.test.ObaStop . getId ( ) ) ; final java.util.List<org.onebusaway.android.adapter.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.adapter.test.ObaRoute> = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.adapter.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.adapter.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.adapter.test.ObaAgency = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.adapter.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.adapter.test.ObaAgency . getId ( ) ) ; final ObaArrivalInfo [] org.onebusaway.android.adapter.test.ObaArrivalInfo[] = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleB = new ArrivalsListAdapterStyleB ( getContext ( ) ) ; org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleB . setData ( org.onebusaway.android.adapter.test.ObaArrivalInfo[] , new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) , org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getCurrentTime ( ) ) ; View org.onebusaway.android.adapter.test.View = org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleB . getView ( NUMBER , null , null ) ; assertNotNull ( org.onebusaway.android.adapter.test.View ) ; } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.adapter.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.adapter.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.adapter.test.ObaRegion ) ; ObaArrivalInfoResponse org.onebusaway.android.adapter.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.adapter.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.adapter.test.ObaStop = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.adapter.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.adapter.test.ObaStop . getId ( ) ) ; final java.util.List<org.onebusaway.android.adapter.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.adapter.test.ObaRoute> = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.adapter.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.adapter.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.adapter.test.ObaAgency = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.adapter.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.adapter.test.ObaAgency . getId ( ) ) ; final ObaArrivalInfo [] org.onebusaway.android.adapter.test.ObaArrivalInfo[] = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleA = new ArrivalsListAdapterStyleA ( getContext ( ) ) ; org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleA . setData ( org.onebusaway.android.adapter.test.ObaArrivalInfo[] , new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) , org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getCurrentTime ( ) ) ; View org.onebusaway.android.adapter.test.View = org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleA . getView ( NUMBER , null , null ) ; assertNotNull ( org.onebusaway.android.adapter.test.View ) ; } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.adapter.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.adapter.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.adapter.test.ObaRegion ) ; ObaArrivalInfoResponse org.onebusaway.android.adapter.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.adapter.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.adapter.test.ObaStop = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.adapter.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.adapter.test.ObaStop . getId ( ) ) ; final java.util.List<org.onebusaway.android.adapter.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.adapter.test.ObaRoute> = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.adapter.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.adapter.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.adapter.test.ObaAgency = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.adapter.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.adapter.test.ObaAgency . getId ( ) ) ; final ObaArrivalInfo [] org.onebusaway.android.adapter.test.ObaArrivalInfo[] = org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleB = new ArrivalsListAdapterStyleB ( getContext ( ) ) ; org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleB . setData ( org.onebusaway.android.adapter.test.ObaArrivalInfo[] , new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) , org.onebusaway.android.adapter.test.ObaArrivalInfoResponse . getCurrentTime ( ) ) ; if ( ! org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleB . isEmpty ( ) ) { View org.onebusaway.android.adapter.test.View = org.onebusaway.android.adapter.test.ArrivalsListAdapterStyleB . getView ( NUMBER , null , null ) ; assertNotNull ( org.onebusaway.android.adapter.test.View ) ; } } 
public static org.onebusaway.android.Test org.onebusaway.android.Test ( ) { return new TestSuiteBuilder ( org.onebusaway.android.AllTests .class ) . includeAllPackagesUnderHere ( ) . build ( ) ; } 
public void void ( ) { ObaAgenciesWithCoverageRequest org.onebusaway.android.io.test.ObaAgenciesWithCoverageRequest = ObaAgenciesWithCoverageRequest . newRequest ( getContext ( ) ) ; ObaAgenciesWithCoverageResponse org.onebusaway.android.io.test.ObaAgenciesWithCoverageResponse = org.onebusaway.android.io.test.ObaAgenciesWithCoverageRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaAgenciesWithCoverageResponse ) ; final ObaAgencyWithCoverage [] org.onebusaway.android.io.test.ObaAgencyWithCoverage[] = org.onebusaway.android.io.test.ObaAgenciesWithCoverageResponse . getAgencies ( ) ; assertTrue ( list . length > NUMBER ) ; for ( ObaAgencyWithCoverage org.onebusaway.android.io.test.ObaAgencyWithCoverage : org.onebusaway.android.io.test.ObaAgencyWithCoverage[] ) { final ObaAgency org.onebusaway.android.io.test.ObaAgency = org.onebusaway.android.io.test.ObaAgenciesWithCoverageResponse . getAgency ( org.onebusaway.android.io.test.ObaAgencyWithCoverage . getId ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaAgency ) ; } } 
public void void ( ) { ObaAgenciesWithCoverageRequest . ObaAgenciesWithCoverageRequest ObaAgenciesWithCoverageRequest.Builder = new ObaAgenciesWithCoverageRequest . ObaAgenciesWithCoverageRequest ( getContext ( ) ) ; ObaAgenciesWithCoverageRequest org.onebusaway.android.io.test.ObaAgenciesWithCoverageRequest = ObaAgenciesWithCoverageRequest.Builder . build ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaAgenciesWithCoverageRequest ) ; } 
public void void ( ) { ObaAgencyRequest . ObaAgencyRequest ObaAgencyRequest.Builder = new ObaAgencyRequest . ObaAgencyRequest ( getContext ( ) , STRING ) ; ObaAgencyRequest org.onebusaway.android.io.test.ObaAgencyRequest = ObaAgencyRequest.Builder . build ( ) ; ObaAgencyResponse org.onebusaway.android.io.test.ObaAgencyResponse = org.onebusaway.android.io.test.ObaAgencyRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaAgencyResponse ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgencyResponse . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgencyResponse . getName ( ) ) ; } 
public void void ( ) { ObaAgencyRequest org.onebusaway.android.io.test.ObaAgencyRequest = ObaAgencyRequest . newRequest ( getContext ( ) , STRING ) ; assertNotNull ( org.onebusaway.android.io.test.ObaAgencyRequest ) ; } 
public static org.onebusaway.android.io.test.Test org.onebusaway.android.io.test.Test ( ) { return new TestSuiteBuilder ( org.onebusaway.android.io.test.AllTests .class ) . includeAllPackagesUnderHere ( ) . build ( ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) java.lang.Exception { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoResponse org.onebusaway.android.io.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.io.test.ObaStop = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStop . getId ( ) ) ; final java.util.List<org.onebusaway.android.io.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.io.test.ObaRoute> = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.io.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.io.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.io.test.ObaAgency = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.io.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getId ( ) ) ; final ObaArrivalInfo [] org.onebusaway.android.io.test.ObaArrivalInfo[] = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaArrivalInfo[] ) ; final java.util.List<org.onebusaway.android.io.test.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.io.test.ObaStop> = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getNearbyStops ( ) ; assertTrue ( java.util.List<org.onebusaway.android.io.test.ObaStop> . size ( ) > NUMBER ) ; } 
public void void ( ) java.lang.Exception { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoResponse org.onebusaway.android.io.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.io.test.ObaStop = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStop . getId ( ) ) ; final java.util.List<org.onebusaway.android.io.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.io.test.ObaRoute> = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.io.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.io.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.io.test.ObaAgency = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.io.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getId ( ) ) ; ObaTrip org.onebusaway.android.io.test.ObaTrip = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getTrip ( STRING ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaTrip . getBlockId ( ) ) ; final ObaArrivalInfo [] org.onebusaway.android.io.test.ObaArrivalInfo[] = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaArrivalInfo[] ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTripStatus ( ) . getPosition ( ) . getLatitude ( ) ) ; assertEquals ( - NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTripStatus ( ) . getPosition ( ) . getLongitude ( ) ) ; final java.util.List<org.onebusaway.android.io.test.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.io.test.ObaStop> = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getNearbyStops ( ) ; assertTrue ( java.util.List<org.onebusaway.android.io.test.ObaStop> . size ( ) > NUMBER ) ; } 
public void void ( ) java.lang.Exception { Application . get ( ) . setCustomApiUrl ( STRING ) ; ObaArrivalInfoResponse org.onebusaway.android.io.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaArrivalInfoResponse ) ; ObaArrivalInfo [] org.onebusaway.android.io.test.ObaArrivalInfo[] = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaArrivalInfo[] ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; org.onebusaway.android.io.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaArrivalInfoResponse ) ; org.onebusaway.android.io.test.ObaArrivalInfo[] = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getTotalStopsInTrip ( ) ) ; } 
public void void ( ) java.lang.Exception { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest . newRequest ( getContext ( ) , STRING ) ; assertNotNull ( org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) java.lang.Exception { Application . get ( ) . setCustomApiUrl ( STRING ) ; ObaArrivalInfoResponse org.onebusaway.android.io.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaArrivalInfoResponse ) ; java.util.List<org.onebusaway.android.io.test.ObaSituation> < ObaSituation > java.util.List<org.onebusaway.android.io.test.ObaSituation> = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getSituations ( ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.ObaSituation> ) ; ObaSituation org.onebusaway.android.io.test.ObaSituation = java.util.List<org.onebusaway.android.io.test.ObaSituation> . get ( NUMBER ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getSummary ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getDescription ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getReason ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaSituation . getCreationTime ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getSeverity ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getApplicationId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getDirectionId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getRouteId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getStopId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getTripId ( ) ) ; assertNull ( org.onebusaway.android.io.test.ObaSituation . getUrl ( ) ) ; ObaSituation . ObaSituation [] ObaSituation.ActiveWindow[] = org.onebusaway.android.io.test.ObaSituation . getActiveWindows ( ) ; assertEquals ( NUMBER , windows . length ) ; boolean boolean = UIUtils . isActiveWindowForSituation ( org.onebusaway.android.io.test.ObaSituation , org.onebusaway.android.io.test.ObaArrivalInfoResponse . getCurrentTime ( ) ) ; assertEquals ( true , boolean ) ; } 
public void void ( ) java.lang.Exception { Application . get ( ) . setCustomApiUrl ( STRING ) ; ObaArrivalInfoResponse org.onebusaway.android.io.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaArrivalInfoResponse ) ; java.util.List<org.onebusaway.android.io.test.ObaSituation> < ObaSituation > java.util.List<org.onebusaway.android.io.test.ObaSituation> = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getSituations ( ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.ObaSituation> ) ; ObaSituation org.onebusaway.android.io.test.ObaSituation = java.util.List<org.onebusaway.android.io.test.ObaSituation> . get ( NUMBER ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getSummary ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getDescription ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getReason ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaSituation . getCreationTime ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getSeverity ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getApplicationId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getDirectionId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getRouteId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getStopId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getTripId ( ) ) ; assertNull ( org.onebusaway.android.io.test.ObaSituation . getUrl ( ) ) ; ObaSituation . ObaSituation [] ObaSituation.ActiveWindow[] = org.onebusaway.android.io.test.ObaSituation . getActiveWindows ( ) ; assertEquals ( NUMBER , ObaSituation.ActiveWindow[] [ NUMBER ] . getFrom ( ) ) ; assertEquals ( NUMBER , ObaSituation.ActiveWindow[] [ NUMBER ] . getTo ( ) ) ; assertEquals ( NUMBER , ObaSituation.ActiveWindow[] [ NUMBER ] . getFrom ( ) ) ; assertEquals ( NUMBER , ObaSituation.ActiveWindow[] [ NUMBER ] . getTo ( ) ) ; long long = NUMBER ; boolean boolean = UIUtils . isActiveWindowForSituation ( org.onebusaway.android.io.test.ObaSituation , long ) ; assertEquals ( false , boolean ) ; long long = NUMBER ; boolean = UIUtils . isActiveWindowForSituation ( org.onebusaway.android.io.test.ObaSituation , long ) ; assertEquals ( true , boolean ) ; long long = NUMBER ; boolean = UIUtils . isActiveWindowForSituation ( org.onebusaway.android.io.test.ObaSituation , long ) ; assertEquals ( false , boolean ) ; long long = NUMBER ; boolean = UIUtils . isActiveWindowForSituation ( org.onebusaway.android.io.test.ObaSituation , long ) ; assertEquals ( false , boolean ) ; long long = NUMBER ; boolean = UIUtils . isActiveWindowForSituation ( org.onebusaway.android.io.test.ObaSituation , long ) ; assertEquals ( true , boolean ) ; long long = NUMBER ; boolean = UIUtils . isActiveWindowForSituation ( org.onebusaway.android.io.test.ObaSituation , long ) ; assertEquals ( false , boolean ) ; } 
public void void ( ) java.lang.Exception { Application . get ( ) . setCustomApiUrl ( STRING ) ; ObaArrivalInfoResponse org.onebusaway.android.io.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaArrivalInfoResponse ) ; java.util.List<org.onebusaway.android.io.test.ObaSituation> < ObaSituation > java.util.List<org.onebusaway.android.io.test.ObaSituation> = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getSituations ( ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.ObaSituation> ) ; assertEquals ( NUMBER , java.util.List<org.onebusaway.android.io.test.ObaSituation> . size ( ) ) ; ObaArrivalInfo [] org.onebusaway.android.io.test.ObaArrivalInfo[] = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; for ( ObaArrivalInfo org.onebusaway.android.io.test.ObaArrivalInfo : org.onebusaway.android.io.test.ObaArrivalInfo[] ) { for ( java.lang.String java.lang.String : org.onebusaway.android.io.test.ObaArrivalInfo . getSituationIds ( ) ) { assertNotNull ( org.onebusaway.android.io.test.ObaArrivalInfoResponse . getSituation ( java.lang.String ) ) ; } } java.lang.String [] java.lang.String[] = org.onebusaway.android.io.test.ObaArrivalInfo[] [ NUMBER ] . getSituationIds ( ) ; ObaSituation org.onebusaway.android.io.test.ObaSituation = org.onebusaway.android.io.test.ObaArrivalInfoResponse . getSituation ( java.lang.String[] [ NUMBER ] ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getSummary ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getDescription ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getReason ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaSituation . getCreationTime ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getSeverity ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getApplicationId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getDirectionId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getRouteId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getStopId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getAllAffects ( ) [ NUMBER ] . getTripId ( ) ) ; ObaSituation . ObaSituation [] ObaSituation.ActiveWindow[] = org.onebusaway.android.io.test.ObaSituation . getActiveWindows ( ) ; assertEquals ( NUMBER , ObaSituation.ActiveWindow[] [ NUMBER ] . getFrom ( ) ) ; assertEquals ( NUMBER , ObaSituation.ActiveWindow[] [ NUMBER ] . getTo ( ) ) ; ObaSituation . ObaSituation [] ObaSituation.Consequence[] = org.onebusaway.android.io.test.ObaSituation . getConsequences ( ) ; assertNotNull ( ObaSituation.Consequence[] ) ; assertEquals ( NUMBER , consequences . length ) ; ObaSituation . ObaSituation ObaSituation.Consequence = ObaSituation.Consequence[] [ NUMBER ] ; assertEquals ( ObaSituation . Consequence . CONDITION_DETOUR , ObaSituation.Consequence . getCondition ( ) ) ; ObaSituation . ObaSituation ObaSituation.ConditionDetails = ObaSituation.Consequence . getDetails ( ) ; assertNull ( ObaSituation.ConditionDetails ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaSituation . getUrl ( ) ) ; } 
public void void ( ) { ObaCurrentTimeRequest . ObaCurrentTimeRequest ObaCurrentTimeRequest.Builder = new ObaCurrentTimeRequest . ObaCurrentTimeRequest ( getContext ( ) ) ; ObaCurrentTimeRequest org.onebusaway.android.io.test.ObaCurrentTimeRequest = ObaCurrentTimeRequest.Builder . build ( ) ; ObaCurrentTimeResponse org.onebusaway.android.io.test.ObaCurrentTimeResponse = org.onebusaway.android.io.test.ObaCurrentTimeRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaCurrentTimeResponse ) ; final long long = org.onebusaway.android.io.test.ObaCurrentTimeResponse . getTime ( ) ; assertTrue ( long > NUMBER ) ; final java.lang.String java.lang.String = org.onebusaway.android.io.test.ObaCurrentTimeResponse . getReadableTime ( ) ; assertNotNull ( java.lang.String ) ; } 
public void void ( ) { ObaCurrentTimeRequest org.onebusaway.android.io.test.ObaCurrentTimeRequest = ObaCurrentTimeRequest . newRequest ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaCurrentTimeRequest ) ; } 
public void void ( ) { ObaStopResponse org.onebusaway.android.io.test.ObaStopResponse = ObaStopRequest . newRequest ( getContext ( ) , STRING ) . call ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaStopResponse ) ; assertEquals ( ObaApi . OBA_INTERNAL_ERROR , org.onebusaway.android.io.test.ObaStopResponse . getCode ( ) ) ; } 
public void void ( ) { org.onebusaway.android.io.test.FailTest.BadResponse org.onebusaway.android.io.test.FailTest.BadResponse = new org.onebusaway.android.io.test.FailTest.BadRequest . org.onebusaway.android.io.test.FailTest.BadRequest.Builder ( getContext ( ) , STRING ) . org.onebusaway.android.io.test.FailTest.BadRequest ( ) . org.onebusaway.android.io.test.FailTest.BadResponse ( ) ; assertNotNull ( org.onebusaway.android.io.test.FailTest.BadResponse ) ; assertEquals ( ObaApi . OBA_NOT_FOUND , org.onebusaway.android.io.test.FailTest.BadResponse . getCode ( ) ) ; } 
public void void ( ) { org.onebusaway.android.io.test.FailTest.BadResponse org.onebusaway.android.io.test.FailTest.BadResponse = new org.onebusaway.android.io.test.FailTest.BadRequest . org.onebusaway.android.io.test.FailTest.BadRequest.Builder ( getContext ( ) , STRING ) . org.onebusaway.android.io.test.FailTest.BadRequest ( ) . org.onebusaway.android.io.test.FailTest.BadResponse ( ) ; assertNotNull ( org.onebusaway.android.io.test.FailTest.BadResponse ) ; assertEquals ( ObaApi . OBA_INTERNAL_ERROR , org.onebusaway.android.io.test.FailTest.BadResponse . getCode ( ) ) ; } 
protected void ( Uri org.onebusaway.android.io.test.Uri ) { super( org.onebusaway.android.io.test.Uri ); } 
@ java.lang.Override public org.onebusaway.android.io.test.FailTest.BadResponse org.onebusaway.android.io.test.FailTest.BadResponse ( ) { return org.onebusaway.android.io.test.FailTest.BadResponse ( org.onebusaway.android.io.test.FailTest.BadResponse .class ) ; } 
public void ( Context org.onebusaway.android.io.test.Context , java.lang.String java.lang.String ) { super( org.onebusaway.android.io.test.Context , BASE_PATH + java.lang.String ); } 
public org.onebusaway.android.io.test.FailTest.BadRequest org.onebusaway.android.io.test.FailTest.BadRequest ( ) { return new org.onebusaway.android.io.test.FailTest.BadRequest ( buildUri ( ) ) ; } 
public void void ( ) { org.onebusaway.android.io.test.JacksonSerializer = ( JacksonSerializer ) JacksonSerializer . getInstance ( ) ; java.lang.String java.lang.String = org.onebusaway.android.io.test.JacksonSerializer . toJson ( STRING ) ; assertEquals ( STRING , java.lang.String ) ; java.lang.String = org.onebusaway.android.io.test.JacksonSerializer . toJson ( STRING ) ; assertEquals ( STRING , java.lang.String ) ; } 
public void void ( ) { org.onebusaway.android.io.test.JacksonSerializer = ( JacksonSerializer ) JacksonSerializer . getInstance ( ) ; ObaResponse org.onebusaway.android.io.test.ObaResponse = org.onebusaway.android.io.test.JacksonSerializer . createFromError ( ObaResponse .class , int , java.lang.String ) ; assertEquals ( int , org.onebusaway.android.io.test.ObaResponse . getCode ( ) ) ; assertEquals ( java.lang.String , org.onebusaway.android.io.test.ObaResponse . getText ( ) ) ; } 
public void void ( ) { org.onebusaway.android.io.test.JacksonSerializer = ( JacksonSerializer ) JacksonSerializer . getInstance ( ) ; java.lang.String java.lang.String = org.onebusaway.android.io.test.JacksonSerializer . serialize ( new org.onebusaway.android.io.test.JacksonTest.MockResponse ( ) ) ; Log . d ( STRING , java.lang.String ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , int , java.lang.String ) ; Log . d ( STRING , java.lang.String ) ; assertEquals ( java.lang.String , java.lang.String ) ; } 
public void void ( ) java.lang.Exception { java.io.Reader java.io.Reader = Resources . read ( getContext ( ) , Resources . getTestUri ( STRING ) ) ; ObaApi . ObaApi ObaApi.SerializationHandler = ObaApi . getSerializer ( ObaStopsForLocationResponse .class ) ; ObaStopsForLocationResponse org.onebusaway.android.io.test.ObaStopsForLocationResponse = ObaApi.SerializationHandler . deserialize ( java.io.Reader , ObaStopsForLocationResponse .class ) ; assertNotNull ( org.onebusaway.android.io.test.ObaStopsForLocationResponse ) ; } 
protected void ( ) { java.lang.String = STRING ; int = int ; java.lang.String = java.lang.String ; } 
@ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { return null ; } 
@ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) {            } 
public < T > T T ( final Loader < T > org.onebusaway.android.io.test.Loader<T> ) { final java.util.concurrent.ArrayBlockingQueue<T> < T > java.util.concurrent.ArrayBlockingQueue<T> = new java.util.concurrent.ArrayBlockingQueue<T> < T > ( NUMBER ) ; final OnLoadCompleteListener < T > org.onebusaway.android.io.test.OnLoadCompleteListener<T> = new OnLoadCompleteListener < T > ( ) { @ java.lang.Override public void void ( Loader < T > org.onebusaway.android.io.test.Loader<T> , T T ) { org.onebusaway.android.io.test.Loader<T> . unregisterListener ( this ) ; org.onebusaway.android.io.test.Loader<T> . stopLoading ( ) ; org.onebusaway.android.io.test.Loader<T> . reset ( ) ; java.util.concurrent.ArrayBlockingQueue<T> . boolean ( T ) ; } } ; final Handler org.onebusaway.android.io.test.Handler = new Handler ( Looper . getMainLooper ( ) ) { @ java.lang.Override public void void ( Message org.onebusaway.android.io.test.Message ) { org.onebusaway.android.io.test.Loader<T> . registerListener ( NUMBER , org.onebusaway.android.io.test.OnLoadCompleteListener<T> ) ; org.onebusaway.android.io.test.Loader<T> . startLoading ( ) ; } } ; org.onebusaway.android.io.test.Handler . sendEmptyMessage ( NUMBER ) ; T T ; while ( true ) { try { T = java.util.concurrent.ArrayBlockingQueue<T> . T ( ) ; break; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { throw new java.lang.RuntimeException ( STRING , java.lang.InterruptedException ) ; } } return T ; } 
@ java.lang.Override public void void ( Loader < T > org.onebusaway.android.io.test.Loader<T> , T T ) { org.onebusaway.android.io.test.Loader<T> . unregisterListener ( this ) ; org.onebusaway.android.io.test.Loader<T> . stopLoading ( ) ; org.onebusaway.android.io.test.Loader<T> . reset ( ) ; java.util.concurrent.ArrayBlockingQueue<T> . boolean ( T ) ; } 
@ java.lang.Override public void void ( Message org.onebusaway.android.io.test.Message ) { org.onebusaway.android.io.test.Loader<T> . registerListener ( NUMBER , org.onebusaway.android.io.test.OnLoadCompleteListener<T> ) ; org.onebusaway.android.io.test.Loader<T> . startLoading ( ) ; } 
@ java.lang.Override protected void void ( ) { void ( ) ; } 
@ java.lang.Override protected void void ( ) { void ( ) ; } 
protected void void ( ) { if ( org.onebusaway.android.io.test.MockConnectionFactory == null ) { org.onebusaway.android.io.test.MockConnectionFactory = new MockConnectionFactory ( getContext ( ) ) ; } org.onebusaway.android.io.test.ObaConnectionFactory = ObaApi . getDefaultContext ( ) . setConnectionFactory ( org.onebusaway.android.io.test.MockConnectionFactory ) ; } 
protected void void ( ) { if ( org.onebusaway.android.io.test.ObaConnectionFactory != null ) { ObaApi . getDefaultContext ( ) . setConnectionFactory ( org.onebusaway.android.io.test.ObaConnectionFactory ) ; } } 
public static void void ( ObaResponse org.onebusaway.android.io.test.ObaResponse ) { assertNotNull ( org.onebusaway.android.io.test.ObaResponse ) ; assertEquals ( ObaApi . OBA_OK , org.onebusaway.android.io.test.ObaResponse . getCode ( ) ) ; } 
@ java.lang.Override protected void void ( ) { mContext . setTheme ( R . style . Theme_OneBusAway ) ; org.onebusaway.android.io.test.ObaMock = new ObaMock ( getContext ( ) ) ; Application . get ( ) . setCustomApiUrl ( STRING ) ; } 
@ java.lang.Override protected void void ( ) { org.onebusaway.android.io.test.ObaMock . finish ( ) ; } 
public void void ( ) { ObaRegionsRequest org.onebusaway.android.io.test.ObaRegionsRequest = ObaRegionsRequest . newRequest ( getContext ( ) ) ; ObaRegionsResponse org.onebusaway.android.io.test.ObaRegionsResponse = org.onebusaway.android.io.test.ObaRegionsRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaRegionsResponse ) ; final ObaRegion [] org.onebusaway.android.io.test.ObaRegion[] = org.onebusaway.android.io.test.ObaRegionsResponse . getRegions ( ) ; assertTrue ( list . length > NUMBER ) ; for ( ObaRegion org.onebusaway.android.io.test.ObaRegion : org.onebusaway.android.io.test.ObaRegion[] ) { assertNotNull ( org.onebusaway.android.io.test.ObaRegion . getName ( ) ) ; } } 
public void void ( ) { ObaRegionsRequest . ObaRegionsRequest ObaRegionsRequest.Builder = new ObaRegionsRequest . ObaRegionsRequest ( getContext ( ) ) ; ObaRegionsRequest org.onebusaway.android.io.test.ObaRegionsRequest = ObaRegionsRequest.Builder . build ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegionsRequest ) ; } 
@ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; Open311Manager . clearOpen311 ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion . getOpen311Servers ( ) ) ; if ( org.onebusaway.android.io.test.ObaRegion . getOpen311Servers ( ) != null ) { for ( ObaRegion . ObaRegion ObaRegion.Open311Server : org.onebusaway.android.io.test.ObaRegion . getOpen311Servers ( ) ) { java.lang.String java.lang.String = ObaRegion.Open311Server . getJuridisctionId ( ) ; Open311Option org.onebusaway.android.io.test.Open311Option = new Open311Option ( ObaRegion.Open311Server . getBaseUrl ( ) , ObaRegion.Open311Server . getApiKey ( ) , TextUtils . isEmpty ( java.lang.String ) ? null : java.lang.String ) ; Open311Manager . initOpen311WithOption ( org.onebusaway.android.io.test.Open311Option ) ; } } } 
public void void ( ) { java.util.List<org.onebusaway.android.io.test.Location> < Location > java.util.List<org.onebusaway.android.io.test.Location> = new java.util.ArrayList<org.onebusaway.android.io.test.Location> <> ( ) ; java.util.List<org.onebusaway.android.io.test.Location> . add ( LocationUtils . makeLocation ( NUMBER , - NUMBER ) ) ; java.util.List<org.onebusaway.android.io.test.Location> . add ( LocationUtils . makeLocation ( NUMBER , - NUMBER ) ) ; java.util.List<org.onebusaway.android.io.test.Location> . add ( LocationUtils . makeLocation ( NUMBER , - NUMBER ) ) ; java.util.List<org.onebusaway.android.io.test.Service> < Service > java.util.List<org.onebusaway.android.io.test.Service> = java.util.List<org.onebusaway.android.io.test.Service> ( java.util.List<org.onebusaway.android.io.test.Location> ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.Service> ) ; boolean boolean = ServiceUtils . markTransitServices ( getContext ( ) , java.util.List<org.onebusaway.android.io.test.Service> ) ; assertTrue ( boolean ) ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; for ( Service org.onebusaway.android.io.test.Service : java.util.List<org.onebusaway.android.io.test.Service> ) { if ( org.onebusaway.android.io.test.Service . getGroup ( ) . equals ( ReportConstants . ISSUE_GROUP_TRANSIT ) ) { int ++ ; } if ( org.onebusaway.android.io.test.Service . getType ( ) . equals ( ReportConstants . DYNAMIC_TRANSIT_SERVICE_STOP ) ) { int ++ ; } if ( org.onebusaway.android.io.test.Service . getType ( ) . equals ( ReportConstants . DYNAMIC_TRANSIT_SERVICE_TRIP ) ) { int ++ ; } } assertTrue ( int >= ReportConstants . NUM_TRANSIT_SERVICES_THRESHOLD ) ; assertTrue ( int >= ReportConstants . NUM_TRANSIT_SERVICES_THRESHOLD ) ; assertTrue ( int == NUMBER ) ; } 
public void void ( ) { java.util.List<org.onebusaway.android.io.test.Location> < Location > java.util.List<org.onebusaway.android.io.test.Location> = new java.util.ArrayList<org.onebusaway.android.io.test.Location> <> ( ) ; java.util.List<org.onebusaway.android.io.test.Location> . add ( LocationUtils . makeLocation ( NUMBER , - NUMBER ) ) ; java.util.List<org.onebusaway.android.io.test.Location> . add ( LocationUtils . makeLocation ( NUMBER , - NUMBER ) ) ; java.util.List<org.onebusaway.android.io.test.Location> . add ( LocationUtils . makeLocation ( NUMBER , - NUMBER ) ) ; java.util.List<org.onebusaway.android.io.test.Location> . add ( LocationUtils . makeLocation ( NUMBER , - NUMBER ) ) ; java.util.List<org.onebusaway.android.io.test.Service> < Service > java.util.List<org.onebusaway.android.io.test.Service> = java.util.List<org.onebusaway.android.io.test.Service> ( java.util.List<org.onebusaway.android.io.test.Location> ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.Service> ) ; boolean boolean = ServiceUtils . markTransitServices ( getContext ( ) , java.util.List<org.onebusaway.android.io.test.Service> ) ; assertFalse ( boolean ) ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; for ( Service org.onebusaway.android.io.test.Service : java.util.List<org.onebusaway.android.io.test.Service> ) { if ( org.onebusaway.android.io.test.Service . getGroup ( ) != null && org.onebusaway.android.io.test.Service . getGroup ( ) . equals ( ReportConstants . ISSUE_GROUP_TRANSIT ) ) { int ++ ; } if ( org.onebusaway.android.io.test.Service . getType ( ) . equals ( ReportConstants . DYNAMIC_TRANSIT_SERVICE_STOP ) ) { int ++ ; } if ( org.onebusaway.android.io.test.Service . getType ( ) . equals ( ReportConstants . DYNAMIC_TRANSIT_SERVICE_TRIP ) ) { int ++ ; } } assertTrue ( int < ReportConstants . NUM_TRANSIT_SERVICES_THRESHOLD ) ; assertTrue ( int == NUMBER ) ; assertTrue ( int == NUMBER ) ; } 
private java.util.List<org.onebusaway.android.io.test.Service> < Service > java.util.List<org.onebusaway.android.io.test.Service> ( java.util.List<org.onebusaway.android.io.test.Location> < Location > java.util.List<org.onebusaway.android.io.test.Location> ) { for ( Location org.onebusaway.android.io.test.Location : java.util.List<org.onebusaway.android.io.test.Location> ) { ServiceListRequest org.onebusaway.android.io.test.ServiceListRequest = new ServiceListRequest ( org.onebusaway.android.io.test.Location . getLatitude ( ) , org.onebusaway.android.io.test.Location . getLongitude ( ) ) ; java.util.List<org.onebusaway.android.io.test.Open311> < Open311 > java.util.List<org.onebusaway.android.io.test.Open311> = Open311Manager . getAllOpen311 ( ) ; ServiceListTask . ServiceListTask ServiceListTask.Callback = new ServiceListTask . ServiceListTask ( ) { @ java.lang.Override public void void ( ServiceListResponse org.onebusaway.android.io.test.ServiceListResponse , Open311 org.onebusaway.android.io.test.Open311 ) {                } } ; ServiceListTask org.onebusaway.android.io.test.ServiceListTask = new ServiceListTask ( org.onebusaway.android.io.test.ServiceListRequest , java.util.List<org.onebusaway.android.io.test.Open311> , ServiceListTask.Callback ) ; try { ServiceListResponse org.onebusaway.android.io.test.ServiceListResponse = org.onebusaway.android.io.test.ServiceListTask . execute ( ) . get ( ) ; java.util.List<org.onebusaway.android.io.test.Service> < Service > java.util.List<org.onebusaway.android.io.test.Service> = new java.util.ArrayList<org.onebusaway.android.io.test.Service> <> ( ) ; if ( org.onebusaway.android.io.test.ServiceListResponse != null && org.onebusaway.android.io.test.ServiceListResponse . isSuccess ( ) && Open311Manager . isAreaManagedByOpen311 ( org.onebusaway.android.io.test.ServiceListResponse . getServiceList ( ) ) ) { for ( Service org.onebusaway.android.io.test.Service : org.onebusaway.android.io.test.ServiceListResponse . getServiceList ( ) ) { if ( org.onebusaway.android.io.test.Service . getService_name ( ) != null && org.onebusaway.android.io.test.Service . getService_code ( ) != null ) { java.util.List<org.onebusaway.android.io.test.Service> . add ( org.onebusaway.android.io.test.Service ) ; } } } return java.util.List<org.onebusaway.android.io.test.Service> ; } catch ( java.lang.InterruptedException | java.util.concurrent.ExecutionException java.lang.Exception ) { java.lang.Exception . void ( ) ; } } return null ; } 
@ java.lang.Override public void void ( ServiceListResponse org.onebusaway.android.io.test.ServiceListResponse , Open311 org.onebusaway.android.io.test.Open311 ) {                } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaReportProblemWithStopRequest . ObaReportProblemWithStopRequest ObaReportProblemWithStopRequest.Builder = new ObaReportProblemWithStopRequest . ObaReportProblemWithStopRequest ( getContext ( ) , STRING ) ; ObaReportProblemWithStopRequest.Builder . setCode ( STRING ) . setUserLocation ( NUMBER , - NUMBER ) . setUserLocationAccuracy ( NUMBER ) . setUserComment ( STRING ) ; ObaReportProblemWithStopRequest org.onebusaway.android.io.test.ObaReportProblemWithStopRequest = ObaReportProblemWithStopRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + STRING + STRING + STRING + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaReportProblemWithStopRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaReportProblemWithStopRequest . ObaReportProblemWithStopRequest ObaReportProblemWithStopRequest.Builder = new ObaReportProblemWithStopRequest . ObaReportProblemWithStopRequest ( getContext ( ) , STRING ) ; ObaReportProblemWithStopRequest.Builder . setCode ( STRING ) . setUserLocation ( NUMBER , - NUMBER ) . setUserLocationAccuracy ( NUMBER ) . setUserComment ( STRING ) ; ObaReportProblemWithStopRequest org.onebusaway.android.io.test.ObaReportProblemWithStopRequest = ObaReportProblemWithStopRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + STRING + STRING + STRING + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaReportProblemWithStopRequest ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
private void void ( ) { ObaReportProblemWithStopRequest . ObaReportProblemWithStopRequest ObaReportProblemWithStopRequest.Builder = new ObaReportProblemWithStopRequest . ObaReportProblemWithStopRequest ( getContext ( ) , STRING ) ; ObaReportProblemWithStopRequest.Builder . setCode ( STRING ) . setUserLocation ( NUMBER , - NUMBER ) . setUserLocationAccuracy ( NUMBER ) . setUserComment ( STRING ) ; ObaReportProblemWithStopRequest org.onebusaway.android.io.test.ObaReportProblemWithStopRequest = ObaReportProblemWithStopRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + STRING + STRING + STRING + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaReportProblemWithStopRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaReportProblemWithTripRequest . ObaReportProblemWithTripRequest ObaReportProblemWithTripRequest.Builder = new ObaReportProblemWithTripRequest . ObaReportProblemWithTripRequest ( getContext ( ) , STRING ) ; ObaReportProblemWithTripRequest.Builder . setStopId ( STRING ) . setVehicleId ( STRING ) . setServiceDate ( NUMBER ) . setCode ( STRING ) . setUserLocation ( NUMBER , - NUMBER ) . setUserLocationAccuracy ( NUMBER ) . setUserComment ( STRING ) ; ObaReportProblemWithTripRequest org.onebusaway.android.io.test.ObaReportProblemWithTripRequest = ObaReportProblemWithTripRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaReportProblemWithTripRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaReportProblemWithTripRequest . ObaReportProblemWithTripRequest ObaReportProblemWithTripRequest.Builder = new ObaReportProblemWithTripRequest . ObaReportProblemWithTripRequest ( getContext ( ) , STRING ) ; ObaReportProblemWithTripRequest.Builder . setStopId ( STRING ) . setVehicleId ( STRING ) . setServiceDate ( NUMBER ) . setCode ( STRING ) . setUserLocation ( NUMBER , - NUMBER ) . setUserLocationAccuracy ( NUMBER ) . setUserComment ( STRING ) ; ObaReportProblemWithTripRequest org.onebusaway.android.io.test.ObaReportProblemWithTripRequest = ObaReportProblemWithTripRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaReportProblemWithTripRequest ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
private void void ( ) { ObaReportProblemWithTripRequest . ObaReportProblemWithTripRequest ObaReportProblemWithTripRequest.Builder = new ObaReportProblemWithTripRequest . ObaReportProblemWithTripRequest ( getContext ( ) , STRING ) ; ObaReportProblemWithTripRequest.Builder . setStopId ( STRING ) . setVehicleId ( STRING ) . setServiceDate ( NUMBER ) . setCode ( STRING ) . setUserLocation ( NUMBER , - NUMBER ) . setUserLocationAccuracy ( NUMBER ) . setUserComment ( STRING ) ; ObaReportProblemWithTripRequest org.onebusaway.android.io.test.ObaReportProblemWithTripRequest = ObaReportProblemWithTripRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaReportProblemWithTripRequest ) ; } 
public void void ( ) { ObaRouteIdsForAgencyRequest . ObaRouteIdsForAgencyRequest ObaRouteIdsForAgencyRequest.Builder = new ObaRouteIdsForAgencyRequest . ObaRouteIdsForAgencyRequest ( getContext ( ) , STRING ) ; ObaRouteIdsForAgencyRequest org.onebusaway.android.io.test.ObaRouteIdsForAgencyRequest = ObaRouteIdsForAgencyRequest.Builder . build ( ) ; ObaRouteIdsForAgencyResponse org.onebusaway.android.io.test.ObaRouteIdsForAgencyResponse = org.onebusaway.android.io.test.ObaRouteIdsForAgencyRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaRouteIdsForAgencyResponse ) ; final java.lang.String [] java.lang.String[] = org.onebusaway.android.io.test.ObaRouteIdsForAgencyResponse . getRouteIds ( ) ; assertNotNull ( java.lang.String[] ) ; assertTrue ( java.lang.String[] . int > NUMBER ) ; assertFalse ( org.onebusaway.android.io.test.ObaRouteIdsForAgencyResponse . getLimitExceeded ( ) ) ; } 
public void void ( ) { ObaRouteIdsForAgencyRequest org.onebusaway.android.io.test.ObaRouteIdsForAgencyRequest = ObaRouteIdsForAgencyRequest . newRequest ( getContext ( ) , STRING ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRouteIdsForAgencyRequest ) ; } 
public void void ( ) { int int = getContext ( ) . getResources ( ) . getColor ( R . color . route_line_color_default ) ; int int = getContext ( ) . getResources ( ) . getColor ( R . color . route_text_color_default ) ; ObaRouteRequest . ObaRouteRequest ObaRouteRequest.Builder = new ObaRouteRequest . ObaRouteRequest ( getContext ( ) , STRING ) ; ObaRouteRequest org.onebusaway.android.io.test.ObaRouteRequest = ObaRouteRequest.Builder . build ( ) ; ObaRouteResponse org.onebusaway.android.io.test.ObaRouteResponse = org.onebusaway.android.io.test.ObaRouteRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaRouteResponse ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRouteResponse . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRouteResponse . getShortName ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRouteResponse . getAgencyId ( ) ) ; assertEquals ( ObaRoute . TYPE_BUS , org.onebusaway.android.io.test.ObaRouteResponse . getType ( ) ) ; int int = int ; if ( org.onebusaway.android.io.test.ObaRouteResponse . getColor ( ) != null ) { int = org.onebusaway.android.io.test.ObaRouteResponse . getColor ( ) ; } int int = int ; if ( org.onebusaway.android.io.test.ObaRouteResponse . getTextColor ( ) != null ) { int = org.onebusaway.android.io.test.ObaRouteResponse . getTextColor ( ) ; } assertEquals ( int , int ) ; assertEquals ( int , int ) ; ObaAgency org.onebusaway.android.io.test.ObaAgency = org.onebusaway.android.io.test.ObaRouteResponse . getAgency ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaAgency ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getName ( ) ) ; } 
public void void ( ) { ObaRouteRequest org.onebusaway.android.io.test.ObaRouteRequest = ObaRouteRequest . newRequest ( getContext ( ) , STRING ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRouteRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; int int = getContext ( ) . getResources ( ) . getColor ( R . color . route_line_color_default ) ; int int = getContext ( ) . getResources ( ) . getColor ( R . color . route_text_color_default ) ; ObaRouteRequest . ObaRouteRequest ObaRouteRequest.Builder = new ObaRouteRequest . ObaRouteRequest ( getContext ( ) , STRING ) ; ObaRouteRequest org.onebusaway.android.io.test.ObaRouteRequest = ObaRouteRequest.Builder . build ( ) ; ObaRouteResponse org.onebusaway.android.io.test.ObaRouteResponse = org.onebusaway.android.io.test.ObaRouteRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaRouteResponse ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRouteResponse . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRouteResponse . getShortName ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRouteResponse . getAgencyId ( ) ) ; assertEquals ( ObaRoute . TYPE_BUS , org.onebusaway.android.io.test.ObaRouteResponse . getType ( ) ) ; int int = Color . parseColor ( STRING ) ; int int = Color . parseColor ( STRING ) ; int int = int ; if ( org.onebusaway.android.io.test.ObaRouteResponse . getColor ( ) != null ) { int = org.onebusaway.android.io.test.ObaRouteResponse . getColor ( ) ; } int int = int ; if ( org.onebusaway.android.io.test.ObaRouteResponse . getTextColor ( ) != null ) { int = org.onebusaway.android.io.test.ObaRouteResponse . getTextColor ( ) ; } assertEquals ( int , int ) ; assertEquals ( int , int ) ; ObaAgency org.onebusaway.android.io.test.ObaAgency = org.onebusaway.android.io.test.ObaRouteResponse . getAgency ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaAgency ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getName ( ) ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; ObaRoutesForLocationRequest . ObaRoutesForLocationRequest ObaRoutesForLocationRequest.Builder = new ObaRoutesForLocationRequest . ObaRoutesForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) ; ObaRoutesForLocationRequest org.onebusaway.android.io.test.ObaRoutesForLocationRequest = ObaRoutesForLocationRequest.Builder . build ( ) ; ObaRoutesForLocationResponse org.onebusaway.android.io.test.ObaRoutesForLocationResponse = org.onebusaway.android.io.test.ObaRoutesForLocationRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse ) ; final ObaRoute [] org.onebusaway.android.io.test.ObaRoute[] = org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getRoutesForLocation ( ) ; assertTrue ( list . length > NUMBER ) ; assertTrue ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getLimitExceeded ( ) ) ; final ObaRoute org.onebusaway.android.io.test.ObaRoute = org.onebusaway.android.io.test.ObaRoute[] [ NUMBER ] ; assertEquals ( ObaRoute . TYPE_BUS , org.onebusaway.android.io.test.ObaRoute . getType ( ) ) ; final ObaAgency org.onebusaway.android.io.test.ObaAgency = org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getAgency ( org.onebusaway.android.io.test.ObaRoute . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getId ( ) ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; ObaRoutesForLocationResponse org.onebusaway.android.io.test.ObaRoutesForLocationResponse = new ObaRoutesForLocationRequest . ObaRoutesForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) . setQuery ( STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse ) ; final ObaRoute [] org.onebusaway.android.io.test.ObaRoute[] = org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getRoutesForLocation ( ) ; assertTrue ( list . length > NUMBER ) ; assertFalse ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getLimitExceeded ( ) ) ; assertFalse ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getOutOfRange ( ) ) ; final ObaRoute org.onebusaway.android.io.test.ObaRoute = org.onebusaway.android.io.test.ObaRoute[] [ NUMBER ] ; assertEquals ( org.onebusaway.android.io.test.ObaRoute . getType ( ) , ObaRoute . TYPE_BUS ) ; final ObaAgency org.onebusaway.android.io.test.ObaAgency = org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getAgency ( org.onebusaway.android.io.test.ObaRoute . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getId ( ) ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; ObaRoutesForLocationResponse org.onebusaway.android.io.test.ObaRoutesForLocationResponse = new ObaRoutesForLocationRequest . ObaRoutesForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) . setQuery ( STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse ) ; final ObaRoute [] org.onebusaway.android.io.test.ObaRoute[] = org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getRoutesForLocation ( ) ; assertEquals ( NUMBER , list . length ) ; assertFalse ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getLimitExceeded ( ) ) ; assertFalse ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getOutOfRange ( ) ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , NUMBER ) ; ObaRoutesForLocationRequest org.onebusaway.android.io.test.ObaRoutesForLocationRequest = new ObaRoutesForLocationRequest . ObaRoutesForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) . build ( ) ; ObaRoutesForLocationResponse org.onebusaway.android.io.test.ObaRoutesForLocationResponse = org.onebusaway.android.io.test.ObaRoutesForLocationRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse ) ; assertTrue ( org.onebusaway.android.io.test.ObaRoutesForLocationResponse . getOutOfRange ( ) ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaScheduleForStopRequest org.onebusaway.android.io.test.ObaScheduleForStopRequest = new ObaScheduleForStopRequest . ObaScheduleForStopRequest ( getContext ( ) , STRING ) . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaScheduleForStopRequest ) ; } 
public void void ( ) { ObaScheduleForStopResponse org.onebusaway.android.io.test.ObaScheduleForStopResponse = new ObaScheduleForStopRequest . ObaScheduleForStopRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaScheduleForStopResponse ) ; final ObaStop org.onebusaway.android.io.test.ObaStop = org.onebusaway.android.io.test.ObaScheduleForStopResponse . getStop ( ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStop . getId ( ) ) ; final ObaRouteSchedule [] org.onebusaway.android.io.test.ObaRouteSchedule[] = org.onebusaway.android.io.test.ObaScheduleForStopResponse . getRouteSchedules ( ) ; assertTrue ( schedules . length > NUMBER ) ; final ObaRouteSchedule . ObaRouteSchedule [] ObaRouteSchedule.Direction[] = org.onebusaway.android.io.test.ObaRouteSchedule[] [ NUMBER ] . getDirectionSchedules ( ) ; assertTrue ( dirs . length > NUMBER ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { Time org.onebusaway.android.io.test.Time = new Time ( ) ; time . year = NUMBER ; time . month = NUMBER ; time . monthDay = NUMBER ; ObaScheduleForStopRequest org.onebusaway.android.io.test.ObaScheduleForStopRequest = new ObaScheduleForStopRequest . ObaScheduleForStopRequest ( getContext ( ) , STRING ) . setDate ( org.onebusaway.android.io.test.Time ) . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaScheduleForStopRequest ) ; } 
public void void ( ) java.lang.Exception { Time org.onebusaway.android.io.test.Time = new Time ( ) ; time . year = NUMBER ; time . month = NUMBER ; time . monthDay = NUMBER ; ObaScheduleForStopRequest org.onebusaway.android.io.test.ObaScheduleForStopRequest = new ObaScheduleForStopRequest . ObaScheduleForStopRequest ( getContext ( ) , STRING ) . setDate ( org.onebusaway.android.io.test.Time ) . build ( ) ; ObaScheduleForStopResponse org.onebusaway.android.io.test.ObaScheduleForStopResponse = org.onebusaway.android.io.test.ObaScheduleForStopRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaScheduleForStopResponse ) ; final ObaStop org.onebusaway.android.io.test.ObaStop = org.onebusaway.android.io.test.ObaScheduleForStopResponse . getStop ( ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStop . getId ( ) ) ; final ObaRouteSchedule [] org.onebusaway.android.io.test.ObaRouteSchedule[] = org.onebusaway.android.io.test.ObaScheduleForStopResponse . getRouteSchedules ( ) ; assertTrue ( schedules . length > NUMBER ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRouteSchedule[] [ NUMBER ] . getRouteId ( ) ) ; final ObaRouteSchedule . ObaRouteSchedule [] ObaRouteSchedule.Direction[] = org.onebusaway.android.io.test.ObaRouteSchedule[] [ NUMBER ] . getDirectionSchedules ( ) ; assertTrue ( dirs . length > NUMBER ) ; assertEquals ( STRING , ObaRouteSchedule.Direction[] [ NUMBER ] . getTripHeadsign ( ) ) ; final ObaRouteSchedule . ObaRouteSchedule [] ObaRouteSchedule.Time[] = ObaRouteSchedule.Direction[] [ NUMBER ] . getStopTimes ( ) ; assertTrue ( times . length > NUMBER ) ; assertEquals ( STRING , ObaRouteSchedule.Time[] [ NUMBER ] . getTripId ( ) ) ; } 
public void void ( ) { ObaShapeRequest . ObaShapeRequest ObaShapeRequest.Builder = new ObaShapeRequest . ObaShapeRequest ( getContext ( ) , STRING ) ; ObaShapeRequest org.onebusaway.android.io.test.ObaShapeRequest = ObaShapeRequest.Builder . build ( ) ; ObaShapeResponse org.onebusaway.android.io.test.ObaShapeResponse = org.onebusaway.android.io.test.ObaShapeRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaShapeResponse ) ; assertTrue ( org.onebusaway.android.io.test.ObaShapeResponse . getLength ( ) > NUMBER ) ; final java.util.List<org.onebusaway.android.io.test.Location> < Location > java.util.List<org.onebusaway.android.io.test.Location> = org.onebusaway.android.io.test.ObaShapeResponse . getPoints ( ) ; assertTrue ( java.util.List<org.onebusaway.android.io.test.Location> . size ( ) > NUMBER ) ; } 
public void void ( ) { ObaShapeRequest org.onebusaway.android.io.test.ObaShapeRequest = ObaShapeRequest . newRequest ( getContext ( ) , STRING ) ; assertNotNull ( org.onebusaway.android.io.test.ObaShapeRequest ) ; } 
public void void ( ) { java.util.List<org.onebusaway.android.io.test.Location> < Location > java.util.List<org.onebusaway.android.io.test.Location> = ObaShapeElement . decodeLine ( STRING , NUMBER ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.Location> ) ; assertEquals ( NUMBER , java.util.List<org.onebusaway.android.io.test.Location> . size ( ) ) ; Location org.onebusaway.android.io.test.Location = java.util.List<org.onebusaway.android.io.test.Location> . get ( NUMBER ) ; assertEquals ( NUMBER / NUMBER , org.onebusaway.android.io.test.Location . getLatitude ( ) ) ; assertEquals ( - NUMBER / NUMBER , org.onebusaway.android.io.test.Location . getLongitude ( ) ) ; java.util.List<org.onebusaway.android.io.test.Location> = ObaShapeElement . decodeLine ( STRING , NUMBER ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.Location> ) ; assertEquals ( java.util.List<org.onebusaway.android.io.test.Location> . size ( ) , NUMBER ) ; org.onebusaway.android.io.test.Location = java.util.List<org.onebusaway.android.io.test.Location> . get ( NUMBER ) ; assertEquals ( NUMBER / NUMBER , org.onebusaway.android.io.test.Location . getLatitude ( ) ) ; assertEquals ( - NUMBER / NUMBER , org.onebusaway.android.io.test.Location . getLongitude ( ) ) ; org.onebusaway.android.io.test.Location = java.util.List<org.onebusaway.android.io.test.Location> . get ( NUMBER ) ; assertEquals ( NUMBER / NUMBER , org.onebusaway.android.io.test.Location . getLatitude ( ) ) ; assertEquals ( - NUMBER / NUMBER , org.onebusaway.android.io.test.Location . getLongitude ( ) ) ; java.util.List<org.onebusaway.android.io.test.Location> = ObaShapeElement . decodeLine ( STRING , NUMBER ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.Location> ) ; assertEquals ( NUMBER , java.util.List<org.onebusaway.android.io.test.Location> . size ( ) ) ; org.onebusaway.android.io.test.Location = java.util.List<org.onebusaway.android.io.test.Location> . get ( NUMBER ) ; assertEquals ( NUMBER / NUMBER , org.onebusaway.android.io.test.Location . getLatitude ( ) ) ; assertEquals ( - NUMBER / NUMBER , org.onebusaway.android.io.test.Location . getLongitude ( ) ) ; } 
public void void ( ) { java.util.List<java.lang.Integer> < java.lang.Integer > java.util.List<java.lang.Integer> = ObaShapeElement . decodeLevels ( STRING , NUMBER ) ; assertNotNull ( java.util.List<java.lang.Integer> ) ; assertEquals ( NUMBER , java.util.List<java.lang.Integer> . int ( ) ) ; java.lang.Integer java.lang.Integer = java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ; assertEquals ( NUMBER , ( int ) java.lang.Integer ) ; java.util.List<java.lang.Integer> = ObaShapeElement . decodeLevels ( STRING , NUMBER ) ; assertNotNull ( java.util.List<java.lang.Integer> ) ; assertEquals ( NUMBER , java.util.List<java.lang.Integer> . int ( ) ) ; assertEquals ( NUMBER , ( int ) java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ) ; assertEquals ( NUMBER , ( int ) java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ) ; assertEquals ( NUMBER , ( int ) java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ) ; assertEquals ( NUMBER , ( int ) java.util.List<java.lang.Integer> . java.lang.Integer ( NUMBER ) ) ; } 
public void void ( ) { ObaStopIdsForAgencyRequest . ObaStopIdsForAgencyRequest ObaStopIdsForAgencyRequest.Builder = new ObaStopIdsForAgencyRequest . ObaStopIdsForAgencyRequest ( getContext ( ) , STRING ) ; ObaStopIdsForAgencyRequest org.onebusaway.android.io.test.ObaStopIdsForAgencyRequest = ObaStopIdsForAgencyRequest.Builder . build ( ) ; ObaStopIdsForAgencyResponse org.onebusaway.android.io.test.ObaStopIdsForAgencyResponse = org.onebusaway.android.io.test.ObaStopIdsForAgencyRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaStopIdsForAgencyResponse ) ; final java.lang.String [] java.lang.String[] = org.onebusaway.android.io.test.ObaStopIdsForAgencyResponse . getStopIds ( ) ; assertNotNull ( java.lang.String[] ) ; assertTrue ( java.lang.String[] . int > NUMBER ) ; assertFalse ( org.onebusaway.android.io.test.ObaStopIdsForAgencyResponse . getLimitExceeded ( ) ) ; } 
public void void ( ) { ObaStopIdsForAgencyRequest org.onebusaway.android.io.test.ObaStopIdsForAgencyRequest = ObaStopIdsForAgencyRequest . newRequest ( getContext ( ) , STRING ) ; assertNotNull ( org.onebusaway.android.io.test.ObaStopIdsForAgencyRequest ) ; } 
public void void ( ) { ObaStopRequest . ObaStopRequest ObaStopRequest.Builder = new ObaStopRequest . ObaStopRequest ( getContext ( ) , STRING ) ; ObaStopRequest org.onebusaway.android.io.test.ObaStopRequest = ObaStopRequest.Builder . build ( ) ; ObaStopResponse org.onebusaway.android.io.test.ObaStopResponse = org.onebusaway.android.io.test.ObaStopRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaStopResponse ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStopResponse . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStopResponse . getStopCode ( ) ) ; assertEquals ( ObaStop . LOCATION_STOP , org.onebusaway.android.io.test.ObaStopResponse . getLocationType ( ) ) ; final java.lang.String [] java.lang.String[] = org.onebusaway.android.io.test.ObaStopResponse . getRouteIds ( ) ; assertNotNull ( java.lang.String[] ) ; MoreAsserts . assertContentsInAnyOrder ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) , STRING , STRING , STRING ) ; final java.util.List<org.onebusaway.android.io.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.io.test.ObaRoute> = org.onebusaway.android.io.test.ObaStopResponse . getRoutes ( ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.ObaRoute> ) ; assertEquals ( java.util.List<org.onebusaway.android.io.test.ObaRoute> . size ( ) , java.lang.String[] . int ) ; } 
public void void ( ) { ObaStopRequest org.onebusaway.android.io.test.ObaStopRequest = ObaStopRequest . newRequest ( getContext ( ) , STRING ) ; assertNotNull ( org.onebusaway.android.io.test.ObaStopRequest ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; ObaStopsForLocationRequest . ObaStopsForLocationRequest ObaStopsForLocationRequest.Builder = new ObaStopsForLocationRequest . ObaStopsForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) ; ObaStopsForLocationRequest org.onebusaway.android.io.test.ObaStopsForLocationRequest = ObaStopsForLocationRequest.Builder . build ( ) ; ObaStopsForLocationResponse org.onebusaway.android.io.test.ObaStopsForLocationResponse = org.onebusaway.android.io.test.ObaStopsForLocationRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaStopsForLocationResponse ) ; final ObaStop [] org.onebusaway.android.io.test.ObaStop[] = org.onebusaway.android.io.test.ObaStopsForLocationResponse . getStops ( ) ; assertTrue ( list . length > NUMBER ) ; final ObaStop org.onebusaway.android.io.test.ObaStop = org.onebusaway.android.io.test.ObaStop[] [ NUMBER ] ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStop . getId ( ) ) ; final ObaRoute org.onebusaway.android.io.test.ObaRoute = org.onebusaway.android.io.test.ObaStopsForLocationResponse . getRoute ( org.onebusaway.android.io.test.ObaStop . getRouteIds ( ) [ NUMBER ] ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRoute . getId ( ) ) ; final ObaAgency org.onebusaway.android.io.test.ObaAgency = org.onebusaway.android.io.test.ObaStopsForLocationResponse . getAgency ( org.onebusaway.android.io.test.ObaRoute . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaAgency . getName ( ) ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; ObaStopsForLocationResponse org.onebusaway.android.io.test.ObaStopsForLocationResponse = new ObaStopsForLocationRequest . ObaStopsForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) . setQuery ( STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaStopsForLocationResponse ) ; final ObaStop [] org.onebusaway.android.io.test.ObaStop[] = org.onebusaway.android.io.test.ObaStopsForLocationResponse . getStops ( ) ; assertTrue ( list . length > NUMBER ) ; assertFalse ( org.onebusaway.android.io.test.ObaStopsForLocationResponse . getLimitExceeded ( ) ) ; assertFalse ( org.onebusaway.android.io.test.ObaStopsForLocationResponse . getOutOfRange ( ) ) ; final ObaStop org.onebusaway.android.io.test.ObaStop = org.onebusaway.android.io.test.ObaStop[] [ NUMBER ] ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStop . getId ( ) ) ; final ObaRoute org.onebusaway.android.io.test.ObaRoute = org.onebusaway.android.io.test.ObaStopsForLocationResponse . getRoute ( org.onebusaway.android.io.test.ObaStop . getRouteIds ( ) [ NUMBER ] ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRoute . getAgencyId ( ) ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; ObaStopsForLocationResponse org.onebusaway.android.io.test.ObaStopsForLocationResponse = new ObaStopsForLocationRequest . ObaStopsForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) . setQuery ( STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaStopsForLocationResponse ) ; final ObaStop [] org.onebusaway.android.io.test.ObaStop[] = org.onebusaway.android.io.test.ObaStopsForLocationResponse . getStops ( ) ; assertEquals ( NUMBER , list . length ) ; assertFalse ( org.onebusaway.android.io.test.ObaStopsForLocationResponse . getLimitExceeded ( ) ) ; assertFalse ( org.onebusaway.android.io.test.ObaStopsForLocationResponse . getOutOfRange ( ) ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , NUMBER ) ; ObaStopsForLocationRequest org.onebusaway.android.io.test.ObaStopsForLocationRequest = new ObaStopsForLocationRequest . ObaStopsForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) . build ( ) ; ObaStopsForLocationResponse org.onebusaway.android.io.test.ObaStopsForLocationResponse = org.onebusaway.android.io.test.ObaStopsForLocationRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaStopsForLocationResponse ) ; assertTrue ( org.onebusaway.android.io.test.ObaStopsForLocationResponse . getOutOfRange ( ) ) ; } 
public void void ( ) { ObaStopsForRouteRequest . ObaStopsForRouteRequest ObaStopsForRouteRequest.Builder = new ObaStopsForRouteRequest . ObaStopsForRouteRequest ( getContext ( ) , STRING ) ; ObaStopsForRouteRequest org.onebusaway.android.io.test.ObaStopsForRouteRequest = ObaStopsForRouteRequest.Builder . build ( ) ; ObaStopsForRouteResponse org.onebusaway.android.io.test.ObaStopsForRouteResponse = org.onebusaway.android.io.test.ObaStopsForRouteRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaStopsForRouteResponse ) ; final java.util.List<org.onebusaway.android.io.test.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.io.test.ObaStop> = org.onebusaway.android.io.test.ObaStopsForRouteResponse . getStops ( ) ; assertNotNull ( java.util.List<org.onebusaway.android.io.test.ObaStop> ) ; assertTrue ( java.util.List<org.onebusaway.android.io.test.ObaStop> . size ( ) > NUMBER ) ; final ObaStop org.onebusaway.android.io.test.ObaStop = java.util.List<org.onebusaway.android.io.test.ObaStop> . get ( NUMBER ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaStop . getId ( ) ) ; final ObaStopGrouping [] org.onebusaway.android.io.test.ObaStopGrouping[] = org.onebusaway.android.io.test.ObaStopsForRouteResponse . getStopGroupings ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaStopGrouping[] ) ; final ObaShape [] org.onebusaway.android.io.test.ObaShape[] = org.onebusaway.android.io.test.ObaStopsForRouteResponse . getShapes ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaShape[] ) ; assertTrue ( shapes . length > NUMBER ) ; } 
public void void ( ) { ObaStopsForRouteResponse org.onebusaway.android.io.test.ObaStopsForRouteResponse = new ObaStopsForRouteRequest . ObaStopsForRouteRequest ( getContext ( ) , STRING ) . setIncludeShapes ( false ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaStopsForRouteResponse ) ; final ObaShape [] org.onebusaway.android.io.test.ObaShape[] = org.onebusaway.android.io.test.ObaStopsForRouteResponse . getShapes ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaShape[] ) ; assertEquals ( NUMBER , shapes . length ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaTripDetailsRequest . ObaTripDetailsRequest ObaTripDetailsRequest.Builder = new ObaTripDetailsRequest . ObaTripDetailsRequest ( getContext ( ) , java.lang.String ) ; ObaTripDetailsRequest org.onebusaway.android.io.test.ObaTripDetailsRequest = ObaTripDetailsRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripDetailsRequest ) ; } 
public void void ( ) java.lang.Exception { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaTripDetailsResponse org.onebusaway.android.io.test.ObaTripDetailsResponse = new ObaTripDetailsRequest . ObaTripDetailsRequest ( getContext ( ) , java.lang.String ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripDetailsResponse ) ; assertEquals ( java.lang.String , org.onebusaway.android.io.test.ObaTripDetailsResponse . getId ( ) ) ; ObaTripSchedule org.onebusaway.android.io.test.ObaTripSchedule = org.onebusaway.android.io.test.ObaTripDetailsResponse . getSchedule ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaTripSchedule ) ; ObaTrip org.onebusaway.android.io.test.ObaTrip = org.onebusaway.android.io.test.ObaTripDetailsResponse . getTrip ( org.onebusaway.android.io.test.ObaTripDetailsResponse . getId ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaTrip ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaTripDetailsRequest org.onebusaway.android.io.test.ObaTripDetailsRequest = new ObaTripDetailsRequest . ObaTripDetailsRequest ( getContext ( ) , java.lang.String ) . setIncludeTrip ( false ) . build ( ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripDetailsRequest ) ; } 
public void void ( ) java.lang.Exception { ObaTripDetailsResponse org.onebusaway.android.io.test.ObaTripDetailsResponse = new ObaTripDetailsRequest . ObaTripDetailsRequest ( getContext ( ) , java.lang.String ) . setIncludeTrip ( false ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripDetailsResponse ) ; assertEquals ( java.lang.String , org.onebusaway.android.io.test.ObaTripDetailsResponse . getId ( ) ) ; ObaTrip org.onebusaway.android.io.test.ObaTrip = org.onebusaway.android.io.test.ObaTripDetailsResponse . getTrip ( org.onebusaway.android.io.test.ObaTripDetailsResponse . getId ( ) ) ; assertNull ( STRING , org.onebusaway.android.io.test.ObaTrip ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaTripDetailsRequest org.onebusaway.android.io.test.ObaTripDetailsRequest = new ObaTripDetailsRequest . ObaTripDetailsRequest ( getContext ( ) , java.lang.String ) . setIncludeSchedule ( false ) . build ( ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripDetailsRequest ) ; } 
public void void ( ) java.lang.Exception { ObaTripDetailsResponse org.onebusaway.android.io.test.ObaTripDetailsResponse = new ObaTripDetailsRequest . ObaTripDetailsRequest ( getContext ( ) , java.lang.String ) . setIncludeSchedule ( false ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripDetailsResponse ) ; assertEquals ( java.lang.String , org.onebusaway.android.io.test.ObaTripDetailsResponse . getId ( ) ) ; ObaTripSchedule org.onebusaway.android.io.test.ObaTripSchedule = org.onebusaway.android.io.test.ObaTripDetailsResponse . getSchedule ( ) ; assertNull ( org.onebusaway.android.io.test.ObaTripSchedule ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaTripDetailsRequest org.onebusaway.android.io.test.ObaTripDetailsRequest = new ObaTripDetailsRequest . ObaTripDetailsRequest ( getContext ( ) , java.lang.String ) . setIncludeStatus ( false ) . build ( ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripDetailsRequest ) ; } 
public void void ( ) java.lang.Exception { ObaTripDetailsResponse org.onebusaway.android.io.test.ObaTripDetailsResponse = new ObaTripDetailsRequest . ObaTripDetailsRequest ( getContext ( ) , java.lang.String ) . setIncludeStatus ( false ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripDetailsResponse ) ; assertEquals ( java.lang.String , org.onebusaway.android.io.test.ObaTripDetailsResponse . getId ( ) ) ; ObaTripStatus org.onebusaway.android.io.test.ObaTripStatus = org.onebusaway.android.io.test.ObaTripDetailsResponse . getStatus ( ) ; assertNull ( org.onebusaway.android.io.test.ObaTripStatus ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaTripDetailsRequest org.onebusaway.android.io.test.ObaTripDetailsRequest = ObaTripDetailsRequest . newRequest ( getContext ( ) , java.lang.String ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripDetailsRequest ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; Application . get ( ) . setCustomApiUrl ( null ) ; ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; Application . get ( ) . setCurrentRegion ( null ) ; } 
private void void ( ) { ObaTripRequest . ObaTripRequest ObaTripRequest.Builder = new ObaTripRequest . ObaTripRequest ( getContext ( ) , java.lang.String ) ; ObaTripRequest org.onebusaway.android.io.test.ObaTripRequest = ObaTripRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripRequest ) ; } 
public void void ( ) java.lang.Exception { ObaTripResponse org.onebusaway.android.io.test.ObaTripResponse = new ObaTripRequest . ObaTripRequest ( getContext ( ) , java.lang.String ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripResponse ) ; assertEquals ( java.lang.String , org.onebusaway.android.io.test.ObaTripResponse . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaTripResponse . getRouteId ( ) ) ; final ObaRoute org.onebusaway.android.io.test.ObaRoute = org.onebusaway.android.io.test.ObaTripResponse . getRoute ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRoute ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRoute . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaRoute . getAgencyId ( ) ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; Application . get ( ) . setCustomApiUrl ( null ) ; ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; Application . get ( ) . setCurrentRegion ( null ) ; } 
private void void ( ) { ObaTripRequest org.onebusaway.android.io.test.ObaTripRequest = ObaTripRequest . newRequest ( getContext ( ) , java.lang.String ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripRequest ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; ObaTripsForLocationRequest . ObaTripsForLocationRequest ObaTripsForLocationRequest.Builder = new ObaTripsForLocationRequest . ObaTripsForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) ; ObaTripsForLocationRequest org.onebusaway.android.io.test.ObaTripsForLocationRequest = ObaTripsForLocationRequest.Builder . build ( ) ; ObaTripsForLocationResponse org.onebusaway.android.io.test.ObaTripsForLocationResponse = org.onebusaway.android.io.test.ObaTripsForLocationRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripsForLocationResponse ) ; final ObaTripDetails [] org.onebusaway.android.io.test.ObaTripDetails[] = org.onebusaway.android.io.test.ObaTripsForLocationResponse . getTrips ( ) ; assertNotNull ( org.onebusaway.android.io.test.ObaTripDetails[] ) ; } 
public void void ( ) { final Location org.onebusaway.android.io.test.Location = LocationUtils . makeLocation ( NUMBER , NUMBER ) ; ObaTripsForLocationRequest org.onebusaway.android.io.test.ObaTripsForLocationRequest = new ObaTripsForLocationRequest . ObaTripsForLocationRequest ( getContext ( ) , org.onebusaway.android.io.test.Location ) . build ( ) ; ObaTripsForLocationResponse org.onebusaway.android.io.test.ObaTripsForLocationResponse = org.onebusaway.android.io.test.ObaTripsForLocationRequest . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripsForLocationResponse ) ; assertTrue ( org.onebusaway.android.io.test.ObaTripsForLocationResponse . getOutOfRange ( ) ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; Application . get ( ) . setCustomApiUrl ( null ) ; ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; Application . get ( ) . setCurrentRegion ( null ) ; } 
private void void ( ) { ObaTripsForRouteRequest . ObaTripsForRouteRequest ObaTripsForRouteRequest.Builder = new ObaTripsForRouteRequest . ObaTripsForRouteRequest ( getContext ( ) , java.lang.String ) ; ObaTripsForRouteRequest org.onebusaway.android.io.test.ObaTripsForRouteRequest = ObaTripsForRouteRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripsForRouteRequest ) ; } 
public void void ( ) java.lang.Exception { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; ObaTripsForRouteResponse org.onebusaway.android.io.test.ObaTripsForRouteResponse = new ObaTripsForRouteRequest . ObaTripsForRouteRequest ( getContext ( ) , java.lang.String ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripsForRouteResponse ) ; ObaTripDetails [] org.onebusaway.android.io.test.ObaTripDetails[] = org.onebusaway.android.io.test.ObaTripsForRouteResponse . getTrips ( ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getId ( ) ) ; assertNull ( org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) ) ; org.onebusaway.android.io.test.ObaTripsForRouteResponse = new ObaTripsForRouteRequest . ObaTripsForRouteRequest ( getContext ( ) , java.lang.String ) . setIncludeStatus ( true ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.io.test.ObaTripsForRouteResponse ) ; org.onebusaway.android.io.test.ObaTripDetails[] = org.onebusaway.android.io.test.ObaTripsForRouteResponse . getTrips ( ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getId ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getLastUpdateTime ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getVehicleId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getNextStop ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getScheduleDeviation ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getPosition ( ) . getLatitude ( ) ) ; assertEquals ( - NUMBER , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getPosition ( ) . getLongitude ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getLastKnownLocation ( ) . getLatitude ( ) ) ; assertEquals ( - NUMBER , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getLastKnownLocation ( ) . getLongitude ( ) ) ; assertEquals ( NUMBER , org.onebusaway.android.io.test.ObaTripDetails[] [ NUMBER ] . getStatus ( ) . getLastLocationUpdateTime ( ) ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; void ( ) ; Application . get ( ) . setCustomApiUrl ( null ) ; ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.io.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; Application . get ( ) . setCurrentRegion ( null ) ; } 
private void void ( ) { ObaTripsForRouteRequest org.onebusaway.android.io.test.ObaTripsForRouteRequest = ObaTripsForRouteRequest . newRequest ( getContext ( ) , java.lang.String ) ; UriAssert . assertUriMatch ( STRING + java.lang.String + STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaTripsForRouteRequest ) ; } 
public void void ( ) { so use Puget Sound base URL        */ ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
public void void ( ) { so use Puget Sound base URL        */ ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionWithPathNoSeparator ( getContext ( ) ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionWithPathNoSeparator ( getContext ( ) ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionNoSeparator ( getContext ( ) ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionNoSeparator ( getContext ( ) ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionWithPort ( getContext ( ) ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionWithPort ( getContext ( ) ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.io.test.ObaRegion ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionNoScheme ( getContext ( ) ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionWithHttps ( ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.io.test.ObaRegion = MockRegion . getRegionWithHttpsAndPort ( ) ; Application . get ( ) . setCustomApiUrl ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; void ( ) ; } 
private void void ( ) { ObaArrivalInfoRequest . ObaArrivalInfoRequest ObaArrivalInfoRequest.Builder = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) ; ObaArrivalInfoRequest org.onebusaway.android.io.test.ObaArrivalInfoRequest = ObaArrivalInfoRequest.Builder . build ( ) ; UriAssert . assertUriMatch ( STRING , new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) { { java.lang.String ( STRING , STRING ) ; java.lang.String ( STRING , STRING ) ; } } , org.onebusaway.android.io.test.ObaArrivalInfoRequest ) ; } 
public void void ( ) { java.util.ArrayList<org.onebusaway.android.io.test.ObaRegion> < ObaRegion > java.util.ArrayList<org.onebusaway.android.io.test.ObaRegion> = RegionUtils . getRegionsFromResources ( getContext ( ) ) ; for ( ObaRegion org.onebusaway.android.io.test.ObaRegion : java.util.ArrayList<org.onebusaway.android.io.test.ObaRegion> ) { try { java.net.URL java.net.URL = new java.net.URL ( org.onebusaway.android.io.test.ObaRegion . getObaBaseUrl ( ) ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { fail ( STRING + org.onebusaway.android.io.test.ObaRegion . getName ( ) + STRING + java.net.MalformedURLException . java.lang.String ( ) ) ; } } } 
public void void ( ) { java.util.ArrayList<org.onebusaway.android.io.test.ObaRegion> < ObaRegion > java.util.ArrayList<org.onebusaway.android.io.test.ObaRegion> = RegionUtils . getRegionsFromResources ( getContext ( ) ) ; for ( ObaRegion org.onebusaway.android.io.test.ObaRegion : java.util.ArrayList<org.onebusaway.android.io.test.ObaRegion> ) { try { if ( org.onebusaway.android.io.test.ObaRegion . getTwitterUrl ( ) != null && ! org.onebusaway.android.io.test.ObaRegion . getTwitterUrl ( ) . isEmpty ( ) ) { java.net.URL java.net.URL = new java.net.URL ( org.onebusaway.android.io.test.ObaRegion . getTwitterUrl ( ) ) ; } } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { fail ( STRING + org.onebusaway.android.io.test.ObaRegion . getName ( ) + STRING + java.net.MalformedURLException . java.lang.String ( ) ) ; } } } 
public void ( Context org.onebusaway.android.mock.Context ) { org.onebusaway.android.mock.Context = org.onebusaway.android.mock.Context ; try { org.onebusaway.android.mock.MockConnectionFactory.UriMap = Resources . readAs ( org.onebusaway.android.mock.Context , Resources . getTestUri ( STRING ) , org.onebusaway.android.mock.MockConnectionFactory.UriMap .class ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; throw new java.lang.RuntimeException ( STRING + java.io.IOException ) ; } } 
@ java.lang.Override public org.onebusaway.android.mock.ObaConnection org.onebusaway.android.mock.ObaConnection ( Uri org.onebusaway.android.mock.Uri ) throws java.io.IOException { return new MockConnection ( org.onebusaway.android.mock.Context , org.onebusaway.android.mock.MockConnectionFactory.UriMap , org.onebusaway.android.mock.Uri ) ; } 
public java.lang.String java.lang.String ( Uri org.onebusaway.android.mock.Uri ) { java.lang.String java.lang.String = java.lang.String ( org.onebusaway.android.mock.Uri ) ; java.lang.String java.lang.String = null ; if ( java.util.HashMap<java.lang.String,java.lang.String> == null ) { throw new java.lang.RuntimeException ( STRING ) ; } java.lang.String = java.util.HashMap<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ; if ( java.lang.String == null ) { throw new java.lang.RuntimeException ( STRING + java.lang.String ) ; } return java.lang.String ; } 
private java.lang.String java.lang.String ( Uri org.onebusaway.android.mock.Uri ) { Uri . Uri Uri.Builder = new Uri . Uri ( ) . encodedPath ( org.onebusaway.android.mock.Uri . getEncodedPath ( ) ) ; java.util.TreeSet<java.lang.String> < java.lang.String > java.util.TreeSet<java.lang.String> = new java.util.TreeSet<java.lang.String> < java.lang.String > ( UriCompat . getQueryParameterNames ( org.onebusaway.android.mock.Uri ) ) ; java.util.TreeSet<java.lang.String> . boolean ( java.util.List<java.lang.String> ) ; for ( java.lang.String java.lang.String : java.util.TreeSet<java.lang.String> ) { Uri.Builder . appendQueryParameter ( java.lang.String , org.onebusaway.android.mock.Uri . getQueryParameter ( java.lang.String ) ) ; } return Uri.Builder . build ( ) . toString ( ) ; } 
void ( Context org.onebusaway.android.mock.Context , MockConnectionFactory . MockConnectionFactory MockConnectionFactory.UriMap , Uri org.onebusaway.android.mock.Uri ) { MockConnectionFactory.UriMap = MockConnectionFactory.UriMap ; org.onebusaway.android.mock.Context = org.onebusaway.android.mock.Context ; org.onebusaway.android.mock.Uri = org.onebusaway.android.mock.Uri ; } 
@ java.lang.Override public void void ( ) {    } 
@ java.lang.Override public java.io.Reader java.io.Reader ( ) java.io.IOException { Log . d ( java.lang.String , STRING + org.onebusaway.android.mock.Uri ) ; java.lang.String java.lang.String = MockConnectionFactory.UriMap . getUri ( org.onebusaway.android.mock.Uri ) ; if ( STRING . boolean ( java.lang.String ) ) { int = java.net.HttpURLConnection . int ; throw new java.io.FileNotFoundException ( ) ; } return Resources . read ( org.onebusaway.android.mock.Context , Resources . getTestUri ( java.lang.String ) ) ; } 
@ java.lang.Override public java.io.Reader java.io.Reader ( java.lang.String java.lang.String ) throws java.io.IOException { throw new java.lang.RuntimeException ( STRING ) ; } 
@ java.lang.Override public int int ( ) java.io.IOException { return int ; } 
public static org.onebusaway.android.mock.ObaStop org.onebusaway.android.mock.ObaStop ( ) { return org.onebusaway.android.mock.ObaStop ; } 
public static java.util.HashMap<java.lang.String,org.onebusaway.android.mock.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.mock.ObaRoute> ( ) { java.util.HashMap<java.lang.String,org.onebusaway.android.mock.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.mock.ObaRoute> = new java.util.HashMap<java.lang.String,org.onebusaway.android.mock.ObaRoute> < java.lang.String , ObaRoute > ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.mock.ObaRoute> . put ( org.onebusaway.android.mock.ObaRoute . getId ( ) , org.onebusaway.android.mock.ObaRoute ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.mock.ObaRoute> . put ( org.onebusaway.android.mock.ObaRoute . getId ( ) , org.onebusaway.android.mock.ObaRoute ) ; return java.util.HashMap<java.lang.String,org.onebusaway.android.mock.ObaRoute> ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public org.onebusaway.android.mock.Location org.onebusaway.android.mock.Location ( ) { return LocationUtils . makeLocation ( double ( ) , double ( ) ) ; } 
@ java.lang.Override public double double ( ) { return NUMBER ; } 
@ java.lang.Override public double double ( ) { return - NUMBER ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public int int ( ) { return ObaStop . LOCATION_STOP ; } 
@ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { java.lang.String [] java.lang.String[] = new java.lang.String [ NUMBER ] ; java.lang.String[] [ NUMBER ] = STRING ; java.lang.String[] [ NUMBER ] = STRING ; return java.lang.String[] ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public int int ( ) { return ObaRoute . TYPE_BUS ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return NUMBER ; } 
@ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return NUMBER ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public int int ( ) { return ObaRoute . TYPE_BUS ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return NUMBER ; } 
@ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return NUMBER ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> < ObaRegion > java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> = RegionUtils . getRegionsFromResources ( org.onebusaway.android.mock.Context ) ; for ( ObaRegion org.onebusaway.android.mock.ObaRegion : java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> ) { if ( org.onebusaway.android.mock.ObaRegion . getId ( ) == int ) { return org.onebusaway.android.mock.ObaRegion ; } } return null ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> < ObaRegion > java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> = RegionUtils . getRegionsFromResources ( org.onebusaway.android.mock.Context ) ; for ( ObaRegion org.onebusaway.android.mock.ObaRegion : java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> ) { if ( org.onebusaway.android.mock.ObaRegion . getId ( ) == int ) { return org.onebusaway.android.mock.ObaRegion ; } } return null ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> < ObaRegion > java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> = RegionUtils . getRegionsFromResources ( org.onebusaway.android.mock.Context ) ; for ( ObaRegion org.onebusaway.android.mock.ObaRegion : java.util.ArrayList<org.onebusaway.android.mock.ObaRegion> ) { if ( org.onebusaway.android.mock.ObaRegion . getId ( ) == int ) { return org.onebusaway.android.mock.ObaRegion ; } } return null ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { ObaRegionElement . ObaRegionElement ObaRegionElement.Bounds = new ObaRegionElement . ObaRegionElement ( NUMBER , - NUMBER , NUMBER , NUMBER ) ; ObaRegionElement . ObaRegionElement [] ObaRegionElement.Bounds[] = new ObaRegionElement . ObaRegionElement [ NUMBER ] ; ObaRegionElement.Bounds[] [ NUMBER ] = ObaRegionElement.Bounds ; return new ObaRegionElement ( NUMBER , STRING , true , STRING , null , ObaRegionElement.Bounds[] , new ObaRegionElement . ObaRegionElement [ NUMBER ] , STRING , STRING , true , true , false , null , false , null , null , null ) ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { ObaRegionElement . ObaRegionElement ObaRegionElement.Bounds = new ObaRegionElement . ObaRegionElement ( NUMBER , - NUMBER , NUMBER , NUMBER ) ; ObaRegionElement . ObaRegionElement [] ObaRegionElement.Bounds[] = new ObaRegionElement . ObaRegionElement [ NUMBER ] ; ObaRegionElement.Bounds[] [ NUMBER ] = ObaRegionElement.Bounds ; return new ObaRegionElement ( NUMBER , STRING , true , STRING , null , ObaRegionElement.Bounds[] , new ObaRegionElement . ObaRegionElement [ NUMBER ] , STRING , STRING , true , true , false , null , false , STRING , null , null ) ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { ObaRegionElement . ObaRegionElement ObaRegionElement.Bounds = new ObaRegionElement . ObaRegionElement ( NUMBER , - NUMBER , NUMBER , NUMBER ) ; ObaRegionElement . ObaRegionElement [] ObaRegionElement.Bounds[] = new ObaRegionElement . ObaRegionElement [ NUMBER ] ; ObaRegionElement.Bounds[] [ NUMBER ] = ObaRegionElement.Bounds ; return new ObaRegionElement ( NUMBER , STRING , true , STRING , null , ObaRegionElement.Bounds[] , new ObaRegionElement . ObaRegionElement [ NUMBER ] , STRING , STRING , true , true , false , null , false , null , null , null ) ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { ObaRegionElement . ObaRegionElement ObaRegionElement.Bounds = new ObaRegionElement . ObaRegionElement ( NUMBER , - NUMBER , NUMBER , NUMBER ) ; ObaRegionElement . ObaRegionElement [] ObaRegionElement.Bounds[] = new ObaRegionElement . ObaRegionElement [ NUMBER ] ; ObaRegionElement.Bounds[] [ NUMBER ] = ObaRegionElement.Bounds ; return new ObaRegionElement ( NUMBER , STRING , true , STRING , null , ObaRegionElement.Bounds[] , new ObaRegionElement . ObaRegionElement [ NUMBER ] , STRING , STRING , true , true , false , null , false , null , null , null ) ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( ) { ObaRegionElement . ObaRegionElement ObaRegionElement.Bounds = new ObaRegionElement . ObaRegionElement ( NUMBER , - NUMBER , NUMBER , NUMBER ) ; ObaRegionElement . ObaRegionElement [] ObaRegionElement.Bounds[] = new ObaRegionElement . ObaRegionElement [ NUMBER ] ; ObaRegionElement.Bounds[] [ NUMBER ] = ObaRegionElement.Bounds ; return new ObaRegionElement ( NUMBER , STRING , true , STRING , null , ObaRegionElement.Bounds[] , new ObaRegionElement . ObaRegionElement [ NUMBER ] , STRING , STRING , true , true , false , null , false , null , null , null ) ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( ) { ObaRegionElement . ObaRegionElement ObaRegionElement.Bounds = new ObaRegionElement . ObaRegionElement ( NUMBER , - NUMBER , NUMBER , NUMBER ) ; ObaRegionElement . ObaRegionElement [] ObaRegionElement.Bounds[] = new ObaRegionElement . ObaRegionElement [ NUMBER ] ; ObaRegionElement.Bounds[] [ NUMBER ] = ObaRegionElement.Bounds ; return new ObaRegionElement ( NUMBER , STRING , true , STRING , null , ObaRegionElement.Bounds[] , new ObaRegionElement . ObaRegionElement [ NUMBER ] , STRING , STRING , true , true , false , null , false , null , null , null ) ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { ObaRegionElement . ObaRegionElement ObaRegionElement.Bounds = new ObaRegionElement . ObaRegionElement ( NUMBER , - NUMBER , NUMBER , NUMBER ) ; ObaRegionElement . ObaRegionElement [] ObaRegionElement.Bounds[] = new ObaRegionElement . ObaRegionElement [ NUMBER ] ; ObaRegionElement.Bounds[] [ NUMBER ] = ObaRegionElement.Bounds ; return new ObaRegionElement ( NUMBER , STRING , true , STRING , null , ObaRegionElement.Bounds[] , null , STRING , STRING , false , false , false , null , false , null , null , null ) ; } 
public static org.onebusaway.android.mock.ObaRegion org.onebusaway.android.mock.ObaRegion ( Context org.onebusaway.android.mock.Context ) { ObaRegionElement . ObaRegionElement ObaRegionElement.Bounds = new ObaRegionElement . ObaRegionElement ( NUMBER , - NUMBER , NUMBER , NUMBER ) ; ObaRegionElement . ObaRegionElement [] ObaRegionElement.Bounds[] = new ObaRegionElement . ObaRegionElement [ NUMBER ] ; ObaRegionElement.Bounds[] [ NUMBER ] = ObaRegionElement.Bounds ; return new ObaRegionElement ( NUMBER , STRING , true , STRING , null , ObaRegionElement.Bounds[] , null , STRING , STRING , false , false , false , null , false , null , null , null ) ; } 
public void ( Context org.onebusaway.android.mock.Context ) { org.onebusaway.android.mock.MockConnectionFactory = new MockConnectionFactory ( org.onebusaway.android.mock.Context ) ; org.onebusaway.android.mock.ObaConnectionFactory = ObaApi . getDefaultContext ( ) . setConnectionFactory ( org.onebusaway.android.mock.MockConnectionFactory ) ; if ( Application . get ( ) . getCurrentRegion ( ) != null ) { org.onebusaway.android.mock.ObaRegion = Application . get ( ) . getCurrentRegion ( ) ; } else { java.lang.String = Application . get ( ) . getCustomApiUrl ( ) ; } } 
public void void ( ) { ObaApi . getDefaultContext ( ) . setConnectionFactory ( org.onebusaway.android.mock.ObaConnectionFactory ) ; if ( org.onebusaway.android.mock.ObaRegion == null && java.lang.String == null ) { Application . get ( ) . setCustomApiUrl ( null ) ; Application . get ( ) . setCurrentRegion ( null ) ; return; } if ( org.onebusaway.android.mock.ObaRegion != null ) { Application . get ( ) . setCurrentRegion ( org.onebusaway.android.mock.ObaRegion ) ; } else { Application . get ( ) . setCustomApiUrl ( java.lang.String ) ; } } 
public static Uri . Uri.Builder Uri.Builder ( ) { return org.onebusaway.android.mock.Uri . buildUpon ( ) ; } 
public static org.onebusaway.android.mock.Uri org.onebusaway.android.mock.Uri ( java.lang.String java.lang.String ) { return Uri . withAppendedPath ( org.onebusaway.android.mock.Uri , java.lang.String ) ; } 
public static java.io.Reader java.io.Reader ( Context org.onebusaway.android.mock.Context , Uri org.onebusaway.android.mock.Uri ) throws java.io.IOException { java.io.InputStream java.io.InputStream = org.onebusaway.android.mock.Context . getContentResolver ( ) . openInputStream ( org.onebusaway.android.mock.Uri ) ; java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader ( java.io.InputStream , STRING ) ; return java.io.InputStreamReader ; } 
public static < T > T T ( Context org.onebusaway.android.mock.Context , Uri org.onebusaway.android.mock.Uri , java.lang.Class<T> < T > java.lang.Class<T> ) throws java.io.IOException { java.io.Reader java.io.Reader = java.io.Reader ( org.onebusaway.android.mock.Context , org.onebusaway.android.mock.Uri ) ; ObaApi . ObaApi ObaApi.SerializationHandler = ObaApi . getSerializer ( java.lang.Class<T> ) ; T T = ObaApi.SerializationHandler . deserialize ( java.io.Reader , java.lang.Class<T> ) ; return T ; } 
@ TargetApi ( value = NUMBER ) public static java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( Uri org.onebusaway.android.mock.Uri ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . HONEYCOMB ) { return org.onebusaway.android.mock.Uri . getQueryParameterNames ( ) ; } else { return java.util.Set<java.lang.String> ( org.onebusaway.android.mock.Uri ) ; } } 
private static java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( Uri org.onebusaway.android.mock.Uri ) { java.lang.String java.lang.String = org.onebusaway.android.mock.Uri . getEncodedQuery ( ) ; if ( java.lang.String == null ) { return java.util.Collections . java.util.Set<java.lang.String> ( ) ; } java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.LinkedHashSet<java.lang.String> < java.lang.String > ( ) ; int int = NUMBER ; do { int int = java.lang.String . int ( '&' , int ) ; int int = ( int == - NUMBER ) ? java.lang.String . int ( ) : int ; int int = java.lang.String . int ( '=' , int ) ; if ( int > int || int == - NUMBER ) { int = int ; } java.lang.String java.lang.String = java.lang.String . java.lang.String ( int , int ) ; java.util.Set<java.lang.String> . boolean ( Uri . decode ( java.lang.String ) ) ; int = int + NUMBER ; } while ( int < java.lang.String . int ( ) ); return java.util.Collections . java.util.Set<java.lang.String> ( java.util.Set<java.lang.String> ) ; } 
public void ( ) { super( ObaProvider .class , ObaContract . AUTHORITY ); } 
public void void ( ) { ContentResolver org.onebusaway.android.provider.test.ContentResolver = getMockContentResolver ( ) ; final java.lang.String java.lang.String = STRING ; ContentValues org.onebusaway.android.provider.test.ContentValues = new ContentValues ( ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . _ID , java.lang.String ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . CODE , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . NAME , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . DIRECTION , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . USE_COUNT , NUMBER ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . LATITUDE , NUMBER ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . LONGITUDE , - NUMBER ) ; Uri org.onebusaway.android.provider.test.Uri = org.onebusaway.android.provider.test.ContentResolver . insert ( ObaContract . Stops . CONTENT_URI , org.onebusaway.android.provider.test.ContentValues ) ; assertNotNull ( org.onebusaway.android.provider.test.Uri ) ; assertEquals ( org.onebusaway.android.provider.test.Uri , Uri . withAppendedPath ( ObaContract . Stops . CONTENT_URI , java.lang.String ) ) ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( ObaContract . Stops . CONTENT_URI , new java.lang.String [] { ObaContract . Stops . _ID , ObaContract . Stops . DIRECTION } , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertTrue ( org.onebusaway.android.provider.test.Cursor . getCount ( ) == NUMBER ) ; org.onebusaway.android.provider.test.Cursor . moveToNext ( ) ; assertEquals ( org.onebusaway.android.provider.test.Cursor . getString ( NUMBER ) , java.lang.String ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( ObaContract . Stops . CONTENT_URI , new java.lang.String [] { ObaContract . Stops . _COUNT } , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( org.onebusaway.android.provider.test.Cursor . getCount ( ) , NUMBER ) ; org.onebusaway.android.provider.test.Cursor . moveToNext ( ) ; assertTrue ( org.onebusaway.android.provider.test.Cursor . getInt ( NUMBER ) == NUMBER ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( org.onebusaway.android.provider.test.Uri , new java.lang.String [] { ObaContract . Stops . CODE } , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( org.onebusaway.android.provider.test.Cursor . getCount ( ) , NUMBER ) ; org.onebusaway.android.provider.test.Cursor . moveToNext ( ) ; assertEquals ( org.onebusaway.android.provider.test.Cursor . getString ( NUMBER ) , STRING ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; org.onebusaway.android.provider.test.ContentValues = new ContentValues ( ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . USE_COUNT , NUMBER ) ; int int = org.onebusaway.android.provider.test.ContentResolver . update ( org.onebusaway.android.provider.test.Uri , org.onebusaway.android.provider.test.ContentValues , null , null ) ; assertEquals ( int , NUMBER ) ; int = org.onebusaway.android.provider.test.ContentResolver . delete ( org.onebusaway.android.provider.test.Uri , null , null ) ; assertEquals ( int , NUMBER ) ; int = org.onebusaway.android.provider.test.ContentResolver . delete ( org.onebusaway.android.provider.test.Uri , null , null ) ; assertEquals ( int , NUMBER ) ; } 
public void void ( ) { ContentResolver org.onebusaway.android.provider.test.ContentResolver = getMockContentResolver ( ) ; final java.lang.String java.lang.String = STRING ; ContentValues org.onebusaway.android.provider.test.ContentValues = new ContentValues ( ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . _ID , java.lang.String ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . CODE , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . NAME , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . DIRECTION , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . USE_COUNT , NUMBER ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . LATITUDE , NUMBER ) ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . LONGITUDE , - NUMBER ) ; Uri org.onebusaway.android.provider.test.Uri = org.onebusaway.android.provider.test.ContentResolver . insert ( ObaContract . Stops . CONTENT_URI , org.onebusaway.android.provider.test.ContentValues ) ; assertNotNull ( org.onebusaway.android.provider.test.Uri ) ; final java.lang.String java.lang.String = STRING ; org.onebusaway.android.provider.test.ContentValues . put ( ObaContract . Stops . _ID , java.lang.String ) ; org.onebusaway.android.provider.test.Uri = org.onebusaway.android.provider.test.ContentResolver . insert ( ObaContract . Stops . CONTENT_URI , org.onebusaway.android.provider.test.ContentValues ) ; assertNotNull ( org.onebusaway.android.provider.test.Uri ) ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( ObaContract . Stops . CONTENT_URI , new java.lang.String [] { ObaContract . Stops . _COUNT } , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( org.onebusaway.android.provider.test.Cursor . getCount ( ) , NUMBER ) ; org.onebusaway.android.provider.test.Cursor . moveToNext ( ) ; assertTrue ( org.onebusaway.android.provider.test.Cursor . getInt ( NUMBER ) == NUMBER ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( ObaContract . Stops . CONTENT_URI . buildUpon ( ) . appendQueryParameter ( STRING , STRING ) . build ( ) , new java.lang.String [] { ObaContract . Stops . _ID } , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( org.onebusaway.android.provider.test.Cursor . getCount ( ) , NUMBER ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; } 
private void void ( ObaRegion . ObaRegion ObaRegion.Bounds , double double , double double , double double , double double ) { assertEquals ( double , ObaRegion.Bounds . getLat ( ) ) ; assertEquals ( double , ObaRegion.Bounds . getLon ( ) ) ; assertEquals ( double , ObaRegion.Bounds . getLatSpan ( ) ) ; assertEquals ( double , ObaRegion.Bounds . getLonSpan ( ) ) ; } 
private void void ( ObaRegion org.onebusaway.android.provider.test.ObaRegion ) { assertEquals ( NUMBER , org.onebusaway.android.provider.test.ObaRegion . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.provider.test.ObaRegion . getName ( ) ) ; ObaRegion . ObaRegion [] ObaRegion.Bounds[] = org.onebusaway.android.provider.test.ObaRegion . getBounds ( ) ; assertNotNull ( ObaRegion.Bounds[] ) ; assertEquals ( NUMBER , bounds . length ) ; void ( ObaRegion.Bounds[] [ NUMBER ] , NUMBER , - NUMBER , NUMBER , NUMBER ) ; void ( ObaRegion.Bounds[] [ NUMBER ] , NUMBER , - NUMBER , NUMBER , NUMBER ) ; assertEquals ( STRING , org.onebusaway.android.provider.test.ObaRegion . getOtpBaseUrl ( ) ) ; assertEquals ( STRING , org.onebusaway.android.provider.test.ObaRegion . getOtpContactEmail ( ) ) ; } 
private void void ( ObaRegion org.onebusaway.android.provider.test.ObaRegion ) { assertEquals ( NUMBER , org.onebusaway.android.provider.test.ObaRegion . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.provider.test.ObaRegion . getName ( ) ) ; ObaRegion . ObaRegion [] ObaRegion.Bounds[] = org.onebusaway.android.provider.test.ObaRegion . getBounds ( ) ; assertNotNull ( ObaRegion.Bounds[] ) ; assertEquals ( NUMBER , bounds . length ) ; void ( ObaRegion.Bounds[] [ NUMBER ] , NUMBER , - NUMBER , NUMBER , NUMBER ) ; void ( ObaRegion.Bounds[] [ NUMBER ] , NUMBER , - NUMBER , NUMBER , NUMBER ) ; void ( ObaRegion.Bounds[] [ NUMBER ] , NUMBER , - NUMBER , NUMBER , NUMBER ) ; assertNull ( org.onebusaway.android.provider.test.ObaRegion . getOtpBaseUrl ( ) ) ; assertNull ( org.onebusaway.android.provider.test.ObaRegion . getOtpContactEmail ( ) ) ; } 
private void void ( ObaRegion org.onebusaway.android.provider.test.ObaRegion ) { assertEquals ( NUMBER , org.onebusaway.android.provider.test.ObaRegion . getId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.provider.test.ObaRegion . getName ( ) ) ; ObaRegion . ObaRegion [] ObaRegion.Bounds[] = org.onebusaway.android.provider.test.ObaRegion . getBounds ( ) ; assertNotNull ( ObaRegion.Bounds[] ) ; assertEquals ( NUMBER , bounds . length ) ; void ( ObaRegion.Bounds[] [ NUMBER ] , NUMBER , - NUMBER , NUMBER , NUMBER ) ; void ( ObaRegion.Bounds[] [ NUMBER ] , NUMBER , - NUMBER , NUMBER , NUMBER ) ; } 
public void void ( ) java.lang.InterruptedException { java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> < ObaRegion > java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> = RegionUtils . getRegionsFromResources ( getContext ( ) ) ; RegionUtils . saveToProvider ( getContext ( ) , java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> ) ; java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> < ObaRegion > java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> = RegionUtils . getRegionsFromProvider ( getContext ( ) ) ; assertNotNull ( java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> . size ( ) ) ; void ( java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> . get ( NUMBER ) ) ; void ( java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> . get ( NUMBER ) ) ; void ( java.util.ArrayList<org.onebusaway.android.provider.test.ObaRegion> . get ( NUMBER ) ) ; } 
public void ( ) { super( ObaProvider .class , ObaContract . AUTHORITY ); } 
public void void ( ) { ContentResolver org.onebusaway.android.provider.test.ContentResolver = getMockContentResolver ( ) ; ContentValues org.onebusaway.android.provider.test.ContentValues = new ContentValues ( ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . NAME , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . OBA_BASE_URL , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SIRI_BASE_URL , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . LANGUAGE , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . CONTACT_EMAIL , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SUPPORTS_OBA_DISCOVERY , true ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SUPPORTS_OBA_REALTIME , false ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SUPPORTS_SIRI_REALTIME , false ) ; Uri org.onebusaway.android.provider.test.Uri = org.onebusaway.android.provider.test.ContentResolver . insert ( Regions . CONTENT_URI , org.onebusaway.android.provider.test.ContentValues ) ; final java.lang.String [] java.lang.String[] = { ObaContract . Regions . _ID , ObaContract . Regions . NAME , ObaContract . Regions . SUPPORTS_OBA_DISCOVERY , ObaContract . Regions . SUPPORTS_SIRI_REALTIME } ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( org.onebusaway.android.provider.test.Uri , java.lang.String[] , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( NUMBER , org.onebusaway.android.provider.test.Cursor . getCount ( ) ) ; org.onebusaway.android.provider.test.Cursor . moveToFirst ( ) ; int int = org.onebusaway.android.provider.test.Cursor . getInt ( NUMBER ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; org.onebusaway.android.provider.test.ContentValues = new ContentValues ( ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SUPPORTS_SIRI_REALTIME , NUMBER ) ; Uri org.onebusaway.android.provider.test.Uri = Regions . insertOrUpdate ( org.onebusaway.android.provider.test.ContentResolver , int , org.onebusaway.android.provider.test.ContentValues ) ; assertEquals ( org.onebusaway.android.provider.test.Uri , org.onebusaway.android.provider.test.Uri ) ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( org.onebusaway.android.provider.test.Uri , java.lang.String[] , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( NUMBER , org.onebusaway.android.provider.test.Cursor . getCount ( ) ) ; org.onebusaway.android.provider.test.Cursor . moveToFirst ( ) ; assertEquals ( int , org.onebusaway.android.provider.test.Cursor . getInt ( NUMBER ) ) ; assertEquals ( STRING , org.onebusaway.android.provider.test.Cursor . getString ( NUMBER ) ) ; assertEquals ( NUMBER , org.onebusaway.android.provider.test.Cursor . getInt ( NUMBER ) ) ; assertEquals ( NUMBER , org.onebusaway.android.provider.test.Cursor . getInt ( NUMBER ) ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; org.onebusaway.android.provider.test.ContentResolver . delete ( org.onebusaway.android.provider.test.Uri , null , null ) ; } 
public void void ( ) { ContentResolver org.onebusaway.android.provider.test.ContentResolver = getMockContentResolver ( ) ; ContentValues org.onebusaway.android.provider.test.ContentValues = new ContentValues ( ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . NAME , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . OBA_BASE_URL , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SIRI_BASE_URL , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . LANGUAGE , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . CONTACT_EMAIL , STRING ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SUPPORTS_OBA_DISCOVERY , true ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SUPPORTS_OBA_REALTIME , false ) ; org.onebusaway.android.provider.test.ContentValues . put ( Regions . SUPPORTS_SIRI_REALTIME , false ) ; Uri org.onebusaway.android.provider.test.Uri = org.onebusaway.android.provider.test.ContentResolver . insert ( Regions . CONTENT_URI , org.onebusaway.android.provider.test.ContentValues ) ; long long = ContentUris . parseId ( org.onebusaway.android.provider.test.Uri ) ; org.onebusaway.android.provider.test.ContentValues = new ContentValues ( ) ; org.onebusaway.android.provider.test.ContentValues . put ( RegionBounds . REGION_ID , long ) ; org.onebusaway.android.provider.test.ContentValues . put ( RegionBounds . LATITUDE , NUMBER ) ; org.onebusaway.android.provider.test.ContentValues . put ( RegionBounds . LONGITUDE , - NUMBER ) ; org.onebusaway.android.provider.test.ContentValues . put ( RegionBounds . LAT_SPAN , NUMBER ) ; org.onebusaway.android.provider.test.ContentValues . put ( RegionBounds . LON_SPAN , NUMBER ) ; org.onebusaway.android.provider.test.ContentResolver . insert ( RegionBounds . CONTENT_URI , org.onebusaway.android.provider.test.ContentValues ) ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( RegionBounds . CONTENT_URI , null , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( NUMBER , org.onebusaway.android.provider.test.Cursor . getCount ( ) ) ; org.onebusaway.android.provider.test.ContentResolver . delete ( org.onebusaway.android.provider.test.Uri , null , null ) ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( RegionBounds . CONTENT_URI , null , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( NUMBER , org.onebusaway.android.provider.test.Cursor . getCount ( ) ) ; } 
public void ( ) { super( ObaProvider .class , ObaContract . AUTHORITY ); } 
public void void ( ) { ContentResolver org.onebusaway.android.provider.test.ContentResolver = getMockContentResolver ( ) ; final Uri org.onebusaway.android.provider.test.Uri = TripAlerts . insertIfNotExists ( org.onebusaway.android.provider.test.ContentResolver , STRING , STRING , NUMBER ) ; assertNotNull ( org.onebusaway.android.provider.test.Uri ) ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( ObaContract . TripAlerts . CONTENT_URI , new java.lang.String [] { ObaContract . TripAlerts . _ID } , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( NUMBER , org.onebusaway.android.provider.test.Cursor . getCount ( ) ) ; final Uri org.onebusaway.android.provider.test.Uri = TripAlerts . insertIfNotExists ( org.onebusaway.android.provider.test.ContentResolver , STRING , STRING , NUMBER ) ; assertNotNull ( org.onebusaway.android.provider.test.Uri ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( ObaContract . TripAlerts . CONTENT_URI , new java.lang.String [] { ObaContract . TripAlerts . _ID } , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; assertEquals ( NUMBER , org.onebusaway.android.provider.test.Cursor . getCount ( ) ) ; assertEquals ( org.onebusaway.android.provider.test.Uri , org.onebusaway.android.provider.test.Uri ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; org.onebusaway.android.provider.test.ContentResolver . delete ( org.onebusaway.android.provider.test.Uri , null , null ) ; } 
public void void ( ) { ContentResolver org.onebusaway.android.provider.test.ContentResolver = getMockContentResolver ( ) ; final Uri org.onebusaway.android.provider.test.Uri = TripAlerts . insertIfNotExists ( org.onebusaway.android.provider.test.ContentResolver , STRING , STRING , NUMBER ) ; assertNotNull ( org.onebusaway.android.provider.test.Uri ) ; final java.lang.String [] java.lang.String[] = { TripAlerts . STATE } ; Cursor org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( org.onebusaway.android.provider.test.Uri , java.lang.String[] , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; org.onebusaway.android.provider.test.Cursor . moveToNext ( ) ; assertEquals ( TripAlerts . STATE_SCHEDULED , org.onebusaway.android.provider.test.Cursor . getInt ( NUMBER ) ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; TripAlerts . setState ( org.onebusaway.android.provider.test.ContentResolver , org.onebusaway.android.provider.test.Uri , TripAlerts . STATE_POLLING ) ; org.onebusaway.android.provider.test.Cursor = org.onebusaway.android.provider.test.ContentResolver . query ( org.onebusaway.android.provider.test.Uri , java.lang.String[] , null , null , null ) ; assertNotNull ( org.onebusaway.android.provider.test.Cursor ) ; org.onebusaway.android.provider.test.Cursor . moveToNext ( ) ; assertEquals ( TripAlerts . STATE_POLLING , org.onebusaway.android.provider.test.Cursor . getInt ( NUMBER ) ) ; org.onebusaway.android.provider.test.Cursor . close ( ) ; org.onebusaway.android.provider.test.ContentResolver . delete ( org.onebusaway.android.provider.test.Uri , null , null ) ; } 
public static void void ( Uri org.onebusaway.android.Uri , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , Uri org.onebusaway.android.Uri ) { assertEquals ( org.onebusaway.android.Uri . getHost ( ) , org.onebusaway.android.Uri . getHost ( ) ) ; assertEquals ( org.onebusaway.android.Uri . getScheme ( ) , org.onebusaway.android.Uri . getScheme ( ) ) ; assertEquals ( org.onebusaway.android.Uri . getPath ( ) , org.onebusaway.android.Uri . getPath ( ) ) ; if ( java.util.Map<java.lang.String,java.lang.String> != null ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ; java.lang.String java.lang.String = org.onebusaway.android.Uri . getQueryParameter ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; if ( STRING . boolean ( java.lang.String ) ) { assertNotNull ( STRING + java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) + STRING , java.lang.String ) ; } else { assertEquals ( STRING + java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) + STRING , java.lang.String , java.lang.String ) ; } } } } 
public static void void ( Uri org.onebusaway.android.Uri , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , RequestBase org.onebusaway.android.RequestBase ) { Uri org.onebusaway.android.Uri ; try { org.onebusaway.android.Uri = org.onebusaway.android.Uri ( org.onebusaway.android.RequestBase ) ; } catch ( java.lang.Exception java.lang.Exception ) { fail ( STRING + java.lang.Exception . java.lang.String ( ) ) ; return; } void ( org.onebusaway.android.Uri , java.util.Map<java.lang.String,java.lang.String> , org.onebusaway.android.Uri ) ; } 
public static void void ( Uri org.onebusaway.android.Uri , RequestBase org.onebusaway.android.RequestBase ) { void ( org.onebusaway.android.Uri , null , org.onebusaway.android.RequestBase ) ; } 
public static void void ( java.lang.String java.lang.String , RequestBase org.onebusaway.android.RequestBase ) { void ( Uri . parse ( java.lang.String ) , null , org.onebusaway.android.RequestBase ) ; } 
public static void void ( java.lang.String java.lang.String , java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> , RequestBase org.onebusaway.android.RequestBase ) { void ( Uri . parse ( java.lang.String ) , java.util.Map<java.lang.String,java.lang.String> , org.onebusaway.android.RequestBase ) ; } 
protected static org.onebusaway.android.Uri org.onebusaway.android.Uri ( RequestBase org.onebusaway.android.RequestBase )            throws java.lang.NoSuchFieldException , java.lang.IllegalAccessException { java.lang.reflect.Field java.lang.reflect.Field = RequestBase .class . java.lang.reflect.Field ( STRING ) ; java.lang.reflect.Field . void ( true ) ; Uri org.onebusaway.android.Uri = ( Uri ) java.lang.reflect.Field . java.lang.Object ( org.onebusaway.android.RequestBase ) ; return org.onebusaway.android.Uri ; } 
@ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; GoogleApiAvailability org.onebusaway.android.util.test.GoogleApiAvailability = GoogleApiAvailability . getInstance ( ) ; if ( org.onebusaway.android.util.test.GoogleApiAvailability . isGooglePlayServicesAvailable ( getContext ( ) ) == ConnectionResult . SUCCESS ) { org.onebusaway.android.util.test.GoogleApiClient = LocationUtils . getGoogleApiClientWithCallbacks ( getContext ( ) ) ; org.onebusaway.android.util.test.GoogleApiClient . connect ( ) ; } } 
@ java.lang.Override protected void void ( ) java.lang.Exception { super. tearDown ( ) ; if ( org.onebusaway.android.util.test.GoogleApiClient != null && org.onebusaway.android.util.test.GoogleApiClient . isConnected ( ) ) { org.onebusaway.android.util.test.GoogleApiClient . disconnect ( ) ; } } 
public void void ( ) { boolean boolean ; Location org.onebusaway.android.util.test.Location ; Location org.onebusaway.android.util.test.Location ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location = null ; boolean = LocationUtils . compareLocationsByTime ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertTrue ( boolean ) ; org.onebusaway.android.util.test.Location = null ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; boolean = LocationUtils . compareLocationsByTime ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertFalse ( boolean ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( NUMBER ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( NUMBER ) ; boolean = LocationUtils . compareLocationsByTime ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertTrue ( boolean ) ; org.onebusaway.android.util.test.Location . setTime ( NUMBER ) ; org.onebusaway.android.util.test.Location . setTime ( NUMBER ) ; boolean = LocationUtils . compareLocationsByTime ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertFalse ( boolean ) ; } 
public void void ( ) { boolean boolean ; Location org.onebusaway.android.util.test.Location ; Location org.onebusaway.android.util.test.Location ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location = null ; boolean = LocationUtils . compareLocations ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertTrue ( boolean ) ; org.onebusaway.android.util.test.Location = null ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; boolean = LocationUtils . compareLocations ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertFalse ( boolean ) ; long long = java.lang.System . long ( ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( long + NUMBER ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( long ) ; boolean = LocationUtils . compareLocations ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertTrue ( boolean ) ; org.onebusaway.android.util.test.Location . setTime ( long ) ; org.onebusaway.android.util.test.Location . setTime ( long + NUMBER ) ; boolean = LocationUtils . compareLocations ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertFalse ( boolean ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( long ) ; org.onebusaway.android.util.test.Location . setAccuracy ( LocationUtils . ACC_THRESHOLD + NUMBER ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setAccuracy ( LocationUtils . ACC_THRESHOLD - NUMBER ) ; org.onebusaway.android.util.test.Location . setTime ( long - LocationUtils . TIME_THRESHOLD - NUMBER ) ; boolean = LocationUtils . compareLocations ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertTrue ( boolean ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( long - LocationUtils . TIME_THRESHOLD - NUMBER ) ; org.onebusaway.android.util.test.Location . setAccuracy ( LocationUtils . ACC_THRESHOLD + NUMBER ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setAccuracy ( LocationUtils . ACC_THRESHOLD - NUMBER ) ; org.onebusaway.android.util.test.Location . setTime ( long - LocationUtils . TIME_THRESHOLD - NUMBER ) ; boolean = LocationUtils . compareLocations ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertFalse ( boolean ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( long + NUMBER ) ; org.onebusaway.android.util.test.Location . setAccuracy ( LocationUtils . ACC_THRESHOLD - NUMBER ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( long ) ; boolean = LocationUtils . compareLocations ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertTrue ( boolean ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( long + NUMBER ) ; org.onebusaway.android.util.test.Location . setAccuracy ( LocationUtils . ACC_THRESHOLD + NUMBER ) ; org.onebusaway.android.util.test.Location = new Location ( STRING ) ; org.onebusaway.android.util.test.Location . setTime ( long ) ; boolean = LocationUtils . compareLocations ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.Location ) ; assertFalse ( boolean ) ; } 
public void void ( ) { Location org.onebusaway.android.util.test.Location ; if ( ! TestUtils . isRunningOnEmulator ( ) ) { org.onebusaway.android.util.test.Location = Application . getLastKnownLocation ( getContext ( ) , null ) ; assertNotNull ( org.onebusaway.android.util.test.Location ) ; Log . d ( java.lang.String , STRING + org.onebusaway.android.util.test.Location . getProvider ( ) + STRING ) ; void ( org.onebusaway.android.util.test.Location ) ; } } 
public void void ( ) { Location org.onebusaway.android.util.test.Location ; GoogleApiAvailability org.onebusaway.android.util.test.GoogleApiAvailability = GoogleApiAvailability . getInstance ( ) ; if ( org.onebusaway.android.util.test.GoogleApiAvailability . isGooglePlayServicesAvailable ( getContext ( ) ) == ConnectionResult . SUCCESS && ! TestUtils . isRunningOnEmulator ( ) ) { org.onebusaway.android.util.test.Location = Application . getLastKnownLocation ( getContext ( ) , org.onebusaway.android.util.test.GoogleApiClient ) ; assertNotNull ( org.onebusaway.android.util.test.Location ) ; Log . d ( java.lang.String , STRING + org.onebusaway.android.util.test.Location . getProvider ( ) + STRING ) ; void ( org.onebusaway.android.util.test.Location ) ; } } 
private void void ( Location org.onebusaway.android.util.test.Location ) { assertTrue ( boolean ( org.onebusaway.android.util.test.Location ) ) ; } 
private boolean boolean ( Location org.onebusaway.android.util.test.Location ) { long long ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) { long = SystemClock . elapsedRealtimeNanos ( ) - org.onebusaway.android.util.test.Location . getElapsedRealtimeNanos ( ) ; Log . d ( java.lang.String , STRING + LocationUtils . printLocationDetails ( org.onebusaway.android.util.test.Location ) ) ; return long <= ( long * NUMBER ) ; } else { long = java.lang.System . long ( ) - org.onebusaway.android.util.test.Location . getTime ( ) ; Log . d ( java.lang.String , STRING + LocationUtils . printLocationDetails ( org.onebusaway.android.util.test.Location ) ) ; return long <= long ; } } 
public void void ( ) { double double = MathUtils . toDirection ( NUMBER ) ; assertEquals ( NUMBER , double ) ; double = MathUtils . toDirection ( NUMBER ) ; assertEquals ( NUMBER , double ) ; double = MathUtils . toDirection ( NUMBER ) ; assertEquals ( NUMBER , double ) ; double = MathUtils . toDirection ( NUMBER ) ; assertEquals ( NUMBER , double ) ; } 
public void void ( ) { assertEquals ( null , MyTextUtils . toTitleCase ( null ) ) ; assertEquals ( STRING , MyTextUtils . toTitleCase ( STRING ) ) ; assertEquals ( STRING , MyTextUtils . toTitleCase ( STRING ) ) ; assertEquals ( STRING , MyTextUtils . toTitleCase ( STRING ) ) ; } 
public void void ( ) { assertEquals ( STRING , MyTextUtils . toSentenceCase ( STRING ) ) ; assertEquals ( STRING , MyTextUtils . toSentenceCase ( STRING ) ) ; assertEquals ( STRING , MyTextUtils . toSentenceCase ( STRING ) ) ; assertEquals ( STRING , MyTextUtils . toSentenceCase ( STRING ) ) ; } 
public void void ( ) { assertTrue ( MyTextUtils . isAllCaps ( STRING ) ) ; assertFalse ( MyTextUtils . isAllCaps ( STRING ) ) ; } 
@ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; org.onebusaway.android.util.test.ObaRegion = MockRegion . getPugetSound ( getContext ( ) ) ; org.onebusaway.android.util.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; org.onebusaway.android.util.test.ObaRegion = MockRegion . getAtlanta ( getContext ( ) ) ; org.onebusaway.android.util.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; org.onebusaway.android.util.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; org.onebusaway.android.util.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; org.onebusaway.android.util.test.Location = LocationUtils . makeLocation ( NUMBER , - NUMBER ) ; org.onebusaway.android.util.test.Location = LocationUtils . makeLocation ( NUMBER , NUMBER ) ; } 
public void void ( ) { float float = RegionUtils . getDistanceAway ( org.onebusaway.android.util.test.ObaRegion , org.onebusaway.android.util.test.Location ) ; void ( NUMBER , float ) ; float = RegionUtils . getDistanceAway ( org.onebusaway.android.util.test.ObaRegion , org.onebusaway.android.util.test.Location ) ; void ( NUMBER , float ) ; float = RegionUtils . getDistanceAway ( org.onebusaway.android.util.test.ObaRegion , org.onebusaway.android.util.test.Location ) ; void ( NUMBER , float ) ; } 
public void void ( ) { java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> < ObaRegion > java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> = new java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> <> ( ) ; java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> . add ( org.onebusaway.android.util.test.ObaRegion ) ; java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> . add ( org.onebusaway.android.util.test.ObaRegion ) ; java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> . add ( org.onebusaway.android.util.test.ObaRegion ) ; boolean boolean = false ; ObaRegion org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertEquals ( org.onebusaway.android.util.test.ObaRegion . getId ( ) , MockRegion . PUGET_SOUND_REGION_ID ) ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertEquals ( org.onebusaway.android.util.test.ObaRegion . getId ( ) , MockRegion . TAMPA_REGION_ID ) ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertEquals ( org.onebusaway.android.util.test.ObaRegion . getId ( ) , MockRegion . ATLANTA_REGION_ID ) ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertEquals ( org.onebusaway.android.util.test.ObaRegion . getId ( ) , MockRegion . ATLANTA_REGION_ID ) ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertEquals ( org.onebusaway.android.util.test.ObaRegion . getId ( ) , MockRegion . TAMPA_REGION_ID ) ; boolean = true ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertEquals ( org.onebusaway.android.util.test.ObaRegion . getId ( ) , MockRegion . PUGET_SOUND_REGION_ID ) ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertEquals ( org.onebusaway.android.util.test.ObaRegion . getId ( ) , MockRegion . TAMPA_REGION_ID ) ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertEquals ( org.onebusaway.android.util.test.ObaRegion . getId ( ) , MockRegion . ATLANTA_REGION_ID ) ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertNull ( org.onebusaway.android.util.test.ObaRegion ) ; org.onebusaway.android.util.test.ObaRegion = RegionUtils . getClosestRegion ( java.util.ArrayList<org.onebusaway.android.util.test.ObaRegion> , org.onebusaway.android.util.test.Location , boolean ) ; assertNull ( org.onebusaway.android.util.test.ObaRegion ) ; } 
public void void ( ) { double [] double[] = new double [ NUMBER ] ; RegionUtils . getRegionSpan ( org.onebusaway.android.util.test.ObaRegion , double[] ) ; void ( NUMBER , ( float ) double[] [ NUMBER ] ) ; void ( NUMBER , ( float ) double[] [ NUMBER ] ) ; void ( NUMBER , ( float ) double[] [ NUMBER ] ) ; void ( - NUMBER , ( float ) double[] [ NUMBER ] ) ; } 
public void void ( ) { assertTrue ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; assertFalse ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; assertFalse ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; assertTrue ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; assertFalse ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; assertFalse ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; assertTrue ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; assertFalse ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; assertFalse ( RegionUtils . isLocationWithinRegion ( org.onebusaway.android.util.test.Location , org.onebusaway.android.util.test.ObaRegion ) ) ; } 
public void void ( ) { assertTrue ( RegionUtils . isRegionUsable ( org.onebusaway.android.util.test.ObaRegion ) ) ; assertTrue ( RegionUtils . isRegionUsable ( org.onebusaway.android.util.test.ObaRegion ) ) ; assertTrue ( RegionUtils . isRegionUsable ( org.onebusaway.android.util.test.ObaRegion ) ) ; assertFalse ( RegionUtils . isRegionUsable ( MockRegion . getRegionWithoutObaApis ( getContext ( ) ) ) ) ; assertFalse ( RegionUtils . isRegionUsable ( MockRegion . getInactiveRegion ( getContext ( ) ) ) ) ; } 
private void void ( float float , float float ) { assertTrue ( float - float <= float && float <= float + float ) ; } 
public void void ( ) { java.lang.String [] java.lang.String[] = { STRING , STRING , STRING , STRING , STRING } ; java.lang.String [] java.lang.String[] = { STRING , STRING } ; for ( java.lang.String java.lang.String : java.lang.String[] ) { assertTrue ( ServiceUtils . isTransitStopServiceByText ( java.lang.String ) ) ; } for ( java.lang.String java.lang.String : java.lang.String[] ) { assertTrue ( ServiceUtils . isTransitTripServiceByText ( java.lang.String ) ) ; } java.lang.String [] java.lang.String[] = { STRING , STRING , STRING } ; for ( java.lang.String java.lang.String : java.lang.String[] ) { assertFalse ( ServiceUtils . isTransitStopServiceByText ( java.lang.String ) ) ; } for ( java.lang.String java.lang.String : java.lang.String[] ) { assertFalse ( ServiceUtils . isTransitStopServiceByText ( java.lang.String ) ) ; } } 
public void void ( ) { ObaStop org.onebusaway.android.util.test.ObaStop = MockObaStop . getMockStop ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.util.test.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.util.test.ObaRoute> = MockObaStop . getMockRoutes ( ) ; java.lang.String java.lang.String = UIUtils . serializeRouteDisplayNames ( org.onebusaway.android.util.test.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.util.test.ObaRoute> ) ; assertEquals ( STRING , java.lang.String ) ; } 
public void void ( ) { java.lang.String java.lang.String = STRING ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = UIUtils . deserializeRouteDisplayNames ( java.lang.String ) ; assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; assertEquals ( STRING , java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; } 
public void void ( ) { java.lang.String java.lang.String ; java.util.ArrayList<java.lang.String> < java.lang.String > java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; java.util.ArrayList<java.lang.String> < java.lang.String > java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.lang.String = UIUtils . formatRouteDisplayNames ( java.util.ArrayList<java.lang.String> , java.util.ArrayList<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; java.util.ArrayList<java.lang.String> . void ( ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.lang.String = UIUtils . formatRouteDisplayNames ( java.util.ArrayList<java.lang.String> , java.util.ArrayList<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; java.util.ArrayList<java.lang.String> . void ( ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.lang.String = UIUtils . formatRouteDisplayNames ( java.util.ArrayList<java.lang.String> , java.util.ArrayList<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; java.util.ArrayList<java.lang.String> . void ( ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.lang.String = UIUtils . formatRouteDisplayNames ( java.util.ArrayList<java.lang.String> , java.util.ArrayList<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; java.util.ArrayList<java.lang.String> . void ( ) ; java.util.ArrayList<java.lang.String> . void ( ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; java.lang.String = UIUtils . formatRouteDisplayNames ( java.util.ArrayList<java.lang.String> , java.util.ArrayList<java.lang.String> ) ; assertEquals ( STRING , java.lang.String ) ; } 
public void void ( ) { assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; assertEquals ( STRING , UIUtils . formatDisplayText ( STRING ) ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.util.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.util.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.util.test.ObaRegion ) ; ObaArrivalInfoResponse org.onebusaway.android.util.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.util.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.util.test.ObaStop = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.util.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) ) ; java.util.List<org.onebusaway.android.util.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.util.test.ObaRoute> = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.util.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.util.test.ObaAgency = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.util.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.util.test.ObaAgency . getId ( ) ) ; ObaArrivalInfo [] org.onebusaway.android.util.test.ObaArrivalInfo[] = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; assertNotNull ( org.onebusaway.android.util.test.ObaArrivalInfo[] ) ; java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> < ArrivalInfo > java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> = ArrivalInfoUtils . convertObaArrivalInfo ( getContext ( ) , org.onebusaway.android.util.test.ObaArrivalInfo[] , null , org.onebusaway.android.util.test.ObaArrivalInfoResponse . getCurrentTime ( ) , true ) ; ObaRoute org.onebusaway.android.util.test.ObaRoute = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getRoute ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) . getRouteId ( ) ) ; java.lang.String java.lang.String = org.onebusaway.android.util.test.ObaRoute != null ? org.onebusaway.android.util.test.ObaRoute . getUrl ( ) : null ; boolean boolean = ! TextUtils . isEmpty ( java.lang.String ) ; boolean boolean = false ; boolean boolean = false ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = UIUtils . buildTripOptions ( getContext ( ) , boolean , boolean , boolean ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; boolean = true ; java.util.List<java.lang.String> = UIUtils . buildTripOptions ( getContext ( ) , boolean , boolean , boolean ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; ObaArrivalInfoResponse org.onebusaway.android.util.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.util.test.ObaArrivalInfoResponse ) ; org.onebusaway.android.util.test.ObaStop = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.util.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) ) ; java.util.List<org.onebusaway.android.util.test.ObaRoute> = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.util.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaRoute> . size ( ) > NUMBER ) ; org.onebusaway.android.util.test.ObaAgency = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.util.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.util.test.ObaAgency . getId ( ) ) ; org.onebusaway.android.util.test.ObaArrivalInfo[] = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; assertNotNull ( org.onebusaway.android.util.test.ObaArrivalInfo[] ) ; java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> = ArrivalInfoUtils . convertObaArrivalInfo ( getContext ( ) , org.onebusaway.android.util.test.ObaArrivalInfo[] , null , org.onebusaway.android.util.test.ObaArrivalInfoResponse . getCurrentTime ( ) , true ) ; org.onebusaway.android.util.test.ObaRoute = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getRoute ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) . getRouteId ( ) ) ; java.lang.String = org.onebusaway.android.util.test.ObaRoute != null ? org.onebusaway.android.util.test.ObaRoute . getUrl ( ) : null ; boolean boolean = ! TextUtils . isEmpty ( java.lang.String ) ; boolean = false ; java.util.List<java.lang.String> = UIUtils . buildTripOptions ( getContext ( ) , boolean , boolean , boolean ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; boolean = true ; java.util.List<java.lang.String> = UIUtils . buildTripOptions ( getContext ( ) , boolean , boolean , boolean ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; boolean = true ; boolean = false ; java.util.List<java.lang.String> = UIUtils . buildTripOptions ( getContext ( ) , boolean , boolean , boolean ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; boolean = true ; java.util.List<java.lang.String> = UIUtils . buildTripOptions ( getContext ( ) , boolean , boolean , boolean ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; boolean = false ; java.util.List<java.lang.String> = UIUtils . buildTripOptions ( getContext ( ) , boolean , boolean , boolean ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; boolean = true ; java.util.List<java.lang.String> = UIUtils . buildTripOptions ( getContext ( ) , boolean , boolean , boolean ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; assertEquals ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) , STRING ) ; } 
public void void ( ) { final java.lang.String java.lang.String = STRING ; Pair org.onebusaway.android.util.test.Pair ; java.lang.StringBuilder java.lang.StringBuilder ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = null ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = null ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; java.util.List<java.lang.String> . boolean ( STRING ) ; org.onebusaway.android.util.test.Pair = UIUtils . createStopDetailsDialogText ( getContext ( ) , java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.util.List<java.lang.String> ) ; assertEquals ( java.lang.String , ( java.lang.String ) stopDetails . first ) ; java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; assertEquals ( java.lang.StringBuilder . java.lang.String ( ) , ( java.lang.String ) stopDetails . second ) ; java.lang.String = STRING ; org.onebusaway.android.util.test.Pair = UIUtils . createStopDetailsDialogText ( getContext ( ) , java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.util.List<java.lang.String> ) ; assertEquals ( java.lang.String , ( java.lang.String ) stopDetails . first ) ; java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; assertEquals ( java.lang.StringBuilder . java.lang.String ( ) , ( java.lang.String ) stopDetails . second ) ; java.lang.String = null ; java.lang.String = STRING ; org.onebusaway.android.util.test.Pair = UIUtils . createStopDetailsDialogText ( getContext ( ) , java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.util.List<java.lang.String> ) ; assertEquals ( java.lang.String , ( java.lang.String ) stopDetails . first ) ; java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( getContext ( ) . getString ( UIUtils . getStopDirectionText ( java.lang.String ) ) ) ; assertEquals ( java.lang.StringBuilder . java.lang.String ( ) , ( java.lang.String ) stopDetails . second ) ; java.lang.String = STRING ; java.lang.String = STRING ; org.onebusaway.android.util.test.Pair = UIUtils . createStopDetailsDialogText ( getContext ( ) , java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.util.List<java.lang.String> ) ; assertEquals ( java.lang.String , ( java.lang.String ) stopDetails . first ) ; java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( getContext ( ) . getString ( UIUtils . getStopDirectionText ( java.lang.String ) ) ) ; assertEquals ( java.lang.StringBuilder . java.lang.String ( ) , ( java.lang.String ) stopDetails . second ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.util.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.util.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.util.test.ObaRegion ) ; ObaArrivalInfoResponse org.onebusaway.android.util.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.util.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.util.test.ObaStop = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.util.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) ) ; java.util.List<org.onebusaway.android.util.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.util.test.ObaRoute> = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.util.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.util.test.ObaAgency = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.util.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.util.test.ObaAgency . getId ( ) ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , true ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , true ) ; ObaArrivalInfo [] org.onebusaway.android.util.test.ObaArrivalInfo[] = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; assertNotNull ( org.onebusaway.android.util.test.ObaArrivalInfo[] ) ; java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> < ArrivalInfo > java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> = ArrivalInfoUtils . convertObaArrivalInfo ( getContext ( ) , org.onebusaway.android.util.test.ObaArrivalInfo[] , null , org.onebusaway.android.util.test.ObaArrivalInfoResponse . getCurrentTime ( ) , true ) ; void ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> ) ; int int = ArrivalInfoUtils . findFirstNonNegativeArrival ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> ) ; assertEquals ( NUMBER , int ) ; java.util.ArrayList<java.lang.Integer> < java.lang.Integer > java.util.ArrayList<java.lang.Integer> = ArrivalInfoUtils . findPreferredArrivalIndexes ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> ) ; assertEquals ( NUMBER , java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( NUMBER ) . int ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( NUMBER ) . int ( ) ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; ObaContract . RouteHeadsignFavorites . markAsFavorite ( getContext ( ) , STRING , STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) , false ) ; java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> = ArrivalInfoUtils . convertObaArrivalInfo ( getContext ( ) , org.onebusaway.android.util.test.ObaArrivalInfo[] , null , org.onebusaway.android.util.test.ObaArrivalInfoResponse . getCurrentTime ( ) , true ) ; java.util.ArrayList<java.lang.Integer> = ArrivalInfoUtils . findPreferredArrivalIndexes ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> ) ; assertEquals ( NUMBER , java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( NUMBER ) . int ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<java.lang.Integer> . java.lang.Integer ( NUMBER ) . int ( ) ) ; } 
public void void ( ) { ObaRegion org.onebusaway.android.util.test.ObaRegion = MockRegion . getTampa ( getContext ( ) ) ; assertNotNull ( org.onebusaway.android.util.test.ObaRegion ) ; Application . get ( ) . setCurrentRegion ( org.onebusaway.android.util.test.ObaRegion ) ; ObaArrivalInfoResponse org.onebusaway.android.util.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.util.test.ObaArrivalInfoResponse ) ; ObaStop org.onebusaway.android.util.test.ObaStop = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getStop ( ) ; assertNotNull ( org.onebusaway.android.util.test.ObaStop ) ; assertEquals ( STRING , org.onebusaway.android.util.test.ObaStop . getId ( ) ) ; java.util.List<org.onebusaway.android.util.test.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.util.test.ObaRoute> = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getRoutes ( org.onebusaway.android.util.test.ObaStop . getRouteIds ( ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaRoute> . size ( ) > NUMBER ) ; ObaAgency org.onebusaway.android.util.test.ObaAgency = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getAgency ( java.util.List<org.onebusaway.android.util.test.ObaRoute> . get ( NUMBER ) . getAgencyId ( ) ) ; assertEquals ( STRING , org.onebusaway.android.util.test.ObaAgency . getId ( ) ) ; ObaArrivalInfo [] org.onebusaway.android.util.test.ObaArrivalInfo[] = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getArrivalInfo ( ) ; assertNotNull ( org.onebusaway.android.util.test.ObaArrivalInfo[] ) ; boolean boolean = true ; java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> < ArrivalInfo > java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> = ArrivalInfoUtils . convertObaArrivalInfo ( getContext ( ) , org.onebusaway.android.util.test.ObaArrivalInfo[] , null , org.onebusaway.android.util.test.ObaArrivalInfoResponse . getCurrentTime ( ) , boolean ) ; void ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + java.lang.String ( NUMBER ) , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getTimeText ( ) ) ; boolean = false ; java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> = ArrivalInfoUtils . convertObaArrivalInfo ( getContext ( ) , org.onebusaway.android.util.test.ObaArrivalInfo[] , null , org.onebusaway.android.util.test.ObaArrivalInfoResponse . getCurrentTime ( ) , boolean ) ; void ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getStatusText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; assertEquals ( STRING + UIUtils . getRouteDisplayName ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getInfo ( ) ) + STRING , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getNotifyText ( ) ) ; } 
public void void ( ) { TextView org.onebusaway.android.util.test.TextView = new TextView ( getContext ( ) ) ; java.lang.String java.lang.String = STRING ; float float = org.onebusaway.android.util.test.TextView . getTextSize ( ) ; UIUtils . maybeShrinkRouteName ( getContext ( ) , org.onebusaway.android.util.test.TextView , java.lang.String ) ; assertEquals ( float , org.onebusaway.android.util.test.TextView . getTextSize ( ) ) ; java.lang.String = STRING ; UIUtils . maybeShrinkRouteName ( getContext ( ) , org.onebusaway.android.util.test.TextView , java.lang.String ) ; assertEquals ( getContext ( ) . getResources ( ) . getDimension ( R . dimen . route_name_text_size_medium ) , org.onebusaway.android.util.test.TextView . getTextSize ( ) ) ; java.lang.String = STRING ; UIUtils . maybeShrinkRouteName ( getContext ( ) , org.onebusaway.android.util.test.TextView , java.lang.String ) ; assertEquals ( getContext ( ) . getResources ( ) . getDimension ( R . dimen . route_name_text_size_small ) , org.onebusaway.android.util.test.TextView . getTextSize ( ) ) ; } 
private void void ( java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> < ArrivalInfo > java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> ) { assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . size ( ) ) ; assertEquals ( - NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( - NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( - NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( - NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( - NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; assertEquals ( NUMBER , java.util.ArrayList<org.onebusaway.android.util.test.ArrivalInfo> . get ( NUMBER ) . getEta ( ) ) ; } 
public void void ( ) { java.lang.String java.lang.String = STRING ; int int = NUMBER ; int int = Color . parseColor ( java.lang.String ) ; int int = UIUtils . getTransparentColor ( int , int ) ; int int = Color . red ( int ) ; int int = Color . green ( int ) ; int int = Color . blue ( int ) ; int int = Color . red ( int ) ; int int = Color . green ( int ) ; int int = Color . blue ( int ) ; int int = Color . alpha ( int ) ; assertEquals ( int , int ) ; assertEquals ( int , int ) ; assertEquals ( int , int ) ; assertEquals ( int , int ) ; } 
private java.lang.String java.lang.String ( long long ) { return UIUtils . formatTime ( getContext ( ) , long ) ; } 
public void void ( ) { Bundle org.onebusaway.android.util.test.Bundle = null ; assertNull ( UIUtils . getMapCenter ( org.onebusaway.android.util.test.Bundle ) ) ; org.onebusaway.android.util.test.Bundle = new Bundle ( ) ; assertNull ( UIUtils . getMapCenter ( org.onebusaway.android.util.test.Bundle ) ) ; org.onebusaway.android.util.test.Bundle . putDouble ( MapParams . CENTER_LAT , NUMBER ) ; assertNull ( UIUtils . getMapCenter ( org.onebusaway.android.util.test.Bundle ) ) ; org.onebusaway.android.util.test.Bundle = new Bundle ( ) ; org.onebusaway.android.util.test.Bundle . putDouble ( MapParams . CENTER_LON , NUMBER ) ; assertNull ( UIUtils . getMapCenter ( org.onebusaway.android.util.test.Bundle ) ) ; org.onebusaway.android.util.test.Bundle = new Bundle ( ) ; org.onebusaway.android.util.test.Bundle . putDouble ( MapParams . CENTER_LAT , NUMBER ) ; org.onebusaway.android.util.test.Bundle . putDouble ( MapParams . CENTER_LON , NUMBER ) ; assertNull ( UIUtils . getMapCenter ( org.onebusaway.android.util.test.Bundle ) ) ; final double double = NUMBER ; final double double = - NUMBER ; org.onebusaway.android.util.test.Bundle = new Bundle ( ) ; org.onebusaway.android.util.test.Bundle . putDouble ( MapParams . CENTER_LAT , double ) ; org.onebusaway.android.util.test.Bundle . putDouble ( MapParams . CENTER_LON , double ) ; Location org.onebusaway.android.util.test.Location = UIUtils . getMapCenter ( org.onebusaway.android.util.test.Bundle ) ; assertNotNull ( org.onebusaway.android.util.test.Location ) ; assertEquals ( double , org.onebusaway.android.util.test.Location . getLatitude ( ) ) ; assertEquals ( double , org.onebusaway.android.util.test.Location . getLongitude ( ) ) ; } 
public void void ( ) { Application . get ( ) . setCustomApiUrl ( STRING ) ; ObaArrivalInfoResponse org.onebusaway.android.util.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.util.test.ObaArrivalInfoResponse ) ; java.util.List<org.onebusaway.android.util.test.ObaSituation> < ObaSituation > java.util.List<org.onebusaway.android.util.test.ObaSituation> = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituations ( ) ; assertNotNull ( java.util.List<org.onebusaway.android.util.test.ObaSituation> ) ; assertEquals ( NUMBER , java.util.List<org.onebusaway.android.util.test.ObaSituation> . size ( ) ) ; java.util.List<org.onebusaway.android.util.test.ObaSituation> < ObaSituation > java.util.List<org.onebusaway.android.util.test.ObaSituation> = UIUtils . getAllSituations ( org.onebusaway.android.util.test.ObaArrivalInfoResponse ) ; java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( ObaSituation org.onebusaway.android.util.test.ObaSituation : java.util.List<org.onebusaway.android.util.test.ObaSituation> ) { java.util.HashSet<java.lang.String> . boolean ( org.onebusaway.android.util.test.ObaSituation . getId ( ) ) ; } assertEquals ( NUMBER , java.util.List<org.onebusaway.android.util.test.ObaSituation> . size ( ) ) ; assertEquals ( NUMBER , java.util.HashSet<java.lang.String> . int ( ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; org.onebusaway.android.util.test.ObaArrivalInfoResponse = new ObaArrivalInfoRequest . ObaArrivalInfoRequest ( getContext ( ) , STRING ) . build ( ) . call ( ) ; assertOK ( org.onebusaway.android.util.test.ObaArrivalInfoResponse ) ; java.util.List<org.onebusaway.android.util.test.ObaSituation> = org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituations ( ) ; assertNotNull ( java.util.List<org.onebusaway.android.util.test.ObaSituation> ) ; assertEquals ( NUMBER , java.util.List<org.onebusaway.android.util.test.ObaSituation> . size ( ) ) ; java.util.List<org.onebusaway.android.util.test.ObaSituation> = UIUtils . getAllSituations ( org.onebusaway.android.util.test.ObaArrivalInfoResponse ) ; java.util.HashSet<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( ObaSituation org.onebusaway.android.util.test.ObaSituation : java.util.List<org.onebusaway.android.util.test.ObaSituation> ) { java.util.HashSet<java.lang.String> . boolean ( org.onebusaway.android.util.test.ObaSituation . getId ( ) ) ; } assertEquals ( NUMBER , java.util.List<org.onebusaway.android.util.test.ObaSituation> . size ( ) ) ; assertEquals ( NUMBER , java.util.HashSet<java.lang.String> . int ( ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.HashSet<java.lang.String> . boolean ( STRING ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituation ( STRING ) ) ) ; assertTrue ( java.util.List<org.onebusaway.android.util.test.ObaSituation> . contains ( org.onebusaway.android.util.test.ObaArrivalInfoResponse . getSituations ( ) . get ( NUMBER ) ) ) ; } 
public static void void ( final Marker org.onebusaway.android.map.googlemapsv2.Marker , final LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . ICE_CREAM_SANDWICH ) { void ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } else if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . HONEYCOMB_MR1 ) { void ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } else { void ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } 
private static void void ( final Marker org.onebusaway.android.map.googlemapsv2.Marker , final LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { final org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator = new org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator.Linear ( ) ; final LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Marker . getPosition ( ) ; final Handler org.onebusaway.android.map.googlemapsv2.Handler = new Handler ( ) ; final long long = SystemClock . uptimeMillis ( ) ; final Interpolator org.onebusaway.android.map.googlemapsv2.Interpolator = new AccelerateDecelerateInterpolator ( ) ; final float float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Handler . post ( new java.lang.Runnable ( ) { long long ; float float ; float float ; @ java.lang.Override public void void ( ) { long = SystemClock . uptimeMillis ( ) - long ; float = long / float ; float = org.onebusaway.android.map.googlemapsv2.Interpolator . getInterpolation ( float ) ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ) ; if ( float < NUMBER ) { org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( this , NUMBER ) ; } } } ) ; } 
@ java.lang.Override public void void ( ) { long = SystemClock . uptimeMillis ( ) - long ; float = long / float ; float = org.onebusaway.android.map.googlemapsv2.Interpolator . getInterpolation ( float ) ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ) ; if ( float < NUMBER ) { org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( this , NUMBER ) ; } } 
@ TargetApi ( Build . VERSION_CODES . HONEYCOMB_MR1 ) private static void void ( final Marker org.onebusaway.android.map.googlemapsv2.Marker , final LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { final org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator = new org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator.Linear ( ) ; final LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Marker . getPosition ( ) ; ValueAnimator org.onebusaway.android.map.googlemapsv2.ValueAnimator = new ValueAnimator ( ) ; org.onebusaway.android.map.googlemapsv2.ValueAnimator . addUpdateListener ( new ValueAnimator . ValueAnimator ( ) { @ java.lang.Override public void void ( ValueAnimator org.onebusaway.android.map.googlemapsv2.ValueAnimator ) { float float = org.onebusaway.android.map.googlemapsv2.ValueAnimator . getAnimatedFraction ( ) ; LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } ) ; org.onebusaway.android.map.googlemapsv2.ValueAnimator . setFloatValues ( NUMBER , NUMBER ) ; org.onebusaway.android.map.googlemapsv2.ValueAnimator . setDuration ( NUMBER ) ; org.onebusaway.android.map.googlemapsv2.ValueAnimator . start ( ) ; } 
@ java.lang.Override public void void ( ValueAnimator org.onebusaway.android.map.googlemapsv2.ValueAnimator ) { float float = org.onebusaway.android.map.googlemapsv2.ValueAnimator . getAnimatedFraction ( ) ; LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } 
@ TargetApi ( Build . VERSION_CODES . ICE_CREAM_SANDWICH ) private static void void ( Marker org.onebusaway.android.map.googlemapsv2.Marker , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { final org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator = new org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator.Linear ( ) ; TypeEvaluator < LatLng > org.onebusaway.android.map.googlemapsv2.TypeEvaluator<org.onebusaway.android.map.googlemapsv2.LatLng> = new TypeEvaluator < LatLng > ( ) { @ java.lang.Override public org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( float float , LatLng org.onebusaway.android.map.googlemapsv2.LatLng , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { return org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } ; Property < Marker , LatLng > org.onebusaway.android.map.googlemapsv2.Property<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.LatLng> = Property . of ( Marker .class , LatLng .class , STRING ) ; ObjectAnimator org.onebusaway.android.map.googlemapsv2.ObjectAnimator = ObjectAnimator . ofObject ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.Property<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.LatLng> , org.onebusaway.android.map.googlemapsv2.TypeEvaluator<org.onebusaway.android.map.googlemapsv2.LatLng> , org.onebusaway.android.map.googlemapsv2.LatLng ) ; org.onebusaway.android.map.googlemapsv2.ObjectAnimator . setDuration ( NUMBER ) ; org.onebusaway.android.map.googlemapsv2.ObjectAnimator . start ( ) ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( float float , LatLng org.onebusaway.android.map.googlemapsv2.LatLng , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { return org.onebusaway.android.map.googlemapsv2.AnimationUtil.LatLngInterpolator . org.onebusaway.android.map.googlemapsv2.LatLng ( float , org.onebusaway.android.map.googlemapsv2.LatLng , org.onebusaway.android.map.googlemapsv2.LatLng ) ; } 
org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( float float , LatLng org.onebusaway.android.map.googlemapsv2.LatLng , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ); 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( float float , LatLng org.onebusaway.android.map.googlemapsv2.LatLng , LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { double double = ( b . latitude - a . latitude ) * float + a . latitude ; double double = b . longitude - a . longitude ; if ( java.lang.Math . double ( double ) > NUMBER ) { double -= java.lang.Math . double ( double ) * NUMBER ; } double double = double * float + a . longitude ; return new LatLng ( double , double ) ; } 
void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , Location org.onebusaway.android.map.googlemapsv2.Location ); 
void void ( boolean boolean ); 
public static org.onebusaway.android.map.googlemapsv2.BaseMapFragment org.onebusaway.android.map.googlemapsv2.BaseMapFragment ( ) { return new org.onebusaway.android.map.googlemapsv2.BaseMapFragment ( ) ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.View org.onebusaway.android.map.googlemapsv2.View ( LayoutInflater org.onebusaway.android.map.googlemapsv2.LayoutInflater , ViewGroup org.onebusaway.android.map.googlemapsv2.ViewGroup , Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { View org.onebusaway.android.map.googlemapsv2.View = super. onCreateView ( org.onebusaway.android.map.googlemapsv2.LayoutInflater , org.onebusaway.android.map.googlemapsv2.ViewGroup , org.onebusaway.android.map.googlemapsv2.Bundle ) ; org.onebusaway.android.map.googlemapsv2.LocationHelper = new LocationHelper ( getActivity ( ) ) ; org.onebusaway.android.map.googlemapsv2.LocationHelper . registerListener ( this ) ; if ( MapHelpV2 . isMapsInstalled ( getActivity ( ) ) ) { org.onebusaway.android.map.googlemapsv2.Bundle = org.onebusaway.android.map.googlemapsv2.Bundle ; getMapAsync ( this ) ; } else { MapHelpV2 . promptUserInstallMaps ( getActivity ( ) ) ; } Location org.onebusaway.android.map.googlemapsv2.Location = Application . getLastKnownLocation ( getActivity ( ) , org.onebusaway.android.map.googlemapsv2.LocationHelper . getGoogleApiClient ( ) ) ; if ( org.onebusaway.android.map.googlemapsv2.Location != null ) { final long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( NUMBER ) ; if ( java.lang.System . long ( ) - org.onebusaway.android.map.googlemapsv2.Location . getTime ( ) < long ) { void ( org.onebusaway.android.map.googlemapsv2.Location ) ; } } return org.onebusaway.android.map.googlemapsv2.View ; } 
@ java.lang.Override public void void ( com . com.google . com.google . com.google . com.google . com.google com.google.android.gms.maps.GoogleMap ) { com.google.android.gms.maps.GoogleMap = com.google.android.gms.maps.GoogleMap ; void ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } 
private void void ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { UiSettings org.onebusaway.android.map.googlemapsv2.UiSettings = com.google.android.gms.maps.GoogleMap . getUiSettings ( ) ; com.google.android.gms.maps.GoogleMap . setMyLocationEnabled ( true ) ; com.google.android.gms.maps.GoogleMap . setLocationSource ( this ) ; com.google.android.gms.maps.GoogleMap . setOnCameraChangeListener ( this ) ; org.onebusaway.android.map.googlemapsv2.UiSettings . setMyLocationButtonEnabled ( false ) ; org.onebusaway.android.map.googlemapsv2.UiSettings . setZoomControlsEnabled ( false ) ; org.onebusaway.android.map.googlemapsv2.UiSettings . setMapToolbarEnabled ( false ) ; org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay = new SimpleMarkerOverlay ( com.google.android.gms.maps.GoogleMap ) ; if ( org.onebusaway.android.map.googlemapsv2.Bundle != null ) { void ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } else { Bundle org.onebusaway.android.map.googlemapsv2.Bundle = getActivity ( ) . getIntent ( ) . getExtras ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Bundle == null ) { org.onebusaway.android.map.googlemapsv2.Bundle = new Bundle ( ) ; } double double = org.onebusaway.android.map.googlemapsv2.Bundle . getDouble ( MapParams . CENTER_LAT , NUMBER ) ; double double = org.onebusaway.android.map.googlemapsv2.Bundle . getDouble ( MapParams . CENTER_LON , NUMBER ) ; if ( double == NUMBER && double == NUMBER ) { PreferenceUtils . maybeRestoreMapViewToBundle ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } void ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } } 
private void void ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { java.lang.String = org.onebusaway.android.map.googlemapsv2.Bundle . getString ( MapParams . STOP_ID ) ; int = org.onebusaway.android.map.googlemapsv2.Bundle . getInt ( MapParams . MAP_PADDING_LEFT , MapParams . DEFAULT_MAP_PADDING ) ; int = org.onebusaway.android.map.googlemapsv2.Bundle . getInt ( MapParams . MAP_PADDING_TOP , MapParams . DEFAULT_MAP_PADDING ) ; int = org.onebusaway.android.map.googlemapsv2.Bundle . getInt ( MapParams . MAP_PADDING_RIGHT , MapParams . DEFAULT_MAP_PADDING ) ; int = org.onebusaway.android.map.googlemapsv2.Bundle . getInt ( MapParams . MAP_PADDING_BOTTOM , MapParams . DEFAULT_MAP_PADDING ) ; void ( int , int , int , int ) ; java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.Bundle . getString ( MapParams . MODE ) ; if ( java.lang.String == null ) { java.lang.String = MapParams . MODE_STOP ; } void ( java.lang.String , org.onebusaway.android.map.googlemapsv2.Bundle ) ; } 
@ java.lang.Override public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . destroy ( ) ; } super. onDestroy ( ) ; } 
@ java.lang.Override public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.LocationHelper != null ) { org.onebusaway.android.map.googlemapsv2.LocationHelper . onPause ( ) ; } if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onPause ( ) ; } Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.Location ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Location != null ) { PreferenceUtils . saveMapViewToPreferences ( org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) , org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) , float ( ) ) ; } boolean = false ; super. onPause ( ) ; } 
@ java.lang.Override public void void ( boolean boolean ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onHidden ( boolean ) ; } super. onHiddenChanged ( boolean ) ; } 
@ java.lang.Override public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.LocationHelper != null ) { org.onebusaway.android.map.googlemapsv2.LocationHelper . onResume ( ) ; } boolean = true ; if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onResume ( ) ; } super. onResume ( ) ; } 
@ java.lang.Override public void void ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onSaveInstanceState ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } org.onebusaway.android.map.googlemapsv2.Bundle . putString ( MapParams . MODE , java.lang.String ( ) ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putString ( MapParams . STOP_ID , java.lang.String ) ; Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.Location ( ) ; if ( com.google.android.gms.maps.GoogleMap != null ) { org.onebusaway.android.map.googlemapsv2.Bundle . putDouble ( MapParams . CENTER_LAT , org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putDouble ( MapParams . CENTER_LON , org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putFloat ( MapParams . ZOOM , float ( ) ) ; } org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( MapParams . MAP_PADDING_LEFT , int ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( MapParams . MAP_PADDING_TOP , int ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( MapParams . MAP_PADDING_RIGHT , int ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( MapParams . MAP_PADDING_BOTTOM , int ) ; } 
@ java.lang.Override public void void ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onViewStateRestored ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } super. onViewStateRestored ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; } 
public boolean boolean ( ) { return ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) && MapParams . MODE_ROUTE . equals ( org.onebusaway.android.map.googlemapsv2.MapModeController . getMode ( ) ) ; } 
public boolean boolean ( ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay != null ) { return true ; } if ( com.google.android.gms.maps.GoogleMap == null ) { return false ; } org.onebusaway.android.map.googlemapsv2.StopOverlay = new StopOverlay ( getActivity ( ) , com.google.android.gms.maps.GoogleMap ) ; org.onebusaway.android.map.googlemapsv2.StopOverlay . setOnFocusChangeListener ( this ) ; return true ; } 
public void void ( ) { Activity org.onebusaway.android.map.googlemapsv2.Activity = getActivity ( ) ; if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay == null && org.onebusaway.android.map.googlemapsv2.Activity != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay = new VehicleOverlay ( org.onebusaway.android.map.googlemapsv2.Activity , com.google.android.gms.maps.GoogleMap ) ; org.onebusaway.android.map.googlemapsv2.VehicleOverlay . setController ( this ) ; } } 
protected void void ( int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment ( int , this ) . show ( getFragmentManager ( ) , org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . java.lang.String ) ; } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { return org.onebusaway.android.map.googlemapsv2.MapModeController . getMode ( ) ; } return null ; } 
@ java.lang.Override public void void ( java.lang.String java.lang.String , Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { java.lang.String java.lang.String = java.lang.String ( ) ; if ( java.lang.String != null && java.lang.String . boolean ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.MapModeController . setState ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; return; } if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . destroy ( ) ; } if ( org.onebusaway.android.map.googlemapsv2.StopOverlay != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay . clear ( false ) ; } if ( MapParams . MODE_ROUTE . equals ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.MapModeController = new RouteMapController ( this ) ; } else if ( MapParams . MODE_STOP . equals ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.MapModeController = new StopMapController ( this ) ; } else if ( MapParams . MODE_DIRECTIONS . equals ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.MapModeController = new DirectionsMapController ( this ) ; } org.onebusaway.android.map.googlemapsv2.MapModeController . setState ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; org.onebusaway.android.map.googlemapsv2.MapModeController . onResume ( ) ; } 
@ java.lang.Override public MapModeController . MapModeController.ObaMapView MapModeController.ObaMapView ( ) { return this ; } 
@ java.lang.Override public int int ( Location org.onebusaway.android.map.googlemapsv2.Location , java.lang.Float java.lang.Float ) { if ( org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay == null ) { return - NUMBER ; } return org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay . addMarker ( org.onebusaway.android.map.googlemapsv2.Location , java.lang.Float ) ; } 
@ java.lang.Override public void void ( int int ) { if ( org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay == null ) { return; } org.onebusaway.android.map.googlemapsv2.SimpleMarkerOverlay . removeMarker ( int ) ; } 
@ java.lang.Override public void void ( java.lang.Integer java.lang.Integer , java.lang.Integer java.lang.Integer , java.lang.Integer java.lang.Integer , java.lang.Integer java.lang.Integer ) { if ( java.lang.Integer != null ) { int = java.lang.Integer ; } if ( java.lang.Integer != null ) { int = java.lang.Integer ; } if ( java.lang.Integer != null ) { int = java.lang.Integer ; } if ( java.lang.Integer != null ) { int = java.lang.Integer ; } if ( com.google.android.gms.maps.GoogleMap != null ) { com.google.android.gms.maps.GoogleMap . setPadding ( int , int , int , int ) ; } } 
@ java.lang.Override public void void ( boolean boolean ) { if ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener != null ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener . void ( boolean ) ; } } 
@ java.lang.Override public void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , ObaReferences org.onebusaway.android.map.googlemapsv2.ObaReferences ) { if ( boolean ( ) && java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay . populateStops ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , org.onebusaway.android.map.googlemapsv2.ObaReferences ) ; } } 
@ java.lang.Override public void void ( ) { java.lang.String java.lang.String = Application . get ( ) . getCustomApiUrl ( ) ; if ( boolean && ( Application . get ( ) . getCurrentRegion ( ) != null || ! TextUtils . isEmpty ( java.lang.String ) ) ) { if ( boolean && UIUtils . canManageDialog ( getActivity ( ) ) ) { void ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . int ) ; } } } 
@ java.lang.Override public void void ( boolean boolean ) { if ( ! isAdded ( ) ) { return; } Location org.onebusaway.android.map.googlemapsv2.Location = Application . getLastKnownLocation ( getActivity ( ) , org.onebusaway.android.map.googlemapsv2.LocationHelper . getGoogleApiClient ( ) ) ; Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.Location ( ) ; if ( boolean && ( org.onebusaway.android.map.googlemapsv2.Location == null || ( org.onebusaway.android.map.googlemapsv2.Location != null && org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) == NUMBER && org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) == NUMBER ) ) ) { void ( ) ; } } 
public void void ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener = org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener ; } 
public void void ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener = org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnProgressBarChangedListener ; } 
public void void ( final ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , final java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , final Location org.onebusaway.android.map.googlemapsv2.Location ) { org.onebusaway.android.map.googlemapsv2.Handler . post ( new java.lang.Runnable ( ) { public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null ) { java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) ; } else { java.lang.String = null ; } if ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener != null ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener . void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , org.onebusaway.android.map.googlemapsv2.Location ) ; } } } ) ; } 
public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null ) { java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) ; } else { java.lang.String = null ; } if ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener != null ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment.OnFocusChangedListener . void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , org.onebusaway.android.map.googlemapsv2.Location ) ; } } 
@ java.lang.Override @ java.lang.SuppressWarnings ( STRING ) public boolean boolean ( boolean boolean , boolean boolean ) { if ( ! LocationUtils . isLocationEnabled ( getActivity ( ) ) && boolean && UIUtils . canManageDialog ( getActivity ( ) ) ) { SharedPreferences org.onebusaway.android.map.googlemapsv2.SharedPreferences = Application . getPrefs ( ) ; if ( ! org.onebusaway.android.map.googlemapsv2.SharedPreferences . getBoolean ( getString ( R . string . preference_key_never_show_location_dialog ) , false ) ) { void ( org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . int ) ; } return false ; } GoogleApiClient org.onebusaway.android.map.googlemapsv2.GoogleApiClient = null ; if ( org.onebusaway.android.map.googlemapsv2.LocationHelper != null ) { org.onebusaway.android.map.googlemapsv2.GoogleApiClient = org.onebusaway.android.map.googlemapsv2.LocationHelper . getGoogleApiClient ( ) ; } Location org.onebusaway.android.map.googlemapsv2.Location = Application . getLastKnownLocation ( getActivity ( ) , org.onebusaway.android.map.googlemapsv2.GoogleApiClient ) ; if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { Toast . makeText ( getActivity ( ) , getResources ( ) . getString ( R . string . main_waiting_for_location ) , Toast . LENGTH_SHORT ) . show ( ) ; return false ; } void ( org.onebusaway.android.map.googlemapsv2.Location , boolean , boolean ) ; return true ; } 
private void void ( Location org.onebusaway.android.map.googlemapsv2.Location , boolean boolean , boolean boolean ) { if ( com.google.android.gms.maps.GoogleMap != null ) { CameraPosition . CameraPosition CameraPosition.Builder = new CameraPosition . CameraPosition ( ) . target ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; if ( boolean ) { CameraPosition.Builder . zoom ( float ) ; } else { CameraPosition.Builder . zoom ( com.google.android.gms.maps.GoogleMap . getCameraPosition ( ) . zoom ) ; } if ( boolean ) { com.google.android.gms.maps.GoogleMap . animateCamera ( CameraUpdateFactory . newCameraPosition ( CameraPosition.Builder . build ( ) ) ) ; } else { com.google.android.gms.maps.GoogleMap . moveCamera ( CameraUpdateFactory . newCameraPosition ( CameraPosition.Builder . build ( ) ) ) ; } } if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . onLocation ( ) ; } } 
public void void ( ) { ObaRegion org.onebusaway.android.map.googlemapsv2.ObaRegion = Application . get ( ) . getCurrentRegion ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaRegion != null && com.google.android.gms.maps.GoogleMap != null ) { LatLngBounds org.onebusaway.android.map.googlemapsv2.LatLngBounds = MapHelpV2 . getRegionBounds ( org.onebusaway.android.map.googlemapsv2.ObaRegion ) ; int int = getResources ( ) . getDisplayMetrics ( ) . widthPixels ; int int = getResources ( ) . getDisplayMetrics ( ) . heightPixels ; int int = NUMBER ; com.google.android.gms.maps.GoogleMap . animateCamera ( ( CameraUpdateFactory . newLatLngBounds ( org.onebusaway.android.map.googlemapsv2.LatLngBounds , int , int , int ) ) ) ; } } 
public static void void ( ObaResponse org.onebusaway.android.map.googlemapsv2.ObaResponse ) { Context org.onebusaway.android.map.googlemapsv2.Context = Application . get ( ) . getApplicationContext ( ) ; int int ; if ( org.onebusaway.android.map.googlemapsv2.ObaResponse != null ) { int = org.onebusaway.android.map.googlemapsv2.ObaResponse . getCode ( ) ; } else { int = ObaApi . OBA_INTERNAL_ERROR ; } if ( UIUtils . canManageDialog ( org.onebusaway.android.map.googlemapsv2.Context ) ) { Toast . makeText ( org.onebusaway.android.map.googlemapsv2.Context , org.onebusaway.android.map.googlemapsv2.Context . getString ( UIUtils . getMapErrorString ( org.onebusaway.android.map.googlemapsv2.Context , int ) ) , Toast . LENGTH_LONG ) . show ( ) ; } } 
@ java.lang.Override public void void ( float float ) { if ( com.google.android.gms.maps.GoogleMap != null ) { com.google.android.gms.maps.GoogleMap . moveCamera ( CameraUpdateFactory . zoomTo ( float ) ) ; } } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.Location org.onebusaway.android.map.googlemapsv2.Location ( ) { if ( com.google.android.gms.maps.GoogleMap != null ) { LatLng org.onebusaway.android.map.googlemapsv2.LatLng = com.google.android.gms.maps.GoogleMap . getCameraPosition ( ) . target ; if ( org.onebusaway.android.map.googlemapsv2.LatLng == null || org.onebusaway.android.map.googlemapsv2.LatLng != org.onebusaway.android.map.googlemapsv2.LatLng ) { org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.LatLng ; org.onebusaway.android.map.googlemapsv2.Location = MapHelpV2 . makeLocation ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } return org.onebusaway.android.map.googlemapsv2.Location ; } 
@ java.lang.Override public void void ( Location org.onebusaway.android.map.googlemapsv2.Location , boolean boolean , boolean boolean ) { if ( com.google.android.gms.maps.GoogleMap != null ) { CameraPosition org.onebusaway.android.map.googlemapsv2.CameraPosition = com.google.android.gms.maps.GoogleMap . getCameraPosition ( ) ; LatLng org.onebusaway.android.map.googlemapsv2.LatLng = MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ; LatLng org.onebusaway.android.map.googlemapsv2.LatLng ; if ( boolean ( ) && boolean ) { double double = NUMBER ; double double = ( double ( ) * double ) / NUMBER ; org.onebusaway.android.map.googlemapsv2.LatLng = new LatLng ( target . latitude - double , target . longitude ) ; org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.LatLng ; } if ( boolean ) { com.google.android.gms.maps.GoogleMap . animateCamera ( CameraUpdateFactory . newCameraPosition ( new CameraPosition . CameraPosition ( ) . target ( org.onebusaway.android.map.googlemapsv2.LatLng ) . zoom ( cp . zoom ) . bearing ( cp . bearing ) . tilt ( cp . tilt ) . build ( ) ) ) ; } else { com.google.android.gms.maps.GoogleMap . moveCamera ( CameraUpdateFactory . newCameraPosition ( new CameraPosition . CameraPosition ( ) . target ( org.onebusaway.android.map.googlemapsv2.LatLng ) . zoom ( cp . zoom ) . bearing ( cp . bearing ) . tilt ( cp . tilt ) . build ( ) ) ) ; } } } 
@ java.lang.Override public double double ( ) { VisibleRegion org.onebusaway.android.map.googlemapsv2.VisibleRegion = com.google.android.gms.maps.GoogleMap . getProjection ( ) . getVisibleRegion ( ) ; return java.lang.Math . int ( vr . latLngBounds . northeast . latitude - vr . latLngBounds . southwest . latitude ) ; } 
@ java.lang.Override public double double ( ) { VisibleRegion org.onebusaway.android.map.googlemapsv2.VisibleRegion = com.google.android.gms.maps.GoogleMap . getProjection ( ) . getVisibleRegion ( ) ; return java.lang.Math . int ( vr . latLngBounds . northeast . longitude - vr . latLngBounds . southwest . longitude ) ; } 
@ java.lang.Override public float float ( ) { return com.google.android.gms.maps.GoogleMap . getCameraPosition ( ) . zoom ; } 
@ java.lang.Override public void void ( int int , ObaShape [] org.onebusaway.android.map.googlemapsv2.ObaShape[] , boolean boolean ) { if ( com.google.android.gms.maps.GoogleMap != null ) { if ( boolean ) { java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . clear ( ) ; } PolylineOptions org.onebusaway.android.map.googlemapsv2.PolylineOptions ; int int = NUMBER ; for ( ObaShape org.onebusaway.android.map.googlemapsv2.ObaShape : org.onebusaway.android.map.googlemapsv2.ObaShape[] ) { org.onebusaway.android.map.googlemapsv2.PolylineOptions = new PolylineOptions ( ) ; org.onebusaway.android.map.googlemapsv2.PolylineOptions . color ( int ) ; for ( Location org.onebusaway.android.map.googlemapsv2.Location : org.onebusaway.android.map.googlemapsv2.ObaShape . getPoints ( ) ) { org.onebusaway.android.map.googlemapsv2.PolylineOptions . add ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; } java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . add ( com.google.android.gms.maps.GoogleMap . addPolyline ( org.onebusaway.android.map.googlemapsv2.PolylineOptions ) ) ; int += org.onebusaway.android.map.googlemapsv2.PolylineOptions . getPoints ( ) . size ( ) ; } Log . d ( java.lang.String , STRING + int ) ; } } 
@ java.lang.Override public void void ( int int , ObaShape [] org.onebusaway.android.map.googlemapsv2.ObaShape[] ) { void ( int , org.onebusaway.android.map.googlemapsv2.ObaShape[] , true ) ; } 
@ java.lang.Override public void void ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { void ( ) ; if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay . updateVehicles ( java.util.HashSet<java.lang.String> , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ; } } 
@ java.lang.Override public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay . clear ( ) ; } } 
@ java.lang.Override public void void ( ) { if ( com.google.android.gms.maps.GoogleMap != null ) { if ( ! java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . isEmpty ( ) ) { LatLngBounds . LatLngBounds LatLngBounds.Builder = new LatLngBounds . LatLngBounds ( ) ; for ( Polyline org.onebusaway.android.map.googlemapsv2.Polyline : java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> ) { for ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng : org.onebusaway.android.map.googlemapsv2.Polyline . getPoints ( ) ) { LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } Activity org.onebusaway.android.map.googlemapsv2.Activity = getActivity ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Activity != null ) { int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Activity , float ) ; com.google.android.gms.maps.GoogleMap . moveCamera ( ( CameraUpdateFactory . newLatLngBounds ( LatLngBounds.Builder . build ( ) , int ) ) ) ; } } else { Toast . makeText ( getActivity ( ) , getString ( R . string . route_info_no_shape_data ) , Toast . LENGTH_SHORT ) . show ( ) ; } } } 
@ java.lang.Override public void void ( ) { if ( com.google.android.gms.maps.GoogleMap != null ) { if ( ! java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . isEmpty ( ) ) { LatLngBounds . LatLngBounds LatLngBounds.Builder = new LatLngBounds . LatLngBounds ( ) ; for ( Polyline org.onebusaway.android.map.googlemapsv2.Polyline : java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> ) { for ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng : org.onebusaway.android.map.googlemapsv2.Polyline . getPoints ( ) ) { LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } } Activity org.onebusaway.android.map.googlemapsv2.Activity = getActivity ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Activity != null ) { int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Activity , float ) ; com.google.android.gms.maps.GoogleMap . moveCamera ( ( CameraUpdateFactory . newLatLngBounds ( LatLngBounds.Builder . build ( ) , getResources ( ) . getDisplayMetrics ( ) . widthPixels , getResources ( ) . getDisplayMetrics ( ) . heightPixels , int ) ) ) ; } } } } 
@ java.lang.Override public void void ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { if ( com.google.android.gms.maps.GoogleMap == null ) { return; } LatLng org.onebusaway.android.map.googlemapsv2.LatLng = MapHelpV2 . getClosestVehicle ( org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse , java.util.HashSet<java.lang.String> , org.onebusaway.android.map.googlemapsv2.Location ( ) ) ; LatLngBounds org.onebusaway.android.map.googlemapsv2.LatLngBounds = com.google.android.gms.maps.GoogleMap . getProjection ( ) . getVisibleRegion ( ) . latLngBounds ; if ( org.onebusaway.android.map.googlemapsv2.LatLng == null || org.onebusaway.android.map.googlemapsv2.LatLngBounds . contains ( org.onebusaway.android.map.googlemapsv2.LatLng ) ) { return; } LatLngBounds . LatLngBounds LatLngBounds.Builder = new LatLngBounds . LatLngBounds ( ) ; LatLngBounds.Builder . include ( visibleBounds . northeast ) ; LatLngBounds.Builder . include ( visibleBounds . southwest ) ; LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; Activity org.onebusaway.android.map.googlemapsv2.Activity = getActivity ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Activity != null ) { int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Activity , float ) ; com.google.android.gms.maps.GoogleMap . animateCamera ( CameraUpdateFactory . newLatLngBounds ( LatLngBounds.Builder . build ( ) , int ) ) ; } } 
@ java.lang.Override public void void ( ) { for ( Polyline org.onebusaway.android.map.googlemapsv2.Polyline : java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> ) { org.onebusaway.android.map.googlemapsv2.Polyline . remove ( ) ; } java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.Polyline> . clear ( ) ; } 
@ java.lang.Override public void void ( boolean boolean ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay . clear ( boolean ) ; } } 
@ java.lang.Override public boolean boolean ( ) { return true ; } 
@ java.lang.Override public void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { if ( boolean ( ) ) { org.onebusaway.android.map.googlemapsv2.StopOverlay . setFocus ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } } 
@ java.lang.Override public void void ( CameraPosition org.onebusaway.android.map.googlemapsv2.CameraPosition ) { Log . d ( java.lang.String , STRING ) ; if ( org.onebusaway.android.map.googlemapsv2.MapModeController != null ) { org.onebusaway.android.map.googlemapsv2.MapModeController . notifyMapChanged ( ) ; } } 
@ java.lang.Override public void void ( OnLocationChangedListener org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener ) { org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener = org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener ; } 
@ java.lang.Override public void void ( ) { org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener = null ; } 
public void void ( Location org.onebusaway.android.map.googlemapsv2.Location ) { if ( org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener != null ) { org.onebusaway.android.map.googlemapsv2.OnLocationChangedListener . onLocationChanged ( org.onebusaway.android.map.googlemapsv2.Location ) ; } } 
@ java.lang.Override public void void ( ) { } 
@ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; } 
static org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment ( int int , org.onebusaway.android.map.googlemapsv2.BaseMapFragment org.onebusaway.android.map.googlemapsv2.BaseMapFragment ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment = org.onebusaway.android.map.googlemapsv2.BaseMapFragment ; org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment = new org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment ( ) ; Bundle org.onebusaway.android.map.googlemapsv2.Bundle = new Bundle ( ) ; org.onebusaway.android.map.googlemapsv2.Bundle . putInt ( java.lang.String , int ) ; org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . setArguments ( org.onebusaway.android.map.googlemapsv2.Bundle ) ; org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment . setCancelable ( false ) ; return org.onebusaway.android.map.googlemapsv2.BaseMapFragment.MapDialogFragment ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.Dialog org.onebusaway.android.map.googlemapsv2.Dialog ( Bundle org.onebusaway.android.map.googlemapsv2.Bundle ) { int = getArguments ( ) . getInt ( java.lang.String ) ; switch ( int ) { case int : return org.onebusaway.android.map.googlemapsv2.Dialog ( ) ; case int : return org.onebusaway.android.map.googlemapsv2.Dialog ( ) ; default: throw new java.lang.IllegalArgumentException ( STRING + java.lang.String ) ; } } 
private org.onebusaway.android.map.googlemapsv2.Dialog org.onebusaway.android.map.googlemapsv2.Dialog ( ) { Drawable org.onebusaway.android.map.googlemapsv2.Drawable = getResources ( ) . getDrawable ( android . R . drawable . ic_dialog_map ) ; DrawableCompat . setTint ( org.onebusaway.android.map.googlemapsv2.Drawable , getResources ( ) . getColor ( R . color . theme_primary ) ) ; AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) . setTitle ( R . string . main_outofrange_title ) . setIcon ( org.onebusaway.android.map.googlemapsv2.Drawable ) . setCancelable ( false ) . setMessage ( getString ( R . string . main_outofrange , Application . get ( ) . getCurrentRegion ( ) != null ? Application . get ( ) . getCurrentRegion ( ) . getName ( ) : STRING ) ) . setPositiveButton ( R . string . main_outofrange_yes , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . void ( ) ; } } ) . setNegativeButton ( R . string . main_outofrange_no , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . boolean = false ; } } ) ; return AlertDialog.Builder . create ( ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . void ( ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . boolean = false ; } 
@ java.lang.SuppressWarnings ( STRING ) private org.onebusaway.android.map.googlemapsv2.Dialog org.onebusaway.android.map.googlemapsv2.Dialog ( ) { View org.onebusaway.android.map.googlemapsv2.View = getActivity ( ) . getLayoutInflater ( ) . inflate ( R . layout . no_location_dialog , null ) ; CheckBox org.onebusaway.android.map.googlemapsv2.CheckBox = ( CheckBox ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . location_never_ask_again ) ; org.onebusaway.android.map.googlemapsv2.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton org.onebusaway.android.map.googlemapsv2.CompoundButton , boolean boolean ) { PreferenceUtils . saveBoolean ( getString ( R . string . preference_key_never_show_location_dialog ) , boolean ) ; } } ) ; Drawable org.onebusaway.android.map.googlemapsv2.Drawable = getResources ( ) . getDrawable ( android . R . drawable . ic_dialog_map ) ; DrawableCompat . setTint ( org.onebusaway.android.map.googlemapsv2.Drawable , getResources ( ) . getColor ( R . color . theme_primary ) ) ; AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) . setTitle ( R . string . main_nolocation_title ) . setIcon ( org.onebusaway.android.map.googlemapsv2.Drawable ) . setCancelable ( false ) . setView ( org.onebusaway.android.map.googlemapsv2.View ) . setPositiveButton ( R . string . rt_yes , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { startActivityForResult ( new Intent ( Settings . ACTION_LOCATION_SOURCE_SETTINGS ) , int ) ; } } ) . setNegativeButton ( R . string . rt_no , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . org.onebusaway.android.map.googlemapsv2.MapModeController . onLocation ( ) ; } } ) ; return AlertDialog.Builder . create ( ) ; } 
@ java.lang.Override public void void ( CompoundButton org.onebusaway.android.map.googlemapsv2.CompoundButton , boolean boolean ) { PreferenceUtils . saveBoolean ( getString ( R . string . preference_key_never_show_location_dialog ) , boolean ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { startActivityForResult ( new Intent ( Settings . ACTION_LOCATION_SOURCE_SETTINGS ) , int ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.BaseMapFragment . org.onebusaway.android.map.googlemapsv2.MapModeController . onLocation ( ) ; } 
public static final org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( double double , double double ) { return new LatLng ( double , double ) ; } 
public static final org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( Location org.onebusaway.android.map.googlemapsv2.Location ) { return org.onebusaway.android.map.googlemapsv2.LatLng ( org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) , org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) ) ; } 
public static final org.onebusaway.android.map.googlemapsv2.Location org.onebusaway.android.map.googlemapsv2.Location ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { Location org.onebusaway.android.map.googlemapsv2.Location = new Location ( STRING ) ; org.onebusaway.android.map.googlemapsv2.Location . setLatitude ( latLng . latitude ) ; org.onebusaway.android.map.googlemapsv2.Location . setLongitude ( latLng . longitude ) ; return org.onebusaway.android.map.googlemapsv2.Location ; } 
public static org.onebusaway.android.map.googlemapsv2.LatLngBounds org.onebusaway.android.map.googlemapsv2.LatLngBounds ( ObaRegion org.onebusaway.android.map.googlemapsv2.ObaRegion ) { if ( org.onebusaway.android.map.googlemapsv2.ObaRegion == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } double double = NUMBER ; double double = - NUMBER ; double double = NUMBER ; double double = - NUMBER ; for ( ObaRegion . ObaRegion ObaRegion.Bounds : org.onebusaway.android.map.googlemapsv2.ObaRegion . getBounds ( ) ) { double double = ObaRegion.Bounds . getLat ( ) ; double double = ObaRegion.Bounds . getLatSpan ( ) / NUMBER ; double double = double - double ; double double = double + double ; if ( double < double ) { double = double ; } if ( double > double ) { double = double ; } double double = ObaRegion.Bounds . getLon ( ) ; double double = ObaRegion.Bounds . getLonSpan ( ) / NUMBER ; double double = double - double ; double double = double + double ; if ( double < double ) { double = double ; } if ( double > double ) { double = double ; } } LatLngBounds . LatLngBounds LatLngBounds.Builder = new LatLngBounds . LatLngBounds ( ) ; LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.MapHelpV2 . org.onebusaway.android.map.googlemapsv2.LatLng ( double , double ) ) ; LatLngBounds.Builder . include ( org.onebusaway.android.map.googlemapsv2.MapHelpV2 . org.onebusaway.android.map.googlemapsv2.LatLng ( double , double ) ) ; return LatLngBounds.Builder . build ( ) ; } 
public static boolean boolean ( Context org.onebusaway.android.map.googlemapsv2.Context ) { return ProprietaryMapHelpV2 . isMapsInstalled ( org.onebusaway.android.map.googlemapsv2.Context ) ; } 
public static void void ( final Context org.onebusaway.android.map.googlemapsv2.Context ) { ProprietaryMapHelpV2 . promptUserInstallMaps ( org.onebusaway.android.map.googlemapsv2.Context ) ; } 
public static org.onebusaway.android.map.googlemapsv2.LatLng org.onebusaway.android.map.googlemapsv2.LatLng ( ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse , java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , Location org.onebusaway.android.map.googlemapsv2.Location ) { if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { return null ; } float float = java.lang.Float . float ; ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = null ; Location org.onebusaway.android.map.googlemapsv2.Location = null ; java.lang.Float java.lang.Float ; for ( ObaTripDetails org.onebusaway.android.map.googlemapsv2.ObaTripDetails : org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrips ( ) ) { Location org.onebusaway.android.map.googlemapsv2.Location ; ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.ObaTripDetails . getStatus ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus == null ) { continue; } java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrip ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) . getRouteId ( ) ; if ( ! java.util.HashSet<java.lang.String> . boolean ( java.lang.String ) ) { continue; } if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastKnownLocation ( ) != null ) { org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastKnownLocation ( ) ; } else if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getPosition ( ) != null ) { org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getPosition ( ) ; } else { continue; } java.lang.Float = org.onebusaway.android.map.googlemapsv2.Location . distanceTo ( org.onebusaway.android.map.googlemapsv2.Location ) ; if ( java.lang.Float < float ) { org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.Location ; org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.ObaTripStatus ; float = java.lang.Float ; } } if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { return null ; } Log . d ( java.lang.String , STRING + org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getVehicleId ( ) + STRING + STRING + org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) + STRING + org.onebusaway.android.map.googlemapsv2.Location . getLatitude ( ) + STRING + org.onebusaway.android.map.googlemapsv2.Location . getLongitude ( ) ) ; return org.onebusaway.android.map.googlemapsv2.LatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ; } 
public static boolean boolean ( Context org.onebusaway.android.map.googlemapsv2.Context ) { try { ApplicationInfo org.onebusaway.android.map.googlemapsv2.ApplicationInfo = org.onebusaway.android.map.googlemapsv2.Context . getPackageManager ( ) . getApplicationInfo ( STRING , NUMBER ) ; return true ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { return false ; } } 
public static void void ( final Context org.onebusaway.android.map.googlemapsv2.Context ) { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( org.onebusaway.android.map.googlemapsv2.Context ) ; AlertDialog.Builder . setMessage ( org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . please_install_google_maps_dialog_title ) ) ; AlertDialog.Builder . setCancelable ( false ) ; AlertDialog.Builder . setPositiveButton ( org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . install_google_maps_positive_button ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { Intent org.onebusaway.android.map.googlemapsv2.Intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . android_maps_v2_market_url ) ) ) ; ResolveInfo org.onebusaway.android.map.googlemapsv2.ResolveInfo = org.onebusaway.android.map.googlemapsv2.Context . getPackageManager ( ) . resolveActivity ( org.onebusaway.android.map.googlemapsv2.Intent , PackageManager . MATCH_DEFAULT_ONLY ) ; if ( org.onebusaway.android.map.googlemapsv2.ResolveInfo != null ) { org.onebusaway.android.map.googlemapsv2.Context . startActivity ( org.onebusaway.android.map.googlemapsv2.Intent ) ; } else { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( org.onebusaway.android.map.googlemapsv2.Context ) ; AlertDialog.Builder . setMessage ( org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . no_play_store ) ) ; AlertDialog.Builder . setCancelable ( true ) ; AlertDialog.Builder . setPositiveButton ( org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . ok ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.DialogInterface . dismiss ( ) ; } } ) ; AlertDialog org.onebusaway.android.map.googlemapsv2.AlertDialog = AlertDialog.Builder . create ( ) ; org.onebusaway.android.map.googlemapsv2.AlertDialog . show ( ) ; } } } ) ; AlertDialog org.onebusaway.android.map.googlemapsv2.AlertDialog = AlertDialog.Builder . create ( ) ; org.onebusaway.android.map.googlemapsv2.AlertDialog . show ( ) ; } 
@ java.lang.Override public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { Intent org.onebusaway.android.map.googlemapsv2.Intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . android_maps_v2_market_url ) ) ) ; ResolveInfo org.onebusaway.android.map.googlemapsv2.ResolveInfo = org.onebusaway.android.map.googlemapsv2.Context . getPackageManager ( ) . resolveActivity ( org.onebusaway.android.map.googlemapsv2.Intent , PackageManager . MATCH_DEFAULT_ONLY ) ; if ( org.onebusaway.android.map.googlemapsv2.ResolveInfo != null ) { org.onebusaway.android.map.googlemapsv2.Context . startActivity ( org.onebusaway.android.map.googlemapsv2.Intent ) ; } else { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( org.onebusaway.android.map.googlemapsv2.Context ) ; AlertDialog.Builder . setMessage ( org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . no_play_store ) ) ; AlertDialog.Builder . setCancelable ( true ) ; AlertDialog.Builder . setPositiveButton ( org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . ok ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.DialogInterface . dismiss ( ) ; } } ) ; AlertDialog org.onebusaway.android.map.googlemapsv2.AlertDialog = AlertDialog.Builder . create ( ) ; org.onebusaway.android.map.googlemapsv2.AlertDialog . show ( ) ; } } 
public void void ( DialogInterface org.onebusaway.android.map.googlemapsv2.DialogInterface , int int ) { org.onebusaway.android.map.googlemapsv2.DialogInterface . dismiss ( ) ; } 
public static org.onebusaway.android.map.googlemapsv2.CustomAddress org.onebusaway.android.map.googlemapsv2.CustomAddress ( Context org.onebusaway.android.map.googlemapsv2.Context , Intent org.onebusaway.android.map.googlemapsv2.Intent ) { Place org.onebusaway.android.map.googlemapsv2.Place = PlaceAutocomplete . getPlace ( org.onebusaway.android.map.googlemapsv2.Context , org.onebusaway.android.map.googlemapsv2.Intent ) ; CustomAddress org.onebusaway.android.map.googlemapsv2.CustomAddress = new CustomAddress ( ) ; java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.Place . getName ( ) . toString ( ) ; org.onebusaway.android.map.googlemapsv2.CustomAddress . setAddressLine ( NUMBER , java.lang.String ) ; java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.Place . getAddress ( ) . toString ( ) ; java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( java.lang.String ) ; int int = java.lang.String . boolean ( java.lang.String[] [ NUMBER ] ) ? NUMBER : NUMBER ; int int = NUMBER ; for ( int int = int ; int < java.lang.String[] . int ; int ++ ) { org.onebusaway.android.map.googlemapsv2.CustomAddress . setAddressLine ( int ++ , java.lang.String[] [ int ] ) ; } LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Place . getLatLng ( ) ; org.onebusaway.android.map.googlemapsv2.CustomAddress . setLatitude ( loc . latitude ) ; org.onebusaway.android.map.googlemapsv2.CustomAddress . setLongitude ( loc . longitude ) ; return org.onebusaway.android.map.googlemapsv2.CustomAddress ; } 
public void ( int int , Fragment org.onebusaway.android.map.googlemapsv2.Fragment , ObaRegion org.onebusaway.android.map.googlemapsv2.ObaRegion ) { int = int ; org.onebusaway.android.map.googlemapsv2.Fragment = org.onebusaway.android.map.googlemapsv2.Fragment ; org.onebusaway.android.map.googlemapsv2.ObaRegion = org.onebusaway.android.map.googlemapsv2.ObaRegion ; } 
@ java.lang.Override public void void ( View org.onebusaway.android.map.googlemapsv2.View ) { Intent org.onebusaway.android.map.googlemapsv2.Intent = null ; PlaceAutocomplete . PlaceAutocomplete PlaceAutocomplete.IntentBuilder = new PlaceAutocomplete . PlaceAutocomplete ( PlaceAutocomplete . MODE_OVERLAY ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaRegion != null ) { LatLngBounds org.onebusaway.android.map.googlemapsv2.LatLngBounds = MapHelpV2 . getRegionBounds ( org.onebusaway.android.map.googlemapsv2.ObaRegion ) ; PlaceAutocomplete.IntentBuilder . setBoundsBias ( org.onebusaway.android.map.googlemapsv2.LatLngBounds ) ; } try { org.onebusaway.android.map.googlemapsv2.Intent = PlaceAutocomplete.IntentBuilder . build ( org.onebusaway.android.map.googlemapsv2.Fragment . getActivity ( ) ) ; } catch ( GooglePlayServicesRepairableException org.onebusaway.android.map.googlemapsv2.GooglePlayServicesRepairableException ) { org.onebusaway.android.map.googlemapsv2.GooglePlayServicesRepairableException . printStackTrace ( ) ; } catch ( GooglePlayServicesNotAvailableException org.onebusaway.android.map.googlemapsv2.GooglePlayServicesNotAvailableException ) { org.onebusaway.android.map.googlemapsv2.GooglePlayServicesNotAvailableException . printStackTrace ( ) ; } org.onebusaway.android.map.googlemapsv2.Fragment . startActivityForResult ( org.onebusaway.android.map.googlemapsv2.Intent , int ) ; } 
public static void void ( Marker org.onebusaway.android.map.googlemapsv2.Marker , float float ) { org.onebusaway.android.map.googlemapsv2.Marker . setZIndex ( float ) ; } 
public void ( GoogleMap org.onebusaway.android.map.googlemapsv2.GoogleMap ) { org.onebusaway.android.map.googlemapsv2.GoogleMap = org.onebusaway.android.map.googlemapsv2.GoogleMap ; } 
public synchronized int int ( Location org.onebusaway.android.map.googlemapsv2.Location , java.lang.Float java.lang.Float ) { MarkerOptions org.onebusaway.android.map.googlemapsv2.MarkerOptions = new MarkerOptions ( ) . position ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; if ( java.lang.Float != null ) { org.onebusaway.android.map.googlemapsv2.MarkerOptions . icon ( BitmapDescriptorFactory . defaultMarker ( java.lang.Float ) ) ; } Marker org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.GoogleMap . addMarker ( org.onebusaway.android.map.googlemapsv2.MarkerOptions ) ; org.onebusaway.android.map.googlemapsv2.SparseArray<org.onebusaway.android.map.googlemapsv2.Marker> . put ( int , org.onebusaway.android.map.googlemapsv2.Marker ) ; int int = int ; int ++ ; return int ; } 
public void void ( int int ) { Marker org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.SparseArray<org.onebusaway.android.map.googlemapsv2.Marker> . get ( int ) ; if ( org.onebusaway.android.map.googlemapsv2.Marker != null ) { org.onebusaway.android.map.googlemapsv2.Marker . remove ( ) ; org.onebusaway.android.map.googlemapsv2.SparseArray<org.onebusaway.android.map.googlemapsv2.Marker> . remove ( int ) ; } } 
void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , Location org.onebusaway.android.map.googlemapsv2.Location ); 
public void ( Activity org.onebusaway.android.map.googlemapsv2.Activity , GoogleMap org.onebusaway.android.map.googlemapsv2.GoogleMap ) { org.onebusaway.android.map.googlemapsv2.Activity = org.onebusaway.android.map.googlemapsv2.Activity ; org.onebusaway.android.map.googlemapsv2.GoogleMap = org.onebusaway.android.map.googlemapsv2.GoogleMap ; void ( ) ; org.onebusaway.android.map.googlemapsv2.GoogleMap . setOnMarkerClickListener ( this ) ; org.onebusaway.android.map.googlemapsv2.GoogleMap . setOnMapClickListener ( this ) ; } 
public void void ( org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener = org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener ; } 
public synchronized void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , ObaReferences org.onebusaway.android.map.googlemapsv2.ObaReferences ) { void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , org.onebusaway.android.map.googlemapsv2.ObaReferences . getRoutes ( ) ) ; } 
public synchronized void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } 
private void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { void ( ) ; org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } 
public synchronized int int ( ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData != null ) { return org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . int ( ) ; } else { return NUMBER ; } } 
public synchronized void void ( boolean boolean ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . void ( boolean ) ; } } 
private static final void void ( ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; int = org.onebusaway.android.map.googlemapsv2.Resources . getDimensionPixelSize ( R . dimen . map_stop_shadow_size_6 ) ; float = int / NUMBER ; float = int / NUMBER ; float float = int / NUMBER ; float = float - float ; float = ( float / ( int + float ) ) * NUMBER ; org.onebusaway.android.map.googlemapsv2.Paint = new Paint ( ) ; org.onebusaway.android.map.googlemapsv2.Paint . setColor ( Color . WHITE ) ; org.onebusaway.android.map.googlemapsv2.Paint . setStyle ( Paint . Style . STROKE ) ; org.onebusaway.android.map.googlemapsv2.Paint . setStrokeWidth ( NUMBER ) ; org.onebusaway.android.map.googlemapsv2.Paint . setAntiAlias ( true ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String java.lang.String ) throws java.lang.NullPointerException { if ( java.lang.String == null ) { throw new java.lang.IllegalArgumentException ( java.lang.String ) ; } Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; Context org.onebusaway.android.map.googlemapsv2.Context = Application . get ( ) ; java.lang.Float java.lang.Float = null ; Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ; Canvas org.onebusaway.android.map.googlemapsv2.Canvas ; Drawable org.onebusaway.android.map.googlemapsv2.Drawable ; java.lang.Float java.lang.Float = null , java.lang.Float = null ; Paint org.onebusaway.android.map.googlemapsv2.Paint = new Paint ( ) ; org.onebusaway.android.map.googlemapsv2.Paint . setStyle ( Paint . Style . FILL ) ; org.onebusaway.android.map.googlemapsv2.Paint . setAntiAlias ( true ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( int , int , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( int , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , ( int ) float , int , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER , float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( ( int ) float , ( int ) float , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( NUMBER , NUMBER , float , float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = int / NUMBER + float / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER - float / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , int , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( ( int ) float , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER , float , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( ( int ) float , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , int ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) , float , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER - float / NUMBER ; java.lang.Float = int / NUMBER + float / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( int , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , ( int ) ( org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - float ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , NUMBER , int , int ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) - float , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = ( int + float / NUMBER ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , int , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , NUMBER , int , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) - float , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) / NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.Float = NUMBER ; org.onebusaway.android.map.googlemapsv2.Bitmap = Bitmap . createBitmap ( ( int ) ( int + float ) , ( int ) ( int + float ) , Bitmap . Config . ARGB_8888 ) ; org.onebusaway.android.map.googlemapsv2.Canvas = new Canvas ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; org.onebusaway.android.map.googlemapsv2.Drawable = ContextCompat . getDrawable ( org.onebusaway.android.map.googlemapsv2.Context , R . drawable . map_stop_icon ) ; org.onebusaway.android.map.googlemapsv2.Drawable . setBounds ( NUMBER , ( int ) float , int , org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) ) ; org.onebusaway.android.map.googlemapsv2.Paint . setShader ( new LinearGradient ( org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) , NUMBER , org.onebusaway.android.map.googlemapsv2.Bitmap . getWidth ( ) - float , float , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_primary ) , org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . theme_accent ) , Shader . TileMode . MIRROR ) ) ; java.lang.Float = ( float ) int / NUMBER ; java.lang.Float = org.onebusaway.android.map.googlemapsv2.Bitmap . getHeight ( ) - ( float ) int / NUMBER ; } else { throw new java.lang.IllegalArgumentException ( java.lang.String ) ; } org.onebusaway.android.map.googlemapsv2.Drawable . draw ( org.onebusaway.android.map.googlemapsv2.Canvas ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { return org.onebusaway.android.map.googlemapsv2.Bitmap ; } final float float = int / NUMBER ; Path org.onebusaway.android.map.googlemapsv2.Path = new Path ( ) ; float float = NUMBER , float = NUMBER ; float float = NUMBER , float = NUMBER ; float float = NUMBER , float = NUMBER ; float float = NUMBER , float = NUMBER ; if ( java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) ) { float = int / NUMBER ; float = NUMBER ; float = ( int / NUMBER ) - ( float / NUMBER ) ; float = float ; float = int / NUMBER ; float = float - float ; float = ( int / NUMBER ) + ( float / NUMBER ) ; float = float ; } else if ( java.lang.String . boolean ( java.lang.String ) || java.lang.String . boolean ( java.lang.String ) ) { float = NUMBER ; float = int / NUMBER ; float = float ; float = ( int / NUMBER ) - ( float / NUMBER ) ; float = float - float ; float = int / NUMBER ; float = float ; float = ( int / NUMBER ) + ( float / NUMBER ) ; } org.onebusaway.android.map.googlemapsv2.Path . setFillType ( Path . FillType . EVEN_ODD ) ; org.onebusaway.android.map.googlemapsv2.Path . moveTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . lineTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . lineTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . lineTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . lineTo ( float , float ) ; org.onebusaway.android.map.googlemapsv2.Path . close ( ) ; Matrix org.onebusaway.android.map.googlemapsv2.Matrix = new Matrix ( ) ; org.onebusaway.android.map.googlemapsv2.Matrix . postRotate ( java.lang.Float , java.lang.Float , java.lang.Float ) ; org.onebusaway.android.map.googlemapsv2.Path . transform ( org.onebusaway.android.map.googlemapsv2.Matrix ) ; org.onebusaway.android.map.googlemapsv2.Canvas . drawPath ( org.onebusaway.android.map.googlemapsv2.Path , org.onebusaway.android.map.googlemapsv2.Paint ) ; org.onebusaway.android.map.googlemapsv2.Canvas . drawPath ( org.onebusaway.android.map.googlemapsv2.Path , org.onebusaway.android.map.googlemapsv2.Paint ) ; return org.onebusaway.android.map.googlemapsv2.Bitmap ; } 
private static float float ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else { return NUMBER ; } } 
private static float float ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER - float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER + float ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return NUMBER ; } else { return NUMBER ; } } 
private static org.onebusaway.android.map.googlemapsv2.BitmapDescriptor org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } else { return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap[] [ NUMBER ] ) ; } } 
public org.onebusaway.android.map.googlemapsv2.ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ( ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData != null ) { return org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaStop ( ) ; } return null ; } 
public void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { void ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaStop == null ) { void ( null ) ; return; } if ( ! org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . boolean ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ) { java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> = new java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > ( ) ; java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> . add ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ; void ( java.util.ArrayList<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } void ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ; } 
@ java.lang.Override public boolean boolean ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { long long = java.lang.Long . long , long = java.lang.Long . long ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) { long = SystemClock . elapsedRealtimeNanos ( ) ; } ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop = org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaStop ( org.onebusaway.android.map.googlemapsv2.Marker ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ) { long = SystemClock . elapsedRealtimeNanos ( ) ; Log . d ( java.lang.String , STRING + java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( long - long , java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit ) + STRING ) ; } if ( org.onebusaway.android.map.googlemapsv2.ObaStop == null ) { return false ; } if ( BuildConfig . DEBUG ) { Toast . makeText ( org.onebusaway.android.map.googlemapsv2.Activity , org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } void ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ; Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaStop . getLocation ( ) ; Location org.onebusaway.android.map.googlemapsv2.Location = Application . getLastKnownLocation ( org.onebusaway.android.map.googlemapsv2.Activity , null ) ; ObaAnalytics . trackBusStopDistance ( org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) , org.onebusaway.android.map.googlemapsv2.Location , org.onebusaway.android.map.googlemapsv2.Location ) ; return true ; } 
private void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . void ( org.onebusaway.android.map.googlemapsv2.ObaStop ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> = org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> ( ) ; org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener . void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> , org.onebusaway.android.map.googlemapsv2.ObaStop . getLocation ( ) ) ; } 
@ java.lang.Override public void void ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { Log . d ( java.lang.String , STRING ) ; void ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } 
private void void ( LatLng org.onebusaway.android.map.googlemapsv2.LatLng ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaStop ( ) != null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData . void ( ) ; } Location org.onebusaway.android.map.googlemapsv2.Location = null ; if ( org.onebusaway.android.map.googlemapsv2.LatLng != null ) { org.onebusaway.android.map.googlemapsv2.Location = MapHelpV2 . makeLocation ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; } org.onebusaway.android.map.googlemapsv2.StopOverlay.OnFocusChangedListener . void ( null , null , org.onebusaway.android.map.googlemapsv2.Location ) ; } 
private void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData == null ) { org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData = new org.onebusaway.android.map.googlemapsv2.StopOverlay.MarkerData ( ) ; } } 
void ( ) { java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = new java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> = new java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> < Marker , ObaStop > ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> = new java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > ( ) ; java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> = new java.util.LinkedList<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > ( ) ; } 
synchronized void void ( java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> < ObaStop > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { int int = NUMBER ; if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) >= int ) { Log . d ( java.lang.String , STRING + int + STRING ) ; void ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . clear ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> . clear ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null && java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> != null ) { void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; int ++ ; } } for ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop : java.util.List<org.onebusaway.android.map.googlemapsv2.ObaStop> ) { if ( ! java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . containsKey ( org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) ) ) { void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; int ++ ; } } Log . d ( java.lang.String , STRING + int + STRING + java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) ) ; } 
private void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> < ObaRoute > java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { Marker org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.GoogleMap . addMarker ( new MarkerOptions ( ) . position ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.ObaStop . getLocation ( ) ) ) . icon ( org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( org.onebusaway.android.map.googlemapsv2.ObaStop . getDirection ( ) ) ) . flat ( true ) . anchor ( float ( org.onebusaway.android.map.googlemapsv2.ObaStop . getDirection ( ) ) , float ( org.onebusaway.android.map.googlemapsv2.ObaStop . getDirection ( ) ) ) ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . put ( org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) , org.onebusaway.android.map.googlemapsv2.Marker ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> . put ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.ObaStop ) ; for ( ObaRoute org.onebusaway.android.map.googlemapsv2.ObaRoute : java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) { if ( ! java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> . containsKey ( org.onebusaway.android.map.googlemapsv2.ObaRoute . getId ( ) ) ) { java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> . put ( org.onebusaway.android.map.googlemapsv2.ObaRoute . getId ( ) , org.onebusaway.android.map.googlemapsv2.ObaRoute ) ; } } } 
synchronized org.onebusaway.android.map.googlemapsv2.ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { return java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> . get ( org.onebusaway.android.map.googlemapsv2.Marker ) ; } 
synchronized boolean boolean ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ) { if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null ) { return boolean ( org.onebusaway.android.map.googlemapsv2.ObaStop . getId ( ) ) ; } else { return false ; } } 
synchronized boolean boolean ( java.lang.String java.lang.String ) { if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> != null ) { return java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . containsKey ( java.lang.String ) ; } else { return false ; } } 
synchronized java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> ( ) { return new java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> < java.lang.String , ObaRoute > ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } 
void void ( ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ) { if ( org.onebusaway.android.map.googlemapsv2.Marker != null ) { org.onebusaway.android.map.googlemapsv2.Marker . remove ( ) ; } org.onebusaway.android.map.googlemapsv2.ObaStop = org.onebusaway.android.map.googlemapsv2.ObaStop ; java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> . clear ( ) ; java.lang.String [] java.lang.String[] = org.onebusaway.android.map.googlemapsv2.ObaStop . getRouteIds ( ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { ObaRoute org.onebusaway.android.map.googlemapsv2.ObaRoute = java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> . get ( java.lang.String[] [ int ] ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaRoute != null ) { java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> . add ( org.onebusaway.android.map.googlemapsv2.ObaRoute ) ; } } LatLng org.onebusaway.android.map.googlemapsv2.LatLng = new LatLng ( org.onebusaway.android.map.googlemapsv2.ObaStop . getLatitude ( ) - NUMBER , org.onebusaway.android.map.googlemapsv2.ObaStop . getLongitude ( ) ) ; org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.GoogleMap . addMarker ( new MarkerOptions ( ) . position ( org.onebusaway.android.map.googlemapsv2.LatLng ) ) ; } 
private void void ( final Marker org.onebusaway.android.map.googlemapsv2.Marker ) { final Handler org.onebusaway.android.map.googlemapsv2.Handler = new Handler ( ) ; final long long = SystemClock . uptimeMillis ( ) ; final long long = NUMBER ; Projection org.onebusaway.android.map.googlemapsv2.Projection = org.onebusaway.android.map.googlemapsv2.GoogleMap . getProjection ( ) ; final LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Marker . getPosition ( ) ; Point org.onebusaway.android.map.googlemapsv2.Point = org.onebusaway.android.map.googlemapsv2.Projection . toScreenLocation ( org.onebusaway.android.map.googlemapsv2.LatLng ) ; org.onebusaway.android.map.googlemapsv2.Point . offset ( NUMBER , - NUMBER ) ; final LatLng org.onebusaway.android.map.googlemapsv2.LatLng = org.onebusaway.android.map.googlemapsv2.Projection . fromScreenLocation ( org.onebusaway.android.map.googlemapsv2.Point ) ; final Interpolator org.onebusaway.android.map.googlemapsv2.Interpolator = new BounceInterpolator ( ) ; org.onebusaway.android.map.googlemapsv2.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { long long = SystemClock . uptimeMillis ( ) - long ; float float = org.onebusaway.android.map.googlemapsv2.Interpolator . getInterpolation ( ( float ) long / long ) ; double double = float * markerLatLng . longitude + ( NUMBER - float ) * startLatLng . longitude ; double double = float * markerLatLng . latitude + ( NUMBER - float ) * startLatLng . latitude ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( new LatLng ( double , double ) ) ; if ( float < NUMBER ) { org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( this , NUMBER ) ; } } } ) ; } 
@ java.lang.Override public void void ( ) { long long = SystemClock . uptimeMillis ( ) - long ; float float = org.onebusaway.android.map.googlemapsv2.Interpolator . getInterpolation ( ( float ) long / long ) ; double double = float * markerLatLng . longitude + ( NUMBER - float ) * startLatLng . longitude ; double double = float * markerLatLng . latitude + ( NUMBER - float ) * startLatLng . latitude ; org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( new LatLng ( double , double ) ) ; if ( float < NUMBER ) { org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( this , NUMBER ) ; } } 
org.onebusaway.android.map.googlemapsv2.ObaStop org.onebusaway.android.map.googlemapsv2.ObaStop ( ) { return org.onebusaway.android.map.googlemapsv2.ObaStop ; } 
void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.Marker != null ) { org.onebusaway.android.map.googlemapsv2.Marker . remove ( ) ; org.onebusaway.android.map.googlemapsv2.Marker = null ; } java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> . clear ( ) ; org.onebusaway.android.map.googlemapsv2.ObaStop = null ; } 
private void void ( ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> : java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . entrySet ( ) ) { java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) . remove ( ) ; } } 
synchronized void void ( boolean boolean ) { if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> != null ) { void ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . clear ( ) ; } if ( java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> != null ) { java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaStop> . clear ( ) ; } if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> != null ) { java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.ObaRoute> . clear ( ) ; } if ( boolean ) { void ( ) ; } else { if ( org.onebusaway.android.map.googlemapsv2.ObaStop != null && java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> != null ) { void ( org.onebusaway.android.map.googlemapsv2.ObaStop , java.util.List<org.onebusaway.android.map.googlemapsv2.ObaRoute> ) ; } } } 
synchronized int int ( ) { return java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) ; } 
java.lang.String java.lang.String ( ) 
public void ( Activity org.onebusaway.android.map.googlemapsv2.Activity , GoogleMap org.onebusaway.android.map.googlemapsv2.GoogleMap ) { org.onebusaway.android.map.googlemapsv2.Activity = org.onebusaway.android.map.googlemapsv2.Activity ; org.onebusaway.android.map.googlemapsv2.GoogleMap = org.onebusaway.android.map.googlemapsv2.GoogleMap ; void ( ) ; org.onebusaway.android.map.googlemapsv2.GoogleMap . setOnInfoWindowClickListener ( this ) ; org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter = new org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter ( org.onebusaway.android.map.googlemapsv2.Activity ) ; org.onebusaway.android.map.googlemapsv2.GoogleMap . setInfoWindowAdapter ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter ) ; } 
public void void ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller = org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller ; } 
public void void ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { void ( ) ; org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ; org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . void ( java.util.HashSet<java.lang.String> , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ; } 
public synchronized int int ( ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData != null ) { return org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . int ( ) ; } else { return NUMBER ; } } 
public synchronized void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . void ( ) ; org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData = null ; } if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter != null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter . void ( ) ; } } 
private static final void void ( ) { final int int = NUMBER ; if ( org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> == null ) { org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> = new LruCache <> ( int ) ; } if ( org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> == null ) { org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> = new LruCache <> ( int ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int , int int ) { if ( ! boolean ( int ) ) { int = int ; } java.lang.String java.lang.String = java.lang.String . java.lang.String ( STRING , int , int ) ; Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . get ( java.lang.String ) ; if ( org.onebusaway.android.map.googlemapsv2.Bitmap == null ) { switch ( int ) { case ObaRoute . TYPE_BUS : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; case ObaRoute . TYPE_FERRY : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; case ObaRoute . TYPE_TRAM : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; case ObaRoute . TYPE_SUBWAY : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; case ObaRoute . TYPE_RAIL : org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int ) ; break; } } org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . put ( java.lang.String , org.onebusaway.android.map.googlemapsv2.Bitmap ) ; return org.onebusaway.android.map.googlemapsv2.Bitmap ; } 
private static boolean boolean ( int int ) { return int == ObaRoute . TYPE_BUS || int == ObaRoute . TYPE_FERRY || int == ObaRoute . TYPE_TRAM || int == ObaRoute . TYPE_SUBWAY || int == ObaRoute . TYPE_RAIL ; } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_bus_smaller_none_inside ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_tram_smaller_none_inside ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_train_smaller_none_inside ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_boat_smaller_none_inside ) ; } } 
private static org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int ) { Resources org.onebusaway.android.map.googlemapsv2.Resources = Application . get ( ) . getResources ( ) ; switch ( int ) { case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_north_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_north_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_south_east_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_south_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_south_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_west_inside ) ; case int : return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_north_west_inside ) ; default: return BitmapFactory . decodeResource ( org.onebusaway.android.map.googlemapsv2.Resources , R . drawable . ic_marker_with_subway_smaller_none_inside ) ; } } 
private void void ( java.lang.String java.lang.String , Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ) { if ( org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) == null ) { org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . put ( java.lang.String , org.onebusaway.android.map.googlemapsv2.Bitmap ) ; } } 
private org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String java.lang.String ) { return org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . get ( java.lang.String ) ; } 
private java.lang.String java.lang.String ( int int , int int , int int ) { if ( ! boolean ( int ) ) { int = int ; } return java.lang.String . java.lang.String ( int ) + STRING + java.lang.String . java.lang.String ( int ) + STRING + java.lang.String . java.lang.String ( int ) ; } 
private org.onebusaway.android.map.googlemapsv2.Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap ( int int , int int , int int ) { int int = ContextCompat . getColor ( org.onebusaway.android.map.googlemapsv2.Activity , int ) ; if ( int == ObaRoute . TYPE_CABLECAR ) { int = ObaRoute . TYPE_TRAM ; } java.lang.String java.lang.String = java.lang.String ( int , int , int ) ; Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( java.lang.String ) ; if ( org.onebusaway.android.map.googlemapsv2.Bitmap == null ) { org.onebusaway.android.map.googlemapsv2.Bitmap = UIUtils . colorBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap ( int , int ) , int ) ; void ( java.lang.String , org.onebusaway.android.map.googlemapsv2.Bitmap ) ; } return org.onebusaway.android.map.googlemapsv2.Bitmap ; } 
@ java.lang.Override public void void ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.CustomInfoWindowAdapter . void ( ) ; ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaTripStatus ( org.onebusaway.android.map.googlemapsv2.Marker ) ; if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller != null && org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller . java.lang.String ( ) != null ) { TripDetailsActivity . start ( org.onebusaway.android.map.googlemapsv2.Activity , org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) , org.onebusaway.android.map.googlemapsv2.VehicleOverlay.Controller . java.lang.String ( ) , TripDetailsListFragment . SCROLL_MODE_VEHICLE ) ; } else { TripDetailsActivity . start ( org.onebusaway.android.map.googlemapsv2.Activity , org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) , TripDetailsListFragment . SCROLL_MODE_VEHICLE ) ; } } 
private void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData == null ) { org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData = new org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData ( ) ; } } 
void ( ) { java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> = new java.util.HashMap <> ( int ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = new java.util.HashMap <> ( int ) ; } 
synchronized void void ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { int int = NUMBER ; int int = NUMBER ; ObaTripDetails [] org.onebusaway.android.map.googlemapsv2.ObaTripDetails[] = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrips ( ) ; java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> = new java.util.HashSet<java.lang.String> <> ( ) ; for ( ObaTripDetails org.onebusaway.android.map.googlemapsv2.ObaTripDetails : org.onebusaway.android.map.googlemapsv2.ObaTripDetails[] ) { ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.ObaTripDetails . getStatus ( ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus != null ) { java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrip ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) . getRouteId ( ) ; if ( java.util.HashSet<java.lang.String> . boolean ( java.lang.String ) ) { Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastKnownLocation ( ) ; boolean boolean = true ; if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getPosition ( ) ; boolean = false ; } if ( ! org.onebusaway.android.map.googlemapsv2.ObaTripStatus . isPredicted ( ) ) { boolean = false ; } Marker org.onebusaway.android.map.googlemapsv2.Marker = java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . get ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) ; if ( org.onebusaway.android.map.googlemapsv2.Marker == null ) { void ( org.onebusaway.android.map.googlemapsv2.Location , boolean , org.onebusaway.android.map.googlemapsv2.ObaTripStatus , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ; int ++ ; } else { void ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.Location , boolean , org.onebusaway.android.map.googlemapsv2.ObaTripStatus , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ; int ++ ; } java.util.HashSet<java.lang.String> . boolean ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) ; } } } int int = int ( java.util.HashSet<java.lang.String> ) ; Log . d ( java.lang.String , STRING + int + STRING + int + STRING + int + STRING + java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) ) ; Log . d ( java.lang.String , STRING + org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . size ( ) + STRING + org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . hitCount ( ) + STRING + org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . missCount ( ) ) ; Log . d ( java.lang.String , java.lang.String . java.lang.String ( STRING , org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . size ( ) , org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . hitCount ( ) , org.onebusaway.android.map.googlemapsv2.LruCache<java.lang.String,org.onebusaway.android.map.googlemapsv2.Bitmap> . missCount ( ) ) ) ; } 
private void void ( Location org.onebusaway.android.map.googlemapsv2.Location , boolean boolean , ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { Marker org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.GoogleMap . addMarker ( new MarkerOptions ( ) . position ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) . title ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getVehicleId ( ) ) . icon ( org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( boolean , org.onebusaway.android.map.googlemapsv2.ObaTripStatus , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ) ) ; ProprietaryMapHelpV2 . setZIndex ( org.onebusaway.android.map.googlemapsv2.Marker , float ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . put ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) , org.onebusaway.android.map.googlemapsv2.Marker ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . put ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.ObaTripStatus ) ; } 
private void void ( Marker org.onebusaway.android.map.googlemapsv2.Marker , Location org.onebusaway.android.map.googlemapsv2.Location , boolean boolean , ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { boolean boolean = org.onebusaway.android.map.googlemapsv2.Marker . isInfoWindowShown ( ) ; org.onebusaway.android.map.googlemapsv2.Marker . setIcon ( org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( boolean , org.onebusaway.android.map.googlemapsv2.ObaTripStatus , org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . put ( org.onebusaway.android.map.googlemapsv2.Marker , org.onebusaway.android.map.googlemapsv2.ObaTripStatus ) ; Location org.onebusaway.android.map.googlemapsv2.Location = MapHelpV2 . makeLocation ( org.onebusaway.android.map.googlemapsv2.Marker . getPosition ( ) ) ; if ( org.onebusaway.android.map.googlemapsv2.Location . distanceTo ( org.onebusaway.android.map.googlemapsv2.Location ) < double ) { AnimationUtil . animateMarkerTo ( org.onebusaway.android.map.googlemapsv2.Marker , MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; } else { org.onebusaway.android.map.googlemapsv2.Marker . setPosition ( MapHelpV2 . makeLatLng ( org.onebusaway.android.map.googlemapsv2.Location ) ) ; } if ( boolean ) { org.onebusaway.android.map.googlemapsv2.Marker . showInfoWindow ( ) ; } } 
private int int ( java.util.HashSet<java.lang.String> < java.lang.String > java.util.HashSet<java.lang.String> ) { int int = NUMBER ; try { java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> < java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > > java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> = java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . entrySet ( ) . iterator ( ) ; while ( java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> . hasNext ( ) ) { java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> . next ( ) ; java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getKey ( ) ; Marker org.onebusaway.android.map.googlemapsv2.Marker = java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) ; if ( ! java.util.HashSet<java.lang.String> . boolean ( java.lang.String ) ) { java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) . remove ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . remove ( org.onebusaway.android.map.googlemapsv2.Marker ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker>> . remove ( ) ; int ++ ; } } } catch ( java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException ) { Log . w ( java.lang.String , STRING + java.lang.UnsupportedOperationException ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = new java.util.HashMap <> ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> : java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . entrySet ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getKey ( ) ; Marker org.onebusaway.android.map.googlemapsv2.Marker = java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) ; if ( ! java.util.HashSet<java.lang.String> . boolean ( java.lang.String ) ) { java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) . remove ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . remove ( org.onebusaway.android.map.googlemapsv2.Marker ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . remove ( java.lang.String ) ; int ++ ; } } } return int ; } 
private org.onebusaway.android.map.googlemapsv2.BitmapDescriptor org.onebusaway.android.map.googlemapsv2.BitmapDescriptor ( boolean boolean , ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus , ObaTripsForRouteResponse org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse ) { java.lang.String java.lang.String = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrip ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) . getRouteId ( ) ; ObaRoute org.onebusaway.android.map.googlemapsv2.ObaRoute = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getRoute ( java.lang.String ) ; int int = org.onebusaway.android.map.googlemapsv2.ObaRoute . getType ( ) ; int int ; if ( boolean ) { long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getScheduleDeviation ( ) ) ; int = ArrivalInfoUtils . computeColorFromDeviation ( long ) ; } else { int = R . color . stop_info_scheduled_time ; } double double = MathUtils . toDirection ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getOrientation ( ) ) ; int int = MathUtils . getHalfWindIndex ( ( float ) double , int - NUMBER ) ; Bitmap org.onebusaway.android.map.googlemapsv2.Bitmap = org.onebusaway.android.map.googlemapsv2.Bitmap ( int , int , int ) ; return BitmapDescriptorFactory . fromBitmap ( org.onebusaway.android.map.googlemapsv2.Bitmap ) ; } 
synchronized org.onebusaway.android.map.googlemapsv2.ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { return java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . get ( org.onebusaway.android.map.googlemapsv2.Marker ) ; } 
private void void ( ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> < java.lang.String , Marker > java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> : java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . entrySet ( ) ) { java.util.Map.Entry<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . getValue ( ) . remove ( ) ; } } 
synchronized void void ( ) { if ( java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> != null ) { void ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . clear ( ) ; java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> = null ; } if ( java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> != null ) { java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> . clear ( ) ; java.util.HashMap<org.onebusaway.android.map.googlemapsv2.Marker,org.onebusaway.android.map.googlemapsv2.ObaTripStatus> = null ; } } 
synchronized int int ( ) { return java.util.HashMap<java.lang.String,org.onebusaway.android.map.googlemapsv2.Marker> . size ( ) ; } 
protected static boolean boolean ( ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus ) { boolean boolean = true ; Location org.onebusaway.android.map.googlemapsv2.Location = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastKnownLocation ( ) ; if ( org.onebusaway.android.map.googlemapsv2.Location == null ) { boolean = false ; } if ( ! org.onebusaway.android.map.googlemapsv2.ObaTripStatus . isPredicted ( ) ) { boolean = false ; } return boolean ; } 
public void ( Context org.onebusaway.android.map.googlemapsv2.Context ) { this . org.onebusaway.android.map.googlemapsv2.LayoutInflater = LayoutInflater . from ( org.onebusaway.android.map.googlemapsv2.Context ) ; this . org.onebusaway.android.map.googlemapsv2.Context = org.onebusaway.android.map.googlemapsv2.Context ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.View org.onebusaway.android.map.googlemapsv2.View ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { return null ; } 
@ java.lang.Override public org.onebusaway.android.map.googlemapsv2.View org.onebusaway.android.map.googlemapsv2.View ( Marker org.onebusaway.android.map.googlemapsv2.Marker ) { if ( org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData == null ) { return null ; } ObaTripStatus org.onebusaway.android.map.googlemapsv2.ObaTripStatus = org.onebusaway.android.map.googlemapsv2.VehicleOverlay.MarkerData . org.onebusaway.android.map.googlemapsv2.ObaTripStatus ( org.onebusaway.android.map.googlemapsv2.Marker ) ; if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus == null ) { org.onebusaway.android.map.googlemapsv2.Marker = null ; return null ; } org.onebusaway.android.map.googlemapsv2.Marker = org.onebusaway.android.map.googlemapsv2.Marker ; View org.onebusaway.android.map.googlemapsv2.View = org.onebusaway.android.map.googlemapsv2.LayoutInflater . inflate ( R . layout . vehicle_info_window , null ) ; Resources org.onebusaway.android.map.googlemapsv2.Resources = org.onebusaway.android.map.googlemapsv2.Context . getResources ( ) ; TextView org.onebusaway.android.map.googlemapsv2.TextView = ( TextView ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . route_and_destination ) ; TextView org.onebusaway.android.map.googlemapsv2.TextView = ( TextView ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . status ) ; TextView org.onebusaway.android.map.googlemapsv2.TextView = ( TextView ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . last_updated ) ; ImageView org.onebusaway.android.map.googlemapsv2.ImageView = ( ImageView ) org.onebusaway.android.map.googlemapsv2.View . findViewById ( R . id . trip_more_info ) ; org.onebusaway.android.map.googlemapsv2.ImageView . setColorFilter ( org.onebusaway.android.map.googlemapsv2.Resources . getColor ( R . color . switch_thumb_normal_material_dark ) ) ; ObaTrip org.onebusaway.android.map.googlemapsv2.ObaTrip = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getTrip ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getActiveTripId ( ) ) ; ObaRoute org.onebusaway.android.map.googlemapsv2.ObaRoute = org.onebusaway.android.map.googlemapsv2.ObaTripsForRouteResponse . getRoute ( org.onebusaway.android.map.googlemapsv2.ObaTrip . getRouteId ( ) ) ; org.onebusaway.android.map.googlemapsv2.TextView . setText ( UIUtils . getRouteDisplayName ( org.onebusaway.android.map.googlemapsv2.ObaRoute ) + STRING + org.onebusaway.android.map.googlemapsv2.Context . getString ( R . string . trip_info_separator ) + STRING + UIUtils . formatDisplayText ( org.onebusaway.android.map.googlemapsv2.ObaTrip . getHeadsign ( ) ) ) ; boolean boolean = boolean ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus ) ; org.onebusaway.android.map.googlemapsv2.TextView . setBackgroundResource ( R . drawable . round_corners_style_b_status ) ; GradientDrawable org.onebusaway.android.map.googlemapsv2.GradientDrawable = ( GradientDrawable ) org.onebusaway.android.map.googlemapsv2.TextView . getBackground ( ) ; int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Context , NUMBER ) ; int int = UIUtils . dpToPixels ( org.onebusaway.android.map.googlemapsv2.Context , NUMBER ) ; int int ; if ( boolean ) { long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getScheduleDeviation ( ) ) ; java.lang.String java.lang.String = ArrivalInfoUtils . computeArrivalLabelFromDelay ( org.onebusaway.android.map.googlemapsv2.Resources , long ) ; org.onebusaway.android.map.googlemapsv2.TextView . setText ( java.lang.String ) ; int = ArrivalInfoUtils . computeColorFromDeviation ( long ) ; org.onebusaway.android.map.googlemapsv2.GradientDrawable . setColor ( org.onebusaway.android.map.googlemapsv2.Resources . getColor ( int ) ) ; org.onebusaway.android.map.googlemapsv2.TextView . setPadding ( int , int , int , int ) ; } else { org.onebusaway.android.map.googlemapsv2.TextView . setText ( org.onebusaway.android.map.googlemapsv2.Resources . getString ( R . string . stop_info_scheduled ) ) ; int = R . color . stop_info_scheduled_time ; org.onebusaway.android.map.googlemapsv2.GradientDrawable . setColor ( org.onebusaway.android.map.googlemapsv2.Resources . getColor ( int ) ) ; org.onebusaway.android.map.googlemapsv2.TextView . setText ( org.onebusaway.android.map.googlemapsv2.Resources . getString ( R . string . vehicle_last_updated_scheduled ) ) ; org.onebusaway.android.map.googlemapsv2.TextView . setPadding ( int , int , int , int ) ; return org.onebusaway.android.map.googlemapsv2.View ; } long long = java.lang.System . long ( ) ; long long ; if ( org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastLocationUpdateTime ( ) != NUMBER ) { long = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastLocationUpdateTime ( ) ; } else { long = org.onebusaway.android.map.googlemapsv2.ObaTripStatus . getLastUpdateTime ( ) ; } long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( long - long ) ; long long = java.util.concurrent.TimeUnit . java.util.concurrent.TimeUnit . long ( long ) ; long long = long % NUMBER ; java.lang.String java.lang.String ; if ( long < NUMBER ) { java.lang.String = org.onebusaway.android.map.googlemapsv2.Resources . getString ( R . string . vehicle_last_updated_sec , long ) ; } else { java.lang.String = org.onebusaway.android.map.googlemapsv2.Resources . getString ( R . string . vehicle_last_updated_min_and_sec , long , long ) ; } org.onebusaway.android.map.googlemapsv2.TextView . setText ( java.lang.String ) ; if ( org.onebusaway.android.map.googlemapsv2.Handler != null ) { org.onebusaway.android.map.googlemapsv2.Handler . removeCallbacks ( java.lang.Runnable ) ; org.onebusaway.android.map.googlemapsv2.Handler . postDelayed ( java.lang.Runnable , long ) ; } return org.onebusaway.android.map.googlemapsv2.View ; } 
public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.Marker != null && org.onebusaway.android.map.googlemapsv2.Marker . isInfoWindowShown ( ) ) { org.onebusaway.android.map.googlemapsv2.Marker . showInfoWindow ( ) ; } } 
public void void ( ) { if ( org.onebusaway.android.map.googlemapsv2.Handler != null ) { org.onebusaway.android.map.googlemapsv2.Handler . removeCallbacks ( java.lang.Runnable ) ; } } 
@ java.lang.Override public void void ( Context com.joulespersecond.seattlebusbot.Context , Intent com.joulespersecond.seattlebusbot.Intent ) { Log . d ( java.lang.String , STRING ) ; ReminderUtils . startReminderService ( com.joulespersecond.seattlebusbot.Context , com.joulespersecond.seattlebusbot.Intent , java.lang.String ) ; } 
@ java.lang.Override protected void void ( @ Nullable Bundle com.joulespersecond.seattlebusbot.Bundle ) { super. onCreate ( com.joulespersecond.seattlebusbot.Bundle ) ; Intent com.joulespersecond.seattlebusbot.Intent = getIntent ( ) ; com.joulespersecond.seattlebusbot.Intent . setClass ( this , org . org.onebusaway . org.onebusaway . org.onebusaway . org.onebusaway .class ) ; startActivity ( com.joulespersecond.seattlebusbot.Intent ) ; finish ( ) ; } 
@ java.lang.Override protected void void ( @ Nullable Bundle com.joulespersecond.seattlebusbot.Bundle ) { super. onCreate ( com.joulespersecond.seattlebusbot.Bundle ) ; Intent com.joulespersecond.seattlebusbot.Intent = getIntent ( ) ; com.joulespersecond.seattlebusbot.Intent . setClass ( this , org . org.onebusaway . org.onebusaway . org.onebusaway . org.onebusaway .class ) ; startActivity ( com.joulespersecond.seattlebusbot.Intent ) ; finish ( ) ; } 
@ java.lang.Override protected void void ( @ Nullable Bundle com.joulespersecond.seattlebusbot.Bundle ) { super. onCreate ( com.joulespersecond.seattlebusbot.Bundle ) ; Intent com.joulespersecond.seattlebusbot.Intent = getIntent ( ) ; com.joulespersecond.seattlebusbot.Intent . setClass ( this , org . org.onebusaway . org.onebusaway . org.onebusaway . org.onebusaway .class ) ; startActivity ( com.joulespersecond.seattlebusbot.Intent ) ; finish ( ) ; } 
@ java.lang.Override protected void void ( @ Nullable Bundle com.joulespersecond.seattlebusbot.Bundle ) { super. onCreate ( com.joulespersecond.seattlebusbot.Bundle ) ; Intent com.joulespersecond.seattlebusbot.Intent = getIntent ( ) ; com.joulespersecond.seattlebusbot.Intent . setClass ( this , org . org.onebusaway . org.onebusaway . org.onebusaway . org.onebusaway .class ) ; startActivity ( com.joulespersecond.seattlebusbot.Intent ) ; finish ( ) ; } 
@ java.lang.Override public void void ( ) { super. onCreate ( ) ; org.onebusaway.android.app.Application = this ; org.onebusaway.android.app.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( this ) ; void ( ) ; void ( ) ; void ( org.onebusaway.android.app.ObaRegion ( ) ) ; ObaAnalytics . initAnalytics ( this ) ; void ( ) ; } 
@ java.lang.Override public void void ( ) { super. onTerminate ( ) ; org.onebusaway.android.app.Application = null ; } 
public static org.onebusaway.android.app.Application org.onebusaway.android.app.Application ( ) { return org.onebusaway.android.app.Application ; } 
public static org.onebusaway.android.app.SharedPreferences org.onebusaway.android.app.SharedPreferences ( ) { return org.onebusaway.android.app.Application ( ) . org.onebusaway.android.app.SharedPreferences ; } 
public static synchronized org.onebusaway.android.app.Location org.onebusaway.android.app.Location ( Context org.onebusaway.android.app.Context , GoogleApiClient org.onebusaway.android.app.GoogleApiClient ) { if ( org.onebusaway.android.app.Location == null ) { try { org.onebusaway.android.app.Location = org.onebusaway.android.app.Location ( org.onebusaway.android.app.Context , org.onebusaway.android.app.GoogleApiClient ) ; } catch ( java.lang.SecurityException java.lang.SecurityException ) { Log . e ( java.lang.String , STRING + java.lang.SecurityException ) ; } } return org.onebusaway.android.app.Location ; } 
public static synchronized void void ( Location org.onebusaway.android.app.Location ) { if ( LocationUtils . compareLocations ( org.onebusaway.android.app.Location , org.onebusaway.android.app.Location ) ) { if ( org.onebusaway.android.app.Location == null ) { org.onebusaway.android.app.Location = new Location ( STRING ) ; } org.onebusaway.android.app.Location . set ( org.onebusaway.android.app.Location ) ; org.onebusaway.android.app.GeomagneticField = new GeomagneticField ( ( float ) org.onebusaway.android.app.Location . getLatitude ( ) , ( float ) org.onebusaway.android.app.Location . getLongitude ( ) , ( float ) org.onebusaway.android.app.Location . getAltitude ( ) , java.lang.System . long ( ) ) ; } } 
public static java.lang.Float java.lang.Float ( ) { if ( org.onebusaway.android.app.GeomagneticField != null ) { return org.onebusaway.android.app.GeomagneticField . getDeclination ( ) ; } else { return null ; } } 
private static org.onebusaway.android.app.Location org.onebusaway.android.app.Location ( Context org.onebusaway.android.app.Context , GoogleApiClient org.onebusaway.android.app.GoogleApiClient ) { Location org.onebusaway.android.app.Location = org.onebusaway.android.app.Location ( org.onebusaway.android.app.Context , org.onebusaway.android.app.GoogleApiClient ) ; if ( org.onebusaway.android.app.Location != null ) { return org.onebusaway.android.app.Location ; } else { return LocationUtils . getDefaultSearchCenter ( ) ; } } 
private static org.onebusaway.android.app.Location org.onebusaway.android.app.Location ( Context org.onebusaway.android.app.Context , GoogleApiClient org.onebusaway.android.app.GoogleApiClient )            throws java.lang.SecurityException { GoogleApiAvailability org.onebusaway.android.app.GoogleApiAvailability = GoogleApiAvailability . getInstance ( ) ; Location org.onebusaway.android.app.Location = null ; if ( org.onebusaway.android.app.GoogleApiClient != null && org.onebusaway.android.app.Context != null && org.onebusaway.android.app.GoogleApiAvailability . isGooglePlayServicesAvailable ( org.onebusaway.android.app.Context ) == ConnectionResult . SUCCESS && org.onebusaway.android.app.GoogleApiClient . isConnected ( ) ) { org.onebusaway.android.app.Location = FusedLocationApi . getLastLocation ( org.onebusaway.android.app.GoogleApiClient ) ; Log . d ( java.lang.String , STRING ) ; } Location org.onebusaway.android.app.Location = org.onebusaway.android.app.Location ( org.onebusaway.android.app.Context ) ; if ( LocationUtils . compareLocationsByTime ( org.onebusaway.android.app.Location , org.onebusaway.android.app.Location ) ) { Log . d ( java.lang.String , STRING ) ; return org.onebusaway.android.app.Location ; } else { Log . d ( java.lang.String , STRING ) ; return org.onebusaway.android.app.Location ; } } 
private static org.onebusaway.android.app.Location org.onebusaway.android.app.Location ( Context org.onebusaway.android.app.Context ) { if ( org.onebusaway.android.app.Context == null ) { return null ; } LocationManager org.onebusaway.android.app.LocationManager = ( LocationManager ) org.onebusaway.android.app.Context . getSystemService ( Context . LOCATION_SERVICE ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = org.onebusaway.android.app.LocationManager . getProviders ( true ) ; Location org.onebusaway.android.app.Location = null ; for ( java.util.Iterator<java.lang.String> < java.lang.String > java.util.Iterator<java.lang.String> = java.util.List<java.lang.String> . java.util.Iterator<java.lang.String> ( ) ; java.util.Iterator<java.lang.String> . boolean ( ) ; ) { Location org.onebusaway.android.app.Location = org.onebusaway.android.app.LocationManager . getLastKnownLocation ( java.util.Iterator<java.lang.String> . java.lang.String ( ) ) ; if ( LocationUtils . compareLocationsByTime ( org.onebusaway.android.app.Location , org.onebusaway.android.app.Location ) ) { org.onebusaway.android.app.Location = org.onebusaway.android.app.Location ; } } return org.onebusaway.android.app.Location ; } 
public synchronized org.onebusaway.android.app.ObaRegion org.onebusaway.android.app.ObaRegion ( ) { return ObaApi . getDefaultContext ( ) . getRegion ( ) ; } 
public synchronized void void ( ObaRegion org.onebusaway.android.app.ObaRegion ) { void ( org.onebusaway.android.app.ObaRegion , true ) ; } 
public synchronized void void ( ObaRegion org.onebusaway.android.app.ObaRegion , boolean boolean ) { if ( org.onebusaway.android.app.ObaRegion != null ) { ObaApi . getDefaultContext ( ) . setRegion ( org.onebusaway.android.app.ObaRegion ) ; PreferenceUtils . saveLong ( org.onebusaway.android.app.SharedPreferences , getString ( R . string . preference_key_region ) , org.onebusaway.android.app.ObaRegion . getId ( ) ) ; void ( null ) ; if ( boolean && org.onebusaway.android.app.ObaRegion . getOtpBaseUrl ( ) != null ) { void ( null ) ; void ( false ) ; } } else { ObaApi . getDefaultContext ( ) . setRegion ( null ) ; PreferenceUtils . saveLong ( org.onebusaway.android.app.SharedPreferences , getString ( R . string . preference_key_region ) , - NUMBER ) ; } void ( org.onebusaway.android.app.ObaRegion ) ; } 
public long long ( ) { SharedPreferences org.onebusaway.android.app.SharedPreferences = org.onebusaway.android.app.SharedPreferences ( ) ; return org.onebusaway.android.app.SharedPreferences . getLong ( getString ( R . string . preference_key_last_region_update ) , NUMBER ) ; } 
public void void ( long long ) { PreferenceUtils . saveLong ( org.onebusaway.android.app.SharedPreferences , getString ( R . string . preference_key_last_region_update ) , long ) ; } 
public java.lang.String java.lang.String ( ) { SharedPreferences org.onebusaway.android.app.SharedPreferences = org.onebusaway.android.app.SharedPreferences ( ) ; return org.onebusaway.android.app.SharedPreferences . getString ( getString ( R . string . preference_key_oba_api_url ) , null ) ; } 
public void void ( java.lang.String java.lang.String ) { PreferenceUtils . saveString ( getString ( R . string . preference_key_oba_api_url ) , java.lang.String ) ; } 
public java.lang.String java.lang.String ( ) { SharedPreferences org.onebusaway.android.app.SharedPreferences = org.onebusaway.android.app.SharedPreferences ( ) ; return org.onebusaway.android.app.SharedPreferences . getString ( getString ( R . string . preference_key_otp_api_url ) , null ) ; } 
public void void ( java.lang.String java.lang.String ) { PreferenceUtils . saveString ( getString ( R . string . preference_key_otp_api_url ) , java.lang.String ) ; } 
public boolean boolean ( ) { SharedPreferences org.onebusaway.android.app.SharedPreferences = org.onebusaway.android.app.SharedPreferences ( ) ; return org.onebusaway.android.app.SharedPreferences . getBoolean ( getString ( R . string . preference_key_otp_api_url_version ) , false ) ; } 
public void void ( boolean boolean ) { PreferenceUtils . saveBoolean ( getString ( R . string . preference_key_otp_api_url_version ) , boolean ) ; } 
public static java.lang.String java.lang.String ( byte [] byte[] ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( NUMBER * byte[] . int ) ; for ( byte byte : byte[] ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String . char ( ( byte & NUMBER ) >> NUMBER ) ) . java.lang.StringBuilder ( java.lang.String . char ( ( byte & NUMBER ) ) ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; } 
private java.lang.String java.lang.String ( ) { try { final TelephonyManager org.onebusaway.android.app.TelephonyManager = ( TelephonyManager ) getSystemService ( Context . TELEPHONY_SERVICE ) ; final java.lang.String java.lang.String = org.onebusaway.android.app.TelephonyManager . getDeviceId ( ) ; java.security.MessageDigest java.security.MessageDigest = java.security.MessageDigest . java.security.MessageDigest ( STRING ) ; java.security.MessageDigest . void ( java.lang.String . byte[] ( ) ) ; return java.lang.String ( java.security.MessageDigest . byte[] ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { return java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ; } } 
private void void ( ) { java.lang.String java.lang.String = org.onebusaway.android.app.SharedPreferences . getString ( java.lang.String , null ) ; if ( java.lang.String == null ) { java.lang.String = java.lang.String ( ) ; PreferenceUtils . saveString ( java.lang.String , java.lang.String ) ; } void ( ) ; PackageManager org.onebusaway.android.app.PackageManager = getPackageManager ( ) ; PackageInfo org.onebusaway.android.app.PackageInfo = null ; try { org.onebusaway.android.app.PackageInfo = org.onebusaway.android.app.PackageManager . getPackageInfo ( getPackageName ( ) , PackageManager . GET_META_DATA ) ; } catch ( NameNotFoundException org.onebusaway.android.app.NameNotFoundException ) { return; } ObaApi . getDefaultContext ( ) . setAppInfo ( appInfo . versionCode , java.lang.String ) ; } 
private void void ( ) { java.lang.String java.lang.String = getResources ( ) . getString ( R . string . preference_key_arrival_info_style ) ; java.lang.String java.lang.String = org.onebusaway.android.app.SharedPreferences . getString ( java.lang.String , null ) ; if ( java.lang.String == null ) { switch ( BuildConfig . ARRIVAL_INFO_STYLE ) { case BuildFlavorUtils . ARRIVAL_INFO_STYLE_A : PreferenceUtils . saveString ( java.lang.String , BuildFlavorUtils . getPreferenceOptionForArrivalInfoBuildFlavorStyle ( BuildFlavorUtils . ARRIVAL_INFO_STYLE_A ) ) ; Log . d ( java.lang.String , STRING ) ; break; case BuildFlavorUtils . ARRIVAL_INFO_STYLE_B : PreferenceUtils . saveString ( java.lang.String , BuildFlavorUtils . getPreferenceOptionForArrivalInfoBuildFlavorStyle ( BuildFlavorUtils . ARRIVAL_INFO_STYLE_B ) ) ; Log . d ( java.lang.String , STRING ) ; break; default: PreferenceUtils . saveString ( java.lang.String , BuildFlavorUtils . getPreferenceOptionForArrivalInfoBuildFlavorStyle ( BuildFlavorUtils . ARRIVAL_INFO_STYLE_B ) ) ; Log . d ( java.lang.String , STRING ) ; break; } } } 
private void void ( ) { long long = org.onebusaway.android.app.SharedPreferences . getLong ( getString ( R . string . preference_key_region ) , - NUMBER ) ; if ( long < NUMBER ) { Log . d ( java.lang.String , STRING ) ; return; } ObaRegion org.onebusaway.android.app.ObaRegion = ObaContract . Regions . get ( this , ( int ) long ) ; if ( org.onebusaway.android.app.ObaRegion == null ) { Log . d ( java.lang.String , STRING ) ; return; } ObaApi . getDefaultContext ( ) . setRegion ( org.onebusaway.android.app.ObaRegion ) ; } 
private void void ( ObaRegion org.onebusaway.android.app.ObaRegion ) { if ( BuildConfig . DEBUG ) { Open311Manager . getSettings ( ) . setDebugMode ( true ) ; Open311Manager . getSettings ( ) . setDryRun ( true ) ; Log . w ( java.lang.String , STRING ) ; } Open311Manager . clearOpen311 ( ) ; if ( org.onebusaway.android.app.ObaRegion != null && org.onebusaway.android.app.ObaRegion . getOpen311Servers ( ) != null ) { for ( ObaRegion . ObaRegion ObaRegion.Open311Server : org.onebusaway.android.app.ObaRegion . getOpen311Servers ( ) ) { java.lang.String java.lang.String = ObaRegion.Open311Server . getJuridisctionId ( ) ; Open311Option org.onebusaway.android.app.Open311Option = new Open311Option ( ObaRegion.Open311Server . getBaseUrl ( ) , ObaRegion.Open311Server . getApiKey ( ) , TextUtils . isEmpty ( java.lang.String ) ? null : java.lang.String ) ; Open311Manager . initOpen311WithOption ( org.onebusaway.android.app.Open311Option ) ; } } } 
public synchronized org.onebusaway.android.app.Tracker org.onebusaway.android.app.Tracker ( org.onebusaway.android.app.Application.TrackerName org.onebusaway.android.app.Application.TrackerName ) { if ( ! java.util.HashMap<org.onebusaway.android.app.Application.TrackerName,org.onebusaway.android.app.Tracker> . containsKey ( org.onebusaway.android.app.Application.TrackerName ) ) { GoogleAnalytics org.onebusaway.android.app.GoogleAnalytics = GoogleAnalytics . getInstance ( this ) ; Tracker org.onebusaway.android.app.Tracker = ( org.onebusaway.android.app.Application.TrackerName == org.onebusaway.android.app.Application.TrackerName . org.onebusaway.android.app.Application.TrackerName ) ? org.onebusaway.android.app.GoogleAnalytics . newTracker ( R . xml . app_tracker ) : ( org.onebusaway.android.app.Application.TrackerName == org.onebusaway.android.app.Application.TrackerName . org.onebusaway.android.app.Application.TrackerName ) ? org.onebusaway.android.app.GoogleAnalytics . newTracker ( R . xml . global_tracker ) : org.onebusaway.android.app.GoogleAnalytics . newTracker ( R . xml . global_tracker ) ; java.util.HashMap<org.onebusaway.android.app.Application.TrackerName,org.onebusaway.android.app.Tracker> . put ( org.onebusaway.android.app.Application.TrackerName , org.onebusaway.android.app.Tracker ) ; } return java.util.HashMap<org.onebusaway.android.app.Application.TrackerName,org.onebusaway.android.app.Tracker> . get ( org.onebusaway.android.app.Application.TrackerName ) ; } 
private void void ( ) { if ( java.lang.String ( ) == null && org.onebusaway.android.app.ObaRegion ( ) != null ) { ObaAnalytics . reportEventWithCategory ( ObaAnalytics . ObaEventCategory . APP_SETTINGS . toString ( ) , getString ( R . string . analytics_action_configured_region ) , getString ( R . string . analytics_label_region ) + org.onebusaway.android.app.ObaRegion ( ) . getName ( ) ) ; } else if ( org.onebusaway.android.app.Application . org.onebusaway.android.app.Application ( ) . java.lang.String ( ) != null ) { java.lang.String java.lang.String = null ; java.security.MessageDigest java.security.MessageDigest = null ; try { java.security.MessageDigest = java.security.MessageDigest . java.security.MessageDigest ( STRING ) ; java.security.MessageDigest . void ( java.lang.String ( ) . byte[] ( ) ) ; java.lang.String = getString ( R . string . analytics_label_custom_url ) + STRING + java.lang.String ( java.security.MessageDigest . byte[] ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.String = org.onebusaway.android.app.Application . org.onebusaway.android.app.Application ( ) . getString ( R . string . analytics_label_custom_url ) ; } ObaAnalytics . reportEventWithCategory ( ObaAnalytics . ObaEventCategory . APP_SETTINGS . toString ( ) , getString ( R . string . analytics_action_configured_region ) , getString ( R . string . analytics_label_region ) + java.lang.String ) ; } java.lang.Boolean java.lang.Boolean = org.onebusaway.android.app.SharedPreferences ( ) . getBoolean ( getString ( R . string . preference_key_experimental_regions ) , java.lang.Boolean . java.lang.Boolean ) ; java.lang.Boolean java.lang.Boolean = org.onebusaway.android.app.SharedPreferences ( ) . getBoolean ( getString ( R . string . preference_key_auto_select_region ) , true ) ; ObaAnalytics . reportEventWithCategory ( ObaAnalytics . ObaEventCategory . APP_SETTINGS . toString ( ) , getString ( R . string . analytics_action_edit_general ) , getString ( R . string . analytics_label_experimental ) + ( java.lang.Boolean ? STRING : STRING ) ) ; ObaAnalytics . reportEventWithCategory ( ObaAnalytics . ObaEventCategory . APP_SETTINGS . toString ( ) , getString ( R . string . analytics_action_edit_general ) , getString ( R . string . analytics_label_region_auto ) + ( java.lang.Boolean ? STRING : STRING ) ) ; } 
public void ( ) { super(); } 
public void ( int int , java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , boolean boolean ) { super(); this . void ( int ) ; this . java.lang.CharSequence = java.lang.CharSequence ; this . java.lang.CharSequence = java.lang.CharSequence ; this . java.lang.CharSequence = java.lang.CharSequence ; this . java.lang.CharSequence = java.lang.CharSequence ; this . boolean = boolean ; } 
public void ( int int , java.lang.CharSequence java.lang.CharSequence ) { super(); this . void ( int ) ; this . java.lang.CharSequence = java.lang.CharSequence ; } 
public int int ( ) { return int ; } 
public void void ( int int ) { this . int = int ; } 
public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; } 
public void void ( java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; } 
public java.util.ArrayList<org.onebusaway.android.directions.model.Direction> < org.onebusaway.android.directions.model.Direction > java.util.ArrayList<org.onebusaway.android.directions.model.Direction> ( ) { return java.util.ArrayList<org.onebusaway.android.directions.model.Direction> ; } 
public void void ( java.util.ArrayList<org.onebusaway.android.directions.model.Direction> < org.onebusaway.android.directions.model.Direction > java.util.ArrayList<org.onebusaway.android.directions.model.Direction> ) { this . java.util.ArrayList<org.onebusaway.android.directions.model.Direction> = java.util.ArrayList<org.onebusaway.android.directions.model.Direction> ; } 
public int int ( ) { return int ; } 
public void void ( int int ) { this . int = int ; } 
public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; } 
public void void ( java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; } 
public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; } 
public void void ( java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; } 
public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; } 
public void void ( java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; } 
public boolean boolean ( ) { return boolean ; } 
public void void ( boolean boolean ) { this . boolean = boolean ; } 
public boolean boolean ( ) { return boolean ; } 
public void void ( boolean boolean ) { this . boolean = boolean ; } 
public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; } 
public void void ( java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; } 
public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; } 
public void void ( java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; } 
public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; } 
public void void ( java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; } 
public void ( Itinerary org.onebusaway.android.directions.model.Itinerary ) { java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( Leg org.onebusaway.android.directions.model.Leg : itinerary . legs ) { TraverseMode org.onebusaway.android.directions.model.TraverseMode = TraverseMode . valueOf ( leg . mode ) ; if ( org.onebusaway.android.directions.model.TraverseMode . isTransit ( ) ) { java.util.List<java.lang.String> . boolean ( leg . tripId ) ; } } Leg org.onebusaway.android.directions.model.Leg = itinerary . legs . get ( itinerary . legs . size ( ) - NUMBER ) ; java.util.Date = ConversionUtils . parseOtpDate ( last . endTime ) ; } 
public void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , java.util.Date java.util.Date ) { java.util.List<java.lang.String> = java.util.List<java.lang.String> ; java.util.Date = java.util.Date ; } 
public boolean boolean ( org.onebusaway.android.directions.model.ItineraryDescription org.onebusaway.android.directions.model.ItineraryDescription ) { if ( org.onebusaway.android.directions.model.ItineraryDescription . java.util.List<java.lang.String> . int ( ) != this . java.util.List<java.lang.String> . int ( ) ) { return false ; } for ( int int = NUMBER ; int < this . java.util.List<java.lang.String> . int ( ) ; int ++ ) { if ( ! java.util.List<java.lang.String> . java.lang.String ( int ) . boolean ( org.onebusaway.android.directions.model.ItineraryDescription . java.util.List<java.lang.String> . java.lang.String ( int ) ) ) { return false ; } } return true ; } 
public long long ( org.onebusaway.android.directions.model.ItineraryDescription org.onebusaway.android.directions.model.ItineraryDescription ) { return ( org.onebusaway.android.directions.model.ItineraryDescription . java.util.Date ( ) . long ( ) - this . java.util.Date ( ) . long ( ) ) / NUMBER ; } 
public int int ( ) { if ( java.util.List<java.lang.String> == null || java.util.List<java.lang.String> . boolean ( ) ) { return - NUMBER ; } return java.util.List<java.lang.String> . int ( ) ; } 
public java.util.Date java.util.Date ( ) { return java.util.Date ; } 
public boolean boolean ( ) { return java.util.Date ( ) . boolean ( new java.util.Date ( ) ) ; } 
public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ; } 
public void ( ) { super( STRING ); } 
public static void void ( Activity org.onebusaway.android.directions.realtime.Activity , Bundle org.onebusaway.android.directions.realtime.Bundle ) { SharedPreferences org.onebusaway.android.directions.realtime.SharedPreferences = Application . getPrefs ( ) ; if ( ! org.onebusaway.android.directions.realtime.SharedPreferences . getBoolean ( OTPConstants . PREFERENCE_KEY_LIVE_UPDATES , true ) ) { return; } org.onebusaway.android.directions.realtime.Bundle . putSerializable ( OTPConstants . NOTIFICATION_TARGET , org.onebusaway.android.directions.realtime.Activity . getClass ( ) ) ; Intent org.onebusaway.android.directions.realtime.Intent = new Intent ( OTPConstants . INTENT_START_CHECKS ) ; org.onebusaway.android.directions.realtime.Intent . putExtras ( org.onebusaway.android.directions.realtime.Bundle ) ; org.onebusaway.android.directions.realtime.Activity . sendBroadcast ( org.onebusaway.android.directions.realtime.Intent ) ; } 
@ java.lang.Override public void void ( Intent org.onebusaway.android.directions.realtime.Intent ) { Bundle org.onebusaway.android.directions.realtime.Bundle = org.onebusaway.android.directions.realtime.Intent . getExtras ( ) ; if ( org.onebusaway.android.directions.realtime.Intent . getAction ( ) . equals ( OTPConstants . INTENT_START_CHECKS ) ) { void ( ) ; if ( ! boolean ( org.onebusaway.android.directions.realtime.Bundle ) ) { Itinerary org.onebusaway.android.directions.realtime.Itinerary = org.onebusaway.android.directions.realtime.Itinerary ( org.onebusaway.android.directions.realtime.Bundle ) ; void ( org.onebusaway.android.directions.realtime.Bundle , org.onebusaway.android.directions.realtime.Itinerary ) ; } } else if ( org.onebusaway.android.directions.realtime.Intent . getAction ( ) . equals ( OTPConstants . INTENT_CHECK_TRIP_TIME ) ) { void ( org.onebusaway.android.directions.realtime.Bundle ) ; } RealtimeWakefulReceiver . completeWakefulIntent ( org.onebusaway.android.directions.realtime.Intent ) ; } 
private void void ( Bundle org.onebusaway.android.directions.realtime.Bundle , Itinerary org.onebusaway.android.directions.realtime.Itinerary ) { Log . d ( java.lang.String , STRING ) ; boolean boolean = false ; for ( Leg org.onebusaway.android.directions.realtime.Leg : itinerary . legs ) { if ( leg . realTime ) { boolean = true ; } } if ( boolean ) { Log . d ( java.lang.String , STRING ) ; org.onebusaway.android.directions.realtime.AlarmManager ( ) . setInexactRepeating ( AlarmManager . RTC , new java.util.Date ( ) . long ( ) , OTPConstants . DEFAULT_UPDATE_INTERVAL_TRIP_TIME , org.onebusaway.android.directions.realtime.PendingIntent ( org.onebusaway.android.directions.realtime.Bundle ) ) ; } else { Log . d ( java.lang.String , STRING ) ; } } 
private boolean boolean ( Bundle org.onebusaway.android.directions.realtime.Bundle ) { java.util.Date java.util.Date = new TripRequestBuilder ( org.onebusaway.android.directions.realtime.Bundle ) . getDateTime ( ) ; java.util.Date java.util.Date = new java.util.Date ( java.util.Date . long ( ) - OTPConstants . REALTIME_SERVICE_QUERY_WINDOW ) ; boolean boolean = new java.util.Date ( ) . boolean ( java.util.Date ) ; if ( boolean ) { Log . d ( java.lang.String , STRING + java.util.Date ) ; Intent org.onebusaway.android.directions.realtime.Intent = new Intent ( OTPConstants . INTENT_START_CHECKS ) ; org.onebusaway.android.directions.realtime.Intent . putExtras ( org.onebusaway.android.directions.realtime.Bundle ) ; PendingIntent org.onebusaway.android.directions.realtime.PendingIntent = PendingIntent . getBroadcast ( getApplicationContext ( ) , NUMBER , org.onebusaway.android.directions.realtime.Intent , PendingIntent . FLAG_CANCEL_CURRENT ) ; org.onebusaway.android.directions.realtime.AlarmManager ( ) . set ( AlarmManager . RTC_WAKEUP , java.util.Date . long ( ) , org.onebusaway.android.directions.realtime.PendingIntent ) ; } return boolean ; } 
private void void ( final Bundle org.onebusaway.android.directions.realtime.Bundle ) { TripRequestBuilder org.onebusaway.android.directions.realtime.TripRequestBuilder = TripRequestBuilder . initFromBundleSimple ( org.onebusaway.android.directions.realtime.Bundle ) ; ItineraryDescription org.onebusaway.android.directions.realtime.ItineraryDescription = org.onebusaway.android.directions.realtime.ItineraryDescription ( org.onebusaway.android.directions.realtime.Bundle ) ; java.lang.Class java.lang.Class = java.lang.Class ( org.onebusaway.android.directions.realtime.Bundle ) ; if ( java.lang.Class == null ) { void ( ) ; return; } void ( java.lang.Class , org.onebusaway.android.directions.realtime.TripRequestBuilder , org.onebusaway.android.directions.realtime.ItineraryDescription ) ; } 
private void void ( final java.lang.Class<? extends org.onebusaway.android.directions.realtime.Activity> < ? extends Activity > java.lang.Class<? extends org.onebusaway.android.directions.realtime.Activity> , final TripRequestBuilder org.onebusaway.android.directions.realtime.TripRequestBuilder , final ItineraryDescription org.onebusaway.android.directions.realtime.ItineraryDescription ) { Log . d ( java.lang.String , STRING ) ; TripRequest . TripRequest TripRequest.Callback = new TripRequest . TripRequest ( ) { @ java.lang.Override public void void ( java.util.List<org.onebusaway.android.directions.realtime.Itinerary> < Itinerary > java.util.List<org.onebusaway.android.directions.realtime.Itinerary> , java.lang.String java.lang.String ) { if ( java.util.List<org.onebusaway.android.directions.realtime.Itinerary> == null || java.util.List<org.onebusaway.android.directions.realtime.Itinerary> . isEmpty ( ) ) { void ( - NUMBER , null ) ; return; } for ( int int = NUMBER ; int < java.util.List<org.onebusaway.android.directions.realtime.Itinerary> . size ( ) ; int ++ ) { ItineraryDescription org.onebusaway.android.directions.realtime.ItineraryDescription = new ItineraryDescription ( java.util.List<org.onebusaway.android.directions.realtime.Itinerary> . get ( int ) ) ; if ( org.onebusaway.android.directions.realtime.ItineraryDescription . itineraryMatches ( org.onebusaway.android.directions.realtime.ItineraryDescription ) ) { long long = org.onebusaway.android.directions.realtime.ItineraryDescription . getDelay ( org.onebusaway.android.directions.realtime.ItineraryDescription ) ; Log . d ( java.lang.String , STRING + long ) ; if ( java.lang.Math . long ( long ) > OTPConstants . REALTIME_SERVICE_DELAY_THRESHOLD ) { Log . d ( java.lang.String , STRING ) ; void ( org.onebusaway.android.directions.realtime.ItineraryDescription , ( long > NUMBER ) ? R . string . trip_plan_delay : R . string . trip_plan_early , R . string . trip_plan_notification_new_plan_text , java.lang.Class<> , org.onebusaway.android.directions.realtime.TripRequestBuilder . getBundle ( ) , java.util.List<org.onebusaway.android.directions.realtime.Itinerary> ) ; void ( ) ; return; } Log . d ( java.lang.String , STRING ) ; void ( org.onebusaway.android.directions.realtime.ItineraryDescription ) ; return; } } Log . d ( java.lang.String , STRING ) ; void ( org.onebusaway.android.directions.realtime.ItineraryDescription , R . string . trip_plan_notification_new_plan_title , R . string . trip_plan_notification_new_plan_text , java.lang.Class<> , org.onebusaway.android.directions.realtime.TripRequestBuilder . getBundle ( ) , java.util.List<org.onebusaway.android.directions.realtime.Itinerary> ) ; void ( ) ; } @ java.lang.Override public void void ( int int , java.lang.String java.lang.String ) { Log . e ( java.lang.String , STRING + int + STRING + java.lang.String ) ; void ( ) ; } } ; org.onebusaway.android.directions.realtime.TripRequestBuilder . setListener ( TripRequest.Callback ) ; try { org.onebusaway.android.directions.realtime.TripRequestBuilder . execute ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; void ( ) ; } } 
@ java.lang.Override public void void ( java.util.List<org.onebusaway.android.directions.realtime.Itinerary> < Itinerary > java.util.List<org.onebusaway.android.directions.realtime.Itinerary> , java.lang.String java.lang.String ) { if ( java.util.List<org.onebusaway.android.directions.realtime.Itinerary> == null || java.util.List<org.onebusaway.android.directions.realtime.Itinerary> . isEmpty ( ) ) { void ( - NUMBER , null ) ; return; } for ( int int = NUMBER ; int < java.util.List<org.onebusaway.android.directions.realtime.Itinerary> . size ( ) ; int ++ ) { ItineraryDescription org.onebusaway.android.directions.realtime.ItineraryDescription = new ItineraryDescription ( java.util.List<org.onebusaway.android.directions.realtime.Itinerary> . get ( int ) ) ; if ( org.onebusaway.android.directions.realtime.ItineraryDescription . itineraryMatches ( org.onebusaway.android.directions.realtime.ItineraryDescription ) ) { long long = org.onebusaway.android.directions.realtime.ItineraryDescription . getDelay ( org.onebusaway.android.directions.realtime.ItineraryDescription ) ; Log . d ( java.lang.String , STRING + long ) ; if ( java.lang.Math . long ( long ) > OTPConstants . REALTIME_SERVICE_DELAY_THRESHOLD ) { Log . d ( java.lang.String , STRING ) ; void ( org.onebusaway.android.directions.realtime.ItineraryDescription , ( long > NUMBER ) ? R . string . trip_plan_delay : R . string . trip_plan_early , R . string . trip_plan_notification_new_plan_text , java.lang.Class<> , org.onebusaway.android.directions.realtime.TripRequestBuilder . getBundle ( ) , java.util.List<org.onebusaway.android.directions.realtime.Itinerary> ) ; void ( ) ; return; } Log . d ( java.lang.String , STRING ) ; void ( org.onebusaway.android.directions.realtime.ItineraryDescription ) ; return; } } Log . d ( java.lang.String , STRING ) ; void ( org.onebusaway.android.directions.realtime.ItineraryDescription , R . string . trip_plan_notification_new_plan_title , R . string . trip_plan_notification_new_plan_text , java.lang.Class<> , org.onebusaway.android.directions.realtime.TripRequestBuilder . getBundle ( ) , java.util.List<org.onebusaway.android.directions.realtime.Itinerary> ) ; void ( ) ; } 
@ java.lang.Override public void void ( int int , java.lang.String java.lang.String ) { Log . e ( java.lang.String , STRING + int + STRING + java.lang.String ) ; void ( ) ; } 
private void void ( ItineraryDescription org.onebusaway.android.directions.realtime.ItineraryDescription , int int , int int , java.lang.Class<? extends org.onebusaway.android.directions.realtime.Activity> < ? extends Activity > java.lang.Class<? extends org.onebusaway.android.directions.realtime.Activity> , Bundle org.onebusaway.android.directions.realtime.Bundle , java.util.List<org.onebusaway.android.directions.realtime.Itinerary> < Itinerary > java.util.List<org.onebusaway.android.directions.realtime.Itinerary> ) { java.lang.String java.lang.String = getResources ( ) . getString ( int ) ; java.lang.String java.lang.String = getResources ( ) . getString ( int ) ; Intent org.onebusaway.android.directions.realtime.Intent = new Intent ( getApplicationContext ( ) , java.lang.Class<> ) ; org.onebusaway.android.directions.realtime.Intent . putExtras ( org.onebusaway.android.directions.realtime.Bundle ) ; org.onebusaway.android.directions.realtime.Intent . putExtra ( OTPConstants . INTENT_SOURCE , OTPConstants . Source . NOTIFICATION ) ; org.onebusaway.android.directions.realtime.Intent . putExtra ( OTPConstants . ITINERARIES , ( java.util.ArrayList<org.onebusaway.android.directions.realtime.Itinerary> < Itinerary > ) java.util.List<org.onebusaway.android.directions.realtime.Itinerary> ) ; org.onebusaway.android.directions.realtime.Intent . setFlags ( Intent . FLAG_ACTIVITY_SINGLE_TOP ) ; PendingIntent org.onebusaway.android.directions.realtime.PendingIntent = PendingIntent . getActivity ( getApplicationContext ( ) , NUMBER , org.onebusaway.android.directions.realtime.Intent , PendingIntent . FLAG_CANCEL_CURRENT ) ; NotificationCompat . NotificationCompat NotificationCompat.Builder = new NotificationCompat . NotificationCompat ( getApplicationContext ( ) ) . setSmallIcon ( R . drawable . ic_stat_notification ) . setContentTitle ( java.lang.String ) . setStyle ( new NotificationCompat . NotificationCompat ( ) . bigText ( java.lang.String ) ) . setContentText ( java.lang.String ) . setPriority ( NotificationCompat . PRIORITY_MAX ) . setContentIntent ( org.onebusaway.android.directions.realtime.PendingIntent ) ; NotificationManager org.onebusaway.android.directions.realtime.NotificationManager = ( NotificationManager ) getApplicationContext ( ) . getSystemService ( Context . NOTIFICATION_SERVICE ) ; Notification org.onebusaway.android.directions.realtime.Notification = NotificationCompat.Builder . build ( ) ; notification . defaults = Notification . DEFAULT_ALL ; notification . flags |= Notification . FLAG_AUTO_CANCEL | Notification . FLAG_SHOW_LIGHTS ; java.lang.Integer java.lang.Integer = org.onebusaway.android.directions.realtime.ItineraryDescription . getId ( ) ; org.onebusaway.android.directions.realtime.NotificationManager . notify ( java.lang.Integer , org.onebusaway.android.directions.realtime.Notification ) ; } 
private void void ( ItineraryDescription org.onebusaway.android.directions.realtime.ItineraryDescription ) { if ( org.onebusaway.android.directions.realtime.ItineraryDescription . isExpired ( ) ) { Log . d ( java.lang.String , STRING ) ; void ( ) ; } } 
public void void ( ) { Log . d ( java.lang.String , STRING ) ; org.onebusaway.android.directions.realtime.AlarmManager ( ) . cancel ( org.onebusaway.android.directions.realtime.PendingIntent ( null ) ) ; } 
private org.onebusaway.android.directions.realtime.AlarmManager org.onebusaway.android.directions.realtime.AlarmManager ( ) { return ( AlarmManager ) getApplicationContext ( ) . getSystemService ( Context . ALARM_SERVICE ) ; } 
private org.onebusaway.android.directions.realtime.PendingIntent org.onebusaway.android.directions.realtime.PendingIntent ( Bundle org.onebusaway.android.directions.realtime.Bundle ) { Intent org.onebusaway.android.directions.realtime.Intent = new Intent ( OTPConstants . INTENT_CHECK_TRIP_TIME ) ; if ( org.onebusaway.android.directions.realtime.Bundle != null ) { Bundle org.onebusaway.android.directions.realtime.Bundle = org.onebusaway.android.directions.realtime.Bundle ( org.onebusaway.android.directions.realtime.Bundle ) ; org.onebusaway.android.directions.realtime.Intent . putExtras ( org.onebusaway.android.directions.realtime.Bundle ) ; } PendingIntent org.onebusaway.android.directions.realtime.PendingIntent = PendingIntent . getBroadcast ( getApplicationContext ( ) , NUMBER , org.onebusaway.android.directions.realtime.Intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; return org.onebusaway.android.directions.realtime.PendingIntent ; } 
private org.onebusaway.android.directions.realtime.Itinerary org.onebusaway.android.directions.realtime.Itinerary ( Bundle org.onebusaway.android.directions.realtime.Bundle ) { java.util.ArrayList<org.onebusaway.android.directions.realtime.Itinerary> < Itinerary > java.util.ArrayList<org.onebusaway.android.directions.realtime.Itinerary> = ( java.util.ArrayList<org.onebusaway.android.directions.realtime.Itinerary> < Itinerary > ) org.onebusaway.android.directions.realtime.Bundle . getSerializable ( OTPConstants . ITINERARIES ) ; int int = org.onebusaway.android.directions.realtime.Bundle . getInt ( OTPConstants . SELECTED_ITINERARY ) ; return java.util.ArrayList<org.onebusaway.android.directions.realtime.Itinerary> . get ( int ) ; } 
private org.onebusaway.android.directions.realtime.ItineraryDescription org.onebusaway.android.directions.realtime.ItineraryDescription ( Bundle org.onebusaway.android.directions.realtime.Bundle ) { java.lang.String java.lang.String[] [] = org.onebusaway.android.directions.realtime.Bundle . getStringArray ( java.lang.String ) ; long long = org.onebusaway.android.directions.realtime.Bundle . getLong ( java.lang.String ) ; return new ItineraryDescription ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) , new java.util.Date ( long ) ) ; } 
private java.lang.Class java.lang.Class ( Bundle org.onebusaway.android.directions.realtime.Bundle ) { java.lang.String java.lang.String = org.onebusaway.android.directions.realtime.Bundle . getString ( OTPConstants . NOTIFICATION_TARGET ) ; try { return java.lang.Class . java.lang.Class<?> ( java.lang.String ) ; } catch( java.lang.ClassNotFoundException java.lang.ClassNotFoundException ) { Log . e ( java.lang.String , STRING + java.lang.String ) ; } return null ; } 
private org.onebusaway.android.directions.realtime.Bundle org.onebusaway.android.directions.realtime.Bundle ( Bundle org.onebusaway.android.directions.realtime.Bundle ) { Itinerary org.onebusaway.android.directions.realtime.Itinerary = org.onebusaway.android.directions.realtime.Itinerary ( org.onebusaway.android.directions.realtime.Bundle ) ; ItineraryDescription org.onebusaway.android.directions.realtime.ItineraryDescription = new ItineraryDescription ( org.onebusaway.android.directions.realtime.Itinerary ) ; Bundle org.onebusaway.android.directions.realtime.Bundle = new Bundle ( ) ; new TripRequestBuilder ( org.onebusaway.android.directions.realtime.Bundle ) . copyIntoBundleSimple ( org.onebusaway.android.directions.realtime.Bundle ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = org.onebusaway.android.directions.realtime.ItineraryDescription . getTripIds ( ) ; java.lang.String [] java.lang.String[] = java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ; org.onebusaway.android.directions.realtime.Bundle . putStringArray ( java.lang.String , java.lang.String[] ) ; org.onebusaway.android.directions.realtime.Bundle . putLong ( java.lang.String , org.onebusaway.android.directions.realtime.ItineraryDescription . getEndDate ( ) . getTime ( ) ) ; java.lang.Class<? extends org.onebusaway.android.directions.realtime.Activity> < ? extends Activity > java.lang.Class<? extends org.onebusaway.android.directions.realtime.Activity> = ( java.lang.Class<? extends org.onebusaway.android.directions.realtime.Activity> < ? extends Activity > ) org.onebusaway.android.directions.realtime.Bundle . getSerializable ( OTPConstants . NOTIFICATION_TARGET ) ; org.onebusaway.android.directions.realtime.Bundle . putString ( OTPConstants . NOTIFICATION_TARGET , java.lang.Class<> . java.lang.String ( ) ) ; return org.onebusaway.android.directions.realtime.Bundle ; } 
@ java.lang.Override public void void ( Context org.onebusaway.android.directions.realtime.Context , Intent org.onebusaway.android.directions.realtime.Intent ) { Intent org.onebusaway.android.directions.realtime.Intent = new Intent ( org.onebusaway.android.directions.realtime.Context , RealtimeService .class ) ; org.onebusaway.android.directions.realtime.Intent . putExtras ( org.onebusaway.android.directions.realtime.Intent . getExtras ( ) ) ; org.onebusaway.android.directions.realtime.Intent . setAction ( org.onebusaway.android.directions.realtime.Intent . getAction ( ) ) ; startWakefulService ( org.onebusaway.android.directions.realtime.Context , org.onebusaway.android.directions.realtime.Intent ) ; } 
void void ( java.util.List<org.onebusaway.android.directions.tasks.Itinerary> < Itinerary > java.util.List<org.onebusaway.android.directions.tasks.Itinerary> , java.lang.String java.lang.String ); 
void void ( int int , java.lang.String java.lang.String ); 
public void ( java.lang.String java.lang.String , org.onebusaway.android.directions.tasks.TripRequest.Callback org.onebusaway.android.directions.tasks.TripRequest.Callback ) { java.lang.String = java.lang.String ; org.onebusaway.android.directions.tasks.TripRequest.Callback = org.onebusaway.android.directions.tasks.TripRequest.Callback ; } 
protected java.lang.Long java.lang.Long ( Request ... org.onebusaway.android.directions.tasks.Request[] ) { long long = NUMBER ; if ( java.lang.String == null ) { org.onebusaway.android.directions.tasks.TripRequest.Callback . void ( int , null ) ; return null ; } else { java.lang.String java.lang.String = java.lang.String ; boolean boolean = Application . get ( ) . getUseOldOtpApiUrlVersion ( ) ; for ( Request org.onebusaway.android.directions.tasks.Request : org.onebusaway.android.directions.tasks.Request[] ) { org.onebusaway.android.directions.tasks.Response = org.onebusaway.android.directions.tasks.Response ( org.onebusaway.android.directions.tasks.Request , java.lang.String , java.lang.String , boolean ) ; } } return long ; } 
protected void void ( java.lang.Long java.lang.Long ) { org.onebusaway.android.directions.tasks.TripRequest.Callback . void ( Message . REQUEST_TIMEOUT . getId ( ) , java.lang.String ) ; } 
protected void void ( java.lang.Long java.lang.Long ) { if ( java.lang.Long == null ) { return; } if ( org.onebusaway.android.directions.tasks.Response != null && org.onebusaway.android.directions.tasks.Response . getPlan ( ) != null && org.onebusaway.android.directions.tasks.Response . getPlan ( ) . getItinerary ( ) . get ( NUMBER ) != null ) { org.onebusaway.android.directions.tasks.TripRequest.Callback . void ( org.onebusaway.android.directions.tasks.Response . getPlan ( ) . getItinerary ( ) , java.lang.String ) ; } else { Log . e ( java.lang.String , STRING + org.onebusaway.android.directions.tasks.Response ) ; int int = - NUMBER ; if ( org.onebusaway.android.directions.tasks.Response != null && org.onebusaway.android.directions.tasks.Response . getError ( ) != null ) { int = org.onebusaway.android.directions.tasks.Response . getError ( ) . getId ( ) ; } org.onebusaway.android.directions.tasks.TripRequest.Callback . void ( int , java.lang.String ) ; } } 
protected org.onebusaway.android.directions.tasks.Response org.onebusaway.android.directions.tasks.Response ( Request org.onebusaway.android.directions.tasks.Request , java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.HashMap<java.lang.String,java.lang.String> = org.onebusaway.android.directions.tasks.Request . getParameters ( ) ; java.util.Collection java.util.Collection = java.util.HashMap<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ; java.util.Iterator java.util.Iterator = java.util.Collection . java.util.Iterator ( ) ; java.lang.String java.lang.String = STRING ; boolean boolean = true ; while ( java.util.Iterator . boolean ( ) ) { if ( boolean ) { java.lang.String += STRING + java.util.Iterator . java.lang.Object ( ) ; boolean = false ; } else { java.lang.String += STRING + java.util.Iterator . java.lang.Object ( ) ; } } if ( org.onebusaway.android.directions.tasks.Request . getBikeRental ( ) ) { java.lang.String java.lang.String ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String . java.lang.String ( TraverseMode . BICYCLE . toString ( ) , TraverseMode . BICYCLE . toString ( ) + java.lang.String ) ; } else { java.lang.String = java.lang.String . java.lang.String ( TraverseMode . BICYCLE . toString ( ) , TraverseMode . BICYCLE . toString ( ) + STRING + TraverseMode . WALK . toString ( ) ) ; } java.lang.String = java.lang.String ; } java.lang.String java.lang.String ; if ( ! boolean ) { java.lang.String = java.lang.String + java.lang.String + java.lang.String + java.lang.String ; } else { java.lang.String = java.lang.String + java.lang.String + java.lang.String ; } java.lang.String = java.lang.String ; Log . d ( java.lang.String , STRING + java.lang.String ) ; java.net.HttpURLConnection java.net.HttpURLConnection = null ; java.net.URL java.net.URL ; Response org.onebusaway.android.directions.tasks.Response = null ; try { java.net.URL = new java.net.URL ( java.lang.String ) ; void ( ) ; java.net.HttpURLConnection = ( java.net.HttpURLConnection ) java.net.URL . java.net.URLConnection ( ) ; java.net.HttpURLConnection . void ( int ) ; java.net.HttpURLConnection . void ( int ) ; org.onebusaway.android.directions.tasks.Response = JacksonConfig . getObjectReaderInstance ( ) . readValue ( java.net.HttpURLConnection . java.io.InputStream ( ) ) ; if ( boolean ) { Application . get ( ) . setUseOldOtpApiUrlVersion ( true ) ; } } catch ( java . net . java.net.SocketTimeoutException java.net.SocketTimeoutException ) { Log . e ( java.lang.String , STRING + java.net.SocketTimeoutException ) ; java.net.SocketTimeoutException . void ( ) ; cancel ( true ) ; } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { if ( ! boolean ) { Log . v ( java.lang.String , STRING ) ; if ( java.net.HttpURLConnection != null ) { java.net.HttpURLConnection . void ( ) ; } return org.onebusaway.android.directions.tasks.Response ( org.onebusaway.android.directions.tasks.Request , java.lang.String , java.lang.String , true ) ; } else { Log . e ( java.lang.String , STRING + java.io.FileNotFoundException ) ; java.io.FileNotFoundException . void ( ) ; cancel ( true ) ; } } catch ( java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , STRING + java.io.IOException ) ; java.io.IOException . void ( ) ; cancel ( true ) ; } finally { if ( java.net.HttpURLConnection != null ) { java.net.HttpURLConnection . void ( ) ; } } return org.onebusaway.android.directions.tasks.Response ; } 
private void void ( ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . FROYO ) { java.lang.System . java.lang.String ( STRING , STRING ) ; } } 
public static java.util.Date java.util.Date ( java.lang.String java.lang.String ) { try { long long = java.lang.Long . long ( java.lang.String ) ; return new java.util.Date ( long ) ; } catch ( java.lang.NumberFormatException java.lang.NumberFormatException ) { Log . e ( java.lang.String , STRING + java.lang.String ) ; return null ; } } 
public static double double ( java.lang.String java.lang.String , java.lang.String java.lang.String , Context org.onebusaway.android.directions.util.Context ) { double double = NUMBER ; java.util.Date java.util.Date = java.util.Date ( java.lang.String ) ; java.util.Date java.util.Date = java.util.Date ( java.lang.String ) ; if ( java.util.Date != null && java.util.Date != null ) { if ( PreferenceManager . getDefaultSharedPreferences ( org.onebusaway.android.directions.util.Context ) . getInt ( OTPConstants . PREFERENCE_KEY_API_VERSION , OTPConstants . API_VERSION_V1 ) == OTPConstants . API_VERSION_V1 ) { double = ( java.util.Date . long ( ) - java.util.Date . long ( ) ) ; } else { double = ( java.util.Date . long ( ) - java.util.Date . long ( ) ) / NUMBER ; } } return double ; } 
public static java.lang.String java.lang.String ( java.lang.Double java.lang.Double , Context org.onebusaway.android.directions.util.Context ) { java.lang.String java.lang.String = STRING ; if ( PreferenceUtils . getUnitsAreMetricFromPreferences ( org.onebusaway.android.directions.util.Context ) ) { if ( java.lang.Double < NUMBER ) { java.lang.String += java.lang.String . java.lang.String ( OTPConstants . FORMAT_DISTANCE_METERS , java.lang.Double ) + STRING + org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . meters_abbreviation ) ; } else { java.lang.Double = java.lang.Double / NUMBER ; java.lang.String += java.lang.String . java.lang.String ( OTPConstants . FORMAT_DISTANCE_KILOMETERS , java.lang.Double ) + STRING + org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . kilometers_abbreviation ) ; } } else { double double = java.lang.Double * NUMBER ; if ( double < NUMBER ) { java.lang.String += java.lang.String . java.lang.String ( OTPConstants . FORMAT_DISTANCE_METERS , double ) + STRING + org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . feet_abbreviation ) ; } else { double = double / NUMBER ; java.lang.String += java.lang.String . java.lang.String ( OTPConstants . FORMAT_DISTANCE_KILOMETERS , double ) + STRING + org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . miles_abbreviation ) ; } } return java.lang.String ; } 
public static java.lang.String java.lang.String ( long long , Context org.onebusaway.android.directions.util.Context ) { java.lang.String java.lang.String = STRING ; long long = long / NUMBER ; if ( long >= NUMBER ) { return null ; } long long = ( long % NUMBER ) / NUMBER ; long long = ( long % NUMBER ) % NUMBER ; if ( long > NUMBER ) { java.lang.String += java.lang.Long . java.lang.String ( long ) + org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . hours_abbreviation ) ; } java.lang.String += java.lang.Long . java.lang.String ( long ) + org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . minutes_abbreviation ) ; java.lang.String += java.lang.Long . java.lang.String ( long ) + org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . seconds_abbrevation ) ; return java.lang.String ; } 
public static java.lang.String java.lang.String ( long long , boolean boolean , Context org.onebusaway.android.directions.util.Context ) { java.lang.String java.lang.String = STRING ; long long = long / NUMBER ; long long = ( long % NUMBER ) / NUMBER ; java.lang.String java.lang.String = org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . minutes_full ) ; java.lang.String java.lang.String = org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . minutes_abbreviation ) ; java.lang.String java.lang.String = org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . minutes_abbreviation ) ; if ( boolean ) { java.lang.String = org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . minutes_full ) ; java.lang.String = org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . minute_singular ) ; } java.lang.String java.lang.String = org.onebusaway.android.directions.util.Context . getResources ( ) . getString ( R . string . hours_abbreviation ) ; if ( long > NUMBER ) { java.lang.String += java.lang.Long . java.lang.String ( long ) + java.lang.String ; java.lang.String += STRING + java.lang.Long . java.lang.String ( long ) + java.lang.String ; } else { if ( long == NUMBER ) { java.lang.String += STRING + java.lang.String ; } else if ( long == NUMBER || long == - NUMBER ) { java.lang.String += java.lang.Long . java.lang.String ( long ) + STRING + java.lang.String ; } else { java.lang.String += java.lang.Long . java.lang.String ( long ) + STRING + java.lang.String ; } } return java.lang.String ; } 
