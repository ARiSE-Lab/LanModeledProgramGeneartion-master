<METHOD_START> public synchronized com.artemzin.android.wail.storage.db.Cursor com.artemzin.android.wail.storage.db.Cursor ( ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . query ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , null , null , null , null , null , com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> public synchronized com.artemzin.android.wail.storage.db.Track com.artemzin.android.wail.storage.db.Track ( ) { Cursor com.artemzin.android.wail.storage.db.Cursor = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . rawQuery ( STRING + com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING + com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING , null ) ; Track com.artemzin.android.wail.storage.db.Track = null ; if ( com.artemzin.android.wail.storage.db.Cursor . moveToFirst ( ) ) { com.artemzin.android.wail.storage.db.Track = com.artemzin.android.wail.storage.db.Track ( com.artemzin.android.wail.storage.db.Cursor ) ; } com.artemzin.android.wail.storage.db.Cursor . close ( ) ; return com.artemzin.android.wail.storage.db.Track ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( ) { final int int = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . delete ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , null , null ) ; void ( ) ; return int ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( int int ) { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . beginTransaction ( ) ; int int = NUMBER ; try { Cursor com.artemzin.android.wail.storage.db.Cursor = com.artemzin.android.wail.storage.db.Cursor ( ) ; if ( com.artemzin.android.wail.storage.db.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.storage.db.Track = com.artemzin.android.wail.storage.db.Track ( com.artemzin.android.wail.storage.db.Cursor ) ; if ( com.artemzin.android.wail.storage.db.Track . getState ( ) == Track . STATE_SCROBBLING && java.lang.System . long ( ) - com.artemzin.android.wail.storage.db.Track . getStateTimestamp ( ) > NUMBER ) { int += int ( com.artemzin.android.wail.storage.db.Track ) ; } } while ( com.artemzin.android.wail.storage.db.Cursor . moveToNext ( ) ); } final int int = com.artemzin.android.wail.storage.db.Cursor . getCount ( ) ; if ( int > int ) { for ( int int = int ; int < int ; int ++ ) { com.artemzin.android.wail.storage.db.Cursor . moveToPosition ( int ) ; final Track com.artemzin.android.wail.storage.db.Track = com.artemzin.android.wail.storage.db.Track ( com.artemzin.android.wail.storage.db.Cursor ) ; if ( java.lang.System . long ( ) - com.artemzin.android.wail.storage.db.Track . getStateTimestamp ( ) > NUMBER && ( com.artemzin.android.wail.storage.db.Track . getState ( ) == Track . STATE_SCROBBLE_SUCCESS || com.artemzin.android.wail.storage.db.Track . getState ( ) == Track . STATE_SCROBBLE_ERROR || com.artemzin.android.wail.storage.db.Track . getState ( ) == Track . STATE_SCROBBLING ) ) { int += int ( com.artemzin.android.wail.storage.db.Track ) ; } } } AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . setTransactionSuccessful ( ) ; com.artemzin.android.wail.storage.db.Cursor . close ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.String java.lang.String = STRING + java.lang.Exception ; Loggi . e ( java.lang.String ) ; EasyTracker . getInstance ( com.artemzin.android.wail.storage.db.Context ) . send ( MapBuilder . createException ( java.lang.String , false ) . build ( ) ) ; } finally { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . endTransaction ( ) ; } if ( int > NUMBER ) { try { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . execSQL ( STRING ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } void ( ) ; return int ; }  <METHOD_END>
<METHOD_START> private void void ( ) { LocalBroadcastManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . sendBroadcast ( new Intent ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.ContentValues com.artemzin.android.wail.storage.db.ContentValues ( Track com.artemzin.android.wail.storage.db.Track ) { final ContentValues com.artemzin.android.wail.storage.db.ContentValues = new ContentValues ( ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getPlayerPackageName ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getTrack ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getArtist ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getAlbum ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getDuration ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getTimestamp ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getState ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getStateTimestamp ( ) ) ; return com.artemzin.android.wail.storage.db.ContentValues ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.Track com.artemzin.android.wail.storage.db.Track ( Cursor com.artemzin.android.wail.storage.db.Cursor ) { final Track com.artemzin.android.wail.storage.db.Track = new Track ( ) ; com.artemzin.android.wail.storage.db.Track . setInternalDBId ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setPlayerPackageName ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setTrack ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setArtist ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setAlbum ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setDuration ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setTimestamp ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setState ( com.artemzin.android.wail.storage.db.Cursor . getInt ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setStateTimestamp ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; return com.artemzin.android.wail.storage.db.Track ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + long ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track ( ) { final com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track = new com.artemzin.android.wail.storage.model.Track ( ) ; com.artemzin.android.wail.storage.model.Track . java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.model.Track . java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.model.Track . java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.model.Track . java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.model.Track . long = long ; com.artemzin.android.wail.storage.model.Track . long = long ; com.artemzin.android.wail.storage.model.Track . int = int ; return com.artemzin.android.wail.storage.model.Track ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track ) { if ( com.artemzin.android.wail.storage.model.Track == null ) return false ; if ( ! TextUtils . equals ( java.lang.String ( ) , com.artemzin.android.wail.storage.model.Track . java.lang.String ( ) ) ) { return false ; } if ( ! TextUtils . equals ( java.lang.String ( ) , com.artemzin.android.wail.storage.model.Track . java.lang.String ( ) ) ) { return false ; } if ( ! TextUtils . equals ( java.lang.String ( ) , com.artemzin.android.wail.storage.model.Track . java.lang.String ( ) ) ) { return false ; } if ( long != com.artemzin.android.wail.storage.model.Track . long ( ) ) { return false ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof com.artemzin.android.wail.storage.model.Track ) { com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track = ( com.artemzin.android.wail.storage.model.Track ) java.lang.Object ; return long == com.artemzin.android.wail.storage.model.Track . long && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.storage.model.Track . java.lang.String ) && TextUtils . equals ( this . java.lang.String , com.artemzin.android.wail.storage.model.Track . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.storage.model.Track . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.storage.model.Track . java.lang.String ) && long == com.artemzin.android.wail.storage.model.Track . long && long == com.artemzin.android.wail.storage.model.Track . long && int == com.artemzin.android.wail.storage.model.Track . int && long == com.artemzin.android.wail.storage.model.Track . long ; } return false ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> private static com.artemzin.android.wail.storage.SharedPreferences com.artemzin.android.wail.storage.SharedPreferences ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.Context . getSharedPreferences ( java.lang.String , Context . MODE_PRIVATE ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context ) { java.lang.String = null ; java.lang.String = null ; java.lang.Boolean = null ; java.lang.Integer = null ; java.lang.Integer = null ; java.lang.Long = null ; java.lang.Boolean = null ; java.lang.String = null ; java.lang.String = null ; java.lang.Boolean = null ; java.lang.Boolean = null ; java.lang.Boolean = null ; java.lang.Boolean = null ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . clear ( ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized com.artemzin.android.wail.storage.WAILSettings.Theme com.artemzin.android.wail.storage.WAILSettings.Theme ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.WAILSettings.Theme . com.artemzin.android.wail.storage.WAILSettings.Theme ( com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , com.artemzin.android.wail.storage.WAILSettings.Theme . com.artemzin.android.wail.storage.WAILSettings.Theme . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , com.artemzin.android.wail.storage.WAILSettings.Theme com.artemzin.android.wail.storage.WAILSettings.Theme ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , com.artemzin.android.wail.storage.WAILSettings.Theme . java.lang.String ( ) ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return ! TextUtils . isEmpty ( java.lang.String ( com.artemzin.android.wail.storage.Context ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.String != null ? java.lang.String : ( java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.String != null ? java.lang.String : ( java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized int int ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Integer != null ? java.lang.Integer : ( java.lang.Integer = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getInt ( java.lang.String , int ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , int int ) { java.lang.Integer = int ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putInt ( java.lang.String , int ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized int int ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Integer != null ? java.lang.Integer : ( java.lang.Integer = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getInt ( java.lang.String , int ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , int int ) { java.lang.Integer = int ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putInt ( java.lang.String , int ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized long long ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Long != null ? java.lang.Long : ( java.lang.Long = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getLong ( java.lang.String , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , long long ) { java.lang.Long = long ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putLong ( java.lang.String , long ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { final java.lang.String java.lang.String = java.lang.String ; if ( ! TextUtils . isEmpty ( java.lang.String ) ) { return java.lang.String ; } return java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) ; SharedPreferences.Editor . putString ( java.lang.String , java.lang.String ) ; SharedPreferences.Editor . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { final java.lang.String java.lang.String = java.lang.String ; if ( ! TextUtils . isEmpty ( java.lang.String ) ) { return java.lang.String ; } return java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) ; SharedPreferences.Editor . putString ( java.lang.String , java.lang.String ) ; SharedPreferences.Editor . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized WAILService . WAILService.LastCapturedTrackInfo WAILService.LastCapturedTrackInfo ( Context com.artemzin.android.wail.storage.Context ) { return WAILService . LastCapturedTrackInfo . fromJSON ( com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , WAILService . WAILService WAILService.LastCapturedTrackInfo ) { java.lang.String java.lang.String = null ; if ( WAILService.LastCapturedTrackInfo != null ) { java.lang.String = WAILService.LastCapturedTrackInfo . toJSON ( ) ; } com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized com.artemzin.android.wail.storage.LFUserResponseModel com.artemzin.android.wail.storage.LFUserResponseModel ( Context com.artemzin.android.wail.storage.Context ) { try { return LFUserResponseModel . parseFromJSON ( com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized long long ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getLong ( java.lang.String , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , long long ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putLong ( java.lang.String , long ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized com.artemzin.android.wail.storage.Track com.artemzin.android.wail.storage.Track ( Context com.artemzin.android.wail.storage.Context ) { java.lang.String java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; java.lang.String java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; if ( java.lang.String == null && java.lang.String == null ) { return null ; } Track com.artemzin.android.wail.storage.Track = new Track ( ) ; com.artemzin.android.wail.storage.Track . setArtist ( java.lang.String ) ; com.artemzin.android.wail.storage.Track . setTrack ( java.lang.String ) ; return com.artemzin.android.wail.storage.Track ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , Track com.artemzin.android.wail.storage.Track ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , com.artemzin.android.wail.storage.Track == null ? null : com.artemzin.android.wail.storage.Track . getArtist ( ) ) . apply ( ) ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , com.artemzin.android.wail.storage.Track == null ? null : com.artemzin.android.wail.storage.Track . getTrack ( ) ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { com.artemzin.android.wail.storage.WAILSettings . java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { com.artemzin.android.wail.storage.WAILSettings . java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.activity.Context , Intent com.artemzin.android.wail.ui.activity.Intent ) { WAILSettings . clearAllSettings ( com.artemzin.android.wail.ui.activity.BaseActivity .this ) ; AppDBManager . getInstance ( com.artemzin.android.wail.ui.activity.BaseActivity .this ) . clearAll ( ) ; LocaleUtil . updateLanguage ( com.artemzin.android.wail.ui.activity.BaseActivity .this , null ) ; startActivity ( new Intent ( com.artemzin.android.wail.ui.activity.BaseActivity .this , MainActivity .class ) ) ; com.artemzin.android.wail.ui.activity.BaseActivity .this . finish ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) { void ( ) ; super. onCreate ( com.artemzin.android.wail.ui.activity.Bundle ) ; if ( com.artemzin.android.wail.ui.activity.Bundle == null ) { void ( ) ; } void ( com.artemzin.android.wail.ui.activity.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPause ( ) ; unregisterReceiver ( com.artemzin.android.wail.ui.activity.BroadcastReceiver ) ; WAILApp . activityPaused ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onResume ( ) ; registerReceiver ( com.artemzin.android.wail.ui.activity.BroadcastReceiver , new IntentFilter ( java.lang.String ) ) ; WAILApp . activityResumed ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) {    }  <METHOD_END>
<METHOD_START> protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; EasyTracker . getInstance ( this ) . activityStart ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.artemzin.android.wail.ui.activity.MenuItem ) { if ( com.artemzin.android.wail.ui.activity.MenuItem . getItemId ( ) == android . R . id . home ) { if ( boolean ( ) ) { finish ( ) ; return true ; } } return super. onOptionsItemSelected ( com.artemzin.android.wail.ui.activity.MenuItem ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onStop ( ) ; EasyTracker . getInstance ( this ) . activityStop ( this ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( WAILSettings . getTheme ( getBaseContext ( ) ) == WAILSettings . Theme . DARK ) { if ( this instanceof MainActivity ) { void ( R . style . AppTheme_Dark_NoActionBar ) ; } else { void ( R . style . AppTheme_Dark ) ; } } else { if ( this instanceof MainActivity ) { void ( R . style . AppTheme_Light_NoActionBar ) ; } else { void ( R . style . AppTheme_Light ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) { finish ( ) ; startActivity ( getIntent ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnItemClick ( R . id . main_left_drawer_list ) public void void ( int int ) { void ( int ) ; if ( com.artemzin.android.wail.ui.activity.DrawerLayout != null ) { SleepIfRequiredAsyncTask . newInstance ( SystemClock . elapsedRealtime ( ) , NUMBER , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { try { com.artemzin.android.wail.ui.activity.DrawerLayout . closeDrawers ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } } ) . execute ( ) ; } void ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { try { com.artemzin.android.wail.ui.activity.DrawerLayout . closeDrawers ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( final Bundle com.artemzin.android.wail.ui.activity.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.Bundle ) ; setContentView ( R . layout . activity_main ) ; ButterKnife . inject ( this ) ; setSupportActionBar ( com.artemzin.android.wail.ui.activity.Toolbar ) ; if ( ! WAILSettings . isAuthorized ( this ) ) { startActivityForResult ( new Intent ( this , NonAuthorizedActivity .class ) , int ) ; } void ( ) ; if ( com.artemzin.android.wail.ui.activity.DrawerLayout != null ) { com.artemzin.android.wail.ui.activity.DrawerLayout . setStatusBarBackgroundColor ( getResources ( ) . getColor ( R . color . primary_dark ) ) ; com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle = new ActionBarDrawerToggle ( this , com.artemzin.android.wail.ui.activity.DrawerLayout , R . string . app_name , R . string . app_name ) { @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.activity.View ) { super. onDrawerOpened ( com.artemzin.android.wail.ui.activity.View ) ; if ( TextUtils . isEmpty ( com.artemzin.android.wail.ui.activity.TypefaceTextView . getText ( ) . toString ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.ui.activity.TypefaceTextView . getText ( ) . toString ( ) ) ) { void ( ) ; } } } ; com.artemzin.android.wail.ui.activity.DrawerLayout . setDrawerListener ( com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar ( ) . setHomeButtonEnabled ( true ) ; } else if ( com.artemzin.android.wail.ui.activity.DrawerLayout != null ) { com.artemzin.android.wail.ui.activity.DrawerLayout . setStatusBarBackgroundColor ( getResources ( ) . getColor ( R . color . primary_dark ) ) ; } ArrayAdapter < java.lang.String > com.artemzin.android.wail.ui.activity.ArrayAdapter<java.lang.String> = new ArrayAdapter < java.lang.String > ( this , R . layout . activity_main_drawer_item_layout , getResources ( ) . getStringArray ( R . array . drawer_items ) ) { @ java.lang.Override public com.artemzin.android.wail.ui.activity.View com.artemzin.android.wail.ui.activity.View ( int int , View com.artemzin.android.wail.ui.activity.View , ViewGroup com.artemzin.android.wail.ui.activity.ViewGroup ) { ViewHolder holder ; View com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.View ; if ( com.artemzin.android.wail.ui.activity.View == null ) { LayoutInflater com.artemzin.android.wail.ui.activity.LayoutInflater = getLayoutInflater ( ) ; com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.LayoutInflater . inflate ( R . layout . activity_main_drawer_item_layout , com.artemzin.android.wail.ui.activity.ViewGroup , false ) ; holder = new ViewHolder ( ) ; holder . com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.View ; holder . com.artemzin.android.wail.ui.activity.TypefaceTextView = ( TypefaceTextView ) com.artemzin.android.wail.ui.activity.View . findViewById ( R . id . activity_main_drawer_item_text ) ; holder . com.artemzin.android.wail.ui.activity.ImageView = ( ImageView ) com.artemzin.android.wail.ui.activity.View . findViewById ( R . id . activity_main_drawer_item_image ) ; com.artemzin.android.wail.ui.activity.View . setTag ( holder ) ; } else { holder = ( ViewHolder ) com.artemzin.android.wail.ui.activity.View . getTag ( ) ; } holder . com.artemzin.android.wail.ui.activity.TypefaceTextView . setText ( getItem ( int ) ) ; switch ( int ) { case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_home_grey600_24dp ) ; break; case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_list_grey600_24dp ) ; break; case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_settings_grey600_24dp ) ; break; } if ( int == NUMBER && int == - NUMBER ) { holder . com.artemzin.android.wail.ui.activity.View . setBackgroundColor ( getResources ( ) . getColor ( R . color . drawer_item_selected_background ) ) ; int = NUMBER ; } return com.artemzin.android.wail.ui.activity.View ; } class ViewHolder { com.artemzin.android.wail.ui.activity.View com.artemzin.android.wail.ui.activity.View ; com.artemzin.android.wail.ui.activity.TypefaceTextView com.artemzin.android.wail.ui.activity.TypefaceTextView ; com.artemzin.android.wail.ui.activity.ImageView com.artemzin.android.wail.ui.activity.ImageView ; } } ; com.artemzin.android.wail.ui.activity.ListView . setAdapter ( com.artemzin.android.wail.ui.activity.ArrayAdapter<java.lang.String> ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.activity.View ) { super. onDrawerOpened ( com.artemzin.android.wail.ui.activity.View ) ; if ( TextUtils . isEmpty ( com.artemzin.android.wail.ui.activity.TypefaceTextView . getText ( ) . toString ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.ui.activity.TypefaceTextView . getText ( ) . toString ( ) ) ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.activity.View com.artemzin.android.wail.ui.activity.View ( int int , View com.artemzin.android.wail.ui.activity.View , ViewGroup com.artemzin.android.wail.ui.activity.ViewGroup ) { ViewHolder holder ; View com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.View ; if ( com.artemzin.android.wail.ui.activity.View == null ) { LayoutInflater com.artemzin.android.wail.ui.activity.LayoutInflater = getLayoutInflater ( ) ; com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.LayoutInflater . inflate ( R . layout . activity_main_drawer_item_layout , com.artemzin.android.wail.ui.activity.ViewGroup , false ) ; holder = new ViewHolder ( ) ; holder . com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.View ; holder . com.artemzin.android.wail.ui.activity.TypefaceTextView = ( TypefaceTextView ) com.artemzin.android.wail.ui.activity.View . findViewById ( R . id . activity_main_drawer_item_text ) ; holder . com.artemzin.android.wail.ui.activity.ImageView = ( ImageView ) com.artemzin.android.wail.ui.activity.View . findViewById ( R . id . activity_main_drawer_item_image ) ; com.artemzin.android.wail.ui.activity.View . setTag ( holder ) ; } else { holder = ( ViewHolder ) com.artemzin.android.wail.ui.activity.View . getTag ( ) ; } holder . com.artemzin.android.wail.ui.activity.TypefaceTextView . setText ( getItem ( int ) ) ; switch ( int ) { case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_home_grey600_24dp ) ; break; case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_list_grey600_24dp ) ; break; case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_settings_grey600_24dp ) ; break; } if ( int == NUMBER && int == - NUMBER ) { holder . com.artemzin.android.wail.ui.activity.View . setBackgroundColor ( getResources ( ) . getColor ( R . color . drawer_item_selected_background ) ) ; int = NUMBER ; } return com.artemzin.android.wail.ui.activity.View ; }  <METHOD_END>
<METHOD_START> private void void ( ) { TypedValue com.artemzin.android.wail.ui.activity.TypedValue = new TypedValue ( ) ; getTheme ( ) . resolveAttribute ( R . attr . actionBarSize , com.artemzin.android.wail.ui.activity.TypedValue , true ) ; DisplayMetrics com.artemzin.android.wail.ui.activity.DisplayMetrics = getResources ( ) . getDisplayMetrics ( ) ; float float = com.artemzin.android.wail.ui.activity.TypedValue . getDimension ( com.artemzin.android.wail.ui.activity.DisplayMetrics ) ; ViewGroup . ViewGroup ViewGroup.LayoutParams = com.artemzin.android.wail.ui.activity.FrameLayout . getLayoutParams ( ) ; if ( getResources ( ) . getBoolean ( R . bool . isTablet ) ) { params . width = ( int ) java.lang.Math . int ( displayMetrics . widthPixels - float , getResources ( ) . getDimension ( R . dimen . main_drawer_standard_increment ) * NUMBER ) ; } else { if ( getResources ( ) . getConfiguration ( ) . orientation == Configuration . ORIENTATION_PORTRAIT ) { params . width = ( int ) ( displayMetrics . widthPixels - float ) ; } else { params . width = ( int ) ( displayMetrics . heightPixels - float ) ; } } com.artemzin.android.wail.ui.activity.FrameLayout . setLayoutParams ( ViewGroup.LayoutParams ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { com.artemzin.android.wail.ui.activity.TypefaceTextView . setText ( WAILSettings . getLastfmUserName ( this ) ) ; com.artemzin.android.wail.ui.activity.TypefaceTextView . setText ( getString ( R . string . drawer_registered_at ) + WAILSettings . getLastfmUserRegistered ( this ) . split ( STRING ) [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) { super. onPostCreate ( com.artemzin.android.wail.ui.activity.Bundle ) ; if ( com.artemzin.android.wail.ui.activity.DrawerLayout != null && com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle != null ) { com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle . syncState ( ) ; } com.artemzin.android.wail.ui.activity.Fragment[] [ NUMBER ] = new MainFragment ( ) ; com.artemzin.android.wail.ui.activity.Fragment[] [ NUMBER ] = new TracksListFragment ( ) ; com.artemzin.android.wail.ui.activity.Fragment[] [ NUMBER ] = new SettingsFragment ( ) ; void ( NUMBER ) ; if ( WAILSettings . isFirstLaunch ( this ) ) { WAILSettings . setIsFirstLaunch ( this , false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int , Intent com.artemzin.android.wail.ui.activity.Intent ) { super. onActivityResult ( int , int , com.artemzin.android.wail.ui.activity.Intent ) ; if ( int == int ) { if ( int == RESULT_CANCELED ) { finish ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.artemzin.android.wail.ui.activity.MenuItem ) { if ( com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle != null && com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle . onOptionsItemSelected ( com.artemzin.android.wail.ui.activity.MenuItem ) ) { return true ; } return super. onOptionsItemSelected ( com.artemzin.android.wail.ui.activity.MenuItem ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) { super. onSaveInstanceState ( com.artemzin.android.wail.ui.activity.Bundle ) ; }  <METHOD_END>
<METHOD_START> private void void ( final int int ) { final FragmentTransaction com.artemzin.android.wail.ui.activity.FragmentTransaction = getFragmentManager ( ) . beginTransaction ( ) ; com.artemzin.android.wail.ui.activity.FragmentTransaction . setCustomAnimations ( R . anim . fragment_transaction_alpha_up , R . anim . fragment_transaction_alpha_down ) ; com.artemzin.android.wail.ui.activity.FragmentTransaction . replace ( R . id . main_content , com.artemzin.android.wail.ui.activity.Fragment[] [ int ] ) ; com.artemzin.android.wail.ui.activity.FragmentTransaction . commit ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { if ( int != - NUMBER ) { com.artemzin.android.wail.ui.activity.ListView . getChildAt ( int ) . setBackgroundColor ( getResources ( ) . getColor ( R . color . drawer_item_background ) ) ; } com.artemzin.android.wail.ui.activity.ListView . getChildAt ( int ) . setBackgroundColor ( getResources ( ) . getColor ( R . color . drawer_item_selected_background ) ) ; int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.Bundle ) ; setContentView ( R . layout . activity_non_authorized ) ; if ( com.artemzin.android.wail.ui.activity.Bundle == null ) { getFragmentManager ( ) . beginTransaction ( ) . add ( R . id . non_authorized_frame , new NonAuthorizedMainFragment ( ) ) . commit ( ) ; } setResult ( RESULT_CANCELED ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. setupUI ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; overridePendingTransition ( R . anim . activity_pull_from_right_to_left , R . anim . activity_pull_from_current_to_left ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPause ( ) ; overridePendingTransition ( R . anim . activity_pull_from_left_out_to_screen , R . anim . activity_pull_from_center_to_out_right ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; setContentView ( R . layout . activity_settings_ignored_players ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; setContentView ( R . layout . activity_settings_select_language ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; setContentView ( R . layout . activity_settings_sound_notifications ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; setContentView ( R . layout . activity_settings_status_bar_notifications ) ; }  <METHOD_END>
<METHOD_START> @ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.activity.Context , AppWidgetManager com.artemzin.android.wail.ui.activity.AppWidgetManager , int [] int[] ) { super. onUpdate ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.AppWidgetManager , int[] ) ; for ( int int : int[] ) { Bundle com.artemzin.android.wail.ui.activity.Bundle = com.artemzin.android.wail.ui.activity.AppWidgetManager . getAppWidgetOptions ( int ) ; void ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.AppWidgetManager , int , com.artemzin.android.wail.ui.activity.Bundle ) ; } }  <METHOD_END>
<METHOD_START> @ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.activity.Context , AppWidgetManager com.artemzin.android.wail.ui.activity.AppWidgetManager , int int , Bundle com.artemzin.android.wail.ui.activity.Bundle ) { RemoteViews com.artemzin.android.wail.ui.activity.RemoteViews = new RemoteViews ( com.artemzin.android.wail.ui.activity.Context . getPackageName ( ) , R . layout . waillove_widget ) ; int int = com.artemzin.android.wail.ui.activity.Bundle . getInt ( AppWidgetManager . OPTION_APPWIDGET_MIN_WIDTH ) ; if ( int > int ) { com.artemzin.android.wail.ui.activity.RemoteViews . setViewVisibility ( R . id . widget_infobox_layout , View . VISIBLE ) ; } else { com.artemzin.android.wail.ui.activity.RemoteViews . setViewVisibility ( R . id . widget_infobox_layout , View . GONE ) ; } Intent com.artemzin.android.wail.ui.activity.Intent = new Intent ( com.artemzin.android.wail.ui.activity.Context , java.lang.Class<? extends com.artemzin.android.wail.ui.activity.WAILLoveWidget> ( ) ) ; com.artemzin.android.wail.ui.activity.Intent . setAction ( java.lang.String ) ; PendingIntent com.artemzin.android.wail.ui.activity.PendingIntent = PendingIntent . getBroadcast ( com.artemzin.android.wail.ui.activity.Context , NUMBER , com.artemzin.android.wail.ui.activity.Intent , NUMBER ) ; com.artemzin.android.wail.ui.activity.RemoteViews . setOnClickPendingIntent ( R . id . widget_love_current_track_button , com.artemzin.android.wail.ui.activity.PendingIntent ) ; Intent com.artemzin.android.wail.ui.activity.Intent = new Intent ( com.artemzin.android.wail.ui.activity.Context , MainActivity .class ) ; PendingIntent com.artemzin.android.wail.ui.activity.PendingIntent = PendingIntent . getActivity ( com.artemzin.android.wail.ui.activity.Context , NUMBER , com.artemzin.android.wail.ui.activity.Intent , NUMBER ) ; com.artemzin.android.wail.ui.activity.RemoteViews . setOnClickPendingIntent ( R . id . widget_infobox_layout , com.artemzin.android.wail.ui.activity.PendingIntent ) ; com.artemzin.android.wail.ui.activity.AppWidgetManager . updateAppWidget ( int , com.artemzin.android.wail.ui.activity.RemoteViews ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ NonNull final Context com.artemzin.android.wail.ui.activity.Context , @ NonNull final Intent com.artemzin.android.wail.ui.activity.Intent ) { super. onReceive ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.Intent ) ; if ( java.lang.String . boolean ( com.artemzin.android.wail.ui.activity.Intent . getAction ( ) ) ) { final Track com.artemzin.android.wail.ui.activity.Track = WAILSettings . getNowScrobblingTrack ( com.artemzin.android.wail.ui.activity.Context ) ; if ( com.artemzin.android.wail.ui.activity.Track == null ) { Toast . makeText ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.Context . getString ( R . string . widget_nothing_to_love ) , Toast . LENGTH_SHORT ) . show ( ) ; return; } AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { LovedTracksDBHelper . getInstance ( com.artemzin.android.wail.ui.activity.Context ) . add ( com.artemzin.android.wail.ui.activity.Track ) ; Intent com.artemzin.android.wail.ui.activity.Intent = new Intent ( com.artemzin.android.wail.ui.activity.Context , WAILService .class ) ; com.artemzin.android.wail.ui.activity.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; com.artemzin.android.wail.ui.activity.Context . startService ( com.artemzin.android.wail.ui.activity.Intent ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { Toast . makeText ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.Context . getString ( R . string . main_track_loved ) , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { LovedTracksDBHelper . getInstance ( com.artemzin.android.wail.ui.activity.Context ) . add ( com.artemzin.android.wail.ui.activity.Track ) ; Intent com.artemzin.android.wail.ui.activity.Intent = new Intent ( com.artemzin.android.wail.ui.activity.Context , WAILService .class ) ; com.artemzin.android.wail.ui.activity.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; com.artemzin.android.wail.ui.activity.Context . startService ( com.artemzin.android.wail.ui.activity.Intent ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { Toast . makeText ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.Context . getString ( R . string . main_track_loved ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.fragment.Bundle ) ; this . com.artemzin.android.wail.ui.fragment.Bundle = com.artemzin.android.wail.ui.fragment.Bundle ; if ( boolean ( ) ) { setRetainInstance ( true ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.View , Bundle com.artemzin.android.wail.ui.fragment.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.View , com.artemzin.android.wail.ui.fragment.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; if ( ! boolean ) { boolean = true ; void ( com.artemzin.android.wail.ui.fragment.Bundle ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( Bundle com.artemzin.android.wail.ui.fragment.Bundle ) {}  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback ) { this . com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback = com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Activity com.artemzin.android.wail.ui.fragment.dialogs.Activity ) { super. onAttach ( com.artemzin.android.wail.ui.fragment.dialogs.Activity ) ; this . com.artemzin.android.wail.ui.fragment.dialogs.Activity = com.artemzin.android.wail.ui.fragment.dialogs.Activity ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.dialogs.DialogInterface ) { super. onDismiss ( com.artemzin.android.wail.ui.fragment.dialogs.DialogInterface ) ; if ( com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback != null ) { com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback . void ( ) ; } }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker ( java.lang.String java.lang.String , int int , int int , int int ) { final com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker = new com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker . java.lang.String = java.lang.String ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker . int = int ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker . int = int ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker . int = int ; return com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.dialogs.Dialog com.artemzin.android.wail.ui.fragment.dialogs.Dialog ( Bundle com.artemzin.android.wail.ui.fragment.dialogs.Bundle ) { MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog = new MaterialDialog . MaterialDialog ( getActivity ( ) ) . customView ( R . layout . dialog_with_number_picker_fragment , false ) . theme ( Theme . DARK ) . title ( java.lang.String ) . positiveText ( R . string . dialog_save ) . negativeText ( R . string . dialog_cancel ) . callback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { WAILSettings . setMinTrackDurationInSeconds ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . getValue ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( SettingsFragment . GA_EVENT_SETTINGS_FRAGMENT , STRING + WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) + STRING , null , NUMBER ) . build ( ) ) ; } @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . dismiss ( ) ; } } ) . build ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker = ( NumberPicker ) com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . getCustomView ( ) . findViewById ( R . id . dialog_with_number_picker_picker ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . setMinValue ( int ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . setMaxValue ( int ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . setValue ( int ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . setDescendantFocusability ( NumberPicker . FOCUS_BLOCK_DESCENDANTS ) ; return com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { WAILSettings . setMinTrackDurationInSeconds ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . getValue ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( SettingsFragment . GA_EVENT_SETTINGS_FRAGMENT , STRING + WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) + STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar ( java.lang.String java.lang.String , int int ) { final com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar = new com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar . int = int ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar . java.lang.String = java.lang.String ; return com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.dialogs.Dialog com.artemzin.android.wail.ui.fragment.dialogs.Dialog ( Bundle com.artemzin.android.wail.ui.fragment.dialogs.Bundle ) { MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog = new MaterialDialog . MaterialDialog ( getActivity ( ) ) . customView ( R . layout . dialog_with_seek_bar_fragment , false ) . theme ( Theme . DARK ) . title ( java.lang.String ) . positiveText ( R . string . dialog_save ) . negativeText ( R . string . dialog_cancel ) . callback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { WAILSettings . setMinTrackDurationInPercents ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( SettingsFragment . GA_EVENT_SETTINGS_FRAGMENT , STRING + WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) + STRING , null , NUMBER ) . build ( ) ) ; } @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . dismiss ( ) ; } } ) . build ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.SeekBar = ( SeekBar ) com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . getCustomView ( ) . findViewById ( R . id . dialog_with_seek_bar_seek_bar ) ; com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . setProgress ( int ) ; final TextView com.artemzin.android.wail.ui.fragment.dialogs.TextView = ( TextView ) com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . getCustomView ( ) . findViewById ( R . id . dialog_with_seek_bar_bottom_text ) ; com.artemzin.android.wail.ui.fragment.dialogs.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_percent_dialog_bottom_text , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ) ; com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . setOnSeekBarChangeListener ( new SeekBar . SeekBar ( ) { @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar , int int , boolean boolean ) { if ( int < NUMBER ) { com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . setProgress ( NUMBER ) ; } com.artemzin.android.wail.ui.fragment.dialogs.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_percent_dialog_bottom_text , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ) ; } @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar ) {            } @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar ) {            } } ) ; return com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { WAILSettings . setMinTrackDurationInPercents ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( SettingsFragment . GA_EVENT_SETTINGS_FRAGMENT , STRING + WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) + STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar , int int , boolean boolean ) { if ( int < NUMBER ) { com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . setProgress ( NUMBER ) ; } com.artemzin.android.wail.ui.fragment.dialogs.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_percent_dialog_bottom_text , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar ) {            }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar ) {            }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog ( Track com.artemzin.android.wail.ui.fragment.dialogs.Track ) { com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog = new com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog . com.artemzin.android.wail.ui.fragment.dialogs.Track = com.artemzin.android.wail.ui.fragment.dialogs.Track ; return com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.dialogs.Dialog com.artemzin.android.wail.ui.fragment.dialogs.Dialog ( Bundle com.artemzin.android.wail.ui.fragment.dialogs.Bundle ) { return new MaterialDialog . MaterialDialog ( activity ) . items ( R . array . track_actions ) . itemsCallback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog , View com.artemzin.android.wail.ui.fragment.dialogs.View , int int , java.lang.CharSequence java.lang.CharSequence ) { switch ( int ) { case NUMBER : void ( ) ; break; } } } ) . theme ( Theme . DARK ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog , View com.artemzin.android.wail.ui.fragment.dialogs.View , int int , java.lang.CharSequence java.lang.CharSequence ) { switch ( int ) { case NUMBER : void ( ) ; break; } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( com.artemzin.android.wail.ui.fragment.dialogs.Track != null ) { LovedTracksDBHelper . getInstance ( activity ) . add ( com.artemzin.android.wail.ui.fragment.dialogs.Track ) ; Intent com.artemzin.android.wail.ui.fragment.dialogs.Intent = new Intent ( activity , WAILService .class ) ; com.artemzin.android.wail.ui.fragment.dialogs.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; activity . startService ( com.artemzin.android.wail.ui.fragment.dialogs.Intent ) ; Toast . makeText ( activity , getString ( R . string . main_track_loved ) , Toast . LENGTH_SHORT ) . show ( ) ; dismiss ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.fragment.main.Context , Intent com.artemzin.android.wail.ui.fragment.main.Intent ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . main_tracks_today_view ) public void void ( ) { Toast . makeText ( getActivity ( ) , getString ( R . string . main_pull_down_to_refresh_toast ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . main_feedback_please ) public void void ( ) { final Activity com.artemzin.android.wail.ui.fragment.main.Activity = getActivity ( ) ; WAILSettings . setShowFeedbackRequest ( com.artemzin.android.wail.ui.fragment.main.Activity , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; Toast . makeText ( com.artemzin.android.wail.ui.fragment.main.Activity , getString ( R . string . main_feedback_please_happy_toast ) , Toast . LENGTH_LONG ) . show ( ) ; final java.lang.String java.lang.String = com.artemzin.android.wail.ui.fragment.main.Activity . getPackageName ( ) ; try { startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING + java.lang.String ) ) ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.main.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING , NUMBER ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING + java.lang.String ) ) ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.main.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING , NUMBER ) . build ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . main_love_current_track_button ) public void void ( ) { Track com.artemzin.android.wail.ui.fragment.main.Track = WAILSettings . getNowScrobblingTrack ( getActivity ( ) ) ; if ( com.artemzin.android.wail.ui.fragment.main.Track != null ) { Toast . makeText ( getActivity ( ) , getString ( R . string . main_track_loved ) , Toast . LENGTH_SHORT ) . show ( ) ; com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . hide ( ) ; Intent com.artemzin.android.wail.ui.fragment.main.Intent = new Intent ( getActivity ( ) , WAILService .class ) ; LovedTracksDBHelper . getInstance ( getActivity ( ) ) . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; com.artemzin.android.wail.ui.fragment.main.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; getActivity ( ) . startService ( com.artemzin.android.wail.ui.fragment.main.Intent ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . main_ignore_player_button ) public void void ( ) { java.lang.String java.lang.String = WAILSettings . getNowScrobblingPlayerLabel ( getActivity ( ) ) ; final java.lang.String java.lang.String = WAILSettings . getNowScrobblingPlayerPackageName ( getActivity ( ) ) ; final java.lang.String java.lang.String = java.lang.String != null ? java.lang.String : java.lang.String ; new MaterialDialog . MaterialDialog ( getActivity ( ) ) . theme ( Theme . DARK ) . title ( java.lang.String . java.lang.String ( getString ( R . string . main_confirm_ignoring_player ) , java.lang.String ) ) . positiveText ( STRING ) . negativeText ( R . string . dialog_cancel ) . callback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.IgnoredPlayersDBHelper . add ( java.lang.String ) ; WAILSettings . setNowScrobblingTrack ( getActivity ( ) , null ) ; WAILSettings . setNowScrobblingPlayerPackageName ( getActivity ( ) , null ) ; WAILSettings . setNowScrobblingPlayerLabel ( getActivity ( ) , null ) ; WAILSettings . setLastCapturedTrackInfo ( getActivity ( ) , null ) ; void ( ) ; } @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.MaterialDialog . dismiss ( ) ; } } ) . build ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.IgnoredPlayersDBHelper . add ( java.lang.String ) ; WAILSettings . setNowScrobblingTrack ( getActivity ( ) , null ) ; WAILSettings . setNowScrobblingPlayerPackageName ( getActivity ( ) , null ) ; WAILSettings . setNowScrobblingPlayerLabel ( getActivity ( ) , null ) ; WAILSettings . setLastCapturedTrackInfo ( getActivity ( ) , null ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.MaterialDialog . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.fragment.main.Bundle ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onActivityCreated ( com.artemzin.android.wail.ui.fragment.main.Bundle ) ; ActionBar com.artemzin.android.wail.ui.fragment.main.ActionBar = ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.ActionBar != null ) { com.artemzin.android.wail.ui.fragment.main.ActionBar . setTitle ( getString ( R . string . main_ab_title ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.View com.artemzin.android.wail.ui.fragment.main.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.main.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.main.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { return com.artemzin.android.wail.ui.fragment.main.LayoutInflater . inflate ( R . layout . fragment_main , com.artemzin.android.wail.ui.fragment.main.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.main.View , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.Bundle ) ; com.artemzin.android.wail.ui.fragment.main.IgnoredPlayersDBHelper = IgnoredPlayersDBHelper . getInstance ( getActivity ( ) ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.main.View ) ; final Activity com.artemzin.android.wail.ui.fragment.main.Activity = getActivity ( ) ; com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setColorSchemeResources ( R . color . primary ) ; com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setOnRefreshListener ( new com.artemzin.android.wail.ui.fragment.main.MainFragment.PullToRefreshListener ( ) ) ; if ( WAILSettings . isShowFeedbackRequest ( com.artemzin.android.wail.ui.fragment.main.Activity ) ) { ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , true ) ; } com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . attachToScrollView ( com.artemzin.android.wail.ui.fragment.main.ObservableScrollView ) ; com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . show ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; try { if ( ! WAILSettings . isAuthorized ( getActivity ( ) ) ) return; } catch ( java.lang.Exception java.lang.Exception ) {        } void ( ) ; LocalBroadcastManager . getInstance ( getActivity ( ) ) . registerReceiver ( com.artemzin.android.wail.ui.fragment.main.BroadcastReceiver , new IntentFilter ( TracksDBHelper . INTENT_TRACKS_CHANGED ) ) ; AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Object , java.lang.Object , java.lang.Object > ( ) { @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; void ( ) ; } @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object ... java.lang.Object[] ) { ThreadUtil . sleepIfRequired ( SystemClock . elapsedRealtime ( ) , NUMBER ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { super. onPostExecute ( java.lang.Object ) ; try { final Context com.artemzin.android.wail.ui.fragment.main.Context = getActivity ( ) ; if ( isRemoving ( ) || isDetached ( ) || com.artemzin.android.wail.ui.fragment.main.Context . isRestricted ( ) ) return; final long long = WAILSettings . getLastfmUserInfoUpdateTimestamp ( com.artemzin.android.wail.ui.fragment.main.Context ) ; if ( ! com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . isRefreshing ( ) && java.lang.System . long ( ) - long > NUMBER ) { void ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object ... java.lang.Object[] ) { ThreadUtil . sleepIfRequired ( SystemClock . elapsedRealtime ( ) , NUMBER ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { super. onPostExecute ( java.lang.Object ) ; try { final Context com.artemzin.android.wail.ui.fragment.main.Context = getActivity ( ) ; if ( isRemoving ( ) || isDetached ( ) || com.artemzin.android.wail.ui.fragment.main.Context . isRestricted ( ) ) return; final long long = WAILSettings . getLastfmUserInfoUpdateTimestamp ( com.artemzin.android.wail.ui.fragment.main.Context ) ; if ( ! com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . isRefreshing ( ) && java.lang.System . long ( ) - long > NUMBER ) { void ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; LocalBroadcastManager . getInstance ( getActivity ( ) ) . unregisterReceiver ( com.artemzin.android.wail.ui.fragment.main.BroadcastReceiver ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStop ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Object , java.lang.Object , LFUserResponseModel > ( ) { com.artemzin.android.wail.ui.fragment.main.NetworkException com.artemzin.android.wail.ui.fragment.main.NetworkException ; com.artemzin.android.wail.ui.fragment.main.LFApiException com.artemzin.android.wail.ui.fragment.main.LFApiException ; @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setRefreshing ( true ) ; } catch ( java.lang.Exception java.lang.Exception ) {                } } @ java.lang.Override protected com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ( java.lang.Object ... java.lang.Object[] ) { final long long = SystemClock . elapsedRealtime ( ) ; LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = null ; try { final java.lang.String java.lang.String = LFUserApi . getInfo ( WAILSettings . getLastfmSessionKey ( getActivity ( ) ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , WAILSettings . getLastfmUserName ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = LFUserResponseModel . parseFromJSON ( java.lang.String ) ; WAILSettings . setLastfmUserInfo ( getActivity ( ) , java.lang.String ) ; WAILSettings . setLastfmUserName ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getName ( ) ) ; WAILSettings . setLastfmUserRegistered ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getRegistered ( ) . getText ( ) ) ; WAILSettings . setLastfmUserInfoUpdateTimestamp ( getActivity ( ) , java.lang.System . long ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING + java.lang.Exception . java.lang.String ( ) , NUMBER ) . build ( ) ) ; if ( java.lang.Exception instanceof NetworkException ) { com.artemzin.android.wail.ui.fragment.main.NetworkException = ( NetworkException ) java.lang.Exception ; } else if ( java.lang.Exception instanceof LFApiException ) { com.artemzin.android.wail.ui.fragment.main.LFApiException = ( LFApiException ) java.lang.Exception ; } } ThreadUtil . sleepIfRequired ( long , NUMBER ) ; return com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ; } @ java.lang.Override protected void void ( LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ) { super. onPostExecute ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ) ; try { com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setRefreshing ( false ) ; void ( ) ; java.lang.String java.lang.String = null ; if ( com.artemzin.android.wail.ui.fragment.main.NetworkException != null ) { java.lang.String = getString ( R . string . main_refresh_info_from_lastfm_network_error ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.LFApiException != null ) { java.lang.String = getString ( R . string . main_refresh_info_from_lastfm_api_error , com.artemzin.android.wail.ui.fragment.main.LFApiException . getMessage ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING + com.artemzin.android.wail.ui.fragment.main.LFApiException . getMessage ( ) , NUMBER ) . build ( ) ) ; } if ( java.lang.String != null ) { Toast . makeText ( getActivity ( ) , java.lang.String , Toast . LENGTH_LONG ) . show ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { try { final Context com.artemzin.android.wail.ui.fragment.main.Context = getActivity ( ) ; if ( isDetached ( ) || isRemoving ( ) || com.artemzin.android.wail.ui.fragment.main.Context == null ) return; Toast . makeText ( com.artemzin.android.wail.ui.fragment.main.Context , R . string . main_refresh_info_from_lastfm_unknown_error , Toast . LENGTH_LONG ) . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING , NUMBER ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { } } void ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setRefreshing ( true ) ; } catch ( java.lang.Exception java.lang.Exception ) {                } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ( java.lang.Object ... java.lang.Object[] ) { final long long = SystemClock . elapsedRealtime ( ) ; LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = null ; try { final java.lang.String java.lang.String = LFUserApi . getInfo ( WAILSettings . getLastfmSessionKey ( getActivity ( ) ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , WAILSettings . getLastfmUserName ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = LFUserResponseModel . parseFromJSON ( java.lang.String ) ; WAILSettings . setLastfmUserInfo ( getActivity ( ) , java.lang.String ) ; WAILSettings . setLastfmUserName ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getName ( ) ) ; WAILSettings . setLastfmUserRegistered ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getRegistered ( ) . getText ( ) ) ; WAILSettings . setLastfmUserInfoUpdateTimestamp ( getActivity ( ) , java.lang.System . long ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING + java.lang.Exception . java.lang.String ( ) , NUMBER ) . build ( ) ) ; if ( java.lang.Exception instanceof NetworkException ) { com.artemzin.android.wail.ui.fragment.main.NetworkException = ( NetworkException ) java.lang.Exception ; } else if ( java.lang.Exception instanceof LFApiException ) { com.artemzin.android.wail.ui.fragment.main.LFApiException = ( LFApiException ) java.lang.Exception ; } } ThreadUtil . sleepIfRequired ( long , NUMBER ) ; return com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ) { super. onPostExecute ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ) ; try { com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setRefreshing ( false ) ; void ( ) ; java.lang.String java.lang.String = null ; if ( com.artemzin.android.wail.ui.fragment.main.NetworkException != null ) { java.lang.String = getString ( R . string . main_refresh_info_from_lastfm_network_error ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.LFApiException != null ) { java.lang.String = getString ( R . string . main_refresh_info_from_lastfm_api_error , com.artemzin.android.wail.ui.fragment.main.LFApiException . getMessage ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING + com.artemzin.android.wail.ui.fragment.main.LFApiException . getMessage ( ) , NUMBER ) . build ( ) ) ; } if ( java.lang.String != null ) { Toast . makeText ( getActivity ( ) , java.lang.String , Toast . LENGTH_LONG ) . show ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { try { final Context com.artemzin.android.wail.ui.fragment.main.Context = getActivity ( ) ; if ( isDetached ( ) || isRemoving ( ) || com.artemzin.android.wail.ui.fragment.main.Context == null ) return; Toast . makeText ( com.artemzin.android.wail.ui.fragment.main.Context , R . string . main_refresh_info_from_lastfm_unknown_error , Toast . LENGTH_LONG ) . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING , NUMBER ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { } } void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.String[] = getResources ( ) . getStringArray ( R . array . word_form_track ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { void ( ) ; void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Integer > ( ) { @ java.lang.Override protected java.lang.Integer java.lang.Integer ( java.lang.Void ... java.lang.Void[] ) { try { final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; int int = NUMBER ; Cursor com.artemzin.android.wail.ui.fragment.main.Cursor = TracksDBHelper . getInstance ( getActivity ( ) . getApplicationContext ( ) ) . getAllDesc ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.ui.fragment.main.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( com.artemzin.android.wail.ui.fragment.main.Track . getTimestamp ( ) ) ; if ( java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) && java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) && java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) ) { int ++ ; } } while ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToNext ( ) ); } com.artemzin.android.wail.ui.fragment.main.Cursor . close ( ) ; return int ; } catch ( java.lang.Exception java.lang.Exception ) { return - NUMBER ; } } @ java.lang.Override protected void void ( java.lang.Integer java.lang.Integer ) { if ( ! isDetached ( ) ) { try { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String . java.lang.String ( java.lang.Integer ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( WordFormUtil . getWordForm ( java.lang.Integer , java.lang.String[] ) + STRING + getString ( R . string . main_today ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Integer java.lang.Integer ( java.lang.Void ... java.lang.Void[] ) { try { final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; int int = NUMBER ; Cursor com.artemzin.android.wail.ui.fragment.main.Cursor = TracksDBHelper . getInstance ( getActivity ( ) . getApplicationContext ( ) ) . getAllDesc ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.ui.fragment.main.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( com.artemzin.android.wail.ui.fragment.main.Track . getTimestamp ( ) ) ; if ( java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) && java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) && java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) ) { int ++ ; } } while ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToNext ( ) ); } com.artemzin.android.wail.ui.fragment.main.Cursor . close ( ) ; return int ; } catch ( java.lang.Exception java.lang.Exception ) { return - NUMBER ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Integer java.lang.Integer ) { if ( ! isDetached ( ) ) { try { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String . java.lang.String ( java.lang.Integer ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( WordFormUtil . getWordForm ( java.lang.Integer , java.lang.String[] ) + STRING + getString ( R . string . main_today ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { final LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = WAILSettings . getLastfmUserInfo ( getActivity ( ) ) ; if ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel == null || com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getPlayCount ( ) == - NUMBER ) { com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . GONE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . GONE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . VISIBLE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . main_tracks_on_last_fm_unknown ) ; } else { com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . VISIBLE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . VISIBLE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . GONE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String . java.lang.String ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getPlayCount ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( WordFormUtil . getWordForm ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getPlayCount ( ) , java.lang.String[] ) + STRING + getString ( R . string . main_tracks_on_last_fm ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { Track com.artemzin.android.wail.ui.fragment.main.Track = WAILSettings . getNowScrobblingTrack ( getActivity ( ) ) ; java.lang.String java.lang.String = WAILSettings . getNowScrobblingPlayerLabel ( getActivity ( ) ) ; java.lang.String java.lang.String = WAILSettings . getNowScrobblingPlayerPackageName ( getActivity ( ) ) ; final java.lang.String java.lang.String = java.lang.String != null ? java.lang.String : java.lang.String ; if ( com.artemzin.android.wail.ui.fragment.main.Track != null ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getString ( R . string . main_now_scrobbling_label , com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) + STRING + com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String . java.lang.String ( getString ( R . string . main_scrobbling_from_player_label ) , java.lang.String ) ) ; if ( com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . getVisibility ( ) != View . VISIBLE ) { com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . setVisibility ( View . VISIBLE ) ; } com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . show ( ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . VISIBLE ) ; } else { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getString ( R . string . main_now_scrobbling_label , getString ( R . string . main_now_scrobbling_nothing ) ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( STRING ) ; com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . hide ( ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . GONE ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { try { final long long = WAILSettings . getLastfmUserInfoUpdateTimestamp ( getActivity ( ) ) ; if ( long == - NUMBER ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( STRING ) ; return; } final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( long ) ; final java.lang.String java.lang.String ; final long long = java.lang.System . long ( ) - long ; if ( long < NUMBER ) { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING , java.util.Locale . java.util.Locale ( ) ) ; java.lang.String = getString ( R . string . main_updated_today_at , java.text.SimpleDateFormat . java.lang.String ( java.util.Calendar . java.util.Date ( ) ) ) ; } else if ( long >= NUMBER && long <= NUMBER ) { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING , java.util.Locale . java.util.Locale ( ) ) ; java.lang.String = getString ( R . string . main_updated_yesterday_at , java.text.SimpleDateFormat . java.lang.String ( java.util.Calendar . java.util.Date ( ) ) ) ; } else { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING , java.util.Locale . java.util.Locale ( ) ) ; java.lang.String = getString ( R . string . main_updated_common , java.text.SimpleDateFormat . java.lang.String ( java.util.Calendar . java.util.Date ( ) ) ) ; } com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Toast . makeText ( getActivity ( ) , getString ( R . string . main_refreshing ) , Toast . LENGTH_SHORT ) . show ( ) ; void ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_ignored_players ) public void void ( ) { startActivity ( new Intent ( getActivity ( ) , SettingsIgnoredPlayersActivity .class ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_select_language_menu_item ) public void void ( ) { startActivity ( new Intent ( getActivity ( ) , SettingsSelectLanguageActivity .class ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_disable_scrobbling_over_mobile_network ) public void void ( ) { SwitchCompat com.artemzin.android.wail.ui.fragment.main.SwitchCompat = ( SwitchCompat ) getActivity ( ) . findViewById ( R . id . settings_disable_scrobbling_over_mobile_network_switch ) ; void ( com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( ! com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_disable_scrobbling_over_mobile_network_switch ) public void void ( boolean boolean ) { if ( boolean == WAILSettings . isEnableScrobblingOverMobileNetwork ( getActivity ( ) ) ) { return; } WAILSettings . setDisableScrobblingOverMobileNetwork ( getActivity ( ) , boolean ) ; final java.lang.String java.lang.String = boolean ? getString ( R . string . settings_scrobbling_over_mobile_network_enabled_toast ) : getString ( R . string . settings_scrobbling_over_mobile_network_disabled_toast ) ; Toast . makeText ( getActivity ( ) , java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + boolean , null , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_lastfm_update_nowplaying ) public void void ( ) { SwitchCompat com.artemzin.android.wail.ui.fragment.main.SwitchCompat = ( SwitchCompat ) getActivity ( ) . findViewById ( R . id . settings_lastfm_update_nowplaying_switch ) ; void ( com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( ! com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_lastfm_update_nowplaying_switch ) public void void ( boolean boolean ) { if ( boolean == WAILSettings . isLastfmNowplayingUpdateEnabled ( getActivity ( ) ) ) { return; } WAILSettings . setLastfmNowplayingUpdateEnabled ( getActivity ( ) , boolean ) ; final java.lang.String java.lang.String = boolean ? getString ( R . string . settings_lastfm_update_nowplaying_enabled_toast ) : getString ( R . string . settings_lastfm_update_nowplaying_disabled_toast ) ; Toast . makeText ( getActivity ( ) , java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + boolean , null , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_theme ) public void void ( ) { SwitchCompat com.artemzin.android.wail.ui.fragment.main.SwitchCompat = ( SwitchCompat ) getActivity ( ) . findViewById ( R . id . settings_theme_switch ) ; void ( com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( ! com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_theme_switch ) public void void ( boolean boolean ) { if ( boolean == ( WAILSettings . getTheme ( getActivity ( ) ) == WAILSettings . Theme . DARK ) ) { return; } WAILSettings . setTheme ( getActivity ( ) , boolean ? WAILSettings . Theme . DARK : WAILSettings . Theme . LIGHT ) ; ( ( BaseActivity ) getActivity ( ) ) . setTheme ( ) ; ( ( BaseActivity ) getActivity ( ) ) . restart ( ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_sound_notifications ) public void void ( ) { startActivity ( new Intent ( getActivity ( ) , SettingsSoundNotificationsActivity .class ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_status_bar_notifications ) public void void ( ) { startActivity ( new Intent ( getActivity ( ) , SettingsStatusBarNotificationsActivity .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.fragment.main.Bundle ) ; setHasOptionsMenu ( true ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setTitle ( R . string . settings_actionbar_title ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.View com.artemzin.android.wail.ui.fragment.main.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.main.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.main.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { return com.artemzin.android.wail.ui.fragment.main.LayoutInflater . inflate ( R . layout . fragment_main_settings , com.artemzin.android.wail.ui.fragment.main.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Menu com.artemzin.android.wail.ui.fragment.main.Menu , MenuInflater com.artemzin.android.wail.ui.fragment.main.MenuInflater ) { super. onCreateOptionsMenu ( com.artemzin.android.wail.ui.fragment.main.Menu , com.artemzin.android.wail.ui.fragment.main.MenuInflater ) ; com.artemzin.android.wail.ui.fragment.main.MenuInflater . inflate ( R . menu . main_settings , com.artemzin.android.wail.ui.fragment.main.Menu ) ; SwitchCompat com.artemzin.android.wail.ui.fragment.main.SwitchCompat = ( SwitchCompat ) MenuItemCompat . getActionView ( com.artemzin.android.wail.ui.fragment.main.Menu . findItem ( R . id . main_settings_menu_is_wail_enabled ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( WAILSettings . isEnabled ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton com.artemzin.android.wail.ui.fragment.main.CompoundButton , boolean boolean ) { WAILSettings . setEnabled ( getActivity ( ) , boolean ) ; final Toast com.artemzin.android.wail.ui.fragment.main.Toast = Toast . makeText ( getActivity ( ) , STRING , Toast . LENGTH_SHORT ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setGravity ( Gravity . TOP | Gravity . END , NUMBER , ( int ) DisplayUnitsConverter . dpToPx ( getActivity ( ) , NUMBER ) ) ; if ( boolean ) { void ( ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setText ( R . string . settings_wail_enabled_toast ) ; } else { void ( ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setText ( R . string . settings_wail_disabled_toast ) ; } com.artemzin.android.wail.ui.fragment.main.Toast . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + boolean , null , boolean ? NUMBER : NUMBER ) . build ( ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( CompoundButton com.artemzin.android.wail.ui.fragment.main.CompoundButton , boolean boolean ) { WAILSettings . setEnabled ( getActivity ( ) , boolean ) ; final Toast com.artemzin.android.wail.ui.fragment.main.Toast = Toast . makeText ( getActivity ( ) , STRING , Toast . LENGTH_SHORT ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setGravity ( Gravity . TOP | Gravity . END , NUMBER , ( int ) DisplayUnitsConverter . dpToPx ( getActivity ( ) , NUMBER ) ) ; if ( boolean ) { void ( ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setText ( R . string . settings_wail_enabled_toast ) ; } else { void ( ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setText ( R . string . settings_wail_disabled_toast ) ; } com.artemzin.android.wail.ui.fragment.main.Toast . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + boolean , null , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.main.View , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.main.View ) ; if ( WAILSettings . isEnabled ( getActivity ( ) ) ) { void ( ) ; } else { void ( ) ; } java.lang.String java.lang.String = WAILSettings . getLanguage ( getActivity ( ) ) ; if ( java.lang.String == null ) { java.lang.String = getResources ( ) . getStringArray ( R . array . settings_select_language_languages ) [ NUMBER ] ; } com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; void ( ) ; void ( ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( WAILSettings . isEnableScrobblingOverMobileNetwork ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( WAILSettings . isLastfmNowplayingUpdateEnabled ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( WAILSettings . getLastfmUserName ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( WAILSettings . getTheme ( getActivity ( ) ) == WAILSettings . Theme . DARK ) ; try { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getActivity ( ) . getPackageManager ( ) . getPackageInfo ( getActivity ( ) . getPackageName ( ) , NUMBER ) . versionName ) ; } catch ( java.lang.Exception java.lang.Exception ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( STRING ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createException ( STRING + java.lang.Exception . java.lang.String ( ) , false ) . build ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStop ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> void void ( ) { ViewUtil . setEnabledForAllChildrenRecursively ( ( ViewGroup ) com.artemzin.android.wail.ui.fragment.main.View , true ) ; }  <METHOD_END>
<METHOD_START> void void ( ) { ViewUtil . setEnabledForAllChildrenRecursively ( ( ViewGroup ) com.artemzin.android.wail.ui.fragment.main.View , false ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_min_track_duration_in_percents ) void void ( ) { final DialogFragmentWithSeekBar com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithSeekBar = DialogFragmentWithSeekBar . newInstance ( getString ( R . string . settings_min_track_elapsed_time_in_percent_dialog_title ) , WAILSettings . getMinTrackDurationInPercents ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithSeekBar . setListener ( this ) ; com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithSeekBar . show ( getFragmentManager ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_min_track_duration_in_seconds ) void void ( ) { final DialogFragmentWithNumberPicker com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithNumberPicker = DialogFragmentWithNumberPicker . newInstance ( getString ( R . string . settings_min_track_elapsed_time_in_seconds_dialog_title ) , NUMBER , NUMBER , WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithNumberPicker . setListener ( this ) ; com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithNumberPicker . show ( getFragmentManager ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { final int int = WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_seconds_desc , int + STRING + WordFormUtil . getWordForm ( int , getResources ( ) . getStringArray ( R . array . word_forms_second ) ) ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_percent_desc , WAILSettings . getMinTrackDurationInPercents ( getActivity ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_logout_menu_item ) public void void ( ) { new MaterialDialog . MaterialDialog ( getActivity ( ) ) . theme ( Theme . DARK ) . title ( R . string . setting_logout_warning ) . positiveText ( STRING ) . negativeText ( R . string . dialog_cancel ) . callback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { WAILSettings . clearAllSettings ( getActivity ( ) ) ; AppDBManager . getInstance ( getActivity ( ) ) . clearAll ( ) ; LocaleUtil . updateLanguage ( getActivity ( ) , null ) ; startActivity ( new Intent ( getActivity ( ) , MainActivity .class ) ) ; getActivity ( ) . finish ( ) ; } @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.MaterialDialog . dismiss ( ) ; } } ) . build ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { WAILSettings . clearAllSettings ( getActivity ( ) ) ; AppDBManager . getInstance ( getActivity ( ) ) . clearAll ( ) ; LocaleUtil . updateLanguage ( getActivity ( ) , null ) ; startActivity ( new Intent ( getActivity ( ) , MainActivity .class ) ) ; getActivity ( ) . finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.MaterialDialog . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_email_to_developers ) public void void ( ) { try { final Intent com.artemzin.android.wail.ui.fragment.main.Intent = new Intent ( Intent . ACTION_SEND ) ; java.lang.String java.lang.String = getString ( R . string . settings_developers_emails ) ; java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( '(' ) - NUMBER ) . java.lang.String[] ( STRING ) ; com.artemzin.android.wail.ui.fragment.main.Intent . putExtra ( Intent . EXTRA_EMAIL , java.lang.String[] ) ; com.artemzin.android.wail.ui.fragment.main.Intent . putExtra ( Intent . EXTRA_SUBJECT , getString ( R . string . settings_email_to_the_developer_subj ) + STRING + com.artemzin.android.wail.ui.fragment.main.TextView . getText ( ) . toString ( ) ) ; com.artemzin.android.wail.ui.fragment.main.Intent . setType ( STRING ) ; startActivity ( Intent . createChooser ( com.artemzin.android.wail.ui.fragment.main.Intent , getString ( R . string . settings_email_dialog_title ) ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createException ( STRING + java.lang.Exception , false ) . build ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.fragment.main.Context , Intent com.artemzin.android.wail.ui.fragment.main.Intent ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.fragment.main.Bundle ) ; setHasOptionsMenu ( true ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setTitle ( getString ( R . string . tracks_actionbar_title ) ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListAdapter = new com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListAdapter ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.View com.artemzin.android.wail.ui.fragment.main.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.main.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.main.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { return com.artemzin.android.wail.ui.fragment.main.LayoutInflater . inflate ( R . layout . fragment_tracks_list , com.artemzin.android.wail.ui.fragment.main.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.main.View , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.main.View ) ; void ( ) ; com.artemzin.android.wail.ui.fragment.main.ListView . setAdapter ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListAdapter ) ; com.artemzin.android.wail.ui.fragment.main.ListView . setOnItemClickListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( AdapterView < ? > com.artemzin.android.wail.ui.fragment.main.AdapterView<?> , View com.artemzin.android.wail.ui.fragment.main.View , int int , long long ) { Track com.artemzin.android.wail.ui.fragment.main.Track = ( Track ) com.artemzin.android.wail.ui.fragment.main.AdapterView<> . getAdapter ( ) . getItem ( int ) ; TrackActionsDialog . newInstance ( com.artemzin.android.wail.ui.fragment.main.Track ) . show ( getFragmentManager ( ) , STRING ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > com.artemzin.android.wail.ui.fragment.main.AdapterView<?> , View com.artemzin.android.wail.ui.fragment.main.View , int int , long long ) { Track com.artemzin.android.wail.ui.fragment.main.Track = ( Track ) com.artemzin.android.wail.ui.fragment.main.AdapterView<> . getAdapter ( ) . getItem ( int ) ; TrackActionsDialog . newInstance ( com.artemzin.android.wail.ui.fragment.main.Track ) . show ( getFragmentManager ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , true ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , true ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStop ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { LocalBroadcastManager . getInstance ( getActivity ( ) ) . registerReceiver ( com.artemzin.android.wail.ui.fragment.main.BroadcastReceiver , new IntentFilter ( TracksDBHelper . INTENT_TRACKS_CHANGED ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { LocalBroadcastManager . getInstance ( getActivity ( ) ) . unregisterReceiver ( com.artemzin.android.wail.ui.fragment.main.BroadcastReceiver ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Menu com.artemzin.android.wail.ui.fragment.main.Menu , MenuInflater com.artemzin.android.wail.ui.fragment.main.MenuInflater ) { super. onCreateOptionsMenu ( com.artemzin.android.wail.ui.fragment.main.Menu , com.artemzin.android.wail.ui.fragment.main.MenuInflater ) ; com.artemzin.android.wail.ui.fragment.main.MenuInflater . inflate ( R . menu . main_tracks , com.artemzin.android.wail.ui.fragment.main.Menu ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksSearchHandler . void ( com.artemzin.android.wail.ui.fragment.main.Menu . findItem ( R . id . main_tracks_ab_search ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , Cursor > ( ) { @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } } @ java.lang.Override protected com.artemzin.android.wail.ui.fragment.main.Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ( java.lang.Void ... java.lang.Void[] ) { try { return TracksDBHelper . getInstance ( getActivity ( ) ) . getAllDesc ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } } @ java.lang.Override protected void void ( Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ) { super. onPostExecute ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; if ( ! isDetached ( ) ) { try { if ( com.artemzin.android.wail.ui.fragment.main.Cursor == null || com.artemzin.android.wail.ui.fragment.main.Cursor . getCount ( ) == NUMBER ) { void ( getString ( R . string . tracks_list_empty_motivation_text ) ) ; } else { void ( ) ; } com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.ui.fragment.main.Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ( java.lang.Void ... java.lang.Void[] ) { try { return TracksDBHelper . getInstance ( getActivity ( ) ) . getAllDesc ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ) { super. onPostExecute ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; if ( ! isDetached ( ) ) { try { if ( com.artemzin.android.wail.ui.fragment.main.Cursor == null || com.artemzin.android.wail.ui.fragment.main.Cursor . getCount ( ) == NUMBER ) { void ( getString ( R . string . tracks_list_empty_motivation_text ) ) ; } else { void ( ) ; } com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener ) { this . com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener = com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener ; }  <METHOD_END>
<METHOD_START> public void void ( Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ) { if ( this . com.artemzin.android.wail.ui.fragment.main.Cursor != null ) { this . com.artemzin.android.wail.ui.fragment.main.Cursor . close ( ) ; } this . com.artemzin.android.wail.ui.fragment.main.Cursor = com.artemzin.android.wail.ui.fragment.main.Cursor ; java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> = null ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) { if ( this . com.artemzin.android.wail.ui.fragment.main.Cursor != null ) { this . com.artemzin.android.wail.ui.fragment.main.Cursor . close ( ) ; } this . java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> = java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ; com.artemzin.android.wail.ui.fragment.main.Cursor = null ; void ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { if ( com.artemzin.android.wail.ui.fragment.main.Cursor != null ) { return com.artemzin.android.wail.ui.fragment.main.Cursor . getCount ( ) ; } else if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> != null ) { return java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . size ( ) ; } else { return NUMBER ; } }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.ui.fragment.main.Track com.artemzin.android.wail.ui.fragment.main.Track ( int int ) { if ( com.artemzin.android.wail.ui.fragment.main.Cursor != null ) { com.artemzin.android.wail.ui.fragment.main.Cursor . moveToPosition ( int ) ; return TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; } else if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> != null ) { return java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . get ( int ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener != null ) { com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener . void ( ) ; } }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( View com.artemzin.android.wail.ui.fragment.main.View ) { ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.main.View ) ; }  <METHOD_END>
<METHOD_START> public void ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider ) { this . com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider = com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider ; this . com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( this ) ; int[] = int[] ( ) ; }  <METHOD_END>
<METHOD_START> private int [] int[] ( ) { int [] int[] = new int [ NUMBER ] ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_waiting_for_scrobble ) ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_scrobbling ) ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_error ) ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_scrobble_success ) ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_unknown ) ; return int[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.Track com.artemzin.android.wail.ui.fragment.main.Track ( int int ) { return com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . com.artemzin.android.wail.ui.fragment.main.Track ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( int int ) { return com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . com.artemzin.android.wail.ui.fragment.main.Track ( int ) . hashCode ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.View com.artemzin.android.wail.ui.fragment.main.View ( int int , View com.artemzin.android.wail.ui.fragment.main.View , ViewGroup com.artemzin.android.wail.ui.fragment.main.ViewGroup ) { final com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder ; if ( com.artemzin.android.wail.ui.fragment.main.View == null ) { com.artemzin.android.wail.ui.fragment.main.View = LayoutInflater . from ( getActivity ( ) ) . inflate ( R . layout . track_list_item , com.artemzin.android.wail.ui.fragment.main.ViewGroup , false ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder = new com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder ( com.artemzin.android.wail.ui.fragment.main.View ) ; com.artemzin.android.wail.ui.fragment.main.View . setTag ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder ) ; } else { com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder = ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder ) com.artemzin.android.wail.ui.fragment.main.View . getTag ( ) ; } void ( com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder , int ) ; return com.artemzin.android.wail.ui.fragment.main.View ; }  <METHOD_END>
<METHOD_START> private void void ( View com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder , int int ) { final Track com.artemzin.android.wail.ui.fragment.main.Track = com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . com.artemzin.android.wail.ui.fragment.main.Track ( int ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) ) ; java.lang.String java.lang.String ; if ( ! TextUtils . isEmpty ( com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) ) ) { java.lang.String = com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) ; if ( ! TextUtils . isEmpty ( com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) ) ) { java.lang.String += STRING + com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) ; } } else if ( ! TextUtils . isEmpty ( com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) ) ) { java.lang.String = com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) ; } else { java.lang.String = getString ( R . string . track_artist_and_album_no_data ) ; } com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; switch ( com.artemzin.android.wail.ui.fragment.main.Track . getState ( ) ) { case Track . STATE_WAITING_FOR_SCROBBLE : com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_waiting_for_scrobble ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; case Track . STATE_SCROBBLING : com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_scrobbling ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; case Track . STATE_SCROBBLE_ERROR : com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_scrobble_error ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; case Track . STATE_SCROBBLE_SUCCESS : com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_scrobble_success ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; default: com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_unknown ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; } java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( com.artemzin.android.wail.ui.fragment.main.Track . getTimestamp ( ) ) ; final java.lang.String java.lang.String = java.text.DateFormat . java.lang.String ( java.util.Calendar . java.util.Date ( ) ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { notifyDataSetChanged ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( MenuItem com.artemzin.android.wail.ui.fragment.main.MenuItem ) { com.artemzin.android.wail.ui.fragment.main.SearchView = ( SearchView ) MenuItemCompat . getActionView ( com.artemzin.android.wail.ui.fragment.main.MenuItem ) . findViewById ( R . id . main_tracks_ab_search ) ; com.artemzin.android.wail.ui.fragment.main.SearchView . setOnQueryTextListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; return true ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.String , java.lang.Void , java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > > ( ) { private java.lang.String java.lang.String ; @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { void ( ) ; void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } } @ java.lang.Override protected java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ( java.lang.String ... java.lang.String[] ) { try { java.lang.String = java.lang.String[] [ NUMBER ] . java.lang.String ( java.util.Locale . java.util.Locale ( ) ) ; Cursor com.artemzin.android.wail.ui.fragment.main.Cursor = TracksDBHelper . getInstance ( getActivity ( ) ) . getAllDesc ( ) ; final java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> = new java.util.ArrayList<com.artemzin.android.wail.ui.fragment.main.Track> < Track > ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.ui.fragment.main.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; if ( com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } } while ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToNext ( ) ); } return java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } } @ java.lang.Override protected void void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) { super. onPostExecute ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) ; try { if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> == null ) { Toast . makeText ( getActivity ( ) , R . string . tracks_search_error_toast , Toast . LENGTH_LONG ) . show ( ) ; } else if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . size ( ) == NUMBER ) { void ( getString ( R . string . tracks_search_no_results , java.lang.String ) ) ; } else { void ( ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) ; com.artemzin.android.wail.ui.fragment.main.ListView . smoothScrollToPosition ( NUMBER ) ; } } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } } } , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { void ( ) ; void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ( java.lang.String ... java.lang.String[] ) { try { java.lang.String = java.lang.String[] [ NUMBER ] . java.lang.String ( java.util.Locale . java.util.Locale ( ) ) ; Cursor com.artemzin.android.wail.ui.fragment.main.Cursor = TracksDBHelper . getInstance ( getActivity ( ) ) . getAllDesc ( ) ; final java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> = new java.util.ArrayList<com.artemzin.android.wail.ui.fragment.main.Track> < Track > ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.ui.fragment.main.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; if ( com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } } while ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToNext ( ) ); } return java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) { super. onPostExecute ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) ; try { if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> == null ) { Toast . makeText ( getActivity ( ) , R . string . tracks_search_error_toast , Toast . LENGTH_LONG ) . show ( ) ; } else if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . size ( ) == NUMBER ) { void ( getString ( R . string . tracks_search_no_results , java.lang.String ) ) ; } else { void ( ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) ; com.artemzin.android.wail.ui.fragment.main.ListView . smoothScrollToPosition ( NUMBER ) ; } } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . non_authorized_sign_in_button ) public void void ( ) { void ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . non_authorized_sign_up_button ) public void void ( ) { startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING ) ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.View com.artemzin.android.wail.ui.fragment.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.Bundle ) { return com.artemzin.android.wail.ui.fragment.LayoutInflater . inflate ( R . layout . fragment_non_authorized , com.artemzin.android.wail.ui.fragment.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.View , Bundle com.artemzin.android.wail.ui.fragment.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.View , com.artemzin.android.wail.ui.fragment.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.View ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; if ( WAILSettings . getKeyLastfmToken ( getActivity ( ) ) != null ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> private com.artemzin.android.wail.ui.fragment.AlertDialog com.artemzin.android.wail.ui.fragment.AlertDialog ( ) { if ( com.artemzin.android.wail.ui.fragment.AlertDialog == null ) { View com.artemzin.android.wail.ui.fragment.View = getActivity ( ) . getLayoutInflater ( ) . inflate ( R . layout . fragment_progress_dialog , null ) ; ( ( TextView ) com.artemzin.android.wail.ui.fragment.View . findViewById ( R . id . progress_dialog_message ) ) . setText ( getString ( R . string . lastfm_logging_progress_dialog_message ) ) ; com.artemzin.android.wail.ui.fragment.AlertDialog = new AlertDialog . AlertDialog ( getActivity ( ) ) . setView ( com.artemzin.android.wail.ui.fragment.View ) . setCancelable ( false ) . create ( ) ; } return com.artemzin.android.wail.ui.fragment.AlertDialog ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTask < java.lang.Void , java.lang.Void , java.lang.String > com.artemzin.android.wail.ui.fragment.AsyncTask<java.lang.Void,java.lang.Void,java.lang.String> = new AsyncTask < java.lang.Void , java.lang.Void , java.lang.String > ( ) { private java.lang.Exception java.lang.Exception ; @ java.lang.Override protected void void ( ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . show ( ) ; } @ java.lang.Override protected java.lang.String java.lang.String ( java.lang.Void ... java.lang.Void[] ) { try { return LFAuthApi . getToken ( WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) ) . getToken ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception = java.lang.Exception ; return null ; } } @ java.lang.Override protected void void ( java.lang.String java.lang.String ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . dismiss ( ) ; if ( java.lang.Exception == null ) { WAILSettings . setKeyLastfmToken ( getActivity ( ) , java.lang.String ) ; Intent com.artemzin.android.wail.ui.fragment.Intent = new Intent ( Intent . ACTION_VIEW ) ; com.artemzin.android.wail.ui.fragment.Intent . setData ( Uri . parse ( java.lang.String . java.lang.String ( LFApiCommon . AUTHORIZATION_URL , WAILSettings . getLastfmApiKey ( ) , java.lang.String ) ) ) ; startActivity ( com.artemzin.android.wail.ui.fragment.Intent ) ; } else { void ( java.lang.Exception ) ; } } } ; com.artemzin.android.wail.ui.fragment.AsyncTask<java.lang.Void,java.lang.Void,java.lang.String> . execute ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( java.lang.Void ... java.lang.Void[] ) { try { return LFAuthApi . getToken ( WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) ) . getToken ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception = java.lang.Exception ; return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . dismiss ( ) ; if ( java.lang.Exception == null ) { WAILSettings . setKeyLastfmToken ( getActivity ( ) , java.lang.String ) ; Intent com.artemzin.android.wail.ui.fragment.Intent = new Intent ( Intent . ACTION_VIEW ) ; com.artemzin.android.wail.ui.fragment.Intent . setData ( Uri . parse ( java.lang.String . java.lang.String ( LFApiCommon . AUTHORIZATION_URL , WAILSettings . getLastfmApiKey ( ) , java.lang.String ) ) ) ; startActivity ( com.artemzin.android.wail.ui.fragment.Intent ) ; } else { void ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { private java.lang.Exception java.lang.Exception ; @ java.lang.Override protected void void ( ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . show ( ) ; } @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { try { LFSessionResponseModel com.artemzin.android.wail.ui.fragment.LFSessionResponseModel = LFAuthApi . getSession ( WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , WAILSettings . getKeyLastfmToken ( getActivity ( ) ) ) ; WAILSettings . setLastfmSessionKey ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.LFSessionResponseModel . getKey ( ) ) ; WAILSettings . setLastfmUserName ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.LFSessionResponseModel . getName ( ) ) ; WAILSettings . setEnabled ( getActivity ( ) , true ) ; } catch ( NetworkException | LFApiException java.lang.Object ) { java.lang.Exception = java.lang.Object ; } return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . dismiss ( ) ; WAILSettings . setKeyLastfmToken ( getActivity ( ) , null ) ; if ( java.lang.Exception == null ) { getActivity ( ) . setResult ( Activity . RESULT_OK ) ; getActivity ( ) . finish ( ) ; } else { void ( java.lang.Exception ) ; } } } . execute ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { try { LFSessionResponseModel com.artemzin.android.wail.ui.fragment.LFSessionResponseModel = LFAuthApi . getSession ( WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , WAILSettings . getKeyLastfmToken ( getActivity ( ) ) ) ; WAILSettings . setLastfmSessionKey ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.LFSessionResponseModel . getKey ( ) ) ; WAILSettings . setLastfmUserName ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.LFSessionResponseModel . getName ( ) ) ; WAILSettings . setEnabled ( getActivity ( ) , true ) ; } catch ( NetworkException | LFApiException java.lang.Object ) { java.lang.Exception = java.lang.Object ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . dismiss ( ) ; WAILSettings . setKeyLastfmToken ( getActivity ( ) , null ) ; if ( java.lang.Exception == null ) { getActivity ( ) . setResult ( Activity . RESULT_OK ) ; getActivity ( ) . finish ( ) ; } else { void ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Exception java.lang.Exception ) { if ( java.lang.Exception instanceof NetworkException ) { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_logging_network_error ) , Toast . LENGTH_LONG ) . show ( ) ; } else if ( java.lang.Exception instanceof LFApiException ) { LFApiException com.artemzin.android.wail.ui.fragment.LFApiException = ( LFApiException ) java.lang.Exception ; if ( LFApiException . ERROR_TOKEN_EXPIRED . equals ( com.artemzin.android.wail.ui.fragment.LFApiException . getError ( ) ) ) { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_logging_api_error_15 ) , Toast . LENGTH_LONG ) . show ( ) ; } else if ( LFApiException . ERROR_NOT_AUTHORIZED_TOKEN . equals ( com.artemzin.android.wail.ui.fragment.LFApiException . getError ( ) ) ) { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_logging_api_error_14 ) , Toast . LENGTH_LONG ) . show ( ) ; } else if ( LFApiException . ERROR_SERVICE_OFFLINE . equals ( com.artemzin.android.wail.ui.fragment.LFApiException . getError ( ) ) ) { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_api_error_11 ) , Toast . LENGTH_LONG ) . show ( ) ; } else { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_logging_api_error_unknown ) , Toast . LENGTH_LONG ) . show ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater , @ Nullable ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup , @ Nullable Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { return com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . fragment_settings_ignored_players , com.artemzin.android.wail.ui.fragment.settings.ViewGroup ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.settings.View , @ Nullable Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.settings.View , com.artemzin.android.wail.ui.fragment.settings.Bundle ) ; com.artemzin.android.wail.ui.fragment.settings.IgnoredPlayersDBHelper = IgnoredPlayersDBHelper . getInstance ( getActivity ( ) ) ; com.artemzin.android.wail.ui.fragment.settings.PackageManager = getActivity ( ) . getPackageManager ( ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.settings.View ) ; java.util.List<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> < ApplicationInfo > java.util.List<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> = com.artemzin.android.wail.ui.fragment.settings.IgnoredPlayersDBHelper . getAll ( ) ; if ( java.util.List<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> . size ( ) == NUMBER ) { com.artemzin.android.wail.ui.fragment.settings.LinearLayout . setVisibility ( View . VISIBLE ) ; } else { ArrayAdapter < ApplicationInfo > com.artemzin.android.wail.ui.fragment.settings.ArrayAdapter<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> = new ArrayAdapter < ApplicationInfo > ( getActivity ( ) , R . layout . settings_ignored_players_item_layout , java.util.List<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> ) { @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( int int , View com.artemzin.android.wail.ui.fragment.settings.View , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup ) { com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ; View com.artemzin.android.wail.ui.fragment.settings.View = com.artemzin.android.wail.ui.fragment.settings.View ; if ( com.artemzin.android.wail.ui.fragment.settings.View == null ) { LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater = getActivity ( ) . getLayoutInflater ( ) ; com.artemzin.android.wail.ui.fragment.settings.View = com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . settings_ignored_players_item_layout , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder = new com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ( ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.TextView = ( TextView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . settings_ignored_players_list_view_text ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.ImageView = ( ImageView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . settings_ignored_players_list_view_image ) ; com.artemzin.android.wail.ui.fragment.settings.View . setTag ( com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ) ; } else { com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder = ( com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ) com.artemzin.android.wail.ui.fragment.settings.View . getTag ( ) ; } com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.TextView . setText ( com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationLabel ( getItem ( int ) ) ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.ImageView . setImageDrawable ( com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationIcon ( getItem ( int ) ) ) ; return com.artemzin.android.wail.ui.fragment.settings.View ; } } ; com.artemzin.android.wail.ui.fragment.settings.ListView . setAdapter ( com.artemzin.android.wail.ui.fragment.settings.ArrayAdapter<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> ) ; com.artemzin.android.wail.ui.fragment.settings.ListView . setOnItemClickListener ( this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( int int , View com.artemzin.android.wail.ui.fragment.settings.View , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup ) { com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ; View com.artemzin.android.wail.ui.fragment.settings.View = com.artemzin.android.wail.ui.fragment.settings.View ; if ( com.artemzin.android.wail.ui.fragment.settings.View == null ) { LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater = getActivity ( ) . getLayoutInflater ( ) ; com.artemzin.android.wail.ui.fragment.settings.View = com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . settings_ignored_players_item_layout , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder = new com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ( ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.TextView = ( TextView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . settings_ignored_players_list_view_text ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.ImageView = ( ImageView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . settings_ignored_players_list_view_image ) ; com.artemzin.android.wail.ui.fragment.settings.View . setTag ( com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ) ; } else { com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder = ( com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ) com.artemzin.android.wail.ui.fragment.settings.View . getTag ( ) ; } com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.TextView . setText ( com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationLabel ( getItem ( int ) ) ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.ImageView . setImageDrawable ( com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationIcon ( getItem ( int ) ) ) ; return com.artemzin.android.wail.ui.fragment.settings.View ; }  <METHOD_END>
<METHOD_START> @ OnItemClick ( R . id . settings_ignored_players_list_view ) public void void ( final AdapterView < ? > com.artemzin.android.wail.ui.fragment.settings.AdapterView<?> , View com.artemzin.android.wail.ui.fragment.settings.View , int int , long long ) { final ApplicationInfo com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo = ( ApplicationInfo ) com.artemzin.android.wail.ui.fragment.settings.AdapterView<> . getAdapter ( ) . getItem ( int ) ; AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) ; View com.artemzin.android.wail.ui.fragment.settings.View = View . inflate ( getActivity ( ) , R . layout . dialog_fragment_title , null ) ; ( ( TextView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . dialog_fragment_title_text_view ) ) . setText ( java.lang.String . java.lang.String ( getString ( R . string . settings_confirm_unignoring_player ) , com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationLabel ( com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo ) ) ) ; AlertDialog.Builder . setCustomTitle ( com.artemzin.android.wail.ui.fragment.settings.View ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.settings.DialogInterface , int int ) { com.artemzin.android.wail.ui.fragment.settings.IgnoredPlayersDBHelper . delete ( applicationInfo . packageName ) ; getActivity ( ) . startService ( new Intent ( getActivity ( ) , WAILService .class ) . setAction ( WAILService . INTENT_ACTION_HANDLE_PREVIOUSLY_IGNORED_TRACK ) ) ; void ( getView ( ) , null ) ; } } ) . setNegativeButton ( getString ( R . string . dialog_cancel ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.settings.DialogInterface , int int ) { com.artemzin.android.wail.ui.fragment.settings.DialogInterface . dismiss ( ) ; } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.settings.DialogInterface , int int ) { com.artemzin.android.wail.ui.fragment.settings.IgnoredPlayersDBHelper . delete ( applicationInfo . packageName ) ; getActivity ( ) . startService ( new Intent ( getActivity ( ) , WAILService .class ) . setAction ( WAILService . INTENT_ACTION_HANDLE_PREVIOUSLY_IGNORED_TRACK ) ) ; void ( getView ( ) , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.settings.DialogInterface , int int ) { com.artemzin.android.wail.ui.fragment.settings.DialogInterface . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String [] java.lang.String[] ( Context com.artemzin.android.wail.ui.fragment.settings.Context , java.lang.String [] java.lang.String[] ) { try { final java.lang.String java.lang.String = WAILSettings . getLanguage ( com.artemzin.android.wail.ui.fragment.settings.Context ) ; boolean boolean = false ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { final java.lang.String java.lang.String = java.lang.String[] [ int ] ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String[] [ int ] = com.artemzin.android.wail.ui.fragment.settings.Context . getString ( R . string . settings_select_language_current_lang , java.lang.String ) ; boolean = true ; break; } } if ( ! boolean ) { java.lang.String[] [ NUMBER ] = com.artemzin.android.wail.ui.fragment.settings.Context . getString ( R . string . settings_select_language_current_lang , java.lang.String[] [ NUMBER ] ) ; } return java.lang.String[] ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( java.lang.Exception . java.lang.String ( ) ) ; return java.lang.String[] ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { return com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . fragment_settings_select_language , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.settings.View , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.settings.View , com.artemzin.android.wail.ui.fragment.settings.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.settings.View ) ; java.lang.String[] = java.lang.String[] ( getActivity ( ) , getResources ( ) . getStringArray ( R . array . settings_select_language_languages ) ) ; BaseAdapter com.artemzin.android.wail.ui.fragment.settings.BaseAdapter = new ArrayAdapter <> ( getActivity ( ) , R . layout . settings_select_language_item , java.lang.String[] ) ; com.artemzin.android.wail.ui.fragment.settings.ListView . setAdapter ( com.artemzin.android.wail.ui.fragment.settings.BaseAdapter ) ; }  <METHOD_END>
<METHOD_START> @ OnItemClick ( R . id . settings_select_language_list_view ) public void void ( AdapterView < ? > com.artemzin.android.wail.ui.fragment.settings.AdapterView<?> , View com.artemzin.android.wail.ui.fragment.settings.View , int int , long long ) { switch ( int ) { case NUMBER : LocaleUtil . updateLanguage ( getActivity ( ) , java.util.Locale . java.util.Locale ( ) . java.lang.String ( ) ) ; break; default: java.lang.String java.lang.String = java.lang.String[] [ int ] ; if ( java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( STRING ) - NUMBER ) ; } LocaleUtil . updateLanguage ( getActivity ( ) , java.lang.String ) ; break; } EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , int == NUMBER ? STRING : java.lang.String[] [ int ] , NUMBER ) . build ( ) ) ; getActivity ( ) . finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { return com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . fragment_settings_sound_notifications , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.settings.View , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.settings.View , com.artemzin.android.wail.ui.fragment.settings.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.settings.View ) ; final Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; com.artemzin.android.wail.ui.fragment.settings.SwitchCompat . setChecked ( WAILSettings . isSoundNotificationTrackMarkedAsScrobbledEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity ) ) ; com.artemzin.android.wail.ui.fragment.settings.SwitchCompat . setChecked ( WAILSettings . isSoundNotificationTrackSkippedEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_sound_notifications_track_marked_as_scrobbled_switch ) public void void ( boolean boolean ) { final Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; if ( boolean == WAILSettings . isSoundNotificationTrackMarkedAsScrobbledEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity ) ) { return; } WAILSettings . setSoundNotificationTrackMarkedAsScrobbledEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity , boolean ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , boolean ? STRING : STRING , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_sound_notifications_track_skipped_switch ) public void void ( boolean boolean ) { final Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; if ( boolean == WAILSettings . isSoundNotificationTrackSkippedEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity ) ) { return; } WAILSettings . setSoundNotificationTrackSkippedEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity , boolean ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , boolean ? STRING : STRING , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_sound_notifications_track_marked_as_scrobbled ) public void void ( ) { Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; try { SoundNotificationsManager . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . playTrackMarkedAsScrobbledSound ( true ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; Toast . makeText ( com.artemzin.android.wail.ui.fragment.settings.Activity , R . string . settings_sound_notifications_toast_can_not_play_sound , Toast . LENGTH_LONG ) . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_sound_notifications_track_skipped ) public void void ( ) { Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; try { SoundNotificationsManager . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . playTrackSkippedSound ( true ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; Toast . makeText ( com.artemzin.android.wail.ui.fragment.settings.Activity , R . string . settings_sound_notifications_toast_can_not_play_sound , Toast . LENGTH_LONG ) . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_status_bar_notifications_track_now_scrobbling ) public void void ( ) { View com.artemzin.android.wail.ui.fragment.settings.View = getActivity ( ) . findViewById ( R . id . settings_status_bar_notifications_track_now_scrobbling_switch ) ; void ( ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . isChecked ( ) ) ; ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . setChecked ( ! ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_status_bar_notifications_track_now_scrobbling_switch ) public void void ( boolean boolean ) { if ( boolean == WAILSettings . isStatusBarNotificationTrackScrobblingEnabled ( getActivity ( ) ) ) { return; } WAILSettings . setStatusBarNotificationTrackScrobblingEnabled ( getActivity ( ) , boolean ) ; if ( boolean ) { Track com.artemzin.android.wail.ui.fragment.settings.Track = WAILSettings . getNowScrobblingTrack ( getActivity ( ) ) ; if ( com.artemzin.android.wail.ui.fragment.settings.Track != null ) { StatusBarNotificationsManager . getInstance ( getActivity ( ) ) . showTrackScrobblingStatusBarNotification ( com.artemzin.android.wail.ui.fragment.settings.Track ) ; } void ( true ) ; } else { StatusBarNotificationsManager . getInstance ( getActivity ( ) ) . cancelAllNotifications ( ) ; void ( false ) ; } EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , boolean ? STRING : STRING , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_status_bar_notifications_min_priority ) public void void ( ) { View com.artemzin.android.wail.ui.fragment.settings.View = getActivity ( ) . findViewById ( R . id . settings_status_bar_notifications_min_priority_switch ) ; void ( ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . isChecked ( ) ) ; ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . setChecked ( ! ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_status_bar_notifications_min_priority_switch ) public void void ( boolean boolean ) { if ( boolean == WAILSettings . isStatusBarNotificationMinPriority ( getActivity ( ) ) ) { return; } WAILSettings . setStatusBarNotificationMinPriority ( getActivity ( ) , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { return com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . fragment_settings_status_bar_notifications , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.settings.View , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.settings.View , com.artemzin.android.wail.ui.fragment.settings.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.settings.View ) ; boolean boolean = WAILSettings . isStatusBarNotificationTrackScrobblingEnabled ( getActivity ( ) ) ; com.artemzin.android.wail.ui.fragment.settings.SwitchCompat . setChecked ( boolean ) ; com.artemzin.android.wail.ui.fragment.settings.SwitchCompat . setChecked ( WAILSettings . isStatusBarNotificationMinPriority ( getActivity ( ) ) ) ; if ( ! boolean ) { void ( false ) ; } }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { ViewUtil . setEnabledForAllChildrenRecursively ( ( ViewGroup ) com.artemzin.android.wail.ui.fragment.settings.View , boolean ) ; com.artemzin.android.wail.ui.fragment.settings.View . setEnabled ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.artemzin.android.wail.ui.Context ) { super( com.artemzin.android.wail.ui.Context ); void ( com.artemzin.android.wail.ui.Context , null , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.artemzin.android.wail.ui.Context , AttributeSet com.artemzin.android.wail.ui.AttributeSet ) { super( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet ); void ( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.artemzin.android.wail.ui.Context , AttributeSet com.artemzin.android.wail.ui.AttributeSet , int int ) { super( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , int ); void ( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , int ) ; }  <METHOD_END>
<METHOD_START> private void void ( Context com.artemzin.android.wail.ui.Context , AttributeSet com.artemzin.android.wail.ui.AttributeSet , int int ) { final TypedArray com.artemzin.android.wail.ui.TypedArray = com.artemzin.android.wail.ui.Context . obtainStyledAttributes ( com.artemzin.android.wail.ui.AttributeSet , R . styleable . ScrimInsetsView , int , NUMBER ) ; if ( com.artemzin.android.wail.ui.TypedArray == null ) { return; } com.artemzin.android.wail.ui.Drawable = com.artemzin.android.wail.ui.TypedArray . getDrawable ( R . styleable . ScrimInsetsView_insetForeground ) ; com.artemzin.android.wail.ui.TypedArray . recycle ( ) ; setWillNotDraw ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( Rect com.artemzin.android.wail.ui.Rect ) { com.artemzin.android.wail.ui.Rect = new Rect ( com.artemzin.android.wail.ui.Rect ) ; setWillNotDraw ( com.artemzin.android.wail.ui.Drawable == null ) ; ViewCompat . postInvalidateOnAnimation ( this ) ; if ( com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback != null ) { com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback . void ( com.artemzin.android.wail.ui.Rect ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Canvas com.artemzin.android.wail.ui.Canvas ) { super. draw ( com.artemzin.android.wail.ui.Canvas ) ; int int = getWidth ( ) ; int int = getHeight ( ) ; if ( com.artemzin.android.wail.ui.Rect != null && com.artemzin.android.wail.ui.Drawable != null ) { int int = com.artemzin.android.wail.ui.Canvas . save ( ) ; com.artemzin.android.wail.ui.Canvas . translate ( getScrollX ( ) , getScrollY ( ) ) ; com.artemzin.android.wail.ui.Rect . set ( NUMBER , NUMBER , int , com.artemzin.android.wail.ui.Rect . top ) ; com.artemzin.android.wail.ui.Drawable . setBounds ( com.artemzin.android.wail.ui.Rect ) ; com.artemzin.android.wail.ui.Drawable . draw ( com.artemzin.android.wail.ui.Canvas ) ; com.artemzin.android.wail.ui.Rect . set ( NUMBER , int - com.artemzin.android.wail.ui.Rect . bottom , int , int ) ; com.artemzin.android.wail.ui.Drawable . setBounds ( com.artemzin.android.wail.ui.Rect ) ; com.artemzin.android.wail.ui.Drawable . draw ( com.artemzin.android.wail.ui.Canvas ) ; com.artemzin.android.wail.ui.Rect . set ( NUMBER , com.artemzin.android.wail.ui.Rect . top , com.artemzin.android.wail.ui.Rect . left , int - com.artemzin.android.wail.ui.Rect . bottom ) ; com.artemzin.android.wail.ui.Drawable . setBounds ( com.artemzin.android.wail.ui.Rect ) ; com.artemzin.android.wail.ui.Drawable . draw ( com.artemzin.android.wail.ui.Canvas ) ; com.artemzin.android.wail.ui.Rect . set ( int - com.artemzin.android.wail.ui.Rect . right , com.artemzin.android.wail.ui.Rect . top , int , int - com.artemzin.android.wail.ui.Rect . bottom ) ; com.artemzin.android.wail.ui.Drawable . setBounds ( com.artemzin.android.wail.ui.Rect ) ; com.artemzin.android.wail.ui.Drawable . draw ( com.artemzin.android.wail.ui.Canvas ) ; com.artemzin.android.wail.ui.Canvas . restoreToCount ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onAttachedToWindow ( ) ; if ( com.artemzin.android.wail.ui.Drawable != null ) { com.artemzin.android.wail.ui.Drawable . setCallback ( this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onDetachedFromWindow ( ) ; if ( com.artemzin.android.wail.ui.Drawable != null ) { com.artemzin.android.wail.ui.Drawable . setCallback ( null ) ; } }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback ) { com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback = com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback ; }  <METHOD_END>
<METHOD_START> public void void ( Rect com.artemzin.android.wail.ui.Rect );  <METHOD_END>
<METHOD_START> void void ( int int );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( View com.artemzin.android.wail.ui.View ) { this( com.artemzin.android.wail.ui.View , false ); }  <METHOD_END>
<METHOD_START> public void ( View com.artemzin.android.wail.ui.View , boolean boolean ) { this . com.artemzin.android.wail.ui.View = com.artemzin.android.wail.ui.View ; this . boolean = boolean ; com.artemzin.android.wail.ui.View . getViewTreeObserver ( ) . addOnGlobalLayoutListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final Rect com.artemzin.android.wail.ui.Rect = new Rect ( ) ; com.artemzin.android.wail.ui.View . getWindowVisibleDisplayFrame ( com.artemzin.android.wail.ui.Rect ) ; final int int = com.artemzin.android.wail.ui.View . getRootView ( ) . getHeight ( ) - ( r . bottom - r . top ) ; if ( ! boolean && int > NUMBER ) { boolean = true ; void ( int ) ; } else if ( boolean && int < NUMBER ) { boolean = false ; void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener ) { java.util.List<com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener> . boolean ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener ) ; }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener ) { java.util.List<com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener> . boolean ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { this . int = int ; for ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener : java.util.List<com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener> ) { if ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener != null ) { com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener . void ( int ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { for ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener : java.util.List<com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener> ) { if ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener != null ) { com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener . void ( ) ; } } }  <METHOD_END>
<METHOD_START> public void ( final Context com.artemzin.android.wail.ui.Context ) { this( com.artemzin.android.wail.ui.Context , null ); }  <METHOD_END>
<METHOD_START> public void ( final Context com.artemzin.android.wail.ui.Context , final AttributeSet com.artemzin.android.wail.ui.AttributeSet ) { this( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final Context com.artemzin.android.wail.ui.Context , final AttributeSet com.artemzin.android.wail.ui.AttributeSet , final int int ) { super( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , int ); if ( ! isInEditMode ( ) ) { void ( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet ) ; } }  <METHOD_END>
<METHOD_START> private void void ( final Context com.artemzin.android.wail.ui.Context , final AttributeSet com.artemzin.android.wail.ui.AttributeSet ) { if ( java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> == null ) { java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> = new java.util.HashMap<java.lang.String,com.artemzin.android.wail.ui.Typeface> < java.lang.String , Typeface > ( ) ; } final TypedArray com.artemzin.android.wail.ui.TypedArray = com.artemzin.android.wail.ui.Context . obtainStyledAttributes ( com.artemzin.android.wail.ui.AttributeSet , styleable . TypefaceTextView ) ; if ( com.artemzin.android.wail.ui.TypedArray != null ) { final java.lang.String java.lang.String = com.artemzin.android.wail.ui.TypedArray . getString ( styleable . TypefaceTextView_typefaceFromAssets ) ; if ( java.lang.String != null ) { void ( java.lang.String ) ; } else { void ( STRING ) ; } com.artemzin.android.wail.ui.TypedArray . recycle ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { final Typeface com.artemzin.android.wail.ui.Typeface ; if ( java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> . containsKey ( java.lang.String ) ) { com.artemzin.android.wail.ui.Typeface = java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> . get ( java.lang.String ) ; } else { AssetManager com.artemzin.android.wail.ui.AssetManager = getContext ( ) . getAssets ( ) ; com.artemzin.android.wail.ui.Typeface = Typeface . createFromAsset ( com.artemzin.android.wail.ui.AssetManager , java.lang.String ) ; java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> . put ( java.lang.String , com.artemzin.android.wail.ui.Typeface ) ; } setTypeface ( com.artemzin.android.wail.ui.Typeface ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> @ SuppressLint ( STRING ) public static < Params , Progress , Result > com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> < Params , Progress , Result > com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> ( AsyncTask < Params , Progress , Result > com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> , Params ... Params[] ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . HONEYCOMB ) { com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> . executeOnExecutor ( java.util.concurrent.ThreadPoolExecutor , Params[] ) ; } else { com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> . execute ( Params[] ) ; } return com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Thread java.lang.Thread ( java.lang.Runnable java.lang.Runnable ) { return new java.lang.Thread ( java.lang.Runnable , STRING + java.util.concurrent.atomic.AtomicInteger . int ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static long long ( Intent com.artemzin.android.wail.util.Intent , long long , java.lang.String ... java.lang.String[] ) { if ( com.artemzin.android.wail.util.Intent == null || java.lang.String[] == null || java.lang.String[] . int == NUMBER ) return long ; Bundle com.artemzin.android.wail.util.Bundle = com.artemzin.android.wail.util.Intent . getExtras ( ) ; if ( com.artemzin.android.wail.util.Bundle == null || com.artemzin.android.wail.util.Bundle . isEmpty ( ) ) return long ; for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( com.artemzin.android.wail.util.Bundle . containsKey ( java.lang.String ) ) { java.lang.Object java.lang.Object = com.artemzin.android.wail.util.Bundle . get ( java.lang.String ) ; if ( java.lang.Object instanceof java.lang.Long ) { return ( java.lang.Long ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.Integer ) { return ( java.lang.Integer ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.Short ) { return ( java.lang.Short ) java.lang.Object ; } } } return long ; }  <METHOD_END>
<METHOD_START> public static java.lang.Boolean java.lang.Boolean ( Intent com.artemzin.android.wail.util.Intent , java.lang.Boolean java.lang.Boolean , java.lang.String ... java.lang.String[] ) { if ( com.artemzin.android.wail.util.Intent == null || java.lang.String[] == null || java.lang.String[] . int == NUMBER ) return java.lang.Boolean ; Bundle com.artemzin.android.wail.util.Bundle = com.artemzin.android.wail.util.Intent . getExtras ( ) ; if ( com.artemzin.android.wail.util.Bundle == null || com.artemzin.android.wail.util.Bundle . isEmpty ( ) ) return java.lang.Boolean ; for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( com.artemzin.android.wail.util.Bundle . containsKey ( java.lang.String ) ) { java.lang.Object java.lang.Object = com.artemzin.android.wail.util.Bundle . get ( java.lang.String ) ; if ( java.lang.Object instanceof java.lang.Boolean ) { return ( java.lang.Boolean ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.Integer ) { return ( java.lang.Integer ) java.lang.Object > NUMBER ; } else if ( java.lang.Object instanceof java.lang.Long ) { return ( java.lang.Long ) java.lang.Object > NUMBER ; } else if ( java.lang.Object instanceof java.lang.Short ) { return ( java.lang.Short ) java.lang.Object > NUMBER ; } else if ( java.lang.Object instanceof java.lang.Byte ) { return ( java.lang.Byte ) java.lang.Object > NUMBER ; } } } return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( Intent com.artemzin.android.wail.util.Intent ) { if ( com.artemzin.android.wail.util.Intent == null ) return STRING ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( com.artemzin.android.wail.util.Intent . getAction ( ) ) ; if ( com.artemzin.android.wail.util.Intent . getExtras ( ) == null || com.artemzin.android.wail.util.Intent . getExtras ( ) . isEmpty ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; for ( java.lang.String java.lang.String : com.artemzin.android.wail.util.Intent . getExtras ( ) . keySet ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String + STRING + com.artemzin.android.wail.util.Intent . getExtras ( ) . get ( java.lang.String ) + STRING ) . append ( STRING ) ; } } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String == null ? null : java.lang.String . java.lang.String ( NUMBER , NUMBER ) . java.lang.String ( java.util.Locale . java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.util.Context , java.lang.String java.lang.String ) { Configuration com.artemzin.android.wail.util.Configuration = new Configuration ( ) ; java.lang.String java.lang.String = WAILSettings . getLanguage ( com.artemzin.android.wail.util.Context ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( TextUtils . isEmpty ( java.lang.String ) && java.lang.String == null ) { configuration . locale = java.util.Locale . java.util.Locale ( ) ; } else if ( java.lang.String != null ) { configuration . locale = new java.util.Locale ( java.lang.String ) ; WAILSettings . setLanguage ( com.artemzin.android.wail.util.Context , java.lang.String ) ; } else if ( ! TextUtils . isEmpty ( java.lang.String ) ) { configuration . locale = new java.util.Locale ( java.lang.String ) ; } com.artemzin.android.wail.util.Context . getResources ( ) . updateConfiguration ( com.artemzin.android.wail.util.Configuration , null ) ; if ( java.lang.String != null && ! java.lang.String . boolean ( java.lang.String ) ) { Intent com.artemzin.android.wail.util.Intent = com.artemzin.android.wail.util.Context . getPackageManager ( ) . getLaunchIntentForPackage ( com.artemzin.android.wail.util.Context . getPackageName ( ) ) ; com.artemzin.android.wail.util.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; com.artemzin.android.wail.util.Context . startActivity ( com.artemzin.android.wail.util.Intent ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . d ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . v ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . i ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . w ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . e ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.util.Context ) { final ConnectivityManager com.artemzin.android.wail.util.ConnectivityManager = ( ConnectivityManager ) com.artemzin.android.wail.util.Context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; if ( com.artemzin.android.wail.util.ConnectivityManager == null ) { return false ; } final NetworkInfo com.artemzin.android.wail.util.NetworkInfo = com.artemzin.android.wail.util.ConnectivityManager . getActiveNetworkInfo ( ) ; return com.artemzin.android.wail.util.NetworkInfo != null && com.artemzin.android.wail.util.NetworkInfo . isConnectedOrConnecting ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.util.Context ) { if ( ! boolean ( com.artemzin.android.wail.util.Context ) ) { return false ; } final ConnectivityManager com.artemzin.android.wail.util.ConnectivityManager = ( ConnectivityManager ) com.artemzin.android.wail.util.Context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; final NetworkInfo com.artemzin.android.wail.util.NetworkInfo = com.artemzin.android.wail.util.ConnectivityManager . getNetworkInfo ( ConnectivityManager . TYPE_MOBILE ) ; return com.artemzin.android.wail.util.NetworkInfo != null && com.artemzin.android.wail.util.NetworkInfo . isConnectedOrConnecting ( ) ; }  <METHOD_END>
<METHOD_START> private void ( long long , long long , java.lang.Runnable java.lang.Runnable , java.lang.Runnable java.lang.Runnable ) { this . long = long ; this . long = long ; this . java.lang.Runnable = java.lang.Runnable ; this . java.lang.Runnable = java.lang.Runnable ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.util.SleepIfRequiredAsyncTask com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long long , long long , java.lang.Runnable java.lang.Runnable ) { return new com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long , long , null , java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.util.SleepIfRequiredAsyncTask com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long long , long long , java.lang.Runnable java.lang.Runnable , java.lang.Runnable java.lang.Runnable ) { return new com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long , long , java.lang.Runnable , java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.util.SleepIfRequiredAsyncTask com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long long , java.lang.Runnable java.lang.Runnable , java.lang.Runnable java.lang.Runnable ) { return new com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( SystemClock . elapsedRealtime ( ) , long , java.lang.Runnable , java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { if ( java.lang.Runnable != null ) { java.lang.Runnable . void ( ) ; } ThreadUtil . sleepIfRequired ( long , long ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { if ( java.lang.Runnable != null ) { java.lang.Runnable . void ( ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.Exception java.lang.Exception ) { java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; java.io.PrintWriter java.io.PrintWriter = new java.io.PrintWriter ( java.io.StringWriter ) ; java.lang.Exception . void ( java.io.PrintWriter ) ; java.lang.String java.lang.String = java.io.StringWriter . java.lang.String ( ) ; try { java.io.StringWriter . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) {        } try { java.io.PrintWriter . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) {        } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static void void ( long long , long long ) { final long long = SystemClock . elapsedRealtime ( ) - long ; if ( long < long - NUMBER ) { SystemClock . sleep ( long - long ) ; } }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { final long long = java.lang.Math . long ( long ) ; if ( java.lang.String[] . int == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if ( java.lang.String[] . int == NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else if ( java.lang.String[] . int >= NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { if ( long == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else { return java.lang.String[] [ NUMBER ] ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { if ( long == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if( long > NUMBER & long < NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if ( long > NUMBER ) { if( long > NUMBER ) { long long = long % NUMBER ; if( long < NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else { return java.lang.String ( long % NUMBER , java.lang.String[] ) ; } } else { return java.lang.String ( long % NUMBER , java.lang.String[] ) ; } } else { return java.lang.String[] [ NUMBER ] ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { LocaleUtil . updateLanguage ( this , null ) ; super. onCreate ( ) ; Loggi . w ( STRING ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Configuration com.artemzin.android.wail.Configuration ) { super. onConfigurationChanged ( com.artemzin.android.wail.Configuration ) ; if ( boolean ( ) ) { LocaleUtil . updateLanguage ( this , WAILSettings . getLanguage ( this ) ) ; } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public static void void ( ) { boolean = true ; }  <METHOD_END>
<METHOD_START> public static void void ( ) { boolean = false ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { try { final long long = SystemClock . elapsedRealtime ( ) ; PlayersDBHelper . getInstance ( getApplicationContext ( ) ) . updateSupportedPlayers ( ) ; final long long = SystemClock . elapsedRealtime ( ) - long ; Loggi . i ( STRING + long + STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.WAILApp .this ) . send ( MapBuilder . createTiming ( STRING , long , STRING , null ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.WAILApp .this ) . send ( MapBuilder . createException ( STRING , true ) . build ( ) ) ; } return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { super. onPostExecute ( java.lang.Void ) ; Context com.artemzin.android.wail.Context = getApplicationContext ( ) ; if ( com.artemzin.android.wail.Context == null ) return; startService ( new Intent ( com.artemzin.android.wail.Context , WAILService .class ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { try { final long long = SystemClock . elapsedRealtime ( ) ; PlayersDBHelper . getInstance ( getApplicationContext ( ) ) . updateSupportedPlayers ( ) ; final long long = SystemClock . elapsedRealtime ( ) - long ; Loggi . i ( STRING + long + STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.WAILApp .this ) . send ( MapBuilder . createTiming ( STRING , long , STRING , null ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.WAILApp .this ) . send ( MapBuilder . createException ( STRING , true ) . build ( ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { super. onPostExecute ( java.lang.Void ) ; Context com.artemzin.android.wail.Context = getApplicationContext ( ) ; if ( com.artemzin.android.wail.Context == null ) return; startService ( new Intent ( com.artemzin.android.wail.Context , WAILService .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.ligi.passandroid.AppComponent org.ligi.passandroid.AppComponent ( ) { return DaggerTestComponent . builder ( ) . testModule ( new TestModule ( ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.TestComponent org.ligi.passandroid.TestComponent ( ) { return ( TestComponent ) App . component ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {    }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.PassStore org.ligi.passandroid.PassStore ( ) { return org.ligi.passandroid.TestComponent ( ) . passStore ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( ) { setComponent ( DaggerTestComponent . builder ( ) . testModule ( new TestModule ( ) ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { try { final java.io.InputStream java.io.InputStream = InstrumentationRegistry . getInstrumentation ( ) . getContext ( ) . getResources ( ) . getAssets ( ) . open ( STRING ) ; final InputStreamWithSource org.ligi.passandroid.InputStreamWithSource = new InputStreamWithSource ( STRING , java.io.InputStream ) ; final InputStreamUnzipControllerSpec org.ligi.passandroid.InputStreamUnzipControllerSpec = new InputStreamUnzipControllerSpec ( org.ligi.passandroid.InputStreamWithSource , InstrumentationRegistry . getInstrumentation ( ) . getTargetContext ( ) , org.ligi.passandroid.PassStore , UnzipPassController.SuccessCallback , UnzipPassController.FailCallback ) ; UnzipPassController . INSTANCE . processInputStream ( org.ligi.passandroid.InputStreamUnzipControllerSpec ) ; verify ( UnzipPassController.SuccessCallback , never ( ) ) . call ( any ( java.lang.String .class ) ) ; verify ( UnzipPassController.FailCallback ) . fail ( any ( java.lang.String .class ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { fail ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetDetector com.ibm.icu.text.CharsetDetector ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetDetector com.ibm.icu.text.CharsetDetector ( byte [] byte[] ) { byte[] = byte[] ; int = byte[] . int ; return this ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetDetector com.ibm.icu.text.CharsetDetector ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { java.io.InputStream = java.io.InputStream ; java.io.InputStream . void ( int ) ; byte[] = new byte [ int ] ; int = NUMBER ; int int = int ; while ( int > NUMBER ) { int int = java.io.InputStream . int ( byte[] , int , int ) ; if ( int <= NUMBER ) { break; } int += int ; int -= int ; } java.io.InputStream . void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( ) { CharsetMatch com.ibm.icu.text.CharsetMatch[] [] = com.ibm.icu.text.CharsetMatch[] ( ) ; if ( com.ibm.icu.text.CharsetMatch[] == null || matches . length == NUMBER ) { return null ; } return com.ibm.icu.text.CharsetMatch[] [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch [] com.ibm.icu.text.CharsetMatch[] ( ) { java.util.ArrayList<com.ibm.icu.text.CharsetMatch> < CharsetMatch > java.util.ArrayList<com.ibm.icu.text.CharsetMatch> = new java.util.ArrayList<com.ibm.icu.text.CharsetMatch> < CharsetMatch > ( ) ; void ( ) ; for ( int int = NUMBER ; int < java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ; int ++ ) { com.ibm.icu.text.CharsetDetector.CSRecognizerInfo com.ibm.icu.text.CharsetDetector.CSRecognizerInfo = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) ; boolean boolean = ( boolean[] != null ) ? boolean[] [ int ] : com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . boolean ; if ( boolean ) { CharsetMatch com.ibm.icu.text.CharsetMatch = com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . com.ibm.icu.text.CharsetRecognizer . match ( this ) ; if ( com.ibm.icu.text.CharsetMatch != null ) { java.util.ArrayList<com.ibm.icu.text.CharsetMatch> . add ( com.ibm.icu.text.CharsetMatch ) ; } } } java.util.Collections . void ( java.util.ArrayList<com.ibm.icu.text.CharsetMatch> ) ; java.util.Collections . void ( java.util.ArrayList<com.ibm.icu.text.CharsetMatch> ) ; CharsetMatch [] com.ibm.icu.text.CharsetMatch[] = new CharsetMatch [ java.util.ArrayList<com.ibm.icu.text.CharsetMatch> . size ( ) ] ; com.ibm.icu.text.CharsetMatch[] = java.util.ArrayList<com.ibm.icu.text.CharsetMatch> . toArray ( com.ibm.icu.text.CharsetMatch[] ) ; return com.ibm.icu.text.CharsetMatch[] ; }  <METHOD_END>
<METHOD_START> public java.io.Reader java.io.Reader ( java.io.InputStream java.io.InputStream , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; try { com.ibm.icu.text.CharsetDetector ( java.io.InputStream ) ; CharsetMatch com.ibm.icu.text.CharsetMatch = com.ibm.icu.text.CharsetMatch ( ) ; if ( com.ibm.icu.text.CharsetMatch == null ) { return null ; } return com.ibm.icu.text.CharsetMatch . getReader ( ) ; } catch ( java.io.IOException java.io.IOException ) { return null ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( byte [] byte[] , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; try { com.ibm.icu.text.CharsetDetector ( byte[] ) ; CharsetMatch com.ibm.icu.text.CharsetMatch = com.ibm.icu.text.CharsetMatch ( ) ; if ( com.ibm.icu.text.CharsetMatch == null ) { return null ; } return com.ibm.icu.text.CharsetMatch . getString ( - NUMBER ) ; } catch ( java.io.IOException java.io.IOException ) { return null ; } }  <METHOD_END>
<METHOD_START> public static java.lang.String [] java.lang.String[] ( ) { java.lang.String [] java.lang.String[] = new java.lang.String [ java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { java.lang.String[] [ int ] = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) . com.ibm.icu.text.CharsetRecognizer . getName ( ) ; } return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( boolean boolean ) { boolean boolean = boolean ; boolean = boolean ; return boolean ; }  <METHOD_END>
<METHOD_START> private void void ( ) { int int = NUMBER ; int int = NUMBER ; byte byte ; boolean boolean = false ; int int = NUMBER ; int int = NUMBER ; if ( boolean ) { for ( int = NUMBER ; int < int && int < byte[] . int ; int ++ ) { byte = byte[] [ int ] ; if ( byte == ( byte ) '<' ) { if ( boolean ) { int ++ ; } boolean = true ; int ++ ; } if ( ! boolean ) { byte[] [ int ++ ] = byte ; } if ( byte == ( byte ) '>' ) { boolean = false ; } } int = int ; } if ( int < NUMBER || int / NUMBER < int || ( int < NUMBER && int > NUMBER ) ) { int int = int ; if ( int > int ) { int = int ; } for ( int = NUMBER ; int < int ; int ++ ) { byte[] [ int ] = byte[] [ int ] ; } int = int ; } java.util.Arrays . void ( short[] , ( short ) NUMBER ) ; for ( int = NUMBER ; int < int ; int ++ ) { int int = byte[] [ int ] & NUMBER ; short[] [ int ] ++ ; } boolean = false ; for ( int int = NUMBER ; int <= NUMBER ; int += NUMBER ) { if ( short[] [ int ] != NUMBER ) { boolean = true ; break; } } }  <METHOD_END>
<METHOD_START> void ( CharsetRecognizer com.ibm.icu.text.CharsetRecognizer , boolean boolean ) { this . com.ibm.icu.text.CharsetRecognizer = com.ibm.icu.text.CharsetRecognizer ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public java.lang.String [] java.lang.String[] ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ) ; for ( int int = NUMBER ; int < java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ; int ++ ) { com.ibm.icu.text.CharsetDetector.CSRecognizerInfo com.ibm.icu.text.CharsetDetector.CSRecognizerInfo = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) ; boolean boolean = ( boolean[] == null ) ? com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . boolean : boolean[] [ int ] ; if ( boolean ) { java.util.List<java.lang.String> . boolean ( com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . com.ibm.icu.text.CharsetRecognizer . getName ( ) ) ; } } return java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public com.ibm.icu.text.CharsetDetector com.ibm.icu.text.CharsetDetector ( java.lang.String java.lang.String , boolean boolean ) { int int = - NUMBER ; boolean boolean = false ; for ( int int = NUMBER ; int < java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ; int ++ ) { com.ibm.icu.text.CharsetDetector.CSRecognizerInfo com.ibm.icu.text.CharsetDetector.CSRecognizerInfo = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) ; if ( com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . com.ibm.icu.text.CharsetRecognizer . getName ( ) . equals ( java.lang.String ) ) { int = int ; boolean = ( com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . boolean == boolean ) ; break; } } if ( int < NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING + STRING + java.lang.String + STRING ) ; } if ( boolean[] == null && ! boolean ) { boolean[] = new boolean [ java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ] ; for ( int int = NUMBER ; int < java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ; int ++ ) { boolean[] [ int ] = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) . boolean ; } } if ( boolean[] != null ) { boolean[] [ int ] = boolean ; } return this ; }  <METHOD_END>
<METHOD_START> public java.io.Reader java.io.Reader ( ) { java.io.InputStream java.io.InputStream = java.io.InputStream ; if ( java.io.InputStream == null ) { java.io.InputStream = new java.io.ByteArrayInputStream ( byte[] , NUMBER , int ) ; } try { java.io.InputStream . void ( ) ; return new java.io.InputStreamReader ( java.io.InputStream , java.lang.String ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { return null ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) java . io . java.io.IOException { return java.lang.String ( - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( int int ) throws java . io . java.io.IOException { java.lang.String java.lang.String = null ; if ( java.io.InputStream != null ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; char [] char[] = new char [ NUMBER ] ; java.io.Reader java.io.Reader = java.io.Reader ( ) ; int int = int < NUMBER ? java.lang.Integer . int : int ; int int = NUMBER ; while ( ( int = java.io.Reader . int ( char[] , NUMBER , java.lang.Math . int ( int , NUMBER ) ) ) >= NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( char[] , NUMBER , int ) ; int -= int ; } java.io.Reader . void ( ) ; return java.lang.StringBuilder . java.lang.String ( ) ; } else { java.lang.String java.lang.String = java.lang.String ( ) ; int int = java.lang.String . int ( STRING ) < NUMBER ? java.lang.String . int ( STRING ) : java.lang.String . int ( STRING ) ; if ( int > NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; } java.lang.String = new java.lang.String ( byte[] , java.lang.String ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ) { int int = NUMBER ; if ( this . int > com.ibm.icu.text.CharsetMatch . int ) { int = NUMBER ; } else if ( this . int < com.ibm.icu.text.CharsetMatch . int ) { int = - NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> void ( CharsetDetector com.ibm.icu.text.CharsetDetector , CharsetRecognizer com.ibm.icu.text.CharsetRecognizer , int int ) { int = int ; if ( det . fInputStream == null ) { byte[] = det . fRawInput ; int = det . fRawLength ; } java.io.InputStream = det . fInputStream ; java.lang.String = com.ibm.icu.text.CharsetRecognizer . getName ( ) ; java.lang.String = com.ibm.icu.text.CharsetRecognizer . getLanguage ( ) ; }  <METHOD_END>
<METHOD_START> void ( CharsetDetector com.ibm.icu.text.CharsetDetector , CharsetRecognizer com.ibm.icu.text.CharsetRecognizer , int int , java.lang.String java.lang.String , java.lang.String java.lang.String ) { int = int ; if ( det . fInputStream == null ) { byte[] = det . fRawInput ; int = det . fRawLength ; } java.io.InputStream = det . fInputStream ; java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> int int ( byte [] byte[] , int int , byte [] [] byte[][] ) { int int , int ; int int ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int ; scanInput : for ( int = NUMBER ; int < int ; int ++ ) { if ( byte[] [ int ] == NUMBER ) { checkEscapes : for ( int = NUMBER ; int < byte[][] . int ; int ++ ) { byte [] byte[] = byte[][] [ int ] ; if ( ( int - int ) < byte[] . int ) { continue checkEscapes ; } for ( int = NUMBER ; int < byte[] . int ; int ++ ) { if ( byte[] [ int ] != byte[] [ int + int ] ) { continue checkEscapes ; } } int ++ ; int += byte[] . int - NUMBER ; continue scanInput ; } int ++ ; } if ( byte[] [ int ] == NUMBER || byte[] [ int ] == NUMBER ) { int ++ ; } } if ( int == NUMBER ) { return NUMBER ; } int = ( NUMBER * int - NUMBER * int ) / ( int + int ) ; if ( int + int < NUMBER ) { int -= ( NUMBER - ( int + int ) ) * NUMBER ; } if ( int < NUMBER ) { int = NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( det . fInputBytes , det . fInputLen , byte[][] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( det . fInputBytes , det . fInputLen , byte[][] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( det . fInputBytes , det . fInputLen , byte[][] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , int [] int[] ) { @ java.lang.SuppressWarnings ( STRING ) int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar = new com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar ( ) ; detectBlock : { for ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . void ( ) ; boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , com.ibm.icu.text.CharsetDetector ) ;) { int ++ ; if ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean ) { int ++ ; } else { long long = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int & NUMBER ; if ( long <= NUMBER ) { int ++ ; } else { int ++ ; if ( int[] != null ) { if ( java.util.Arrays . int ( int[] , ( int ) long ) >= NUMBER ) { int ++ ; } } } } if ( int >= NUMBER && int * NUMBER >= int ) { break detectBlock ; } } if ( int <= NUMBER && int == NUMBER ) { if ( int == NUMBER && int < NUMBER ) { int = NUMBER ; } else { int = NUMBER ; } break detectBlock ; } if ( int < NUMBER * int ) { int = NUMBER ; break detectBlock ; } if ( int[] == null ) { int = NUMBER + int - NUMBER * int ; if ( int > NUMBER ) { int = NUMBER ; } } else { double double = java.lang.Math . double ( ( float ) int / NUMBER ) ; double double = NUMBER / double ; int = ( int ) ( java.lang.Math . double ( int + NUMBER ) * double + NUMBER ) ; int = java.lang.Math . int ( int , NUMBER ) ; } } return int ; }  <METHOD_END>
<METHOD_START> void void ( ) { int = NUMBER ; int = - NUMBER ; int = NUMBER ; boolean = false ; boolean = false ; }  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { if ( int >= det . fRawLength ) { boolean = true ; return - NUMBER ; } int int = ( int ) det . fRawInput [ int ++ ] & NUMBER ; return int ; }  <METHOD_END>
<METHOD_START> abstract boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector );  <METHOD_END>
<METHOD_START> boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = false ; int int ; int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { return false ; } if ( int <= NUMBER || ( int > NUMBER && int <= NUMBER ) ) { return true ; } int int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { return false ; } com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( int << NUMBER ) | int ; if ( ! ( ( int >= NUMBER && int <= NUMBER ) || ( int >= NUMBER && int <= NUMBER ) ) ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } return true ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = false ; int int ; int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { return false ; } if ( int <= NUMBER || int == NUMBER ) { return true ; } int int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { return false ; } com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | int ; if ( int < NUMBER || int == NUMBER || int == NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } return true ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = false ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; buildChar : { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; break buildChar ; } if ( int <= NUMBER ) { break buildChar ; } int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | int ; if ( int >= NUMBER && int <= NUMBER ) { if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } break buildChar ; } if ( int == NUMBER ) { if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } break buildChar ; } if ( int == NUMBER ) { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | int ; if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } } } return ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean == false ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = false ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; buildChar : { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; break buildChar ; } if ( int <= NUMBER ) { break buildChar ; } int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | int ; if ( int >= NUMBER && int <= NUMBER ) { if ( ( int >= NUMBER && int <= NUMBER ) || ( int >= NUMBER && int <= NUMBER ) ) { break buildChar ; } if ( int >= NUMBER && int <= NUMBER ) { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int >= NUMBER && int <= NUMBER ) { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int >= NUMBER && int <= NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | ( int << NUMBER ) | int ; break buildChar ; } } } com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; break buildChar ; } } return ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean == false ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> abstract com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector );  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public void ( int [] int[] , byte [] byte[] ) { int[] = int[] ; byte[] = byte[] ; int = NUMBER ; int = int = NUMBER ; }  <METHOD_END>
<METHOD_START> private static int int ( int [] int[] , int int ) { int int = NUMBER ; if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int ] > int ) { int -= NUMBER ; } if ( int < NUMBER || int[] [ int ] != int ) { return - NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { int += NUMBER ; if ( int ( int[] , int ) >= NUMBER ) { int += NUMBER ; } }  <METHOD_END>
<METHOD_START> protected void void ( int int ) { int = ( ( int << NUMBER ) + ( int & NUMBER ) ) & int ; void ( int ) ; }  <METHOD_END>
<METHOD_START> private int int ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { if ( int >= det . fInputLen ) { return - NUMBER ; } return det . fInputBytes [ int ++ ] & NUMBER ; }  <METHOD_END>
<METHOD_START> protected void void ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int ; boolean boolean = false ; while ( ( int = int ( com.ibm.icu.text.CharsetDetector ) ) >= NUMBER ) { byte byte = byte[] [ int ] ; if ( byte != NUMBER ) { if ( ! ( byte == byte && boolean ) ) { void ( byte ) ; } boolean = ( byte == byte ) ; } } }  <METHOD_END>
<METHOD_START> public int int ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { return int ( com.ibm.icu.text.CharsetDetector , ( byte ) NUMBER ) ; }  <METHOD_END>
<METHOD_START> public int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , byte byte ) { this . byte = byte ; void ( com.ibm.icu.text.CharsetDetector ) ; void ( byte ) ; double double = ( double ) int / ( double ) int ; if ( double > NUMBER ) { return NUMBER ; } return ( int ) ( double * NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( int [] int[] , byte [] byte[] ) { super( int[] , byte[] ); }  <METHOD_END>
<METHOD_START> private byte byte ( byte byte ) { if( byte == ( byte ) NUMBER || byte == ( byte ) NUMBER ) { return ( byte ) NUMBER ; } else if( byte == ( byte ) NUMBER || byte == ( byte ) NUMBER ) { return ( byte ) NUMBER ; } else if( byte == ( byte ) NUMBER || byte == ( byte ) NUMBER ) { return ( byte ) NUMBER ; } else return ( byte ) NUMBER ; }  <METHOD_END>
<METHOD_START> private int int ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { if ( int >= det . fInputLen || det . fInputBytes [ int ] == NUMBER ) { return - NUMBER ; } int int ; byte = byte ( det . fInputBytes [ int ] ) ; if( byte != ( byte ) NUMBER ) int = NUMBER & NUMBER ; else int = byte[] [ det . fInputBytes [ int ] & NUMBER ] & NUMBER ; int ++ ; return int ; }  <METHOD_END>
<METHOD_START> protected void void ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int ; boolean boolean = false ; while ( ( int = int ( com.ibm.icu.text.CharsetDetector ) ) >= NUMBER ) { byte byte = byte[] [ int ] ; if ( byte != NUMBER ) { if ( ! ( byte == byte && boolean ) ) { void ( byte ) ; } boolean = ( byte == byte ) ; } if( byte != ( byte ) NUMBER ) { byte = byte[] [ byte & NUMBER ] ; if ( byte != NUMBER ) { if ( ! ( byte == byte && boolean ) ) { void ( byte ) ; } boolean = ( byte == byte ) ; } } } }  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , int [] int[] , byte [] byte[] ) { return int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; }  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , int [] int[] , byte [] byte[] , byte byte ) { com.ibm.icu.text.CharsetRecog_sbcs.NGramParser com.ibm.icu.text.CharsetRecog_sbcs.NGramParser = new com.ibm.icu.text.CharsetRecog_sbcs.NGramParser ( int[] , byte[] ) ; return com.ibm.icu.text.CharsetRecog_sbcs.NGramParser . int ( com.ibm.icu.text.CharsetDetector , byte ) ; }  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , int [] int[] , byte [] byte[] , byte byte ) { com.ibm.icu.text.CharsetRecog_sbcs.NGramParser_IBM420 com.ibm.icu.text.CharsetRecog_sbcs.NGramParser_IBM420 = new com.ibm.icu.text.CharsetRecog_sbcs.NGramParser_IBM420 ( int[] , byte[] ) ; return com.ibm.icu.text.CharsetRecog_sbcs.NGramParser_IBM420 . int ( com.ibm.icu.text.CharsetDetector , byte ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , int [] int[] ) { java.lang.String = java.lang.String ; int[] = int[] ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = - NUMBER ; java.lang.String java.lang.String = null ; for ( com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang : com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang[] ) { int int = int ( com.ibm.icu.text.CharsetDetector , com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang . int[] , byte[] ) ; if ( int > int ) { int = int ; java.lang.String = com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang . java.lang.String ; } } return int <= NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = - NUMBER ; java.lang.String java.lang.String = null ; for ( com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang : com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang[] ) { int int = int ( com.ibm.icu.text.CharsetDetector , com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang . int[] , byte[] ) ; if ( int > int ) { int = int ; java.lang.String = com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang . java.lang.String ; } } return int <= NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> abstract com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector );  <METHOD_END>
<METHOD_START> static int int ( byte byte , byte byte ) { return ( ( byte & NUMBER ) << NUMBER ) | ( byte & NUMBER ) ; }  <METHOD_END>
<METHOD_START> static int int ( int int , int int ) { if ( int == NUMBER ) { int -= NUMBER ; } else if ( ( int >= NUMBER && int <= NUMBER ) || int == NUMBER ) { int += NUMBER ; } if ( int < NUMBER ) { int = NUMBER ; } else if ( int > NUMBER ) { int = NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { byte [] byte[] = det . fRawInput ; int int = NUMBER ; int int = java.lang.Math . int ( byte[] . int , NUMBER ) ; for ( int int = NUMBER ; int < int - NUMBER ; int += NUMBER ) { int int = int ( byte[] [ int ] , byte[] [ int + NUMBER ] ) ; if ( int == NUMBER && int == NUMBER ) { int = NUMBER ; break; } int = int ( int , int ) ; if ( int == NUMBER || int == NUMBER ) { break; } } if ( int < NUMBER && int < NUMBER ) { int = NUMBER ; } if ( int > NUMBER ) { return new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; } return null ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { byte [] byte[] = det . fRawInput ; int int = NUMBER ; int int = java.lang.Math . int ( byte[] . int , NUMBER ) ; for ( int int = NUMBER ; int < int - NUMBER ; int += NUMBER ) { int int = int ( byte[] [ int + NUMBER ] , byte[] [ int ] ) ; if ( int == NUMBER && int == NUMBER ) { int = NUMBER ; break; } int = int ( int , int ) ; if ( int == NUMBER || int == NUMBER ) { break; } } if ( int < NUMBER && int < NUMBER ) { int = NUMBER ; } if ( int > NUMBER ) { return new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; } return null ; }  <METHOD_END>
<METHOD_START> abstract int int ( byte [] byte[] , int int );  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { byte [] byte[] = det . fRawInput ; int int = ( det . fRawLength / NUMBER ) * NUMBER ; int int = NUMBER ; int int = NUMBER ; boolean boolean = false ; int int = NUMBER ; if ( int == NUMBER ) { return null ; } if ( int ( byte[] , NUMBER ) == NUMBER ) { boolean = true ; } for( int int = NUMBER ; int < int ; int += NUMBER ) { int int = int ( byte[] , int ) ; if ( int < NUMBER || int >= NUMBER || ( int >= NUMBER && int <= NUMBER ) ) { int += NUMBER ; } else { int += NUMBER ; } } if ( boolean && int == NUMBER ) { int = NUMBER ; } else if ( boolean && int > int * NUMBER ) { int = NUMBER ; } else if ( int > NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int > NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int > int * NUMBER ) { int = NUMBER ; } return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> int int ( byte [] byte[] , int int ) { return ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> int int ( byte [] byte[] , int int ) { return ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { boolean boolean = false ; int int = NUMBER ; int int = NUMBER ; byte byte[] [] = det . fRawInput ; int int ; int int = NUMBER ; int int ; if ( det . fRawLength >= NUMBER && ( byte[] [ NUMBER ] & NUMBER ) == NUMBER && ( byte[] [ NUMBER ] & NUMBER ) == NUMBER && ( byte[] [ NUMBER ] & NUMBER ) == NUMBER ) { boolean = true ; } for ( int = NUMBER ; int < det . fRawLength ; int ++ ) { int int = byte[] [ int ] ; if ( ( int & NUMBER ) == NUMBER ) { continue; } if ( ( int & NUMBER ) == NUMBER ) { int = NUMBER ; } else if ( ( int & NUMBER ) == NUMBER ) { int = NUMBER ; } else if ( ( int & NUMBER ) == NUMBER ) { int = NUMBER ; } else { int ++ ; continue; } for (;;) { int ++ ; if ( int >= det . fRawLength ) { break; } int = byte[] [ int ] ; if ( ( int & NUMBER ) != NUMBER ) { int ++ ; break; } if ( -- int == NUMBER ) { int ++ ; break; } } } int = NUMBER ; if ( boolean && int == NUMBER ) { int = NUMBER ; } else if ( boolean && int > int * NUMBER ) { int = NUMBER ; } else if ( int > NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int > NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int == NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int > int * NUMBER ) { int = NUMBER ; } return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onCreate ( ) ; org.ligi.passandroid.AppComponent = org.ligi.passandroid.AppComponent ( ) ; AppCompatDelegate . setCompatVectorFromResourcesEnabled ( true ) ; void ( ) ; AndroidThreeTen . init ( this ) ; void ( ) ; AppCompatDelegate . setDefaultNightMode ( org.ligi.passandroid.AppComponent . settings ( ) . getNightMode ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { LeakCanary . install ( this ) ; }  <METHOD_END>
<METHOD_START> public org.ligi.passandroid.AppComponent org.ligi.passandroid.AppComponent ( ) { return DaggerAppComponent . builder ( ) . appModule ( new AppModule ( this ) ) . trackerModule ( new TrackerModule ( this ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { TraceDroid . init ( this ) ; Log . setTAG ( STRING ) ; }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.AppComponent org.ligi.passandroid.AppComponent ( ) { return org.ligi.passandroid.AppComponent ; }  <METHOD_END>
<METHOD_START> @ VisibleForTesting public static void void ( AppComponent org.ligi.passandroid.AppComponent ) { org.ligi.passandroid.AppComponent = org.ligi.passandroid.AppComponent ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context org.ligi.passandroid.Context , Intent org.ligi.passandroid.Intent ) { java.lang.String java.lang.String = org.ligi.passandroid.Intent . getStringExtra ( STRING ) ; if ( java.lang.String != null ) { final Intent org.ligi.passandroid.Intent = new Intent ( org.ligi.passandroid.Context , PassImportActivity .class ) ; org.ligi.passandroid.Intent . setFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; org.ligi.passandroid.Intent . setData ( Uri . parse ( java.lang.String ) ) ; org.ligi.passandroid.Context . startActivity ( org.ligi.passandroid.Intent ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( boolean ( java.lang.String ) ) { return java.lang.String ( java.lang.String ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( final java.io.File java.io.File ) { final java.lang.String java.lang.String = java.lang.String ( java.io.File ) ; void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ VisibleForTesting public void void ( final java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return; } for ( java.lang.String java.lang.String : java.lang.String . java.lang.String[] ( STRING ) ) { final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; if ( java.lang.String[] . int == NUMBER ) { java.lang.String ( java.lang.String ( java.lang.String[] [ NUMBER ] ) , java.lang.String[] [ NUMBER ] ) ; } } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ) { return java.lang.String ( java.lang.String . java.lang.String ( NUMBER ) ) ; } else { return java.lang.String ; } }  <METHOD_END>
<METHOD_START> @ Nullable public static java.lang.String java.lang.String ( final @ NonNull java.io.File java.io.File ) { try { final byte [] byte[] = new byte [ ( int ) java.io.File . long ( ) ] ; final java.io.DataInputStream java.io.DataInputStream = new java.io.DataInputStream ( new java.io.FileInputStream ( java.io.File ) ) ; java.io.DataInputStream . void ( byte[] ) ; java.io.DataInputStream . void ( ) ; if ( byte[] [ NUMBER ] == ( byte ) NUMBER && byte[] [ NUMBER ] == ( byte ) NUMBER && byte[] [ NUMBER ] == ( byte ) NUMBER ) { final byte [] byte[] = new byte [ byte[] . int - NUMBER ] ; java.lang.System . void ( byte[] , NUMBER , byte[] , NUMBER , byte[] . int ) ; return new java.lang.String ( byte[] , STRING ) ; } final CharsetMatch org.ligi.passandroid.model.CharsetMatch = new CharsetDetector ( ) . setText ( byte[] ) . detect ( ) ; if ( org.ligi.passandroid.model.CharsetMatch != null ) try { return new java.lang.String ( byte[] , org.ligi.passandroid.model.CharsetMatch . getName ( ) ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) {            } return new java.lang.String ( byte[] ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { App . component ( ) . tracker ( ) . trackException ( STRING , java.lang.Throwable , false ) ; java.lang.Throwable . void ( ) ; return null ; } }  <METHOD_END>
<METHOD_START> public void ( final java.io.File java.io.File , final PassStore org.ligi.passandroid.model.PassStore , final Moshi org.ligi.passandroid.model.Moshi ) { super( java.util.Map<java.lang.String,java.lang.String> ( java.io.File , org.ligi.passandroid.model.Moshi ) , org.ligi.passandroid.model.PassStore ); this . java.io.File = java.io.File ; org.ligi.passandroid.model.JsonAdapter<java.util.Map> = org.ligi.passandroid.model.JsonAdapter<java.util.Map> ( org.ligi.passandroid.model.Moshi ) ; }  <METHOD_END>
<METHOD_START> private static org.ligi.passandroid.model.JsonAdapter<java.util.Map> < java.util.Map > org.ligi.passandroid.model.JsonAdapter<java.util.Map> ( Moshi org.ligi.passandroid.model.Moshi ) { return org.ligi.passandroid.model.Moshi . adapter ( java.util.Map .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private static java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( final java.io.File java.io.File , final Moshi org.ligi.passandroid.model.Moshi ) { if ( java.io.File . boolean ( ) ) { try { return ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ) org.ligi.passandroid.model.JsonAdapter<java.util.Map> ( org.ligi.passandroid.model.Moshi ) . fromJson ( Okio . buffer ( Okio . source ( java.io.File ) ) ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } } return new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.ligi.passandroid.model.BufferedSink org.ligi.passandroid.model.BufferedSink ( ) { try { if ( ! java.io.File . boolean ( ) ) { final java.io.File java.io.File = java.io.File . java.io.File ( ) ; if ( ! java.io.File . boolean ( ) ) { java.io.File . boolean ( ) ; } java.io.File . boolean ( ) ; } return Okio . buffer ( Okio . sink ( java.io.File ) ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. processDataChange ( ) ; if ( org.ligi.passandroid.model.JsonAdapter<java.util.Map> != null ) { final BufferedSink org.ligi.passandroid.model.BufferedSink = org.ligi.passandroid.model.BufferedSink ( ) ; if ( org.ligi.passandroid.model.BufferedSink != null ) { try { org.ligi.passandroid.model.JsonAdapter<java.util.Map> . toJson ( org.ligi.passandroid.model.BufferedSink , getTopicByIdMap ( ) ) ; org.ligi.passandroid.model.BufferedSink . close ( ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } } } }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable , boolean boolean );  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String , boolean boolean );  <METHOD_END>
<METHOD_START> void void ( @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.Long java.lang.Long );  <METHOD_END>
<METHOD_START> public void ( Activity org.ligi.passandroid.ui.edit.Activity ) { this . org.ligi.passandroid.ui.edit.Activity = org.ligi.passandroid.ui.edit.Activity ; this . org.ligi.passandroid.ui.edit.Fragment = null ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Fragment org.ligi.passandroid.ui.edit.Fragment ) { this . org.ligi.passandroid.ui.edit.Activity = org.ligi.passandroid.ui.edit.Fragment . getActivity ( ) ; this . org.ligi.passandroid.ui.edit.Fragment = org.ligi.passandroid.ui.edit.Fragment ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { java.lang.String = org.ligi.passandroid.ui.edit.Activity . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { java.lang.String = org.ligi.passandroid.ui.edit.Activity . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { java.lang.String = org.ligi.passandroid.ui.edit.Activity . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { java.lang.String = org.ligi.passandroid.ui.edit.Activity . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public final void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { if ( java.util.List<java.lang.String> . boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ( ) { return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public final void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( ) { return org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( int int ) { return org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> , int ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { return org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> , int int ) { Intent org.ligi.passandroid.ui.edit.Intent = new Intent ( java.lang.String + STRING ) ; org.ligi.passandroid.ui.edit.Intent . addCategory ( Intent . CATEGORY_DEFAULT ) ; if ( java.util.Collection<java.lang.String> != null ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( java.lang.String java.lang.String : java.util.Collection<java.lang.String> ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( ',' ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; } org.ligi.passandroid.ui.edit.Intent . putExtra ( STRING , java.lang.StringBuilder . java.lang.String ( ) ) ; } if ( int >= NUMBER ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( STRING , int ) ; } java.lang.String java.lang.String = java.lang.String ( org.ligi.passandroid.ui.edit.Intent ) ; if ( java.lang.String == null ) { return org.ligi.passandroid.ui.edit.AlertDialog ( ) ; } org.ligi.passandroid.ui.edit.Intent . setPackage ( java.lang.String ) ; org.ligi.passandroid.ui.edit.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; org.ligi.passandroid.ui.edit.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET ) ; void ( org.ligi.passandroid.ui.edit.Intent ) ; void ( org.ligi.passandroid.ui.edit.Intent , int ) ; return null ; }  <METHOD_END>
<METHOD_START> protected void void ( Intent org.ligi.passandroid.ui.edit.Intent , int int ) { if ( org.ligi.passandroid.ui.edit.Fragment == null ) { org.ligi.passandroid.ui.edit.Activity . startActivityForResult ( org.ligi.passandroid.ui.edit.Intent , int ) ; } else { org.ligi.passandroid.ui.edit.Fragment . startActivityForResult ( org.ligi.passandroid.ui.edit.Intent , int ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( Intent org.ligi.passandroid.ui.edit.Intent ) { PackageManager org.ligi.passandroid.ui.edit.PackageManager = org.ligi.passandroid.ui.edit.Activity . getPackageManager ( ) ; java.util.List<org.ligi.passandroid.ui.edit.ResolveInfo> < ResolveInfo > java.util.List<org.ligi.passandroid.ui.edit.ResolveInfo> = org.ligi.passandroid.ui.edit.PackageManager . queryIntentActivities ( org.ligi.passandroid.ui.edit.Intent , PackageManager . MATCH_DEFAULT_ONLY ) ; if ( java.util.List<org.ligi.passandroid.ui.edit.ResolveInfo> != null ) { for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { if ( boolean ( java.util.List<org.ligi.passandroid.ui.edit.ResolveInfo> , java.lang.String ) ) { return java.lang.String ; } } } return null ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Iterable<org.ligi.passandroid.ui.edit.ResolveInfo> < ResolveInfo > java.lang.Iterable<org.ligi.passandroid.ui.edit.ResolveInfo> , java.lang.String java.lang.String ) { for ( ResolveInfo org.ligi.passandroid.ui.edit.ResolveInfo : java.lang.Iterable<org.ligi.passandroid.ui.edit.ResolveInfo> ) { java.lang.String java.lang.String = availableApp . activityInfo . packageName ; if ( java.lang.String . boolean ( java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> private org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( ) { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( org.ligi.passandroid.ui.edit.Activity ) ; AlertDialog.Builder . setTitle ( java.lang.String ) ; AlertDialog.Builder . setMessage ( java.lang.String ) ; AlertDialog.Builder . setPositiveButton ( java.lang.String , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.edit.DialogInterface , int int ) { java.lang.String java.lang.String ; if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String ; } else { java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; } Uri org.ligi.passandroid.ui.edit.Uri = Uri . parse ( STRING + java.lang.String ) ; Intent org.ligi.passandroid.ui.edit.Intent = new Intent ( Intent . ACTION_VIEW , org.ligi.passandroid.ui.edit.Uri ) ; try { if ( org.ligi.passandroid.ui.edit.Fragment == null ) { org.ligi.passandroid.ui.edit.Activity . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } else { org.ligi.passandroid.ui.edit.Fragment . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } } catch ( ActivityNotFoundException org.ligi.passandroid.ui.edit.ActivityNotFoundException ) { Log . w ( java.lang.String , STRING + java.lang.String ) ; } } } ) ; AlertDialog.Builder . setNegativeButton ( java.lang.String , null ) ; AlertDialog.Builder . setCancelable ( true ) ; return AlertDialog.Builder . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.edit.DialogInterface , int int ) { java.lang.String java.lang.String ; if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String ; } else { java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; } Uri org.ligi.passandroid.ui.edit.Uri = Uri . parse ( STRING + java.lang.String ) ; Intent org.ligi.passandroid.ui.edit.Intent = new Intent ( Intent . ACTION_VIEW , org.ligi.passandroid.ui.edit.Uri ) ; try { if ( org.ligi.passandroid.ui.edit.Fragment == null ) { org.ligi.passandroid.ui.edit.Activity . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } else { org.ligi.passandroid.ui.edit.Fragment . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } } catch ( ActivityNotFoundException org.ligi.passandroid.ui.edit.ActivityNotFoundException ) { Log . w ( java.lang.String , STRING + java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( java.lang.CharSequence java.lang.CharSequence ) { return org.ligi.passandroid.ui.edit.AlertDialog ( java.lang.CharSequence , STRING ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence ) { Intent org.ligi.passandroid.ui.edit.Intent = new Intent ( ) ; org.ligi.passandroid.ui.edit.Intent . addCategory ( Intent . CATEGORY_DEFAULT ) ; org.ligi.passandroid.ui.edit.Intent . setAction ( java.lang.String + STRING ) ; org.ligi.passandroid.ui.edit.Intent . putExtra ( STRING , java.lang.CharSequence ) ; org.ligi.passandroid.ui.edit.Intent . putExtra ( STRING , java.lang.CharSequence ) ; java.lang.String java.lang.String = java.lang.String ( org.ligi.passandroid.ui.edit.Intent ) ; if ( java.lang.String == null ) { return org.ligi.passandroid.ui.edit.AlertDialog ( ) ; } org.ligi.passandroid.ui.edit.Intent . setPackage ( java.lang.String ) ; org.ligi.passandroid.ui.edit.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; org.ligi.passandroid.ui.edit.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET ) ; void ( org.ligi.passandroid.ui.edit.Intent ) ; if ( org.ligi.passandroid.ui.edit.Fragment == null ) { org.ligi.passandroid.ui.edit.Activity . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } else { org.ligi.passandroid.ui.edit.Fragment . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } return null ; }  <METHOD_END>
<METHOD_START> private static java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String ... java.lang.String[] ) { return java.util.Collections . java.util.List<java.lang.String> ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( Intent org.ligi.passandroid.ui.edit.Intent ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ; java.lang.Object java.lang.Object = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; if ( java.lang.Object instanceof java.lang.Integer ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Integer ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Long ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Long ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Boolean ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Boolean ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Double ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Double ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Float ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Float ) java.lang.Object ) ; } else if ( java.lang.Object instanceof Bundle ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( Bundle ) java.lang.Object ) ; } else { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , java.lang.Object . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> public void ( Context org.ligi.passandroid.ui.Context , AttributeSet org.ligi.passandroid.ui.AttributeSet ) { super( org.ligi.passandroid.ui.Context , org.ligi.passandroid.ui.AttributeSet ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( CoordinatorLayout org.ligi.passandroid.ui.CoordinatorLayout , FloatingActionsMenu org.ligi.passandroid.ui.FloatingActionsMenu , View org.ligi.passandroid.ui.View ) { return org.ligi.passandroid.ui.View instanceof Snackbar . Snackbar || org.ligi.passandroid.ui.View instanceof AppBarLayout ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( CoordinatorLayout org.ligi.passandroid.ui.CoordinatorLayout , FloatingActionsMenu org.ligi.passandroid.ui.FloatingActionsMenu , View org.ligi.passandroid.ui.View ) { if ( org.ligi.passandroid.ui.View instanceof Snackbar . Snackbar ) { void ( org.ligi.passandroid.ui.FloatingActionsMenu , org.ligi.passandroid.ui.View ) ; } if ( org.ligi.passandroid.ui.View instanceof AppBarLayout ) { final CoordinatorLayout . CoordinatorLayout CoordinatorLayout.LayoutParams = ( CoordinatorLayout . CoordinatorLayout ) org.ligi.passandroid.ui.FloatingActionsMenu . getLayoutParams ( ) ; final int int = lp . bottomMargin ; final int int ; if ( org.ligi.passandroid.ui.FloatingActionsMenu . isExpanded ( ) ) { int = org.ligi.passandroid.ui.FloatingActionsMenu . getHeight ( ) + int ; } else { int = ( int ) ( org.ligi.passandroid.ui.FloatingActionsMenu . getContext ( ) . getResources ( ) . getDimension ( R . dimen . fab_size_normal ) + NUMBER * int ) ; } final float float = ViewCompat . getY ( org.ligi.passandroid.ui.View ) / int ( org.ligi.passandroid.ui.View . getContext ( ) ) ; ViewCompat . setTranslationY ( org.ligi.passandroid.ui.FloatingActionsMenu , - int * float ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final CoordinatorLayout org.ligi.passandroid.ui.CoordinatorLayout , final FloatingActionsMenu org.ligi.passandroid.ui.FloatingActionsMenu , final View org.ligi.passandroid.ui.View ) { super. onDependentViewRemoved ( org.ligi.passandroid.ui.CoordinatorLayout , org.ligi.passandroid.ui.FloatingActionsMenu , org.ligi.passandroid.ui.View ) ; boolean ( org.ligi.passandroid.ui.CoordinatorLayout , org.ligi.passandroid.ui.FloatingActionsMenu , org.ligi.passandroid.ui.View ) ; }  <METHOD_END>
<METHOD_START> private void void ( FloatingActionsMenu org.ligi.passandroid.ui.FloatingActionsMenu , View org.ligi.passandroid.ui.View ) { final float float = ViewCompat . getTranslationY ( org.ligi.passandroid.ui.View ) - org.ligi.passandroid.ui.View . getHeight ( ) ; final float float = java.lang.Math . float ( NUMBER , float ) ; ViewCompat . setTranslationY ( org.ligi.passandroid.ui.FloatingActionsMenu , float ) ; }  <METHOD_END>
<METHOD_START> private int int ( Context org.ligi.passandroid.ui.Context ) { final TypedArray org.ligi.passandroid.ui.TypedArray = org.ligi.passandroid.ui.Context . getTheme ( ) . obtainStyledAttributes ( new int [] { R . attr . actionBarSize } ) ; int int = ( int ) org.ligi.passandroid.ui.TypedArray . getDimension ( NUMBER , NUMBER ) ; org.ligi.passandroid.ui.TypedArray . recycle ( ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.ligi.passandroid.ui.quirk_fix.Bundle ) { super. onCreate ( org.ligi.passandroid.ui.quirk_fix.Bundle ) ; final java.lang.String java.lang.String = new URLRewriteController ( getTracker ( ) ) . getUrlByUri ( getIntent ( ) . getData ( ) ) ; if ( java.lang.String == null ) { new AlertDialog . AlertDialog ( this ) . setTitle ( STRING ) . setMessage ( STRING + STRING ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { getTracker ( ) . trackException ( STRING , false ) ; final Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( org.ligi.passandroid.ui.quirk_fix.URLRewriteActivity .this , OpenIphoneWebView .class ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setData ( getIntent ( ) . getData ( ) ) ; startActivity ( org.ligi.passandroid.ui.quirk_fix.Intent ) ; } } ) . setNeutralButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( Intent . ACTION_SEND ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_SUBJECT , STRING ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_EMAIL , new java.lang.String [] { STRING } ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_TEXT , getIntent ( ) . getData ( ) . toString ( ) ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setType ( STRING ) ; startActivity ( Intent . createChooser ( org.ligi.passandroid.ui.quirk_fix.Intent , STRING ) ) ; finish ( ) ; } } ) . setNegativeButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { org.ligi.passandroid.ui.quirk_fix.URLRewriteActivity .this . finish ( ) ; } } ) . show ( ) ; return; } final Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( this , PassImportActivity .class ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setData ( Uri . parse ( java.lang.String ) ) ; startActivity ( org.ligi.passandroid.ui.quirk_fix.Intent ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { getTracker ( ) . trackException ( STRING , false ) ; final Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( org.ligi.passandroid.ui.quirk_fix.URLRewriteActivity .this , OpenIphoneWebView .class ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setData ( getIntent ( ) . getData ( ) ) ; startActivity ( org.ligi.passandroid.ui.quirk_fix.Intent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( Intent . ACTION_SEND ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_SUBJECT , STRING ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_EMAIL , new java.lang.String [] { STRING } ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_TEXT , getIntent ( ) . getData ( ) . toString ( ) ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setType ( STRING ) ; startActivity ( Intent . createChooser ( org.ligi.passandroid.ui.quirk_fix.Intent , STRING ) ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { org.ligi.passandroid.ui.quirk_fix.URLRewriteActivity .this . finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable , boolean boolean ) { if ( boolean ) { Log . w ( STRING + java.lang.String + STRING + java.lang.Throwable ) ; } else { Log . w ( STRING + java.lang.String + STRING + java.lang.Throwable ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , boolean boolean ) { if ( boolean ) { Log . w ( STRING + java.lang.String ) ; } else { Log . w ( STRING + java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Long java.lang.Long ) {    }  <METHOD_END>
<METHOD_START> public void ( App org.ligi.passandroid.App ) { this . org.ligi.passandroid.App = org.ligi.passandroid.App ; }  <METHOD_END>
<METHOD_START> @ Singleton @ Provides public org.ligi.passandroid.Tracker org.ligi.passandroid.Tracker ( ) { return new NotTracker ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context org.ligi.passandroid.maps.Context ) { return false ; }  <METHOD_END>
<METHOD_START> public static void void ( Context org.ligi.passandroid.maps.Context ) {    }  <METHOD_END>
<METHOD_START> public void ( Context org.ligi.passandroid.Context ) { this . org.ligi.passandroid.Context = org.ligi.passandroid.Context ; final GoogleAnalytics org.ligi.passandroid.GoogleAnalytics = GoogleAnalytics . getInstance ( org.ligi.passandroid.Context ) ; com.google.android.gms.analytics.Tracker = org.ligi.passandroid.GoogleAnalytics . newTracker ( R . xml . analytics ) ; com.google.android.gms.analytics.Tracker . enableAutoActivityTracking ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable , boolean boolean ) { final java.lang.String java.lang.String = new StandardExceptionParser ( org.ligi.passandroid.Context , null ) . getDescription ( java.lang.Thread . java.lang.Thread ( ) . java.lang.String ( ) , java.lang.Throwable ) ; final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new HitBuilders . HitBuilders ( ) . setDescription ( java.lang.String + STRING + java.lang.String ) . setFatal ( boolean ) . build ( ) ; com.google.android.gms.analytics.Tracker . send ( java.util.Map<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , boolean boolean ) { com.google.android.gms.analytics.Tracker . send ( new HitBuilders . HitBuilders ( ) . setDescription ( java.lang.String ) . setFatal ( boolean ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.Long java.lang.Long ) { final HitBuilders . HitBuilders HitBuilders.EventBuilder = new HitBuilders . HitBuilders ( ) ; if ( java.lang.String != null ) { HitBuilders.EventBuilder . setCategory ( java.lang.String ) ; } if ( java.lang.String != null ) { HitBuilders.EventBuilder . setAction ( java.lang.String ) ; } if ( java.lang.String != null ) { HitBuilders.EventBuilder . setLabel ( java.lang.String ) ; } if ( java.lang.Long != null ) { HitBuilders.EventBuilder . setValue ( java.lang.Long ) ; } try { com.google.android.gms.analytics.Tracker . send ( HitBuilders.EventBuilder . build ( ) ) ; } catch ( java.util.ConcurrentModificationException java.util.ConcurrentModificationException ) { } }  <METHOD_END>
<METHOD_START> public void ( App org.ligi.passandroid.App ) { this . org.ligi.passandroid.App = org.ligi.passandroid.App ; }  <METHOD_END>
<METHOD_START> @ Singleton @ Provides org.ligi.passandroid.Tracker org.ligi.passandroid.Tracker ( ) { return new AnalyticsTracker ( org.ligi.passandroid.App ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Named ( STRING ) java.lang.String java.lang.String ) throws java.io.IOException { if ( java.lang.String == null || java.lang.String . java.lang.String ( ) . int ( ) == NUMBER ) { java.util.logging.Logger . void ( STRING ) ; return; } if ( java.lang.String . int ( ) > NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , NUMBER ) + STRING ; } Sender org.ligi.passandroid.backend.Sender = new Sender ( java.lang.String ) ; Message org.ligi.passandroid.backend.Message = new Message . Message ( ) . addData ( STRING , java.lang.String ) . build ( ) ; java.util.List<org.ligi.passandroid.backend.RegistrationRecord> < RegistrationRecord > java.util.List<org.ligi.passandroid.backend.RegistrationRecord> = ofy ( ) . load ( ) . type ( RegistrationRecord .class ) . limit ( NUMBER ) . list ( ) ; for ( RegistrationRecord org.ligi.passandroid.backend.RegistrationRecord : java.util.List<org.ligi.passandroid.backend.RegistrationRecord> ) { Result org.ligi.passandroid.backend.Result = org.ligi.passandroid.backend.Sender . send ( org.ligi.passandroid.backend.Message , org.ligi.passandroid.backend.RegistrationRecord . getRegId ( ) , NUMBER ) ; if ( org.ligi.passandroid.backend.Result . getMessageId ( ) != null ) { java.util.logging.Logger . void ( STRING + org.ligi.passandroid.backend.RegistrationRecord . getRegId ( ) ) ; java.lang.String java.lang.String = org.ligi.passandroid.backend.Result . getCanonicalRegistrationId ( ) ; if ( java.lang.String != null ) { java.util.logging.Logger . void ( STRING + org.ligi.passandroid.backend.RegistrationRecord . getRegId ( ) + STRING + java.lang.String ) ; org.ligi.passandroid.backend.RegistrationRecord . setRegId ( java.lang.String ) ; ofy ( ) . save ( ) . entity ( org.ligi.passandroid.backend.RegistrationRecord ) . now ( ) ; } } else { java.lang.String java.lang.String = org.ligi.passandroid.backend.Result . getErrorCodeName ( ) ; if ( java.lang.String . boolean ( Constants . ERROR_NOT_REGISTERED ) ) { java.util.logging.Logger . void ( STRING + org.ligi.passandroid.backend.RegistrationRecord . getRegId ( ) + STRING ) ; ofy ( ) . delete ( ) . entity ( org.ligi.passandroid.backend.RegistrationRecord ) . now ( ) ; } else { java.util.logging.Logger . void ( STRING + java.lang.String ) ; } } } }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.backend.Objectify org.ligi.passandroid.backend.Objectify ( ) { return ObjectifyService . ofy ( ) ; }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.backend.ObjectifyFactory org.ligi.passandroid.backend.ObjectifyFactory ( ) { return ObjectifyService . factory ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( HttpServletRequest org.ligi.passandroid.backend.HttpServletRequest , HttpServletResponse org.ligi.passandroid.backend.HttpServletResponse ) throws org.ligi.passandroid.backend.ServletException , java.io.IOException { org.ligi.passandroid.backend.HttpServletResponse . sendRedirect ( STRING + org.ligi.passandroid.backend.HttpServletRequest . getParameter ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ ApiMethod ( name = STRING ) public void void ( @ Named ( STRING ) java.lang.String java.lang.String ) { if ( org.ligi.passandroid.backend.RegistrationRecord ( java.lang.String ) != null ) { java.util.logging.Logger . void ( STRING + java.lang.String + STRING ) ; return; } RegistrationRecord org.ligi.passandroid.backend.RegistrationRecord = new RegistrationRecord ( ) ; org.ligi.passandroid.backend.RegistrationRecord . setRegId ( java.lang.String ) ; ofy ( ) . save ( ) . entity ( org.ligi.passandroid.backend.RegistrationRecord ) . now ( ) ; }  <METHOD_END>
<METHOD_START> @ ApiMethod ( name = STRING ) public void void ( @ Named ( STRING ) java.lang.String java.lang.String ) { RegistrationRecord org.ligi.passandroid.backend.RegistrationRecord = org.ligi.passandroid.backend.RegistrationRecord ( java.lang.String ) ; if ( org.ligi.passandroid.backend.RegistrationRecord == null ) { java.util.logging.Logger . void ( STRING + java.lang.String + STRING ) ; return; } ofy ( ) . delete ( ) . entity ( org.ligi.passandroid.backend.RegistrationRecord ) . now ( ) ; }  <METHOD_END>
<METHOD_START> @ ApiMethod ( name = STRING ) public org.ligi.passandroid.backend.CollectionResponse<org.ligi.passandroid.backend.RegistrationRecord> < RegistrationRecord > org.ligi.passandroid.backend.CollectionResponse<org.ligi.passandroid.backend.RegistrationRecord> ( @ Named ( STRING ) int int ) { java.util.List<org.ligi.passandroid.backend.RegistrationRecord> < RegistrationRecord > java.util.List<org.ligi.passandroid.backend.RegistrationRecord> = ofy ( ) . load ( ) . type ( RegistrationRecord .class ) . limit ( int ) . list ( ) ; return CollectionResponse .< RegistrationRecord > builder ( ) . setItems ( java.util.List<org.ligi.passandroid.backend.RegistrationRecord> ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private org.ligi.passandroid.backend.RegistrationRecord org.ligi.passandroid.backend.RegistrationRecord ( java.lang.String java.lang.String ) { return ofy ( ) . load ( ) . type ( RegistrationRecord .class ) . filter ( STRING , java.lang.String ) . first ( ) . now ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; getActivity ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. tearDown ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { onView ( withId ( R . id . button_main ) ) . check ( matches ( withText ( STRING ) ) ) ; onView ( withId ( R . id . button_main ) ) . perform ( click ( ) ) ; onView ( withId ( R . id . textview_hello ) ) . check ( matches ( withText ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.HelloAndroidActivity . getResources ( ) . getString ( R . string . app_name ) ; assertThat ( java.lang.String , equalTo ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; com.octo.android.sample.ui.HelloAndroidActivity . setComputer ( null ) ; Button com.octo.android.sample.ui.Button = ( Button ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.Button . performClick ( ) ; TextView com.octo.android.sample.ui.TextView = ( TextView ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.TextView . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; Button com.octo.android.sample.ui.Button = ( Button ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.Button . performClick ( ) ; TextView com.octo.android.sample.ui.TextView = ( TextView ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.TextView . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( java.lang.String . java.lang.String ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; Computer com.octo.android.sample.ui.Computer = EasyMock . createMock ( Computer .class ) ; EasyMock . expect ( com.octo.android.sample.ui.Computer . getResult ( ) ) . andReturn ( int ) ; com.octo.android.sample.ui.HelloAndroidActivity . setComputer ( com.octo.android.sample.ui.Computer ) ; EasyMock . replay ( com.octo.android.sample.ui.Computer ) ; Button com.octo.android.sample.ui.Button = ( Button ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.Button . performClick ( ) ; EasyMock . verify ( com.octo.android.sample.ui.Computer ) ; TextView com.octo.android.sample.ui.TextView = ( TextView ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.TextView . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( java.lang.String . java.lang.String ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; Computer com.octo.android.sample.ui.Computer = Mockito . mock ( Computer .class ) ; Mockito . when ( com.octo.android.sample.ui.Computer . getResult ( ) ) . thenReturn ( int ) ; com.octo.android.sample.ui.HelloAndroidActivity . setComputer ( com.octo.android.sample.ui.Computer ) ; Button com.octo.android.sample.ui.Button = ( Button ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.Button . performClick ( ) ; Mockito . verify ( com.octo.android.sample.ui.Computer , Mockito . times ( NUMBER ) ) . getResult ( ) ; TextView com.octo.android.sample.ui.TextView = ( TextView ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.TextView . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( java.lang.String . java.lang.String ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> @ BoundBox ( boundClass = HelloAndroidActivity .class , maxSuperClass = FragmentActivity .class ) @ Test public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; BoundBoxOfHelloAndroidActivity com.octo.android.sample.ui.BoundBoxOfHelloAndroidActivity = new BoundBoxOfHelloAndroidActivity ( com.octo.android.sample.ui.HelloAndroidActivity ) ; Computer com.octo.android.sample.ui.Computer = Mockito . mock ( Computer .class ) ; Mockito . when ( com.octo.android.sample.ui.Computer . getResult ( ) ) . thenReturn ( int ) ; com.octo.android.sample.ui.BoundBoxOfHelloAndroidActivity . setComputer ( com.octo.android.sample.ui.Computer ) ; com.octo.android.sample.ui.BoundBoxOfHelloAndroidActivity . boundBox_getButton ( ) . performClick ( ) ; Mockito . verify ( com.octo.android.sample.ui.Computer , Mockito . times ( NUMBER ) ) . getResult ( ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.BoundBoxOfHelloAndroidActivity . boundBox_getTextView ( ) . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( java.lang.String . java.lang.String ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.octo.android.sample.ui.Bundle ) { super. onCreate ( com.octo.android.sample.ui.Bundle ) ; Log . i ( java.lang.String , STRING ) ; setContentView ( R . layout . main ) ; com.octo.android.sample.ui.Button = ( Button ) findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.TextView = ( TextView ) findViewById ( R . id . textview_hello ) ; com.octo.android.sample.ui.Button . setOnClickListener ( new com.octo.android.sample.ui.HelloAndroidActivity.ButtonClickListener ( ) ) ; com.octo.android.sample.ui.Computer = new DummyComputer ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( Computer com.octo.android.sample.ui.Computer ) { this . com.octo.android.sample.ui.Computer = com.octo.android.sample.ui.Computer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.octo.android.sample.ui.View ) { if ( com.octo.android.sample.ui.Computer != null ) { com.octo.android.sample.ui.TextView . setText ( java.lang.String . java.lang.String ( com.octo.android.sample.ui.Computer . getResult ( ) ) ) ; } else { com.octo.android.sample.ui.TextView . setText ( R . string . text_no_computer ) ; } DateTime com.octo.android.sample.ui.DateTime = new DateTime ( ) ; DateTimeFormatter com.octo.android.sample.ui.DateTimeFormatter = DateTimeFormat . forPattern ( STRING ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.DateTimeFormatter . print ( com.octo.android.sample.ui.DateTime ) ; Toast . makeText ( com.octo.android.sample.ui.HelloAndroidActivity .this , java.lang.String , Toast . LENGTH_LONG ) . show ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.BoundBoxOfHelloAndroidActivity = new BoundBoxOfHelloAndroidActivity ( getActivity ( ) ) ; }  <METHOD_END>
<METHOD_START> @ UiThreadTest public void void ( ) java.lang.Exception { com.octo.android.sample.test.BoundBoxOfHelloAndroidActivity . boundBox_getButton ( ) . performClick ( ) ; assertTrue ( com.octo.android.sample.test.BoundBoxOfHelloAndroidActivity . boundBox_getTextView ( ) . getText ( ) . equals ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo = new Solo ( getInstrumentation ( ) , getActivity ( ) ) ; com.octo.android.sample.test.TextView = ( TextView ) getActivity ( ) . findViewById ( R . id . textview_hello ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . clickOnButton ( STRING ) ; org . fest . assertions . api . ANDROID . assertThat ( com.octo.android.sample.test.TextView ) . containsText ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . finishOpenedActivities ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo = new Solo ( getInstrumentation ( ) , getActivity ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . clickOnButton ( STRING ) ; Assert . assertTrue ( com.octo.android.sample.test.Solo . searchText ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . finishOpenedActivities ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo = new Solo ( getInstrumentation ( ) , getActivity ( ) ) ; com.octo.android.sample.test.TextView = ( TextView ) getActivity ( ) . findViewById ( R . id . textview_hello ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { Spoon . screenshot ( getActivity ( ) , STRING ) ; com.octo.android.sample.test.Solo . clickOnButton ( STRING ) ; Spoon . screenshot ( getActivity ( ) , STRING ) ; assertEquals ( STRING , com.octo.android.sample.test.TextView . getText ( ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . finishOpenedActivities ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNotNull ( getActivity ( ) ) ; }  <METHOD_END>
<METHOD_START> @ UiThreadTest public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.test.HelloAndroidActivity = getActivity ( ) ; Computer com.octo.android.sample.test.Computer = EasyMock . createMock ( DummyComputer .class ) ; EasyMock . expect ( com.octo.android.sample.test.Computer . getResult ( ) ) . andReturn ( int ) ; com.octo.android.sample.test.HelloAndroidActivity . setComputer ( com.octo.android.sample.test.Computer ) ; EasyMock . replay ( com.octo.android.sample.test.Computer ) ; Button com.octo.android.sample.test.Button = ( Button ) com.octo.android.sample.test.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.test.Button . performClick ( ) ; EasyMock . verify ( com.octo.android.sample.test.Computer ) ; TextView com.octo.android.sample.test.TextView = ( TextView ) com.octo.android.sample.test.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.test.TextView . getText ( ) . toString ( ) ; assertEquals ( java.lang.String , java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ UiThreadTest public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.test.HelloAndroidActivity = getActivity ( ) ; Computer com.octo.android.sample.test.Computer = Mockito . mock ( Computer .class ) ; Mockito . when ( com.octo.android.sample.test.Computer . getResult ( ) ) . thenReturn ( int ) ; com.octo.android.sample.test.HelloAndroidActivity . setComputer ( com.octo.android.sample.test.Computer ) ; Button com.octo.android.sample.test.Button = ( Button ) com.octo.android.sample.test.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.test.Button . performClick ( ) ; Mockito . verify ( com.octo.android.sample.test.Computer , Mockito . times ( NUMBER ) ) . getResult ( ) ; TextView com.octo.android.sample.test.TextView = ( TextView ) com.octo.android.sample.test.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.test.TextView . getText ( ) . toString ( ) ; assertEquals ( java.lang.String , java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { getUiDevice ( ) . waitForIdle ( ) ; Screenshots . poseForScreenshotNamed ( java.lang.String + STRING + int ++ + STRING + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { this . int = NUMBER ; this . java.lang.String = java.lang.String ; void ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { void ( STRING ) ; getUiDevice ( ) . pressHome ( ) ; super. tearDown ( ) ; }  <METHOD_END>
<METHOD_START> @ LargeTest @ FlakyTest ( tolerance = int ) public void void ( ) com.octo.android.sample.uitest.UiObjectNotFoundException { void ( STRING ) ; void ( STRING ) ; void ( STRING ) ; UiObject com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . packageName ( STRING ) ) ; assertTrue ( STRING , com.octo.android.sample.uitest.UiObject . exists ( ) ) ; }  <METHOD_END>
<METHOD_START> @ LargeTest @ FlakyTest ( tolerance = int ) public void void ( ) com.octo.android.sample.uitest.UiObjectNotFoundException { void ( STRING ) ; void ( STRING ) ; void ( STRING ) ; UiObject com.octo.android.sample.uitest.UiObject ; com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . text ( STRING ) ) ; com.octo.android.sample.uitest.UiObject . waitForExists ( long ) ; if ( ! com.octo.android.sample.uitest.UiObject . exists ( ) ) { com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . text ( STRING ) ) ; } com.octo.android.sample.uitest.UiObject . waitForExists ( long ) ; com.octo.android.sample.uitest.UiObject . click ( ) ; void ( STRING ) ; new UiObject ( new UiSelector ( ) . text ( STRING ) ) . click ( ) ; void ( STRING ) ; new UiObject ( new UiSelector ( ) . text ( STRING ) ) . click ( ) ; void ( STRING ) ; new UiObject ( new UiSelector ( ) . text ( STRING ) ) . click ( ) ; void ( STRING ) ; new UiObject ( new UiSelector ( ) . text ( STRING ) ) . click ( ) ; void ( STRING ) ; assertTrue ( new UiObject ( new UiSelector ( ) . text ( STRING ) ) . waitForExists ( long ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) throws com.octo.android.sample.uitest.UiObjectNotFoundException { getUiDevice ( ) . pressHome ( ) ; new UiObject ( new UiSelector ( ) . description ( STRING ) ) ; UiObject com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . description ( STRING ) ) ; com.octo.android.sample.uitest.UiObject . clickAndWaitForNewWindow ( ) ; UiObject com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . text ( STRING ) ) ; com.octo.android.sample.uitest.UiObject . click ( ) ; UiScrollable com.octo.android.sample.uitest.UiScrollable = new UiScrollable ( new UiSelector ( ) . scrollable ( true ) ) ; com.octo.android.sample.uitest.UiScrollable . setAsHorizontalList ( ) ; com.octo.android.sample.uitest.UiScrollable . setMaxSearchSwipes ( int ) ; UiObject com.octo.android.sample.uitest.UiObject = com.octo.android.sample.uitest.UiScrollable . getChildByText ( new UiSelector ( ) . className ( android . android . android .class . java.lang.String ( ) ) , java.lang.String ) ; com.octo.android.sample.uitest.UiObject . waitForExists ( int ) ; com.octo.android.sample.uitest.UiObject . clickAndWaitForNewWindow ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { getUiDevice ( ) . pressKeyCode ( KeyEvent . KEYCODE_SOFT_LEFT ) ; getUiDevice ( ) . pressKeyCode ( KeyEvent . KEYCODE_SOFT_RIGHT ) ; getUiDevice ( ) . pressKeyCode ( KeyEvent . KEYCODE_MENU ) ; getUiDevice ( ) . pressKeyCode ( KeyEvent . KEYCODE_MENU ) ; }  <METHOD_END>
