<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.ads.Bundle ) { super. onCreate ( org.solovyev.android.ads.Bundle ) ; addPreferencesFromResource ( int ( ) ) ; final Preference org.solovyev.android.ads.Preference = findPreference ( java.lang.String ( ) ) ; org.solovyev.android.ads.Preference . setEnabled ( false ) ; BillingController . registerObserver ( org.solovyev.android.ads.IBillingObserver ) ; BillingController . checkBillingSupported ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this ) ; final java.lang.String java.lang.String = java.lang.String ( ) ; if ( java.lang.String != null ) { final Preference org.solovyev.android.ads.Preference = findPreference ( java.lang.String ) ; if ( org.solovyev.android.ads.Preference != null ) { org.solovyev.android.ads.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference org.solovyev.android.ads.Preference ) { Toast . makeText ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , R . string . c_billing_clearing , Toast . LENGTH_SHORT ) . show ( ) ; void ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , PreferenceManager . getDefaultSharedPreferences ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this ) ) ; return true ; } } ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference org.solovyev.android.ads.Preference ) { Toast . makeText ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , R . string . c_billing_clearing , Toast . LENGTH_SHORT ) . show ( ) ; void ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , PreferenceManager . getDefaultSharedPreferences ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this ) ) ; return true ; }  <METHOD_END>
<METHOD_START> protected abstract int int ( )  <METHOD_END>
<METHOD_START> @ Nullable protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context org.solovyev.android.ads.Context , @ Nonnull SharedPreferences org.solovyev.android.ads.SharedPreferences ) { final SharedPreferences . SharedPreferences SharedPreferences.Editor = org.solovyev.android.ads.SharedPreferences . edit ( ) ; SharedPreferences.Editor . putBoolean ( AbstractBillingObserver . KEY_TRANSACTIONS_RESTORED , false ) ; SharedPreferences.Editor . commit ( ) ; BillingController . dropBillingData ( org.solovyev.android.ads.Context ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { final Preference org.solovyev.android.ads.Preference = findPreference ( java.lang.String ( ) ) ; if ( ! AdsController . getInstance ( ) . isAdFree ( this ) ) { Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; org.solovyev.android.ads.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { public boolean boolean ( Preference org.solovyev.android.ads.Preference ) { if ( BillingController . checkBillingSupported ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this ) != BillingController . BillingStatus . SUPPORTED ) { Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; Toast . makeText ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , R . string . c_billing_error , Toast . LENGTH_LONG ) . show ( ) ; } else { Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; if ( ! AdsController . getInstance ( ) . isAdFree ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this ) ) { Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; Toast . makeText ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , R . string . c_billing_purchasing , Toast . LENGTH_SHORT ) . show ( ) ; BillingController . requestPurchase ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , java.lang.String ( ) , true ) ; } else { org.solovyev.android.ads.Preference . setEnabled ( false ) ; Toast . makeText ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , R . string . c_billing_already_purchased , Toast . LENGTH_SHORT ) . show ( ) ; } } return true ; } } ) ; org.solovyev.android.ads.Preference . setEnabled ( true ) ; } else { Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; org.solovyev.android.ads.Preference . setEnabled ( false ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( Preference org.solovyev.android.ads.Preference ) { if ( BillingController . checkBillingSupported ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this ) != BillingController . BillingStatus . SUPPORTED ) { Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; Toast . makeText ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , R . string . c_billing_error , Toast . LENGTH_LONG ) . show ( ) ; } else { Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; if ( ! AdsController . getInstance ( ) . isAdFree ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this ) ) { Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; Toast . makeText ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , R . string . c_billing_purchasing , Toast . LENGTH_SHORT ) . show ( ) ; BillingController . requestPurchase ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , java.lang.String ( ) , true ) ; } else { org.solovyev.android.ads.Preference . setEnabled ( false ) ; Toast . makeText ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .this , R . string . c_billing_already_purchased , Toast . LENGTH_SHORT ) . show ( ) ; } } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { BillingController . unregisterObserver ( org.solovyev.android.ads.IBillingObserver ) ; super. onDestroy ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { if ( boolean ) { void ( ) ; } else { final Preference org.solovyev.android.ads.Preference = findPreference ( java.lang.String ( ) ) ; org.solovyev.android.ads.Preference . setEnabled ( false ) ; Log . d ( org.solovyev.android.ads.AbstractAdFreePreferenceActivity .class . java.lang.String ( ) , STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PendingIntent org.solovyev.android.ads.PendingIntent ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode org.solovyev.android.ads.ResponseCode ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Transaction . Transaction Transaction.PurchaseState ) { if ( java.lang.String ( ) . boolean ( java.lang.String ) ) { final Preference org.solovyev.android.ads.Preference = findPreference ( java.lang.String ( ) ) ; if ( org.solovyev.android.ads.Preference != null ) { switch ( Transaction.PurchaseState ) { case PURCHASED : org.solovyev.android.ads.Preference . setEnabled ( false ) ; Activities . restartActivity ( this ) ; break; case CANCELLED : org.solovyev.android.ads.Preference . setEnabled ( true ) ; break; case REFUNDED : org.solovyev.android.ads.Preference . setEnabled ( true ) ; break; } } else {			} } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode org.solovyev.android.ads.ResponseCode ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ResponseCode org.solovyev.android.ads.ResponseCode ) { }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.ads.AdsController org.solovyev.android.ads.AdsController ( ) { return org.solovyev.android.ads.AdsController ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.ads.AdView org.solovyev.android.ads.AdView ( @ Nonnull Activity org.solovyev.android.ads.Activity , @ Nonnull java.lang.String java.lang.String , @ Nullable ViewGroup org.solovyev.android.ads.ViewGroup , int int , @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { final ViewGroup org.solovyev.android.ads.ViewGroup = org.solovyev.android.ads.ViewGroup != null ? org.solovyev.android.ads.ViewGroup : ( ViewGroup ) org.solovyev.android.ads.Activity . findViewById ( int ) ; final AdView org.solovyev.android.ads.AdView = new AdView ( org.solovyev.android.ads.Activity , AdSize . SMART_BANNER , java.lang.String ) ; org.solovyev.android.ads.ViewGroup . addView ( org.solovyev.android.ads.AdView ) ; final AdRequest org.solovyev.android.ads.AdRequest = new AdRequest ( ) ; for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { org.solovyev.android.ads.AdRequest . addKeyword ( java.lang.String ) ; } org.solovyev.android.ads.AdView . loadAd ( org.solovyev.android.ads.AdRequest ) ; return org.solovyev.android.ads.AdView ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Application org.solovyev.android.ads.Application , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String , @ Nonnull BillingController . BillingController BillingController.IConfiguration ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; BillingDB . init ( org.solovyev.android.ads.Application ) ; BillingController . setConfiguration ( BillingController.IConfiguration ) ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull Context org.solovyev.android.ads.Context ) { return BillingController . isPurchased ( org.solovyev.android.ads.Context . getApplicationContext ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nonnull Context org.solovyev.android.ads.Context ) { boolean boolean = boolean ( org.solovyev.android.ads.Context ) ; if ( ! boolean ) { if ( ! AbstractBillingObserver . isTransactionsRestored ( org.solovyev.android.ads.Context ) ) { BillingController . restoreTransactions ( org.solovyev.android.ads.Context ) ; boolean = boolean ( org.solovyev.android.ads.Context ) ; } } return boolean ; }  <METHOD_END>
<METHOD_START> @ Nullable public org.solovyev.android.ads.AdView org.solovyev.android.ads.AdView ( @ Nonnull Activity org.solovyev.android.ads.Activity , @ Nullable ViewGroup org.solovyev.android.ads.ViewGroup , int int ) { AdView org.solovyev.android.ads.AdView = null ; if ( ! boolean ( org.solovyev.android.ads.Activity ) ) { Log . d ( org.solovyev.android.ads.Activity . getClass ( ) . getName ( ) , STRING ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( ) ; org.solovyev.android.ads.AdView = org.solovyev.android.ads.AdView ( org.solovyev.android.ads.Activity , java.lang.String , org.solovyev.android.ads.ViewGroup , int , java.util.List<java.lang.String> ) ; } else { Log . d ( org.solovyev.android.ads.Activity . getClass ( ) . getName ( ) , STRING ) ; } return org.solovyev.android.ads.AdView ; }  <METHOD_END>
<METHOD_START> @ Nullable public org.solovyev.android.ads.AdView org.solovyev.android.ads.AdView ( @ Nonnull Activity org.solovyev.android.ads.Activity ) { return org.solovyev.android.ads.AdView ( org.solovyev.android.ads.Activity , null , R . id . ad_parent_view ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( ! boolean ) { throw new java.lang.IllegalStateException ( org.solovyev.android.ads.AdsController .class . java.lang.String ( ) + STRING ) ; } }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.ads.Context ) { super( org.solovyev.android.ads.Context , null ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.ads.Context , AttributeSet org.solovyev.android.ads.AttributeSet ) { super( org.solovyev.android.ads.Context , org.solovyev.android.ads.AttributeSet ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.ads.View org.solovyev.android.ads.View ( ViewGroup org.solovyev.android.ads.ViewGroup ) { View org.solovyev.android.ads.View = super. onCreateView ( org.solovyev.android.ads.ViewGroup ) ; if ( org.solovyev.android.ads.View instanceof ViewGroup ) { org.solovyev.android.ads.AdView = AdsController . getInstance ( ) . inflateAd ( ( Activity ) getContext ( ) , ( ( ViewGroup ) org.solovyev.android.ads.View ) , NUMBER ) ; } return org.solovyev.android.ads.View ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> public static < A extends org.solovyev.android.Application & ServiceLocator > void void ( @ Nonnull A A ) { void ( A , new UiThreadExecutor ( ) , Listeners . newEventBus ( ) , A ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Application org.solovyev.android.Application , @ Nullable ServiceLocator org.solovyev.android.ServiceLocator ) { void ( org.solovyev.android.Application , new UiThreadExecutor ( ) , Listeners . newEventBus ( ) , org.solovyev.android.ServiceLocator ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Application org.solovyev.android.Application , @ Nonnull UiThreadExecutor org.solovyev.android.UiThreadExecutor , @ Nonnull JEventListeners < JEventListener < ? extends JEvent > , JEvent > org.solovyev.android.JEventListeners<org.solovyev.android.JEventListener<? extends org.solovyev.android.JEvent>,org.solovyev.android.JEvent> , @ Nullable ServiceLocator org.solovyev.android.ServiceLocator ) { if ( ! boolean ) { org.solovyev.android.App . org.solovyev.android.Application = org.solovyev.android.Application ; org.solovyev.android.App . org.solovyev.android.DelayedExecutor = org.solovyev.android.UiThreadExecutor ; org.solovyev.android.App . org.solovyev.android.JEventListeners<org.solovyev.android.JEventListener<? extends org.solovyev.android.JEvent>,org.solovyev.android.JEvent> = org.solovyev.android.JEventListeners<org.solovyev.android.JEventListener<? extends org.solovyev.android.JEvent>,org.solovyev.android.JEvent> ; if ( org.solovyev.android.ServiceLocator != null ) { org.solovyev.android.App . org.solovyev.android.ServiceLocator = org.solovyev.android.ServiceLocator ; } else { org.solovyev.android.App . org.solovyev.android.ServiceLocator = new ServiceLocator ( ) {				} ; } org.solovyev.android.App . boolean = true ; } else { throw new java.lang.IllegalStateException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> private static void void ( ) { if ( ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < A extends org.solovyev.android.Application > A A ( ) { void ( ) ; return ( A ) org.solovyev.android.Application ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < L extends org.solovyev.android.ServiceLocator > L L ( ) { void ( ) ; return ( L ) org.solovyev.android.ServiceLocator ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.DelayedExecutor org.solovyev.android.DelayedExecutor ( ) { void ( ) ; return org.solovyev.android.DelayedExecutor ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.JEventListeners<org.solovyev.android.JEventListener<? extends org.solovyev.android.JEvent>,org.solovyev.android.JEvent> < JEventListener < ? extends JEvent > , JEvent > org.solovyev.android.JEventListeners<org.solovyev.android.JEventListener<? extends org.solovyev.android.JEvent>,org.solovyev.android.JEvent> ( ) { void ( ) ; return org.solovyev.android.JEventListeners<org.solovyev.android.JEventListener<? extends org.solovyev.android.JEvent>,org.solovyev.android.JEvent> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static javax.crypto.SecretKey javax.crypto.SecretKey ( @ Nonnull Context net.robotmedia.billing.Context ) throws net.robotmedia.billing.CiphererException { if ( javax.crypto.SecretKey == null ) { final byte [] byte[] = byte[] ( ) ; final java.lang.String java.lang.String = BillingSecurity . generatePassword ( net.robotmedia.billing.Context ) ; javax.crypto.SecretKey = net.robotmedia.billing.SecurityService<net.robotmedia.billing.Transaction,net.robotmedia.billing.Transaction,byte[]> ( ) . getSecretKeyProvider ( ) . getSecretKey ( java.lang.String , byte[] ) ; } return javax.crypto.SecretKey ; }  <METHOD_END>
<METHOD_START> public byte [] byte[] ( )  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> private static void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { synchronized ( java.util.Map<java.lang.String,java.util.Set<java.lang.String>> ) { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = java.util.Map<java.lang.String,java.util.Set<java.lang.String>> . java.util.Set<java.lang.String> ( java.lang.String ) ; if ( java.util.Set<java.lang.String> == null ) { java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ; java.util.Map<java.lang.String,java.util.Set<java.lang.String>> . java.util.Set<java.lang.String> ( java.lang.String , java.util.Set<java.lang.String> ) ; } java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull public static net.robotmedia.billing.BillingController.BillingStatus net.robotmedia.billing.BillingController.BillingStatus ( @ Nonnull Context net.robotmedia.billing.Context ) { BillingService . checkBillingSupported ( net.robotmedia.billing.Context ) ; return net.robotmedia.billing.BillingController.BillingStatus ; }  <METHOD_END>
<METHOD_START> static void void ( boolean boolean ) { net.robotmedia.billing.BillingController.BillingStatus = boolean ? net.robotmedia.billing.BillingController.BillingStatus . net.robotmedia.billing.BillingController.BillingStatus : net.robotmedia.billing.BillingController.BillingStatus . net.robotmedia.billing.BillingController.BillingStatus ; BillingObserverRegistry . onCheckBillingSupportedResponse ( boolean ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String ) { synchronized ( java.util.Map<java.lang.String,java.util.Set<java.lang.String>> ) { final java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = java.util.Map<java.lang.String,java.util.Set<java.lang.String>> . java.util.Set<java.lang.String> ( java.lang.String ) ; if ( java.util.Set<java.lang.String> != null ) { void ( net.robotmedia.billing.Context , java.util.Set<java.lang.String> ) ; return true ; } else { return false ; } } }  <METHOD_END>
<METHOD_START> private static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String [] java.lang.String[] ) { BillingService . confirmNotifications ( net.robotmedia.billing.Context , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> private static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { BillingService . confirmNotifications ( net.robotmedia.billing.Context , java.util.Collection<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public static int int ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String ) { final java.lang.String java.lang.String = Security . obfuscate ( net.robotmedia.billing.Context , byte[] ( ) , java.lang.String ) ; assert java.lang.String != null ; return TransactionManager . countPurchases ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected static void void ( @ Nullable java.lang.String java.lang.String ) { if ( boolean && java.lang.String != null ) { Log . d ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String ) { final long long = Security . generateNonce ( ) ; BillingService . getPurchaseInformation ( net.robotmedia.billing.Context , new java.lang.String [] { java.lang.String } , long ) ; }  <METHOD_END>
<METHOD_START> @ Nullable private static byte [] byte[] ( ) { byte [] byte[] = null ; if ( net.robotmedia.billing.BillingController.IConfiguration == null || ( ( byte[] = net.robotmedia.billing.BillingController.IConfiguration . byte[] ( ) ) == null ) ) { Log . w ( java.lang.String , STRING ) ; } return byte[] ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.util.List<net.robotmedia.billing.Transaction> < Transaction > java.util.List<net.robotmedia.billing.Transaction> ( @ Nonnull Context net.robotmedia.billing.Context ) { final java.util.List<net.robotmedia.billing.Transaction> < Transaction > java.util.List<net.robotmedia.billing.Transaction> = TransactionManager . getTransactions ( ) ; ObfuscateUtils . unobfuscate ( net.robotmedia.billing.Context , java.util.List<net.robotmedia.billing.Transaction> , byte[] ( ) ) ; return java.util.List<net.robotmedia.billing.Transaction> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.util.List<net.robotmedia.billing.Transaction> < Transaction > java.util.List<net.robotmedia.billing.Transaction> ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String ) { byte [] byte[] = byte[] ( ) ; final java.lang.String java.lang.String = Security . obfuscate ( net.robotmedia.billing.Context , byte[] ( ) , java.lang.String ) ; assert java.lang.String != null ; final java.util.List<net.robotmedia.billing.Transaction> < Transaction > java.util.List<net.robotmedia.billing.Transaction> = TransactionManager . getTransactions ( java.lang.String ) ; ObfuscateUtils . unobfuscate ( net.robotmedia.billing.Context , java.util.List<net.robotmedia.billing.Transaction> , byte[] ) ; return java.util.List<net.robotmedia.billing.Transaction> ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String ) { final byte [] byte[] = byte[] ( ) ; final java.lang.String java.lang.String = Security . obfuscate ( net.robotmedia.billing.Context , byte[] , java.lang.String ) ; assert java.lang.String != null ; return TransactionManager . isPurchased ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String ) { void ( STRING + java.lang.String + STRING ) ; void ( net.robotmedia.billing.Context , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String ) { void ( STRING ) ; if ( TextUtils . isEmpty ( java.lang.String ) ) { Log . w ( java.lang.String , STRING ) ; return; } if ( ! boolean ) { if ( TextUtils . isEmpty ( java.lang.String ) ) { Log . w ( java.lang.String , STRING ) ; return; } final ISignatureValidator net.robotmedia.billing.ISignatureValidator = net.robotmedia.billing.ISignatureValidator ( ) ; if ( ! net.robotmedia.billing.ISignatureValidator . validate ( java.lang.String , java.lang.String ) ) { Log . w ( java.lang.String , STRING ) ; return; } } java.util.List<net.robotmedia.billing.Transaction> < Transaction > java.util.List<net.robotmedia.billing.Transaction> ; try { final JSONObject net.robotmedia.billing.JSONObject = new JSONObject ( java.lang.String ) ; if ( ! boolean ( net.robotmedia.billing.JSONObject ) ) { Log . w ( java.lang.String , STRING ) ; return; } java.util.List<net.robotmedia.billing.Transaction> = java.util.List<net.robotmedia.billing.Transaction> ( net.robotmedia.billing.JSONObject ) ; } catch ( JSONException net.robotmedia.billing.JSONException ) { Log . e ( java.lang.String , STRING , net.robotmedia.billing.JSONException ) ; return; } final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( Transaction net.robotmedia.billing.Transaction : java.util.List<net.robotmedia.billing.Transaction> ) { if ( transaction . notificationId != null ) { synchronized ( java.util.Set<java.lang.String> ) { if ( java.util.Set<java.lang.String> . boolean ( transaction . productId ) ) { java.util.List<java.lang.String> . boolean ( transaction . notificationId ) ; } else { void ( transaction . productId , transaction . notificationId ) ; } } } void ( net.robotmedia.billing.Context , net.robotmedia.billing.Transaction ) ; BillingObserverRegistry . notifyPurchaseStateChange ( transaction . productId , transaction . purchaseState ) ; } if ( ! java.util.List<java.lang.String> . boolean ( ) ) { final java.lang.String [] java.lang.String[] = java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ; void ( net.robotmedia.billing.Context , java.lang.String[] ) ; } }  <METHOD_END>
<METHOD_START> protected static void void ( long long , @ Nonnull IBillingRequest net.robotmedia.billing.IBillingRequest ) { void ( STRING + long + STRING + net.robotmedia.billing.IBillingRequest . getRequestType ( ) + STRING ) ; if ( net.robotmedia.billing.IBillingRequest . isSuccess ( ) ) { synchronized ( java.util.Map<java.lang.Long,net.robotmedia.billing.IBillingRequest> ) { java.util.Map<java.lang.Long,net.robotmedia.billing.IBillingRequest> . put ( long , net.robotmedia.billing.IBillingRequest ) ; } } else if ( net.robotmedia.billing.IBillingRequest . hasNonce ( ) ) { Security . removeNonce ( net.robotmedia.billing.IBillingRequest . getNonce ( ) ) ; } }  <METHOD_END>
<METHOD_START> protected static void void ( long long , int int ) { final ResponseCode net.robotmedia.billing.ResponseCode = ResponseCode . valueOf ( int ) ; void ( STRING + long + STRING + net.robotmedia.billing.ResponseCode ) ; synchronized ( java.util.Map<java.lang.Long,net.robotmedia.billing.IBillingRequest> ) { final IBillingRequest net.robotmedia.billing.IBillingRequest = java.util.Map<java.lang.Long,net.robotmedia.billing.IBillingRequest> . get ( long ) ; if ( net.robotmedia.billing.IBillingRequest != null ) { java.util.Map<java.lang.Long,net.robotmedia.billing.IBillingRequest> . remove ( long ) ; net.robotmedia.billing.IBillingRequest . onResponseCode ( net.robotmedia.billing.ResponseCode ) ; } } }  <METHOD_END>
<METHOD_START> @ Nonnull private static java.util.List<net.robotmedia.billing.Transaction> < Transaction > java.util.List<net.robotmedia.billing.Transaction> ( @ Nonnull JSONObject net.robotmedia.billing.JSONObject ) throws net.robotmedia.billing.JSONException { final java.util.List<net.robotmedia.billing.Transaction> < Transaction > java.util.List<net.robotmedia.billing.Transaction> = new java.util.ArrayList<net.robotmedia.billing.Transaction> < Transaction > ( ) ; final JSONArray net.robotmedia.billing.JSONArray = net.robotmedia.billing.JSONObject . optJSONArray ( java.lang.String ) ; if ( net.robotmedia.billing.JSONArray != null ) { for ( int int = NUMBER ; int < net.robotmedia.billing.JSONArray . length ( ) ; int ++ ) { final JSONObject net.robotmedia.billing.JSONObject = net.robotmedia.billing.JSONArray . getJSONObject ( int ) ; java.util.List<net.robotmedia.billing.Transaction> . add ( Transaction . newInstance ( net.robotmedia.billing.JSONObject ) ) ; } } return java.util.List<net.robotmedia.billing.Transaction> ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String ) { void ( net.robotmedia.billing.Context , java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String , boolean boolean ) { if ( boolean ) { synchronized ( java.util.Set<java.lang.String> ) { java.util.Set<java.lang.String> . boolean ( java.lang.String ) ; } } BillingService . requestPurchase ( net.robotmedia.billing.Context , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.Context ) { Log . d ( net.robotmedia.billing.BillingController .class . java.lang.String ( ) , STRING ) ; final long long = Security . generateNonce ( ) ; BillingService . restoreTransactions ( net.robotmedia.billing.Context , long ) ; }  <METHOD_END>
<METHOD_START> public static void void ( net.robotmedia.billing.BillingController.IConfiguration net.robotmedia.billing.BillingController.IConfiguration ) { net.robotmedia.billing.BillingController.IConfiguration = net.robotmedia.billing.BillingController.IConfiguration ; }  <METHOD_END>
<METHOD_START> public static void void ( boolean boolean ) { net.robotmedia.billing.BillingController . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( { STRING } ) public static void void ( ISignatureValidator net.robotmedia.billing.ISignatureValidator ) { net.robotmedia.billing.BillingController . net.robotmedia.billing.ISignatureValidator = net.robotmedia.billing.ISignatureValidator ; }  <METHOD_END>
<METHOD_START> @ Nonnull static net.robotmedia.billing.ISignatureValidator net.robotmedia.billing.ISignatureValidator ( ) { return net.robotmedia.billing.BillingController . net.robotmedia.billing.ISignatureValidator != null ? net.robotmedia.billing.BillingController . net.robotmedia.billing.ISignatureValidator : new DefaultSignatureValidator ( net.robotmedia.billing.BillingController . net.robotmedia.billing.BillingController.IConfiguration ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull PendingIntent net.robotmedia.billing.PendingIntent , @ Nullable Intent net.robotmedia.billing.Intent ) { if ( Compatibility . isStartIntentSenderSupported ( net.robotmedia.billing.Context ) ) { Compatibility . startIntentSender ( net.robotmedia.billing.Context , net.robotmedia.billing.PendingIntent . getIntentSender ( ) , net.robotmedia.billing.Intent ) ; } else { try { net.robotmedia.billing.PendingIntent . send ( net.robotmedia.billing.Context , NUMBER , net.robotmedia.billing.Intent ) ; } catch ( CanceledException net.robotmedia.billing.CanceledException ) { Log . e ( java.lang.String , STRING , net.robotmedia.billing.CanceledException ) ; } } }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull Transaction net.robotmedia.billing.Transaction ) { final Transaction net.robotmedia.billing.Transaction = net.robotmedia.billing.Transaction . clone ( ) ; ObfuscateUtils . obfuscate ( net.robotmedia.billing.Context , net.robotmedia.billing.Transaction , byte[] ( ) ) ; TransactionManager . addTransaction ( net.robotmedia.billing.Transaction ) ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( @ Nonnull JSONObject net.robotmedia.billing.JSONObject ) { long long = net.robotmedia.billing.JSONObject . optLong ( java.lang.String ) ; if ( Security . isNonceKnown ( long ) ) { Security . removeNonce ( long ) ; return true ; } else { return false ; } }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.Context ) { Log . d ( net.robotmedia.billing.BillingController .class . java.lang.String ( ) , STRING ) ; TransactionManager . dropDatabase ( net.robotmedia.billing.Context ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { BillingObserverRegistry . onRequestPurchaseResponse ( java.lang.String , net.robotmedia.billing.ResponseCode ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PendingIntent net.robotmedia.billing.PendingIntent ) { BillingObserverRegistry . onPurchaseIntent ( java.lang.String , net.robotmedia.billing.PendingIntent ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { BillingObserverRegistry . onPurchaseIntentFailure ( java.lang.String , net.robotmedia.billing.ResponseCode ) ; }  <METHOD_END>
<METHOD_START> static void void ( ) { BillingObserverRegistry . onTransactionsRestored ( ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { BillingObserverRegistry . onErrorRestoreTransactions ( net.robotmedia.billing.ResponseCode ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull IBillingObserver net.robotmedia.billing.IBillingObserver ) { BillingObserverRegistry . registerObserver ( net.robotmedia.billing.IBillingObserver ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull IBillingObserver net.robotmedia.billing.IBillingObserver ) { BillingObserverRegistry . unregisterObserver ( net.robotmedia.billing.IBillingObserver ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull static net.robotmedia.billing.SecurityService<net.robotmedia.billing.Transaction,net.robotmedia.billing.Transaction,byte[]> < Transaction , Transaction , byte [] > net.robotmedia.billing.SecurityService<net.robotmedia.billing.Transaction,net.robotmedia.billing.Transaction,byte[]> ( ) { if ( net.robotmedia.billing.SecurityService<net.robotmedia.billing.Transaction,net.robotmedia.billing.Transaction,byte[]> == null ) { net.robotmedia.billing.SecurityService<net.robotmedia.billing.Transaction,net.robotmedia.billing.Transaction,byte[]> = BillingSecurity . getObfuscationSecurityService ( AESObfuscator . IV , AESObfuscator . SECURITY_PREFIX ) ; } return net.robotmedia.billing.SecurityService<net.robotmedia.billing.Transaction,net.robotmedia.billing.Transaction,byte[]> ; }  <METHOD_END>
<METHOD_START> static void void ( boolean boolean ) { for ( IBillingObserver net.robotmedia.billing.IBillingObserver : java.util.List<net.robotmedia.billing.IBillingObserver> ( ) ) { net.robotmedia.billing.IBillingObserver . onCheckBillingSupportedResponse ( boolean ) ; } }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PendingIntent net.robotmedia.billing.PendingIntent ) { for ( IBillingObserver net.robotmedia.billing.IBillingObserver : java.util.List<net.robotmedia.billing.IBillingObserver> ( ) ) { net.robotmedia.billing.IBillingObserver . onPurchaseIntentOK ( java.lang.String , net.robotmedia.billing.PendingIntent ) ; } }  <METHOD_END>
<METHOD_START> static void void ( ) { for ( IBillingObserver net.robotmedia.billing.IBillingObserver : java.util.List<net.robotmedia.billing.IBillingObserver> ( ) ) { net.robotmedia.billing.IBillingObserver . onTransactionsRestored ( ) ; } }  <METHOD_END>
<METHOD_START> static boolean boolean ( @ Nonnull IBillingObserver net.robotmedia.billing.IBillingObserver ) { synchronized ( java.util.Set<net.robotmedia.billing.IBillingObserver> ) { return java.util.Set<net.robotmedia.billing.IBillingObserver> . add ( net.robotmedia.billing.IBillingObserver ) ; } }  <METHOD_END>
<METHOD_START> static boolean boolean ( @ Nonnull IBillingObserver net.robotmedia.billing.IBillingObserver ) { synchronized ( java.util.Set<net.robotmedia.billing.IBillingObserver> ) { return java.util.Set<net.robotmedia.billing.IBillingObserver> . remove ( net.robotmedia.billing.IBillingObserver ) ; } }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Transaction . Transaction Transaction.PurchaseState ) { for ( IBillingObserver net.robotmedia.billing.IBillingObserver : java.util.List<net.robotmedia.billing.IBillingObserver> ( ) ) { net.robotmedia.billing.IBillingObserver . onPurchaseStateChanged ( java.lang.String , Transaction.PurchaseState ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private static java.util.List<net.robotmedia.billing.IBillingObserver> < IBillingObserver > java.util.List<net.robotmedia.billing.IBillingObserver> ( ) { final java.util.List<net.robotmedia.billing.IBillingObserver> < IBillingObserver > java.util.List<net.robotmedia.billing.IBillingObserver> ; synchronized ( java.util.Set<net.robotmedia.billing.IBillingObserver> ) { java.util.List<net.robotmedia.billing.IBillingObserver> = new java.util.ArrayList<net.robotmedia.billing.IBillingObserver> < IBillingObserver > ( java.util.Set<net.robotmedia.billing.IBillingObserver> ) ; } return java.util.List<net.robotmedia.billing.IBillingObserver> ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { for ( IBillingObserver net.robotmedia.billing.IBillingObserver : java.util.List<net.robotmedia.billing.IBillingObserver> ( ) ) { net.robotmedia.billing.IBillingObserver . onRequestPurchaseResponse ( java.lang.String , net.robotmedia.billing.ResponseCode ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { for ( IBillingObserver net.robotmedia.billing.IBillingObserver : java.util.List<net.robotmedia.billing.IBillingObserver> ( ) ) { net.robotmedia.billing.IBillingObserver . onPurchaseIntentFailure ( java.lang.String , net.robotmedia.billing.ResponseCode ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { for ( IBillingObserver net.robotmedia.billing.IBillingObserver : java.util.List<net.robotmedia.billing.IBillingObserver> ( ) ) { net.robotmedia.billing.IBillingObserver . onErrorRestoreTransactions ( net.robotmedia.billing.ResponseCode ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull Intent net.robotmedia.billing.Intent ) { final java.lang.String java.lang.String = net.robotmedia.billing.Intent . getAction ( ) ; BillingController . debug ( STRING + java.lang.String ) ; final BillingResponseType net.robotmedia.billing.BillingResponseType = BillingResponseType . fromIntentAction ( net.robotmedia.billing.Intent ) ; if ( net.robotmedia.billing.BillingResponseType != null ) { net.robotmedia.billing.BillingResponseType . doAction ( net.robotmedia.billing.Context , net.robotmedia.billing.Intent ) ; } else { Log . w ( this . java.lang.Class<? extends net.robotmedia.billing.BillingReceiver> ( ) . java.lang.String ( ) , STRING + java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , int int ) { this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , int int , long long ) { this . java.lang.String = java.lang.String ; this . int = int ; this . long = long ; }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull private net.robotmedia.billing.Bundle net.robotmedia.billing.Bundle ( ) { final Bundle net.robotmedia.billing.Bundle = new Bundle ( ) ; net.robotmedia.billing.Bundle . putString ( java.lang.String , getRequestType ( ) . name ( ) ) ; net.robotmedia.billing.Bundle . putInt ( java.lang.String , NUMBER ) ; net.robotmedia.billing.Bundle . putString ( java.lang.String , java.lang.String ) ; if ( boolean ( ) ) { net.robotmedia.billing.Bundle . putLong ( java.lang.String , long ) ; } return net.robotmedia.billing.Bundle ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle ) { }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle , @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final long long ( @ Nonnull IMarketBillingService net.robotmedia.billing.IMarketBillingService ) throws net.robotmedia.billing.RemoteException { final Bundle net.robotmedia.billing.Bundle = net.robotmedia.billing.Bundle ( ) ; void ( net.robotmedia.billing.Bundle ) ; final Bundle net.robotmedia.billing.Bundle = net.robotmedia.billing.IMarketBillingService . sendBillingRequest ( net.robotmedia.billing.Bundle ) ; if ( boolean ( net.robotmedia.billing.Bundle ) ) { void ( net.robotmedia.billing.Bundle ) ; return net.robotmedia.billing.Bundle . getLong ( java.lang.String , long ) ; } else { void ( net.robotmedia.billing.Bundle , ResponseCode . valueOf ( net.robotmedia.billing.Bundle . getInt ( java.lang.String ) ) ) ; return long ; } }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull Bundle net.robotmedia.billing.Bundle ) { final int int = net.robotmedia.billing.Bundle . getInt ( java.lang.String ) ; boolean = ResponseCode . isOk ( int ) ; if ( ! boolean ) { Log . w ( this . java.lang.Class<? extends net.robotmedia.billing.BillingRequest> ( ) . java.lang.String ( ) , STRING + ResponseCode . valueOf ( int ) ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int ) { super( java.lang.String , int ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.BillingRequestType net.robotmedia.billing.BillingRequestType ( ) { return BillingRequestType . CHECK_BILLING_SUPPORTED ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle ) { final boolean boolean = this . boolean ( ) ; BillingController . onCheckBillingSupportedResponse ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , int int , @ Nonnull java.lang.String [] java.lang.String[] ) { super( java.lang.String , int ); this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle ) { net.robotmedia.billing.Bundle . putStringArray ( java.lang.String , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.BillingRequestType net.robotmedia.billing.BillingRequestType ( ) { return BillingRequestType . CONFIRM_NOTIFICATIONS ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int , java.lang.String [] java.lang.String[] , long long ) { super( java.lang.String , int , long ); this . java.lang.String[] = java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle ) { net.robotmedia.billing.Bundle . putStringArray ( java.lang.String , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.BillingRequestType net.robotmedia.billing.BillingRequestType ( ) { return BillingRequestType . GET_PURCHASE_INFORMATION ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int , java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String , int ); this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle ) { net.robotmedia.billing.Bundle . putString ( java.lang.String , java.lang.String ) ; if ( java.lang.String != null ) { net.robotmedia.billing.Bundle . putString ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.BillingRequestType net.robotmedia.billing.BillingRequestType ( ) { return BillingRequestType . REQUEST_PURCHASE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { super. void ( net.robotmedia.billing.ResponseCode ) ; BillingController . onRequestPurchaseResponse ( java.lang.String , net.robotmedia.billing.ResponseCode ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle ) { final PendingIntent net.robotmedia.billing.PendingIntent = net.robotmedia.billing.Bundle . getParcelable ( java.lang.String ) ; BillingController . onPurchaseIntent ( java.lang.String , net.robotmedia.billing.PendingIntent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Bundle net.robotmedia.billing.Bundle , @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { BillingController . onPurchaseIntentFailure ( java.lang.String , net.robotmedia.billing.ResponseCode ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , int int , long long ) { super( java.lang.String , int , long ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.BillingRequestType net.robotmedia.billing.BillingRequestType ( ) { return BillingRequestType . RESTORE_TRANSACTIONS ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode ) { super. void ( net.robotmedia.billing.ResponseCode ) ; if ( net.robotmedia.billing.ResponseCode == ResponseCode . RESULT_OK ) { BillingController . onTransactionsRestored ( ) ; } else { BillingController . onErrorRestoreTransactions ( net.robotmedia.billing.ResponseCode ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected net.robotmedia.billing.BillingRequest net.robotmedia.billing.BillingRequest ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Intent net.robotmedia.billing.Intent , int int ) { return new BillingRequest . BillingRequest ( java.lang.String , int ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected net.robotmedia.billing.BillingRequest net.robotmedia.billing.BillingRequest ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Intent net.robotmedia.billing.Intent , int int ) { final java.lang.String [] java.lang.String[] = net.robotmedia.billing.Intent . getStringArrayExtra ( java.lang.String ) ; return new BillingRequest . BillingRequest ( java.lang.String , int , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected net.robotmedia.billing.BillingRequest net.robotmedia.billing.BillingRequest ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Intent net.robotmedia.billing.Intent , int int ) { final long long = net.robotmedia.billing.Intent . getLongExtra ( java.lang.String , NUMBER ) ; final java.lang.String [] java.lang.String[] = net.robotmedia.billing.Intent . getStringArrayExtra ( java.lang.String ) ; return new BillingRequest . BillingRequest ( java.lang.String , int , java.lang.String[] , long ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected net.robotmedia.billing.BillingRequest net.robotmedia.billing.BillingRequest ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Intent net.robotmedia.billing.Intent , int int ) { final java.lang.String java.lang.String = net.robotmedia.billing.Intent . getStringExtra ( java.lang.String ) ; final java.lang.String java.lang.String = net.robotmedia.billing.Intent . getStringExtra ( java.lang.String ) ; return new BillingRequest . BillingRequest ( java.lang.String , int , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected net.robotmedia.billing.BillingRequest net.robotmedia.billing.BillingRequest ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Intent net.robotmedia.billing.Intent , int int ) { final long long = net.robotmedia.billing.Intent . getLongExtra ( java.lang.String , NUMBER ) ; return new BillingRequest . BillingRequest ( java.lang.String , int , long ) ; }  <METHOD_END>
<METHOD_START> final void void ( @ Nonnull IBillingService net.robotmedia.billing.IBillingService , @ Nonnull Intent net.robotmedia.billing.Intent , int int ) { net.robotmedia.billing.IBillingService . runRequestOrQueue ( net.robotmedia.billing.BillingRequest ( net.robotmedia.billing.IBillingService . getPackageName ( ) , net.robotmedia.billing.Intent , int ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract net.robotmedia.billing.BillingRequest net.robotmedia.billing.BillingRequest ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Intent net.robotmedia.billing.Intent , int int );  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( @ Nonnull Context net.robotmedia.billing.Context ) { return net.robotmedia.billing.Context . getPackageName ( ) + STRING + this . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ Nullable static net.robotmedia.billing.BillingRequestType net.robotmedia.billing.BillingRequestType ( @ Nonnull Intent net.robotmedia.billing.Intent ) { final java.lang.String java.lang.String = net.robotmedia.billing.Intent . getAction ( ) ; if ( java.lang.String == null ) { return null ; } final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; if ( java.lang.String[] . int <= NUMBER ) { return null ; } return net.robotmedia.billing.BillingRequestType . net.robotmedia.billing.BillingRequestType ( java.lang.String[] [ java.lang.String[] . int - NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull Intent net.robotmedia.billing.Intent ) { java.lang.String java.lang.String = net.robotmedia.billing.Intent . getStringExtra ( java.lang.String ) ; BillingController . onNotify ( net.robotmedia.billing.Context , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull Intent net.robotmedia.billing.Intent ) { final long long = net.robotmedia.billing.Intent . getLongExtra ( java.lang.String , - NUMBER ) ; final int int = net.robotmedia.billing.Intent . getIntExtra ( java.lang.String , NUMBER ) ; BillingController . onResponseCode ( long , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull Intent net.robotmedia.billing.Intent ) { final java.lang.String java.lang.String = net.robotmedia.billing.Intent . getStringExtra ( java.lang.String ) ; final java.lang.String java.lang.String = net.robotmedia.billing.Intent . getStringExtra ( java.lang.String ) ; BillingController . onPurchaseStateChanged ( net.robotmedia.billing.Context , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull Intent net.robotmedia.billing.Intent );  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( ) { return STRING + this . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ Nullable static net.robotmedia.billing.BillingResponseType net.robotmedia.billing.BillingResponseType ( @ Nonnull Intent net.robotmedia.billing.Intent ) { final java.lang.String java.lang.String = net.robotmedia.billing.Intent . getAction ( ) ; if ( java.lang.String == null ) { return null ; } final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; if ( java.lang.String[] . int <= NUMBER ) { return null ; } try { return net.robotmedia.billing.BillingResponseType . net.robotmedia.billing.BillingResponseType ( java.lang.String[] [ java.lang.String[] . int - NUMBER ] ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { return null ; } }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull Context net.robotmedia.billing.Context ) { net.robotmedia.billing.Context . startService ( net.robotmedia.billing.Intent ( net.robotmedia.billing.Context , BillingRequestType . CHECK_BILLING_SUPPORTED ) ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String [] java.lang.String[] ) { final Intent net.robotmedia.billing.Intent = net.robotmedia.billing.Intent ( net.robotmedia.billing.Context , BillingRequestType . CONFIRM_NOTIFICATIONS ) ; net.robotmedia.billing.Intent . putExtra ( BillingRequestType . EXTRA_NOTIFY_IDS , java.lang.String[] ) ; net.robotmedia.billing.Context . startService ( net.robotmedia.billing.Intent ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { void ( net.robotmedia.billing.Context , java.util.Collection<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.Collection<java.lang.String> . int ( ) ] ) ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> , long long ) { void ( net.robotmedia.billing.Context , java.util.Collection<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.Collection<java.lang.String> . int ( ) ] ) , long ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String [] java.lang.String[] , long long ) { final Intent net.robotmedia.billing.Intent = net.robotmedia.billing.Intent ( net.robotmedia.billing.Context , BillingRequestType . GET_PURCHASE_INFORMATION ) ; net.robotmedia.billing.Intent . putExtra ( BillingRequestType . EXTRA_NOTIFY_IDS , java.lang.String[] ) ; net.robotmedia.billing.Intent . putExtra ( BillingRequestType . EXTRA_NONCE , long ) ; net.robotmedia.billing.Context . startService ( net.robotmedia.billing.Intent ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String ) { final Intent net.robotmedia.billing.Intent = net.robotmedia.billing.Intent ( net.robotmedia.billing.Context , BillingRequestType . REQUEST_PURCHASE ) ; net.robotmedia.billing.Intent . putExtra ( BillingRequestType . EXTRA_ITEM_ID , java.lang.String ) ; net.robotmedia.billing.Intent . putExtra ( BillingRequestType . EXTRA_DEVELOPER_PAYLOAD , java.lang.String ) ; net.robotmedia.billing.Context . startService ( net.robotmedia.billing.Intent ) ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull Context net.robotmedia.billing.Context , long long ) { final Intent net.robotmedia.billing.Intent = net.robotmedia.billing.Intent ( net.robotmedia.billing.Context , BillingRequestType . RESTORE_TRANSACTIONS ) ; net.robotmedia.billing.Intent . setClass ( net.robotmedia.billing.Context , net.robotmedia.billing.BillingService .class ) ; net.robotmedia.billing.Intent . putExtra ( BillingRequestType . EXTRA_NONCE , long ) ; net.robotmedia.billing.Context . startService ( net.robotmedia.billing.Intent ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static net.robotmedia.billing.Intent net.robotmedia.billing.Intent ( @ Nonnull Context net.robotmedia.billing.Context , @ Nonnull BillingRequestType net.robotmedia.billing.BillingRequestType ) { final Intent net.robotmedia.billing.Intent = new Intent ( net.robotmedia.billing.BillingRequestType . toIntentAction ( net.robotmedia.billing.Context ) ) ; net.robotmedia.billing.Intent . setClass ( net.robotmedia.billing.Context , net.robotmedia.billing.BillingService .class ) ; return net.robotmedia.billing.Intent ; }  <METHOD_END>
<METHOD_START> private void void ( ) { try { final boolean boolean = bindService ( new Intent ( java.lang.String ) , this , Context . BIND_AUTO_CREATE ) ; if ( ! boolean ) { Log . e ( this . java.lang.Class<? extends net.robotmedia.billing.BillingService> ( ) . java.lang.String ( ) , STRING ) ; } } catch ( java.lang.SecurityException java.lang.SecurityException ) { Log . e ( this . java.lang.Class<? extends net.robotmedia.billing.BillingService> ( ) . java.lang.String ( ) , STRING , java.lang.SecurityException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.robotmedia.billing.IBinder net.robotmedia.billing.IBinder ( Intent net.robotmedia.billing.Intent ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ComponentName net.robotmedia.billing.ComponentName , IBinder net.robotmedia.billing.IBinder ) { net.robotmedia.billing.BillingService . net.robotmedia.billing.IMarketBillingService = IMarketBillingService . Stub . asInterface ( net.robotmedia.billing.IBinder ) ; boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ComponentName net.robotmedia.billing.ComponentName ) { net.robotmedia.billing.IMarketBillingService = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Intent net.robotmedia.billing.Intent , int int ) { void ( net.robotmedia.billing.Intent , int ) ; }  <METHOD_END>
<METHOD_START> public int int ( Intent net.robotmedia.billing.Intent , int int , int int ) { void ( net.robotmedia.billing.Intent , int ) ; return Compatibility . START_NOT_STICKY ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull Intent net.robotmedia.billing.Intent , int int ) { final BillingRequestType net.robotmedia.billing.BillingRequestType = BillingRequestType . fromIntentAction ( net.robotmedia.billing.Intent ) ; if ( net.robotmedia.billing.BillingRequestType != null ) { net.robotmedia.billing.BillingRequestType . doAction ( this , net.robotmedia.billing.Intent , int ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { int int = - NUMBER ; synchronized ( java.util.List<net.robotmedia.billing.IBillingRequest> ) { for ( java.util.Iterator<net.robotmedia.billing.IBillingRequest> < IBillingRequest > java.util.Iterator<net.robotmedia.billing.IBillingRequest> = java.util.List<net.robotmedia.billing.IBillingRequest> . iterator ( ) ; java.util.Iterator<net.robotmedia.billing.IBillingRequest> . hasNext ( ) ; ) { final IBillingRequest net.robotmedia.billing.IBillingRequest = java.util.Iterator<net.robotmedia.billing.IBillingRequest> . next ( ) ; if ( net.robotmedia.billing.IMarketBillingService != null ) { boolean ( net.robotmedia.billing.IMarketBillingService , net.robotmedia.billing.IBillingRequest , NUMBER ) ; java.util.Iterator<net.robotmedia.billing.IBillingRequest> . remove ( ) ; int = java.lang.Math . int ( int , net.robotmedia.billing.IBillingRequest . getStartId ( ) ) ; } else { void ( ) ; return false ; } } } if ( int >= NUMBER ) { stopSelf ( int ) ; } return true ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull IMarketBillingService net.robotmedia.billing.IMarketBillingService , @ Nonnull IBillingRequest net.robotmedia.billing.IBillingRequest , int int ) { try { BillingController . debug ( STRING + net.robotmedia.billing.IBillingRequest . getRequestType ( ) ) ; final long long = net.robotmedia.billing.IBillingRequest . run ( net.robotmedia.billing.IMarketBillingService ) ; BillingController . onRequestSent ( long , net.robotmedia.billing.IBillingRequest ) ; return true ; } catch ( RemoteException net.robotmedia.billing.RemoteException ) { BillingController . debug ( STRING + net.robotmedia.billing.RemoteException . getMessage ( ) ) ; Log . w ( this . java.lang.Class<? extends net.robotmedia.billing.BillingService> ( ) . java.lang.String ( ) , STRING ) ; if ( int < int ) { return boolean ( net.robotmedia.billing.IMarketBillingService , net.robotmedia.billing.IBillingRequest , int + NUMBER ) ; } else { return false ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull IBillingRequest net.robotmedia.billing.IBillingRequest ) { synchronized ( java.util.List<net.robotmedia.billing.IBillingRequest> ) { java.util.List<net.robotmedia.billing.IBillingRequest> . add ( net.robotmedia.billing.IBillingRequest ) ; } if ( net.robotmedia.billing.IMarketBillingService == null ) { void ( ) ; } else { boolean ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onDestroy ( ) ; if ( net.robotmedia.billing.IMarketBillingService != null ) { try { unbindService ( this ) ; } catch ( java.lang.IllegalArgumentException java.lang.IllegalArgumentException ) { } } }  <METHOD_END>
<METHOD_START> public net.robotmedia.billing.helper.BillingStatus net.robotmedia.billing.helper.BillingStatus ( ) { return BillingController . checkBillingSupported ( this ) ; }  <METHOD_END>
<METHOD_START> public abstract void void ( boolean boolean );  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( android . android . android android.os.Bundle ) { super. onCreate ( android.os.Bundle ) ; net.robotmedia.billing.helper.AbstractBillingObserver = new AbstractBillingObserver ( this ) { @ java.lang.Override public void void ( boolean boolean ) { net.robotmedia.billing.helper.AbstractBillingActivity .this . void ( boolean ) ; } @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) {			} @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PurchaseState net.robotmedia.billing.helper.PurchaseState ) { net.robotmedia.billing.helper.AbstractBillingActivity .this . void ( java.lang.String , net.robotmedia.billing.helper.PurchaseState ) ; } @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) { net.robotmedia.billing.helper.AbstractBillingActivity .this . void ( java.lang.String , net.robotmedia.billing.helper.ResponseCode ) ; } @ java.lang.Override public void void ( @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) { } } ; BillingController . registerObserver ( net.robotmedia.billing.helper.AbstractBillingObserver ) ; BillingController . setConfiguration ( this ) ; this . net.robotmedia.billing.helper.BillingStatus ( ) ; if ( ! net.robotmedia.billing.helper.AbstractBillingObserver . isTransactionsRestored ( ) ) { BillingController . restoreTransactions ( this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { net.robotmedia.billing.helper.AbstractBillingActivity .this . void ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) {			}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PurchaseState net.robotmedia.billing.helper.PurchaseState ) { net.robotmedia.billing.helper.AbstractBillingActivity .this . void ( java.lang.String , net.robotmedia.billing.helper.PurchaseState ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) { net.robotmedia.billing.helper.AbstractBillingActivity .this . void ( java.lang.String , net.robotmedia.billing.helper.ResponseCode ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onDestroy ( ) ; BillingController . unregisterObserver ( net.robotmedia.billing.helper.AbstractBillingObserver ) ; BillingController . setConfiguration ( null ) ; }  <METHOD_END>
<METHOD_START> public abstract void void ( java.lang.String java.lang.String , PurchaseState net.robotmedia.billing.helper.PurchaseState );  <METHOD_END>
<METHOD_START> public abstract void void ( java.lang.String java.lang.String , ResponseCode net.robotmedia.billing.helper.ResponseCode );  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { BillingController . requestPurchase ( this , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { BillingController . restoreTransactions ( this ) ; }  <METHOD_END>
<METHOD_START> public void ( Context net.robotmedia.billing.helper.Context ) { this . net.robotmedia.billing.helper.Context = net.robotmedia.billing.helper.Context ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ( net.robotmedia.billing.helper.Context ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( @ Nonnull Context net.robotmedia.billing.helper.Context ) { final SharedPreferences net.robotmedia.billing.helper.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( net.robotmedia.billing.helper.Context ) ; return net.robotmedia.billing.helper.SharedPreferences . getBoolean ( java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PendingIntent net.robotmedia.billing.helper.PendingIntent ) { BillingController . startPurchaseIntent ( net.robotmedia.billing.helper.Context , net.robotmedia.billing.helper.PendingIntent , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final SharedPreferences net.robotmedia.billing.helper.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( net.robotmedia.billing.helper.Context ) ; final Editor net.robotmedia.billing.helper.Editor = net.robotmedia.billing.helper.SharedPreferences . edit ( ) ; net.robotmedia.billing.helper.Editor . putBoolean ( java.lang.String , true ) ; net.robotmedia.billing.helper.Editor . commit ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) { }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context net.robotmedia.billing.helper.Context , @ Nullable IBillingObserver net.robotmedia.billing.helper.IBillingObserver ) { super( net.robotmedia.billing.helper.Context ); this . net.robotmedia.billing.helper.IBillingObserver = net.robotmedia.billing.helper.IBillingObserver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { if ( net.robotmedia.billing.helper.IBillingObserver != null ) { net.robotmedia.billing.helper.IBillingObserver . onCheckBillingSupportedResponse ( boolean ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PendingIntent net.robotmedia.billing.helper.PendingIntent ) { super. onPurchaseIntentOK ( java.lang.String , net.robotmedia.billing.helper.PendingIntent ) ; if ( net.robotmedia.billing.helper.IBillingObserver != null ) { net.robotmedia.billing.helper.IBillingObserver . onPurchaseIntentOK ( java.lang.String , net.robotmedia.billing.helper.PendingIntent ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) { if ( net.robotmedia.billing.helper.IBillingObserver != null ) { net.robotmedia.billing.helper.IBillingObserver . onPurchaseIntentFailure ( java.lang.String , net.robotmedia.billing.helper.ResponseCode ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Transaction . Transaction Transaction.PurchaseState ) { if ( net.robotmedia.billing.helper.IBillingObserver != null ) { net.robotmedia.billing.helper.IBillingObserver . onPurchaseStateChanged ( java.lang.String , Transaction.PurchaseState ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) { if ( net.robotmedia.billing.helper.IBillingObserver != null ) { net.robotmedia.billing.helper.IBillingObserver . onRequestPurchaseResponse ( java.lang.String , net.robotmedia.billing.helper.ResponseCode ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onTransactionsRestored ( ) ; if ( net.robotmedia.billing.helper.IBillingObserver != null ) { net.robotmedia.billing.helper.IBillingObserver . onTransactionsRestored ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ResponseCode net.robotmedia.billing.helper.ResponseCode ) { super. onErrorRestoreTransactions ( net.robotmedia.billing.helper.ResponseCode ) ; if ( net.robotmedia.billing.helper.IBillingObserver != null ) { net.robotmedia.billing.helper.IBillingObserver . onErrorRestoreTransactions ( net.robotmedia.billing.helper.ResponseCode ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean );  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PendingIntent net.robotmedia.billing.PendingIntent );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode );  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PurchaseState net.robotmedia.billing.PurchaseState );  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode );  <METHOD_END>
<METHOD_START> public void void ( )  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode );  <METHOD_END>
<METHOD_START> long long ( @ Nonnull IMarketBillingService net.robotmedia.billing.IMarketBillingService ) throws net.robotmedia.billing.RemoteException ;  <METHOD_END>
<METHOD_START> @ Nonnull net.robotmedia.billing.BillingRequestType net.robotmedia.billing.BillingRequestType ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> long long ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull ResponseCode net.robotmedia.billing.ResponseCode );  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull IBillingRequest net.robotmedia.billing.IBillingRequest );  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> private void ( @ Nonnull Context net.robotmedia.billing.model.Context ) { net.robotmedia.billing.model.BillingDB.DatabaseHelper = new net.robotmedia.billing.model.BillingDB.DatabaseHelper ( net.robotmedia.billing.model.Context ) ; net.robotmedia.billing.model.SQLiteDatabase = net.robotmedia.billing.model.BillingDB.DatabaseHelper . getWritableDatabase ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Application net.robotmedia.billing.model.Application ) { net.robotmedia.billing.model.BillingDB = new net.robotmedia.billing.model.BillingDB ( net.robotmedia.billing.model.Application ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static net.robotmedia.billing.model.BillingDB net.robotmedia.billing.model.BillingDB ( ) { return net.robotmedia.billing.model.BillingDB ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static java.util.List<net.robotmedia.billing.model.Transaction> < Transaction > java.util.List<net.robotmedia.billing.model.Transaction> ( @ Nonnull final Cursor net.robotmedia.billing.model.Cursor ) { final java.util.List<net.robotmedia.billing.model.Transaction> < Transaction > java.util.List<net.robotmedia.billing.model.Transaction> = new java.util.ArrayList<net.robotmedia.billing.model.Transaction> < Transaction > ( ) ; while ( net.robotmedia.billing.model.Cursor . moveToNext ( ) ) { java.util.List<net.robotmedia.billing.model.Transaction> . add ( net.robotmedia.billing.model.Transaction ( net.robotmedia.billing.model.Cursor ) ) ; } return java.util.List<net.robotmedia.billing.model.Transaction> ; }  <METHOD_END>
<METHOD_START> public void void ( ) { }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Transaction net.robotmedia.billing.model.Transaction ) { AndroidDbUtils . doDbExec ( this . net.robotmedia.billing.model.BillingDB.DatabaseHelper ( ) , new net.robotmedia.billing.model.BillingDB.InsertTransaction ( net.robotmedia.billing.model.Transaction ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected static net.robotmedia.billing.model.Transaction net.robotmedia.billing.model.Transaction ( @ Nonnull Cursor net.robotmedia.billing.model.Cursor ) { final Transaction net.robotmedia.billing.model.Transaction = new Transaction ( ) ; purchase . orderId = net.robotmedia.billing.model.Cursor . getString ( NUMBER ) ; purchase . productId = net.robotmedia.billing.model.Cursor . getString ( NUMBER ) ; purchase . purchaseState = PurchaseState . valueOf ( net.robotmedia.billing.model.Cursor . getInt ( NUMBER ) ) ; purchase . purchaseTime = net.robotmedia.billing.model.Cursor . getLong ( NUMBER ) ; purchase . developerPayload = net.robotmedia.billing.model.Cursor . getString ( NUMBER ) ; return net.robotmedia.billing.model.Transaction ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.model.Cursor net.robotmedia.billing.model.Cursor ( @ Nonnull SQLiteDatabase net.robotmedia.billing.model.SQLiteDatabase ) { return net.robotmedia.billing.model.SQLiteDatabase . query ( java.lang.String , java.lang.String[] , java.lang.String + STRING + java.lang.String + STRING , new java.lang.String [] { java.lang.String , java.lang.String . java.lang.String ( PurchaseState . PURCHASED . ordinal ( ) ) } , null , null , null ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.Integer java.lang.Integer ( @ Nonnull Cursor net.robotmedia.billing.model.Cursor ) { return net.robotmedia.billing.model.Cursor . getCount ( ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nullable java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.model.Cursor net.robotmedia.billing.model.Cursor ( @ Nonnull SQLiteDatabase net.robotmedia.billing.model.SQLiteDatabase ) { if ( java.lang.String != null ) { return net.robotmedia.billing.model.SQLiteDatabase . query ( java.lang.String , java.lang.String[] , java.lang.String + STRING , new java.lang.String [] { java.lang.String } , null , null , null ) ; } else { return net.robotmedia.billing.model.SQLiteDatabase . query ( java.lang.String , java.lang.String[] , null , null , null , null , null ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<net.robotmedia.billing.model.Transaction> < Transaction > java.util.List<net.robotmedia.billing.model.Transaction> ( @ Nonnull Cursor net.robotmedia.billing.model.Cursor ) { return java.util.List<net.robotmedia.billing.model.Transaction> ( net.robotmedia.billing.model.Cursor ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context net.robotmedia.billing.model.Context ) { super( net.robotmedia.billing.model.Context , java.lang.String , null , int ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull SQLiteDatabase net.robotmedia.billing.model.SQLiteDatabase ) { void ( net.robotmedia.billing.model.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull SQLiteDatabase net.robotmedia.billing.model.SQLiteDatabase ) { net.robotmedia.billing.model.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull SQLiteDatabase net.robotmedia.billing.model.SQLiteDatabase , int int , int int ) {		}  <METHOD_END>
<METHOD_START> @ Nonnull public net.robotmedia.billing.model.BillingDB.DatabaseHelper net.robotmedia.billing.model.BillingDB.DatabaseHelper ( ) { return net.robotmedia.billing.model.BillingDB.DatabaseHelper ; }  <METHOD_END>
<METHOD_START> void ( @ Nonnull Transaction net.robotmedia.billing.model.Transaction ) { this . net.robotmedia.billing.model.Transaction = net.robotmedia.billing.model.Transaction ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( @ Nonnull SQLiteDatabase net.robotmedia.billing.model.SQLiteDatabase ) { final ContentValues net.robotmedia.billing.model.ContentValues = new ContentValues ( ) ; net.robotmedia.billing.model.ContentValues . put ( java.lang.String , net.robotmedia.billing.model.Transaction . orderId ) ; net.robotmedia.billing.model.ContentValues . put ( java.lang.String , net.robotmedia.billing.model.Transaction . productId ) ; net.robotmedia.billing.model.ContentValues . put ( java.lang.String , net.robotmedia.billing.model.Transaction . purchaseState . ordinal ( ) ) ; net.robotmedia.billing.model.ContentValues . put ( java.lang.String , net.robotmedia.billing.model.Transaction . purchaseTime ) ; net.robotmedia.billing.model.ContentValues . put ( java.lang.String , net.robotmedia.billing.model.Transaction . developerPayload ) ; return net.robotmedia.billing.model.SQLiteDatabase . replace ( java.lang.String , null , net.robotmedia.billing.model.ContentValues ) ; }  <METHOD_END>
<METHOD_START> void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public static net.robotmedia.billing.model.Transaction.PurchaseState net.robotmedia.billing.model.Transaction.PurchaseState ( int int ) { for ( net.robotmedia.billing.model.Transaction.PurchaseState net.robotmedia.billing.model.Transaction.PurchaseState : net.robotmedia.billing.model.Transaction.PurchaseState[] ( ) ) { if ( net.robotmedia.billing.model.Transaction.PurchaseState . int == int ) { return net.robotmedia.billing.model.Transaction.PurchaseState ; } } return net.robotmedia.billing.model.Transaction.PurchaseState ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static net.robotmedia.billing.model.Transaction net.robotmedia.billing.model.Transaction ( @ Nonnull JSONObject net.robotmedia.billing.model.JSONObject ) throws net.robotmedia.billing.model.JSONException { final net.robotmedia.billing.model.Transaction net.robotmedia.billing.model.Transaction = new net.robotmedia.billing.model.Transaction ( ) ; final int int = net.robotmedia.billing.model.JSONObject . getInt ( java.lang.String ) ; net.robotmedia.billing.model.Transaction . net.robotmedia.billing.model.Transaction.PurchaseState = net.robotmedia.billing.model.Transaction.PurchaseState . net.robotmedia.billing.model.Transaction.PurchaseState ( int ) ; net.robotmedia.billing.model.Transaction . java.lang.String = net.robotmedia.billing.model.JSONObject . getString ( java.lang.String ) ; net.robotmedia.billing.model.Transaction . java.lang.String = net.robotmedia.billing.model.JSONObject . getString ( java.lang.String ) ; net.robotmedia.billing.model.Transaction . long = net.robotmedia.billing.model.JSONObject . getLong ( java.lang.String ) ; net.robotmedia.billing.model.Transaction . java.lang.String = net.robotmedia.billing.model.JSONObject . optString ( java.lang.String , null ) ; net.robotmedia.billing.model.Transaction . java.lang.String = net.robotmedia.billing.model.JSONObject . optString ( java.lang.String , null ) ; net.robotmedia.billing.model.Transaction . java.lang.String = net.robotmedia.billing.model.JSONObject . optString ( java.lang.String , null ) ; return net.robotmedia.billing.model.Transaction ; }  <METHOD_END>
<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , net.robotmedia.billing.model.Transaction.PurchaseState net.robotmedia.billing.model.Transaction.PurchaseState , java.lang.String java.lang.String , long long , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . net.robotmedia.billing.model.Transaction.PurchaseState = net.robotmedia.billing.model.Transaction.PurchaseState ; this . java.lang.String = java.lang.String ; this . long = long ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull public net.robotmedia.billing.model.JSONObject net.robotmedia.billing.model.JSONObject ( ) net.robotmedia.billing.model.JSONException { final JSONObject net.robotmedia.billing.model.JSONObject = new JSONObject ( ) ; net.robotmedia.billing.model.JSONObject . put ( java.lang.String , this . net.robotmedia.billing.model.Transaction.PurchaseState . int ) ; net.robotmedia.billing.model.JSONObject . put ( java.lang.String , this . java.lang.String ) ; net.robotmedia.billing.model.JSONObject . put ( java.lang.String , this . java.lang.String ) ; net.robotmedia.billing.model.JSONObject . put ( java.lang.String , this . long ) ; net.robotmedia.billing.model.JSONObject . put ( java.lang.String , this . java.lang.String ) ; net.robotmedia.billing.model.JSONObject . put ( java.lang.String , this . java.lang.String ) ; net.robotmedia.billing.model.JSONObject . put ( java.lang.String , this . java.lang.String ) ; return net.robotmedia.billing.model.JSONObject ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.model.Transaction net.robotmedia.billing.model.Transaction ( ) { return ( net.robotmedia.billing.model.Transaction ) super. java.lang.Object ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( java.lang.Object == null || java.lang.Class<? extends net.robotmedia.billing.model.Transaction> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) return false ; net.robotmedia.billing.model.Transaction net.robotmedia.billing.model.Transaction = ( net.robotmedia.billing.model.Transaction ) java.lang.Object ; if ( long != net.robotmedia.billing.model.Transaction . long ) return false ; if ( java.lang.String != null ? ! java.lang.String . boolean ( net.robotmedia.billing.model.Transaction . java.lang.String ) : net.robotmedia.billing.model.Transaction . java.lang.String != null ) return false ; if ( java.lang.String != null ? ! java.lang.String . boolean ( net.robotmedia.billing.model.Transaction . java.lang.String ) : net.robotmedia.billing.model.Transaction . java.lang.String != null ) return false ; if ( java.lang.String != null ? ! java.lang.String . boolean ( net.robotmedia.billing.model.Transaction . java.lang.String ) : net.robotmedia.billing.model.Transaction . java.lang.String != null ) return false ; if ( java.lang.String != null ? ! java.lang.String . boolean ( net.robotmedia.billing.model.Transaction . java.lang.String ) : net.robotmedia.billing.model.Transaction . java.lang.String != null ) return false ; if ( java.lang.String != null ? ! java.lang.String . boolean ( net.robotmedia.billing.model.Transaction . java.lang.String ) : net.robotmedia.billing.model.Transaction . java.lang.String != null ) return false ; if ( net.robotmedia.billing.model.Transaction.PurchaseState != net.robotmedia.billing.model.Transaction . net.robotmedia.billing.model.Transaction.PurchaseState ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = java.lang.String != null ? java.lang.String . int ( ) : NUMBER ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( net.robotmedia.billing.model.Transaction.PurchaseState != null ? net.robotmedia.billing.model.Transaction.PurchaseState . int ( ) : NUMBER ) ; int = NUMBER * int + ( int ) ( long ^ ( long >>> NUMBER ) ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + java.lang.String + '\'' + STRING + java.lang.String + '\'' + STRING + new java.util.Date ( long ) + STRING + net.robotmedia.billing.model.Transaction.PurchaseState + '}' ; }  <METHOD_END>
<METHOD_START> public synchronized static void void ( @ Nonnull Context net.robotmedia.billing.model.Context ) { net.robotmedia.billing.model.Context . deleteDatabase ( BillingDB . DATABASE_NAME ) ; }  <METHOD_END>
<METHOD_START> public synchronized static void void ( @ Nonnull Transaction net.robotmedia.billing.model.Transaction ) { BillingDB . getInstance ( ) . insert ( net.robotmedia.billing.model.Transaction ) ; }  <METHOD_END>
<METHOD_START> public synchronized static boolean boolean ( @ Nonnull java.lang.String java.lang.String ) { return int ( java.lang.String ) > NUMBER ; }  <METHOD_END>
<METHOD_START> public synchronized static int int ( @ Nonnull java.lang.String java.lang.String ) { return AndroidDbUtils . doDbQuery ( BillingDB . getInstance ( ) . getDatabaseHelper ( ) , new BillingDB . BillingDB ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public synchronized static java.util.List<net.robotmedia.billing.model.Transaction> < Transaction > java.util.List<net.robotmedia.billing.model.Transaction> ( ) { return AndroidDbUtils . doDbQuery ( BillingDB . getInstance ( ) . getDatabaseHelper ( ) , new BillingDB . BillingDB ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public synchronized static java.util.List<net.robotmedia.billing.model.Transaction> < Transaction > java.util.List<net.robotmedia.billing.model.Transaction> ( @ Nonnull java.lang.String java.lang.String ) { return AndroidDbUtils . doDbQuery ( BillingDB . getInstance ( ) . getDatabaseHelper ( ) , new BillingDB . BillingDB ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( int int ) { return net.robotmedia.billing.ResponseCode . net.robotmedia.billing.ResponseCode . int == int ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static net.robotmedia.billing.ResponseCode net.robotmedia.billing.ResponseCode ( int int ) { for ( net.robotmedia.billing.ResponseCode net.robotmedia.billing.ResponseCode : net.robotmedia.billing.ResponseCode[] ( ) ) { if ( net.robotmedia.billing.ResponseCode . int == int ) { return net.robotmedia.billing.ResponseCode ; } } return net.robotmedia.billing.ResponseCode ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static net.robotmedia.billing.security.Cipherer<net.robotmedia.billing.security.Transaction,net.robotmedia.billing.security.Transaction> < Transaction , Transaction > net.robotmedia.billing.security.Cipherer<net.robotmedia.billing.security.Transaction,net.robotmedia.billing.security.Transaction> ( @ Nonnull byte [] byte[] , @ Nullable java.lang.String java.lang.String ) { final Cipherer < byte [] , byte [] > net.robotmedia.billing.security.Cipherer<byte[],byte[]> = Security . newAndroidAesByteCipherer ( byte[] ) ; Cipherer < java.lang.String , java.lang.String > net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> = TypedCipherer . newInstance ( net.robotmedia.billing.security.Cipherer<byte[],byte[]> , StringDecoder . getInstance ( ) , StringEncoder . getInstance ( ) , BillingBase64StringDecoder . getInstance ( ) , BillingBase64StringEncoder . getInstance ( ) ) ; if ( java.lang.String != null ) { net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> = PrefixStringObfuscator . newInstance ( java.lang.String , net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ) ; } return TransactionObfuscator . newInstance ( net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static net.robotmedia.billing.security.SecurityService<net.robotmedia.billing.security.Transaction,net.robotmedia.billing.security.Transaction,byte[]> < Transaction , Transaction , byte [] > net.robotmedia.billing.security.SecurityService<net.robotmedia.billing.security.Transaction,net.robotmedia.billing.security.Transaction,byte[]> ( byte [] byte[] , @ Nullable java.lang.String java.lang.String ) { return Security . newSecurityService ( net.robotmedia.billing.security.Cipherer<net.robotmedia.billing.security.Transaction,net.robotmedia.billing.security.Transaction> ( byte[] , java.lang.String ) , Security . newAndroidAesSecretKeyProvider ( ) , Security . newAndroidSaltGenerator ( ) , net.robotmedia.billing.security.HashProvider<net.robotmedia.billing.security.Transaction,byte[]> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static net.robotmedia.billing.security.HashProvider<net.robotmedia.billing.security.Transaction,byte[]> < Transaction , byte [] > net.robotmedia.billing.security.HashProvider<net.robotmedia.billing.security.Transaction,byte[]> ( ) { final HashProvider < byte [] , byte [] > net.robotmedia.billing.security.HashProvider<byte[],byte[]> = org . solovyev . android . security . Security . newAndroidSha512ByteHashProvider ( ) ; return TypedHashProvider . newByteHashCodeInstance ( net.robotmedia.billing.security.HashProvider<byte[],byte[]> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.lang.String java.lang.String ( @ Nonnull Context net.robotmedia.billing.security.Context ) { final java.lang.String java.lang.String = Installation . id ( net.robotmedia.billing.security.Context ) ; final java.lang.String java.lang.String = Settings . Secure . getString ( net.robotmedia.billing.security.Context . getContentResolver ( ) , Settings . Secure . ANDROID_ID ) ; return java.lang.String + java.lang.String + net.robotmedia.billing.security.Context . getPackageName ( ) ; }  <METHOD_END>
<METHOD_START> protected java.security.PublicKey java.security.PublicKey ( java.lang.String java.lang.String ) { try { byte [] byte[] = Base64 . decode ( java.lang.String ) ; java.security.KeyFactory java.security.KeyFactory = java.security.KeyFactory . java.security.KeyFactory ( java.lang.String ) ; return java.security.KeyFactory . java.security.PublicKey ( new java.security.spec.X509EncodedKeySpec ( byte[] ) ) ; } catch ( java.security.NoSuchAlgorithmException java.security.NoSuchAlgorithmException ) { throw new java.lang.RuntimeException ( java.security.NoSuchAlgorithmException ) ; } catch ( java.security.spec.InvalidKeySpecException java.security.spec.InvalidKeySpecException ) { Log . e ( BillingController . LOG_TAG , STRING ) ; throw new java.lang.IllegalArgumentException ( java.security.spec.InvalidKeySpecException ) ; } catch ( Base64DecoderException net.robotmedia.billing.security.Base64DecoderException ) { Log . e ( BillingController . LOG_TAG , STRING ) ; throw new java.lang.IllegalArgumentException ( net.robotmedia.billing.security.Base64DecoderException ) ; } }  <METHOD_END>
<METHOD_START> public void ( BillingController . BillingController BillingController.IConfiguration ) { this . BillingController.IConfiguration = BillingController.IConfiguration ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( java.security.PublicKey java.security.PublicKey , java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.security.Signature java.security.Signature ; try { java.security.Signature = java.security.Signature . java.security.Signature ( java.lang.String ) ; java.security.Signature . void ( java.security.PublicKey ) ; java.security.Signature . void ( java.lang.String . byte[] ( ) ) ; if ( ! java.security.Signature . boolean ( Base64 . decode ( java.lang.String ) ) ) { Log . e ( BillingController . LOG_TAG , STRING ) ; return false ; } return true ; } catch ( java.security.NoSuchAlgorithmException java.security.NoSuchAlgorithmException ) { Log . e ( BillingController . LOG_TAG , STRING ) ; } catch ( java.security.InvalidKeyException java.security.InvalidKeyException ) { Log . e ( BillingController . LOG_TAG , STRING ) ; } catch ( java.security.SignatureException java.security.SignatureException ) { Log . e ( BillingController . LOG_TAG , STRING ) ; } catch ( Base64DecoderException net.robotmedia.billing.security.Base64DecoderException ) { Log . e ( BillingController . LOG_TAG , STRING ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { final java.lang.String java.lang.String ; if ( BillingController.IConfiguration == null || TextUtils . isEmpty ( java.lang.String = BillingController.IConfiguration . getPublicKey ( ) ) ) { Log . w ( BillingController . LOG_TAG , STRING ) ; return false ; } if ( java.lang.String == null ) { Log . e ( BillingController . LOG_TAG , STRING ) ; return false ; } java.security.PublicKey java.security.PublicKey = java.security.PublicKey ( java.lang.String ) ; return boolean ( java.security.PublicKey , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Cipherer < java.lang.String , java.lang.String > net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ) { this . java.lang.String = java.lang.String ; this . net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ Nonnull static net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Cipherer < java.lang.String , java.lang.String > net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ) { return new net.robotmedia.billing.security.PrefixStringObfuscator ( java.lang.String , net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull javax.crypto.SecretKey javax.crypto.SecretKey , @ Nonnull java.lang.String java.lang.String ) throws net.robotmedia.billing.security.CiphererException { return net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> . encrypt ( javax.crypto.SecretKey , java.lang.String + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull javax.crypto.SecretKey javax.crypto.SecretKey , @ Nonnull java.lang.String java.lang.String ) throws net.robotmedia.billing.security.CiphererException { java.lang.String java.lang.String = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> . decrypt ( javax.crypto.SecretKey , java.lang.String ) ; final int int = java.lang.String . int ( java.lang.String ) ; if ( int != NUMBER ) { throw new CiphererException ( STRING + java.lang.String ) ; } return java.lang.String . java.lang.String ( java.lang.String . int ( ) , java.lang.String . int ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull Cipherer < java.lang.String , java.lang.String > net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ) { this . net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ Nonnull static net.robotmedia.billing.security.Cipherer<net.robotmedia.billing.security.Transaction,net.robotmedia.billing.security.Transaction> < Transaction , Transaction > net.robotmedia.billing.security.Cipherer<net.robotmedia.billing.security.Transaction,net.robotmedia.billing.security.Transaction> ( @ Nonnull Cipherer < java.lang.String , java.lang.String > net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ) { return new net.robotmedia.billing.security.TransactionObfuscator ( net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.security.Transaction net.robotmedia.billing.security.Transaction ( @ Nonnull javax.crypto.SecretKey javax.crypto.SecretKey , @ Nonnull Transaction net.robotmedia.billing.security.Transaction ) throws net.robotmedia.billing.security.CiphererException { decrypted . orderId = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> . encrypt ( javax.crypto.SecretKey , decrypted . orderId ) ; decrypted . productId = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> . encrypt ( javax.crypto.SecretKey , decrypted . productId ) ; decrypted . developerPayload = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> . encrypt ( javax.crypto.SecretKey , decrypted . developerPayload ) ; return net.robotmedia.billing.security.Transaction ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public net.robotmedia.billing.security.Transaction net.robotmedia.billing.security.Transaction ( @ Nonnull javax.crypto.SecretKey javax.crypto.SecretKey , @ Nonnull Transaction net.robotmedia.billing.security.Transaction ) throws net.robotmedia.billing.security.CiphererException { encrypted . orderId = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> . decrypt ( javax.crypto.SecretKey , encrypted . orderId ) ; encrypted . productId = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> . decrypt ( javax.crypto.SecretKey , encrypted . productId ) ; encrypted . developerPayload = net.robotmedia.billing.security.Cipherer<java.lang.String,java.lang.String> . decrypt ( javax.crypto.SecretKey , encrypted . developerPayload ) ; return net.robotmedia.billing.security.Transaction ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull byte [] byte[] , java.lang.String java.lang.String ) { try { final javax.crypto.SecretKeyFactory javax.crypto.SecretKeyFactory = javax.crypto.SecretKeyFactory . javax.crypto.SecretKeyFactory ( java.lang.String ) ; final java.security.spec.KeySpec java.security.spec.KeySpec = new javax.crypto.spec.PBEKeySpec ( java.lang.String . char[] ( ) , byte[] , NUMBER , NUMBER ) ; final javax.crypto.SecretKey javax.crypto.SecretKey = javax.crypto.SecretKeyFactory . javax.crypto.SecretKey ( java.security.spec.KeySpec ) ; final javax.crypto.SecretKey javax.crypto.SecretKey = new javax.crypto.spec.SecretKeySpec ( javax.crypto.SecretKey . byte[] ( ) , STRING ) ; javax.crypto.Cipher = javax.crypto.Cipher . javax.crypto.Cipher ( java.lang.String ) ; javax.crypto.Cipher . void ( javax.crypto.Cipher . int , javax.crypto.SecretKey , new javax.crypto.spec.IvParameterSpec ( byte[] ) ) ; javax.crypto.Cipher = javax.crypto.Cipher . javax.crypto.Cipher ( java.lang.String ) ; javax.crypto.Cipher . void ( javax.crypto.Cipher . int , javax.crypto.SecretKey , new javax.crypto.spec.IvParameterSpec ( byte[] ) ) ; } catch ( java.security.GeneralSecurityException java.security.GeneralSecurityException ) { throw new java.lang.RuntimeException ( STRING , java.security.GeneralSecurityException ) ; } }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.String java.lang.String ( @ Nullable java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return null ; } try { final java.lang.String java.lang.String = java.lang.String + java.lang.String ; byte [] byte[] = java.lang.String . byte[] ( java.lang.String ) ; byte [] byte[] = javax.crypto.Cipher . byte[] ( byte[] ) ; return Base64 . encode ( byte[] ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { throw new java.lang.RuntimeException ( STRING , java.io.UnsupportedEncodingException ) ; } catch ( java.security.GeneralSecurityException java.security.GeneralSecurityException ) { throw new java.lang.RuntimeException ( STRING , java.security.GeneralSecurityException ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) throws net.robotmedia.billing.utils.AESObfuscator.ValidationException { if ( java.lang.String == null ) { return null ; } try { final byte [] byte[] = Base64 . decode ( java.lang.String ) ; final byte [] byte[] = javax.crypto.Cipher . byte[] ( byte[] ) ; java.lang.String java.lang.String = new java.lang.String ( byte[] , java.lang.String ) ; int int = java.lang.String . int ( java.lang.String ) ; if ( int != NUMBER ) { throw new net.robotmedia.billing.utils.AESObfuscator.ValidationException ( STRING + STRING + java.lang.String ) ; } return java.lang.String . java.lang.String ( java.lang.String . int ( ) , java.lang.String . int ( ) ) ; } catch ( Base64DecoderException net.robotmedia.billing.utils.Base64DecoderException ) { throw new net.robotmedia.billing.utils.AESObfuscator.ValidationException ( net.robotmedia.billing.utils.Base64DecoderException . getMessage ( ) + STRING + java.lang.String ) ; } catch ( javax.crypto.IllegalBlockSizeException javax.crypto.IllegalBlockSizeException ) { throw new net.robotmedia.billing.utils.AESObfuscator.ValidationException ( javax.crypto.IllegalBlockSizeException . java.lang.String ( ) + STRING + java.lang.String ) ; } catch ( javax.crypto.BadPaddingException javax.crypto.BadPaddingException ) { throw new net.robotmedia.billing.utils.AESObfuscator.ValidationException ( javax.crypto.BadPaddingException . java.lang.String ( ) + STRING + java.lang.String ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { throw new java.lang.RuntimeException ( STRING , java.io.UnsupportedEncodingException ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super(); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> private static byte [] byte[] ( byte [] byte[] , int int , int int , byte [] byte[] , int int , byte [] byte[] ) { int int = ( int > NUMBER ? ( ( byte[] [ int ] << NUMBER ) >>> NUMBER ) : NUMBER ) | ( int > NUMBER ? ( ( byte[] [ int + NUMBER ] << NUMBER ) >>> NUMBER ) : NUMBER ) | ( int > NUMBER ? ( ( byte[] [ int + NUMBER ] << NUMBER ) >>> NUMBER ) : NUMBER ) ; switch ( int ) { case NUMBER : byte[] [ int ] = byte[] [ ( int >>> NUMBER ) ] ; byte[] [ int + NUMBER ] = byte[] [ ( int >>> NUMBER ) & NUMBER ] ; byte[] [ int + NUMBER ] = byte[] [ ( int >>> NUMBER ) & NUMBER ] ; byte[] [ int + NUMBER ] = byte[] [ ( int ) & NUMBER ] ; return byte[] ; case NUMBER : byte[] [ int ] = byte[] [ ( int >>> NUMBER ) ] ; byte[] [ int + NUMBER ] = byte[] [ ( int >>> NUMBER ) & NUMBER ] ; byte[] [ int + NUMBER ] = byte[] [ ( int >>> NUMBER ) & NUMBER ] ; byte[] [ int + NUMBER ] = byte ; return byte[] ; case NUMBER : byte[] [ int ] = byte[] [ ( int >>> NUMBER ) ] ; byte[] [ int + NUMBER ] = byte[] [ ( int >>> NUMBER ) & NUMBER ] ; byte[] [ int + NUMBER ] = byte ; byte[] [ int + NUMBER ] = byte ; return byte[] ; default: return byte[] ; } }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( byte [] byte[] ) { return java.lang.String ( byte[] , NUMBER , byte[] . int , byte[] , true ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( byte [] byte[] , boolean boolean ) { return java.lang.String ( byte[] , NUMBER , byte[] . int , byte[] , boolean ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( byte [] byte[] , int int , int int , byte [] byte[] , boolean boolean ) { byte [] byte[] = byte[] ( byte[] , int , int , byte[] , java.lang.Integer . int ) ; int int = byte[] . int ; while ( ! boolean && int > NUMBER ) { if ( byte[] [ int - NUMBER ] != '=' ) { break; } int -= NUMBER ; } return new java.lang.String ( byte[] , NUMBER , int ) ; }  <METHOD_END>
<METHOD_START> public static byte [] byte[] ( byte [] byte[] , int int , int int , byte [] byte[] , int int ) { int int = ( int + NUMBER ) / NUMBER ; int int = int * NUMBER ; byte [] byte[] = new byte [ int + ( int / int ) ] ; int int = NUMBER ; int int = NUMBER ; int int = int - NUMBER ; int int = NUMBER ; for (; int < int ; int += NUMBER , int += NUMBER ) { int int = ( ( byte[] [ int + int ] << NUMBER ) >>> NUMBER ) | ( ( byte[] [ int + NUMBER + int ] << NUMBER ) >>> NUMBER ) | ( ( byte[] [ int + NUMBER + int ] << NUMBER ) >>> NUMBER ) ; byte[] [ int ] = byte[] [ ( int >>> NUMBER ) ] ; byte[] [ int + NUMBER ] = byte[] [ ( int >>> NUMBER ) & NUMBER ] ; byte[] [ int + NUMBER ] = byte[] [ ( int >>> NUMBER ) & NUMBER ] ; byte[] [ int + NUMBER ] = byte[] [ ( int ) & NUMBER ] ; int += NUMBER ; if ( int == int ) { byte[] [ int + NUMBER ] = byte ; int ++ ; int = NUMBER ; } } if ( int < int ) { byte[] ( byte[] , int + int , int - int , byte[] , int , byte[] ) ; int += NUMBER ; if ( int == int ) { byte[] [ int + NUMBER ] = byte ; int ++ ; } int += NUMBER ; } assert ( int == byte[] . int ) ; return byte[] ; }  <METHOD_END>
<METHOD_START> private static int int ( byte [] byte[] , int int , byte [] byte[] , int int , byte [] byte[] ) { if ( byte[] [ int + NUMBER ] == byte ) { int int = ( ( byte[] [ byte[] [ int ] ] << NUMBER ) >>> NUMBER ) | ( ( byte[] [ byte[] [ int + NUMBER ] ] << NUMBER ) >>> NUMBER ) ; byte[] [ int ] = ( byte ) ( int >>> NUMBER ) ; return NUMBER ; } else if ( byte[] [ int + NUMBER ] == byte ) { int int = ( ( byte[] [ byte[] [ int ] ] << NUMBER ) >>> NUMBER ) | ( ( byte[] [ byte[] [ int + NUMBER ] ] << NUMBER ) >>> NUMBER ) | ( ( byte[] [ byte[] [ int + NUMBER ] ] << NUMBER ) >>> NUMBER ) ; byte[] [ int ] = ( byte ) ( int >>> NUMBER ) ; byte[] [ int + NUMBER ] = ( byte ) ( int >>> NUMBER ) ; return NUMBER ; } else { int int = ( ( byte[] [ byte[] [ int ] ] << NUMBER ) >>> NUMBER ) | ( ( byte[] [ byte[] [ int + NUMBER ] ] << NUMBER ) >>> NUMBER ) | ( ( byte[] [ byte[] [ int + NUMBER ] ] << NUMBER ) >>> NUMBER ) | ( ( byte[] [ byte[] [ int + NUMBER ] ] << NUMBER ) >>> NUMBER ) ; byte[] [ int ] = ( byte ) ( int >> NUMBER ) ; byte[] [ int + NUMBER ] = ( byte ) ( int >> NUMBER ) ; byte[] [ int + NUMBER ] = ( byte ) ( int ) ; return NUMBER ; } }  <METHOD_END>
<METHOD_START> public static byte [] byte[] ( java.lang.String java.lang.String ) throws net.robotmedia.billing.utils.Base64DecoderException { byte [] byte[] = java.lang.String . byte[] ( ) ; return byte[] ( byte[] , NUMBER , byte[] . int ) ; }  <METHOD_END>
<METHOD_START> public static byte [] byte[] ( java.lang.String java.lang.String ) throws net.robotmedia.billing.utils.Base64DecoderException { byte [] byte[] = java.lang.String . byte[] ( ) ; return byte[] ( byte[] , NUMBER , byte[] . int ) ; }  <METHOD_END>
<METHOD_START> public static byte [] byte[] ( byte [] byte[] ) throws net.robotmedia.billing.utils.Base64DecoderException { return byte[] ( byte[] , NUMBER , byte[] . int ) ; }  <METHOD_END>
<METHOD_START> public static byte [] byte[] ( byte [] byte[] )			throws net.robotmedia.billing.utils.Base64DecoderException { return byte[] ( byte[] , NUMBER , byte[] . int ) ; }  <METHOD_END>
<METHOD_START> public static byte [] byte[] ( byte [] byte[] , int int , int int )			throws net.robotmedia.billing.utils.Base64DecoderException { return byte[] ( byte[] , int , int , byte[] ) ; }  <METHOD_END>
<METHOD_START> public static byte [] byte[] ( byte [] byte[] , int int , int int )			throws net.robotmedia.billing.utils.Base64DecoderException { return byte[] ( byte[] , int , int , byte[] ) ; }  <METHOD_END>
<METHOD_START> public static byte [] byte[] ( byte [] byte[] , int int , int int , byte [] byte[] )			throws net.robotmedia.billing.utils.Base64DecoderException { int int = int * NUMBER / NUMBER ; byte [] byte[] = new byte [ NUMBER + int ] ; int int = NUMBER ; byte [] byte[] = new byte [ NUMBER ] ; int int = NUMBER ; int int = NUMBER ; byte byte = NUMBER ; byte byte = NUMBER ; for ( int = NUMBER ; int < int ; int ++ ) { byte = ( byte ) ( byte[] [ int + int ] & NUMBER ) ; byte = byte[] [ byte ] ; if ( byte >= byte ) { if ( byte >= byte ) { if ( byte == byte ) { int int = int - int ; byte byte = ( byte ) ( byte[] [ int - NUMBER + int ] & NUMBER ) ; if ( int == NUMBER || int == NUMBER ) { throw new Base64DecoderException ( STRING + int ) ; } else if ( ( int == NUMBER && int > NUMBER ) || ( int == NUMBER && int > NUMBER ) ) { throw new Base64DecoderException ( STRING + int ) ; } else if ( byte != byte && byte != byte ) { throw new Base64DecoderException ( STRING ) ; } break; } byte[] [ int ++ ] = byte ; if ( int == NUMBER ) { int += int ( byte[] , NUMBER , byte[] , int , byte[] ) ; int = NUMBER ; } } } else { throw new Base64DecoderException ( STRING + int + STRING + byte[] [ int + int ] + STRING ) ; } } if ( int != NUMBER ) { if ( int == NUMBER ) { throw new Base64DecoderException ( STRING + ( int - NUMBER ) ) ; } byte[] [ int ++ ] = byte ; int += int ( byte[] , NUMBER , byte[] , int , byte[] ) ; } byte [] byte[] = new byte [ int ] ; java.lang.System . void ( byte[] , NUMBER , byte[] , NUMBER , int ) ; return byte[] ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static net.robotmedia.billing.utils.Converter<java.lang.String,byte[]> < java.lang.String , byte [] > net.robotmedia.billing.utils.Converter<java.lang.String,byte[]> ( ) { return net.robotmedia.billing.utils.Converter<java.lang.String,byte[]> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public byte [] byte[] ( @ Nonnull java.lang.String java.lang.String ) { try { return Base64 . decode ( java.lang.String ) ; } catch ( Base64DecoderException net.robotmedia.billing.utils.Base64DecoderException ) { throw new java.lang.RuntimeException ( net.robotmedia.billing.utils.Base64DecoderException ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static net.robotmedia.billing.utils.Converter<byte[],java.lang.String> < byte [] , java.lang.String > net.robotmedia.billing.utils.Converter<byte[],java.lang.String> ( ) { return net.robotmedia.billing.utils.Converter<byte[],java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull byte [] byte[] ) { return Base64 . encode ( byte[] ) ; }  <METHOD_END>
<METHOD_START> private static void void ( ) { try { final java.lang.reflect.Field java.lang.reflect.Field = Service .class . java.lang.reflect.Field ( STRING ) ; int = java.lang.reflect.Field . int ( null ) ; } catch ( java.lang.Exception java.lang.Exception ) { Log . e ( java.lang.String , java.lang.Exception . java.lang.String ( ) , java.lang.Exception ) ; int = NUMBER ; } java.lang.reflect.Method = java.lang.reflect.Method ( Activity .class ) ; java.lang.reflect.Method = java.lang.reflect.Method ( Context .class ) ; }  <METHOD_END>
<METHOD_START> @ Nullable private static java.lang.reflect.Method java.lang.reflect.Method ( @ Nonnull java.lang.Class<? extends net.robotmedia.billing.utils.Context> < ? extends Context > java.lang.Class<? extends net.robotmedia.billing.utils.Context> ) { java.lang.reflect.Method java.lang.reflect.Method ; try { java.lang.reflect.Method = java.lang.Class<> . java.lang.reflect.Method ( STRING , java.lang.Class[] ) ; } catch ( java.lang.SecurityException java.lang.SecurityException ) { Log . e ( java.lang.String , java.lang.SecurityException . java.lang.String ( ) , java.lang.SecurityException ) ; java.lang.reflect.Method = null ; } catch ( java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) { Log . e ( java.lang.String , java.lang.NoSuchMethodException . java.lang.String ( ) , java.lang.NoSuchMethodException ) ; java.lang.reflect.Method = null ; } return java.lang.reflect.Method ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.utils.Context , @ Nonnull IntentSender net.robotmedia.billing.utils.IntentSender , @ Nullable Intent net.robotmedia.billing.utils.Intent ) { if ( net.robotmedia.billing.utils.Context instanceof Activity ) { void ( net.robotmedia.billing.utils.Context , net.robotmedia.billing.utils.IntentSender , net.robotmedia.billing.utils.Intent , java.lang.reflect.Method ) ; } else { void ( net.robotmedia.billing.utils.Context , net.robotmedia.billing.utils.IntentSender , net.robotmedia.billing.utils.Intent , java.lang.reflect.Method ) ; } }  <METHOD_END>
<METHOD_START> private static void void ( @ Nonnull Context net.robotmedia.billing.utils.Context , @ Nonnull IntentSender net.robotmedia.billing.utils.IntentSender , @ Nullable Intent net.robotmedia.billing.utils.Intent , @ Nullable java.lang.reflect.Method java.lang.reflect.Method ) { if ( java.lang.reflect.Method != null ) { final java.lang.Object [] java.lang.Object[] = new java.lang.Object [ NUMBER ] ; java.lang.Object[] [ NUMBER ] = net.robotmedia.billing.utils.IntentSender ; java.lang.Object[] [ NUMBER ] = net.robotmedia.billing.utils.Intent ; java.lang.Object[] [ NUMBER ] = NUMBER ; java.lang.Object[] [ NUMBER ] = NUMBER ; java.lang.Object[] [ NUMBER ] = NUMBER ; try { java.lang.reflect.Method . java.lang.Object ( net.robotmedia.billing.utils.Context , java.lang.Object[] ) ; } catch ( java.lang.Exception java.lang.Exception ) { Log . e ( java.lang.String , STRING , java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( @ Nonnull Context net.robotmedia.billing.utils.Context ) { if ( net.robotmedia.billing.utils.Context instanceof Activity ) { return java.lang.reflect.Method != null ; } else { return java.lang.reflect.Method != null ; } }  <METHOD_END>
<METHOD_START> public synchronized static java.lang.String java.lang.String ( @ Nonnull Context net.robotmedia.billing.utils.Context ) { if ( java.lang.String == null ) { synchronized ( java.lang.Object ) { final java.io.File java.io.File = new java.io.File ( net.robotmedia.billing.utils.Context . getFilesDir ( ) , java.lang.String ) ; try { if ( ! java.io.File . boolean ( ) ) { java.lang.String = java.lang.String ( java.io.File ) ; } else { java.lang.String = java.lang.String ( java.io.File ) ; } } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.RuntimeException ( java.lang.Exception ) ; } } } return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static java.lang.String java.lang.String ( @ Nonnull java.io.File java.io.File ) throws java.io.IOException { byte [] byte[] = null ; java.io.RandomAccessFile java.io.RandomAccessFile = null ; try { java.io.RandomAccessFile = new java.io.RandomAccessFile ( java.io.File , STRING ) ; byte[] = new byte [ ( int ) java.io.RandomAccessFile . long ( ) ] ; java.io.RandomAccessFile . void ( byte[] ) ; } catch ( java.io.IOException java.io.IOException ) { if ( java.io.RandomAccessFile != null ) { java.io.RandomAccessFile . void ( ) ; } } return new java.lang.String ( byte[] ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static java.lang.String java.lang.String ( @ Nonnull java.io.File java.io.File ) throws java.io.IOException { final java.lang.String java.lang.String = java.util.UUID . java.util.UUID ( ) . java.lang.String ( ) ; java.io.FileOutputStream java.io.FileOutputStream = null ; try { java.io.FileOutputStream = new java.io.FileOutputStream ( java.io.File ) ; java.io.FileOutputStream . void ( java.lang.String . byte[] ( ) ) ; } finally { if ( java.io.FileOutputStream != null ) { java.io.FileOutputStream . void ( ) ; } } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.utils.Context , @ Nonnull java.util.List<net.robotmedia.billing.utils.Transaction> < Transaction > java.util.List<net.robotmedia.billing.utils.Transaction> , @ Nullable byte [] byte[] ) { for ( Transaction net.robotmedia.billing.utils.Transaction : java.util.List<net.robotmedia.billing.utils.Transaction> ) { void ( net.robotmedia.billing.utils.Context , net.robotmedia.billing.utils.Transaction , byte[] ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.utils.Context , @ Nonnull Transaction net.robotmedia.billing.utils.Transaction , @ Nullable byte [] byte[] ) { if ( byte[] == null ) { return; } t . orderId = Security . obfuscate ( net.robotmedia.billing.utils.Context , byte[] , t . orderId ) ; t . productId = Security . obfuscate ( net.robotmedia.billing.utils.Context , byte[] , t . productId ) ; t . developerPayload = Security . obfuscate ( net.robotmedia.billing.utils.Context , byte[] , t . developerPayload ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context net.robotmedia.billing.utils.Context , @ Nonnull Transaction net.robotmedia.billing.utils.Transaction , @ Nullable byte [] byte[] ) { t . orderId = Security . unobfuscate ( net.robotmedia.billing.utils.Context , byte[] , t . orderId ) ; t . productId = Security . unobfuscate ( net.robotmedia.billing.utils.Context , byte[] , t . productId ) ; t . developerPayload = Security . unobfuscate ( net.robotmedia.billing.utils.Context , byte[] , t . developerPayload ) ; }  <METHOD_END>
<METHOD_START> public static long long ( ) { long long ; synchronized ( java.util.Set<java.lang.Long> ) { do { long = java.security.SecureRandom . long ( ) ; } while ( java.util.Set<java.lang.Long> . boolean ( long ) ); java.util.Set<java.lang.Long> . boolean ( long ) ; } return long ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( long long ) { synchronized ( java.util.Set<java.lang.Long> ) { return java.util.Set<java.lang.Long> . boolean ( long ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( long long ) { synchronized ( java.util.Set<java.lang.Long> ) { java.util.Set<java.lang.Long> . boolean ( long ) ; } }  <METHOD_END>
<METHOD_START> @ Nullable public static java.lang.String java.lang.String ( @ Nonnull Context net.robotmedia.billing.utils.Context , @ Nullable byte [] byte[] , @ Nullable java.lang.String java.lang.String ) { return byte[] == null ? java.lang.String : net.robotmedia.billing.utils.AESObfuscator ( net.robotmedia.billing.utils.Context , byte[] ) . obfuscate ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static net.robotmedia.billing.utils.AESObfuscator net.robotmedia.billing.utils.AESObfuscator ( @ Nonnull Context net.robotmedia.billing.utils.Context , @ Nonnull byte [] byte[] ) { synchronized ( java.lang.Object ) { if ( net.robotmedia.billing.utils.AESObfuscator == null ) { final java.lang.String java.lang.String = BillingSecurity . generatePassword ( net.robotmedia.billing.utils.Context ) ; net.robotmedia.billing.utils.AESObfuscator = new AESObfuscator ( byte[] , java.lang.String ) ; } return net.robotmedia.billing.utils.AESObfuscator ; } }  <METHOD_END>
<METHOD_START> @ Nullable public static java.lang.String java.lang.String ( @ Nonnull Context net.robotmedia.billing.utils.Context , @ Nullable byte [] byte[] , @ Nullable java.lang.String java.lang.String ) { if ( byte[] != null ) { final AESObfuscator net.robotmedia.billing.utils.AESObfuscator = net.robotmedia.billing.utils.AESObfuscator ( net.robotmedia.billing.utils.Context , byte[] ) ; try { return net.robotmedia.billing.utils.AESObfuscator . unobfuscate ( java.lang.String ) ; } catch ( ValidationException net.robotmedia.billing.utils.ValidationException ) { Log . w ( java.lang.String , STRING ) ; } return null ; } else { return java.lang.String ; } }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Activity org.solovyev.android.Activity ) { final Intent org.solovyev.android.Intent = org.solovyev.android.Activity . getIntent ( ) ; Log . d ( java.lang.String , STRING + org.solovyev.android.Activity . getClass ( ) . getSimpleName ( ) ) ; org.solovyev.android.Activity . finish ( ) ; org.solovyev.android.Activity . startActivity ( org.solovyev.android.Intent ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Intent org.solovyev.android.Intent , @ Nonnull Context org.solovyev.android.Context ) { void ( org.solovyev.android.Intent , false , org.solovyev.android.Context ) ; org.solovyev.android.Context . startActivity ( org.solovyev.android.Intent ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Intent org.solovyev.android.Intent , boolean boolean , @ Nonnull Context org.solovyev.android.Context ) { int int = NUMBER ; if ( ! ( org.solovyev.android.Context instanceof Activity ) ) { int = int | Intent . FLAG_ACTIVITY_NEW_TASK ; } if ( boolean ) { int = int | Intent . FLAG_ACTIVITY_NO_HISTORY ; } org.solovyev.android.Intent . setFlags ( int ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String ) { return java.lang.String ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { return java.lang.String + STRING + java.lang.String ; }  <METHOD_END>
<METHOD_START> public static int int ( @ Nonnull Context org.solovyev.android.Context , @ Nonnull java.lang.String java.lang.String ) throws PackageManager . PackageManager.NameNotFoundException { return org.solovyev.android.Context . getPackageManager ( ) . getPackageInfo ( java.lang.String , NUMBER ) . versionCode ; }  <METHOD_END>
<METHOD_START> public static int int ( @ Nonnull Context org.solovyev.android.Context ) { try { return int ( org.solovyev.android.Context , org.solovyev.android.Context . getPackageName ( ) ) ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { throw new java.lang.AssertionError ( PackageManager.NameNotFoundException ) ; } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( @ Nonnull DeviceModel org.solovyev.android.DeviceModel ) { final java.lang.String java.lang.String = Build . MODEL ; return java.lang.String != null && org.solovyev.android.DeviceModel . getModels ( ) . contains ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( @ Nonnull Context org.solovyev.android.Context ) { if ( java.lang.Boolean == null ) { java.lang.Boolean = NUMBER != ( org.solovyev.android.Context . getApplicationInfo ( ) . flags & ApplicationInfo . FLAG_DEBUGGABLE ) ; } return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static Parcelable . Parcelable < java.lang.String > getStringParcelableCreator ( ) { return StringParcelableCreator . getInstance ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public static void void ( @ Nonnull Intent org.solovyev.android.Intent , boolean boolean , @ Nonnull Context org.solovyev.android.Context ) { Activities . addIntentFlags ( org.solovyev.android.Intent , boolean , org.solovyev.android.Context ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public static void void ( @ Nonnull Context org.solovyev.android.Context , @ Nonnull java.lang.Class<?> < ? > java.lang.Class<?> , boolean boolean ) { void ( org.solovyev.android.Context , java.lang.Class<> , boolean ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context org.solovyev.android.Context , @ Nonnull java.lang.Class<?> < ? > java.lang.Class<?> , boolean boolean ) { final PackageManager org.solovyev.android.PackageManager = org.solovyev.android.Context . getPackageManager ( ) ; final int int ; if ( boolean ) { int = PackageManager . COMPONENT_ENABLED_STATE_ENABLED ; } else { int = PackageManager . COMPONENT_ENABLED_STATE_DISABLED ; } org.solovyev.android.PackageManager . setComponentEnabledSetting ( new ComponentName ( org.solovyev.android.Context , java.lang.Class<> ) , int , PackageManager . DONT_KILL_APP ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( @ Nonnull Context org.solovyev.android.Context , @ Nonnull java.lang.Class<? extends org.solovyev.android.Context> < ? extends Context > java.lang.Class<? extends org.solovyev.android.Context> ) { final PackageManager org.solovyev.android.PackageManager = org.solovyev.android.Context . getPackageManager ( ) ; int int = org.solovyev.android.PackageManager . getComponentEnabledSetting ( new ComponentName ( org.solovyev.android.Context , java.lang.Class<> ) ) ; return int == PackageManager . COMPONENT_ENABLED_STATE_ENABLED || int == PackageManager . COMPONENT_ENABLED_STATE_DEFAULT ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( @ Nonnull Bitmap org.solovyev.android.Bitmap , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { final java.io.File java.io.File = new java.io.File ( java.lang.String ) ; java.io.File . boolean ( ) ; final java.io.File java.io.File = new java.io.File ( java.lang.String , java.lang.String ) ; if ( ! java.io.File . boolean ( ) ) { final java.lang.String java.lang.String = java.io.File . java.lang.String ( ) ; java.io.FileOutputStream java.io.FileOutputStream = null ; try { java.io.FileOutputStream = new java.io.FileOutputStream ( java.lang.String ) ; org.solovyev.android.Bitmap . compress ( Bitmap . CompressFormat . PNG , NUMBER , java.io.FileOutputStream ) ; java.io.FileOutputStream . void ( ) ; } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { Log . e ( java.lang.String , java.io.FileNotFoundException . java.lang.String ( ) , java.io.FileNotFoundException ) ; } catch ( java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , java.io.IOException . java.lang.String ( ) , java.io.IOException ) ; } finally { if ( java.io.FileOutputStream != null ) { try { java.io.FileOutputStream . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , java.io.IOException . java.lang.String ( ) , java.io.IOException ) ; } } } return java.lang.String ; } return null ; }  <METHOD_END>
<METHOD_START> protected void ( ) { this . java.lang.ref.WeakReference<org.solovyev.android.async.Context> = new java.lang.ref.WeakReference<org.solovyev.android.async.Context> < Context > ( null ) ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull Context org.solovyev.android.async.Context ) { this . java.lang.ref.WeakReference<org.solovyev.android.async.Context> = new java.lang.ref.WeakReference<org.solovyev.android.async.Context> < Context > ( org.solovyev.android.async.Context ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected final org.solovyev.android.async.CommonAsyncTask.Result<RESULT> < RESULT > org.solovyev.android.async.CommonAsyncTask.Result<RESULT> ( PARAM ... PARAM[] ) { try { return new org.solovyev.android.async.CommonAsyncTask.CommonResult<RESULT> < RESULT > ( RESULT ( Collections . asList ( PARAM[] ) ) ) ; } catch ( org.solovyev.android.async.CommonAsyncTask.CommonAsyncTaskRuntimeException org.solovyev.android.async.CommonAsyncTask.CommonAsyncTaskRuntimeException ) { return new org.solovyev.android.async.CommonAsyncTask.CommonResult<RESULT> < RESULT > ( org.solovyev.android.async.CommonAsyncTask.CommonAsyncTaskRuntimeException . java.lang.Exception ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { return new org.solovyev.android.async.CommonAsyncTask.CommonResult<RESULT> < RESULT > ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> protected abstract RESULT RESULT ( @ Nonnull java.util.List<PARAM> < PARAM > java.util.List<PARAM> );  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull org.solovyev.android.async.CommonAsyncTask.Result<RESULT> < RESULT > org.solovyev.android.async.CommonAsyncTask.Result<RESULT> ) { super. onPostExecute ( org.solovyev.android.async.CommonAsyncTask.Result<RESULT> ) ; if ( org.solovyev.android.async.CommonAsyncTask.Result<RESULT> . boolean ( ) ) { void ( org.solovyev.android.async.CommonAsyncTask.Result<RESULT> . java.lang.Exception ( ) ) ; } else { void ( org.solovyev.android.async.CommonAsyncTask.Result<RESULT> . RESULT ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Nullable protected org.solovyev.android.async.Context org.solovyev.android.async.Context ( ) { return java.lang.ref.WeakReference<org.solovyev.android.async.Context> . get ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( @ Nullable RESULT RESULT );  <METHOD_END>
<METHOD_START> protected abstract void void ( @ Nonnull java.lang.Exception java.lang.Exception );  <METHOD_END>
<METHOD_START> public void ( @ Nullable SR SR ) { this . SR = SR ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Exception java.lang.Exception ) { this . java.lang.Exception = java.lang.Exception ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public SR SR ( ) { return SR ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Exception java.lang.Exception ( ) { return this . java.lang.Exception ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . java.lang.Exception != null ; }  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Exception java.lang.Exception ( )  <METHOD_END>
<METHOD_START> @ Nullable SR SR ( )  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { throw new org.solovyev.android.async.CommonAsyncTask.CommonAsyncTaskRuntimeException ( java.lang.Exception ) ; }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { if ( java.lang.Exception instanceof java.lang.RuntimeException ) { throw ( java.lang.RuntimeException ) java.lang.Exception ; } else { Log . e ( java.lang.String , java.lang.Exception . java.lang.String ( ) , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Exception java.lang.Exception ) { this . java.lang.Exception = java.lang.Exception ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.Exception java.lang.Exception ( ) { return java.lang.Exception ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Parcel org.solovyev.android.captcha.Parcel , int int ) { org.solovyev.android.captcha.Parcel . writeString ( java.lang.String ) ; org.solovyev.android.captcha.Parcel . writeString ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.captcha.ResolvedCaptcha org.solovyev.android.captcha.ResolvedCaptcha ( @ Nonnull java.lang.String java.lang.String ) { return new ResolvedCaptcha ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> void ( @ Nonnull java.lang.String ... java.lang.String[] ) { this . java.util.List<java.lang.String> = java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull FragmentActivity org.solovyev.android.FragmentActivity , @ Nonnull java.lang.String java.lang.String , @ Nonnull AlertDialog . AlertDialog AlertDialog.Builder ) { this . org.solovyev.android.FragmentActivity = org.solovyev.android.FragmentActivity ; this . java.lang.String = java.lang.String ; this . AlertDialog.Builder = AlertDialog.Builder ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( false ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( boolean ) { Fragments . showDialog ( new org.solovyev.android.DialogFragmentShower.AlertDialogFragment ( AlertDialog.Builder ) , java.lang.String , org.solovyev.android.FragmentActivity . getSupportFragmentManager ( ) ) ; } else { final FragmentManager org.solovyev.android.FragmentManager = org.solovyev.android.FragmentActivity . getSupportFragmentManager ( ) ; final org.solovyev.android.DialogFragmentShower.AlertDialogFragment org.solovyev.android.DialogFragmentShower.AlertDialogFragment = new org.solovyev.android.DialogFragmentShower.AlertDialogFragment ( AlertDialog.Builder ) ; org.solovyev.android.DialogFragmentShower.AlertDialogFragment . show ( org.solovyev.android.FragmentManager , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull AlertDialog . AlertDialog AlertDialog.Builder ) { this . AlertDialog.Builder = AlertDialog.Builder ; }  <METHOD_END>
<METHOD_START> public void ( ) { this . AlertDialog.Builder = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle org.solovyev.android.Bundle ) { super. onCreate ( org.solovyev.android.Bundle ) ; if ( AlertDialog.Builder == null ) { dismiss ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.Dialog org.solovyev.android.Dialog ( Bundle org.solovyev.android.Bundle ) { if ( AlertDialog.Builder != null ) { return AlertDialog.Builder . create ( ) ; } else { return super. onCreateDialog ( org.solovyev.android.Bundle ) ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.Context , @ Nonnull java.lang.String java.lang.String ) { if ( getExternalStorageState ( ) . equals ( MEDIA_MOUNTED ) ) { java.io.File = new java.io.File ( java.lang.String ( org.solovyev.android.Context ) , java.lang.String ) ; } else { java.io.File = new java.io.File ( java.lang.String ( org.solovyev.android.Context ) , java.lang.String ) ; } if ( ! java.io.File . boolean ( ) ) { java.io.File . boolean ( ) ; } }  <METHOD_END>
<METHOD_START> @ Nullable private java.lang.String java.lang.String ( @ Nonnull Context org.solovyev.android.Context ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . FROYO ) { final java.io.File java.io.File = org.solovyev.android.Context . getExternalCacheDir ( ) ; return java.io.File != null ? java.io.File . java.lang.String ( ) : java.lang.String ( org.solovyev.android.Context ) ; } else { return getExternalStorageDirectory ( ) . getPath ( ) + STRING + org.solovyev.android.Context . getPackageName ( ) + STRING ; } }  <METHOD_END>
<METHOD_START> @ Nullable private java.lang.String java.lang.String ( @ Nonnull Context org.solovyev.android.Context ) { final java.io.File java.io.File = org.solovyev.android.Context . getCacheDir ( ) ; return java.io.File != null ? java.io.File . java.lang.String ( ) : null ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.io.File java.io.File ( @ Nonnull java.lang.String java.lang.String ) { return new java.io.File ( java.io.File , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final java.io.File [] java.io.File[] = java.io.File . java.io.File[] ( ) ; if ( java.io.File[] != null ) { for ( java.io.File java.io.File : java.io.File[] ) { java.io.File . boolean ( ) ; } } }  <METHOD_END>
<METHOD_START> protected void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull DialogFragment org.solovyev.android.DialogFragment , @ Nonnull java.lang.String java.lang.String , @ Nonnull FragmentManager org.solovyev.android.FragmentManager ) { final FragmentTransaction org.solovyev.android.FragmentTransaction = org.solovyev.android.FragmentManager . beginTransaction ( ) ; Fragment org.solovyev.android.Fragment = org.solovyev.android.FragmentManager . findFragmentByTag ( java.lang.String ) ; if ( org.solovyev.android.Fragment != null ) { org.solovyev.android.FragmentTransaction . remove ( org.solovyev.android.Fragment ) ; } org.solovyev.android.FragmentTransaction . addToBackStack ( null ) ; org.solovyev.android.DialogFragment . show ( org.solovyev.android.FragmentTransaction , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull android . android . android . android . android android.support.v4.app.DialogFragment , @ Nonnull java.lang.String java.lang.String , @ Nonnull android . android . android . android . android android.support.v4.app.FragmentManager ) { final android . android . android . android . android android.support.v4.app.FragmentTransaction = android.support.v4.app.FragmentManager . beginTransaction ( ) ; android . android . android . android . android android.support.v4.app.Fragment = android.support.v4.app.FragmentManager . findFragmentByTag ( java.lang.String ) ; if ( android.support.v4.app.Fragment != null ) { android.support.v4.app.FragmentTransaction . remove ( android.support.v4.app.Fragment ) ; } android.support.v4.app.FragmentTransaction . addToBackStack ( null ) ; android.support.v4.app.DialogFragment . show ( android.support.v4.app.FragmentTransaction , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull FragmentActivity org.solovyev.android.FragmentActivity , @ Nonnull java.lang.Class<? extends android.support.v4.app.Fragment> < ? extends android . android . android . android . android > java.lang.Class<? extends android.support.v4.app.Fragment> , int int , @ Nonnull java.lang.String java.lang.String ) { void ( org.solovyev.android.FragmentActivity , java.lang.Class<> , int , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull FragmentActivity org.solovyev.android.FragmentActivity , @ Nonnull java.lang.Class<? extends android.support.v4.app.Fragment> < ? extends android . android . android . android . android > java.lang.Class<? extends android.support.v4.app.Fragment> , int int , @ Nonnull java.lang.String java.lang.String , @ Nullable Bundle org.solovyev.android.Bundle ) { final android . android . android . android . android android.support.v4.app.FragmentManager = org.solovyev.android.FragmentActivity . getSupportFragmentManager ( ) ; android . android . android . android . android android.support.v4.app.Fragment = android.support.v4.app.FragmentManager . findFragmentByTag ( java.lang.String ) ; final android . android . android . android . android android.support.v4.app.FragmentTransaction = android.support.v4.app.FragmentManager . beginTransaction ( ) ; try { if ( android.support.v4.app.Fragment == null ) { android.support.v4.app.Fragment = android . support . v4 . app . Fragment . instantiate ( org.solovyev.android.FragmentActivity , java.lang.Class<> . java.lang.String ( ) , org.solovyev.android.Bundle ) ; android.support.v4.app.FragmentTransaction . add ( int , android.support.v4.app.Fragment , java.lang.String ) ; } else { if ( android.support.v4.app.Fragment . isDetached ( ) ) { android.support.v4.app.FragmentTransaction . attach ( android.support.v4.app.Fragment ) ; } } } finally { android.support.v4.app.FragmentTransaction . commit ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.Context ) { this . org.solovyev.android.Context = org.solovyev.android.Context ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( @ Nullable T T ) throws java.lang.IllegalArgumentException { assert T != null ; return org.solovyev.android.Context . getString ( T . getCaptionResId ( ) ) ; }  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull java.lang.Class<E> < E > java.lang.Class<E> ) { super( java.lang.Class<E> ); org.solovyev.android.listeners.Handler = Threads . newUiHandler ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull final E E ) { org.solovyev.android.listeners.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( E ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( E ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( @ Nonnull E E );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.properties.AProperties org.solovyev.android.properties.AProperties ( )  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.properties.AProperty org.solovyev.android.properties.AProperty ( @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Nullable java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Nonnull java.util.Collection<org.solovyev.android.properties.AProperty> < AProperty > java.util.Collection<org.solovyev.android.properties.AProperty> ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.properties.APropertyImpl org.solovyev.android.properties.APropertyImpl ( @ Nonnull Parcel org.solovyev.android.properties.Parcel ) { return org.solovyev.android.properties.APropertyImpl ( org.solovyev.android.properties.Parcel ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.properties.APropertyImpl [] org.solovyev.android.properties.APropertyImpl[] ( int int ) { return new org.solovyev.android.properties.APropertyImpl [ int ] ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static org.solovyev.android.properties.APropertyImpl org.solovyev.android.properties.APropertyImpl ( @ Nonnull Parcel org.solovyev.android.properties.Parcel ) { final java.lang.String java.lang.String = org.solovyev.android.properties.Parcel . readString ( ) ; final java.lang.String java.lang.String = org.solovyev.android.properties.Parcel . readString ( ) ; return ( org.solovyev.android.properties.APropertyImpl ) org.solovyev.android.properties.AProperty ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.properties.AProperty org.solovyev.android.properties.AProperty ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String ) { return new org.solovyev.android.properties.APropertyImpl ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Parcel org.solovyev.android.properties.Parcel , int int ) { org.solovyev.android.properties.Parcel . writeString ( java.lang.String ) ; org.solovyev.android.properties.Parcel . writeString ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.properties.APropertyImpl org.solovyev.android.properties.APropertyImpl ( ) { return ( org.solovyev.android.properties.APropertyImpl ) super. java.lang.Object ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( java.lang.Object == null || java.lang.Class<? extends org.solovyev.android.properties.APropertyImpl> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) return false ; final org.solovyev.android.properties.APropertyImpl org.solovyev.android.properties.APropertyImpl = ( org.solovyev.android.properties.APropertyImpl ) java.lang.Object ; if ( ! java.lang.String . boolean ( org.solovyev.android.properties.APropertyImpl . java.lang.String ) ) return false ; if ( java.lang.String != null ? ! java.lang.String . boolean ( org.solovyev.android.properties.APropertyImpl . java.lang.String ) : org.solovyev.android.properties.APropertyImpl . java.lang.String != null ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = java.lang.String . int ( ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; return int ; }  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> boolean boolean ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull static org.solovyev.android.properties.MutableAProperties org.solovyev.android.properties.MutableAProperties ( @ Nonnull MutableAProperties org.solovyev.android.properties.MutableAProperties ) { return org.solovyev.android.properties.MutableAProperties . clone ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull static org.solovyev.android.properties.MutableAProperties org.solovyev.android.properties.MutableAProperties ( @ Nonnull java.util.Collection<org.solovyev.android.properties.AProperty> < AProperty > java.util.Collection<org.solovyev.android.properties.AProperty> ) { final org.solovyev.android.properties.MutableAPropertiesImpl org.solovyev.android.properties.MutableAPropertiesImpl = new org.solovyev.android.properties.MutableAPropertiesImpl ( ) ; for ( AProperty org.solovyev.android.properties.AProperty : java.util.Collection<org.solovyev.android.properties.AProperty> ) { org.solovyev.android.properties.MutableAPropertiesImpl . void ( org.solovyev.android.properties.AProperty ) ; } return org.solovyev.android.properties.MutableAPropertiesImpl ; }  <METHOD_END>
<METHOD_START> @ Nonnull static org.solovyev.android.properties.MutableAProperties org.solovyev.android.properties.MutableAProperties ( @ Nonnull java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> < java.lang.String , AProperty > java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> ) { final org.solovyev.android.properties.MutableAPropertiesImpl org.solovyev.android.properties.MutableAPropertiesImpl = new org.solovyev.android.properties.MutableAPropertiesImpl ( ) ; for ( AProperty org.solovyev.android.properties.AProperty : java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> . values ( ) ) { org.solovyev.android.properties.MutableAPropertiesImpl . void ( org.solovyev.android.properties.AProperty ) ; } return org.solovyev.android.properties.MutableAPropertiesImpl ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.properties.MutableAPropertiesImpl org.solovyev.android.properties.MutableAPropertiesImpl ( ) { final org.solovyev.android.properties.MutableAPropertiesImpl org.solovyev.android.properties.MutableAPropertiesImpl = ( org.solovyev.android.properties.MutableAPropertiesImpl ) super. java.lang.Object ( ) ; org.solovyev.android.properties.MutableAPropertiesImpl . java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> = Cloneables . cloneMap ( this . java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> ) ; return org.solovyev.android.properties.MutableAPropertiesImpl ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public org.solovyev.android.properties.AProperty org.solovyev.android.properties.AProperty ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { final AProperty org.solovyev.android.properties.AProperty = APropertyImpl . newInstance ( java.lang.String , java.lang.String ) ; java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> . put ( java.lang.String , org.solovyev.android.properties.AProperty ) ; return org.solovyev.android.properties.AProperty ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull AProperty org.solovyev.android.properties.AProperty ) { java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> . put ( org.solovyev.android.properties.AProperty . getName ( ) , org.solovyev.android.properties.AProperty ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull MutableAProperties org.solovyev.android.properties.MutableAProperties ) { for ( AProperty org.solovyev.android.properties.AProperty : org.solovyev.android.properties.MutableAProperties . getProperties ( ) . values ( ) ) { void ( org.solovyev.android.properties.AProperty ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.util.Collection<org.solovyev.android.properties.AProperty> < AProperty > java.util.Collection<org.solovyev.android.properties.AProperty> ) { for ( AProperty org.solovyev.android.properties.AProperty : java.util.Collection<org.solovyev.android.properties.AProperty> ) { void ( org.solovyev.android.properties.AProperty ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public org.solovyev.android.properties.AProperty org.solovyev.android.properties.AProperty ( @ Nonnull java.lang.String java.lang.String ) { return java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> . remove ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public org.solovyev.android.properties.AProperty org.solovyev.android.properties.AProperty ( @ Nonnull java.lang.String java.lang.String ) { return java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String ) { final AProperty org.solovyev.android.properties.AProperty = java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> . get ( java.lang.String ) ; return org.solovyev.android.properties.AProperty == null ? null : org.solovyev.android.properties.AProperty . getValue ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> . clear ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> < java.lang.String , AProperty > java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> ( ) { return java.util.Collections . java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> ( this . java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public java.util.Collection<org.solovyev.android.properties.AProperty> < AProperty > java.util.Collection<org.solovyev.android.properties.AProperty> ( ) { return java.util.Collections . java.util.Collection ( this . java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> . values ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override org.solovyev.android.properties.MutableAProperties org.solovyev.android.properties.MutableAProperties ( )  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.properties.AProperty org.solovyev.android.properties.AProperty ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull AProperty org.solovyev.android.properties.AProperty );  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.properties.AProperty org.solovyev.android.properties.AProperty ( @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> < java.lang.String , AProperty > java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull org.solovyev.android.properties.MutableAProperties org.solovyev.android.properties.MutableAProperties );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.util.Collection<org.solovyev.android.properties.AProperty> < AProperty > java.util.Collection<org.solovyev.android.properties.AProperty> );  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.properties.AProperty org.solovyev.android.properties.AProperty ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String ) { return APropertyImpl . newInstance ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.properties.MutableAProperties org.solovyev.android.properties.MutableAProperties ( @ Nonnull java.util.Collection<org.solovyev.android.properties.AProperty> < AProperty > java.util.Collection<org.solovyev.android.properties.AProperty> ) { return MutableAPropertiesImpl . newInstance ( java.util.Collection<org.solovyev.android.properties.AProperty> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.properties.MutableAProperties org.solovyev.android.properties.MutableAProperties ( @ Nonnull java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> < java.lang.String , AProperty > java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> ) { return MutableAPropertiesImpl . newInstance ( java.util.Map<java.lang.String,org.solovyev.android.properties.AProperty> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.properties.MutableAProperties org.solovyev.android.properties.MutableAProperties ( @ Nonnull MutableAProperties org.solovyev.android.properties.MutableAProperties ) { return MutableAPropertiesImpl . copyOf ( org.solovyev.android.properties.MutableAProperties ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull static Parcelable . Parcelable < java.lang.String > getInstance ( ) { return instance ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Parcel org.solovyev.android.Parcel ) { return org.solovyev.android.Parcel . readString ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( int int ) { return new java.lang.String [ int ] ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nullable final Activity org.solovyev.android.Activity , @ Nonnull final java.lang.Runnable java.lang.Runnable ) { if ( org.solovyev.android.Activity != null && ! org.solovyev.android.Activity . isFinishing ( ) ) { if ( boolean ( ) ) { java.lang.Runnable . void ( ) ; } else { org.solovyev.android.Activity . runOnUiThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( ! org.solovyev.android.Activity . isFinishing ( ) ) { java.lang.Runnable . void ( ) ; } } } ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( ! org.solovyev.android.Activity . isFinishing ( ) ) { java.lang.Runnable . void ( ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull final Fragment org.solovyev.android.Fragment , @ Nonnull final java.lang.Runnable java.lang.Runnable ) { org.solovyev.android.Threads . void ( org.solovyev.android.Fragment . getActivity ( ) , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { final FragmentActivity org.solovyev.android.FragmentActivity = org.solovyev.android.Fragment . getActivity ( ) ; if ( org.solovyev.android.FragmentActivity != null ) { java.lang.Runnable . void ( ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final FragmentActivity org.solovyev.android.FragmentActivity = org.solovyev.android.Fragment . getActivity ( ) ; if ( org.solovyev.android.FragmentActivity != null ) { java.lang.Runnable . void ( ) ; } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { return Looper . myLooper ( ) == Looper . getMainLooper ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.Handler org.solovyev.android.Handler ( ) { return new Handler ( Looper . getMainLooper ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this . org.solovyev.android.Handler = Threads . newUiHandler ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.Runnable java.lang.Runnable , long long , @ Nonnull java.util.concurrent.TimeUnit java.util.concurrent.TimeUnit ) { this . org.solovyev.android.Handler . postDelayed ( java.lang.Runnable , java.util.concurrent.TimeUnit . long ( long ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.Runnable java.lang.Runnable ) { this . org.solovyev.android.Handler . post ( java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String ) { this( java.lang.String , null ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nullable Drawable org.solovyev.android.view.Drawable ) { this . java.lang.String = java.lang.String ; this . org.solovyev.android.view.Drawable = org.solovyev.android.view.Drawable ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.DrawableFromIsConverter org.solovyev.android.view.DrawableFromIsConverter ( ) { return org.solovyev.android.view.DrawableFromIsConverter ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.Drawable org.solovyev.android.view.Drawable ( @ Nonnull java.io.InputStream java.io.InputStream ) { Drawable org.solovyev.android.view.Drawable = Drawable . createFromStream ( java.io.InputStream , java.lang.String ) ; if ( org.solovyev.android.view.Drawable == null ) { org.solovyev.android.view.Drawable = org.solovyev.android.view.Drawable ; } if ( org.solovyev.android.view.Drawable == null ) { throw new org.solovyev.android.view.DrawableFromIsConverter.DrawableConversionFailedException ( ) ; } return org.solovyev.android.view.Drawable ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull View org.solovyev.android.View , @ Nonnull org.solovyev.android.Views.ViewProcessor<org.solovyev.android.View> < View > org.solovyev.android.Views.ViewProcessor<org.solovyev.android.View> ) { void ( org.solovyev.android.View , null , org.solovyev.android.Views.ViewProcessor<org.solovyev.android.View> ) ; }  <METHOD_END>
<METHOD_START> static < T > void void ( @ Nonnull View org.solovyev.android.View , @ Nullable java.lang.Class<T> < T > java.lang.Class<T> , @ Nonnull org.solovyev.android.Views.ViewProcessor<T> < T > org.solovyev.android.Views.ViewProcessor<T> ) { if ( org.solovyev.android.View instanceof ViewGroup ) { final ViewGroup org.solovyev.android.ViewGroup = ( ViewGroup ) org.solovyev.android.View ; if ( java.lang.Class<T> == null || java.lang.Class<T> . boolean ( ViewGroup .class ) ) { org.solovyev.android.Views.ViewProcessor<T> . void ( ( T ) org.solovyev.android.ViewGroup ) ; } for ( int int = NUMBER ; int < org.solovyev.android.ViewGroup . getChildCount ( ) ; int ++ ) { void ( org.solovyev.android.ViewGroup . getChildAt ( int ) , java.lang.Class<T> , org.solovyev.android.Views.ViewProcessor<T> ) ; } } else if ( java.lang.Class<T> == null || java.lang.Class<T> . boolean ( org.solovyev.android.View . getClass ( ) ) ) { org.solovyev.android.Views.ViewProcessor<T> . void ( ( T ) org.solovyev.android.View ) ; } }  <METHOD_END>
<METHOD_START> public static < T > void void ( @ Nonnull View org.solovyev.android.View , @ Nonnull java.lang.Class<T> < T > java.lang.Class<T> , @ Nonnull org.solovyev.android.Views.ViewProcessor<T> < T > org.solovyev.android.Views.ViewProcessor<T> ) { void ( org.solovyev.android.View , java.lang.Class<T> , org.solovyev.android.Views.ViewProcessor<T> ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull TabHost org.solovyev.android.TabHost ) { if ( boolean ( ) ) { int int = org.solovyev.android.TabHost . getTabWidget ( ) . getTabCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View org.solovyev.android.View = org.solovyev.android.TabHost . getTabWidget ( ) . getChildTabViewAt ( int ) ; if ( org.solovyev.android.View != null ) { if ( org.solovyev.android.View . getLayoutParams ( ) . height > NUMBER ) { org.solovyev.android.View . getLayoutParams ( ) . height *= NUMBER ; } final View org.solovyev.android.View = org.solovyev.android.View . findViewById ( android . R . id . title ) ; if ( org.solovyev.android.View instanceof TextView ) { ( ( TextView ) org.solovyev.android.View ) . setGravity ( Gravity . CENTER ) ; ( ( TextView ) org.solovyev.android.View ) . setSingleLine ( false ) ; org.solovyev.android.View . getLayoutParams ( ) . height = ViewGroup . LayoutParams . FILL_PARENT ; org.solovyev.android.View . getLayoutParams ( ) . width = ViewGroup . LayoutParams . WRAP_CONTENT ; } } } } }  <METHOD_END>
<METHOD_START> private static boolean boolean ( ) { boolean boolean = true ; java.lang.String java.lang.String = Build . MODEL ; if ( java.lang.String != null ) { java.lang.String = java.lang.String . java.lang.String ( ) ; if ( java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ) { boolean = false ; Log . i ( Android .class . java.lang.String ( ) , STRING + Build . MODEL ) ; } } if ( boolean ) { java.lang.String java.lang.String = Build . DISPLAY ; if ( java.lang.String != null ) { java.lang.String = java.lang.String . java.lang.String ( ) ; if ( java.lang.String . boolean ( STRING ) ) { boolean = false ; Log . i ( Android .class . java.lang.String ( ) , STRING + Build . DISPLAY ) ; } } } return boolean ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Context org.solovyev.android.Context , @ Nonnull TabHost org.solovyev.android.TabHost , @ Nonnull java.lang.String java.lang.String , int int , @ Nonnull java.lang.Class<? extends org.solovyev.android.Activity> < ? extends Activity > java.lang.Class<? extends org.solovyev.android.Activity> ) { final Intent org.solovyev.android.Intent = new Intent ( ) . setClass ( org.solovyev.android.Context , java.lang.Class<> ) ; final TabHost . TabHost TabHost.TabSpec = org.solovyev.android.TabHost . newTabSpec ( java.lang.String ) . setIndicator ( org.solovyev.android.Context . getString ( int ) ) . setContent ( org.solovyev.android.Intent ) ; org.solovyev.android.TabHost . addTab ( TabHost.TabSpec ) ; }  <METHOD_END>
<METHOD_START> public static int int ( @ Nonnull DisplayMetrics org.solovyev.android.DisplayMetrics , float float ) { final float float = dm . density ; return ( int ) ( float * float + NUMBER ) ; }  <METHOD_END>
<METHOD_START> public static int int ( @ Nonnull Activity org.solovyev.android.Activity ) { final Display org.solovyev.android.Display = org.solovyev.android.Activity . getWindowManager ( ) . getDefaultDisplay ( ) ; final int int ; if ( org.solovyev.android.Display . getWidth ( ) <= org.solovyev.android.Display . getHeight ( ) ) { int = Configuration . ORIENTATION_PORTRAIT ; } else { int = Configuration . ORIENTATION_LANDSCAPE ; } return int ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( int int , @ Nonnull Configuration org.solovyev.android.Configuration ) { int int = configuration . screenLayout & Configuration . SCREENLAYOUT_SIZE_MASK ; if ( int == Configuration . SCREENLAYOUT_SIZE_UNDEFINED ) return false ; return int >= int ; }  <METHOD_END>
<METHOD_START> public static int int ( @ Nonnull MotionEvent org.solovyev.android.MotionEvent ) { return boolean ? org.solovyev.android.MotionEvent . getPointerCount ( ) : NUMBER ; }  <METHOD_END>
<METHOD_START> public static float float ( @ Nonnull MotionEvent org.solovyev.android.MotionEvent , int int ) { return boolean ? org.solovyev.android.MotionEvent . getX ( int ) : NUMBER ; }  <METHOD_END>
<METHOD_START> public static float float ( @ Nonnull MotionEvent org.solovyev.android.MotionEvent , int int ) { return boolean ? org.solovyev.android.MotionEvent . getY ( int ) : NUMBER ; }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull V V );  <METHOD_END>
<METHOD_START> @ Nonnull V V ( @ Nonnull Context org.solovyev.android.view.Context , @ Nonnull View org.solovyev.android.view.View );  <METHOD_END>
<METHOD_START> @ Nonnull V V ( @ Nonnull Context org.solovyev.android.view.Context );  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull Context org.solovyev.android.db.Context , @ Nonnull SQLiteOpenHelper org.solovyev.android.db.SQLiteOpenHelper ) { this . org.solovyev.android.db.Context = org.solovyev.android.db.Context ; this . org.solovyev.android.db.SQLiteOpenHelper = org.solovyev.android.db.SQLiteOpenHelper ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.db.Context org.solovyev.android.db.Context ( ) { return org.solovyev.android.db.Context ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.db.SQLiteOpenHelper org.solovyev.android.db.SQLiteOpenHelper ( ) { return org.solovyev.android.db.SQLiteOpenHelper ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nullable T T ) { this . T = T ; }  <METHOD_END>
<METHOD_START> @ Nullable protected T T ( ) { return T ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected T T ( ) { assert T != null ; return T ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull Context org.solovyev.android.db.Context , @ Nonnull SQLiteOpenHelper org.solovyev.android.db.SQLiteOpenHelper ) { this . org.solovyev.android.db.Context = org.solovyev.android.db.Context ; this . org.solovyev.android.db.SQLiteOpenHelper = org.solovyev.android.db.SQLiteOpenHelper ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.db.Context org.solovyev.android.db.Context ( ) { return org.solovyev.android.db.Context ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.db.SQLiteOpenHelper org.solovyev.android.db.SQLiteOpenHelper ( ) { return org.solovyev.android.db.SQLiteOpenHelper ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < R > R R ( @ Nonnull SQLiteOpenHelper org.solovyev.android.db.SQLiteOpenHelper , @ Nonnull DbQuery < R > org.solovyev.android.db.DbQuery<R> ) { final R R ; synchronized ( org.solovyev.android.db.SQLiteOpenHelper ) { SQLiteDatabase org.solovyev.android.db.SQLiteDatabase = null ; boolean boolean = false ; try { org.solovyev.android.db.SQLiteDatabase = java.util.Map<org.solovyev.android.db.SQLiteOpenHelper,org.solovyev.android.db.SQLiteDatabase> . get ( org.solovyev.android.db.SQLiteOpenHelper ) ; if ( org.solovyev.android.db.SQLiteDatabase == null ) { org.solovyev.android.db.SQLiteDatabase = org.solovyev.android.db.SQLiteOpenHelper . getWritableDatabase ( ) ; java.util.Map<org.solovyev.android.db.SQLiteOpenHelper,org.solovyev.android.db.SQLiteDatabase> . put ( org.solovyev.android.db.SQLiteOpenHelper , org.solovyev.android.db.SQLiteDatabase ) ; boolean = true ; } Cursor org.solovyev.android.db.Cursor = null ; try { org.solovyev.android.db.Cursor = org.solovyev.android.db.DbQuery<R> . createCursor ( org.solovyev.android.db.SQLiteDatabase ) ; R = org.solovyev.android.db.DbQuery<R> . retrieveData ( org.solovyev.android.db.Cursor ) ; } finally { if ( org.solovyev.android.db.Cursor != null ) { org.solovyev.android.db.Cursor . close ( ) ; } } } finally { if ( org.solovyev.android.db.SQLiteDatabase != null && boolean ) { java.util.Map<org.solovyev.android.db.SQLiteOpenHelper,org.solovyev.android.db.SQLiteDatabase> . remove ( org.solovyev.android.db.SQLiteOpenHelper ) ; } } } return R ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.lang.Long java.lang.Long ( @ Nonnull SQLiteOpenHelper org.solovyev.android.db.SQLiteOpenHelper , @ Nonnull DbExec org.solovyev.android.db.DbExec ) { final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = java.util.List<java.lang.Long> ( org.solovyev.android.db.SQLiteOpenHelper , java.util.Arrays . java.util.List ( org.solovyev.android.db.DbExec ) ) ; if ( ! java.util.List<java.lang.Long> . boolean ( ) ) { return java.util.List<java.lang.Long> . java.lang.Long ( NUMBER ) ; } else { return DbExec . SQL_ERROR ; } }  <METHOD_END>
<METHOD_START> public static java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> ( @ Nonnull SQLiteOpenHelper org.solovyev.android.db.SQLiteOpenHelper , @ Nonnull java.util.List<org.solovyev.android.db.DbExec> < DbExec > java.util.List<org.solovyev.android.db.DbExec> ) { final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> ; synchronized ( org.solovyev.android.db.SQLiteOpenHelper ) { SQLiteDatabase org.solovyev.android.db.SQLiteDatabase = null ; boolean boolean = false ; try { org.solovyev.android.db.SQLiteDatabase = java.util.Map<org.solovyev.android.db.SQLiteOpenHelper,org.solovyev.android.db.SQLiteDatabase> . get ( org.solovyev.android.db.SQLiteOpenHelper ) ; if ( org.solovyev.android.db.SQLiteDatabase == null ) { org.solovyev.android.db.SQLiteDatabase = org.solovyev.android.db.SQLiteOpenHelper . getWritableDatabase ( ) ; java.util.Map<org.solovyev.android.db.SQLiteOpenHelper,org.solovyev.android.db.SQLiteDatabase> . put ( org.solovyev.android.db.SQLiteOpenHelper , org.solovyev.android.db.SQLiteDatabase ) ; boolean = true ; } java.util.List<java.lang.Long> = java.util.List<java.lang.Long> ( org.solovyev.android.db.SQLiteDatabase , java.util.List<org.solovyev.android.db.DbExec> ) ; } finally { if ( org.solovyev.android.db.SQLiteDatabase != null && boolean ) { java.util.Map<org.solovyev.android.db.SQLiteOpenHelper,org.solovyev.android.db.SQLiteDatabase> . remove ( org.solovyev.android.db.SQLiteOpenHelper ) ; } } } return java.util.List<java.lang.Long> ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> ( @ Nonnull SQLiteDatabase org.solovyev.android.db.SQLiteDatabase , @ Nonnull java.util.List<org.solovyev.android.db.DbExec> < DbExec > java.util.List<org.solovyev.android.db.DbExec> ) { final java.util.List<java.lang.Long> < java.lang.Long > java.util.List<java.lang.Long> = new java.util.ArrayList<java.lang.Long> < java.lang.Long > ( java.util.List<org.solovyev.android.db.DbExec> . size ( ) ) ; try { org.solovyev.android.db.SQLiteDatabase . beginTransaction ( ) ; for ( DbExec org.solovyev.android.db.DbExec : java.util.List<org.solovyev.android.db.DbExec> ) { java.util.List<java.lang.Long> . boolean ( org.solovyev.android.db.DbExec . exec ( org.solovyev.android.db.SQLiteDatabase ) ) ; } org.solovyev.android.db.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { org.solovyev.android.db.SQLiteDatabase . endTransaction ( ) ; } return java.util.List<java.lang.Long> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.lang.String [] java.lang.String[] ( @ Nonnull java.util.List<?> < ? > java.util.List<?> , @ Nonnull java.lang.String ... java.lang.String[] ) { final java.lang.String [] java.lang.String[] = new java.lang.String [ java.util.List<> . int ( ) + java.lang.String[] . int ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { if ( int < java.lang.String[] . int ) { java.lang.String[] [ int ] = java.lang.String[] [ int ] ; } else { java.lang.String[] [ int ] = java.util.List<> . get ( int - java.lang.String[] . int ) . java.lang.String ( ) ; } } return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.lang.String java.lang.String ( @ Nonnull java.util.List<?> < ? > java.util.List<?> ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( NUMBER * java.util.List<> . int ( ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; if ( java.util.List<> . int ( ) == NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else if ( java.util.List<> . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Strings . repeat ( STRING , java.util.List<> . int ( ) - NUMBER ) ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull SQLiteDatabase org.solovyev.android.db.SQLiteDatabase ) { try { org.solovyev.android.db.SQLiteDatabase . beginTransaction ( ) ; final java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer ( java.lang.String , java.lang.String , false ) ; while ( java.util.StringTokenizer . boolean ( ) ) { final java.lang.String java.lang.String = java.util.StringTokenizer . java.lang.String ( ) ; if ( java.lang.String . boolean ( STRING ) ) { Log . d ( java.lang.String , STRING + java.lang.String ) ; continue; } Log . d ( java.lang.String , STRING + java.lang.String ) ; org.solovyev.android.db.SQLiteDatabase . execSQL ( java.lang.String ) ; } org.solovyev.android.db.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { org.solovyev.android.db.SQLiteDatabase . endTransaction ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.db.Context , @ Nonnull SQLiteOpenHelperConfiguration org.solovyev.android.db.SQLiteOpenHelperConfiguration ) { super( org.solovyev.android.db.Context . getApplicationContext ( ) , org.solovyev.android.db.SQLiteOpenHelperConfiguration . getName ( ) , org.solovyev.android.db.SQLiteOpenHelperConfiguration . getCursorFactory ( ) , org.solovyev.android.db.SQLiteOpenHelperConfiguration . getVersion ( ) ); this . org.solovyev.android.db.Context = org.solovyev.android.db.Context . getApplicationContext ( ) ; this . java.lang.String = org.solovyev.android.db.SQLiteOpenHelperConfiguration . getName ( ) ; this . int = org.solovyev.android.db.SQLiteOpenHelperConfiguration . getVersion ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull SQLiteDatabase org.solovyev.android.db.SQLiteDatabase ) { void ( org.solovyev.android.db.SQLiteDatabase , NUMBER , this . int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull SQLiteDatabase org.solovyev.android.db.SQLiteDatabase , int int , int int ) { Log . d ( java.lang.String , STRING + int + STRING + int ) ; final java.text.DecimalFormat java.text.DecimalFormat = new java.text.DecimalFormat ( STRING , new java.text.DecimalFormatSymbols ( java.util.Locale . java.util.Locale ) ) ; for ( int int = int + NUMBER ; int <= int ; int ++ ) { try { final java.lang.String java.lang.String = java.text.DecimalFormat . java.lang.String ( int ) ; final java.lang.String java.lang.String = STRING + java.lang.String + STRING + java.lang.String + STRING ; Log . d ( java.lang.String , STRING + java.lang.String + STRING ) ; final java.lang.String java.lang.String = java.lang.String ( org.solovyev.android.db.Context . getAssets ( ) . open ( java.lang.String ) ) ; Log . d ( java.lang.String , java.lang.String + STRING + java.lang.String . int ( ) ) ; new BatchDbTransaction ( java.lang.String , STRING ) . batchQuery ( org.solovyev.android.db.SQLiteDatabase ) ; } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { Log . d ( java.lang.String , java.io.FileNotFoundException . java.lang.String ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , java.io.IOException . java.lang.String ( ) ) ; throw new java.lang.RuntimeException ( java.io.IOException ) ; } } }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( java . io . java.io.InputStream java.io.InputStream ) { try { return new java.util.Scanner ( java.io.InputStream , STRING ) . java.util.Scanner ( STRING ) . java.lang.String ( ) ; } catch ( java . util . java.util.NoSuchElementException java.util.NoSuchElementException ) { return STRING ; } }  <METHOD_END>
<METHOD_START> long long ( @ Nonnull SQLiteDatabase org.solovyev.android.db.SQLiteDatabase );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.db.Cursor org.solovyev.android.db.Cursor ( @ Nonnull SQLiteDatabase org.solovyev.android.db.SQLiteDatabase );  <METHOD_END>
<METHOD_START> @ Nonnull R R ( @ Nonnull Cursor org.solovyev.android.db.Cursor );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Converter < Cursor , ? extends T > org.solovyev.android.db.Converter<org.solovyev.android.db.Cursor,? extends T> ) { this . org.solovyev.android.db.Converter<org.solovyev.android.db.Cursor,? extends T> = org.solovyev.android.db.Converter<org.solovyev.android.db.Cursor,> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( @ Nonnull Cursor org.solovyev.android.db.Cursor ) { final java.util.List<T> < T > java.util.List<T> = new java.util.ArrayList<T> < T > ( ) ; if ( org.solovyev.android.db.Cursor . moveToFirst ( ) ) { while ( ! org.solovyev.android.db.Cursor . isAfterLast ( ) ) { java.util.List<T> . boolean ( org.solovyev.android.db.Converter<org.solovyev.android.db.Cursor,> . convert ( org.solovyev.android.db.Cursor ) ) ; org.solovyev.android.db.Cursor . moveToNext ( ) ; } } return java.util.List<T> ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.db.Cursor org.solovyev.android.db.Cursor ( @ Nonnull SQLiteDatabase org.solovyev.android.db.SQLiteDatabase ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) ; return org.solovyev.android.db.SQLiteDatabase . rawQuery ( java.lang.StringBuilder . java.lang.String ( ) , null ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.Integer java.lang.Integer ( @ Nonnull Cursor org.solovyev.android.db.Cursor ) { org.solovyev.android.db.Cursor . moveToNext ( ) ; return org.solovyev.android.db.Cursor . getInt ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull java.util.List<org.solovyev.android.db.properties.AProperty> < AProperty > java.util.List<org.solovyev.android.db.properties.AProperty> ( @ Nonnull java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.lang.Object java.lang.Object , @ Nonnull AProperty org.solovyev.android.db.properties.AProperty );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.lang.Object java.lang.Object , @ Nonnull java.util.Collection<org.solovyev.android.db.properties.AProperty> < AProperty > java.util.Collection<org.solovyev.android.db.properties.AProperty> );  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.db.properties.APropertyMapper org.solovyev.android.db.properties.APropertyMapper ( ) { return org.solovyev.android.db.properties.APropertyMapper ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.db.properties.AProperty org.solovyev.android.db.properties.AProperty ( @ Nonnull Cursor org.solovyev.android.db.properties.Cursor ) { final java.lang.String java.lang.String = org.solovyev.android.db.properties.Cursor . getString ( NUMBER ) ; final java.lang.String java.lang.String = org.solovyev.android.db.properties.Cursor . getString ( NUMBER ) ; final java.lang.String java.lang.String = org.solovyev.android.db.properties.Cursor . getString ( NUMBER ) ; return Properties . newProperty ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Object java.lang.Object , @ Nonnull AProperty org.solovyev.android.db.properties.AProperty , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { this . java.lang.Object = java.lang.Object ; this . org.solovyev.android.db.properties.AProperty = org.solovyev.android.db.properties.AProperty ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( @ Nonnull SQLiteDatabase org.solovyev.android.db.properties.SQLiteDatabase ) { final ContentValues org.solovyev.android.db.properties.ContentValues = new ContentValues ( ) ; org.solovyev.android.db.properties.ContentValues . put ( java.lang.String , java.lang.String . java.lang.String ( java.lang.Object ) ) ; org.solovyev.android.db.properties.ContentValues . put ( java.lang.String , org.solovyev.android.db.properties.AProperty . getName ( ) ) ; org.solovyev.android.db.properties.ContentValues . put ( java.lang.String , org.solovyev.android.db.properties.AProperty . getValue ( ) ) ; return org.solovyev.android.db.properties.SQLiteDatabase . insert ( java.lang.String , null , org.solovyev.android.db.properties.ContentValues ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.db.properties.Context , @ Nonnull SQLiteOpenHelper org.solovyev.android.db.properties.SQLiteOpenHelper , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.Object java.lang.Object ) { super( org.solovyev.android.db.properties.Context , org.solovyev.android.db.properties.SQLiteOpenHelper ); this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.Object = java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.db.properties.Cursor org.solovyev.android.db.properties.Cursor ( @ Nonnull SQLiteDatabase org.solovyev.android.db.properties.SQLiteDatabase ) { return org.solovyev.android.db.properties.SQLiteDatabase . query ( java.lang.String , null , java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( java.lang.Object ) } , null , null , null ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.db.properties.AProperty> < AProperty > java.util.List<org.solovyev.android.db.properties.AProperty> ( @ Nonnull Cursor org.solovyev.android.db.properties.Cursor ) { return new ListMapper < AProperty > ( APropertyMapper . getInstance ( ) ) . convert ( org.solovyev.android.db.properties.Cursor ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Object java.lang.Object , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { this . java.lang.Object = java.lang.Object ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( @ Nonnull SQLiteDatabase org.solovyev.android.db.properties.SQLiteDatabase ) { return org.solovyev.android.db.properties.SQLiteDatabase . delete ( java.lang.String , java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( java.lang.Object ) } ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.db.properties.Context , @ Nonnull SQLiteOpenHelper org.solovyev.android.db.properties.SQLiteOpenHelper , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { super( org.solovyev.android.db.properties.Context , org.solovyev.android.db.properties.SQLiteOpenHelper ); this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.db.properties.AProperty> < AProperty > java.util.List<org.solovyev.android.db.properties.AProperty> ( @ Nonnull java.lang.Object java.lang.Object ) { return AndroidDbUtils . doDbQuery ( getSqliteOpenHelper ( ) , new PropertyByIdDbQuery ( getContext ( ) , getSqliteOpenHelper ( ) , java.lang.String , java.lang.String , java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.Object java.lang.Object ) { AndroidDbUtils . doDbExec ( getSqliteOpenHelper ( ) , new RemovePropertiesDbExec ( java.lang.Object , java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.Object java.lang.Object , @ Nonnull AProperty org.solovyev.android.db.properties.AProperty ) { AndroidDbUtils . doDbExec ( getSqliteOpenHelper ( ) , new InsertPropertyDbExec ( java.lang.Object , org.solovyev.android.db.properties.AProperty , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.Object java.lang.Object , @ Nonnull java.util.Collection<org.solovyev.android.db.properties.AProperty> < AProperty > java.util.Collection<org.solovyev.android.db.properties.AProperty> ) { final java.util.List<org.solovyev.android.db.properties.DbExec> < DbExec > java.util.List<org.solovyev.android.db.properties.DbExec> = new java.util.ArrayList<org.solovyev.android.db.properties.DbExec> < DbExec > ( java.util.Collection<org.solovyev.android.db.properties.AProperty> . size ( ) ) ; for ( AProperty org.solovyev.android.db.properties.AProperty : java.util.Collection<org.solovyev.android.db.properties.AProperty> ) { java.util.List<org.solovyev.android.db.properties.DbExec> . add ( new InsertPropertyDbExec ( java.lang.Object , org.solovyev.android.db.properties.AProperty , java.lang.String , java.lang.String , java.lang.String , java.lang.String ) ) ; } AndroidDbUtils . doDbExecs ( getSqliteOpenHelper ( ) , java.util.List<org.solovyev.android.db.properties.DbExec> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nullable SQLiteDatabase . SQLiteDatabase.CursorFactory SQLiteDatabase.CursorFactory ( )  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.db.Converter<org.solovyev.android.db.Cursor,org.solovyev.android.db.VersionedEntity<java.lang.String>> < Cursor , VersionedEntity < java.lang.String > > org.solovyev.android.db.Converter<org.solovyev.android.db.Cursor,org.solovyev.android.db.VersionedEntity<java.lang.String>> ( ) { return org.solovyev.android.db.Converter<org.solovyev.android.db.Cursor,org.solovyev.android.db.VersionedEntity<java.lang.String>> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.db.VersionedEntity<java.lang.String> < java.lang.String > org.solovyev.android.db.VersionedEntity<java.lang.String> ( @ Nonnull Cursor org.solovyev.android.db.Cursor ) { final java.lang.String java.lang.String = org.solovyev.android.db.Cursor . getString ( NUMBER ) ; final int int = org.solovyev.android.db.Cursor . getInt ( NUMBER ) ; return newEntity ( java.lang.String , int ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Class<F> < F > java.lang.Class<F> ) { this . java.lang.Class<F> = java.lang.Class<F> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final boolean boolean ( @ Nullable Fragment org.solovyev.android.fragments.Fragment ) { if ( org.solovyev.android.fragments.Fragment != null && java.lang.Class<F> . boolean ( org.solovyev.android.fragments.Fragment . getClass ( ) ) ) { return boolean ( ( F ) org.solovyev.android.fragments.Fragment ) ; } else { return false ; } }  <METHOD_END>
<METHOD_START> protected abstract boolean boolean ( @ Nonnull F F );  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , boolean boolean ) { this . java.lang.String = java.lang.String ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.fragments.MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef ( @ Nonnull java.lang.String java.lang.String , boolean boolean , @ Nonnull java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> , @ Nonnull Context org.solovyev.android.fragments.Context , @ Nullable Bundle org.solovyev.android.fragments.Bundle ) { return org.solovyev.android.fragments.MultiPaneFragmentDef ( java.lang.String , boolean , ReflectionFragmentBuilder . forClass ( org.solovyev.android.fragments.Context , java.lang.Class<> , org.solovyev.android.fragments.Bundle ) , SimpleFragmentReuseCondition . forClass ( java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.fragments.MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef ( @ Nonnull java.lang.String java.lang.String , boolean boolean , @ Nonnull java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> , @ Nonnull Context org.solovyev.android.fragments.Context , @ Nullable Bundle org.solovyev.android.fragments.Bundle , @ Nullable JPredicate < Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ) { return org.solovyev.android.fragments.MultiPaneFragmentDef ( java.lang.String , boolean , ReflectionFragmentBuilder . forClass ( org.solovyev.android.fragments.Context , java.lang.Class<> , org.solovyev.android.fragments.Bundle ) , org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.fragments.MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef ( @ Nonnull java.lang.String java.lang.String , boolean boolean , @ Nonnull Builder < ? extends Fragment > org.solovyev.android.fragments.Builder<? extends org.solovyev.android.fragments.Fragment> , @ Nullable JPredicate < Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ) { final org.solovyev.android.fragments.MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef = new org.solovyev.android.fragments.MultiPaneFragmentDef ( java.lang.String , boolean ) ; org.solovyev.android.fragments.MultiPaneFragmentDef . org.solovyev.android.fragments.Builder<? extends org.solovyev.android.fragments.Fragment> = org.solovyev.android.fragments.Builder<> ; org.solovyev.android.fragments.MultiPaneFragmentDef . org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> = org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ; return org.solovyev.android.fragments.MultiPaneFragmentDef ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.fragments.MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef ( @ Nonnull FragmentDef org.solovyev.android.fragments.FragmentDef , @ Nullable Bundle org.solovyev.android.fragments.Bundle , @ Nonnull Context org.solovyev.android.fragments.Context ) { final org.solovyev.android.fragments.MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef = new org.solovyev.android.fragments.MultiPaneFragmentDef ( org.solovyev.android.fragments.FragmentDef . getFragmentTag ( ) , org.solovyev.android.fragments.FragmentDef . isAddToBackStack ( ) ) ; final java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> = org.solovyev.android.fragments.FragmentDef . getFragmentClass ( ) ; org.solovyev.android.fragments.MultiPaneFragmentDef . org.solovyev.android.fragments.Builder<? extends org.solovyev.android.fragments.Fragment> = ReflectionFragmentBuilder . forClass ( org.solovyev.android.fragments.Context , java.lang.Class<> , org.solovyev.android.fragments.Bundle ) ; org.solovyev.android.fragments.MultiPaneFragmentDef . org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> = SimpleFragmentReuseCondition . forClass ( java.lang.Class<> ) ; return org.solovyev.android.fragments.MultiPaneFragmentDef ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.fragments.Fragment org.solovyev.android.fragments.Fragment ( ) { return org.solovyev.android.fragments.Builder<> . build ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nonnull Fragment org.solovyev.android.fragments.Fragment ) { return org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> != null && org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> . apply ( org.solovyev.android.fragments.Fragment ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull FragmentActivity org.solovyev.android.fragments.FragmentActivity , int int , @ Nonnull java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> , @ Nonnull java.lang.String java.lang.String ) { this . org.solovyev.android.fragments.FragmentActivity = org.solovyev.android.fragments.FragmentActivity ; this . int = int ; this . java.lang.Class<? extends org.solovyev.android.fragments.Fragment> = java.lang.Class<> ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull FragmentActivity org.solovyev.android.fragments.FragmentActivity , int int , @ Nonnull java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> , @ Nonnull java.lang.String java.lang.String , int int , int int ) { this . org.solovyev.android.fragments.FragmentActivity = org.solovyev.android.fragments.FragmentActivity ; this . int = int ; this . java.lang.Class<? extends org.solovyev.android.fragments.Fragment> = java.lang.Class<> ; this . java.lang.String = java.lang.String ; this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.fragments.FragmentActivity org.solovyev.android.fragments.FragmentActivity ( ) { return org.solovyev.android.fragments.FragmentActivity ; }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.fragments.MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef ( int int ) { return MultiPaneFragmentDef . forClass ( java.lang.String ( int ) , false , java.lang.Class<> , org.solovyev.android.fragments.FragmentActivity , null ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.lang.String java.lang.String ( int int ) { return java.lang.String + STRING + int ; }  <METHOD_END>
<METHOD_START> protected void void ( int int , @ Nonnull MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef ) { final FragmentManager org.solovyev.android.fragments.FragmentManager = org.solovyev.android.fragments.FragmentActivity . getSupportFragmentManager ( ) ; final FragmentTransaction org.solovyev.android.fragments.FragmentTransaction = org.solovyev.android.fragments.FragmentManager . beginTransaction ( ) ; void ( int , org.solovyev.android.fragments.MultiPaneFragmentDef , org.solovyev.android.fragments.FragmentManager , org.solovyev.android.fragments.FragmentTransaction ) ; org.solovyev.android.fragments.FragmentTransaction . commitAllowingStateLoss ( ) ; boolean ( org.solovyev.android.fragments.FragmentManager ) ; }  <METHOD_END>
<METHOD_START> private void void ( final int int , @ Nonnull final MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef , @ Nonnull final FragmentManager org.solovyev.android.fragments.FragmentManager , @ Nonnull final FragmentTransaction org.solovyev.android.fragments.FragmentTransaction ) { void ( ) ; boolean boolean = boolean ( org.solovyev.android.fragments.FragmentManager ) ; if ( boolean ) { if ( int != int && int != int ) { org.solovyev.android.fragments.FragmentTransaction . setCustomAnimations ( int , int , int , int ) ; } if ( org.solovyev.android.fragments.MultiPaneFragmentDef . isAddToBackStack ( ) ) { org.solovyev.android.fragments.FragmentTransaction . addToBackStack ( org.solovyev.android.fragments.MultiPaneFragmentDef . getTag ( ) ) ; } final Fragment org.solovyev.android.fragments.Fragment = org.solovyev.android.fragments.FragmentManager . findFragmentByTag ( org.solovyev.android.fragments.MultiPaneFragmentDef . getTag ( ) ) ; final Fragment org.solovyev.android.fragments.Fragment = org.solovyev.android.fragments.FragmentManager . findFragmentById ( int ) ; if ( org.solovyev.android.fragments.Fragment != null ) { if ( org.solovyev.android.fragments.MultiPaneFragmentDef . canReuse ( org.solovyev.android.fragments.Fragment ) ) { if ( org.solovyev.android.fragments.Fragment . isDetached ( ) ) { if ( org.solovyev.android.fragments.Fragment != null ) { void ( org.solovyev.android.fragments.FragmentTransaction , org.solovyev.android.fragments.Fragment ) ; } org.solovyev.android.fragments.FragmentTransaction . attach ( org.solovyev.android.fragments.Fragment ) ; } else { if ( org.solovyev.android.fragments.Fragment . equals ( org.solovyev.android.fragments.Fragment ) ) { } else { if ( org.solovyev.android.fragments.Fragment != null ) { org.solovyev.android.fragments.FragmentTransaction . remove ( org.solovyev.android.fragments.Fragment ) ; } final Fragment org.solovyev.android.fragments.Fragment = org.solovyev.android.fragments.MultiPaneFragmentDef . build ( ) ; void ( org.solovyev.android.fragments.Fragment , org.solovyev.android.fragments.Fragment , org.solovyev.android.fragments.FragmentManager ) ; org.solovyev.android.fragments.FragmentTransaction . remove ( org.solovyev.android.fragments.Fragment ) ; org.solovyev.android.fragments.FragmentTransaction . add ( int , org.solovyev.android.fragments.Fragment , org.solovyev.android.fragments.MultiPaneFragmentDef . getTag ( ) ) ; } } } else { org.solovyev.android.fragments.FragmentTransaction . remove ( org.solovyev.android.fragments.Fragment ) ; if ( org.solovyev.android.fragments.Fragment != null && org.solovyev.android.fragments.Fragment != org.solovyev.android.fragments.Fragment ) { void ( org.solovyev.android.fragments.FragmentTransaction , org.solovyev.android.fragments.Fragment ) ; } org.solovyev.android.fragments.FragmentTransaction . add ( int , org.solovyev.android.fragments.MultiPaneFragmentDef . build ( ) , org.solovyev.android.fragments.MultiPaneFragmentDef . getTag ( ) ) ; } } else { if ( org.solovyev.android.fragments.Fragment != null ) { void ( org.solovyev.android.fragments.FragmentTransaction , org.solovyev.android.fragments.Fragment ) ; } org.solovyev.android.fragments.FragmentTransaction . add ( int , org.solovyev.android.fragments.MultiPaneFragmentDef . build ( ) , org.solovyev.android.fragments.MultiPaneFragmentDef . getTag ( ) ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Fragment org.solovyev.android.fragments.Fragment , @ Nonnull Fragment org.solovyev.android.fragments.Fragment , @ Nonnull FragmentManager org.solovyev.android.fragments.FragmentManager ) { final Fragment . Fragment Fragment.SavedState = org.solovyev.android.fragments.FragmentManager . saveFragmentInstanceState ( org.solovyev.android.fragments.Fragment ) ; org.solovyev.android.fragments.Fragment . setInitialSavedState ( Fragment.SavedState ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final View org.solovyev.android.fragments.View = org.solovyev.android.fragments.FragmentActivity . getCurrentFocus ( ) ; if ( org.solovyev.android.fragments.View != null ) { final InputMethodManager org.solovyev.android.fragments.InputMethodManager = ( InputMethodManager ) org.solovyev.android.fragments.FragmentActivity . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; org.solovyev.android.fragments.InputMethodManager . hideSoftInputFromWindow ( org.solovyev.android.fragments.View . getWindowToken ( ) , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull FragmentManager org.solovyev.android.fragments.FragmentManager ) { boolean boolean ; try { org.solovyev.android.fragments.FragmentManager . executePendingTransactions ( ) ; boolean = true ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { boolean = false ; Log . e ( java.lang.String , java.lang.RuntimeException . java.lang.String ( ) , java.lang.RuntimeException ) ; Activities . restartActivity ( org.solovyev.android.fragments.FragmentActivity ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull FragmentTransaction org.solovyev.android.fragments.FragmentTransaction , @ Nonnull Fragment org.solovyev.android.fragments.Fragment ) { if ( org.solovyev.android.fragments.Fragment instanceof DetachableFragment ) { if ( ! org.solovyev.android.fragments.Fragment . isDetached ( ) ) { org.solovyev.android.fragments.FragmentTransaction . detach ( org.solovyev.android.fragments.Fragment ) ; } } else { org.solovyev.android.fragments.FragmentTransaction . remove ( org.solovyev.android.fragments.Fragment ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { final FragmentManager org.solovyev.android.fragments.FragmentManager = org.solovyev.android.fragments.FragmentActivity . getSupportFragmentManager ( ) ; final FragmentTransaction org.solovyev.android.fragments.FragmentTransaction = org.solovyev.android.fragments.FragmentManager . beginTransaction ( ) ; final Fragment org.solovyev.android.fragments.Fragment = org.solovyev.android.fragments.FragmentManager . findFragmentById ( int ) ; if ( org.solovyev.android.fragments.Fragment != null ) { void ( org.solovyev.android.fragments.FragmentTransaction , org.solovyev.android.fragments.Fragment ) ; } org.solovyev.android.fragments.FragmentTransaction . commitAllowingStateLoss ( ) ; boolean ( org.solovyev.android.fragments.FragmentManager ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( ) ; org.solovyev.android.fragments.FragmentActivity . getSupportFragmentManager ( ) . popBackStack ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { void ( ) ; return org.solovyev.android.fragments.FragmentActivity . getSupportFragmentManager ( ) . popBackStackImmediate ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.lang.String java.lang.String ) { void ( ) ; org.solovyev.android.fragments.FragmentActivity . getSupportFragmentManager ( ) . popBackStack ( java.lang.String , FragmentManager . POP_BACK_STACK_INCLUSIVE ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nonnull java.lang.String java.lang.String ) { final FragmentManager org.solovyev.android.fragments.FragmentManager = org.solovyev.android.fragments.FragmentActivity . getSupportFragmentManager ( ) ; final Fragment org.solovyev.android.fragments.Fragment = org.solovyev.android.fragments.FragmentManager . findFragmentByTag ( java.lang.String ) ; if ( org.solovyev.android.fragments.Fragment != null && org.solovyev.android.fragments.Fragment . isAdded ( ) && ! org.solovyev.android.fragments.Fragment . isDetached ( ) ) { return true ; } else { return false ; } }  <METHOD_END>
<METHOD_START> @ Nullable public < F extends org.solovyev.android.fragments.Fragment > F F ( @ Nonnull java.lang.String java.lang.String ) { final FragmentManager org.solovyev.android.fragments.FragmentManager = org.solovyev.android.fragments.FragmentActivity . getSupportFragmentManager ( ) ; return ( F ) org.solovyev.android.fragments.FragmentManager . findFragmentByTag ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected void void ( int int ) { void ( int , org.solovyev.android.fragments.MultiPaneFragmentDef ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public void void ( @ Nonnull java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> , @ Nullable Bundle org.solovyev.android.fragments.Bundle , @ Nullable JPredicate < Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> , @ Nonnull java.lang.String java.lang.String , boolean boolean ) { void ( MultiPaneFragmentDef . newInstance ( java.lang.String , boolean , ReflectionFragmentBuilder . forClass ( org.solovyev.android.fragments.FragmentActivity , java.lang.Class<> , org.solovyev.android.fragments.Bundle ) , org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public void void ( @ Nonnull Builder < Fragment > org.solovyev.android.fragments.Builder<org.solovyev.android.fragments.Fragment> , @ Nullable JPredicate < Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> , @ Nonnull java.lang.String java.lang.String ) { void ( org.solovyev.android.fragments.Builder<org.solovyev.android.fragments.Fragment> , org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> , java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public void void ( @ Nonnull Builder < Fragment > org.solovyev.android.fragments.Builder<org.solovyev.android.fragments.Fragment> , @ Nullable JPredicate < Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> , @ Nonnull java.lang.String java.lang.String , boolean boolean ) { void ( MultiPaneFragmentDef . newInstance ( java.lang.String , boolean , org.solovyev.android.fragments.Builder<org.solovyev.android.fragments.Fragment> , org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull MultiPaneFragmentDef org.solovyev.android.fragments.MultiPaneFragmentDef ) { void ( int , org.solovyev.android.fragments.MultiPaneFragmentDef ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { void ( org.solovyev.android.fragments.MultiPaneFragmentDef ( int ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull FragmentDef org.solovyev.android.fragments.FragmentDef , @ Nonnull FragmentManager org.solovyev.android.fragments.FragmentManager , @ Nonnull FragmentTransaction org.solovyev.android.fragments.FragmentTransaction ) { void ( int , MultiPaneFragmentDef . fromFragmentDef ( org.solovyev.android.fragments.FragmentDef , null , org.solovyev.android.fragments.FragmentActivity ) , org.solovyev.android.fragments.FragmentManager , org.solovyev.android.fragments.FragmentTransaction ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull FragmentDef org.solovyev.android.fragments.FragmentDef , @ Nullable Bundle org.solovyev.android.fragments.Bundle ) { void ( int , MultiPaneFragmentDef . fromFragmentDef ( org.solovyev.android.fragments.FragmentDef , org.solovyev.android.fragments.Bundle , org.solovyev.android.fragments.FragmentActivity ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull FragmentDef org.solovyev.android.fragments.FragmentDef ) { void ( org.solovyev.android.fragments.FragmentDef , null ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull Context org.solovyev.android.fragments.Context , @ Nonnull java.lang.Class<? extends F> < ? extends F > java.lang.Class<? extends F> , @ Nullable Bundle org.solovyev.android.fragments.Bundle ) { this . org.solovyev.android.fragments.Context = org.solovyev.android.fragments.Context ; this . java.lang.Class<? extends F> = java.lang.Class<> ; this . org.solovyev.android.fragments.Bundle = org.solovyev.android.fragments.Bundle ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < F extends org.solovyev.android.fragments.Fragment > org.solovyev.android.fragments.ReflectionFragmentBuilder<F> < F > org.solovyev.android.fragments.ReflectionFragmentBuilder<F> ( @ Nonnull Context org.solovyev.android.fragments.Context , @ Nonnull java.lang.Class<? extends F> < ? extends F > java.lang.Class<? extends F> , @ Nullable Bundle org.solovyev.android.fragments.Bundle ) { return new org.solovyev.android.fragments.ReflectionFragmentBuilder<F> < F > ( org.solovyev.android.fragments.Context , java.lang.Class<> , org.solovyev.android.fragments.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public F F ( ) { return ( F ) Fragment . instantiate ( org.solovyev.android.fragments.Context , java.lang.Class<> . java.lang.String ( ) , org.solovyev.android.fragments.Bundle ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.Class<F> < F > java.lang.Class<F> ) { super( java.lang.Class<F> ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static < F extends org.solovyev.android.fragments.Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> < Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ( @ Nonnull java.lang.Class<F> < F > java.lang.Class<F> ) { return new org.solovyev.android.fragments.SimpleFragmentReuseCondition<F> < F > ( java.lang.Class<F> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( @ Nonnull F F ) { return true ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull FragmentActivity org.solovyev.android.fragments.FragmentActivity , @ Nonnull java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> ) { super( org.solovyev.android.fragments.FragmentActivity , R . id . acl_content_first_pane , java.lang.Class<> , STRING ); }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.lang.Class<? extends org.solovyev.android.fragments.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.fragments.Fragment> , @ Nullable Bundle org.solovyev.android.fragments.Bundle , @ Nullable JPredicate < Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> , @ Nonnull java.lang.String java.lang.String , boolean boolean ) { setFragment ( R . id . acl_content_second_pane , MultiPaneFragmentDef . newInstance ( java.lang.String , boolean , ReflectionFragmentBuilder . forClass ( getActivity ( ) , java.lang.Class<> , org.solovyev.android.fragments.Bundle ) , org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Builder < Fragment > org.solovyev.android.fragments.Builder<org.solovyev.android.fragments.Fragment> , @ Nullable JPredicate < Fragment > org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> , @ Nonnull java.lang.String java.lang.String ) { setFragment ( R . id . acl_content_second_pane , MultiPaneFragmentDef . newInstance ( java.lang.String , false , org.solovyev.android.fragments.Builder<org.solovyev.android.fragments.Fragment> , org.solovyev.android.fragments.JPredicate<org.solovyev.android.fragments.Fragment> ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { emptifyFragmentPane ( R . id . acl_content_second_pane ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return getActivity ( ) . findViewById ( R . id . acl_content_second_pane ) != null ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return getActivity ( ) . findViewById ( R . id . acl_content_third_pane ) != null ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nullable View org.solovyev.android.fragments.View ) { return org.solovyev.android.fragments.View != null && org.solovyev.android.fragments.View . getId ( ) == R . id . acl_content_first_pane ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nullable View org.solovyev.android.fragments.View ) { return org.solovyev.android.fragments.View != null && org.solovyev.android.fragments.View . getId ( ) == R . id . acl_content_second_pane ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nullable View org.solovyev.android.fragments.View ) { return org.solovyev.android.fragments.View != null && org.solovyev.android.fragments.View . getId ( ) == R . id . acl_content_third_pane ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable View org.solovyev.android.fragments.View , @ Nonnull View org.solovyev.android.fragments.View ) { final Activity org.solovyev.android.fragments.Activity = getActivity ( ) ; if ( this . boolean ( ) ) { if ( this . boolean ( org.solovyev.android.fragments.View ) ) { org.solovyev.android.fragments.View . setBackgroundDrawable ( org.solovyev.android.fragments.Activity . getResources ( ) . getDrawable ( R . drawable . acl_border_right ) ) ; org.solovyev.android.fragments.View . setPadding ( NUMBER , NUMBER , NUMBER , NUMBER ) ; } else if ( this . boolean ( org.solovyev.android.fragments.View ) ) { org.solovyev.android.fragments.View . setBackgroundColor ( org.solovyev.android.fragments.Activity . getResources ( ) . getColor ( R . color . acl_bg ) ) ; } else if ( this . boolean ( ) && this . boolean ( org.solovyev.android.fragments.View ) ) { if ( Views . getScreenOrientation ( org.solovyev.android.fragments.Activity ) == Configuration . ORIENTATION_LANDSCAPE ) { org.solovyev.android.fragments.View . setBackgroundDrawable ( org.solovyev.android.fragments.Activity . getResources ( ) . getDrawable ( R . drawable . acl_border_left ) ) ; } else { org.solovyev.android.fragments.View . setBackgroundColor ( org.solovyev.android.fragments.Activity . getResources ( ) . getColor ( R . color . acl_bg ) ) ; } } } else { org.solovyev.android.fragments.View . setBackgroundColor ( org.solovyev.android.fragments.Activity . getResources ( ) . getColor ( R . color . acl_bg ) ) ; } final TextView org.solovyev.android.fragments.TextView = ( TextView ) org.solovyev.android.fragments.View . findViewById ( R . id . acl_fragment_title ) ; if ( org.solovyev.android.fragments.TextView != null ) { if ( this . boolean ( ) ) { final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.fragments.TextView . getText ( ) ; if ( Strings . isEmpty ( java.lang.CharSequence ) ) { org.solovyev.android.fragments.TextView . setVisibility ( View . GONE ) ; } else { org.solovyev.android.fragments.TextView . setText ( java.lang.String . java.lang.String ( java.lang.CharSequence ) . java.lang.String ( ) ) ; org.solovyev.android.fragments.TextView . setVisibility ( View . VISIBLE ) ; } } else { org.solovyev.android.fragments.TextView . setVisibility ( View . GONE ) ; } } }  <METHOD_END>
<METHOD_START> public void ( @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.Thread.UncaughtExceptionHandler = java.lang.Thread . java.lang.Thread.UncaughtExceptionHandler ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Thread java.lang.Thread , java.lang.Throwable java.lang.Throwable ) { try { final java.util.Date java.util.Date = new java.util.Date ( ) ; final java.lang.String java.lang.String = java.lang.String ( java.lang.Throwable ) ; if ( java.lang.String != null ) { if ( java.lang.String != null ) { void ( java.lang.String , java.lang.String . java.lang.String ( java.util.Date . long ( ) ) + STRING ) ; } if ( java.lang.String != null ) { void ( java.lang.String , java.util.Date ) ; } } } catch ( java.lang.Throwable java.lang.Throwable ) { Log . e ( java.lang.String , Strings . fromStackTrace ( java.lang.Throwable . java.lang.StackTraceElement[] ( ) ) ) ; } finally { java.lang.Thread.UncaughtExceptionHandler . void ( java.lang.Thread , java.lang.Throwable ) ; } }  <METHOD_END>
<METHOD_START> @ Nullable private java.lang.String java.lang.String ( @ Nonnull java.lang.Throwable java.lang.Throwable ) { java.io.PrintWriter java.io.PrintWriter = null ; java.lang.String java.lang.String ; try { final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; java.io.PrintWriter = new java.io.PrintWriter ( java.io.StringWriter ) ; java.lang.Throwable . void ( java.io.PrintWriter ) ; java.lang.String = java.io.StringWriter . java.lang.String ( ) ; } finally { if ( java.io.PrintWriter != null ) { java.io.PrintWriter . void ( ) ; } } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { try { java.io.BufferedWriter java.io.BufferedWriter = null ; try { java.io.BufferedWriter = new java.io.BufferedWriter ( new java.io.FileWriter ( java.lang.String + STRING + java.lang.String ) ) ; java.io.BufferedWriter . void ( java.lang.String ) ; java.io.BufferedWriter . void ( ) ; } finally { if ( java.io.BufferedWriter != null ) { java.io.BufferedWriter . void ( ) ; } } } catch ( java.lang.Exception java.lang.Exception ) { Log . e ( java.lang.String , Strings . fromStackTrace ( java.lang.Exception . java.lang.StackTraceElement[] ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull final java.lang.String java.lang.String , @ Nonnull java.util.Date java.util.Date ) { final DefaultHttpClient org.solovyev.android.errors.DefaultHttpClient = new DefaultHttpClient ( ) ; final HttpPost org.solovyev.android.errors.HttpPost = new HttpPost ( java.lang.String ) ; org.solovyev.android.errors.HttpPost . getParams ( ) . setBooleanParameter ( CoreProtocolPNames . USE_EXPECT_CONTINUE , false ) ; final java.util.List<org.solovyev.android.errors.NameValuePair> < NameValuePair > java.util.List<org.solovyev.android.errors.NameValuePair> = new java.util.ArrayList<org.solovyev.android.errors.NameValuePair> < NameValuePair > ( ) ; java.util.List<org.solovyev.android.errors.NameValuePair> . add ( new BasicNameValuePair ( STRING , java.util.Date . java.lang.String ( ) ) ) ; java.util.List<org.solovyev.android.errors.NameValuePair> . add ( new BasicNameValuePair ( STRING , java.lang.String ) ) ; try { org.solovyev.android.errors.HttpPost . setEntity ( new UrlEncodedFormEntity ( java.util.List<org.solovyev.android.errors.NameValuePair> , HTTP . UTF_8 ) ) ; org.solovyev.android.errors.DefaultHttpClient . execute ( org.solovyev.android.errors.HttpPost ) ; } catch ( java.io.IOException java.io.IOException ) { } }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull HttpMethod org.solovyev.android.http.HttpMethod ) { this( java.lang.String , org.solovyev.android.http.HttpMethod , HTTP . UTF_8 ); }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull HttpMethod org.solovyev.android.http.HttpMethod , @ Nullable java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . org.solovyev.android.http.HttpMethod = org.solovyev.android.http.HttpMethod ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public org.solovyev.android.http.HttpMethod org.solovyev.android.http.HttpMethod ( ) { return org.solovyev.android.http.HttpMethod ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.http.HttpUriRequest org.solovyev.android.http.HttpUriRequest ( ) { return org.solovyev.android.http.HttpMethod . createRequest ( java.lang.String , getRequestParameters ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.http.DefaultHttpClient org.solovyev.android.http.DefaultHttpClient ( ) { return org.solovyev.android.http.DefaultHttpClient ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public < R > R R ( @ Nonnull HttpTransaction < R > org.solovyev.android.http.HttpTransaction<R> ) throws java.io.IOException { return Collections . getFirstListElement ( java.lang.Object ( java.util.List ( org.solovyev.android.http.HttpTransaction<R> ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public < R > java.util.List<R> < R > java.util.List<R> ( @ Nonnull java.util.List<? extends org.solovyev.android.http.HttpTransaction<R>> < ? extends HttpTransaction < R > > java.util.List<? extends org.solovyev.android.http.HttpTransaction<R>> ) throws java.io.IOException { final java.util.List<R> < R > java.util.List<R> = new java.util.ArrayList<R> < R > ( ) ; for ( HttpTransaction < R > org.solovyev.android.http.HttpTransaction<R> : java.util.List<> ) { final java.lang.String java.lang.String = org.solovyev.android.http.HttpTransaction<R> . getClass ( ) . getSimpleName ( ) ; Log . d ( TAG , STRING + java.lang.String ) ; final HttpUriRequest org.solovyev.android.http.HttpUriRequest = org.solovyev.android.http.HttpTransaction<R> . createRequest ( ) ; final HttpResponse org.solovyev.android.http.HttpResponse = org.solovyev.android.http.DefaultHttpClient . execute ( org.solovyev.android.http.HttpUriRequest ) ; final R R = org.solovyev.android.http.HttpTransaction<R> . getResponse ( org.solovyev.android.http.HttpResponse ) ; java.util.List<R> . boolean ( R ) ; Log . d ( TAG , STRING + java.lang.String ) ; } return java.util.List<R> ; }  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.http.DefaultHttpClient org.solovyev.android.http.DefaultHttpClient ( )  <METHOD_END>
<METHOD_START> < R > R R ( @ Nonnull HttpTransaction < R > org.solovyev.android.http.HttpTransaction<R> ) throws java.io.IOException ;  <METHOD_END>
<METHOD_START> @ Nonnull < R > java.util.List<R> < R > java.util.List<R> ( @ Nonnull java.util.List<? extends org.solovyev.android.http.HttpTransaction<R>> < ? extends HttpTransaction < R > > java.util.List<? extends org.solovyev.android.http.HttpTransaction<R>> ) throws java.io.IOException ;  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.http.Context , @ Nonnull java.lang.String java.lang.String , @ Nonnull Handler org.solovyev.android.http.Handler ) { this . org.solovyev.android.http.FileCache = new FileCache ( org.solovyev.android.http.Context , java.lang.String ) ; this . java.util.concurrent.ExecutorService = java.util.concurrent.Executors . java.util.concurrent.ExecutorService ( NUMBER ) ; this . org.solovyev.android.http.Handler = org.solovyev.android.http.Handler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ImageView org.solovyev.android.http.ImageView , @ Nullable java.lang.Integer java.lang.Integer ) { void ( java.lang.String , new org.solovyev.android.http.CachingImageLoader.ImageViewImageLoadedListener ( org.solovyev.android.http.ImageView , java.lang.Integer , org.solovyev.android.http.Handler ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull OnImageLoadedListener org.solovyev.android.http.OnImageLoadedListener ) { java.util.Map<org.solovyev.android.http.OnImageLoadedListener,java.lang.String> . put ( org.solovyev.android.http.OnImageLoadedListener , java.lang.String ) ; final Bitmap org.solovyev.android.http.Bitmap = org.solovyev.android.http.MemoryCache . get ( java.lang.String ) ; if ( org.solovyev.android.http.Bitmap != null ) { org.solovyev.android.http.OnImageLoadedListener . onImageLoaded ( org.solovyev.android.http.Bitmap ) ; } else { org.solovyev.android.http.OnImageLoadedListener . setDefaultImage ( ) ; void ( java.lang.String , org.solovyev.android.http.OnImageLoadedListener ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String ) { final Bitmap org.solovyev.android.http.Bitmap = org.solovyev.android.http.MemoryCache . get ( java.lang.String ) ; if ( org.solovyev.android.http.Bitmap != null ) { } else { void ( java.lang.String , org.solovyev.android.http.CachingImageLoader.EmptyImageLoadedListener . org.solovyev.android.http.OnImageLoadedListener ( ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull OnImageLoadedListener org.solovyev.android.http.OnImageLoadedListener ) { java.util.concurrent.ExecutorService . java.util.concurrent.Future<?> ( new org.solovyev.android.http.CachingImageLoader.PhotosLoader ( new org.solovyev.android.http.CachingImageLoader.PhotoToLoad ( java.lang.String , org.solovyev.android.http.OnImageLoadedListener ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Nullable private org.solovyev.android.http.Bitmap org.solovyev.android.http.Bitmap ( @ Nonnull java.lang.String java.lang.String ) { final java.io.File java.io.File = org.solovyev.android.http.FileCache . getFile ( java.lang.String ( java.lang.String ) ) ; Bitmap org.solovyev.android.http.Bitmap = org.solovyev.android.http.Bitmap ( java.io.File ) ; if ( org.solovyev.android.http.Bitmap == null ) { try { final java.net.URL java.net.URL = new java.net.URL ( java.lang.String ) ; final java.net.HttpURLConnection java.net.HttpURLConnection = ( java.net.HttpURLConnection ) java.net.URL . java.net.URLConnection ( ) ; java.net.HttpURLConnection . void ( NUMBER ) ; java.net.HttpURLConnection . void ( NUMBER ) ; java.net.HttpURLConnection . void ( true ) ; final java.io.InputStream java.io.InputStream = java.net.HttpURLConnection . java.io.InputStream ( ) ; java.io.OutputStream java.io.OutputStream = null ; try { java.io.OutputStream = new java.io.FileOutputStream ( java.io.File ) ; Utils . copyStream ( java.io.InputStream , java.io.OutputStream ) ; } finally { if ( java.io.OutputStream != null ) { java.io.OutputStream . void ( ) ; } } org.solovyev.android.http.Bitmap = org.solovyev.android.http.Bitmap ( java.io.File ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { Log . e ( java.lang.String , java.net.MalformedURLException . java.lang.String ( ) , java.net.MalformedURLException ) ; } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { Log . e ( java.lang.String , java.io.FileNotFoundException . java.lang.String ( ) , java.io.FileNotFoundException ) ; } catch ( java.io.IOException java.io.IOException ) { Log . e ( java.lang.String , java.io.IOException . java.lang.String ( ) , java.io.IOException ) ; } } return org.solovyev.android.http.Bitmap ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.lang.String java.lang.String ( java.lang.String java.lang.String ) { try { return java.net.URLEncoder . java.lang.String ( java.lang.String , STRING ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { throw new java.lang.AssertionError ( java.io.UnsupportedEncodingException ) ; } }  <METHOD_END>
<METHOD_START> @ Nullable private static org.solovyev.android.http.Bitmap org.solovyev.android.http.Bitmap ( @ Nonnull java.io.File java.io.File ) { try { final BitmapFactory . BitmapFactory BitmapFactory.Options = new BitmapFactory . BitmapFactory ( ) ; final Bitmap org.solovyev.android.http.Bitmap = BitmapFactory . decodeStream ( new java.io.FileInputStream ( java.io.File ) , null , BitmapFactory.Options ) ; int int = o . outWidth ; int int = o . outHeight ; int int = NUMBER ; while ( true ) { if ( int < int || int < int ) { break; } int /= NUMBER ; int /= NUMBER ; int *= NUMBER ; } if ( int == NUMBER ) { return org.solovyev.android.http.Bitmap ; } else { final BitmapFactory . BitmapFactory BitmapFactory.Options = new BitmapFactory . BitmapFactory ( ) ; o2 . inSampleSize = int ; return BitmapFactory . decodeStream ( new java.io.FileInputStream ( java.io.File ) , null , BitmapFactory.Options ) ; } } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { return null ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull OnImageLoadedListener org.solovyev.android.http.OnImageLoadedListener ) { this . java.lang.String = java.lang.String ; this . org.solovyev.android.http.OnImageLoadedListener = org.solovyev.android.http.OnImageLoadedListener ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull org.solovyev.android.http.CachingImageLoader.PhotoToLoad org.solovyev.android.http.CachingImageLoader.PhotoToLoad ) { this . org.solovyev.android.http.CachingImageLoader.PhotoToLoad = org.solovyev.android.http.CachingImageLoader.PhotoToLoad ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( ! boolean ( org.solovyev.android.http.CachingImageLoader.PhotoToLoad ) ) { final Bitmap org.solovyev.android.http.Bitmap = org.solovyev.android.http.Bitmap ( org.solovyev.android.http.CachingImageLoader.PhotoToLoad . java.lang.String ) ; if ( org.solovyev.android.http.Bitmap != null ) { org.solovyev.android.http.MemoryCache . put ( org.solovyev.android.http.CachingImageLoader.PhotoToLoad . java.lang.String , org.solovyev.android.http.Bitmap ) ; } if ( ! boolean ( org.solovyev.android.http.CachingImageLoader.PhotoToLoad ) ) { org.solovyev.android.http.CachingImageLoader.PhotoToLoad . org.solovyev.android.http.OnImageLoadedListener . onImageLoaded ( org.solovyev.android.http.Bitmap ) ; } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull org.solovyev.android.http.CachingImageLoader.PhotoToLoad org.solovyev.android.http.CachingImageLoader.PhotoToLoad ) { final java.lang.String java.lang.String = java.util.Map<org.solovyev.android.http.OnImageLoadedListener,java.lang.String> . get ( org.solovyev.android.http.CachingImageLoader.PhotoToLoad . org.solovyev.android.http.OnImageLoadedListener ) ; if ( java.lang.String == null || ! java.lang.String . boolean ( org.solovyev.android.http.CachingImageLoader.PhotoToLoad . java.lang.String ) ) { return true ; } else { return false ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { org.solovyev.android.http.MemoryCache . clear ( ) ; org.solovyev.android.http.FileCache . clear ( ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull ImageView org.solovyev.android.http.ImageView , @ Nullable java.lang.Integer java.lang.Integer , @ Nonnull Handler org.solovyev.android.http.Handler ) { this . java.lang.ref.WeakReference<org.solovyev.android.http.ImageView> = new java.lang.ref.WeakReference<org.solovyev.android.http.ImageView> < ImageView > ( org.solovyev.android.http.ImageView ) ; this . java.lang.Integer = java.lang.Integer ; this . org.solovyev.android.http.Handler = org.solovyev.android.http.Handler ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable final Bitmap org.solovyev.android.http.Bitmap ) { final ImageView org.solovyev.android.http.ImageView = java.lang.ref.WeakReference<org.solovyev.android.http.ImageView> . get ( ) ; if ( org.solovyev.android.http.ImageView != null ) { org.solovyev.android.http.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( org.solovyev.android.http.Bitmap != null ) { org.solovyev.android.http.ImageView . setImageBitmap ( org.solovyev.android.http.Bitmap ) ; } else { if ( java.lang.Integer != null ) { org.solovyev.android.http.ImageView . setImageResource ( java.lang.Integer ) ; } } } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.solovyev.android.http.Bitmap != null ) { org.solovyev.android.http.ImageView . setImageBitmap ( org.solovyev.android.http.Bitmap ) ; } else { if ( java.lang.Integer != null ) { org.solovyev.android.http.ImageView . setImageResource ( java.lang.Integer ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final ImageView org.solovyev.android.http.ImageView = java.lang.ref.WeakReference<org.solovyev.android.http.ImageView> . get ( ) ; if ( org.solovyev.android.http.ImageView != null ) { org.solovyev.android.http.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( java.lang.Integer != null ) { org.solovyev.android.http.ImageView . setImageResource ( java.lang.Integer ) ; } } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( java.lang.Integer != null ) { org.solovyev.android.http.ImageView . setImageResource ( java.lang.Integer ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( ! ( java.lang.Object instanceof org.solovyev.android.http.CachingImageLoader.ImageViewImageLoadedListener ) ) return false ; org.solovyev.android.http.CachingImageLoader.ImageViewImageLoadedListener org.solovyev.android.http.CachingImageLoader.ImageViewImageLoadedListener = ( org.solovyev.android.http.CachingImageLoader.ImageViewImageLoadedListener ) java.lang.Object ; final ImageView org.solovyev.android.http.ImageView = this . java.lang.ref.WeakReference<org.solovyev.android.http.ImageView> . get ( ) ; final ImageView org.solovyev.android.http.ImageView = org.solovyev.android.http.CachingImageLoader.ImageViewImageLoadedListener . java.lang.ref.WeakReference<org.solovyev.android.http.ImageView> . get ( ) ; if ( ! Objects . areEqual ( org.solovyev.android.http.ImageView , org.solovyev.android.http.ImageView ) ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { final ImageView org.solovyev.android.http.ImageView = java.lang.ref.WeakReference<org.solovyev.android.http.ImageView> . get ( ) ; return org.solovyev.android.http.ImageView == null ? NUMBER : org.solovyev.android.http.ImageView . hashCode ( ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {		}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.http.OnImageLoadedListener org.solovyev.android.http.OnImageLoadedListener ( ) { return org.solovyev.android.http.OnImageLoadedListener ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable Bitmap org.solovyev.android.http.Bitmap ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.http.Context ) { super( org.solovyev.android.http.Context ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.http.Context , @ Nonnull org.solovyev.android.http.DownloadFileAsyncTask.OnPostExecute<java.util.List<java.lang.Object>> < java.util.List<java.lang.Object> < java.lang.Object > > org.solovyev.android.http.DownloadFileAsyncTask.OnPostExecute<java.util.List<java.lang.Object>> ) { super( org.solovyev.android.http.Context ); this . org.solovyev.android.http.DownloadFileAsyncTask.OnPostExecute<java.util.List<java.lang.Object>> = org.solovyev.android.http.DownloadFileAsyncTask.OnPostExecute<java.util.List<java.lang.Object>> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ( @ Nonnull java.util.List<org.solovyev.android.http.DownloadFileAsyncTask.Input> < org.solovyev.android.http.DownloadFileAsyncTask.Input > java.util.List<org.solovyev.android.http.DownloadFileAsyncTask.Input> ) { final java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object> < java.lang.Object > ( ) ; for ( org.solovyev.android.http.DownloadFileAsyncTask.Input org.solovyev.android.http.DownloadFileAsyncTask.Input : java.util.List<org.solovyev.android.http.DownloadFileAsyncTask.Input> ) { final DownloadFileHttpTransaction < ? > org.solovyev.android.http.DownloadFileHttpTransaction<?> = new DownloadFileHttpTransaction < java.lang.Object > ( org.solovyev.android.http.DownloadFileAsyncTask.Input . java.lang.String ( ) , org.solovyev.android.http.DownloadFileAsyncTask.Input . org.solovyev.android.http.HttpMethod ( ) , org.solovyev.android.http.DownloadFileAsyncTask.Input . org.solovyev.android.http.Converter<java.io.InputStream,java.lang.Object> ( ) ) ; try { java.util.List<java.lang.Object> . boolean ( HttpTransactions . execute ( org.solovyev.android.http.DownloadFileHttpTransaction<> ) ) ; } catch ( java.io.IOException java.io.IOException ) { throw new HttpRuntimeIoException ( java.io.IOException ) ; } } return java.util.List<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nullable java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> ) { if ( org.solovyev.android.http.DownloadFileAsyncTask.OnPostExecute<java.util.List<java.lang.Object>> != null ) { assert java.util.List<java.lang.Object> != null ; org.solovyev.android.http.DownloadFileAsyncTask.OnPostExecute<java.util.List<java.lang.Object>> . void ( java.util.List<java.lang.Object> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { if ( java.lang.Exception instanceof HttpRuntimeIoException ) { } else { defaultOnFailurePostExecute ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull R R );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull HttpMethod org.solovyev.android.http.HttpMethod , @ Nonnull Converter < java.io.InputStream , ? > org.solovyev.android.http.Converter<java.io.InputStream,?> ) { this . java.lang.String = java.lang.String ; this . org.solovyev.android.http.HttpMethod = org.solovyev.android.http.HttpMethod ; this . org.solovyev.android.http.Converter<java.io.InputStream,?> = org.solovyev.android.http.Converter<java.io.InputStream,> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.http.HttpMethod org.solovyev.android.http.HttpMethod ( ) { return org.solovyev.android.http.HttpMethod ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.http.Converter<java.io.InputStream,java.lang.Object> < java.io.InputStream , java.lang.Object > org.solovyev.android.http.Converter<java.io.InputStream,java.lang.Object> ( ) { return ( Converter < java.io.InputStream , java.lang.Object > ) org.solovyev.android.http.Converter<java.io.InputStream,> ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull HttpMethod org.solovyev.android.http.HttpMethod , @ Nonnull Converter < java.io.InputStream , R > org.solovyev.android.http.Converter<java.io.InputStream,R> ) { super( java.lang.String , org.solovyev.android.http.HttpMethod ); this . org.solovyev.android.http.Converter<java.io.InputStream,R> = org.solovyev.android.http.Converter<java.io.InputStream,R> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.http.NameValuePair> < NameValuePair > java.util.List<org.solovyev.android.http.NameValuePair> ( ) { return java.util.Collections . java.util.List<org.solovyev.android.http.NameValuePair> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public R R ( @ Nonnull HttpResponse org.solovyev.android.http.HttpResponse ) { try { return org.solovyev.android.http.Converter<java.io.InputStream,R> . convert ( org.solovyev.android.http.HttpResponse . getEntity ( ) . getContent ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.RuntimeException ( java.io.IOException ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.http.HttpRequestBase org.solovyev.android.http.HttpRequestBase ( ) { return new HttpDelete ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.http.HttpRequestBase org.solovyev.android.http.HttpRequestBase ( ) { return new HttpGet ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.http.HttpRequestBase org.solovyev.android.http.HttpRequestBase ( ) { return new HttpHead ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.http.HttpRequestBase org.solovyev.android.http.HttpRequestBase ( ) { return new HttpPost ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.http.HttpRequestBase org.solovyev.android.http.HttpRequestBase ( ) { return new HttpPut ( ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull org.solovyev.android.http.HttpMethod.ParamsLocation org.solovyev.android.http.HttpMethod.ParamsLocation ) { this . org.solovyev.android.http.HttpMethod.ParamsLocation = org.solovyev.android.http.HttpMethod.ParamsLocation ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.List<? extends org.solovyev.android.http.NameValuePair> < ? extends NameValuePair > java.util.List<? extends org.solovyev.android.http.NameValuePair> , @ Nullable java.lang.String java.lang.String ) { if ( java.util.List<> . boolean ( ) ) { return java.lang.String ; } else { return java.lang.String + STRING + URLEncodedUtils . format ( java.util.List<> , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull HttpRequestBase org.solovyev.android.http.HttpRequestBase , @ Nonnull java.util.List<? extends org.solovyev.android.http.NameValuePair> < ? extends NameValuePair > java.util.List<? extends org.solovyev.android.http.NameValuePair> , java.lang.String java.lang.String ) { }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.List<? extends org.solovyev.android.http.NameValuePair> < ? extends NameValuePair > java.util.List<? extends org.solovyev.android.http.NameValuePair> , @ Nullable java.lang.String java.lang.String ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull HttpRequestBase org.solovyev.android.http.HttpRequestBase , @ Nonnull java.util.List<? extends org.solovyev.android.http.NameValuePair> < ? extends NameValuePair > java.util.List<? extends org.solovyev.android.http.NameValuePair> , @ Nullable java.lang.String java.lang.String ) { if ( org.solovyev.android.http.HttpRequestBase instanceof HttpEntityEnclosingRequestBase ) { try { ( ( HttpEntityEnclosingRequestBase ) org.solovyev.android.http.HttpRequestBase ) . setEntity ( new UrlEncodedFormEntity ( java.util.List<> , java.lang.String ) ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { throw new java.lang.RuntimeException ( java.io.UnsupportedEncodingException ) ; } } else { throw new java.lang.IllegalArgumentException ( STRING + org.solovyev.android.http.HttpRequestBase . getClass ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull public abstract java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.List<? extends org.solovyev.android.http.NameValuePair> < ? extends NameValuePair > java.util.List<? extends org.solovyev.android.http.NameValuePair> , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public abstract void void ( @ Nonnull HttpRequestBase org.solovyev.android.http.HttpRequestBase , @ Nonnull java.util.List<? extends org.solovyev.android.http.NameValuePair> < ? extends NameValuePair > java.util.List<? extends org.solovyev.android.http.NameValuePair> , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.http.HttpRequestBase org.solovyev.android.http.HttpRequestBase ( )  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.http.HttpUriRequest org.solovyev.android.http.HttpUriRequest ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.List<org.solovyev.android.http.NameValuePair> < NameValuePair > java.util.List<org.solovyev.android.http.NameValuePair> , @ Nullable java.lang.String java.lang.String ) { return org.solovyev.android.http.HttpUriRequest ( java.net.URI . java.net.URI ( org.solovyev.android.http.HttpMethod.ParamsLocation . java.lang.String ( java.lang.String , java.util.List<org.solovyev.android.http.NameValuePair> , java.lang.String ) ) , java.util.List<org.solovyev.android.http.NameValuePair> , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.http.HttpUriRequest org.solovyev.android.http.HttpUriRequest ( @ Nonnull java.net.URI java.net.URI , @ Nonnull java.util.List<org.solovyev.android.http.NameValuePair> < NameValuePair > java.util.List<org.solovyev.android.http.NameValuePair> , @ Nullable java.lang.String java.lang.String ) { final HttpRequestBase org.solovyev.android.http.HttpRequestBase = org.solovyev.android.http.HttpRequestBase ( ) ; org.solovyev.android.http.HttpRequestBase . setURI ( java.net.URI ) ; org.solovyev.android.http.HttpMethod.ParamsLocation . void ( org.solovyev.android.http.HttpRequestBase , java.util.List<org.solovyev.android.http.NameValuePair> , java.lang.String ) ; return org.solovyev.android.http.HttpRequestBase ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.io.IOException java.io.IOException ) { super( java.io.IOException ); }  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.http.HttpMethod org.solovyev.android.http.HttpMethod ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.util.List<org.solovyev.android.http.NameValuePair> < NameValuePair > java.util.List<org.solovyev.android.http.NameValuePair> ( )  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.http.HttpUriRequest org.solovyev.android.http.HttpUriRequest ( )  <METHOD_END>
<METHOD_START> R R ( @ Nonnull HttpResponse org.solovyev.android.http.HttpResponse );  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.http.AHttpClient org.solovyev.android.http.AHttpClient ( ) { return new AHttpClientImpl ( ) ; }  <METHOD_END>
<METHOD_START> public static < R > R R ( @ Nonnull HttpTransaction < R > org.solovyev.android.http.HttpTransaction<R> ) throws java.io.IOException { return org.solovyev.android.http.AHttpClient ( ) . execute ( org.solovyev.android.http.HttpTransaction<R> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < R > java.util.List<R> < R > java.util.List<R> ( @ Nonnull java.util.List<? extends org.solovyev.android.http.HttpTransaction<R>> < ? extends HttpTransaction < R > > java.util.List<? extends org.solovyev.android.http.HttpTransaction<R>> ) throws java.io.IOException { return org.solovyev.android.http.AHttpClient ( ) . execute ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ImageView org.solovyev.android.http.ImageView , @ Nullable java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull OnImageLoadedListener org.solovyev.android.http.OnImageLoadedListener );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public void ( ) { void ( java.lang.Runtime . java.lang.Runtime ( ) . long ( ) / NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; Log . i ( java.lang.String , STRING + this . long / NUMBER / NUMBER + STRING ) ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.http.Bitmap org.solovyev.android.http.Bitmap ( @ Nonnull java.lang.String java.lang.String ) { return java.util.Map<java.lang.String,org.solovyev.android.http.Bitmap> . get ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Bitmap org.solovyev.android.http.Bitmap ) { void ( java.lang.String ) ; java.util.Map<java.lang.String,org.solovyev.android.http.Bitmap> . put ( java.lang.String , org.solovyev.android.http.Bitmap ) ; long += long ( org.solovyev.android.http.Bitmap ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull java.lang.String java.lang.String ) { final Bitmap org.solovyev.android.http.Bitmap = java.util.Map<java.lang.String,org.solovyev.android.http.Bitmap> . get ( java.lang.String ) ; if ( org.solovyev.android.http.Bitmap != null ) { long -= long ( org.solovyev.android.http.Bitmap ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { Log . i ( java.lang.String , STRING + long + STRING + java.util.Map<java.lang.String,org.solovyev.android.http.Bitmap> . size ( ) ) ; if ( long > long ) { Log . i ( java.lang.String , STRING ) ; for ( final java.util.Iterator<java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap>> < java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap> < java.lang.String , Bitmap > > java.util.Iterator<java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap>> = java.util.Map<java.lang.String,org.solovyev.android.http.Bitmap> . entrySet ( ) . iterator ( ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap>> . hasNext ( ) && long > long ; ) { final java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap> < java.lang.String , Bitmap > java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap> = java.util.Iterator<java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap>> . next ( ) ; long -= long ( java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap> . getValue ( ) ) ; java.util.Iterator<java.util.Map.Entry<java.lang.String,org.solovyev.android.http.Bitmap>> . remove ( ) ; } Log . i ( java.lang.String , STRING + java.util.Map<java.lang.String,org.solovyev.android.http.Bitmap> . size ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { java.util.Map<java.lang.String,org.solovyev.android.http.Bitmap> . clear ( ) ; }  <METHOD_END>
<METHOD_START> private static long long ( @ Nonnull Bitmap org.solovyev.android.http.Bitmap ) { return org.solovyev.android.http.Bitmap . getRowBytes ( ) * org.solovyev.android.http.Bitmap . getHeight ( ) ; }  <METHOD_END>
<METHOD_START> void void ( @ Nullable Bitmap org.solovyev.android.http.Bitmap );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Activity org.solovyev.android.http.Activity ) { this . java.lang.ref.WeakReference<org.solovyev.android.http.Activity> = new java.lang.ref.WeakReference<org.solovyev.android.http.Activity> < Activity > ( org.solovyev.android.http.Activity ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable final Bitmap org.solovyev.android.http.Bitmap ) { final Activity org.solovyev.android.http.Activity = this . java.lang.ref.WeakReference<org.solovyev.android.http.Activity> . get ( ) ; if ( org.solovyev.android.http.Activity != null ) { org.solovyev.android.http.Activity . runOnUiThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( org.solovyev.android.http.Bitmap ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( org.solovyev.android.http.Bitmap ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( @ Nullable Bitmap org.solovyev.android.http.Bitmap );  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final Activity org.solovyev.android.http.Activity = this . java.lang.ref.WeakReference<org.solovyev.android.http.Activity> . get ( ) ; if ( org.solovyev.android.http.Activity != null ) { org.solovyev.android.http.Activity . runOnUiThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( )  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull java.io.InputStream java.io.InputStream , @ Nonnull java.io.OutputStream java.io.OutputStream ) throws java.io.IOException { final int int = NUMBER ; byte [] byte[] = new byte [ int ] ; while ( true ) { int int = java.io.InputStream . int ( byte[] , NUMBER , int ) ; if ( int == - NUMBER ) { break; } java.io.OutputStream . void ( byte[] , NUMBER , int ) ; } }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertEquals ( STRING , in_uri . prepareUri ( STRING , java.util.Collections .< BasicNameValuePair > java.util.List<org.solovyev.android.http.BasicNameValuePair> ( ) , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertEquals ( STRING , in_uri . prepareUri ( STRING , java.util.List ( new BasicNameValuePair ( STRING , STRING ) ) , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertEquals ( STRING , in_uri . prepareUri ( STRING , java.util.List ( new BasicNameValuePair ( STRING , STRING ) ) , null ) ) ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull AKeyboardController org.solovyev.android.keyboard.AKeyboardController ) { this . org.solovyev.android.keyboard.AKeyboardController = org.solovyev.android.keyboard.AKeyboardController ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onCreate ( ) ; org.solovyev.android.keyboard.AKeyboardController . onCreate ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.keyboard.AKeyboardController . onInitializeInterface ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( ) { return org.solovyev.android.keyboard.AKeyboardController . createKeyboardView ( this , getLayoutInflater ( ) ) . getAndroidKeyboardView ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( ) { return org.solovyev.android.keyboard.AKeyboardController . onCreateCandidatesView ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean ) { super. onStartInput ( org.solovyev.android.keyboard.EditorInfo , boolean ) ; this . org.solovyev.android.keyboard.AKeyboardController . onStartInput ( org.solovyev.android.keyboard.EditorInfo , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onFinishInput ( ) ; setCandidatesViewShown ( false ) ; org.solovyev.android.keyboard.AKeyboardController . onFinishInput ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean ) { super. onStartInputView ( org.solovyev.android.keyboard.EditorInfo , boolean ) ; org.solovyev.android.keyboard.AKeyboardController . onStartInputView ( org.solovyev.android.keyboard.EditorInfo , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype ) { org.solovyev.android.keyboard.AKeyboardController . onCurrentInputMethodSubtypeChanged ( org.solovyev.android.keyboard.InputMethodSubtype ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int , int int , int int , int int , int int ) { super. onUpdateSelection ( int , int , int , int , int , int ) ; org.solovyev.android.keyboard.AKeyboardController . onUpdateSelection ( int , int , int , int , int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable CompletionInfo [] org.solovyev.android.keyboard.CompletionInfo[] ) { org.solovyev.android.keyboard.AKeyboardController . onDisplayCompletions ( org.solovyev.android.keyboard.CompletionInfo[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , KeyEvent org.solovyev.android.keyboard.KeyEvent ) { boolean boolean = org.solovyev.android.keyboard.AKeyboardController . onKeyDown ( int , org.solovyev.android.keyboard.KeyEvent ) ; if ( ! boolean ) { return super. onKeyDown ( int , org.solovyev.android.keyboard.KeyEvent ) ; } else { return boolean ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , KeyEvent org.solovyev.android.keyboard.KeyEvent ) { boolean boolean = org.solovyev.android.keyboard.AKeyboardController . onKeyUp ( int , org.solovyev.android.keyboard.KeyEvent ) ; if ( ! boolean ) { return super. onKeyUp ( int , org.solovyev.android.keyboard.KeyEvent ) ; } else { return boolean ; } }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( ! ( java.lang.Object instanceof org.solovyev.android.keyboard.AbstractAKeyboard ) ) return false ; org.solovyev.android.keyboard.AbstractAKeyboard org.solovyev.android.keyboard.AbstractAKeyboard = ( org.solovyev.android.keyboard.AbstractAKeyboard ) java.lang.Object ; if ( ! java.lang.String . boolean ( org.solovyev.android.keyboard.AbstractAKeyboard . java.lang.String ) ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.lang.String . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean ) { super. onStartInput ( org.solovyev.android.keyboard.EditorInfo , boolean ) ; void ( ) ; org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> ( ) . setCompletions ( java.util.Collections .< CompletionInfo > java.util.List<org.solovyev.android.keyboard.CompletionInfo> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> < K > org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> ( ) { return ( AKeyboardViewWithSuggestions < K > ) super. getKeyboardView ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onFinishInput ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { boolean boolean = super. handleBackspace ( ) ; if ( boolean ) { void ( ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected abstract org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> < K > org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> ( @ Nonnull Context org.solovyev.android.keyboard.Context );  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , boolean boolean , boolean boolean ) { final AKeyboardViewWithSuggestions org.solovyev.android.keyboard.AKeyboardViewWithSuggestions = org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> ( ) ; if ( java.util.List<java.lang.String> . int ( ) > NUMBER ) { org.solovyev.android.keyboard.AKeyboardViewWithSuggestions . setCandidatesViewShown ( true ) ; } else if ( org.solovyev.android.keyboard.AKeyboardViewWithSuggestions . isExtractViewShown ( ) ) { org.solovyev.android.keyboard.AKeyboardViewWithSuggestions . setCandidatesViewShown ( true ) ; } org.solovyev.android.keyboard.AKeyboardViewWithSuggestions . setSuggestions ( java.util.List<java.lang.String> , boolean , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable CompletionInfo [] org.solovyev.android.keyboard.CompletionInfo[] ) { super. onDisplayCompletions ( org.solovyev.android.keyboard.CompletionInfo[] ) ; if ( getState ( ) . isCompletion ( ) ) { if ( org.solovyev.android.keyboard.CompletionInfo[] == null ) { void ( java.util.Collections .< java.lang.String > java.util.List<java.lang.String> ( ) , false , false ) ; } else { final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( CompletionInfo org.solovyev.android.keyboard.CompletionInfo : java.util.Arrays . java.util.List ( org.solovyev.android.keyboard.CompletionInfo[] ) ) { if ( org.solovyev.android.keyboard.CompletionInfo != null ) { java.util.List<java.lang.String> . boolean ( org.solovyev.android.keyboard.CompletionInfo . getText ( ) . toString ( ) ) ; } } void ( java.util.List<java.lang.String> , true , true ) ; } } }  <METHOD_END>
<METHOD_START> protected void void ( ) { if ( ! getState ( ) . isCompletion ( ) ) { final java.lang.CharSequence java.lang.CharSequence = getKeyboardInput ( ) . getTypedText ( ) ; if ( ! Strings . isEmpty ( java.lang.CharSequence ) ) { final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; java.util.List<java.lang.String> . boolean ( java.lang.CharSequence . java.lang.String ( ) ) ; void ( java.util.List<java.lang.String> , true , true ) ; } else { void ( java.util.Collections .< java.lang.String > java.util.List<java.lang.String> ( ) , false , false ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. handleClose ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { super. pickSuggestionManually ( int ) ; final AKeyboardViewWithSuggestions < K > org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> = org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> ( ) ; final AKeyboardInput org.solovyev.android.keyboard.AKeyboardInput = getKeyboardInput ( ) ; final java.util.List<org.solovyev.android.keyboard.CompletionInfo> < CompletionInfo > java.util.List<org.solovyev.android.keyboard.CompletionInfo> = org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> . getCompletions ( ) ; final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.keyboard.AKeyboardInput . getTypedText ( ) ; if ( getState ( ) . isCompletion ( ) && int >= NUMBER && int < java.util.List<org.solovyev.android.keyboard.CompletionInfo> . size ( ) ) { final CompletionInfo org.solovyev.android.keyboard.CompletionInfo = java.util.List<org.solovyev.android.keyboard.CompletionInfo> . get ( int ) ; org.solovyev.android.keyboard.AKeyboardInput . commitCompletion ( org.solovyev.android.keyboard.CompletionInfo ) ; org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> . clearCandidateView ( ) ; updateShiftKeyState ( org.solovyev.android.keyboard.AKeyboardInput . getCurrentInputEditorInfo ( ) ) ; } else if ( ! Strings . isEmpty ( java.lang.CharSequence ) ) { org.solovyev.android.keyboard.AKeyboardInput . commitTyped ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( ) { return this . org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<K> ( ) . onCreateCandidatesView ( ) ; }  <METHOD_END>
<METHOD_START> protected void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( @ Nonnull Context org.solovyev.android.keyboard.Context ) { this . org.solovyev.android.keyboard.InputMethodManager = ( InputMethodManager ) org.solovyev.android.keyboard.Context . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; this . org.solovyev.android.keyboard.AKeyboardConfiguration = org.solovyev.android.keyboard.AKeyboardConfiguration ( org.solovyev.android.keyboard.Context ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.keyboard.AKeyboardConfiguration org.solovyev.android.keyboard.AKeyboardConfiguration ( @ Nonnull Context org.solovyev.android.keyboard.Context );  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { this . org.solovyev.android.keyboard.InputMethodService = org.solovyev.android.keyboard.InputMethodService ; this . org.solovyev.android.keyboard.AKeyboardControllerState<K> = org.solovyev.android.keyboard.AKeyboardControllerState<K> ( org.solovyev.android.keyboard.InputMethodService ) ; this . org.solovyev.android.keyboard.AKeyboardInput = org.solovyev.android.keyboard.DefaultKeyboardInput ( org.solovyev.android.keyboard.InputMethodService ) ; this . org.solovyev.android.keyboard.AKeyboardView<K> = org.solovyev.android.keyboard.AKeyboardView<K> ( org.solovyev.android.keyboard.InputMethodService ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService );  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.keyboard.DefaultKeyboardInput org.solovyev.android.keyboard.DefaultKeyboardInput ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { return new DefaultKeyboardInput ( org.solovyev.android.keyboard.InputMethodService ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.keyboard.AKeyboardView<K> < K > org.solovyev.android.keyboard.AKeyboardView<K> ( @ Nonnull Context org.solovyev.android.keyboard.Context );  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public final org.solovyev.android.keyboard.AKeyboardView org.solovyev.android.keyboard.AKeyboardView ( @ Nonnull Context org.solovyev.android.keyboard.Context , @ Nonnull LayoutInflater org.solovyev.android.keyboard.LayoutInflater ) { org.solovyev.android.keyboard.AKeyboardView<K> . createAndroidKeyboardView ( org.solovyev.android.keyboard.Context , org.solovyev.android.keyboard.LayoutInflater ) ; org.solovyev.android.keyboard.AKeyboardView<K> . setKeyboard ( K ( ) ) ; org.solovyev.android.keyboard.AKeyboardView<K> . setOnKeyboardActionListener ( new DefaultKeyboardActionListener ( this ) ) ; return org.solovyev.android.keyboard.AKeyboardView<K> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean ) { if ( ! boolean ) { long = NUMBER ; } this . org.solovyev.android.keyboard.AKeyboardControllerState<K> = org.solovyev.android.keyboard.AKeyboardControllerState<K> ( org.solovyev.android.keyboard.EditorInfo , boolean ) ; org.solovyev.android.keyboard.AKeyboardInput . clearTypedText ( ) ; K ( ) . setImeOptions ( org.solovyev.android.keyboard.InputMethodService . getResources ( ) , attribute . imeOptions ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.keyboard.AKeyboardInput . clearTypedText ( ) ; org.solovyev.android.keyboard.AKeyboardView<K> . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean ) { org.solovyev.android.keyboard.AKeyboardView<K> . setKeyboard ( K ( ) ) ; org.solovyev.android.keyboard.AKeyboardView<K> . close ( ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . HONEYCOMB ) { final InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype = org.solovyev.android.keyboard.InputMethodManager . getCurrentInputMethodSubtype ( ) ; org.solovyev.android.keyboard.AKeyboardView<K> . setSubtypeOnSpaceKey ( org.solovyev.android.keyboard.InputMethodSubtype ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.keyboard.InputMethodService org.solovyev.android.keyboard.InputMethodService ( ) { return org.solovyev.android.keyboard.InputMethodService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final boolean boolean ( int int , @ Nullable int [] int[] ) { boolean boolean = boolean ( int ) ; if ( ! boolean ) { if ( boolean ( int ) ) { if ( ! Strings . isEmpty ( org.solovyev.android.keyboard.AKeyboardInput ( ) . getTypedText ( ) ) ) { org.solovyev.android.keyboard.AKeyboardInput ( ) . commitTyped ( ) ; } void ( int ) ; void ( org.solovyev.android.keyboard.InputMethodService ( ) . getCurrentInputEditorInfo ( ) ) ; boolean = true ; } else { void ( int , int[] ) ; } } return boolean ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( int int ) { boolean boolean = false ; switch ( int ) { case Keyboard . KEYCODE_MODE_CHANGE : void ( ) ; boolean = true ; break; case Keyboard . KEYCODE_DELETE : boolean ( ) ; boolean = true ; break; case Keyboard . KEYCODE_CANCEL : void ( ) ; boolean = true ; break; case Keyboard . KEYCODE_SHIFT : void ( ) ; boolean = true ; break; case int : org.solovyev.android.keyboard.AKeyboardInput ( ) . handleCopy ( ) ; boolean = true ; break; case int : org.solovyev.android.keyboard.AKeyboardInput ( ) . handlePaste ( ) ; boolean = true ; break; case int : org.solovyev.android.keyboard.AKeyboardInput ( ) . handleClear ( ) ; boolean = true ; break; case int : org.solovyev.android.keyboard.AKeyboardInput ( ) . handleCursorLeft ( ) ; boolean = true ; break; case int : org.solovyev.android.keyboard.AKeyboardInput ( ) . handleCursorRight ( ) ; boolean = true ; break; case int : void ( ) ; boolean = true ; break; case int : void ( ) ; boolean = true ; break; case int : org.solovyev.android.keyboard.AKeyboardInput ( ) . undo ( ) ; boolean = true ; break; case int : org.solovyev.android.keyboard.AKeyboardInput ( ) . redo ( ) ; boolean = true ; break; } return boolean ; }  <METHOD_END>
<METHOD_START> protected void void ( ) {	}  <METHOD_END>
<METHOD_START> protected void void ( ) {	}  <METHOD_END>
<METHOD_START> protected void void ( ) {	}  <METHOD_END>
<METHOD_START> private void void ( ) { boolean boolean = ! this . org.solovyev.android.keyboard.AKeyboardControllerState<K> . isShifted ( ) ; void ( boolean ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( boolean boolean ) { if ( boolean != this . org.solovyev.android.keyboard.AKeyboardControllerState<K> . isShifted ( ) ) { this . org.solovyev.android.keyboard.AKeyboardControllerState<K> = this . org.solovyev.android.keyboard.AKeyboardControllerState<K> . copyForNewShift ( boolean ) ; this . org.solovyev.android.keyboard.AKeyboardControllerState<K> . getKeyboard ( ) . setShifted ( boolean ) ; this . org.solovyev.android.keyboard.AKeyboardView<K> . reloadAndroidKeyboardView ( ) ; this . void ( boolean ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( boolean boolean ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull protected K K ( ) { return org.solovyev.android.keyboard.AKeyboardControllerState<K> . getKeyboard ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull K K ) { this . org.solovyev.android.keyboard.AKeyboardControllerState<K> = this . org.solovyev.android.keyboard.AKeyboardControllerState<K> . copyForNewKeyboard ( K ) ; this . org.solovyev.android.keyboard.AKeyboardView<K> . setKeyboard ( K ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( ) { return org.solovyev.android.keyboard.AKeyboardControllerState<K> ; }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull AKeyboardControllerState < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ) { this . org.solovyev.android.keyboard.AKeyboardControllerState<K> = org.solovyev.android.keyboard.AKeyboardControllerState<K> ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.keyboard.AKeyboardView<K> < K > org.solovyev.android.keyboard.AKeyboardView<K> ( ) { return org.solovyev.android.keyboard.AKeyboardView<K> ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.keyboard.AKeyboardInput org.solovyev.android.keyboard.AKeyboardInput ( ) { return org.solovyev.android.keyboard.AKeyboardInput ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.keyboard.AKeyboardInput . commitTyped ( ) ; org.solovyev.android.keyboard.InputMethodService . requestHideSelf ( NUMBER ) ; org.solovyev.android.keyboard.AKeyboardView<K> . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public abstract org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( @ Nonnull EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean );  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable java.lang.CharSequence java.lang.CharSequence ) { org.solovyev.android.keyboard.AKeyboardInput . onText ( java.lang.CharSequence ) ; void ( org.solovyev.android.keyboard.AKeyboardInput . getCurrentInputEditorInfo ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable CompletionInfo [] org.solovyev.android.keyboard.CompletionInfo[] ) {	}  <METHOD_END>
<METHOD_START> public void void ( @ Nullable EditorInfo org.solovyev.android.keyboard.EditorInfo ) { if ( org.solovyev.android.keyboard.EditorInfo != null ) { final EditorInfo org.solovyev.android.keyboard.EditorInfo = org.solovyev.android.keyboard.AKeyboardInput . getCurrentInputEditorInfo ( ) ; int int = NUMBER ; if ( editorInfo . inputType != InputType . TYPE_NULL ) { int = org.solovyev.android.keyboard.AKeyboardInput . getCursorCapsMode ( attr . inputType ) ; } boolean boolean = org.solovyev.android.keyboard.AKeyboardControllerState<K> . isCapsLock ( ) || int != NUMBER ; void ( boolean ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int , int int , int int , int int , int int ) { final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.keyboard.AKeyboardInput . getTypedText ( ) ; if ( ! Strings . isEmpty ( java.lang.CharSequence ) && ( int != int || int != int ) ) { org.solovyev.android.keyboard.AKeyboardInput . clearTypedText ( ) ; void ( ) ; org.solovyev.android.keyboard.AKeyboardInput . finishComposingText ( ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , @ Nonnull KeyEvent org.solovyev.android.keyboard.KeyEvent ) { switch ( int ) { case KeyEvent . KEYCODE_BACK : if ( org.solovyev.android.keyboard.KeyEvent . getRepeatCount ( ) == NUMBER ) { org.solovyev.android.keyboard.AKeyboardView<K> . dismiss ( ) ; return true ; } break; case KeyEvent . KEYCODE_DEL : final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.keyboard.AKeyboardInput . getTypedText ( ) ; if ( ! Strings . isEmpty ( java.lang.CharSequence ) ) { boolean ( Keyboard . KEYCODE_DELETE , null ) ; return true ; } break; case KeyEvent . KEYCODE_ENTER : return false ; default: if ( boolean ) { if ( int == KeyEvent . KEYCODE_SPACE && ( org.solovyev.android.keyboard.KeyEvent . getMetaState ( ) & KeyEvent . META_ALT_ON ) != NUMBER ) { org.solovyev.android.keyboard.AKeyboardInput . clearMetaKeyStates ( KeyEvent . META_ALT_ON ) ; org.solovyev.android.keyboard.AKeyboardInput . keyDownUp ( KeyEvent . KEYCODE_A ) ; org.solovyev.android.keyboard.AKeyboardInput . keyDownUp ( KeyEvent . KEYCODE_N ) ; org.solovyev.android.keyboard.AKeyboardInput . keyDownUp ( KeyEvent . KEYCODE_D ) ; org.solovyev.android.keyboard.AKeyboardInput . keyDownUp ( KeyEvent . KEYCODE_R ) ; org.solovyev.android.keyboard.AKeyboardInput . keyDownUp ( KeyEvent . KEYCODE_O ) ; org.solovyev.android.keyboard.AKeyboardInput . keyDownUp ( KeyEvent . KEYCODE_I ) ; org.solovyev.android.keyboard.AKeyboardInput . keyDownUp ( KeyEvent . KEYCODE_D ) ; return true ; } if ( org.solovyev.android.keyboard.AKeyboardControllerState<K> . isPrediction ( ) && boolean ( int , org.solovyev.android.keyboard.KeyEvent ) ) { return true ; } } } return false ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { boolean boolean = org.solovyev.android.keyboard.AKeyboardInput . handleBackspace ( ) ; if ( ! boolean ) { void ( KeyEvent . KEYCODE_DEL ) ; } void ( org.solovyev.android.keyboard.AKeyboardInput . getCurrentInputEditorInfo ( ) ) ; return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { org.solovyev.android.keyboard.AKeyboardInput . keyDownUp ( int ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( int int , @ Nonnull KeyEvent org.solovyev.android.keyboard.KeyEvent ) { long = MetaKeyKeyListener . handleKeyDown ( long , int , org.solovyev.android.keyboard.KeyEvent ) ; int int = org.solovyev.android.keyboard.KeyEvent . getUnicodeChar ( MetaKeyKeyListener . getMetaState ( long ) ) ; long = MetaKeyKeyListener . adjustMetaAfterKeypress ( long ) ; if ( int == NUMBER || ! org.solovyev.android.keyboard.AKeyboardInput . isInputConnected ( ) ) { return false ; } if ( ( int & KeyCharacterMap . COMBINING_ACCENT ) != NUMBER ) { int = int & KeyCharacterMap . COMBINING_ACCENT_MASK ; } int = org.solovyev.android.keyboard.AKeyboardInput . translateKeyDown ( int ) ; boolean ( int , null ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , KeyEvent org.solovyev.android.keyboard.KeyEvent ) { if ( boolean ) { if ( org.solovyev.android.keyboard.AKeyboardControllerState<K> . isPrediction ( ) ) { long = MetaKeyKeyListener . handleKeyUp ( long , int , org.solovyev.android.keyboard.KeyEvent ) ; } } return false ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { switch ( int ) { case '\n' : void ( KeyEvent . KEYCODE_ENTER ) ; break; default: if ( int >= '0' && int <= '9' ) { void ( int - '0' + KeyEvent . KEYCODE_0 ) ; } else { org.solovyev.android.keyboard.AKeyboardInput . commitText ( java.lang.String . java.lang.String ( ( char ) int ) , NUMBER ) ; } break; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( org.solovyev.android.keyboard.AKeyboardControllerState<K> . isCompletion ( ) ) { void ( NUMBER ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) {	}  <METHOD_END>
<METHOD_START> protected void void ( int int , int [] int[] ) { if ( org.solovyev.android.keyboard.InputMethodService . isInputViewShown ( ) ) { if ( org.solovyev.android.keyboard.AKeyboardControllerState<K> . isShifted ( ) ) { int = java.lang.Character . int ( int ) ; } } if ( boolean ( int ) && org.solovyev.android.keyboard.AKeyboardControllerState<K> . isPrediction ( ) ) { org.solovyev.android.keyboard.AKeyboardInput . append ( ( char ) int ) ; void ( org.solovyev.android.keyboard.AKeyboardInput . getCurrentInputEditorInfo ( ) ) ; void ( ) ; } else { org.solovyev.android.keyboard.AKeyboardInput . commitText ( java.lang.String . java.lang.String ( ( char ) int ) , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( int int ) { return java.lang.Character . boolean ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype ) { org.solovyev.android.keyboard.AKeyboardView<K> . setSubtypeOnSpaceKey ( org.solovyev.android.keyboard.InputMethodSubtype ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( int int ) { final java.lang.String java.lang.String = org.solovyev.android.keyboard.AKeyboardConfiguration . getWordSeparators ( ) ; return java.lang.String . boolean ( java.lang.String . java.lang.String ( ( char ) int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message org.solovyev.android.keyboard.Message ) { switch ( msg . what ) { case int : Log . d ( java.lang.String , STRING + msg . obj ) ; void ( ( PreviewParams ) msg . obj ) ; break; case int : Log . d ( java.lang.String , STRING + msg . obj ) ; void ( ) ; break; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull View org.solovyev.android.keyboard.View ) { this . org.solovyev.android.keyboard.View = org.solovyev.android.keyboard.View ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull LayoutInflater org.solovyev.android.keyboard.LayoutInflater ) { Log . d ( java.lang.String , STRING ) ; org.solovyev.android.keyboard.View = org.solovyev.android.keyboard.LayoutInflater . inflate ( R . layout . drag_keyboard_preview , null ) ; org.solovyev.android.keyboard.View . setLayoutParams ( new ViewGroup . ViewGroup ( ViewGroup . LayoutParams . WRAP_CONTENT , ViewGroup . LayoutParams . WRAP_CONTENT ) ) ; org.solovyev.android.keyboard.PopupWindow = new PopupWindow ( org.solovyev.android.keyboard.View ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull View org.solovyev.android.keyboard.View , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.Integer java.lang.Integer ) { final int [] int[] = new int [ NUMBER ] ; org.solovyev.android.keyboard.View . getLocationInWindow ( int[] ) ; int int = int[] [ NUMBER ] + org.solovyev.android.keyboard.View . getWidth ( ) / NUMBER ; int int = int[] [ NUMBER ] ; final PreviewParams org.solovyev.android.keyboard.PreviewParams ; if ( java.lang.CharSequence == null ) { if ( java.lang.Integer != null ) { org.solovyev.android.keyboard.PreviewParams = PreviewParams . newDrawableInstance ( int , int , java.lang.Integer ) ; } else { org.solovyev.android.keyboard.PreviewParams = PreviewParams . newTextInstance ( int , int , STRING ) ; Log . e ( org.solovyev.android.keyboard.AKeyboardButtonPreview .class . java.lang.String ( ) , STRING + org.solovyev.android.keyboard.View + STRING ) ; } } else { org.solovyev.android.keyboard.PreviewParams = PreviewParams . newTextInstance ( int , int , java.lang.CharSequence . java.lang.String ( ) ) ; } synchronized ( org.solovyev.android.keyboard.Handler ) { org.solovyev.android.keyboard.Handler . removeMessages ( int , org.solovyev.android.keyboard.PreviewParams ) ; org.solovyev.android.keyboard.Handler . removeMessages ( int , org.solovyev.android.keyboard.PreviewParams ) ; org.solovyev.android.keyboard.Handler . sendMessageDelayed ( org.solovyev.android.keyboard.Handler . obtainMessage ( int , org.solovyev.android.keyboard.PreviewParams ) , long ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull PreviewParams org.solovyev.android.keyboard.PreviewParams ) { synchronized ( org.solovyev.android.keyboard.Handler ) { org.solovyev.android.keyboard.Handler . removeMessages ( int , org.solovyev.android.keyboard.PreviewParams ) ; } final PopupWindow org.solovyev.android.keyboard.PopupWindow = this . org.solovyev.android.keyboard.PopupWindow ; boolean boolean = false ; final TextView org.solovyev.android.keyboard.TextView = ( TextView ) org.solovyev.android.keyboard.View . findViewById ( R . id . preview_text_view ) ; org.solovyev.android.keyboard.TextView . setText ( org.solovyev.android.keyboard.PreviewParams . getText ( ) ) ; final java.lang.Integer java.lang.Integer = org.solovyev.android.keyboard.PreviewParams . getDrawableResId ( ) ; final ImageView org.solovyev.android.keyboard.ImageView = ( ImageView ) org.solovyev.android.keyboard.View . findViewById ( R . id . preview_image_view ) ; if ( java.lang.Integer != null ) { final Drawable org.solovyev.android.keyboard.Drawable = org.solovyev.android.keyboard.View . getContext ( ) . getResources ( ) . getDrawable ( java.lang.Integer ) ; org.solovyev.android.keyboard.ImageView . setImageDrawable ( org.solovyev.android.keyboard.Drawable ) ; if ( org.solovyev.android.keyboard.Drawable != null ) { boolean = true ; } } else { org.solovyev.android.keyboard.ImageView . setImageDrawable ( null ) ; } if ( boolean ) { org.solovyev.android.keyboard.TextView . setVisibility ( View . GONE ) ; org.solovyev.android.keyboard.ImageView . setVisibility ( View . VISIBLE ) ; } else { org.solovyev.android.keyboard.ImageView . setVisibility ( View . GONE ) ; org.solovyev.android.keyboard.TextView . setVisibility ( View . VISIBLE ) ; } org.solovyev.android.keyboard.View . measure ( View . MeasureSpec . makeMeasureSpec ( NUMBER , View . MeasureSpec . UNSPECIFIED ) , View . MeasureSpec . makeMeasureSpec ( NUMBER , View . MeasureSpec . UNSPECIFIED ) ) ; final int int = org.solovyev.android.keyboard.View . getMeasuredWidth ( ) ; final int int = org.solovyev.android.keyboard.View . getMeasuredHeight ( ) ; final int int = Views . toPixels ( org.solovyev.android.keyboard.View . getContext ( ) . getResources ( ) . getDisplayMetrics ( ) , NUMBER ) ; int int = org.solovyev.android.keyboard.PreviewParams . getX ( ) - int / NUMBER ; int int = org.solovyev.android.keyboard.PreviewParams . getY ( ) - int - int ; if ( org.solovyev.android.keyboard.PopupWindow . isShowing ( ) ) { org.solovyev.android.keyboard.PopupWindow . update ( int , int , int , int ) ; } else { org.solovyev.android.keyboard.PopupWindow . setWidth ( int ) ; org.solovyev.android.keyboard.PopupWindow . setHeight ( int ) ; org.solovyev.android.keyboard.PopupWindow . showAtLocation ( org.solovyev.android.keyboard.View , Gravity . NO_GRAVITY , int , int ) ; } org.solovyev.android.keyboard.View . setVisibility ( View . VISIBLE ) ; synchronized ( org.solovyev.android.keyboard.Handler ) { org.solovyev.android.keyboard.Handler . sendMessageDelayed ( org.solovyev.android.keyboard.Handler . obtainMessage ( int , org.solovyev.android.keyboard.PreviewParams ) , long ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( org.solovyev.android.keyboard.View != null ) { org.solovyev.android.keyboard.View . setVisibility ( View . INVISIBLE ) ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull Context org.solovyev.android.keyboard.Context );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.keyboard.AKeyboardView org.solovyev.android.keyboard.AKeyboardView ( @ Nonnull Context org.solovyev.android.keyboard.Context , @ Nonnull LayoutInflater org.solovyev.android.keyboard.LayoutInflater );  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( int int , int int , int int , int int , int int , int int );  <METHOD_END>
<METHOD_START> void void ( @ Nullable CompletionInfo [] org.solovyev.android.keyboard.CompletionInfo[] );  <METHOD_END>
<METHOD_START> boolean boolean ( int int , KeyEvent org.solovyev.android.keyboard.KeyEvent );  <METHOD_END>
<METHOD_START> boolean boolean ( int int , KeyEvent org.solovyev.android.keyboard.KeyEvent );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype );  <METHOD_END>
<METHOD_START> void void ( EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean );  <METHOD_END>
<METHOD_START> boolean boolean ( int int , @ Nullable int [] int[] );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> void void ( @ Nullable java.lang.CharSequence java.lang.CharSequence );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( int int );  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static < K extends org.solovyev.android.keyboard.AKeyboard > org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( @ Nonnull K K ) { final org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> = new org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > ( ) ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = false ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = false ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = false ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = false ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . K = K ; return org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < K extends org.solovyev.android.keyboard.AKeyboard > org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( boolean boolean , boolean boolean , @ Nonnull K K ) { final org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> = new org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > ( ) ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = false ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = false ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = boolean ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = boolean ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . K = K ; return org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public K K ( ) { return K ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( @ Nonnull K K ) { final org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> = org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ( ) ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . K = K ; return org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ; }  <METHOD_END>
<METHOD_START> private org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ( ) { final org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> = new org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > ( ) ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = this . boolean ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = this . boolean ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = this . boolean ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = this . boolean ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . K = this . K ; return org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( boolean boolean ) { final org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> = org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ( ) ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = boolean ; return org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( boolean boolean ) { final org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> < K > org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> = org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ( ) ; org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> . boolean = boolean ; return org.solovyev.android.keyboard.AKeyboardControllerStateImpl<K> ; }  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> @ Nonnull K K ( )  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( @ Nonnull K K );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( boolean boolean );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.keyboard.AKeyboardControllerState<K> < K > org.solovyev.android.keyboard.AKeyboardControllerState<K> ( boolean boolean );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( @ Nullable java.lang.CharSequence java.lang.CharSequence );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.keyboard.EditorInfo org.solovyev.android.keyboard.EditorInfo ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.CharSequence java.lang.CharSequence ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull KeyEvent org.solovyev.android.keyboard.KeyEvent );  <METHOD_END>
<METHOD_START> int int ( int int );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull CompletionInfo org.solovyev.android.keyboard.CompletionInfo );  <METHOD_END>
<METHOD_START> void void ( char char );  <METHOD_END>
<METHOD_START> void void ( @ Nullable java.lang.String java.lang.String , int int );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( int int );  <METHOD_END>
<METHOD_START> void void ( int int );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> int int ( int int );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull Resources org.solovyev.android.keyboard.Resources , int int );  <METHOD_END>
<METHOD_START> void void ( boolean boolean );  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public void ( int int , @ Nonnull AKeyboardController org.solovyev.android.keyboard.AKeyboardController , @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { this . int = int ; this . org.solovyev.android.keyboard.AKeyboardController = org.solovyev.android.keyboard.AKeyboardController ; this . org.solovyev.android.keyboard.InputMethodService = org.solovyev.android.keyboard.InputMethodService ; }  <METHOD_END>
<METHOD_START> @ Nullable protected KeyboardView . KeyboardView.OnKeyboardActionListener KeyboardView.OnKeyboardActionListener ( ) { return KeyboardView.OnKeyboardActionListener ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.solovyev.android.keyboard.InputMethodService . isExtractViewShown ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { org.solovyev.android.keyboard.InputMethodService . setCandidatesViewShown ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.keyboard.AKeyboardController org.solovyev.android.keyboard.AKeyboardController ( ) { return org.solovyev.android.keyboard.AKeyboardController ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.keyboard.InputMethodService org.solovyev.android.keyboard.InputMethodService ( ) { return org.solovyev.android.keyboard.InputMethodService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull KeyboardView . KeyboardView KeyboardView.OnKeyboardActionListener ) { this . KeyboardView.OnKeyboardActionListener = KeyboardView.OnKeyboardActionListener ; if ( this . KV != null ) { this . KV . setOnKeyboardActionListener ( KeyboardView.OnKeyboardActionListener ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Context org.solovyev.android.keyboard.Context , @ Nonnull LayoutInflater org.solovyev.android.keyboard.LayoutInflater ) { this . KV = ( KV ) org.solovyev.android.keyboard.LayoutInflater . inflate ( int , null ) ; final KeyboardView . KeyboardView KeyboardView.OnKeyboardActionListener = this . KeyboardView.OnKeyboardActionListener ( ) ; if ( KeyboardView.OnKeyboardActionListener != null ) { this . KV . setOnKeyboardActionListener ( KeyboardView.OnKeyboardActionListener ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull K K ) { if ( this . KV != null ) { this . KV . setKeyboard ( K ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . KV != null ) { this . KV . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . KV != null ) { this . KV . dismiss ( ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( ) { assert KV != null ; return KV ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . KV != null ) { this . KV . reload ( ) ; } }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull K K );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull KeyboardView . KeyboardView KeyboardView.OnKeyboardActionListener );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype );  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull Context org.solovyev.android.keyboard.Context , @ Nonnull LayoutInflater org.solovyev.android.keyboard.LayoutInflater );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( int int , @ Nonnull AKeyboardController org.solovyev.android.keyboard.AKeyboardController , @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { super( int , org.solovyev.android.keyboard.AKeyboardController , org.solovyev.android.keyboard.InputMethodService ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype ) { super. setSubtypeOnSpaceKey ( org.solovyev.android.keyboard.InputMethodSubtype ) ; final View org.solovyev.android.keyboard.View = getAndroidKeyboardView ( ) ; if ( org.solovyev.android.keyboard.View instanceof KeyboardViewAKeyboardView ) { ( ( KeyboardViewAKeyboardView ) org.solovyev.android.keyboard.View ) . setSubtypeOnSpaceKey ( org.solovyev.android.keyboard.InputMethodSubtype ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , boolean boolean , boolean boolean ) { if ( org.solovyev.android.keyboard.CandidateView != null ) { org.solovyev.android.keyboard.CandidateView . setSuggestions ( java.util.List<java.lang.String> , boolean , boolean ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.util.List<org.solovyev.android.keyboard.CompletionInfo> < CompletionInfo > java.util.List<org.solovyev.android.keyboard.CompletionInfo> ) { this . java.util.List<org.solovyev.android.keyboard.CompletionInfo> = java.util.List<org.solovyev.android.keyboard.CompletionInfo> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.keyboard.CompletionInfo> < CompletionInfo > java.util.List<org.solovyev.android.keyboard.CompletionInfo> ( ) { return this . java.util.List<org.solovyev.android.keyboard.CompletionInfo> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.solovyev.android.keyboard.CandidateView != null ) { org.solovyev.android.keyboard.CandidateView . clear ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( ) { org.solovyev.android.keyboard.CandidateView = new CandidateView ( getInputMethodService ( ) ) ; org.solovyev.android.keyboard.CandidateView . setKeyboardController ( getKeyboardController ( ) ) ; return org.solovyev.android.keyboard.CandidateView ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , boolean boolean , boolean boolean );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.util.List<org.solovyev.android.keyboard.CompletionInfo> < CompletionInfo > java.util.List<org.solovyev.android.keyboard.CompletionInfo> );  <METHOD_END>
<METHOD_START> @ Nonnull java.util.List<org.solovyev.android.keyboard.CompletionInfo> < CompletionInfo > java.util.List<org.solovyev.android.keyboard.CompletionInfo> ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> org.solovyev.android.keyboard.View org.solovyev.android.keyboard.View ( )  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.keyboard.AndroidAKeyboard org.solovyev.android.keyboard.AndroidAKeyboard ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Keyboard org.solovyev.android.keyboard.Keyboard ) { final org.solovyev.android.keyboard.AndroidAKeyboard org.solovyev.android.keyboard.AndroidAKeyboard = new org.solovyev.android.keyboard.AndroidAKeyboard ( java.lang.String ) ; org.solovyev.android.keyboard.AndroidAKeyboard . org.solovyev.android.keyboard.Keyboard = org.solovyev.android.keyboard.Keyboard ; return org.solovyev.android.keyboard.AndroidAKeyboard ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.keyboard.Keyboard org.solovyev.android.keyboard.Keyboard ( ) { return org.solovyev.android.keyboard.Keyboard ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Resources org.solovyev.android.keyboard.Resources , int int ) { if ( org.solovyev.android.keyboard.Keyboard instanceof LatinKeyboard ) { ( ( LatinKeyboard ) org.solovyev.android.keyboard.Keyboard ) . setImeOptions ( org.solovyev.android.keyboard.Resources , int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { org.solovyev.android.keyboard.Keyboard . setShifted ( boolean ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull InputConnection org.solovyev.android.keyboard.InputConnection , @ Nonnull Context org.solovyev.android.keyboard.Context ) { java.lang.String java.lang.String = java.lang.String ( org.solovyev.android.keyboard.InputConnection ) ; if ( ! Strings . isEmpty ( java.lang.String ) ) { final ClipboardManager org.solovyev.android.keyboard.ClipboardManager = ( ClipboardManager ) org.solovyev.android.keyboard.Context . getSystemService ( Context . CLIPBOARD_SERVICE ) ; org.solovyev.android.keyboard.ClipboardManager . setText ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull public static java.lang.String java.lang.String ( @ Nonnull InputConnection org.solovyev.android.keyboard.InputConnection ) { final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.keyboard.InputConnection . getTextAfterCursor ( DefaultKeyboardInput . MAX_INT , NUMBER ) ; final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.keyboard.InputConnection . getTextBeforeCursor ( DefaultKeyboardInput . MAX_INT , NUMBER ) ; java.lang.String java.lang.String = STRING ; if ( java.lang.CharSequence != null ) { java.lang.String += java.lang.CharSequence . java.lang.String ( ) ; } if ( java.lang.CharSequence != null ) { java.lang.String += java.lang.CharSequence . java.lang.String ( ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> static void void ( @ Nonnull InputConnection org.solovyev.android.keyboard.InputConnection , @ Nonnull Context org.solovyev.android.keyboard.Context ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . GINGERBREAD ) { java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.keyboard.InputConnection . getSelectedText ( NUMBER ) ; if ( ! Strings . isEmpty ( java.lang.CharSequence ) ) { final ClipboardManager org.solovyev.android.keyboard.ClipboardManager = ( ClipboardManager ) org.solovyev.android.keyboard.Context . getSystemService ( Context . CLIPBOARD_SERVICE ) ; org.solovyev.android.keyboard.ClipboardManager . setText ( java.lang.CharSequence ) ; } else { void ( org.solovyev.android.keyboard.InputConnection , org.solovyev.android.keyboard.Context ) ; } } else { void ( org.solovyev.android.keyboard.InputConnection , org.solovyev.android.keyboard.Context ) ; } }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull KeyboardView . KeyboardView KeyboardView.OnKeyboardActionListener );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull K K );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( ) { super( new CalculatorKeyboardController ( ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.keyboard.DragAKeyboard org.solovyev.android.keyboard.DragAKeyboard ( @ Nonnull Context org.solovyev.android.keyboard.Context ) { final int int = R . drawable . metro_dark_button ; final DragAKeyboard . DragAKeyboard DragAKeyboard.KeyboardDef = new DragAKeyboard . DragAKeyboard ( ) ; final DragAKeyboard . DragAKeyboard DragAKeyboard.RowDef = new DragAKeyboard . DragAKeyboard ( ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , null , int ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , org.solovyev.android.keyboard.CalculatorKeyboardController . KEYCODE_CLEAR ) ) ; DragAKeyboard.KeyboardDef . add ( DragAKeyboard.RowDef ) ; final DragAKeyboard . DragAKeyboard DragAKeyboard.RowDef = new DragAKeyboard . DragAKeyboard ( ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , null , null , null , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , null , null , int ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newDrawableInstance ( R . drawable . kb_delete , Keyboard . KEYCODE_DELETE ) ) ; DragAKeyboard.KeyboardDef . add ( DragAKeyboard.RowDef ) ; final DragAKeyboard . DragAKeyboard DragAKeyboard.RowDef = new DragAKeyboard . DragAKeyboard ( ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , STRING ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , null , null , STRING , null , int ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newDrawableInstance ( R . drawable . kb_copy , org.solovyev.android.keyboard.CalculatorKeyboardController . KEYCODE_COPY ) ) ; DragAKeyboard.KeyboardDef . add ( DragAKeyboard.RowDef ) ; final DragAKeyboard . DragAKeyboard DragAKeyboard.RowDef = new DragAKeyboard . DragAKeyboard ( ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , null ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , STRING , null ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , STRING , null , null , null ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newInstance ( STRING , null , null , null , null , int ) ) ; DragAKeyboard.RowDef . add ( DragAKeyboardButtonDefImpl . newDrawableInstance ( R . drawable . kb_paste , org.solovyev.android.keyboard.CalculatorKeyboardController . KEYCODE_PASTE ) ) ; DragAKeyboard.KeyboardDef . add ( DragAKeyboard.RowDef ) ; return new DragAKeyboard ( STRING , DragAKeyboard.KeyboardDef ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.keyboard.Context ) { super( org.solovyev.android.keyboard.Context ); org.solovyev.android.keyboard.Drawable = org.solovyev.android.keyboard.Context . getResources ( ) . getDrawable ( android . R . drawable . list_selector_background ) ; org.solovyev.android.keyboard.Drawable . setState ( new int [] { android . R . attr . state_enabled , android . R . attr . state_focused , android . R . attr . state_window_focused , android . R . attr . state_pressed } ) ; Resources org.solovyev.android.keyboard.Resources = org.solovyev.android.keyboard.Context . getResources ( ) ; setBackgroundColor ( org.solovyev.android.keyboard.Resources . getColor ( R . color . candidate_background ) ) ; int = org.solovyev.android.keyboard.Resources . getColor ( R . color . candidate_normal ) ; int = org.solovyev.android.keyboard.Resources . getColor ( R . color . candidate_recommended ) ; int = org.solovyev.android.keyboard.Resources . getColor ( R . color . candidate_other ) ; int = org.solovyev.android.keyboard.Resources . getDimensionPixelSize ( R . dimen . candidate_vertical_padding ) ; org.solovyev.android.keyboard.Paint = new Paint ( ) ; org.solovyev.android.keyboard.Paint . setColor ( int ) ; org.solovyev.android.keyboard.Paint . setAntiAlias ( true ) ; org.solovyev.android.keyboard.Paint . setTextSize ( org.solovyev.android.keyboard.Resources . getDimensionPixelSize ( R . dimen . candidate_font_height ) ) ; org.solovyev.android.keyboard.Paint . setStrokeWidth ( NUMBER ) ; org.solovyev.android.keyboard.GestureDetector = new GestureDetector ( new GestureDetector . GestureDetector ( ) { @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.keyboard.MotionEvent , MotionEvent org.solovyev.android.keyboard.MotionEvent , float float , float float ) { boolean = true ; int int = getScrollX ( ) ; int += float ; if ( int < NUMBER ) { int = NUMBER ; } if ( int + getWidth ( ) > int ) { int -= float ; } int = int ; scrollTo ( int , getScrollY ( ) ) ; invalidate ( ) ; return true ; } } ) ; setHorizontalFadingEdgeEnabled ( true ) ; setWillNotDraw ( false ) ; setHorizontalScrollBarEnabled ( false ) ; setVerticalScrollBarEnabled ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.keyboard.MotionEvent , MotionEvent org.solovyev.android.keyboard.MotionEvent , float float , float float ) { boolean = true ; int int = getScrollX ( ) ; int += float ; if ( int < NUMBER ) { int = NUMBER ; } if ( int + getWidth ( ) > int ) { int -= float ; } int = int ; scrollTo ( int , getScrollY ( ) ) ; invalidate ( ) ; return true ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull AKeyboardController org.solovyev.android.keyboard.AKeyboardController ) { this . org.solovyev.android.keyboard.AKeyboardController = org.solovyev.android.keyboard.AKeyboardController ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int ) { int int = resolveSize ( NUMBER , int ) ; Rect org.solovyev.android.keyboard.Rect = new Rect ( ) ; org.solovyev.android.keyboard.Drawable . getPadding ( org.solovyev.android.keyboard.Rect ) ; final int int = ( ( int ) org.solovyev.android.keyboard.Paint . getTextSize ( ) ) + int + padding . top + padding . bottom ; setMeasuredDimension ( int , resolveSize ( int , int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Canvas org.solovyev.android.keyboard.Canvas ) { if ( org.solovyev.android.keyboard.Canvas != null ) { super. onDraw ( org.solovyev.android.keyboard.Canvas ) ; } int = NUMBER ; if ( java.util.List<java.lang.String> == null ) return; if ( org.solovyev.android.keyboard.Rect == null ) { org.solovyev.android.keyboard.Rect = new Rect ( NUMBER , NUMBER , NUMBER , NUMBER ) ; if ( getBackground ( ) != null ) { getBackground ( ) . getPadding ( org.solovyev.android.keyboard.Rect ) ; } } int int = NUMBER ; final int int = java.util.List<java.lang.String> . int ( ) ; final int int = getHeight ( ) ; final Rect org.solovyev.android.keyboard.Rect = org.solovyev.android.keyboard.Rect ; final Paint org.solovyev.android.keyboard.Paint = org.solovyev.android.keyboard.Paint ; final int int = int ; final int int = getScrollX ( ) ; final boolean boolean = boolean ; final boolean boolean = boolean ; final int int = ( int ) ( ( ( int - org.solovyev.android.keyboard.Paint . getTextSize ( ) ) / NUMBER ) - org.solovyev.android.keyboard.Paint . ascent ( ) ) ; for ( int int = NUMBER ; int < int ; int ++ ) { java.lang.String java.lang.String = java.util.List<java.lang.String> . java.lang.String ( int ) ; float float = org.solovyev.android.keyboard.Paint . measureText ( java.lang.String ) ; final int int = ( int ) float + int * NUMBER ; int[] [ int ] = int ; int[] [ int ] = int ; org.solovyev.android.keyboard.Paint . setColor ( int ) ; if ( int + int >= int && int + int < int + int && ! boolean ) { if ( org.solovyev.android.keyboard.Canvas != null ) { org.solovyev.android.keyboard.Canvas . translate ( int , NUMBER ) ; org.solovyev.android.keyboard.Drawable . setBounds ( NUMBER , bgPadding . top , int , int ) ; org.solovyev.android.keyboard.Drawable . draw ( org.solovyev.android.keyboard.Canvas ) ; org.solovyev.android.keyboard.Canvas . translate ( - int , NUMBER ) ; } int = int ; } if ( org.solovyev.android.keyboard.Canvas != null ) { if ( ( int == NUMBER && ! boolean ) || ( int == NUMBER && boolean ) ) { org.solovyev.android.keyboard.Paint . setFakeBoldText ( true ) ; org.solovyev.android.keyboard.Paint . setColor ( int ) ; } else if ( int != NUMBER ) { org.solovyev.android.keyboard.Paint . setColor ( int ) ; } org.solovyev.android.keyboard.Canvas . drawText ( java.lang.String , int + int , int , org.solovyev.android.keyboard.Paint ) ; org.solovyev.android.keyboard.Paint . setColor ( int ) ; org.solovyev.android.keyboard.Canvas . drawLine ( int + int + NUMBER , bgPadding . top , int + int + NUMBER , int + NUMBER , org.solovyev.android.keyboard.Paint ) ; org.solovyev.android.keyboard.Paint . setFakeBoldText ( false ) ; } int += int ; } int = int ; if ( int != getScrollX ( ) ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { int int = getScrollX ( ) ; if ( int > int ) { int += int ; if ( int >= int ) { int = int ; requestLayout ( ) ; } } else { int -= int ; if ( int <= int ) { int = int ; requestLayout ( ) ; } } scrollTo ( int , getScrollY ( ) ) ; invalidate ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> , boolean boolean , boolean boolean ) { void ( ) ; if ( java.util.List<java.lang.String> != null ) { java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( java.util.List<java.lang.String> ) ; } boolean = boolean ; scrollTo ( NUMBER , NUMBER ) ; int = NUMBER ; void ( null ) ; invalidate ( ) ; requestLayout ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { java.util.List<java.lang.String> = java.util.List<java.lang.String> ; int = int ; int = - NUMBER ; invalidate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.keyboard.MotionEvent ) { if ( org.solovyev.android.keyboard.GestureDetector . onTouchEvent ( org.solovyev.android.keyboard.MotionEvent ) ) { return true ; } int int = org.solovyev.android.keyboard.MotionEvent . getAction ( ) ; int int = ( int ) org.solovyev.android.keyboard.MotionEvent . getX ( ) ; int int = ( int ) org.solovyev.android.keyboard.MotionEvent . getY ( ) ; int = int ; switch ( int ) { case MotionEvent . ACTION_DOWN : boolean = false ; invalidate ( ) ; break; case MotionEvent . ACTION_MOVE : if ( int <= NUMBER ) { if ( int >= NUMBER ) { org.solovyev.android.keyboard.AKeyboardController . pickSuggestionManually ( int ) ; int = - NUMBER ; } } invalidate ( ) ; break; case MotionEvent . ACTION_UP : if ( ! boolean ) { if ( int >= NUMBER ) { org.solovyev.android.keyboard.AKeyboardController . pickSuggestionManually ( int ) ; } } int = - NUMBER ; void ( ) ; requestLayout ( ) ; break; } return true ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { int = ( int ) float ; void ( null ) ; if ( int >= NUMBER ) { org.solovyev.android.keyboard.AKeyboardController . pickSuggestionManually ( int ) ; } invalidate ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { int = int ; invalidate ( ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull AKeyboardController org.solovyev.android.keyboard.AKeyboardController ) { this . org.solovyev.android.keyboard.AKeyboardController = org.solovyev.android.keyboard.AKeyboardController ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int [] int[] ) { org.solovyev.android.keyboard.AKeyboardController . onKey ( int , int[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence ) { org.solovyev.android.keyboard.AKeyboardController . onText ( java.lang.CharSequence ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.keyboard.AKeyboardController . handleBackspace ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.keyboard.AKeyboardController . pickDefaultCandidate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.keyboard.AKeyboardController . handleClose ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { this . org.solovyev.android.keyboard.InputMethodService = org.solovyev.android.keyboard.InputMethodService ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { void ( java.lang.StringBuilder , java.lang.StringBuilder . int ( ) ) ; void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable java.lang.CharSequence java.lang.CharSequence ) { final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; org.solovyev.android.keyboard.InputConnection . beginBatchEdit ( ) ; void ( ) ; void ( org.solovyev.android.keyboard.InputConnection , java.lang.CharSequence , NUMBER ) ; org.solovyev.android.keyboard.InputConnection . endBatchEdit ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.CharSequence java.lang.CharSequence , int int ) { final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; void ( org.solovyev.android.keyboard.InputConnection , java.lang.CharSequence , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable java.lang.String java.lang.String , int int ) { final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; void ( org.solovyev.android.keyboard.InputConnection , java.lang.String , int ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull InputConnection org.solovyev.android.keyboard.InputConnection , @ Nullable java.lang.CharSequence java.lang.CharSequence , int int ) { org.solovyev.android.keyboard.InputConnection . commitText ( java.lang.CharSequence , int ) ; if ( ! Strings . isEmpty ( java.lang.CharSequence ) ) { org.solovyev.android.keyboard.HistoryHelper<org.solovyev.android.keyboard.KeyboardInputHistoryState> . addState ( new KeyboardInputHistoryState ( AndroidKeyboardUtils . getTextFromInputConnection ( org.solovyev.android.keyboard.InputConnection ) , NUMBER ) ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.keyboard.EditorInfo org.solovyev.android.keyboard.EditorInfo ( ) { return org.solovyev.android.keyboard.InputMethodService . getCurrentInputEditorInfo ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.keyboard.InputConnection org.solovyev.android.keyboard.InputConnection ( ) { InputConnection org.solovyev.android.keyboard.InputConnection = this . org.solovyev.android.keyboard.InputMethodService . getCurrentInputConnection ( ) ; if ( org.solovyev.android.keyboard.InputConnection == null ) { org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.DefaultKeyboardInput.NoInputConnection . org.solovyev.android.keyboard.InputConnection ( ) ; } return org.solovyev.android.keyboard.InputConnection ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.StringBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . java.lang.StringBuilder . void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.solovyev.android.keyboard.HistoryHelper<org.solovyev.android.keyboard.KeyboardInputHistoryState> . isUndoAvailable ( ) ) { final KeyboardInputHistoryState org.solovyev.android.keyboard.KeyboardInputHistoryState = this . org.solovyev.android.keyboard.HistoryHelper<org.solovyev.android.keyboard.KeyboardInputHistoryState> . undo ( null ) ; void ( org.solovyev.android.keyboard.KeyboardInputHistoryState ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nullable KeyboardInputHistoryState org.solovyev.android.keyboard.KeyboardInputHistoryState ) { if ( org.solovyev.android.keyboard.KeyboardInputHistoryState != null ) { final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; org.solovyev.android.keyboard.InputConnection . deleteSurroundingText ( int , int ) ; org.solovyev.android.keyboard.InputConnection . commitText ( org.solovyev.android.keyboard.KeyboardInputHistoryState . getCharSequence ( ) , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . org.solovyev.android.keyboard.HistoryHelper<org.solovyev.android.keyboard.KeyboardInputHistoryState> . isRedoAvailable ( ) ) { final KeyboardInputHistoryState org.solovyev.android.keyboard.KeyboardInputHistoryState = this . org.solovyev.android.keyboard.HistoryHelper<org.solovyev.android.keyboard.KeyboardInputHistoryState> . redo ( null ) ; void ( org.solovyev.android.keyboard.KeyboardInputHistoryState ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { boolean boolean = false ; int int = java.lang.StringBuilder . int ( ) ; final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; if ( int > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( int - NUMBER , int ) ; org.solovyev.android.keyboard.InputConnection . setComposingText ( java.lang.StringBuilder , NUMBER ) ; boolean = true ; } else if ( int > NUMBER ) { void ( ) ; void ( org.solovyev.android.keyboard.InputConnection , STRING , NUMBER ) ; boolean = true ; } return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull KeyEvent org.solovyev.android.keyboard.KeyEvent ) { org.solovyev.android.keyboard.InputConnection ( ) . sendKeyEvent ( org.solovyev.android.keyboard.KeyEvent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( int int ) { if ( ! Strings . isEmpty ( java.lang.StringBuilder ) ) { char char = java.lang.StringBuilder . char ( java.lang.StringBuilder . int ( ) - NUMBER ) ; int int = KeyEvent . getDeadChar ( char , int ) ; if ( int != NUMBER ) { int = int ; java.lang.StringBuilder . void ( java.lang.StringBuilder . int ( ) - NUMBER ) ; } } return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull CompletionInfo org.solovyev.android.keyboard.CompletionInfo ) { org.solovyev.android.keyboard.InputConnection ( ) . commitCompletion ( org.solovyev.android.keyboard.CompletionInfo ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( char char ) { java.lang.StringBuilder . java.lang.StringBuilder ( char ) ; org.solovyev.android.keyboard.InputConnection ( ) . setComposingText ( java.lang.StringBuilder , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; int int = int ( org.solovyev.android.keyboard.InputConnection ) ; int int = int ( org.solovyev.android.keyboard.InputConnection , int ) ; if ( int > NUMBER ) { int = int - NUMBER ; org.solovyev.android.keyboard.InputConnection . setSelection ( int , int ) ; } }  <METHOD_END>
<METHOD_START> private int int ( @ Nonnull InputConnection org.solovyev.android.keyboard.InputConnection , int int ) { final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.keyboard.InputConnection . getSelectedText ( NUMBER ) ; return int + ( java.lang.CharSequence == null ? NUMBER : java.lang.CharSequence . int ( ) ) ; }  <METHOD_END>
<METHOD_START> private int int ( @ Nonnull InputConnection org.solovyev.android.keyboard.InputConnection ) { return org.solovyev.android.keyboard.InputConnection . getTextBeforeCursor ( int , NUMBER ) . length ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; int int = int ( org.solovyev.android.keyboard.InputConnection ) ; int int = int ( org.solovyev.android.keyboard.InputConnection , int ) ; if ( int < NUMBER ) { int = int - NUMBER ; org.solovyev.android.keyboard.InputConnection . setSelection ( int , int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { java.lang.StringBuilder . void ( NUMBER ) ; final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; org.solovyev.android.keyboard.InputConnection . setSelection ( NUMBER , NUMBER ) ; org.solovyev.android.keyboard.InputConnection . deleteSurroundingText ( int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final ClipboardManager org.solovyev.android.keyboard.ClipboardManager = ( ClipboardManager ) org.solovyev.android.keyboard.InputMethodService . getSystemService ( Context . CLIPBOARD_SERVICE ) ; final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.keyboard.ClipboardManager . getText ( ) ; if ( ! Strings . isEmpty ( java.lang.CharSequence ) ) { void ( java.lang.CharSequence , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final InputConnection org.solovyev.android.keyboard.InputConnection = org.solovyev.android.keyboard.InputConnection ( ) ; AndroidKeyboardUtils . copyTextFromInputConnection ( org.solovyev.android.keyboard.InputConnection , org.solovyev.android.keyboard.InputMethodService ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { org.solovyev.android.keyboard.InputConnection ( ) . clearMetaKeyStates ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { void ( new KeyEvent ( KeyEvent . ACTION_DOWN , int ) ) ; void ( new KeyEvent ( KeyEvent . ACTION_UP , int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.keyboard.InputConnection ( ) . finishComposingText ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . org.solovyev.android.keyboard.InputMethodService . getCurrentInputConnection ( ) != null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( int int ) { return org.solovyev.android.keyboard.InputConnection ( ) . getCursorCapsMode ( int ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.keyboard.InputConnection org.solovyev.android.keyboard.InputConnection ( ) { return org.solovyev.android.keyboard.InputConnection ; }  <METHOD_END>
<METHOD_START> private void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( int int , int int ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( int int , int int ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( int int ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( int int ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.keyboard.ExtractedText org.solovyev.android.keyboard.ExtractedText ( ExtractedTextRequest org.solovyev.android.keyboard.ExtractedTextRequest , int int ) { return new ExtractedText ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , int int ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.CharSequence java.lang.CharSequence , int int ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , int int ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.CharSequence java.lang.CharSequence , int int ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( CompletionInfo org.solovyev.android.keyboard.CompletionInfo ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( CorrectionInfo org.solovyev.android.keyboard.CorrectionInfo ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , int int ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( KeyEvent org.solovyev.android.keyboard.KeyEvent ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( boolean boolean ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String , Bundle org.solovyev.android.keyboard.Bundle ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.CharSequence java.lang.CharSequence ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection ) { return org.solovyev.android.keyboard.DirectionDragButtonDefImpl . getText ( org.solovyev.android.keyboard.DragDirection ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.Integer java.lang.Integer ( ) { return org.solovyev.android.keyboard.DirectionDragButtonDefImpl . getDrawableResId ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.CharSequence java.lang.CharSequence ( ) { return org.solovyev.android.keyboard.DirectionDragButtonDefImpl . getText ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.Float java.lang.Float ( ) { return org.solovyev.android.keyboard.DirectionDragButtonDefImpl . getLayoutWeight ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.Integer java.lang.Integer ( ) { return org.solovyev.android.keyboard.DirectionDragButtonDefImpl . getLayoutMarginLeft ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.Integer java.lang.Integer ( ) { return org.solovyev.android.keyboard.DirectionDragButtonDefImpl . getLayoutMarginRight ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.String java.lang.String ( ) { return org.solovyev.android.keyboard.DirectionDragButtonDefImpl . getTag ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.Integer java.lang.Integer ( ) { return org.solovyev.android.keyboard.DirectionDragButtonDefImpl . getBackgroundResId ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection ) { return this . java.util.Map<org.solovyev.android.keyboard.DragDirection,java.lang.Integer> . get ( org.solovyev.android.keyboard.DragDirection ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection , @ Nullable java.lang.Integer java.lang.Integer ) { java.util.Map<org.solovyev.android.keyboard.DragDirection,java.lang.Integer> . put ( org.solovyev.android.keyboard.DragDirection , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence ) { final org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl = new org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( ) ; org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl . org.solovyev.android.keyboard.DirectionDragButtonDefImpl = DirectionDragButtonDefImpl . newInstance ( java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence ) ; return org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ; }  <METHOD_END>
<METHOD_START> public static org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , int int ) { final org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl = new org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( ) ; org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl . org.solovyev.android.keyboard.DirectionDragButtonDefImpl = DirectionDragButtonDefImpl . newInstance ( java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence , int ) ; return org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ; }  <METHOD_END>
<METHOD_START> public static org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.Integer java.lang.Integer ) { final org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl = new org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( ) ; org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl . org.solovyev.android.keyboard.DirectionDragButtonDefImpl = DirectionDragButtonDefImpl . newInstance ( java.lang.CharSequence ) ; org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl . java.lang.Integer = java.lang.Integer ; return org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ; }  <METHOD_END>
<METHOD_START> public static org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( int int , int int ) { final org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl = new org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( ) ; org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl . org.solovyev.android.keyboard.DirectionDragButtonDefImpl = DirectionDragButtonDefImpl . newDrawableInstance ( int ) ; org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl . java.lang.Integer = int ; return org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ; }  <METHOD_END>
<METHOD_START> public static org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( int int , int int , int int ) { final org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl = new org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ( ) ; org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl . org.solovyev.android.keyboard.DirectionDragButtonDefImpl = DirectionDragButtonDefImpl . newDrawableInstance ( int , int ) ; org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl . java.lang.Integer = int ; return org.solovyev.android.keyboard.DragAKeyboardButtonDefImpl ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Float java.lang.Float ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setWeight ( java.lang.Float ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setLayoutMarginRight ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setLayoutMarginLeft ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setBackgroundResId ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.String java.lang.String ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setTag ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.CharSequence java.lang.CharSequence ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setText ( java.lang.CharSequence ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setBackgroundResId ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setDrawableResId ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection , @ Nullable java.lang.CharSequence java.lang.CharSequence ) { org.solovyev.android.keyboard.DirectionDragButtonDefImpl . setDirectionText ( org.solovyev.android.keyboard.DragDirection , java.lang.CharSequence ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection , @ Nullable java.lang.CharSequence java.lang.CharSequence ) { java.util.Map<org.solovyev.android.keyboard.DragDirection,java.lang.CharSequence> . put ( org.solovyev.android.keyboard.DragDirection , java.lang.CharSequence ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Resources org.solovyev.android.keyboard.Resources , int int ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) {	}  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( ) { return this . java.lang.CharSequence ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection ) { return this . java.util.Map<org.solovyev.android.keyboard.DragDirection,java.lang.CharSequence> . get ( org.solovyev.android.keyboard.DragDirection ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Integer java.lang.Integer ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Integer java.lang.Integer ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Integer java.lang.Integer ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull Resources org.solovyev.android.keyboard.Resources , int int );  <METHOD_END>
<METHOD_START> void void ( boolean boolean );  <METHOD_END>
<METHOD_START> @ Nullable java.lang.CharSequence java.lang.CharSequence ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.CharSequence java.lang.CharSequence ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef ) { super( java.lang.String ); this . org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef = org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Resources org.solovyev.android.keyboard.Resources , int int ) { org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef . void ( org.solovyev.android.keyboard.Resources , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef . void ( boolean ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef ( ) { return org.solovyev.android.keyboard.DragAKeyboard.KeyboardDef ; }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public boolean boolean ( org.solovyev.android.keyboard.DragAKeyboard.RowDef org.solovyev.android.keyboard.DragAKeyboard.RowDef ) { return java.util.List<org.solovyev.android.keyboard.DragAKeyboard.RowDef> . boolean ( org.solovyev.android.keyboard.DragAKeyboard.RowDef ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.util.List<org.solovyev.android.keyboard.DragAKeyboard.RowDef> . void ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.util.List<org.solovyev.android.keyboard.DragAKeyboard.RowDef> < org.solovyev.android.keyboard.DragAKeyboard.RowDef > java.util.List<org.solovyev.android.keyboard.DragAKeyboard.RowDef> ( ) { return java.util.Collections . java.util.List<org.solovyev.android.keyboard.DragAKeyboard.RowDef> ( java.util.List<org.solovyev.android.keyboard.DragAKeyboard.RowDef> ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Resources org.solovyev.android.keyboard.Resources , int int ) { for ( org.solovyev.android.keyboard.DragAKeyboard.RowDef org.solovyev.android.keyboard.DragAKeyboard.RowDef : java.util.List<org.solovyev.android.keyboard.DragAKeyboard.RowDef> ) { org.solovyev.android.keyboard.DragAKeyboard.RowDef . void ( org.solovyev.android.keyboard.Resources , int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { for ( org.solovyev.android.keyboard.DragAKeyboard.RowDef org.solovyev.android.keyboard.DragAKeyboard.RowDef : java.util.List<org.solovyev.android.keyboard.DragAKeyboard.RowDef> ) { org.solovyev.android.keyboard.DragAKeyboard.RowDef . void ( boolean ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nonnull DragAKeyboardButtonDef org.solovyev.android.keyboard.DragAKeyboardButtonDef ) { return java.util.List<org.solovyev.android.keyboard.DragAKeyboardButtonDef> . add ( org.solovyev.android.keyboard.DragAKeyboardButtonDef ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.util.List<org.solovyev.android.keyboard.DragAKeyboardButtonDef> . clear ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.util.List<org.solovyev.android.keyboard.DragAKeyboardButtonDef> < DragAKeyboardButtonDef > java.util.List<org.solovyev.android.keyboard.DragAKeyboardButtonDef> ( ) { return java.util.Collections . java.util.List<org.solovyev.android.keyboard.DragAKeyboardButtonDef> ( java.util.List<org.solovyev.android.keyboard.DragAKeyboardButtonDef> ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Resources org.solovyev.android.keyboard.Resources , int int ) { for ( DragAKeyboardButtonDef org.solovyev.android.keyboard.DragAKeyboardButtonDef : java.util.List<org.solovyev.android.keyboard.DragAKeyboardButtonDef> ) { org.solovyev.android.keyboard.DragAKeyboardButtonDef . setImeOptions ( org.solovyev.android.keyboard.Resources , int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { for ( DragAKeyboardButtonDef org.solovyev.android.keyboard.DragAKeyboardButtonDef : java.util.List<org.solovyev.android.keyboard.DragAKeyboardButtonDef> ) { org.solovyev.android.keyboard.DragAKeyboardButtonDef . setShifted ( boolean ) ; } }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.keyboard.Context ) { super( org.solovyev.android.keyboard.Context ); org.solovyev.android.keyboard.AKeyboardButtonPreview = new AKeyboardButtonPreview ( this ) ; org.solovyev.android.keyboard.VibratorContainer = new VibratorContainer ( ( Vibrator ) org.solovyev.android.keyboard.Context . getSystemService ( Context . VIBRATOR_SERVICE ) , PreferenceManager . getDefaultSharedPreferences ( org.solovyev.android.keyboard.Context ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.keyboard.Context , AttributeSet org.solovyev.android.keyboard.AttributeSet ) { super( org.solovyev.android.keyboard.Context , org.solovyev.android.keyboard.AttributeSet ); org.solovyev.android.keyboard.AKeyboardButtonPreview = new AKeyboardButtonPreview ( this ) ; org.solovyev.android.keyboard.VibratorContainer = new VibratorContainer ( ( Vibrator ) org.solovyev.android.keyboard.Context . getSystemService ( Context . VIBRATOR_SERVICE ) , PreferenceManager . getDefaultSharedPreferences ( org.solovyev.android.keyboard.Context ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.keyboard.Context , AttributeSet org.solovyev.android.keyboard.AttributeSet , int int ) { super( org.solovyev.android.keyboard.Context , org.solovyev.android.keyboard.AttributeSet , int ); org.solovyev.android.keyboard.AKeyboardButtonPreview = new AKeyboardButtonPreview ( this ) ; org.solovyev.android.keyboard.VibratorContainer = new VibratorContainer ( ( Vibrator ) org.solovyev.android.keyboard.Context . getSystemService ( Context . VIBRATOR_SERVICE ) , PreferenceManager . getDefaultSharedPreferences ( org.solovyev.android.keyboard.Context ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull KeyboardView . KeyboardView KeyboardView.OnKeyboardActionListener ) { this . KeyboardView.OnKeyboardActionListener = KeyboardView.OnKeyboardActionListener ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull DragAKeyboard org.solovyev.android.keyboard.DragAKeyboard ) { void ( org.solovyev.android.keyboard.DragAKeyboard , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.solovyev.android.keyboard.AKeyboardButtonPreview . hide ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { this . org.solovyev.android.keyboard.AKeyboardButtonPreview . hide ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( org.solovyev.android.keyboard.DragAKeyboard != null ) { void ( org.solovyev.android.keyboard.DragAKeyboard , null ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nullable DragAKeyboard org.solovyev.android.keyboard.DragAKeyboard , @ Nullable LayoutInflater org.solovyev.android.keyboard.LayoutInflater ) { if ( org.solovyev.android.keyboard.DragAKeyboard != null ) { this . org.solovyev.android.keyboard.DragAKeyboard = org.solovyev.android.keyboard.DragAKeyboard ; void ( org.solovyev.android.keyboard.DragAKeyboard , org.solovyev.android.keyboard.LayoutInflater ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull DragAKeyboard org.solovyev.android.keyboard.DragAKeyboard , @ Nullable LayoutInflater org.solovyev.android.keyboard.LayoutInflater ) { void ( ) ; final DragAKeyboard . DragAKeyboard DragAKeyboard.KeyboardDef = org.solovyev.android.keyboard.DragAKeyboard . getKeyboardDef ( ) ; final Context org.solovyev.android.keyboard.Context = this . getContext ( ) ; int int = Views . toPixels ( org.solovyev.android.keyboard.Context . getResources ( ) . getDisplayMetrics ( ) , NUMBER ) ; if ( org.solovyev.android.keyboard.LayoutInflater == null ) { org.solovyev.android.keyboard.LayoutInflater = ( LayoutInflater ) org.solovyev.android.keyboard.Context . getSystemService ( Activity . LAYOUT_INFLATER_SERVICE ) ; } org.solovyev.android.keyboard.AKeyboardButtonPreview . createPreviewView ( org.solovyev.android.keyboard.LayoutInflater ) ; final SimpleOnDragListener . SimpleOnDragListener SimpleOnDragListener.Preferences = SimpleOnDragListener . getDefaultPreferences ( org.solovyev.android.keyboard.Context ) ; this . removeAllViews ( ) ; this . java.util.Map<org.solovyev.android.keyboard.View,org.solovyev.android.keyboard.DragAKeyboardButtonDef> . clear ( ) ; for ( DragAKeyboard . DragAKeyboard DragAKeyboard.RowDef : DragAKeyboard.KeyboardDef . getRowDefs ( ) ) { final LinearLayout org.solovyev.android.keyboard.LinearLayout = new LinearLayout ( org.solovyev.android.keyboard.Context ) ; org.solovyev.android.keyboard.LinearLayout . setOrientation ( LinearLayout . HORIZONTAL ) ; for ( DragAKeyboardButtonDef org.solovyev.android.keyboard.DragAKeyboardButtonDef : DragAKeyboard.RowDef . getButtonDefs ( ) ) { java.lang.Float java.lang.Float = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getLayoutWeight ( ) ; if ( java.lang.Float == null ) { java.lang.Float = NUMBER ; } final LayoutParams org.solovyev.android.keyboard.LayoutParams = new LayoutParams ( NUMBER , ViewGroup . LayoutParams . MATCH_PARENT , java.lang.Float ) ; java.lang.Integer java.lang.Integer = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getLayoutMarginLeft ( ) ; if ( java.lang.Integer != null ) { params . leftMargin = java.lang.Integer ; } else { params . leftMargin = int ; } java.lang.Integer java.lang.Integer = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getLayoutMarginRight ( ) ; if ( java.lang.Integer != null ) { params . rightMargin = java.lang.Integer ; } else { params . rightMargin = int ; } params . topMargin = int ; params . bottomMargin = int ; final java.lang.Integer java.lang.Integer = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getDrawableResId ( ) ; if ( java.lang.Integer == null ) { final DirectionDragButton org.solovyev.android.keyboard.DirectionDragButton = ( DirectionDragButton ) org.solovyev.android.keyboard.LayoutInflater . inflate ( R . layout . drag_keyboard_drag_button , null ) ; org.solovyev.android.keyboard.DirectionDragButton . applyDef ( org.solovyev.android.keyboard.DragAKeyboardButtonDef ) ; org.solovyev.android.keyboard.DirectionDragButton . setOnDragListener ( new SimpleOnDragListener ( this , SimpleOnDragListener.Preferences ) ) ; org.solovyev.android.keyboard.DirectionDragButton . setOnClickListener ( this ) ; java.util.Map<org.solovyev.android.keyboard.View,org.solovyev.android.keyboard.DragAKeyboardButtonDef> . put ( org.solovyev.android.keyboard.DirectionDragButton , org.solovyev.android.keyboard.DragAKeyboardButtonDef ) ; org.solovyev.android.keyboard.LinearLayout . addView ( org.solovyev.android.keyboard.DirectionDragButton , org.solovyev.android.keyboard.LayoutParams ) ; } else { final ImageButton org.solovyev.android.keyboard.ImageButton = ( ImageButton ) org.solovyev.android.keyboard.LayoutInflater . inflate ( R . layout . drag_keyboard_image_button , null ) ; AndroidViewUtils . applyButtonDef ( org.solovyev.android.keyboard.ImageButton , org.solovyev.android.keyboard.DragAKeyboardButtonDef ) ; org.solovyev.android.keyboard.ImageButton . setOnTouchListener ( this ) ; java.util.Map<org.solovyev.android.keyboard.View,org.solovyev.android.keyboard.DragAKeyboardButtonDef> . put ( org.solovyev.android.keyboard.ImageButton , org.solovyev.android.keyboard.DragAKeyboardButtonDef ) ; org.solovyev.android.keyboard.LinearLayout . addView ( org.solovyev.android.keyboard.ImageButton , org.solovyev.android.keyboard.LayoutParams ) ; } } final LayoutParams org.solovyev.android.keyboard.LayoutParams = new LayoutParams ( ViewGroup . LayoutParams . MATCH_PARENT , NUMBER , NUMBER ) ; params . gravity = Gravity . CENTER_HORIZONTAL ; this . addView ( org.solovyev.android.keyboard.LinearLayout , org.solovyev.android.keyboard.LayoutParams ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull DragDirection org.solovyev.android.keyboard.DragDirection , @ Nonnull DragButton org.solovyev.android.keyboard.DragButton , @ Nonnull Point2d org.solovyev.android.keyboard.Point2d , @ Nonnull MotionEvent org.solovyev.android.keyboard.MotionEvent ) { if ( org.solovyev.android.keyboard.DragButton instanceof DirectionDragButton ) { final DirectionDragButton org.solovyev.android.keyboard.DirectionDragButton = ( DirectionDragButton ) org.solovyev.android.keyboard.DragButton ; org.solovyev.android.keyboard.VibratorContainer . vibrate ( ) ; final java.lang.Integer java.lang.Integer = java.lang.Integer ( org.solovyev.android.keyboard.DragDirection , org.solovyev.android.keyboard.DragButton ) ; return boolean ( org.solovyev.android.keyboard.DragButton , org.solovyev.android.keyboard.DirectionDragButton . getText ( org.solovyev.android.keyboard.DragDirection ) , java.lang.Integer , true , org.solovyev.android.keyboard.DragDirection ) ; } return false ; }  <METHOD_END>
<METHOD_START> private java.lang.Integer java.lang.Integer ( @ Nullable DragDirection org.solovyev.android.keyboard.DragDirection , @ Nonnull View org.solovyev.android.keyboard.View ) { java.lang.Integer java.lang.Integer = null ; final DragAKeyboardButtonDef org.solovyev.android.keyboard.DragAKeyboardButtonDef = this . java.util.Map<org.solovyev.android.keyboard.View,org.solovyev.android.keyboard.DragAKeyboardButtonDef> . get ( org.solovyev.android.keyboard.View ) ; if ( org.solovyev.android.keyboard.DragAKeyboardButtonDef != null ) { if ( org.solovyev.android.keyboard.DragDirection != null ) { java.lang.Integer = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getDirectionKeycode ( org.solovyev.android.keyboard.DragDirection ) ; } else { java.lang.Integer = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getKeycode ( ) ; } } return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull View org.solovyev.android.keyboard.View , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.Integer java.lang.Integer , boolean boolean , @ Nullable DragDirection org.solovyev.android.keyboard.DragDirection ) { if ( java.lang.Integer != null ) { return boolean ( org.solovyev.android.keyboard.View , java.lang.CharSequence , java.lang.Integer , boolean , org.solovyev.android.keyboard.DragDirection ) ; } else { return boolean ( org.solovyev.android.keyboard.View , java.lang.CharSequence , boolean , org.solovyev.android.keyboard.DragDirection ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull View org.solovyev.android.keyboard.View , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nonnull java.lang.Integer java.lang.Integer , boolean boolean , @ Nullable DragDirection org.solovyev.android.keyboard.DragDirection ) { if ( boolean ) { void ( org.solovyev.android.keyboard.View , java.lang.CharSequence , org.solovyev.android.keyboard.DragDirection ) ; } if ( KeyboardView.OnKeyboardActionListener != null ) { KeyboardView.OnKeyboardActionListener . onKey ( java.lang.Integer , null ) ; } return true ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull View org.solovyev.android.keyboard.View , @ Nullable java.lang.CharSequence java.lang.CharSequence , boolean boolean , @ Nullable DragDirection org.solovyev.android.keyboard.DragDirection ) { if ( ! Strings . isEmpty ( java.lang.CharSequence ) ) { if ( boolean ) { void ( org.solovyev.android.keyboard.View , java.lang.CharSequence , org.solovyev.android.keyboard.DragDirection ) ; } if ( KeyboardView.OnKeyboardActionListener != null ) { KeyboardView.OnKeyboardActionListener . onText ( java.lang.CharSequence ) ; } return true ; } return false ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull View org.solovyev.android.keyboard.View , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable DragDirection org.solovyev.android.keyboard.DragDirection ) { final DragAKeyboardButtonDef org.solovyev.android.keyboard.DragAKeyboardButtonDef = java.util.Map<org.solovyev.android.keyboard.View,org.solovyev.android.keyboard.DragAKeyboardButtonDef> . get ( org.solovyev.android.keyboard.View ) ; if ( org.solovyev.android.keyboard.DragAKeyboardButtonDef != null ) { java.lang.CharSequence java.lang.CharSequence ; if ( org.solovyev.android.keyboard.DragDirection != null ) { java.lang.CharSequence = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getPreviewDirectionText ( org.solovyev.android.keyboard.DragDirection ) ; } else { java.lang.CharSequence = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getPreviewText ( ) ; } java.lang.Integer java.lang.Integer = null ; if ( org.solovyev.android.keyboard.DragDirection == null ) { java.lang.Integer = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getPreviewDrawableResId ( ) ; } if ( java.lang.Integer == null ) { java.lang.Integer = org.solovyev.android.keyboard.DragAKeyboardButtonDef . getDrawableResId ( ) ; } if ( java.lang.CharSequence == null && java.lang.Integer == null ) { java.lang.CharSequence = java.lang.CharSequence ; } org.solovyev.android.keyboard.AKeyboardButtonPreview . showPreview ( org.solovyev.android.keyboard.View , java.lang.CharSequence , java.lang.Integer ) ; } else { org.solovyev.android.keyboard.AKeyboardButtonPreview . showPreview ( org.solovyev.android.keyboard.View , java.lang.CharSequence , null ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull final View org.solovyev.android.keyboard.View , @ Nonnull MotionEvent org.solovyev.android.keyboard.MotionEvent ) { switch ( org.solovyev.android.keyboard.MotionEvent . getAction ( ) ) { case MotionEvent . ACTION_DOWN : if ( boolean ( org.solovyev.android.keyboard.View ) ) { org.solovyev.android.keyboard.RepeatHelper . keyDown ( org.solovyev.android.keyboard.View , new org.solovyev.android.keyboard.DragAndroidKeyboardView.RepeatKeydownRunnable ( org.solovyev.android.keyboard.View ) ) ; } else { org.solovyev.android.keyboard.RepeatHelper . keyDown ( org.solovyev.android.keyboard.View , null ) ; void ( org.solovyev.android.keyboard.View ) ; } return true ; case MotionEvent . ACTION_UP : org.solovyev.android.keyboard.RepeatHelper . keyUp ( org.solovyev.android.keyboard.View ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( View org.solovyev.android.keyboard.View ) { boolean boolean = false ; final DragAKeyboardButtonDef org.solovyev.android.keyboard.DragAKeyboardButtonDef = java.util.Map<org.solovyev.android.keyboard.View,org.solovyev.android.keyboard.DragAKeyboardButtonDef> . get ( org.solovyev.android.keyboard.View ) ; if ( org.solovyev.android.keyboard.DragAKeyboardButtonDef != null ) { boolean = org.solovyev.android.keyboard.DragAKeyboardButtonDef . allowRepeat ( ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.keyboard.View ) { org.solovyev.android.keyboard.VibratorContainer . vibrate ( ) ; final java.lang.Integer java.lang.Integer = java.lang.Integer ( null , org.solovyev.android.keyboard.View ) ; if ( org.solovyev.android.keyboard.View instanceof TextView ) { boolean ( org.solovyev.android.keyboard.View , ( ( TextView ) org.solovyev.android.keyboard.View ) . getText ( ) , java.lang.Integer , true , null ) ; } else { boolean ( org.solovyev.android.keyboard.View , null , java.lang.Integer , true , null ) ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull View org.solovyev.android.keyboard.View ) { this . org.solovyev.android.keyboard.View = org.solovyev.android.keyboard.View ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( org.solovyev.android.keyboard.View ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull View org.solovyev.android.keyboard.View ) { final java.lang.Integer java.lang.Integer = java.lang.Integer ( null , org.solovyev.android.keyboard.View ) ; if ( org.solovyev.android.keyboard.View instanceof TextView ) { boolean ( org.solovyev.android.keyboard.View , ( ( TextView ) org.solovyev.android.keyboard.View ) . getText ( ) , java.lang.Integer , true , null ) ; } else { boolean ( org.solovyev.android.keyboard.View , null , java.lang.Integer , true , null ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<org.solovyev.android.keyboard.DragAKeyboard> < DragAKeyboard > org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<org.solovyev.android.keyboard.DragAKeyboard> ( @ Nonnull Context org.solovyev.android.keyboard.Context ) { return new AKeyboardViewWithSuggestionsImpl < DragAKeyboard , DragAndroidKeyboardView > ( R . layout . drag_keyboard , this , getInputMethodService ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.DragAKeyboard> < DragAKeyboard > org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.DragAKeyboard> ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { return AKeyboardControllerStateImpl . newDefaultState ( org.solovyev.android.keyboard.DragAKeyboard ( org.solovyev.android.keyboard.InputMethodService ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract org.solovyev.android.keyboard.DragAKeyboard org.solovyev.android.keyboard.DragAKeyboard ( @ Nonnull Context org.solovyev.android.keyboard.Context );  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.DragAKeyboard> < DragAKeyboard > org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.DragAKeyboard> ( @ Nonnull EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean ) { return getState ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.keyboard.AKeyboardConfiguration org.solovyev.android.keyboard.AKeyboardConfiguration ( @ Nonnull Context org.solovyev.android.keyboard.Context ) { return new AKeyboardConfigurationImpl ( org.solovyev.android.keyboard.Context . getResources ( ) . getString ( R . string . word_separators ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle org.solovyev.android.keyboard.Bundle ) { super. onCreate ( org.solovyev.android.keyboard.Bundle ) ; final Context org.solovyev.android.keyboard.Context = getActivity ( ) ; setPreferenceScreen ( getPreferenceManager ( ) . createPreferenceScreen ( org.solovyev.android.keyboard.Context ) ) ; org.solovyev.android.keyboard.InputMethodSettingsImpl . init ( org.solovyev.android.keyboard.Context , getPreferenceScreen ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { org.solovyev.android.keyboard.InputMethodSettingsImpl . setInputMethodSettingsCategoryTitle ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence ) { org.solovyev.android.keyboard.InputMethodSettingsImpl . setInputMethodSettingsCategoryTitle ( java.lang.CharSequence ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { org.solovyev.android.keyboard.InputMethodSettingsImpl . setSubtypeEnablerTitle ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence ) { org.solovyev.android.keyboard.InputMethodSettingsImpl . setSubtypeEnablerTitle ( java.lang.CharSequence ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { org.solovyev.android.keyboard.InputMethodSettingsImpl . setSubtypeEnablerIcon ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Drawable org.solovyev.android.keyboard.Drawable ) { org.solovyev.android.keyboard.InputMethodSettingsImpl . setSubtypeEnablerIcon ( org.solovyev.android.keyboard.Drawable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; org.solovyev.android.keyboard.InputMethodSettingsImpl . updateSubtypeEnabler ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( final Context org.solovyev.android.keyboard.Context , final PreferenceScreen org.solovyev.android.keyboard.PreferenceScreen ) { org.solovyev.android.keyboard.Context = org.solovyev.android.keyboard.Context ; org.solovyev.android.keyboard.InputMethodManager = ( InputMethodManager ) org.solovyev.android.keyboard.Context . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; org.solovyev.android.keyboard.InputMethodInfo = org.solovyev.android.keyboard.InputMethodInfo ( org.solovyev.android.keyboard.Context , org.solovyev.android.keyboard.InputMethodManager ) ; if ( org.solovyev.android.keyboard.InputMethodInfo == null || org.solovyev.android.keyboard.InputMethodInfo . getSubtypeCount ( ) <= NUMBER ) { return false ; } org.solovyev.android.keyboard.Preference = new Preference ( org.solovyev.android.keyboard.Context ) ; org.solovyev.android.keyboard.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference org.solovyev.android.keyboard.Preference ) { final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence ( org.solovyev.android.keyboard.Context ) ; final Intent org.solovyev.android.keyboard.Intent = new Intent ( Settings . ACTION_INPUT_METHOD_SUBTYPE_SETTINGS ) ; org.solovyev.android.keyboard.Intent . putExtra ( Settings . EXTRA_INPUT_METHOD_ID , org.solovyev.android.keyboard.InputMethodInfo . getId ( ) ) ; if ( ! TextUtils . isEmpty ( java.lang.CharSequence ) ) { org.solovyev.android.keyboard.Intent . putExtra ( Intent . EXTRA_TITLE , java.lang.CharSequence ) ; } org.solovyev.android.keyboard.Intent . setFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_RESET_TASK_IF_NEEDED | Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; org.solovyev.android.keyboard.Context . startActivity ( org.solovyev.android.keyboard.Intent ) ; return true ; } } ) ; org.solovyev.android.keyboard.PreferenceScreen . addPreference ( org.solovyev.android.keyboard.Preference ) ; void ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference org.solovyev.android.keyboard.Preference ) { final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence ( org.solovyev.android.keyboard.Context ) ; final Intent org.solovyev.android.keyboard.Intent = new Intent ( Settings . ACTION_INPUT_METHOD_SUBTYPE_SETTINGS ) ; org.solovyev.android.keyboard.Intent . putExtra ( Settings . EXTRA_INPUT_METHOD_ID , org.solovyev.android.keyboard.InputMethodInfo . getId ( ) ) ; if ( ! TextUtils . isEmpty ( java.lang.CharSequence ) ) { org.solovyev.android.keyboard.Intent . putExtra ( Intent . EXTRA_TITLE , java.lang.CharSequence ) ; } org.solovyev.android.keyboard.Intent . setFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_RESET_TASK_IF_NEEDED | Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; org.solovyev.android.keyboard.Context . startActivity ( org.solovyev.android.keyboard.Intent ) ; return true ; }  <METHOD_END>
<METHOD_START> private static org.solovyev.android.keyboard.InputMethodInfo org.solovyev.android.keyboard.InputMethodInfo ( Context org.solovyev.android.keyboard.Context , InputMethodManager org.solovyev.android.keyboard.InputMethodManager ) { final java.util.List<org.solovyev.android.keyboard.InputMethodInfo> < InputMethodInfo > java.util.List<org.solovyev.android.keyboard.InputMethodInfo> = org.solovyev.android.keyboard.InputMethodManager . getInputMethodList ( ) ; for ( int int = NUMBER ; int < java.util.List<org.solovyev.android.keyboard.InputMethodInfo> . size ( ) ; ++ int ) { final InputMethodInfo org.solovyev.android.keyboard.InputMethodInfo = java.util.List<org.solovyev.android.keyboard.InputMethodInfo> . get ( int ) ; if ( java.util.List<org.solovyev.android.keyboard.InputMethodInfo> . get ( int ) . getPackageName ( ) . equals ( org.solovyev.android.keyboard.Context . getPackageName ( ) ) ) { return org.solovyev.android.keyboard.InputMethodInfo ; } } return null ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( Context org.solovyev.android.keyboard.Context , InputMethodManager org.solovyev.android.keyboard.InputMethodManager , InputMethodInfo org.solovyev.android.keyboard.InputMethodInfo ) { if ( org.solovyev.android.keyboard.Context == null || org.solovyev.android.keyboard.InputMethodManager == null || org.solovyev.android.keyboard.InputMethodInfo == null ) return null ; final java.util.List<org.solovyev.android.keyboard.InputMethodSubtype> < InputMethodSubtype > java.util.List<org.solovyev.android.keyboard.InputMethodSubtype> = org.solovyev.android.keyboard.InputMethodManager . getEnabledInputMethodSubtypeList ( org.solovyev.android.keyboard.InputMethodInfo , true ) ; final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; final int int = java.util.List<org.solovyev.android.keyboard.InputMethodSubtype> . size ( ) ; for ( int int = NUMBER ; int < int ; ++ int ) { final InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype = java.util.List<org.solovyev.android.keyboard.InputMethodSubtype> . get ( int ) ; if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( org.solovyev.android.keyboard.InputMethodSubtype . getDisplayName ( org.solovyev.android.keyboard.Context , org.solovyev.android.keyboard.InputMethodInfo . getPackageName ( ) , org.solovyev.android.keyboard.InputMethodInfo . getServiceInfo ( ) . applicationInfo ) ) ; } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { int = int ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence ) { int = NUMBER ; java.lang.CharSequence = java.lang.CharSequence ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { int = int ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence ) { int = NUMBER ; java.lang.CharSequence = java.lang.CharSequence ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { int = int ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Drawable org.solovyev.android.keyboard.Drawable ) { int = NUMBER ; org.solovyev.android.keyboard.Drawable = org.solovyev.android.keyboard.Drawable ; void ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.CharSequence java.lang.CharSequence ( Context org.solovyev.android.keyboard.Context ) { if ( int != NUMBER ) { return org.solovyev.android.keyboard.Context . getString ( int ) ; } else { return java.lang.CharSequence ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( org.solovyev.android.keyboard.Preference != null ) { if ( int != NUMBER ) { org.solovyev.android.keyboard.Preference . setTitle ( int ) ; } else if ( ! TextUtils . isEmpty ( java.lang.CharSequence ) ) { org.solovyev.android.keyboard.Preference . setTitle ( java.lang.CharSequence ) ; } final java.lang.String java.lang.String = java.lang.String ( org.solovyev.android.keyboard.Context , org.solovyev.android.keyboard.InputMethodManager , org.solovyev.android.keyboard.InputMethodInfo ) ; if ( ! TextUtils . isEmpty ( java.lang.String ) ) { org.solovyev.android.keyboard.Preference . setSummary ( java.lang.String ) ; } if ( int != NUMBER ) { org.solovyev.android.keyboard.Preference . setIcon ( int ) ; } else if ( org.solovyev.android.keyboard.Drawable != null ) { org.solovyev.android.keyboard.Preference . setIcon ( org.solovyev.android.keyboard.Drawable ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( int int );  <METHOD_END>
<METHOD_START> public void void ( java.lang.CharSequence java.lang.CharSequence );  <METHOD_END>
<METHOD_START> public void void ( int int );  <METHOD_END>
<METHOD_START> public void void ( java.lang.CharSequence java.lang.CharSequence );  <METHOD_END>
<METHOD_START> public void void ( int int );  <METHOD_END>
<METHOD_START> public void void ( Drawable org.solovyev.android.keyboard.Drawable );  <METHOD_END>
<METHOD_START> public void ( java.lang.CharSequence java.lang.CharSequence , int int ) { this . java.lang.CharSequence = java.lang.CharSequence ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( ! ( java.lang.Object instanceof org.solovyev.android.keyboard.KeyboardInputHistoryState ) ) return false ; org.solovyev.android.keyboard.KeyboardInputHistoryState org.solovyev.android.keyboard.KeyboardInputHistoryState = ( org.solovyev.android.keyboard.KeyboardInputHistoryState ) java.lang.Object ; if ( int != org.solovyev.android.keyboard.KeyboardInputHistoryState . int ) return false ; if ( java.lang.CharSequence != null ? ! java.lang.CharSequence . boolean ( org.solovyev.android.keyboard.KeyboardInputHistoryState . java.lang.CharSequence ) : org.solovyev.android.keyboard.KeyboardInputHistoryState . java.lang.CharSequence != null ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = java.lang.CharSequence != null ? java.lang.CharSequence . int ( ) : NUMBER ; int = NUMBER * int + int ; return int ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.keyboard.Context , AttributeSet org.solovyev.android.keyboard.AttributeSet ) { super( org.solovyev.android.keyboard.Context , org.solovyev.android.keyboard.AttributeSet ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.keyboard.Context , AttributeSet org.solovyev.android.keyboard.AttributeSet , int int ) { super( org.solovyev.android.keyboard.Context , org.solovyev.android.keyboard.AttributeSet , int ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull KeyboardView . KeyboardView KeyboardView.OnKeyboardActionListener ) { super. setOnKeyboardActionListener ( KeyboardView.OnKeyboardActionListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull AndroidAKeyboard org.solovyev.android.keyboard.AndroidAKeyboard ) { super. setKeyboard ( org.solovyev.android.keyboard.AndroidAKeyboard . getKeyboard ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. closing ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. handleBack ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( getKeyboard ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( Keyboard . Keyboard Keyboard.Key ) { if ( key . codes [ NUMBER ] == Keyboard . KEYCODE_CANCEL ) { getOnKeyboardActionListener ( ) . onKey ( int , null ) ; return true ; } else { return super. onLongPress ( Keyboard.Key ) ; } }  <METHOD_END>
<METHOD_START> void void ( final InputMethodSubtype org.solovyev.android.keyboard.InputMethodSubtype ) { final LatinKeyboard org.solovyev.android.keyboard.LatinKeyboard = ( LatinKeyboard ) getKeyboard ( ) ; org.solovyev.android.keyboard.LatinKeyboard . setSpaceIcon ( getResources ( ) . getDrawable ( org.solovyev.android.keyboard.InputMethodSubtype . getIconResId ( ) ) ) ; invalidateAllKeys ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( new LatinDragKeyboardController ( ) ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.DragAKeyboard> < DragAKeyboard > org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.DragAKeyboard> ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { java.util.List<org.solovyev.android.keyboard.DragAKeyboard> . add ( createKeyboard ( STRING , createEnglishKeyboard ( org.solovyev.android.keyboard.InputMethodService ) ) ) ; java.util.List<org.solovyev.android.keyboard.DragAKeyboard> . add ( createKeyboard ( STRING , createRussianKeyboard ( org.solovyev.android.keyboard.InputMethodService ) ) ) ; DragAKeyboard.KeyboardDef = createDigitsKeyboard ( org.solovyev.android.keyboard.InputMethodService ) ; return super. onInitializeInterface0 ( org.solovyev.android.keyboard.InputMethodService ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.keyboard.DragAKeyboard org.solovyev.android.keyboard.DragAKeyboard ( @Nonnul  <METHOD_END>
<METHOD_START> public void ( ) { super( new LatinKeyboardController ( ) ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> < AndroidAKeyboard > org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { org.solovyev.android.keyboard.AndroidAKeyboard = AndroidAKeyboard . newInstance ( java.lang.String . java.lang.String ( R . xml . qwerty ) , new LatinKeyboard ( org.solovyev.android.keyboard.InputMethodService , R . xml . qwerty ) ) ; org.solovyev.android.keyboard.AndroidAKeyboard = AndroidAKeyboard . newInstance ( java.lang.String . java.lang.String ( R . xml . qwerty ) , new LatinKeyboard ( org.solovyev.android.keyboard.InputMethodService , R . xml . symbols ) ) ; org.solovyev.android.keyboard.AndroidAKeyboard = AndroidAKeyboard . newInstance ( java.lang.String . java.lang.String ( R . xml . qwerty ) , new LatinKeyboard ( org.solovyev.android.keyboard.InputMethodService , R . xml . symbols_shift ) ) ; return AKeyboardControllerStateImpl . newDefaultState ( org.solovyev.android.keyboard.AndroidAKeyboard ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> < AndroidAKeyboard > org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> ( @ Nonnull EditorInfo org.solovyev.android.keyboard.EditorInfo , boolean boolean ) { final AKeyboardControllerState < AndroidAKeyboard > org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> ; switch ( attribute . inputType & InputType . TYPE_MASK_CLASS ) { case InputType . TYPE_CLASS_NUMBER : case InputType . TYPE_CLASS_DATETIME : org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> = AKeyboardControllerStateImpl . newDefaultState ( org.solovyev.android.keyboard.AndroidAKeyboard ) ; break; case InputType . TYPE_CLASS_PHONE : org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> = AKeyboardControllerStateImpl . newDefaultState ( org.solovyev.android.keyboard.AndroidAKeyboard ) ; break; case InputType . TYPE_CLASS_TEXT : boolean boolean = true ; boolean boolean = false ; int int = attribute . inputType & InputType . TYPE_MASK_VARIATION ; if ( int == InputType . TYPE_TEXT_VARIATION_PASSWORD || int == InputType . TYPE_TEXT_VARIATION_VISIBLE_PASSWORD ) { boolean = false ; } if ( int == InputType . TYPE_TEXT_VARIATION_EMAIL_ADDRESS || int == InputType . TYPE_TEXT_VARIATION_URI || int == InputType . TYPE_TEXT_VARIATION_FILTER ) { boolean = false ; } if ( ( attribute . inputType & InputType . TYPE_TEXT_FLAG_AUTO_COMPLETE ) != NUMBER ) { boolean = false ; boolean = getInputMethodService ( ) . isFullscreenMode ( ) ; } org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> = AKeyboardControllerStateImpl . newInstance ( boolean , boolean , org.solovyev.android.keyboard.AndroidAKeyboard ) ; updateShiftKeyState ( org.solovyev.android.keyboard.EditorInfo ) ; break; default: updateShiftKeyState ( org.solovyev.android.keyboard.EditorInfo ) ; org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> = AKeyboardControllerStateImpl . newDefaultState ( org.solovyev.android.keyboard.AndroidAKeyboard ) ; } return org.solovyev.android.keyboard.AKeyboardControllerState<org.solovyev.android.keyboard.AndroidAKeyboard> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onFinishInput ( ) ; setCurrentKeyboard ( org.solovyev.android.keyboard.AndroidAKeyboard ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. handleModeChange ( ) ; AndroidAKeyboard org.solovyev.android.keyboard.AndroidAKeyboard = getCurrentKeyboard ( ) ; if ( org.solovyev.android.keyboard.AndroidAKeyboard == org.solovyev.android.keyboard.AndroidAKeyboard || org.solovyev.android.keyboard.AndroidAKeyboard == org.solovyev.android.keyboard.AndroidAKeyboard ) { org.solovyev.android.keyboard.AndroidAKeyboard = org.solovyev.android.keyboard.AndroidAKeyboard ; } else { org.solovyev.android.keyboard.AndroidAKeyboard = org.solovyev.android.keyboard.AndroidAKeyboard ; } setCurrentKeyboard ( org.solovyev.android.keyboard.AndroidAKeyboard ) ; if ( org.solovyev.android.keyboard.AndroidAKeyboard == org.solovyev.android.keyboard.AndroidAKeyboard ) { org.solovyev.android.keyboard.AndroidAKeyboard . setShifted ( false ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.keyboard.AKeyboardConfiguration org.solovyev.android.keyboard.AKeyboardConfiguration ( @ Nonnull Context org.solovyev.android.keyboard.Context ) { return new AKeyboardConfigurationImpl ( org.solovyev.android.keyboard.Context . getResources ( ) . getString ( R . string . word_separators ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<org.solovyev.android.keyboard.AndroidAKeyboard> < AndroidAKeyboard > org.solovyev.android.keyboard.AKeyboardViewWithSuggestions<org.solovyev.android.keyboard.AndroidAKeyboard> ( @ Nonnull Context org.solovyev.android.keyboard.Context ) { return new AKeyboardViewWithSuggestionsImpl < AndroidAKeyboard , KeyboardViewAKeyboardView > ( R . layout . latin_keyboard , this , getInputMethodService ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { long long = java.lang.System . long ( ) ; if ( long + NUMBER > long ) { setState ( getState ( ) . copyForNewCapsLock ( ! getState ( ) . isCapsLock ( ) ) ) ; long = NUMBER ; } else { long = long ; } }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.keyboard.Context , int int ) { super( org.solovyev.android.keyboard.Context , int ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.keyboard.Context , int int , java.lang.CharSequence java.lang.CharSequence , int int , int int ) { super( org.solovyev.android.keyboard.Context , int , java.lang.CharSequence , int , int ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.keyboard.Key org.solovyev.android.keyboard.Key ( Resources org.solovyev.android.keyboard.Resources , Row org.solovyev.android.keyboard.Row , int int , int int , XmlResourceParser org.solovyev.android.keyboard.XmlResourceParser ) { Key org.solovyev.android.keyboard.Key = new org.solovyev.android.keyboard.LatinKeyboard.LatinKey ( org.solovyev.android.keyboard.Resources , org.solovyev.android.keyboard.Row , int , int , org.solovyev.android.keyboard.XmlResourceParser ) ; if ( key . codes [ NUMBER ] == NUMBER ) { org.solovyev.android.keyboard.Key = org.solovyev.android.keyboard.Key ; } else if ( key . codes [ NUMBER ] == ' ' ) { org.solovyev.android.keyboard.Key = org.solovyev.android.keyboard.Key ; } return org.solovyev.android.keyboard.Key ; }  <METHOD_END>
<METHOD_START> void void ( Resources org.solovyev.android.keyboard.Resources , int int ) { if ( org.solovyev.android.keyboard.Key == null ) { return; } switch ( int & ( EditorInfo . IME_MASK_ACTION | EditorInfo . IME_FLAG_NO_ENTER_ACTION ) ) { case EditorInfo . IME_ACTION_GO : org.solovyev.android.keyboard.Key . iconPreview = null ; org.solovyev.android.keyboard.Key . icon = null ; org.solovyev.android.keyboard.Key . label = org.solovyev.android.keyboard.Resources . getText ( R . string . label_go_key ) ; break; case EditorInfo . IME_ACTION_NEXT : org.solovyev.android.keyboard.Key . iconPreview = null ; org.solovyev.android.keyboard.Key . icon = null ; org.solovyev.android.keyboard.Key . label = org.solovyev.android.keyboard.Resources . getText ( R . string . label_next_key ) ; break; case EditorInfo . IME_ACTION_SEARCH : org.solovyev.android.keyboard.Key . icon = org.solovyev.android.keyboard.Resources . getDrawable ( R . drawable . sym_keyboard_search ) ; org.solovyev.android.keyboard.Key . label = null ; break; case EditorInfo . IME_ACTION_SEND : org.solovyev.android.keyboard.Key . iconPreview = null ; org.solovyev.android.keyboard.Key . icon = null ; org.solovyev.android.keyboard.Key . label = org.solovyev.android.keyboard.Resources . getText ( R . string . label_send_key ) ; break; default: org.solovyev.android.keyboard.Key . icon = org.solovyev.android.keyboard.Resources . getDrawable ( R . drawable . sym_keyboard_return ) ; org.solovyev.android.keyboard.Key . label = null ; break; } }  <METHOD_END>
<METHOD_START> void void ( final Drawable org.solovyev.android.keyboard.Drawable ) { if ( org.solovyev.android.keyboard.Key != null ) { org.solovyev.android.keyboard.Key . icon = org.solovyev.android.keyboard.Drawable ; } }  <METHOD_END>
<METHOD_START> public void ( Resources org.solovyev.android.keyboard.Resources , Keyboard . Keyboard Keyboard.Row , int int , int int , XmlResourceParser org.solovyev.android.keyboard.XmlResourceParser ) { super( org.solovyev.android.keyboard.Resources , Keyboard.Row , int , int , org.solovyev.android.keyboard.XmlResourceParser ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , int int ) { return super. isInside ( int , codes [ NUMBER ] == KEYCODE_CANCEL ? int - NUMBER : int ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.keyboard.AKeyboardControllerState org.solovyev.android.keyboard.AKeyboardControllerState ( @ Nonnull InputMethodService org.solovyev.android.keyboard.InputMethodService ) { synchronized ( this . java.util.Map<java.lang.String,org.solovyev.android.keyboard.AKeyboard> ) { this . java.util.Map<java.lang.String,org.solovyev.android.keyboard.AKeyboard> . clear ( ) ; final java.util.List<org.solovyev.android.keyboard.AKeyboard> < AKeyboard > java.util.List<org.solovyev.android.keyboard.AKeyboard> = java.util.List<org.solovyev.android.keyboard.AKeyboard> ( org.solovyev.android.keyboard.InputMethodService ) ; for ( AKeyboard org.solovyev.android.keyboard.AKeyboard : java.util.List<org.solovyev.android.keyboard.AKeyboard> ) { this . java.util.Map<java.lang.String,org.solovyev.android.keyboard.AKeyboard> . put ( org.solovyev.android.keyboard.AKeyboard . getKeyboardId ( ) , org.solovyev.android.keyboard.AKeyboard ) ; } return AKeyboardControllerStateImpl . newDefaultState ( this . java.util.Map<java.lang.String,org.solovyev.android.keyboard.AKeyboard> . get ( java.lang.String ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract java.util.List<org.solovyev.android.keyboard.AKeyboard> < AKeyboard > java.util.List<org.solovyev.android.keyboard.AKeyboard> ( @ Nonnull Context org.solovyev.android.keyboard.Context );  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.keyboard.PreviewParams org.solovyev.android.keyboard.PreviewParams ( @ Nonnull Parcel org.solovyev.android.keyboard.Parcel ) { return org.solovyev.android.keyboard.PreviewParams ( org.solovyev.android.keyboard.Parcel ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.keyboard.PreviewParams [] org.solovyev.android.keyboard.PreviewParams[] ( int int ) { return new org.solovyev.android.keyboard.PreviewParams [ int ] ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull Parcel org.solovyev.android.keyboard.Parcel ) { this . int = org.solovyev.android.keyboard.Parcel . readInt ( ) ; this . int = org.solovyev.android.keyboard.Parcel . readInt ( ) ; this . java.lang.String = org.solovyev.android.keyboard.Parcel . readString ( ) ; this . java.lang.Integer = org.solovyev.android.keyboard.Parcel . readInt ( ) ; }  <METHOD_END>
<METHOD_START> private void ( int int , int int , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.Integer java.lang.Integer ) { this . int = int ; this . int = int ; this . java.lang.String = java.lang.String ; this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.keyboard.PreviewParams org.solovyev.android.keyboard.PreviewParams ( int int , int int , @ Nonnull java.lang.String java.lang.String ) { return org.solovyev.android.keyboard.PreviewParams ( new org.solovyev.android.keyboard.PreviewParams ( int , int , java.lang.String , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.keyboard.PreviewParams org.solovyev.android.keyboard.PreviewParams ( int int , int int , @ Nonnull java.lang.Integer java.lang.Integer ) { return org.solovyev.android.keyboard.PreviewParams ( new org.solovyev.android.keyboard.PreviewParams ( int , int , null , java.lang.Integer ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static org.solovyev.android.keyboard.PreviewParams org.solovyev.android.keyboard.PreviewParams ( @ Nonnull Parcel org.solovyev.android.keyboard.Parcel ) { return org.solovyev.android.keyboard.PreviewParams ( new org.solovyev.android.keyboard.PreviewParams ( org.solovyev.android.keyboard.Parcel ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static org.solovyev.android.keyboard.PreviewParams org.solovyev.android.keyboard.PreviewParams ( @ Nonnull org.solovyev.android.keyboard.PreviewParams org.solovyev.android.keyboard.PreviewParams ) { synchronized ( java.util.Map<org.solovyev.android.keyboard.PreviewParams,org.solovyev.android.keyboard.PreviewParams> ) { final org.solovyev.android.keyboard.PreviewParams org.solovyev.android.keyboard.PreviewParams = java.util.Map<org.solovyev.android.keyboard.PreviewParams,org.solovyev.android.keyboard.PreviewParams> . org.solovyev.android.keyboard.PreviewParams ( org.solovyev.android.keyboard.PreviewParams ) ; if ( org.solovyev.android.keyboard.PreviewParams != null ) { synchronized ( org.solovyev.android.keyboard.PreviewParams ) { org.solovyev.android.keyboard.PreviewParams . int = org.solovyev.android.keyboard.PreviewParams . int ; org.solovyev.android.keyboard.PreviewParams . int = org.solovyev.android.keyboard.PreviewParams . int ; } return org.solovyev.android.keyboard.PreviewParams ; } else { java.util.Map<org.solovyev.android.keyboard.PreviewParams,org.solovyev.android.keyboard.PreviewParams> . org.solovyev.android.keyboard.PreviewParams ( org.solovyev.android.keyboard.PreviewParams , org.solovyev.android.keyboard.PreviewParams ) ; return org.solovyev.android.keyboard.PreviewParams ; } } }  <METHOD_END>
<METHOD_START> public int int ( ) { synchronized ( this ) { return int ; } }  <METHOD_END>
<METHOD_START> public int int ( ) { synchronized ( this ) { return int ; } }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Parcel org.solovyev.android.keyboard.Parcel , int int ) { org.solovyev.android.keyboard.Parcel . writeInt ( int ) ; org.solovyev.android.keyboard.Parcel . writeInt ( int ) ; org.solovyev.android.keyboard.Parcel . writeString ( java.lang.String ) ; org.solovyev.android.keyboard.Parcel . writeInt ( java.lang.Integer == null ? NUMBER : java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( ! ( java.lang.Object instanceof org.solovyev.android.keyboard.PreviewParams ) ) return false ; org.solovyev.android.keyboard.PreviewParams org.solovyev.android.keyboard.PreviewParams = ( org.solovyev.android.keyboard.PreviewParams ) java.lang.Object ; if ( java.lang.Integer != null ? ! java.lang.Integer . boolean ( org.solovyev.android.keyboard.PreviewParams . java.lang.Integer ) : org.solovyev.android.keyboard.PreviewParams . java.lang.Integer != null ) return false ; if ( java.lang.String != null ? ! java.lang.String . boolean ( org.solovyev.android.keyboard.PreviewParams . java.lang.String ) : org.solovyev.android.keyboard.PreviewParams . java.lang.String != null ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = java.lang.String != null ? java.lang.String . int ( ) : NUMBER ; int = NUMBER * int + ( java.lang.Integer != null ? java.lang.Integer . int ( ) : NUMBER ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + int + STRING + int + STRING + java.lang.String + '\'' + STRING + java.lang.Integer + '}' ; }  <METHOD_END>
<METHOD_START> public synchronized void void ( @ Nonnull View org.solovyev.android.keyboard.View ) { if ( this . org.solovyev.android.keyboard.View == org.solovyev.android.keyboard.View ) { void ( null ) ; } }  <METHOD_END>
<METHOD_START> public synchronized void void ( @ Nonnull View org.solovyev.android.keyboard.View , @ Nullable final java.lang.Runnable java.lang.Runnable ) { void ( org.solovyev.android.keyboard.View ) ; if ( java.lang.Runnable != null ) { this . java.lang.Runnable = new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { java.lang.Runnable . void ( ) ; if ( int < int[] . int ) { int = int[] [ int ] ; } int ++ ; org.solovyev.android.keyboard.Handler . postDelayed ( this , int ) ; } } ; this . org.solovyev.android.keyboard.Handler . postDelayed ( this . java.lang.Runnable , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { java.lang.Runnable . void ( ) ; if ( int < int[] . int ) { int = int[] [ int ] ; } int ++ ; org.solovyev.android.keyboard.Handler . postDelayed ( this , int ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nullable View org.solovyev.android.keyboard.View ) { this . org.solovyev.android.keyboard.View = org.solovyev.android.keyboard.View ; this . int = NUMBER ; if ( this . java.lang.Runnable != null ) { this . org.solovyev.android.keyboard.Handler . removeCallbacks ( this . java.lang.Runnable ) ; this . java.lang.Runnable = null ; } }  <METHOD_END>
<METHOD_START> protected void ( int int , @ Nonnull java.lang.String java.lang.String ) { this . org.solovyev.android.list.UpdatableViewBuilder<org.solovyev.android.list.TextView> = TextViewBuilder . newInstance ( int , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> protected void ( int int ) { this . org.solovyev.android.list.UpdatableViewBuilder<org.solovyev.android.list.TextView> = TextViewBuilder . newInstance ( int , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public org.solovyev.android.list.TextView org.solovyev.android.list.TextView ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull View org.solovyev.android.list.View ) { return org.solovyev.android.list.TextView ( org.solovyev.android.list.Context , org.solovyev.android.list.UpdatableViewBuilder<org.solovyev.android.list.TextView> . updateView ( org.solovyev.android.list.Context , org.solovyev.android.list.View ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public org.solovyev.android.list.TextView org.solovyev.android.list.TextView ( @ Nonnull Context org.solovyev.android.list.Context ) { return org.solovyev.android.list.TextView ( org.solovyev.android.list.Context , org.solovyev.android.list.UpdatableViewBuilder<org.solovyev.android.list.TextView> . build ( org.solovyev.android.list.Context ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.list.TextView org.solovyev.android.list.TextView ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull TextView org.solovyev.android.list.TextView ) { org.solovyev.android.list.TextView . setText ( java.lang.CharSequence ( org.solovyev.android.list.Context ) ) ; return org.solovyev.android.list.TextView ; }  <METHOD_END>
<METHOD_START> @ Nullable protected abstract java.lang.CharSequence java.lang.CharSequence ( @ Nonnull Context org.solovyev.android.list.Context );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull org.solovyev.android.list.AdapterFilter.Helper<T> < T > org.solovyev.android.list.AdapterFilter.Helper<T> ) { this . org.solovyev.android.list.AdapterFilter.Helper<T> = org.solovyev.android.list.AdapterFilter.Helper<T> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.list.AdapterFilter.FilterResults org.solovyev.android.list.AdapterFilter.FilterResults ( @ Nullable java.lang.CharSequence java.lang.CharSequence ) { final org.solovyev.android.list.AdapterFilter.FilterResults org.solovyev.android.list.AdapterFilter.FilterResults = new org.solovyev.android.list.AdapterFilter.FilterResults ( ) ; final java.util.List<T> < T > java.util.List<T> ; final java.util.List<T> < T > java.util.List<T> ; if ( ( java.lang.CharSequence == null || java.lang.CharSequence . int ( ) == NUMBER ) && ! boolean ( ) ) { java.util.List<T> = java.util.List<T> ( ) ; java.util.List<T> = null ; } else { final JPredicate < T > org.solovyev.android.list.JPredicate<T> = org.solovyev.android.list.JPredicate<T> ( java.lang.CharSequence ) ; synchronized ( org.solovyev.android.list.AdapterFilter.Helper<T> . java.lang.Object ( ) ) { java.util.List<T> = new java.util.ArrayList<T> < T > ( java.util.List<T> ( ) ) ; } java.util.List<T> = new java.util.ArrayList<T> < T > ( java.util.List<T> . int ( ) ) ; for ( T T : java.util.List<T> ) { if ( org.solovyev.android.list.JPredicate<T> . apply ( T ) ) { java.util.List<T> . boolean ( T ) ; } } } org.solovyev.android.list.AdapterFilter.FilterResults . values = java.util.List<T> ; org.solovyev.android.list.AdapterFilter.FilterResults . java.util.List = java.util.List<T> ; org.solovyev.android.list.AdapterFilter.FilterResults . count = java.util.List<T> . int ( ) ; return org.solovyev.android.list.AdapterFilter.FilterResults ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.util.List<T> < T > java.util.List<T> ( ) { java.util.List<T> < T > java.util.List<T> = org.solovyev.android.list.AdapterFilter.Helper<T> . java.util.List<T> ( ) ; if ( java.util.List<T> == null ) { java.util.List<T> = org.solovyev.android.list.AdapterFilter.Helper<T> . java.util.List<T> ( ) ; } return java.util.List<T> ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> protected abstract org.solovyev.android.list.JPredicate<T> < T > org.solovyev.android.list.JPredicate<T> ( @ Nullable java.lang.CharSequence java.lang.CharSequence );  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.CharSequence java.lang.CharSequence , Filter . Filter Filter.FilterResults ) { boolean boolean = false ; synchronized ( org.solovyev.android.list.AdapterFilter.Helper<T> . java.lang.Object ( ) ) { if ( results . values != org.solovyev.android.list.AdapterFilter.Helper<T> . java.util.List<T> ( ) ) { org.solovyev.android.list.AdapterFilter.Helper<T> . void ( ( java.util.List<T> < T > ) results . values ) ; boolean = true ; } if ( ( ( org.solovyev.android.list.AdapterFilter.FilterResults ) Filter.FilterResults ) . java.util.List != org.solovyev.android.list.AdapterFilter.Helper<T> . java.util.List<T> ( ) ) { org.solovyev.android.list.AdapterFilter.Helper<T> . void ( ( java.util.List<T> < T > ) ( ( org.solovyev.android.list.AdapterFilter.FilterResults ) Filter.FilterResults ) . java.util.List ) ; boolean = true ; } } if ( boolean ) { org.solovyev.android.list.AdapterFilter.Helper<T> . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.Object java.lang.Object ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.util.List<T> < T > java.util.List<T> ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.util.List<T> < T > java.util.List<T> );  <METHOD_END>
<METHOD_START> @ Nullable java.util.List<T> < T > java.util.List<T> ( )  <METHOD_END>
<METHOD_START> void void ( @ Nullable java.util.List<T> < T > java.util.List<T> );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static < E > org.solovyev.android.list.LabeledEnum<E> < E > org.solovyev.android.list.LabeledEnum<E> ( @ Nonnull E E , @ Nonnull java.lang.String java.lang.String ) { final org.solovyev.android.list.LabeledEnum<E> < E > org.solovyev.android.list.LabeledEnum<E> = new org.solovyev.android.list.LabeledEnum<E> < E > ( ) ; org.solovyev.android.list.LabeledEnum<E> . E = E ; org.solovyev.android.list.LabeledEnum<E> . java.lang.String = java.lang.String ; return org.solovyev.android.list.LabeledEnum<E> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < E extends java.lang.Enum & Labeled > org.solovyev.android.list.LabeledEnum<E> < E > org.solovyev.android.list.LabeledEnum<E> ( @ Nonnull E E , @ Nonnull Context org.solovyev.android.list.Context ) { return org.solovyev.android.list.LabeledEnum . org.solovyev.android.list.LabeledEnum ( E , org.solovyev.android.list.Context . getString ( E . getCaptionResId ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < E extends java.lang.Enum & Labeled > java.util.List<org.solovyev.android.list.LabeledEnum<E>> < org.solovyev.android.list.LabeledEnum<E> < E > > java.util.List<org.solovyev.android.list.LabeledEnum<E>> ( @ Nonnull java.lang.Class<E> < E > java.lang.Class<E> , @ Nonnull Context org.solovyev.android.list.Context ) { final E [] E[] = java.lang.Class<E> . E[] ( ) ; final java.util.List<org.solovyev.android.list.LabeledEnum<E>> < org.solovyev.android.list.LabeledEnum<E> < E > > java.util.List<org.solovyev.android.list.LabeledEnum<E>> = new java.util.ArrayList<org.solovyev.android.list.LabeledEnum<E>> < org.solovyev.android.list.LabeledEnum<E> < E > > ( E[] . int ) ; for ( E E : E[] ) { java.util.List<org.solovyev.android.list.LabeledEnum<E>> . boolean ( org.solovyev.android.list.LabeledEnum . org.solovyev.android.list.LabeledEnum ( E , org.solovyev.android.list.Context ) ) ; } return java.util.List<org.solovyev.android.list.LabeledEnum<E>> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public E E ( ) { return E ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( ! ( java.lang.Object instanceof org.solovyev.android.list.LabeledEnum ) ) return false ; org.solovyev.android.list.LabeledEnum org.solovyev.android.list.LabeledEnum = ( org.solovyev.android.list.LabeledEnum ) java.lang.Object ; if ( ! E . boolean ( org.solovyev.android.list.LabeledEnum . java.lang.Object ) ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return E . int ( ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.list.Context , int int ) { this( org.solovyev.android.list.Context , int , NUMBER , new java.util.ArrayList<T> < T > ( ) ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.list.Context , int int , int int ) { this( org.solovyev.android.list.Context , int , int , new java.util.ArrayList<T> < T > ( ) ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.list.Context , int int , @ Nonnull T [] T[] ) { this( org.solovyev.android.list.Context , int , NUMBER , java.util.Arrays . java.util.List<T> ( T[] ) ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.list.Context , int int , int int , @ Nonnull T [] T[] ) { this( org.solovyev.android.list.Context , int , int , java.util.Arrays . java.util.List<T> ( T[] ) ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.list.Context , int int , @ Nonnull java.util.List<T> < T > java.util.List<T> ) { this( org.solovyev.android.list.Context , int , NUMBER , java.util.List<T> ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.list.Context , int int , int int , @ Nonnull java.util.List<T> < T > java.util.List<T> ) { this . org.solovyev.android.list.Context = org.solovyev.android.list.Context ; this . org.solovyev.android.list.LayoutInflater = LayoutInflater . from ( org.solovyev.android.list.Context ) ; this . int = this . int = int ; this . java.util.List<T> = java.util.List<T> ; this . int = int ; this . org.solovyev.android.list.ListAdapter<T>.AdapterHelper = new org.solovyev.android.list.ListAdapter<T>.AdapterHelper ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( T T ) { boolean boolean ; synchronized ( java.lang.Object ) { if ( java.util.List<T> != null ) { boolean = java.util.List<T> . boolean ( T ) ; } else { boolean = java.util.List<T> . boolean ( T ) ; } void ( boolean ) ; } void ( boolean ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( boolean boolean ) { if ( boolean ) { synchronized ( java.lang.Object ) { void ( true ) ; } } void ( true ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( ) { void ( true ) ; }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { if( boolean && boolean ) { void ( ) ; void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { assert java.lang.Thread . boolean ( java.lang.Object ) ; final java.util.Comparator<? super T> < ? super T > java.util.Comparator<? super T> = java.util.Comparator<? super T> ( ) ; if ( java.util.Comparator<> != null ) { void ( java.util.Comparator<> , false ) ; } }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { assert ! java.lang.Thread . boolean ( java.lang.Object ) ; if ( boolean && boolean ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.util.Collection<? extends T> < ? extends T > java.util.Collection<? extends T> ) { boolean boolean ; synchronized ( java.lang.Object ) { if ( java.util.List<T> != null ) { boolean = java.util.List<T> . boolean ( java.util.Collection<> ) ; } else { boolean = java.util.List<T> . boolean ( java.util.Collection<> ) ; } void ( boolean ) ; } void ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( T ... T[] ) { boolean boolean ; synchronized ( java.lang.Object ) { if ( java.util.List<T> != null ) { boolean = java.util.Collections . boolean ( java.util.List<T> , T[] ) ; } else { boolean = java.util.Collections . boolean ( java.util.List<T> , T[] ) ; } void ( boolean ) ; } void ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( T T , int int ) { synchronized ( java.lang.Object ) { if ( java.util.List<T> != null ) { java.util.List<T> . void ( int , T ) ; } else { java.util.List<T> . void ( int , T ) ; } void ( true ) ; } void ( true ) ; }  <METHOD_END>
<METHOD_START> public void void ( T T ) { boolean boolean ; synchronized ( java.lang.Object ) { if ( java.util.List<T> != null ) { boolean = java.util.List<T> . boolean ( T ) ; } else { boolean = java.util.List<T> . boolean ( T ) ; } void ( boolean ) ; } void ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { boolean boolean ; synchronized ( java.lang.Object ) { if ( java.util.List<T> != null ) { boolean = java.util.List<T> . T ( int ) != null ; } else { boolean = java.util.List<T> . T ( int ) != null ; } void ( boolean ) ; } void ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { boolean boolean ; synchronized ( java.lang.Object ) { if ( java.util.List<T> != null ) { boolean = ! java.util.List<T> . boolean ( ) ; java.util.List<T> . void ( ) ; } else { boolean = ! java.util.List<T> . boolean ( ) ; java.util.List<T> . void ( ) ; } void ( boolean ) ; } void ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.Comparator<? super T> < ? super T > java.util.Comparator<? super T> ) { void ( java.util.Comparator<> , true ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Comparator<? super T> < ? super T > java.util.Comparator<? super T> , boolean boolean ) { synchronized ( java.lang.Object ) { java.util.Collections . void ( java.util.List<T> , java.util.Comparator<> ) ; if ( java.util.List<T> != null ) { java.util.Collections . void ( java.util.List<T> , java.util.Comparator<> ) ; } } if ( boolean ) { void ( true ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. notifyDataSetChanged ( ) ; boolean = true ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.list.Context org.solovyev.android.list.Context ( ) { return org.solovyev.android.list.Context ; }  <METHOD_END>
<METHOD_START> public int int ( ) { synchronized ( java.lang.Object ) { return java.util.List<T> . int ( ) ; } }  <METHOD_END>
<METHOD_START> public T T ( int int ) { synchronized ( java.lang.Object ) { return java.util.List<T> . T ( int ) ; } }  <METHOD_END>
<METHOD_START> public int int ( T T ) { synchronized ( java.lang.Object ) { return java.util.List<T> . int ( T ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nonnull T T ) { synchronized ( java.lang.Object ) { return this . java.util.List<T> . boolean ( T ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( @ Nonnull T T ) { return java.util.List<T> ( ) . boolean ( T ) ; }  <METHOD_END>
<METHOD_START> public long long ( int int ) { return int ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.list.View org.solovyev.android.list.View ( int int , View org.solovyev.android.list.View , ViewGroup org.solovyev.android.list.ViewGroup ) { return org.solovyev.android.list.View ( int , org.solovyev.android.list.View , org.solovyev.android.list.ViewGroup , int ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.lang.Runnable java.lang.Runnable ) { final boolean boolean ; synchronized ( java.lang.Object ) { boolean = boolean ( ) ; try { boolean = false ; void ( false ) ; java.lang.Runnable . void ( ) ; } finally { void ( boolean ) ; boolean = true ; } void ( true ) ; } if ( boolean ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> private org.solovyev.android.list.View org.solovyev.android.list.View ( int int , @ Nullable View org.solovyev.android.list.View , ViewGroup org.solovyev.android.list.ViewGroup , int int ) { final View org.solovyev.android.list.View ; if ( org.solovyev.android.list.View != null ) { org.solovyev.android.list.View = org.solovyev.android.list.View ; } else { org.solovyev.android.list.View = org.solovyev.android.list.LayoutInflater . inflate ( int , org.solovyev.android.list.ViewGroup , false ) ; } TextView org.solovyev.android.list.TextView ; try { if ( int == NUMBER ) { org.solovyev.android.list.TextView = ( TextView ) org.solovyev.android.list.View ; } else { org.solovyev.android.list.TextView = ( TextView ) org.solovyev.android.list.View . findViewById ( int ) ; } } catch ( java.lang.ClassCastException java.lang.ClassCastException ) { Log . e ( STRING , STRING ) ; throw new java.lang.IllegalStateException ( STRING , java.lang.ClassCastException ) ; } T T = T ( int ) ; if ( T instanceof java.lang.CharSequence ) { org.solovyev.android.list.TextView . setText ( ( java.lang.CharSequence ) T ) ; } else { org.solovyev.android.list.TextView . setText ( T . java.lang.String ( ) ) ; } return org.solovyev.android.list.View ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.list.View org.solovyev.android.list.View ( int int , View org.solovyev.android.list.View , ViewGroup org.solovyev.android.list.ViewGroup ) { return org.solovyev.android.list.View ( int , org.solovyev.android.list.View , org.solovyev.android.list.ViewGroup , int ) ; }  <METHOD_END>
<METHOD_START> public static org.solovyev.android.list.ListAdapter<java.lang.CharSequence> < java.lang.CharSequence > org.solovyev.android.list.ListAdapter<java.lang.CharSequence> ( Context org.solovyev.android.list.Context , int int , int int ) { java.lang.CharSequence [] java.lang.CharSequence[] = org.solovyev.android.list.Context . getResources ( ) . getTextArray ( int ) ; return new org.solovyev.android.list.ListAdapter<java.lang.CharSequence> < java.lang.CharSequence > ( org.solovyev.android.list.Context , int , java.lang.CharSequence[] ) ; }  <METHOD_END>
<METHOD_START> public final org.solovyev.android.list.Filter org.solovyev.android.list.Filter ( ) { if ( org.solovyev.android.list.Filter == null ) { org.solovyev.android.list.Filter = org.solovyev.android.list.Filter ( ) ; } return org.solovyev.android.list.Filter ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.list.Filter org.solovyev.android.list.Filter ( ) { return new PrefixAdapterFilter < T > ( org.solovyev.android.list.ListAdapter<T>.AdapterHelper ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected java.util.List<T> < T > java.util.List<T> ( ) { synchronized ( java.lang.Object ) { return java.util.List<T> ( java.util.List<T> ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull protected java.util.List<T> < T > java.util.List<T> ( ) { synchronized ( java.lang.Object ) { return java.util.List<T> ( java.util.List<T> == null ? java.util.List<T> : java.util.List<T> ) ; } }  <METHOD_END>
<METHOD_START> @ Nullable protected java.util.Comparator<? super T> < ? super T > java.util.Comparator<? super T> ( ) { return null ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Bundle org.solovyev.android.list.Bundle ) { if ( java.lang.String != null ) { org.solovyev.android.list.Bundle . putString ( java.lang.String , java.lang.String . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Bundle org.solovyev.android.list.Bundle ) { java.lang.String = org.solovyev.android.list.Bundle . getString ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.list.ListAdapter<T>.AdapterHelper org.solovyev.android.list.ListAdapter<T>.AdapterHelper ( ) { return org.solovyev.android.list.ListAdapter<T>.AdapterHelper ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.String java.lang.String ) { void ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nullable java.lang.String java.lang.String ) { if ( java.util.Objects . areEqual ( this . java.lang.String , java.lang.String ) ) { return true ; } else { if ( Strings . isEmpty ( this . java.lang.String ) && Strings . isEmpty ( java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.String java.lang.String , @ Nullable Filter . Filter Filter.FilterListener ) { if ( ! boolean ( java.lang.String ) ) { this . java.lang.String = java.lang.String ; this . org.solovyev.android.list.Filter ( ) . filter ( java.lang.String , Filter.FilterListener ) ; } else { if ( Filter.FilterListener != null ) { Filter.FilterListener . onFilterComplete ( int ( ) ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) { this . org.solovyev.android.list.Filter ( ) . filter ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.Object java.lang.Object ( ) { return java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( ) { return java.util.List<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.util.List<T> < T > java.util.List<T> ) { org.solovyev.android.list.ListAdapter .this . java.util.List<T> = java.util.List<T> ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( ) { return java.util.List<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable java.util.List<T> < T > java.util.List<T> ) { org.solovyev.android.list.ListAdapter .this . java.util.List<T> = java.util.List<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( boolean ) { org.solovyev.android.list.ListAdapter .this . void ( ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < E extends java.lang.Enum & Labeled > org.solovyev.android.list.ListAdapter<org.solovyev.android.list.LabeledEnum<E>> < LabeledEnum < E > > org.solovyev.android.list.ListAdapter<org.solovyev.android.list.LabeledEnum<E>> ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull java.lang.Class<E> < E > java.lang.Class<E> ) { final java.util.List<org.solovyev.android.list.LabeledEnum<E>> < LabeledEnum < E > > java.util.List<org.solovyev.android.list.LabeledEnum<E>> = LabeledEnum . toLabeledEnums ( java.lang.Class<E> , org.solovyev.android.list.Context ) ; return org.solovyev.android.list.ListAdapter ( org.solovyev.android.list.Context , java.util.List<org.solovyev.android.list.LabeledEnum<E>> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T > org.solovyev.android.list.ListAdapter<T> < T > org.solovyev.android.list.ListAdapter<T> ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull java.util.List<T> < T > java.util.List<T> ) { final ListAdapter < T > org.solovyev.android.list.ListAdapter<T> = new ListAdapter < T > ( org.solovyev.android.list.Context , android . R . layout . simple_spinner_item , java.util.List<T> ) ; org.solovyev.android.list.ListAdapter<T> . setDropDownViewResource ( android . R . layout . simple_spinner_dropdown_item ) ; return org.solovyev.android.list.ListAdapter<T> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.list.Animation org.solovyev.android.list.Animation ( ) { return new TranslateAnimation ( Animation . RELATIVE_TO_SELF , NUMBER , Animation . RELATIVE_TO_SELF , - NUMBER , Animation . RELATIVE_TO_SELF , NUMBER , Animation . RELATIVE_TO_SELF , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.list.Animation org.solovyev.android.list.Animation ( ) { return new TranslateAnimation ( Animation . RELATIVE_TO_SELF , NUMBER , Animation . RELATIVE_TO_SELF , NUMBER , Animation . RELATIVE_TO_SELF , NUMBER , Animation . RELATIVE_TO_SELF , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.list.Animation org.solovyev.android.list.Animation ( ) { return new TranslateAnimation ( Animation . RELATIVE_TO_SELF , NUMBER , Animation . RELATIVE_TO_SELF , NUMBER , Animation . RELATIVE_TO_SELF , NUMBER , Animation . RELATIVE_TO_SELF , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public abstract org.solovyev.android.list.Animation org.solovyev.android.list.Animation ( )  <METHOD_END>
<METHOD_START> public void ( @ Nonnull ListView org.solovyev.android.list.ListView , @ Nonnull org.solovyev.android.list.ListAnimator.AnimationType org.solovyev.android.list.ListAnimator.AnimationType , @ Nullable java.lang.Runnable java.lang.Runnable ) { this . org.solovyev.android.list.ListView = org.solovyev.android.list.ListView ; this . org.solovyev.android.list.ListAnimator.AnimationType = org.solovyev.android.list.ListAnimator.AnimationType ; this . java.lang.Runnable = java.lang.Runnable ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final AnimationSet org.solovyev.android.list.AnimationSet = new AnimationSet ( false ) ; final AlphaAnimation org.solovyev.android.list.AlphaAnimation = new AlphaAnimation ( NUMBER , NUMBER ) ; org.solovyev.android.list.AlphaAnimation . setDuration ( NUMBER ) ; org.solovyev.android.list.AnimationSet . addAnimation ( org.solovyev.android.list.AlphaAnimation ) ; final Animation org.solovyev.android.list.Animation = org.solovyev.android.list.ListAnimator.AnimationType . org.solovyev.android.list.Animation ( ) ; org.solovyev.android.list.Animation . setDuration ( NUMBER ) ; org.solovyev.android.list.AnimationSet . addAnimation ( org.solovyev.android.list.Animation ) ; org.solovyev.android.list.AnimationSet . setRepeatCount ( NUMBER ) ; if ( java.lang.Runnable != null ) { org.solovyev.android.list.AnimationSet . setAnimationListener ( new Animation . Animation ( ) { @ java.lang.Override public void void ( Animation org.solovyev.android.list.Animation ) {				} @ java.lang.Override public void void ( Animation org.solovyev.android.list.Animation ) { java.lang.Runnable . void ( ) ; } @ java.lang.Override public void void ( Animation org.solovyev.android.list.Animation ) {				} } ) ; } org.solovyev.android.list.ListView . startAnimation ( org.solovyev.android.list.AnimationSet ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.list.Animation ) {				}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.list.Animation ) { java.lang.Runnable . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.list.Animation ) {				}  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull java.util.List<? extends LI> < ? extends LI > java.util.List<? extends LI> ) { super( org.solovyev.android.list.Context , NUMBER , NUMBER , java.util.List<> ( java.util.List<> ) ); }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Nonnull private static < LI > java.util.List<LI> < LI > java.util.List<LI> ( java.util.List<? extends LI> < ? extends LI > java.util.List<? extends LI> ) { return ( java.util.List<LI> < LI > ) java.util.List<> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < LI extends org.solovyev.android.list.ListItem > org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> ( @ Nonnull final ListActivity org.solovyev.android.list.ListActivity , @ Nonnull java.util.List<? extends LI> < ? extends LI > java.util.List<? extends LI> ) { final org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> = org.solovyev.android.list.ListItemAdapter ( org.solovyev.android.list.ListActivity , java.util.List<> ) ; void ( org.solovyev.android.list.ListActivity , org.solovyev.android.list.ListItemAdapter<LI> ) ; return org.solovyev.android.list.ListItemAdapter<LI> ; }  <METHOD_END>
<METHOD_START> public static < LI extends org.solovyev.android.list.ListItem > void void ( @ Nonnull ListActivity org.solovyev.android.list.ListActivity , @ Nonnull org.solovyev.android.list.ListItemAdapter<? extends LI> < ? extends LI > org.solovyev.android.list.ListItemAdapter<? extends LI> ) { org.solovyev.android.list.ListActivity . setListAdapter ( org.solovyev.android.list.ListItemAdapter<> ) ; void ( org.solovyev.android.list.ListActivity . getListView ( ) , org.solovyev.android.list.ListItemAdapter<> , org.solovyev.android.list.ListActivity ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < LI extends org.solovyev.android.list.ListItem > org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> ( @ Nonnull final ListFragment org.solovyev.android.list.ListFragment , @ Nonnull java.util.List<? extends LI> < ? extends LI > java.util.List<? extends LI> ) { final org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> = org.solovyev.android.list.ListItemAdapter ( org.solovyev.android.list.ListFragment . getActivity ( ) , java.util.List<> ) ; void ( org.solovyev.android.list.ListFragment , org.solovyev.android.list.ListItemAdapter<LI> ) ; return org.solovyev.android.list.ListItemAdapter<LI> ; }  <METHOD_END>
<METHOD_START> public static < LI extends org.solovyev.android.list.ListItem > void void ( @ Nonnull ListFragment org.solovyev.android.list.ListFragment , @ Nonnull org.solovyev.android.list.ListItemAdapter<? extends LI> < ? extends LI > org.solovyev.android.list.ListItemAdapter<? extends LI> ) { org.solovyev.android.list.ListFragment . setListAdapter ( org.solovyev.android.list.ListItemAdapter<> ) ; void ( org.solovyev.android.list.ListFragment . getListView ( ) , org.solovyev.android.list.ListItemAdapter<> , org.solovyev.android.list.ListFragment . getActivity ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < LI extends org.solovyev.android.list.ListItem > org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> ( @ Nonnull final ListView org.solovyev.android.list.ListView , @ Nonnull java.util.List<? extends LI> < ? extends LI > java.util.List<? extends LI> , @ Nonnull Context org.solovyev.android.list.Context ) { final org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> = org.solovyev.android.list.ListItemAdapter ( org.solovyev.android.list.Context , java.util.List<> ) ; void ( org.solovyev.android.list.ListView , org.solovyev.android.list.ListItemAdapter<LI> , org.solovyev.android.list.Context ) ; return org.solovyev.android.list.ListItemAdapter<LI> ; }  <METHOD_END>
<METHOD_START> public static < LI extends org.solovyev.android.list.ListItem > void void ( @ Nonnull ListView org.solovyev.android.list.ListView , @ Nonnull org.solovyev.android.list.ListItemAdapter<? extends LI> < ? extends LI > org.solovyev.android.list.ListItemAdapter<? extends LI> , @ Nonnull Context org.solovyev.android.list.Context ) { org.solovyev.android.list.ListView . setAdapter ( org.solovyev.android.list.ListItemAdapter<> ) ; void ( org.solovyev.android.list.ListView , org.solovyev.android.list.ListItemAdapter<> , org.solovyev.android.list.Context ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < LI extends org.solovyev.android.list.ListItem > org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> ( @ Nonnull final android . android . android android.app.ListFragment , @ Nonnull java.util.List<? extends LI> < ? extends LI > java.util.List<? extends LI> ) { final org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> = org.solovyev.android.list.ListItemAdapter ( android.app.ListFragment . getActivity ( ) , java.util.List<> ) ; void ( android.app.ListFragment , org.solovyev.android.list.ListItemAdapter<LI> ) ; return org.solovyev.android.list.ListItemAdapter<LI> ; }  <METHOD_END>
<METHOD_START> public static < LI extends org.solovyev.android.list.ListItem > void void ( @ Nonnull android . android . android android.app.ListFragment , @ Nonnull org.solovyev.android.list.ListItemAdapter<? extends LI> < ? extends LI > org.solovyev.android.list.ListItemAdapter<? extends LI> ) { android.app.ListFragment . setListAdapter ( org.solovyev.android.list.ListItemAdapter<> ) ; void ( android.app.ListFragment . getListView ( ) , org.solovyev.android.list.ListItemAdapter<> , android.app.ListFragment . getActivity ( ) ) ; }  <METHOD_END>
<METHOD_START> private static < LI extends org.solovyev.android.list.ListItem > void void ( @ Nonnull final ListView org.solovyev.android.list.ListView , @ Nonnull final org.solovyev.android.list.ListItemAdapter<? extends LI> < ? extends LI > org.solovyev.android.list.ListItemAdapter<? extends LI> , @ Nonnull final Context org.solovyev.android.list.Context ) { org.solovyev.android.list.ListView . setOnItemClickListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( AdapterView < ? > org.solovyev.android.list.AdapterView<?> , View org.solovyev.android.list.View , int int , long long ) { final ListItem org.solovyev.android.list.ListItem = ( ListItem ) org.solovyev.android.list.ListView . getItemAtPosition ( int ) ; ListItem . ListItem ListItem.OnClickAction = org.solovyev.android.list.ListItem . getOnClickAction ( ) ; if ( ListItem.OnClickAction != null ) { ListItem.OnClickAction . onClick ( org.solovyev.android.list.Context , org.solovyev.android.list.ListItemAdapter<> ) ; } } } ) ; org.solovyev.android.list.ListView . setOnItemLongClickListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public boolean boolean ( AdapterView < ? > org.solovyev.android.list.AdapterView<?> , View org.solovyev.android.list.View , int int , long long ) { final ListItem org.solovyev.android.list.ListItem = ( ListItem ) org.solovyev.android.list.ListView . getItemAtPosition ( int ) ; ListItem . ListItem ListItem.OnClickAction = org.solovyev.android.list.ListItem . getOnLongClickAction ( ) ; if ( ListItem.OnClickAction != null ) { ListItem.OnClickAction . onClick ( org.solovyev.android.list.Context , org.solovyev.android.list.ListItemAdapter<> ) ; return true ; } else { return false ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > org.solovyev.android.list.AdapterView<?> , View org.solovyev.android.list.View , int int , long long ) { final ListItem org.solovyev.android.list.ListItem = ( ListItem ) org.solovyev.android.list.ListView . getItemAtPosition ( int ) ; ListItem . ListItem ListItem.OnClickAction = org.solovyev.android.list.ListItem . getOnClickAction ( ) ; if ( ListItem.OnClickAction != null ) { ListItem.OnClickAction . onClick ( org.solovyev.android.list.Context , org.solovyev.android.list.ListItemAdapter<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( AdapterView < ? > org.solovyev.android.list.AdapterView<?> , View org.solovyev.android.list.View , int int , long long ) { final ListItem org.solovyev.android.list.ListItem = ( ListItem ) org.solovyev.android.list.ListView . getItemAtPosition ( int ) ; ListItem . ListItem ListItem.OnClickAction = org.solovyev.android.list.ListItem . getOnLongClickAction ( ) ; if ( ListItem.OnClickAction != null ) { ListItem.OnClickAction . onClick ( org.solovyev.android.list.Context , org.solovyev.android.list.ListItemAdapter<> ) ; return true ; } else { return false ; } }  <METHOD_END>
<METHOD_START> @ Nonnull public static < LI extends org.solovyev.android.list.ListItem > org.solovyev.android.list.ListItemAdapter<LI> < LI > org.solovyev.android.list.ListItemAdapter<LI> ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull java.util.List<? extends LI> < ? extends LI > java.util.List<? extends LI> ) { return new org.solovyev.android.list.ListItemAdapter<LI> < LI > ( org.solovyev.android.list.Context , java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.list.View org.solovyev.android.list.View ( int int , View org.solovyev.android.list.View , ViewGroup org.solovyev.android.list.ViewGroup ) { final ListItem org.solovyev.android.list.ListItem = getItem ( int ) ; if ( org.solovyev.android.list.View == null ) { return org.solovyev.android.list.ListItem . build ( getContext ( ) ) ; } else { return org.solovyev.android.list.ListItem . updateView ( getContext ( ) , org.solovyev.android.list.View ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.list.View org.solovyev.android.list.View ( int int , View org.solovyev.android.list.View , ViewGroup org.solovyev.android.list.ViewGroup ) { return org.solovyev.android.list.View ( int , org.solovyev.android.list.View , org.solovyev.android.list.ViewGroup ) ; }  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.list.ListItem.OnClickAction org.solovyev.android.list.ListItem.OnClickAction ( )  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.list.ListItem.OnClickAction org.solovyev.android.list.ListItem.OnClickAction ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull ListAdapter < ? extends org.solovyev.android.list.ListItem > org.solovyev.android.list.ListAdapter<? extends org.solovyev.android.list.ListItem> );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull T T , @ Nonnull ListAdapter < ? extends ListItem > org.solovyev.android.list.ListAdapter<? extends org.solovyev.android.list.ListItem> ) { this . T = T ; this . org.solovyev.android.list.ListAdapter<? extends org.solovyev.android.list.ListItem> = org.solovyev.android.list.ListAdapter<> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public T T ( ) { return this . T ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.list.ListAdapter<? extends org.solovyev.android.list.ListItem> < ? extends ListItem > org.solovyev.android.list.ListAdapter<? extends org.solovyev.android.list.ListItem> ( ) { return this . org.solovyev.android.list.ListAdapter<> ; }  <METHOD_END>
<METHOD_START> @ Nonnull T T ( )  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.list.ListAdapter<? extends org.solovyev.android.list.ListItem> < ? extends ListItem > org.solovyev.android.list.ListAdapter<? extends org.solovyev.android.list.ListItem> ( )  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull java.util.List<? extends org.solovyev.android.list.LabeledMenuItem<org.solovyev.android.list.ListItemOnClickData<T>>> < ? extends LabeledMenuItem < ListItemOnClickData < T > > > java.util.List<? extends org.solovyev.android.list.LabeledMenuItem<org.solovyev.android.list.ListItemOnClickData<T>>> , @ Nonnull java.lang.String java.lang.String ) { this . java.util.List<? extends org.solovyev.android.list.LabeledMenuItem<org.solovyev.android.list.ListItemOnClickData<T>>> = java.util.List<> ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull ListAdapter < ? extends ListItem > org.solovyev.android.list.ListAdapter<? extends org.solovyev.android.list.ListItem> ) { if ( ! java.util.List<> . boolean ( ) ) { ContextMenuBuilder . newInstance ( ( FragmentActivity ) org.solovyev.android.list.Context , java.lang.String , ListContextMenu . newInstance ( java.util.List<> ) ) . build ( new ListItemOnClickDataImpl < T > ( T ( ) , org.solovyev.android.list.ListAdapter<> ) ) . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract T T ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.list.JPredicate<T> < T > org.solovyev.android.list.JPredicate<T> ( @ Nullable java.lang.CharSequence java.lang.CharSequence ) { return new PrefixFilter < T > ( java.lang.CharSequence == null ? STRING : java.lang.CharSequence . java.lang.String ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Helper < T > org.solovyev.android.list.Helper<T> ) { super( org.solovyev.android.list.Helper<T> ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nullable T T ) { boolean boolean = false ; if ( T != null ) { final java.lang.String java.lang.String = T . java.lang.String ( ) . java.lang.String ( ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { boolean = true ; } else { final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( java.lang.String . boolean ( java.lang.String ) ) { boolean = true ; break; } } } } return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nullable java.lang.Object java.lang.Object ) { if ( java.lang.Object == this ) { return true ; } if ( java.lang.Object instanceof org.solovyev.android.list.PrefixFilter ) { final org.solovyev.android.list.PrefixFilter org.solovyev.android.list.PrefixFilter = ( org.solovyev.android.list.PrefixFilter ) java.lang.Object ; if ( this . java.lang.String . boolean ( org.solovyev.android.list.PrefixFilter . java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.lang.String . int ( ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.util.List<? extends org.solovyev.android.list.LabeledMenuItem<org.solovyev.android.list.ListItemOnClickData<T>>> < ? extends LabeledMenuItem < ListItemOnClickData < T > > > java.util.List<? extends org.solovyev.android.list.LabeledMenuItem<org.solovyev.android.list.ListItemOnClickData<T>>> , @ Nonnull T T , @ Nonnull java.lang.String java.lang.String ) { super( java.util.List<> , java.lang.String ); this . T = T ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected T T ( ) { return this . T ; }  <METHOD_END>
<METHOD_START> protected void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull Context org.solovyev.android.menu.Context ) { return org.solovyev.android.menu.Context . getString ( int ) ; }  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull Activity org.solovyev.android.menu.Activity , @ Nonnull M M );  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull Activity org.solovyev.android.menu.Activity , @ Nonnull M M );  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull Activity org.solovyev.android.menu.Activity , @ Nonnull MI MI );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull T T , @ Nonnull Context org.solovyev.android.menu.Context );  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.menu.MenuHelper<org.solovyev.android.menu.Menu,org.solovyev.android.menu.MenuItem> < Menu , MenuItem > org.solovyev.android.menu.MenuHelper<org.solovyev.android.menu.Menu,org.solovyev.android.menu.MenuItem> ( ) { return org.solovyev.android.menu.AndroidMenuHelper ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( @ Nonnull Menu org.solovyev.android.menu.Menu ) { return org.solovyev.android.menu.Menu . size ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.menu.MenuItem org.solovyev.android.menu.MenuItem ( @ Nonnull Menu org.solovyev.android.menu.Menu , int int , int int , int int , @ Nonnull java.lang.String java.lang.String ) { return org.solovyev.android.menu.Menu . add ( int , int , int , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull final MenuItem org.solovyev.android.menu.MenuItem , @ Nonnull final AMenuItem < MenuItem > org.solovyev.android.menu.AMenuItem<org.solovyev.android.menu.MenuItem> , @ Nonnull final Activity org.solovyev.android.menu.Activity ) { org.solovyev.android.menu.MenuItem . setOnMenuItemClickListener ( new MenuItem . MenuItem ( ) { @ java.lang.Override public boolean boolean ( MenuItem org.solovyev.android.menu.MenuItem ) { org.solovyev.android.menu.AMenuItem<org.solovyev.android.menu.MenuItem> . onClick ( org.solovyev.android.menu.MenuItem , org.solovyev.android.menu.Activity ) ; return true ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem org.solovyev.android.menu.MenuItem ) { org.solovyev.android.menu.AMenuItem<org.solovyev.android.menu.MenuItem> . onClick ( org.solovyev.android.menu.MenuItem , org.solovyev.android.menu.Activity ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Menu org.solovyev.android.menu.Menu , @ Nonnull java.lang.Integer java.lang.Integer ) { org.solovyev.android.menu.Menu . removeItem ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Activity org.solovyev.android.menu.Activity , int int , @ Nonnull Menu org.solovyev.android.menu.Menu ) { org.solovyev.android.menu.Activity . getMenuInflater ( ) . inflate ( int , org.solovyev.android.menu.Menu ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.Integer java.lang.Integer ( @ Nonnull MenuItem org.solovyev.android.menu.MenuItem ) { return org.solovyev.android.menu.MenuItem . getItemId ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T extends java.lang.Enum & LabeledMenuItem < D > , D > org.solovyev.android.menu.ContextMenuBuilder<T,D> < T , D > org.solovyev.android.menu.ContextMenuBuilder<T,D> ( @ Nonnull FragmentActivity org.solovyev.android.menu.FragmentActivity , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.Class<T> < T > java.lang.Class<T> ) { return new org.solovyev.android.menu.ContextMenuBuilder<T,D> < T , D > ( org.solovyev.android.menu.FragmentActivity , java.lang.String , EnumContextMenu .< T , D > newInstance ( java.lang.Class<T> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T extends org.solovyev.android.menu.LabeledMenuItem<D> < D > , D > org.solovyev.android.menu.ContextMenuBuilder<T,D> < T , D > org.solovyev.android.menu.ContextMenuBuilder<T,D> ( @ Nonnull FragmentActivity org.solovyev.android.menu.FragmentActivity , @ Nonnull java.lang.String java.lang.String , @ Nonnull ContextMenu < T , D > org.solovyev.android.menu.ContextMenu<T,D> ) { return new org.solovyev.android.menu.ContextMenuBuilder<T,D> < T , D > ( org.solovyev.android.menu.FragmentActivity , java.lang.String , org.solovyev.android.menu.ContextMenu<T,D> ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull FragmentActivity org.solovyev.android.menu.FragmentActivity , @ Nonnull java.lang.String java.lang.String , @ Nonnull ContextMenu < T , D > org.solovyev.android.menu.ContextMenu<T,D> ) { this . org.solovyev.android.menu.FragmentActivity = org.solovyev.android.menu.FragmentActivity ; this . java.lang.String = java.lang.String ; this . AlertDialog.Builder = new AlertDialog . AlertDialog ( org.solovyev.android.menu.FragmentActivity ) ; this . org.solovyev.android.menu.ContextMenu<T,D> = org.solovyev.android.menu.ContextMenu<T,D> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public AlertDialog . AlertDialog.Builder AlertDialog.Builder ( ) { return AlertDialog.Builder ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.menu.DialogFragmentShower org.solovyev.android.menu.DialogFragmentShower ( @ Nonnull final D D ) { AlertDialog.Builder . setItems ( org.solovyev.android.menu.ContextMenu<T,D> . getMenuCaptions ( org.solovyev.android.menu.FragmentActivity ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface org.solovyev.android.menu.DialogInterface , int int ) { final LabeledMenuItem < D > org.solovyev.android.menu.LabeledMenuItem<D> = org.solovyev.android.menu.ContextMenu<T,D> . itemAt ( int ) ; if ( org.solovyev.android.menu.LabeledMenuItem<D> != null ) { org.solovyev.android.menu.LabeledMenuItem<D> . onClick ( D , org.solovyev.android.menu.FragmentActivity ) ; } } } ) ; return new DialogFragmentShower ( org.solovyev.android.menu.FragmentActivity , java.lang.String , AlertDialog.Builder ) ; }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface org.solovyev.android.menu.DialogInterface , int int ) { final LabeledMenuItem < D > org.solovyev.android.menu.LabeledMenuItem<D> = org.solovyev.android.menu.ContextMenu<T,D> . itemAt ( int ) ; if ( org.solovyev.android.menu.LabeledMenuItem<D> != null ) { org.solovyev.android.menu.LabeledMenuItem<D> . onClick ( D , org.solovyev.android.menu.FragmentActivity ) ; } }  <METHOD_END>
<METHOD_START> @ Nullable MI MI ( int int );  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.CharSequence [] java.lang.CharSequence[] ( @ Nonnull final Context org.solovyev.android.menu.Context );  <METHOD_END>
<METHOD_START> @ Nonnull public static < T extends java.lang.Enum & LabeledMenuItem < D > , D > org.solovyev.android.menu.ContextMenu<T,D> < T , D > org.solovyev.android.menu.ContextMenu<T,D> ( @ Nonnull java.lang.Class<T> < T > java.lang.Class<T> ) { return new org.solovyev.android.menu.EnumContextMenu<T,D> < T , D > ( java.lang.Class<T> ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.Class<T> < T > java.lang.Class<T> ) { this . org.solovyev.android.menu.ContextMenu<T,D> = ListContextMenu . newInstance ( java.lang.Class<T> . T[] ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( int int ) { return this . org.solovyev.android.menu.ContextMenu<T,D> . itemAt ( int ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.CharSequence [] java.lang.CharSequence[] ( @ Nonnull final Context org.solovyev.android.menu.Context ) { return this . org.solovyev.android.menu.ContextMenu<T,D> . getMenuCaptions ( org.solovyev.android.menu.Context ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.Integer java.lang.Integer ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( @ Nonnull Context org.solovyev.android.menu.Context );  <METHOD_END>
<METHOD_START> private void ( @ Nullable JPredicate < AMenuItem < MI > > org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> ) { this( int , org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> , org.solovyev.android.menu.MenuHelper<M,MI> ); }  <METHOD_END>
<METHOD_START> private void ( int int , @ Nullable JPredicate < AMenuItem < MI > > org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> ) { this . int = int ; this . org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> = org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> ; this . org.solovyev.android.menu.MenuHelper<M,MI> = org.solovyev.android.menu.MenuHelper<M,MI> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> ( @ Nonnull java.util.List<? extends org.solovyev.android.menu.LabeledMenuItem<MI>> < ? extends LabeledMenuItem < MI > > java.util.List<? extends org.solovyev.android.menu.LabeledMenuItem<MI>> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> ) { final org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ListActivityMenu<M,MI> = new org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > ( null , org.solovyev.android.menu.MenuHelper<M,MI> ) ; for ( LabeledMenuItem < MI > org.solovyev.android.menu.LabeledMenuItem<MI> : java.util.List<> ) { org.solovyev.android.menu.ListActivityMenu<M,MI> . java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> . add ( new MenuItemWrapper < MI > ( org.solovyev.android.menu.LabeledMenuItem<MI> ) ) ; } return org.solovyev.android.menu.ListActivityMenu<M,MI> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> ( @ Nonnull java.util.List<? extends org.solovyev.android.menu.LabeledMenuItem<MI>> < ? extends LabeledMenuItem < MI > > java.util.List<? extends org.solovyev.android.menu.LabeledMenuItem<MI>> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> , @ Nonnull JPredicate < AMenuItem < MI > > org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> ) { final org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ListActivityMenu<M,MI> = new org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > ( org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> , org.solovyev.android.menu.MenuHelper<M,MI> ) ; for ( LabeledMenuItem < MI > org.solovyev.android.menu.LabeledMenuItem<MI> : java.util.List<> ) { org.solovyev.android.menu.ListActivityMenu<M,MI> . java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> . add ( new MenuItemWrapper < MI > ( org.solovyev.android.menu.LabeledMenuItem<MI> ) ) ; } return org.solovyev.android.menu.ListActivityMenu<M,MI> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < M , MI , E extends java.lang.Enum & LabeledMenuItem < MI > > org.solovyev.android.menu.ActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> ( @ Nonnull java.lang.Class<E> < E > java.lang.Class<E> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> , @ Nonnull JPredicate < AMenuItem < MI > > org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> ) { return org.solovyev.android.menu.ActivityMenu ( java.util.List<E> ( java.lang.Class<E> ) , org.solovyev.android.menu.MenuHelper<M,MI> , org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < M , MI , E extends java.lang.Enum & LabeledMenuItem < MI > > org.solovyev.android.menu.ActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> ( @ Nonnull java.lang.Class<E> < E > java.lang.Class<E> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> ) { return org.solovyev.android.menu.ActivityMenu ( java.util.List<E> ( java.lang.Class<E> ) , org.solovyev.android.menu.MenuHelper<M,MI> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> ( int int , @ Nonnull java.util.List<? extends org.solovyev.android.menu.IdentifiableMenuItem<MI>> < ? extends IdentifiableMenuItem < MI > > java.util.List<? extends org.solovyev.android.menu.IdentifiableMenuItem<MI>> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> , @ Nonnull JPredicate < AMenuItem < MI > > org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> ) { final org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ListActivityMenu<M,MI> = new org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > ( int , org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> , org.solovyev.android.menu.MenuHelper<M,MI> ) ; for ( IdentifiableMenuItem < MI > org.solovyev.android.menu.IdentifiableMenuItem<MI> : java.util.List<> ) { org.solovyev.android.menu.ListActivityMenu<M,MI> . java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> . add ( new MenuItemWrapper < MI > ( org.solovyev.android.menu.IdentifiableMenuItem<MI> ) ) ; } return org.solovyev.android.menu.ListActivityMenu<M,MI> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < M , MI > org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ListActivityMenu<M,MI> ( int int , @ Nonnull java.util.List<? extends org.solovyev.android.menu.IdentifiableMenuItem<MI>> < ? extends IdentifiableMenuItem < MI > > java.util.List<? extends org.solovyev.android.menu.IdentifiableMenuItem<MI>> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> ) { final org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ListActivityMenu<M,MI> = new org.solovyev.android.menu.ListActivityMenu<M,MI> < M , MI > ( int , null , org.solovyev.android.menu.MenuHelper<M,MI> ) ; for ( IdentifiableMenuItem < MI > org.solovyev.android.menu.IdentifiableMenuItem<MI> : java.util.List<> ) { org.solovyev.android.menu.ListActivityMenu<M,MI> . java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> . add ( new MenuItemWrapper < MI > ( org.solovyev.android.menu.IdentifiableMenuItem<MI> ) ) ; } return org.solovyev.android.menu.ListActivityMenu<M,MI> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < M , MI , E extends java.lang.Enum & IdentifiableMenuItem < MI > > org.solovyev.android.menu.ActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> ( int int , @ Nonnull java.lang.Class<? extends E> < ? extends E > java.lang.Class<? extends E> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> , @ Nonnull JPredicate < AMenuItem < MI > > org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> ) { return org.solovyev.android.menu.ActivityMenu ( int , java.util.List<> ( java.lang.Class<> ) , org.solovyev.android.menu.MenuHelper<M,MI> , org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < M , MI , E extends java.lang.Enum & IdentifiableMenuItem < MI > > org.solovyev.android.menu.ActivityMenu<M,MI> < M , MI > org.solovyev.android.menu.ActivityMenu<M,MI> ( int int , @ Nonnull java.lang.Class<? extends E> < ? extends E > java.lang.Class<? extends E> , @ Nonnull MenuHelper < M , MI > org.solovyev.android.menu.MenuHelper<M,MI> ) { return org.solovyev.android.menu.ListActivityMenu ( int , java.util.List<> ( java.lang.Class<> ) , org.solovyev.android.menu.MenuHelper<M,MI> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static < E extends java.lang.Enum > java.util.List<E> < E > java.util.List<E> ( @ Nonnull java.lang.Class<E> < E > java.lang.Class<E> ) { final java.util.List<E> < E > java.util.List<E> = new java.util.ArrayList<E> < E > ( ) ; java.util.Collections . boolean ( java.util.List<E> , java.lang.Class<E> . E[] ( ) ) ; return java.util.List<E> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull final Activity org.solovyev.android.menu.Activity , @ Nonnull M M ) { if ( org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> == null ) { if ( boolean ( ) ) { this . org.solovyev.android.menu.MenuHelper<M,MI> . inflateMenu ( org.solovyev.android.menu.Activity , int , M ) ; } else { for ( final MenuItemWrapper < MI > org.solovyev.android.menu.MenuItemWrapper<MI> : this . java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> ) { void ( org.solovyev.android.menu.Activity , M , org.solovyev.android.menu.MenuItemWrapper<MI> ) ; } } } return true ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return int != int ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull final Activity org.solovyev.android.menu.Activity , @ Nonnull final M M , @ Nonnull final MenuItemWrapper < MI > org.solovyev.android.menu.MenuItemWrapper<MI> ) { final int int = org.solovyev.android.menu.MenuHelper<M,MI> . size ( M ) ; final int int = int + NUMBER ; final MI MI = org.solovyev.android.menu.MenuHelper<M,MI> . add ( M , NUMBER , int , NUMBER , org.solovyev.android.menu.MenuItemWrapper<MI> . getCaption ( org.solovyev.android.menu.Activity ) ) ; org.solovyev.android.menu.MenuItemWrapper<MI> . setMenuItemId ( int ) ; org.solovyev.android.menu.MenuHelper<M,MI> . setOnMenuItemClickListener ( MI , org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItem ( ) , org.solovyev.android.menu.Activity ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull Activity org.solovyev.android.menu.Activity , @ Nonnull M M ) { if ( org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> != null ) { if ( boolean ( ) ) { for ( MenuItemWrapper < MI > org.solovyev.android.menu.MenuItemWrapper<MI> : java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> ) { final java.lang.Integer java.lang.Integer = org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItemId ( ) ; if ( java.lang.Integer != null ) { org.solovyev.android.menu.MenuHelper<M,MI> . removeItem ( M , java.lang.Integer ) ; } } this . org.solovyev.android.menu.MenuHelper<M,MI> . inflateMenu ( org.solovyev.android.menu.Activity , int , M ) ; for ( MenuItemWrapper < MI > org.solovyev.android.menu.MenuItemWrapper<MI> : java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> ) { if ( org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> . apply ( org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItem ( ) ) ) { org.solovyev.android.menu.MenuHelper<M,MI> . removeItem ( M , org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItemId ( ) ) ; } } } else { for ( MenuItemWrapper < MI > org.solovyev.android.menu.MenuItemWrapper<MI> : java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> ) { final java.lang.Integer java.lang.Integer = org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItemId ( ) ; if ( java.lang.Integer != null ) { org.solovyev.android.menu.MenuHelper<M,MI> . removeItem ( M , java.lang.Integer ) ; } if ( ! org.solovyev.android.menu.JPredicate<org.solovyev.android.menu.AMenuItem<MI>> . apply ( org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItem ( ) ) ) { void ( org.solovyev.android.menu.Activity , M , org.solovyev.android.menu.MenuItemWrapper<MI> ) ; } } } } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull Activity org.solovyev.android.menu.Activity , @ Nonnull MI MI ) { if ( boolean ( ) ) { for ( MenuItemWrapper < MI > org.solovyev.android.menu.MenuItemWrapper<MI> : java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> ) { if ( org.solovyev.android.menu.MenuHelper<M,MI> . getItemId ( MI ) . equals ( org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItemId ( ) ) ) { org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItem ( ) . onClick ( MI , org.solovyev.android.menu.Activity ) ; return true ; } } } return false ; }  <METHOD_END>
<METHOD_START> @ Nullable public org.solovyev.android.menu.AMenuItem<MI> < MI > org.solovyev.android.menu.AMenuItem<MI> ( int int ) { for ( MenuItemWrapper < MI > org.solovyev.android.menu.MenuItemWrapper<MI> : java.util.List<org.solovyev.android.menu.MenuItemWrapper<MI>> ) { if ( java.lang.Integer . java.lang.Integer ( int ) . boolean ( org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItemId ( ) ) ) { return org.solovyev.android.menu.MenuItemWrapper<MI> . getMenuItem ( ) ; } } return null ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T extends org.solovyev.android.menu.LabeledMenuItem<D> < D > , D > org.solovyev.android.menu.ContextMenu<T,D> < T , D > org.solovyev.android.menu.ContextMenu<T,D> ( T ... T[] ) { return new org.solovyev.android.menu.ListContextMenu<T,D> < T , D > ( T[] ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T extends org.solovyev.android.menu.LabeledMenuItem<D> < D > , D > org.solovyev.android.menu.ContextMenu<T,D> < T , D > org.solovyev.android.menu.ContextMenu<T,D> ( @ Nonnull java.util.List<? extends T> < ? extends T > java.util.List<? extends T> ) { return new org.solovyev.android.menu.ListContextMenu<T,D> < T , D > ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> private void ( T ... T[] ) { this( Collections . asList ( T[] ) ); }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.util.List<? extends T> < ? extends T > java.util.List<? extends T> ) { this . java.util.List<? extends T> = new java.util.ArrayList<T> < T > ( java.util.List<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public T T ( int int ) { if ( int >= NUMBER && int < java.util.List<> . int ( ) ) { return java.util.List<> . get ( int ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public java.lang.CharSequence [] java.lang.CharSequence[] ( @ Nonnull final Context org.solovyev.android.menu.Context ) { final java.lang.CharSequence [] java.lang.CharSequence[] = new java.lang.CharSequence [ this . java.util.List<> . int ( ) ] ; for ( int int = NUMBER ; int < this . java.util.List<> . int ( ) ; int ++ ) { java.lang.CharSequence[] [ int ] = this . java.util.List<> . get ( int ) . getCaption ( org.solovyev.android.menu.Context ) ; } return java.lang.CharSequence[] ; }  <METHOD_END>
<METHOD_START> int int ( @ Nonnull M M );  <METHOD_END>
<METHOD_START> @ Nonnull MI MI ( @ Nonnull M M , int int , int int , int int , @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull MI MI , @ Nonnull AMenuItem < MI > org.solovyev.android.menu.AMenuItem<MI> , @ Nonnull Activity org.solovyev.android.menu.Activity );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull M M , @ Nonnull java.lang.Integer java.lang.Integer );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull Activity org.solovyev.android.menu.Activity , int int , @ Nonnull M M );  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.Integer java.lang.Integer ( @ Nonnull MI MI );  <METHOD_END>
<METHOD_START> void ( @ Nonnull LabeledMenuItem < MI > org.solovyev.android.menu.LabeledMenuItem<MI> ) { this . org.solovyev.android.menu.LabeledMenuItem<MI> = org.solovyev.android.menu.LabeledMenuItem<MI> ; this . org.solovyev.android.menu.IdentifiableMenuItem<MI> = null ; }  <METHOD_END>
<METHOD_START> void ( @ Nonnull IdentifiableMenuItem < MI > org.solovyev.android.menu.IdentifiableMenuItem<MI> ) { this . org.solovyev.android.menu.IdentifiableMenuItem<MI> = org.solovyev.android.menu.IdentifiableMenuItem<MI> ; this . org.solovyev.android.menu.LabeledMenuItem<MI> = null ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.menu.AMenuItem<MI> < MI > org.solovyev.android.menu.AMenuItem<MI> ( ) { return org.solovyev.android.menu.LabeledMenuItem<MI> != null ? org.solovyev.android.menu.LabeledMenuItem<MI> : org.solovyev.android.menu.IdentifiableMenuItem<MI> ; }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.Integer java.lang.Integer ( ) { return org.solovyev.android.menu.IdentifiableMenuItem<MI> == null ? java.lang.Integer : org.solovyev.android.menu.IdentifiableMenuItem<MI> . getItemId ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { assert org.solovyev.android.menu.LabeledMenuItem<MI> != null ; this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( @ Nonnull Activity org.solovyev.android.menu.Activity ) { assert org.solovyev.android.menu.LabeledMenuItem<MI> != null ; return org.solovyev.android.menu.LabeledMenuItem<MI> . getCaption ( org.solovyev.android.menu.Activity ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull static org.solovyev.android.network.NetworkData org.solovyev.android.network.NetworkData ( ) { return new org.solovyev.android.network.NetworkDataImpl ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull static org.solovyev.android.network.NetworkData org.solovyev.android.network.NetworkData ( @ Nonnull Intent org.solovyev.android.network.Intent ) { assert ConnectivityManager . CONNECTIVITY_ACTION . equals ( org.solovyev.android.network.Intent . getAction ( ) ) ; final org.solovyev.android.network.NetworkDataImpl org.solovyev.android.network.NetworkDataImpl = new org.solovyev.android.network.NetworkDataImpl ( ) ; boolean boolean = ! org.solovyev.android.network.Intent . getBooleanExtra ( ConnectivityManager . EXTRA_NO_CONNECTIVITY , false ) ; if ( boolean ) { org.solovyev.android.network.NetworkDataImpl . org.solovyev.android.network.NetworkState = NetworkState . CONNECTED ; } else { org.solovyev.android.network.NetworkDataImpl . org.solovyev.android.network.NetworkState = NetworkState . NOT_CONNECTED ; } org.solovyev.android.network.NetworkDataImpl . org.solovyev.android.network.NetworkInfo = ( NetworkInfo ) org.solovyev.android.network.Intent . getParcelableExtra ( ConnectivityManager . EXTRA_NETWORK_INFO ) ; org.solovyev.android.network.NetworkDataImpl . org.solovyev.android.network.NetworkInfo = ( NetworkInfo ) org.solovyev.android.network.Intent . getParcelableExtra ( ConnectivityManager . EXTRA_OTHER_NETWORK_INFO ) ; org.solovyev.android.network.NetworkDataImpl . java.lang.String = org.solovyev.android.network.Intent . getStringExtra ( ConnectivityManager . EXTRA_REASON ) ; org.solovyev.android.network.NetworkDataImpl . boolean = org.solovyev.android.network.Intent . getBooleanExtra ( ConnectivityManager . EXTRA_IS_FAILOVER , false ) ; return org.solovyev.android.network.NetworkDataImpl ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.network.NetworkState org.solovyev.android.network.NetworkState ( ) { return this . org.solovyev.android.network.NetworkState ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public org.solovyev.android.network.NetworkInfo org.solovyev.android.network.NetworkInfo ( ) { return this . org.solovyev.android.network.NetworkInfo ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public org.solovyev.android.network.NetworkInfo org.solovyev.android.network.NetworkInfo ( ) { return this . org.solovyev.android.network.NetworkInfo ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + org.solovyev.android.network.NetworkState + STRING + java.lang.String + '\'' + STRING + boolean + STRING + org.solovyev.android.network.NetworkInfo + STRING + org.solovyev.android.network.NetworkInfo + '}' ; }  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.network.NetworkState org.solovyev.android.network.NetworkState ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.network.NetworkInfo org.solovyev.android.network.NetworkInfo ( )  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.network.NetworkInfo org.solovyev.android.network.NetworkInfo ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull NetworkData org.solovyev.android.network.NetworkData );  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Context org.solovyev.android.network.Context , @ Nonnull Intent org.solovyev.android.network.Intent ) { final java.lang.String java.lang.String = org.solovyev.android.network.Intent . getAction ( ) ; if ( ! java.lang.String . boolean ( ConnectivityManager . CONNECTIVITY_ACTION ) ) { return; } final NetworkData org.solovyev.android.network.NetworkData = NetworkDataImpl . fromIntent ( org.solovyev.android.network.Intent ) ; org.solovyev.android.network.NetworkData = org.solovyev.android.network.NetworkData ; if ( boolean ) { Log . d ( TAG , STRING + org.solovyev.android.network.NetworkData ) ; } for ( NetworkStateListener org.solovyev.android.network.NetworkStateListener : org.solovyev.android.network.JListeners<org.solovyev.android.network.NetworkStateListener> . getListeners ( ) ) { org.solovyev.android.network.NetworkStateListener . onNetworkEvent ( org.solovyev.android.network.NetworkData ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) { org.solovyev.android.network.NetworkData = NetworkDataImpl . newUnknownNetworkData ( ) ; org.solovyev.android.network.BroadcastReceiver = new org.solovyev.android.network.NetworkStateServiceImpl.ConnectivityBroadcastReceiver ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized void void ( @ Nonnull Context org.solovyev.android.network.Context ) { this . org.solovyev.android.network.Context = org.solovyev.android.network.Context . getApplicationContext ( ) ; final IntentFilter org.solovyev.android.network.IntentFilter = new IntentFilter ( ) ; org.solovyev.android.network.IntentFilter . addAction ( ConnectivityManager . CONNECTIVITY_ACTION ) ; org.solovyev.android.network.Context . registerReceiver ( org.solovyev.android.network.BroadcastReceiver , org.solovyev.android.network.IntentFilter ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull NetworkStateListener org.solovyev.android.network.NetworkStateListener ) { return org.solovyev.android.network.JListeners<org.solovyev.android.network.NetworkStateListener> . addListener ( org.solovyev.android.network.NetworkStateListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull NetworkStateListener org.solovyev.android.network.NetworkStateListener ) { return org.solovyev.android.network.JListeners<org.solovyev.android.network.NetworkStateListener> . removeListener ( org.solovyev.android.network.NetworkStateListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized void void ( ) { if ( org.solovyev.android.network.Context != null ) { org.solovyev.android.network.Context . unregisterReceiver ( org.solovyev.android.network.BroadcastReceiver ) ; } org.solovyev.android.network.Context = null ; org.solovyev.android.network.NetworkData = NetworkDataImpl . newUnknownNetworkData ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public org.solovyev.android.network.NetworkData org.solovyev.android.network.NetworkData ( ) { return org.solovyev.android.network.NetworkData ; }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull Context org.solovyev.android.network.Context );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull NetworkStateListener org.solovyev.android.network.NetworkStateListener );  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull NetworkStateListener org.solovyev.android.network.NetworkStateListener );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.network.NetworkData org.solovyev.android.network.NetworkData ( )  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull MessageType org.solovyev.android.msg.MessageType , @ Nonnull Application org.solovyev.android.msg.Application , @ javax . annotation . javax.annotation.Nullable java.lang.Object ... java.lang.Object[] ) { super( java.lang.String . java.lang.String ( java.lang.Integer ) , org.solovyev.android.msg.MessageType , java.lang.Object[] ); this . java.lang.Integer = java.lang.Integer ; this . org.solovyev.android.msg.Application = org.solovyev.android.msg.Application ; this . boolean = false ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull MessageType org.solovyev.android.msg.MessageType , @ Nonnull Application org.solovyev.android.msg.Application , @ Nonnull java.util.List<?> < ? > java.util.List<?> ) { this( java.lang.Integer , org.solovyev.android.msg.MessageType , org.solovyev.android.msg.Application , java.util.List<> , false ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull MessageType org.solovyev.android.msg.MessageType , @ Nonnull Application org.solovyev.android.msg.Application , @ Nonnull java.util.List<?> < ? > java.util.List<?> , boolean boolean ) { super( java.lang.String . java.lang.String ( java.lang.Integer ) , org.solovyev.android.msg.MessageType , java.util.List<> ); this . java.lang.Integer = java.lang.Integer ; this . org.solovyev.android.msg.Application = org.solovyev.android.msg.Application ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull java.util.Locale java.util.Locale ) { if ( boolean ) { return super. getLocalizedMessage ( java.util.Locale ) ; } else { final java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = getParameters ( ) ; final java.lang.Object [] java.lang.Object[] = java.util.List<java.lang.Object> . java.lang.Object[] ( new java.lang.Object [ java.util.List<java.lang.Object> . int ( ) ] ) ; return org.solovyev.android.msg.Application . getResources ( ) . getString ( java.lang.Integer , ( java.lang.Object [] ) java.lang.Object[] ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( @ Nonnull java.util.Locale java.util.Locale ) { return org.solovyev.android.msg.Application . getResources ( ) . getString ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet , @ Nullable java.lang.String java.lang.String , boolean boolean , @ Nonnull Mapper < T > org.solovyev.android.prefs.Mapper<T> ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet ); this . org.solovyev.android.prefs.Context = org.solovyev.android.prefs.Context ; this . java.lang.String = java.lang.String ; this . boolean = boolean ; this . org.solovyev.android.prefs.Mapper<T> = org.solovyev.android.prefs.Mapper<T> ; final java.lang.String java.lang.String = org.solovyev.android.prefs.AttributeSet . getAttributeValue ( java.lang.String , STRING ) ; if ( java.lang.String != null ) { T = org.solovyev.android.prefs.Mapper<T> ( ) . parseValue ( java.lang.String ) ; } else if ( java.lang.String != null ) { T = org.solovyev.android.prefs.Mapper<T> ( ) . parseValue ( java.lang.String ) ; } else { throw new java.lang.IllegalArgumentException ( ) ; } java.lang.String = org.solovyev.android.prefs.AttributeSet . getAttributeValue ( java.lang.String , STRING ) ; java.lang.String = org.solovyev.android.prefs.AttributeSet . getAttributeValue ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Nullable protected org.solovyev.android.prefs.View org.solovyev.android.prefs.View ( ) { return org.solovyev.android.prefs.View ; }  <METHOD_END>
<METHOD_START> @ Nullable public T T ( ) { return T ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable T T ) { this . T = T ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull protected final org.solovyev.android.prefs.LinearLayout org.solovyev.android.prefs.LinearLayout ( ) { if ( shouldPersist ( ) ) { T = T ( ) ; } final LinearLayout org.solovyev.android.prefs.LinearLayout = new LinearLayout ( org.solovyev.android.prefs.Context ) ; org.solovyev.android.prefs.LinearLayout . setOrientation ( LinearLayout . VERTICAL ) ; org.solovyev.android.prefs.LinearLayout . setPadding ( NUMBER , NUMBER , NUMBER , NUMBER ) ; if ( java.lang.String != null ) { final TextView org.solovyev.android.prefs.TextView = new TextView ( org.solovyev.android.prefs.Context ) ; org.solovyev.android.prefs.TextView . setText ( java.lang.String ) ; org.solovyev.android.prefs.LinearLayout . addView ( org.solovyev.android.prefs.TextView ) ; } if ( boolean ) { org.solovyev.android.prefs.TextView = new TextView ( org.solovyev.android.prefs.Context ) ; org.solovyev.android.prefs.TextView . setGravity ( Gravity . CENTER_HORIZONTAL ) ; org.solovyev.android.prefs.TextView . setTextSize ( NUMBER ) ; final LinearLayout . LinearLayout LinearLayout.LayoutParams = new LinearLayout . LinearLayout ( LinearLayout . LayoutParams . MATCH_PARENT , LinearLayout . LayoutParams . WRAP_CONTENT ) ; org.solovyev.android.prefs.LinearLayout . addView ( org.solovyev.android.prefs.TextView , LinearLayout.LayoutParams ) ; } org.solovyev.android.prefs.View = org.solovyev.android.prefs.View ( org.solovyev.android.prefs.Context ) ; void ( org.solovyev.android.prefs.View , T ) ; final LinearLayout . LinearLayout LinearLayout.LayoutParams = LinearLayout.LayoutParams ( ) ; if ( LinearLayout.LayoutParams != null ) { org.solovyev.android.prefs.LinearLayout . addView ( org.solovyev.android.prefs.View , LinearLayout.LayoutParams ) ; } else { org.solovyev.android.prefs.LinearLayout . addView ( org.solovyev.android.prefs.View ) ; } return org.solovyev.android.prefs.LinearLayout ; }  <METHOD_END>
<METHOD_START> @ Nullable protected abstract LinearLayout . LinearLayout.LayoutParams LinearLayout.LayoutParams ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( boolean boolean , java.lang.Object java.lang.Object ) { super. onSetInitialValue ( boolean , java.lang.Object ) ; if ( boolean ) { if ( shouldPersist ( ) ) { T = T ( ) ; } else { T = this . T ; } } else { T = ( T ) java.lang.Object ; if ( shouldPersist ( ) ) { void ( this . T ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View org.solovyev.android.prefs.View ) { super. onBindDialogView ( org.solovyev.android.prefs.View ) ; if ( this . org.solovyev.android.prefs.View != null ) { void ( this . org.solovyev.android.prefs.View , T ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.prefs.View org.solovyev.android.prefs.View ( @ Nonnull Context org.solovyev.android.prefs.Context );  <METHOD_END>
<METHOD_START> protected abstract void void ( @ Nonnull View org.solovyev.android.prefs.View , @ Nullable T T );  <METHOD_END>
<METHOD_START> @ Nullable private T T ( ) { java.lang.String java.lang.String = getPersistedString ( java.lang.String ) ; if ( Objects . areEqual ( java.lang.String , java.lang.String ) ) { return T ; } else { return org.solovyev.android.prefs.Mapper<T> ( ) . parseValue ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( @ Nullable T T ) { Log . d ( java.lang.String , STRING + T ) ; this . T = T ; Log . d ( java.lang.String , STRING ) ; if ( callChangeListener ( T ) ) { Log . d ( java.lang.String , STRING ) ; if ( shouldPersist ( ) ) { Log . d ( java.lang.String , STRING ) ; void ( T ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( @ Nullable T T ) { if ( T != null ) { final java.lang.String java.lang.String = org.solovyev.android.prefs.Mapper<T> ( ) . formatValue ( T ) ; if ( java.lang.String != null ) { if ( callChangeListener ( java.lang.String ) ) { persistString ( java.lang.String ) ; } } } }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull java.lang.String java.lang.String ) { if ( org.solovyev.android.prefs.TextView != null ) { org.solovyev.android.prefs.TextView . setText ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.prefs.Mapper<T> < T > org.solovyev.android.prefs.Mapper<T> ( ) { return this . org.solovyev.android.prefs.Mapper<T> ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull java.lang.String java.lang.String , @ Nullable T T ) { this . java.lang.String = java.lang.String ; this . T = T ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return T ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final T T ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { if ( boolean ( org.solovyev.android.prefs.SharedPreferences ) ) { return T ( org.solovyev.android.prefs.SharedPreferences ) ; } else { return this . T ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { if ( boolean ( org.solovyev.android.prefs.SharedPreferences ) ) { try { return T ( org.solovyev.android.prefs.SharedPreferences ) ; } catch ( java.lang.RuntimeException java.lang.RuntimeException ) { return this . T ; } } else { return this . T ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { void ( org.solovyev.android.prefs.SharedPreferences , this . T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences , @ Nullable T T ) { if ( T != null ) { final SharedPreferences . SharedPreferences SharedPreferences.Editor = org.solovyev.android.prefs.SharedPreferences . edit ( ) ; void ( SharedPreferences.Editor , T ) ; SharedPreferences.Editor . commit ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.SharedPreferences . contains ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final boolean boolean ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { final boolean boolean ; if ( boolean ( org.solovyev.android.prefs.SharedPreferences ) ) { boolean = false ; } else { void ( org.solovyev.android.prefs.SharedPreferences ) ; boolean = true ; } return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final boolean boolean ( @ Nonnull java.lang.String java.lang.String ) { return this . java.lang.String . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nullable protected abstract T T ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences );  <METHOD_END>
<METHOD_START> protected abstract void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull T T );  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.Boolean java.lang.Boolean ) { super( java.lang.String , java.lang.Boolean ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.BooleanPreference org.solovyev.android.prefs.BooleanPreference ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.Boolean java.lang.Boolean ) { return new org.solovyev.android.prefs.BooleanPreference ( java.lang.String , java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.SharedPreferences . getBoolean ( getKey ( ) , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull java.lang.Boolean java.lang.Boolean ) { SharedPreferences.Editor . putBoolean ( getKey ( ) , java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull C C , @ Nonnull Mapper < T > org.solovyev.android.prefs.Mapper<T> ) { super( java.lang.String , C ); this . org.solovyev.android.prefs.Mapper<T> = org.solovyev.android.prefs.Mapper<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected C C ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { final java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = org.solovyev.android.prefs.SharedPreferences . getStringSet ( getKey ( ) , null ) ; final C C = C ( java.util.Set<java.lang.String> . int ( ) ) ; for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ) { C . boolean ( org.solovyev.android.prefs.Mapper<T> . parseValue ( java.lang.String ) ) ; } return C ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract C C ( int int );  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull C C ) { final java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( C . int ( ) ) ; for ( T T : C ) { java.util.Set<java.lang.String> . boolean ( org.solovyev.android.prefs.Mapper<T> . formatValue ( T ) ) ; } SharedPreferences.Editor . putStringSet ( getKey ( ) , java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable C C , @ Nonnull Mapper < C > org.solovyev.android.prefs.Mapper<C> ) { super( java.lang.String , C ); this . org.solovyev.android.prefs.Mapper<C> = org.solovyev.android.prefs.Mapper<C> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T > org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<T>,T> < java.util.List<T> < T > , T > org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<T>,T> ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.List<T> < T > java.util.List<T> , @ Nonnull Mapper < java.util.List<T> < T > > org.solovyev.android.prefs.Mapper<java.util.List<T>> ) { return new org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<T>,T> < java.util.List<T> < T > , T > ( java.lang.String , java.util.List<T> , org.solovyev.android.prefs.Mapper<java.util.List<T>> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T > org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<T>,T> < java.util.List<T> < T > , T > org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<T>,T> ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.List<T> < T > java.util.List<T> , @ Nonnull Mapper < T > org.solovyev.android.prefs.Mapper<T> ) { return new org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<T>,T> < java.util.List<T> < T > , T > ( java.lang.String , java.util.List<T> , ListMapper . newInstance ( org.solovyev.android.prefs.Mapper<T> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<java.lang.String>,java.lang.String> < java.util.List<java.lang.String> < java.lang.String > , java.lang.String > org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<java.lang.String>,java.lang.String> ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new org.solovyev.android.prefs.CollectionToStringPreference<java.util.List<java.lang.String>,java.lang.String> < java.util.List<java.lang.String> < java.lang.String > , java.lang.String > ( java.lang.String , java.util.List<java.lang.String> , ListMapper . newInstance ( StringMapper . getInstance ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected C C ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.Mapper<C> . parseValue ( org.solovyev.android.prefs.SharedPreferences . getString ( getKey ( ) , null ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull C C ) { SharedPreferences.Editor . putString ( getKey ( ) , org.solovyev.android.prefs.Mapper<C> . formatValue ( C ) ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.Float java.lang.Float ) { super( java.lang.String , java.lang.Float ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.FloatPreference org.solovyev.android.prefs.FloatPreference ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.Float java.lang.Float ) { return new org.solovyev.android.prefs.FloatPreference ( java.lang.String , java.lang.Float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Float java.lang.Float ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.SharedPreferences . getFloat ( getKey ( ) , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull java.lang.Float java.lang.Float ) { SharedPreferences.Editor . putFloat ( getKey ( ) , java.lang.Float ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.Set<T> < T > java.util.Set<T> , @ Nonnull Mapper < T > org.solovyev.android.prefs.Mapper<T> ) { super( java.lang.String , java.util.Set<T> , org.solovyev.android.prefs.Mapper<T> ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.HashSetPreference<java.lang.String> < java.lang.String > org.solovyev.android.prefs.HashSetPreference<java.lang.String> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { return new org.solovyev.android.prefs.HashSetPreference<java.lang.String> < java.lang.String > ( java.lang.String , java.util.Set<java.lang.String> , StringMapper . getInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T > org.solovyev.android.prefs.HashSetPreference<T> < T > org.solovyev.android.prefs.HashSetPreference<T> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.Set<T> < T > java.util.Set<T> , @ Nonnull Mapper < T > org.solovyev.android.prefs.Mapper<T> ) { return new org.solovyev.android.prefs.HashSetPreference<T> < T > ( java.lang.String , java.util.Set<T> , org.solovyev.android.prefs.Mapper<T> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T extends java.lang.Enum > org.solovyev.android.prefs.HashSetPreference<T> < T > org.solovyev.android.prefs.HashSetPreference<T> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.Set<T> < T > java.util.Set<T> , @ Nonnull java.lang.Class<T> < T > java.lang.Class<T> ) { return new org.solovyev.android.prefs.HashSetPreference<T> < T > ( java.lang.String , java.util.Set<T> , EnumMapper . of ( java.lang.Class<T> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.util.Set<T> < T > java.util.Set<T> ( int int ) { return new java.util.HashSet<T> < T > ( int ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.Integer java.lang.Integer ) { super( java.lang.String , java.lang.Integer ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.IntegerPreference org.solovyev.android.prefs.IntegerPreference ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.Integer java.lang.Integer ) { return new org.solovyev.android.prefs.IntegerPreference ( java.lang.String , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Integer java.lang.Integer ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.SharedPreferences . getInt ( getKey ( ) , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull java.lang.Integer java.lang.Integer ) { SharedPreferences.Editor . putInt ( getKey ( ) , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.Locale java.util.Locale , @ Nonnull Mapper < java.util.Locale > org.solovyev.android.prefs.Mapper<java.util.Locale> ) { this . org.solovyev.android.prefs.StringPreference<java.util.Locale> = new StringPreference < java.util.Locale > ( java.lang.String , java.util.Locale , org.solovyev.android.prefs.Mapper<java.util.Locale> ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.Locale java.util.Locale ) { this . org.solovyev.android.prefs.StringPreference<java.util.Locale> = new StringPreference < java.util.Locale > ( java.lang.String , java.util.Locale , org.solovyev.android.prefs.LocalePreference.DefaultLocaleMapper . org.solovyev.android.prefs.Mapper<java.util.Locale> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.LocalePreference org.solovyev.android.prefs.LocalePreference ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.Locale java.util.Locale , @ Nonnull Mapper < java.util.Locale > org.solovyev.android.prefs.Mapper<java.util.Locale> ) { return new org.solovyev.android.prefs.LocalePreference ( java.lang.String , java.util.Locale , org.solovyev.android.prefs.Mapper<java.util.Locale> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.LocalePreference org.solovyev.android.prefs.LocalePreference ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.Locale java.util.Locale ) { return new org.solovyev.android.prefs.LocalePreference ( java.lang.String , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public java.lang.String java.lang.String ( ) { return org.solovyev.android.prefs.StringPreference<java.util.Locale> . getKey ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Locale java.util.Locale ( ) { return org.solovyev.android.prefs.StringPreference<java.util.Locale> . getDefaultValue ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Locale java.util.Locale ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.StringPreference<java.util.Locale> . getPreference ( org.solovyev.android.prefs.SharedPreferences ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Locale java.util.Locale ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.StringPreference<java.util.Locale> . getPreferenceNoError ( org.solovyev.android.prefs.SharedPreferences ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { org.solovyev.android.prefs.StringPreference<java.util.Locale> . putDefault ( org.solovyev.android.prefs.SharedPreferences ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences , @ Nullable java.util.Locale java.util.Locale ) { org.solovyev.android.prefs.StringPreference<java.util.Locale> . putPreference ( org.solovyev.android.prefs.SharedPreferences , java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.StringPreference<java.util.Locale> . isSet ( org.solovyev.android.prefs.SharedPreferences ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.StringPreference<java.util.Locale> . tryPutDefault ( org.solovyev.android.prefs.SharedPreferences ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull java.lang.String java.lang.String ) { return org.solovyev.android.prefs.StringPreference<java.util.Locale> . isSameKey ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {		}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.Mapper<java.util.Locale> < java.util.Locale > org.solovyev.android.prefs.Mapper<java.util.Locale> ( ) { return org.solovyev.android.prefs.Mapper<java.util.Locale> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( @ Nullable java.util.Locale java.util.Locale ) throws java.lang.IllegalArgumentException { assert java.util.Locale != null ; return java.util.Locale . java.lang.String ( ) + java.lang.String + java.util.Locale . java.lang.String ( ) + java.lang.String + java.util.Locale . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Locale java.util.Locale ( @ Nullable java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { final java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer ( java.lang.String , java.lang.String , false ) ; final java.lang.String java.lang.String = java.util.StringTokenizer . java.lang.String ( ) ; final java.lang.String java.lang.String ; if ( java.util.StringTokenizer . boolean ( ) ) { java.lang.String = java.util.StringTokenizer . java.lang.String ( ) ; } else { java.lang.String = STRING ; } final java.lang.String java.lang.String ; if ( java.util.StringTokenizer . boolean ( ) ) { java.lang.String = java.util.StringTokenizer . java.lang.String ( ) ; } else { java.lang.String = STRING ; } return new java.util.Locale ( java.lang.String , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.Long java.lang.Long ) { super( java.lang.String , java.lang.Long ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.LongPreference org.solovyev.android.prefs.LongPreference ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.Long java.lang.Long ) { return new org.solovyev.android.prefs.LongPreference ( java.lang.String , java.lang.Long ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Long java.lang.Long ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.SharedPreferences . getLong ( getKey ( ) , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull java.lang.Long java.lang.Long ) { SharedPreferences.Editor . putLong ( getKey ( ) , java.lang.Long ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable Interval < N > org.solovyev.android.prefs.Interval<N> , @ Nonnull java.lang.Class<N> < N > java.lang.Class<N> ) { super( java.lang.String , org.solovyev.android.prefs.Interval<N> ); this . org.solovyev.android.prefs.Mapper<org.solovyev.android.prefs.Interval<N>> = NumberIntervalMapper . of ( java.lang.Class<N> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < N extends java.lang.Number & java.lang.Comparable<N> < N > > org.solovyev.android.prefs.NumberIntervalPreference<N> < N > org.solovyev.android.prefs.NumberIntervalPreference<N> ( @ Nonnull java.lang.String java.lang.String , @ Nullable Interval < N > org.solovyev.android.prefs.Interval<N> , @ Nonnull java.lang.Class<N> < N > java.lang.Class<N> ) { return new org.solovyev.android.prefs.NumberIntervalPreference<N> < N > ( java.lang.String , org.solovyev.android.prefs.Interval<N> , java.lang.Class<N> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.prefs.Interval<N> < N > org.solovyev.android.prefs.Interval<N> ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { final java.lang.String java.lang.String = org.solovyev.android.prefs.SharedPreferences . getString ( getKey ( ) , null ) ; if ( java.lang.String == null ) { return null ; } else { return org.solovyev.android.prefs.Mapper<org.solovyev.android.prefs.Interval<N>> . parseValue ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull Interval < N > org.solovyev.android.prefs.Interval<N> ) { SharedPreferences.Editor . putString ( getKey ( ) , org.solovyev.android.prefs.Mapper<org.solovyev.android.prefs.Interval<N>> . formatValue ( org.solovyev.android.prefs.Interval<N> ) ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String , @ Nullable N N , @ Nonnull java.lang.Class<N> < N > java.lang.Class<N> ) { super( java.lang.String , N ); this . org.solovyev.android.prefs.Mapper<N> = NumberMapper . of ( java.lang.Class<N> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < N extends java.lang.Number > org.solovyev.android.prefs.NumberToStringPreference<N> < N > org.solovyev.android.prefs.NumberToStringPreference<N> ( @ Nonnull java.lang.String java.lang.String , @ Nullable N N , @ Nonnull java.lang.Class<N> < N > java.lang.Class<N> ) { return new org.solovyev.android.prefs.NumberToStringPreference<N> < N > ( java.lang.String , N , java.lang.Class<N> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected N N ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.Mapper<N> . parseValue ( org.solovyev.android.prefs.SharedPreferences . getString ( getKey ( ) , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull N N ) { SharedPreferences.Editor . putString ( getKey ( ) , org.solovyev.android.prefs.Mapper<N> . formatValue ( N ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> T T ( )  <METHOD_END>
<METHOD_START> T T ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences );  <METHOD_END>
<METHOD_START> T T ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences , @ Nullable T T );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences );  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences );  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences );  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , STRING , true , NumberMapper . of ( java.lang.Integer .class ) ); int = org.solovyev.android.prefs.AttributeSet . getAttributeIntValue ( androidns , STRING , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected LinearLayout . LinearLayout.LayoutParams LinearLayout.LayoutParams ( ) { return new LinearLayout . LinearLayout ( LinearLayout . LayoutParams . MATCH_PARENT , LinearLayout . LayoutParams . WRAP_CONTENT ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.View org.solovyev.android.prefs.View ( @ Nonnull Context org.solovyev.android.prefs.Context ) { final SeekBar org.solovyev.android.prefs.SeekBar = new SeekBar ( org.solovyev.android.prefs.Context ) ; org.solovyev.android.prefs.SeekBar . setOnSeekBarChangeListener ( this ) ; return org.solovyev.android.prefs.SeekBar ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull View org.solovyev.android.prefs.View , java.lang.Integer java.lang.Integer ) { ( ( SeekBar ) org.solovyev.android.prefs.View ) . setMax ( int ) ; if ( java.lang.Integer != null ) { ( ( SeekBar ) org.solovyev.android.prefs.View ) . setProgress ( java.lang.Integer ) ; void ( java.lang.Integer ) ; } }  <METHOD_END>
<METHOD_START> public void void ( SeekBar org.solovyev.android.prefs.SeekBar , int int , boolean boolean ) { void ( int ) ; persistValue ( int ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { java.lang.String java.lang.String = java.lang.String . java.lang.String ( int ) ; final java.lang.String java.lang.String = getValueText ( ) ; updateValueText ( java.lang.String == null ? java.lang.String : java.lang.String . java.lang.String ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( SeekBar org.solovyev.android.prefs.SeekBar ) {	}  <METHOD_END>
<METHOD_START> public void void ( SeekBar org.solovyev.android.prefs.SeekBar ) {	}  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { setValue ( int ) ; final View org.solovyev.android.prefs.View = getPreferenceView ( ) ; if ( org.solovyev.android.prefs.View != null ) { ( ( SeekBar ) org.solovyev.android.prefs.View ) . setProgress ( int ) ; } }  <METHOD_END>
<METHOD_START> public int int ( ) { final java.lang.Integer java.lang.Integer = getValue ( ) ; return java.lang.Integer == null ? NUMBER : java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nullable T T , @ Nonnull Mapper < T > org.solovyev.android.prefs.Mapper<T> ) { super( java.lang.String , T ); this . org.solovyev.android.prefs.Mapper<T> = org.solovyev.android.prefs.Mapper<T> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.prefs.StringPreference<java.lang.String> < java.lang.String > org.solovyev.android.prefs.StringPreference<java.lang.String> ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String ) { return new org.solovyev.android.prefs.StringPreference<java.lang.String> < java.lang.String > ( java.lang.String , java.lang.String , StringMapper . getInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T > org.solovyev.android.prefs.StringPreference<T> < T > org.solovyev.android.prefs.StringPreference<T> ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nonnull Mapper < T > org.solovyev.android.prefs.Mapper<T> ) { return new org.solovyev.android.prefs.StringPreference<T> < T > ( java.lang.String , org.solovyev.android.prefs.Mapper<T> . parseValue ( java.lang.String ) , org.solovyev.android.prefs.Mapper<T> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T extends java.lang.Enum > org.solovyev.android.prefs.StringPreference<T> < T > org.solovyev.android.prefs.StringPreference<T> ( @ Nonnull java.lang.String java.lang.String , @ Nullable T T , @ Nonnull java.lang.Class<T> < T > java.lang.Class<T> ) { return new org.solovyev.android.prefs.StringPreference<T> < T > ( java.lang.String , T , EnumMapper . of ( java.lang.Class<T> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected T T ( @ Nonnull SharedPreferences org.solovyev.android.prefs.SharedPreferences ) { return org.solovyev.android.prefs.Mapper<T> . parseValue ( org.solovyev.android.prefs.SharedPreferences . getString ( getKey ( ) , null ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull SharedPreferences . SharedPreferences SharedPreferences.Editor , @ Nonnull T T ) { SharedPreferences.Editor . putString ( getKey ( ) , org.solovyev.android.prefs.Mapper<T> . formatValue ( T ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.list.Bundle ) { super. onCreate ( org.solovyev.android.list.Bundle ) ; org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> = new org.solovyev.android.list.ListAdapterActivity.Adapter ( this , java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> ( NUMBER ) ) ; ListItemAdapter . attach ( this , org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.list.Bundle ) { super. onSaveInstanceState ( org.solovyev.android.list.Bundle ) ; org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> . saveState ( org.solovyev.android.list.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.list.Bundle ) { org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> . restoreState ( org.solovyev.android.list.Bundle ) ; super. onRestoreInstanceState ( org.solovyev.android.list.Bundle ) ; }  <METHOD_END>
<METHOD_START> void void ( int int ) { org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> . addAll ( java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> ( int ) ) ; }  <METHOD_END>
<METHOD_START> void void ( final int int ) { org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> . doWork ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { for ( org.solovyev.android.list.ListAdapterActivity.TestListItem org.solovyev.android.list.ListAdapterActivity.TestListItem : java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> ( int ) ) { org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> . add ( org.solovyev.android.list.ListAdapterActivity.TestListItem ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { for ( org.solovyev.android.list.ListAdapterActivity.TestListItem org.solovyev.android.list.ListAdapterActivity.TestListItem : java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> ( int ) ) { org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> . add ( org.solovyev.android.list.ListAdapterActivity.TestListItem ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> < org.solovyev.android.list.ListAdapterActivity.TestListItem > java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> ( int int ) { final java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> < org.solovyev.android.list.ListAdapterActivity.TestListItem > java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> = new java.util.ArrayList<org.solovyev.android.list.ListAdapterActivity.TestListItem> < org.solovyev.android.list.ListAdapterActivity.TestListItem > ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> . boolean ( new org.solovyev.android.list.ListAdapterActivity.TestListItem ( ) ) ; } return java.util.List<org.solovyev.android.list.ListAdapterActivity.TestListItem> ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { final java.util.Random java.util.Random = new java.util.Random ( new java.util.Date ( ) . long ( ) ) ; int int = int ; while ( int > NUMBER ) { final int int = java.util.Random . int ( org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> . getCount ( ) ) ; org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> . removeAt ( int ) ; int -- ; } }  <METHOD_END>
<METHOD_START> public void ( ) {		}  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public org.solovyev.android.list.OnClickAction org.solovyev.android.list.OnClickAction ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public org.solovyev.android.list.OnClickAction org.solovyev.android.list.OnClickAction ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.list.View org.solovyev.android.list.View ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull View org.solovyev.android.list.View ) { return org.solovyev.android.list.View ( org.solovyev.android.list.Context ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( long ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.list.View org.solovyev.android.list.View ( @ Nonnull Context org.solovyev.android.list.Context ) { return new View ( org.solovyev.android.list.Context ) ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> < org.solovyev.android.list.ListAdapterActivity.TestListItem > org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> ( ) { return org.solovyev.android.list.ListItemAdapter<org.solovyev.android.list.ListAdapterActivity.TestListItem> ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull Context org.solovyev.android.list.Context , @ Nonnull java.util.List<? extends org.solovyev.android.list.ListAdapterActivity.TestListItem> < ? extends org.solovyev.android.list.ListAdapterActivity.TestListItem > java.util.List<? extends org.solovyev.android.list.ListAdapterActivity.TestListItem> ) { super( org.solovyev.android.list.Context , java.util.List<> ); }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override protected java.util.Comparator<? super org.solovyev.android.list.ListAdapterActivity.TestListItem> < ? super org.solovyev.android.list.ListAdapterActivity.TestListItem > java.util.Comparator<? super org.solovyev.android.list.ListAdapterActivity.TestListItem> ( ) { return new java.util.Comparator<org.solovyev.android.list.ListAdapterActivity.TestListItem> < org.solovyev.android.list.ListAdapterActivity.TestListItem > ( ) { @ java.lang.Override public int int ( org.solovyev.android.list.ListAdapterActivity.TestListItem org.solovyev.android.list.ListAdapterActivity.TestListItem , org.solovyev.android.list.ListAdapterActivity.TestListItem org.solovyev.android.list.ListAdapterActivity.TestListItem ) { return org.solovyev.android.list.ListAdapterActivity.TestListItem . java.lang.String ( ) . int ( org.solovyev.android.list.ListAdapterActivity.TestListItem . java.lang.String ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( org.solovyev.android.list.ListAdapterActivity.TestListItem org.solovyev.android.list.ListAdapterActivity.TestListItem , org.solovyev.android.list.ListAdapterActivity.TestListItem org.solovyev.android.list.ListAdapterActivity.TestListItem ) { return org.solovyev.android.list.ListAdapterActivity.TestListItem . java.lang.String ( ) . int ( org.solovyev.android.list.ListAdapterActivity.TestListItem . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.ads.Bundle ) { super. onCreate ( org.solovyev.android.samples.ads.Bundle ) ; setContentView ( R . layout . acl_ads_layout ) ; final ViewGroup org.solovyev.android.samples.ads.ViewGroup = ( ViewGroup ) findViewById ( R . id . acl_ads_linearlayout ) ; AdsController . getInstance ( ) . inflateAd ( this , org.solovyev.android.samples.ads.ViewGroup , R . id . acl_ads_advertisement_framelayout ) ; BillingController . registerObserver ( org.solovyev.android.samples.ads.SamplesAdsActivity.SamplesBillingObserver ) ; final View org.solovyev.android.samples.ads.View = org.solovyev.android.samples.ads.ViewGroup . findViewById ( R . id . acl_ads_remove_advertisement_button ) ; if ( AdsController . getInstance ( ) . isAdFree ( this ) ) { org.solovyev.android.samples.ads.View . setEnabled ( false ) ; } org.solovyev.android.samples.ads.View . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.samples.ads.View ) { BillingController . requestPurchase ( org.solovyev.android.samples.ads.SamplesAdsActivity .this , ADS_FREE_PRODUCT ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.samples.ads.View ) { BillingController . requestPurchase ( org.solovyev.android.samples.ads.SamplesAdsActivity .this , ADS_FREE_PRODUCT ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { BillingController . unregisterObserver ( org.solovyev.android.samples.ads.SamplesAdsActivity.SamplesBillingObserver ) ; super. onDestroy ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull PendingIntent org.solovyev.android.samples.ads.PendingIntent ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode org.solovyev.android.samples.ads.ResponseCode ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Transaction . Transaction Transaction.PurchaseState ) { if ( ADS_FREE_PRODUCT . equals ( java.lang.String ) ) { switch ( Transaction.PurchaseState ) { case PURCHASED : case CANCELLED : case REFUNDED : Activities . restartActivity ( org.solovyev.android.samples.ads.SamplesAdsActivity .this ) ; break; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ResponseCode org.solovyev.android.samples.ads.ResponseCode ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ResponseCode org.solovyev.android.samples.ads.ResponseCode ) {		}  <METHOD_END>
<METHOD_START> @ Nonnull java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull DbItem org.solovyev.android.samples.db.DbItem );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( ! ( java.lang.Object instanceof org.solovyev.android.samples.db.DbItemImpl ) ) return false ; org.solovyev.android.samples.db.DbItemImpl org.solovyev.android.samples.db.DbItemImpl = ( org.solovyev.android.samples.db.DbItemImpl ) java.lang.Object ; if ( ! java.lang.String . boolean ( org.solovyev.android.samples.db.DbItemImpl . java.lang.String ) ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.lang.String . int ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public void ( @ Nonnull DbItem org.solovyev.android.samples.db.DbItem ) { this . org.solovyev.android.samples.db.DbItem = org.solovyev.android.samples.db.DbItem ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.db.OnClickAction org.solovyev.android.samples.db.OnClickAction ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.db.OnClickAction org.solovyev.android.samples.db.OnClickAction ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.db.View org.solovyev.android.samples.db.View ( @ Nonnull Context org.solovyev.android.samples.db.Context , @ Nonnull View org.solovyev.android.samples.db.View ) { if ( this . java.lang.String ( ) . boolean ( org.solovyev.android.samples.db.View . getTag ( ) ) ) { void ( org.solovyev.android.samples.db.Context , ( TextView ) org.solovyev.android.samples.db.View ) ; return org.solovyev.android.samples.db.View ; } else { return org.solovyev.android.samples.db.View ( org.solovyev.android.samples.db.Context ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.db.View org.solovyev.android.samples.db.View ( @ Nonnull Context org.solovyev.android.samples.db.Context ) { final TextView org.solovyev.android.samples.db.TextView = TextViewBuilder . newInstance ( R . layout . acl_db_list_item , java.lang.String ( ) ) . build ( org.solovyev.android.samples.db.Context ) ; void ( org.solovyev.android.samples.db.Context , org.solovyev.android.samples.db.TextView ) ; return org.solovyev.android.samples.db.TextView ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull Context org.solovyev.android.samples.db.Context , @ Nonnull TextView org.solovyev.android.samples.db.TextView ) { org.solovyev.android.samples.db.TextView . setText ( org.solovyev.android.samples.db.DbItem . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( ! ( java.lang.Object instanceof org.solovyev.android.samples.db.DbItemListItem ) ) return false ; org.solovyev.android.samples.db.DbItemListItem org.solovyev.android.samples.db.DbItemListItem = ( org.solovyev.android.samples.db.DbItemListItem ) java.lang.Object ; if ( ! org.solovyev.android.samples.db.DbItem . equals ( org.solovyev.android.samples.db.DbItemListItem . org.solovyev.android.samples.db.DbItem ) ) return false ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return org.solovyev.android.samples.db.DbItem . hashCode ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull Context org.solovyev.android.samples.db.Context ) { synchronized ( java.util.List<org.solovyev.android.samples.db.DbItem> ) { if ( java.util.List<org.solovyev.android.samples.db.DbItem> . isEmpty ( ) ) { java.util.List<org.solovyev.android.samples.db.DbItem> . addAll ( org.solovyev.android.samples.db.DbItemDao ( ) . loadAll ( ) ) ; } return java.util.Collections . java.util.List<org.solovyev.android.samples.db.DbItem> ( java.util.List<org.solovyev.android.samples.db.DbItem> ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Context org.solovyev.android.samples.db.Context ) { final java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ; synchronized ( java.util.List<org.solovyev.android.samples.db.DbItem> ) { java.util.List<org.solovyev.android.samples.db.DbItem> = new java.util.ArrayList<org.solovyev.android.samples.db.DbItem> < DbItem > ( java.util.List<org.solovyev.android.samples.db.DbItem> ( org.solovyev.android.samples.db.Context ) ) ; } java.lang.String = java.lang.String . java.lang.String ( ) ; for ( java.util.Iterator<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.Iterator<org.solovyev.android.samples.db.DbItem> = java.util.List<org.solovyev.android.samples.db.DbItem> . iterator ( ) ; java.util.Iterator<org.solovyev.android.samples.db.DbItem> . hasNext ( ) ; ) { final DbItem org.solovyev.android.samples.db.DbItem = java.util.Iterator<org.solovyev.android.samples.db.DbItem> . next ( ) ; if ( ! org.solovyev.android.samples.db.DbItem . getName ( ) . toLowerCase ( ) . startsWith ( java.lang.String ) ) { java.util.Iterator<org.solovyev.android.samples.db.DbItem> . remove ( ) ; } } return java.util.List<org.solovyev.android.samples.db.DbItem> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull DbItem org.solovyev.android.samples.db.DbItem , @ Nonnull Context org.solovyev.android.samples.db.Context ) { synchronized ( java.util.List<org.solovyev.android.samples.db.DbItem> ) { org.solovyev.android.samples.db.DbItemDao ( ) . insert ( org.solovyev.android.samples.db.DbItem ) ; java.util.List<org.solovyev.android.samples.db.DbItem> . add ( org.solovyev.android.samples.db.DbItem ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Context org.solovyev.android.samples.db.Context ) { synchronized ( java.util.List<org.solovyev.android.samples.db.DbItem> ) { final java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> = new java.util.ArrayList<org.solovyev.android.samples.db.DbItem> < DbItem > ( ) ; org.solovyev.android.samples.db.DbItemDao ( ) . removeByName ( java.lang.String ) ; for ( java.util.Iterator<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.Iterator<org.solovyev.android.samples.db.DbItem> = java.util.List<org.solovyev.android.samples.db.DbItem> . iterator ( ) ; java.util.Iterator<org.solovyev.android.samples.db.DbItem> . hasNext ( ) ; ) { final DbItem org.solovyev.android.samples.db.DbItem = java.util.Iterator<org.solovyev.android.samples.db.DbItem> . next ( ) ; if ( java.lang.String . boolean ( org.solovyev.android.samples.db.DbItem . getName ( ) ) ) { java.util.Iterator<org.solovyev.android.samples.db.DbItem> . remove ( ) ; java.util.List<org.solovyev.android.samples.db.DbItem> . add ( org.solovyev.android.samples.db.DbItem ) ; } } return java.util.List<org.solovyev.android.samples.db.DbItem> ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.samples.db.DbItemDao org.solovyev.android.samples.db.DbItemDao ( ) { return ( ( Locator ) App . getLocator ( ) ) . getDbItemDao ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull Context org.solovyev.android.samples.db.Context );  <METHOD_END>
<METHOD_START> @ Nonnull java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Context org.solovyev.android.samples.db.Context );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull DbItem org.solovyev.android.samples.db.DbItem , @ Nonnull Context org.solovyev.android.samples.db.Context );  <METHOD_END>
<METHOD_START> @ Nonnull java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Context org.solovyev.android.samples.db.Context );  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.db.Bundle ) { super. onCreate ( org.solovyev.android.samples.db.Bundle ) ; setContentView ( R . layout . acl_db_layout ) ; org.solovyev.android.samples.db.Button = ( Button ) findViewById ( R . id . add_item_button ) ; org.solovyev.android.samples.db.EditText = ( EditText ) findViewById ( R . id . add_item_name ) ; org.solovyev.android.samples.db.Button = ( Button ) findViewById ( R . id . remove_item_button ) ; org.solovyev.android.samples.db.EditText = ( EditText ) findViewById ( R . id . remove_item_name ) ; org.solovyev.android.samples.db.EditText = ( EditText ) findViewById ( R . id . item_filter ) ; org.solovyev.android.samples.db.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.samples.db.View ) { final java.lang.String java.lang.String = org.solovyev.android.samples.db.EditText . getText ( ) . toString ( ) ; if ( Strings . isEmpty ( java.lang.String ) ) { Toast . makeText ( org.solovyev.android.samples.db.SamplesDbActivity .this , getString ( R . string . name_is_empty ) , Toast . LENGTH_SHORT ) . show ( ) ; } else { void ( java.lang.String ) ; } } } ) ; org.solovyev.android.samples.db.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.samples.db.View ) { final java.lang.String java.lang.String = org.solovyev.android.samples.db.EditText . getText ( ) . toString ( ) ; if ( Strings . isEmpty ( java.lang.String ) ) { Toast . makeText ( org.solovyev.android.samples.db.SamplesDbActivity .this , getString ( R . string . name_is_empty ) , Toast . LENGTH_SHORT ) . show ( ) ; } else { void ( java.lang.String ) ; } } } ) ; org.solovyev.android.samples.db.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {			} @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {			} @ java.lang.Override public void void ( Editable org.solovyev.android.samples.db.Editable ) { final java.lang.String java.lang.String = org.solovyev.android.samples.db.Editable . toString ( ) ; final ListItemAdapter org.solovyev.android.samples.db.ListItemAdapter = org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) ; org.solovyev.android.samples.db.ListItemAdapter . clear ( ) ; void ( java.lang.String ) ; } } ) ; ListItemAdapter . createAndAttach ( this , new java.util.ArrayList<org.solovyev.android.samples.db.ListItem> < ListItem > ( ) ) ; void ( null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.samples.db.View ) { final java.lang.String java.lang.String = org.solovyev.android.samples.db.EditText . getText ( ) . toString ( ) ; if ( Strings . isEmpty ( java.lang.String ) ) { Toast . makeText ( org.solovyev.android.samples.db.SamplesDbActivity .this , getString ( R . string . name_is_empty ) , Toast . LENGTH_SHORT ) . show ( ) ; } else { void ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.samples.db.View ) { final java.lang.String java.lang.String = org.solovyev.android.samples.db.EditText . getText ( ) . toString ( ) ; if ( Strings . isEmpty ( java.lang.String ) ) { Toast . makeText ( org.solovyev.android.samples.db.SamplesDbActivity .this , getString ( R . string . name_is_empty ) , Toast . LENGTH_SHORT ) . show ( ) ; } else { void ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {			}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {			}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Editable org.solovyev.android.samples.db.Editable ) { final java.lang.String java.lang.String = org.solovyev.android.samples.db.Editable . toString ( ) ; final ListItemAdapter org.solovyev.android.samples.db.ListItemAdapter = org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) ; org.solovyev.android.samples.db.ListItemAdapter . clear ( ) ; void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nullable final java.lang.String java.lang.String ) { new CommonAsyncTask < java.lang.Void , java.lang.Void , java.util.List<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > > ( this ) { @ java.lang.Override protected java.util.List<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > java.util.List<org.solovyev.android.samples.db.DbItemListItem> ( @ Nonnull java.util.List<java.lang.Void> < java.lang.Void > java.util.List<java.lang.Void> ) { final Context org.solovyev.android.samples.db.Context = getContext ( ) ; final java.util.List<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > java.util.List<org.solovyev.android.samples.db.DbItemListItem> ; if ( org.solovyev.android.samples.db.Context != null ) { java.util.List<org.solovyev.android.samples.db.DbItemListItem> = new java.util.ArrayList<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > ( ) ; final java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ; if ( Strings . isEmpty ( java.lang.String ) ) { java.util.List<org.solovyev.android.samples.db.DbItem> = org.solovyev.android.samples.db.DbItemService ( ) . getAllDbItems ( org.solovyev.android.samples.db.Context ) ; } else { assert java.lang.String != null ; java.util.List<org.solovyev.android.samples.db.DbItem> = org.solovyev.android.samples.db.DbItemService ( ) . getAllStartsWith ( java.lang.String , org.solovyev.android.samples.db.Context ) ; } for ( DbItem org.solovyev.android.samples.db.DbItem : java.util.List<org.solovyev.android.samples.db.DbItem> ) { java.util.List<org.solovyev.android.samples.db.DbItemListItem> . add ( new DbItemListItem ( org.solovyev.android.samples.db.DbItem ) ) ; } } else { java.util.List<org.solovyev.android.samples.db.DbItemListItem> = java.util.Collections . java.util.List<java.lang.Object> ( ) ; } return java.util.List<org.solovyev.android.samples.db.DbItemListItem> ; } @ java.lang.Override protected void void ( @ Nullable java.util.List<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > java.util.List<org.solovyev.android.samples.db.DbItemListItem> ) { org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) . addAll ( java.util.List<org.solovyev.android.samples.db.DbItemListItem> ) ; } @ java.lang.Override protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } } . execute ( ( java.lang.Void ) null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > java.util.List<org.solovyev.android.samples.db.DbItemListItem> ( @ Nonnull java.util.List<java.lang.Void> < java.lang.Void > java.util.List<java.lang.Void> ) { final Context org.solovyev.android.samples.db.Context = getContext ( ) ; final java.util.List<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > java.util.List<org.solovyev.android.samples.db.DbItemListItem> ; if ( org.solovyev.android.samples.db.Context != null ) { java.util.List<org.solovyev.android.samples.db.DbItemListItem> = new java.util.ArrayList<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > ( ) ; final java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ; if ( Strings . isEmpty ( java.lang.String ) ) { java.util.List<org.solovyev.android.samples.db.DbItem> = org.solovyev.android.samples.db.DbItemService ( ) . getAllDbItems ( org.solovyev.android.samples.db.Context ) ; } else { assert java.lang.String != null ; java.util.List<org.solovyev.android.samples.db.DbItem> = org.solovyev.android.samples.db.DbItemService ( ) . getAllStartsWith ( java.lang.String , org.solovyev.android.samples.db.Context ) ; } for ( DbItem org.solovyev.android.samples.db.DbItem : java.util.List<org.solovyev.android.samples.db.DbItem> ) { java.util.List<org.solovyev.android.samples.db.DbItemListItem> . add ( new DbItemListItem ( org.solovyev.android.samples.db.DbItem ) ) ; } } else { java.util.List<org.solovyev.android.samples.db.DbItemListItem> = java.util.Collections . java.util.List<java.lang.Object> ( ) ; } return java.util.List<org.solovyev.android.samples.db.DbItemListItem> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nullable java.util.List<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > java.util.List<org.solovyev.android.samples.db.DbItemListItem> ) { org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) . addAll ( java.util.List<org.solovyev.android.samples.db.DbItemListItem> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Nonnull private org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> < DbItemListItem > org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) { return ( ListItemAdapter < DbItemListItem > ) getListView ( ) . getAdapter ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull java.lang.String java.lang.String ) { new CommonAsyncTask < java.lang.String , java.lang.Void , java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > > ( this ) { @ java.lang.Override protected java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { assert java.util.List<java.lang.String> . int ( ) == NUMBER ; final java.lang.String java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; final Context org.solovyev.android.samples.db.Context = getContext ( ) ; if ( org.solovyev.android.samples.db.Context != null ) { return org.solovyev.android.samples.db.DbItemService ( ) . removeItemByName ( java.lang.String , org.solovyev.android.samples.db.Context ) ; } return java.util.Collections . java.util.List<org.solovyev.android.samples.db.DbItem> ( ) ; } @ java.lang.Override protected void void ( @ Nullable java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ) { assert java.util.List<org.solovyev.android.samples.db.DbItem> != null ; org.solovyev.android.samples.db.SamplesDbActivity .this . org.solovyev.android.samples.db.EditText . setText ( STRING ) ; Toast . makeText ( getContext ( ) , getString ( R . string . items_removed , java.util.List<org.solovyev.android.samples.db.DbItem> . size ( ) ) , Toast . LENGTH_SHORT ) . show ( ) ; final ListItemAdapter < DbItemListItem > org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> = org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) ; for ( DbItem org.solovyev.android.samples.db.DbItem : java.util.List<org.solovyev.android.samples.db.DbItem> ) { org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> . remove ( new DbItemListItem ( org.solovyev.android.samples.db.DbItem ) ) ; } } @ java.lang.Override protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } } . execute ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { assert java.util.List<java.lang.String> . int ( ) == NUMBER ; final java.lang.String java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; final Context org.solovyev.android.samples.db.Context = getContext ( ) ; if ( org.solovyev.android.samples.db.Context != null ) { return org.solovyev.android.samples.db.DbItemService ( ) . removeItemByName ( java.lang.String , org.solovyev.android.samples.db.Context ) ; } return java.util.Collections . java.util.List<org.solovyev.android.samples.db.DbItem> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nullable java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ) { assert java.util.List<org.solovyev.android.samples.db.DbItem> != null ; org.solovyev.android.samples.db.SamplesDbActivity .this . org.solovyev.android.samples.db.EditText . setText ( STRING ) ; Toast . makeText ( getContext ( ) , getString ( R . string . items_removed , java.util.List<org.solovyev.android.samples.db.DbItem> . size ( ) ) , Toast . LENGTH_SHORT ) . show ( ) ; final ListItemAdapter < DbItemListItem > org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> = org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) ; for ( DbItem org.solovyev.android.samples.db.DbItem : java.util.List<org.solovyev.android.samples.db.DbItem> ) { org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> . remove ( new DbItemListItem ( org.solovyev.android.samples.db.DbItem ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull java.lang.String java.lang.String ) { new CommonAsyncTask < java.lang.String , java.lang.Void , DbItem > ( this ) { @ java.lang.Override protected org.solovyev.android.samples.db.DbItem org.solovyev.android.samples.db.DbItem ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { assert java.util.List<java.lang.String> . int ( ) == NUMBER ; final java.lang.String java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; final DbItemImpl org.solovyev.android.samples.db.DbItemImpl = new DbItemImpl ( java.lang.String ) ; final Context org.solovyev.android.samples.db.Context = getContext ( ) ; if ( org.solovyev.android.samples.db.Context != null ) { org.solovyev.android.samples.db.DbItemService ( ) . addItem ( org.solovyev.android.samples.db.DbItemImpl , org.solovyev.android.samples.db.Context ) ; } return org.solovyev.android.samples.db.DbItemImpl ; } @ java.lang.Override protected void void ( @ Nullable DbItem org.solovyev.android.samples.db.DbItem ) { assert org.solovyev.android.samples.db.DbItem != null ; org.solovyev.android.samples.db.SamplesDbActivity .this . org.solovyev.android.samples.db.EditText . setText ( STRING ) ; Toast . makeText ( getContext ( ) , getString ( R . string . item_saved ) , Toast . LENGTH_SHORT ) . show ( ) ; org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) . add ( new DbItemListItem ( org.solovyev.android.samples.db.DbItem ) ) ; } @ java.lang.Override protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } } . execute ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.samples.db.DbItem org.solovyev.android.samples.db.DbItem ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { assert java.util.List<java.lang.String> . int ( ) == NUMBER ; final java.lang.String java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; final DbItemImpl org.solovyev.android.samples.db.DbItemImpl = new DbItemImpl ( java.lang.String ) ; final Context org.solovyev.android.samples.db.Context = getContext ( ) ; if ( org.solovyev.android.samples.db.Context != null ) { org.solovyev.android.samples.db.DbItemService ( ) . addItem ( org.solovyev.android.samples.db.DbItemImpl , org.solovyev.android.samples.db.Context ) ; } return org.solovyev.android.samples.db.DbItemImpl ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nullable DbItem org.solovyev.android.samples.db.DbItem ) { assert org.solovyev.android.samples.db.DbItem != null ; org.solovyev.android.samples.db.SamplesDbActivity .this . org.solovyev.android.samples.db.EditText . setText ( STRING ) ; Toast . makeText ( getContext ( ) , getString ( R . string . item_saved ) , Toast . LENGTH_SHORT ) . show ( ) ; org.solovyev.android.samples.db.ListItemAdapter<org.solovyev.android.samples.db.DbItemListItem> ( ) . add ( new DbItemListItem ( org.solovyev.android.samples.db.DbItem ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull java.lang.Exception java.lang.Exception ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.samples.db.DbItemService org.solovyev.android.samples.db.DbItemService ( ) { return ( ( Locator ) App . getLocator ( ) ) . getDbItemService ( ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.samples.db.Context , @ Nonnull SQLiteOpenHelper org.solovyev.android.samples.db.SQLiteOpenHelper ) { super( org.solovyev.android.samples.db.Context , org.solovyev.android.samples.db.SQLiteOpenHelper ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( ) { return AndroidDbUtils . doDbQuery ( getSqliteOpenHelper ( ) , new org.solovyev.android.samples.db.SqliteDbItemDao.LoadAll ( getContext ( ) , getSqliteOpenHelper ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull DbItem org.solovyev.android.samples.db.DbItem ) { AndroidDbUtils . doDbExec ( getSqliteOpenHelper ( ) , new org.solovyev.android.samples.db.SqliteDbItemDao.Insert ( org.solovyev.android.samples.db.DbItem ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.String java.lang.String ) { AndroidDbUtils . doDbExec ( getSqliteOpenHelper ( ) , new org.solovyev.android.samples.db.SqliteDbItemDao.RemoveByName ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( @ Nonnull SQLiteDatabase org.solovyev.android.samples.db.SQLiteDatabase ) { final java.lang.String java.lang.String = getNotNullObject ( ) ; return org.solovyev.android.samples.db.SQLiteDatabase . delete ( STRING , STRING , new java.lang.String [] { java.lang.String } ) ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull DbItem org.solovyev.android.samples.db.DbItem ) { super( org.solovyev.android.samples.db.DbItem ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( @ Nonnull SQLiteDatabase org.solovyev.android.samples.db.SQLiteDatabase ) { final DbItem org.solovyev.android.samples.db.DbItem = getNotNullObject ( ) ; final ContentValues org.solovyev.android.samples.db.ContentValues = new ContentValues ( ) ; org.solovyev.android.samples.db.ContentValues . put ( STRING , org.solovyev.android.samples.db.DbItem . getName ( ) ) ; return org.solovyev.android.samples.db.SQLiteDatabase . insert ( STRING , null , org.solovyev.android.samples.db.ContentValues ) ; }  <METHOD_END>
<METHOD_START> protected void ( @ Nonnull Context org.solovyev.android.samples.db.Context , @ Nonnull SQLiteOpenHelper org.solovyev.android.samples.db.SQLiteOpenHelper ) { super( org.solovyev.android.samples.db.Context , org.solovyev.android.samples.db.SQLiteOpenHelper ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.db.Cursor org.solovyev.android.samples.db.Cursor ( @ Nonnull SQLiteDatabase org.solovyev.android.samples.db.SQLiteDatabase ) { return org.solovyev.android.samples.db.SQLiteDatabase . query ( STRING , null , null , null , null , null , null ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.samples.db.DbItem> < DbItem > java.util.List<org.solovyev.android.samples.db.DbItem> ( @ Nonnull Cursor org.solovyev.android.samples.db.Cursor ) { return new ListMapper < DbItem > ( org.solovyev.android.samples.db.SqliteDbItemDao.DbItemMapper . org.solovyev.android.samples.db.SqliteDbItemDao.DbItemMapper ( ) ) . convert ( org.solovyev.android.samples.db.Cursor ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {		}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.samples.db.SqliteDbItemDao.DbItemMapper org.solovyev.android.samples.db.SqliteDbItemDao.DbItemMapper ( ) { return org.solovyev.android.samples.db.SqliteDbItemDao.DbItemMapper ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.db.DbItem org.solovyev.android.samples.db.DbItem ( @ Nonnull Cursor org.solovyev.android.samples.db.Cursor ) { final java.lang.String java.lang.String = org.solovyev.android.samples.db.Cursor . getString ( NUMBER ) ; return new DbItemImpl ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull ImageLoader org.solovyev.android.samples.http.ImageLoader ) { this . java.lang.String = java.lang.String ; this . org.solovyev.android.samples.http.ImageLoader = org.solovyev.android.samples.http.ImageLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.http.OnClickAction org.solovyev.android.samples.http.OnClickAction ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.http.OnClickAction org.solovyev.android.samples.http.OnClickAction ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.http.View org.solovyev.android.samples.http.View ( @ Nonnull Context org.solovyev.android.samples.http.Context , @ Nonnull View org.solovyev.android.samples.http.View ) { if ( java.lang.String ( ) . boolean ( org.solovyev.android.samples.http.View . getTag ( ) ) ) { void ( org.solovyev.android.samples.http.Context , org.solovyev.android.samples.http.View ) ; return org.solovyev.android.samples.http.View ; } else { return org.solovyev.android.samples.http.View ( org.solovyev.android.samples.http.Context ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull Context org.solovyev.android.samples.http.Context , @ Nonnull View org.solovyev.android.samples.http.View ) { final ImageView org.solovyev.android.samples.http.ImageView = ( ImageView ) org.solovyev.android.samples.http.View . findViewById ( R . id . http_item_icon ) ; org.solovyev.android.samples.http.ImageLoader . loadImage ( java.lang.String , org.solovyev.android.samples.http.ImageView , R . drawable . icon ) ; final TextView org.solovyev.android.samples.http.TextView = ( TextView ) org.solovyev.android.samples.http.View . findViewById ( R . id . http_item_text ) ; org.solovyev.android.samples.http.TextView . setText ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.http.View org.solovyev.android.samples.http.View ( @ Nonnull Context org.solovyev.android.samples.http.Context ) { final View org.solovyev.android.samples.http.View = ViewFromLayoutBuilder . newInstance ( R . layout . acl_http_list_item ) . build ( org.solovyev.android.samples.http.Context ) ; org.solovyev.android.samples.http.View . setTag ( java.lang.String ( ) ) ; void ( org.solovyev.android.samples.http.Context , org.solovyev.android.samples.http.View ) ; return org.solovyev.android.samples.http.View ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.http.Bundle ) { super. onCreate ( org.solovyev.android.samples.http.Bundle ) ; setContentView ( R . layout . acl_http_layout ) ; this . org.solovyev.android.samples.http.ImageLoader = new CachingImageLoader ( this , STRING , new Handler ( ) ) ; final java.util.List<org.solovyev.android.samples.http.HttpListItem> < HttpListItem > java.util.List<org.solovyev.android.samples.http.HttpListItem> = new java.util.ArrayList<org.solovyev.android.samples.http.HttpListItem> < HttpListItem > ( ) ; for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { java.util.List<org.solovyev.android.samples.http.HttpListItem> . add ( new HttpListItem ( java.lang.String + java.lang.String , this . org.solovyev.android.samples.http.ImageLoader ) ) ; } ListItemAdapter . createAndAttach ( this , java.util.List<org.solovyev.android.samples.http.HttpListItem> ) ; final Button org.solovyev.android.samples.http.Button = ( Button ) findViewById ( R . id . fetch_data_button ) ; org.solovyev.android.samples.http.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.samples.http.View ) { new CommonAsyncTask < java.lang.String , java.lang.Void , java.lang.String > ( org.solovyev.android.samples.http.SamplesHttpActivity .this ) { @ java.lang.Override protected java.lang.String java.lang.String ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { assert java.util.List<java.lang.String> . int ( ) == NUMBER ; try { return HttpTransactions . execute ( new org.solovyev.android.samples.http.SamplesHttpActivity.FetchHttpData ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ) ; } catch ( java.io.IOException java.io.IOException ) { throwException ( java.io.IOException ) ; } return STRING ; } @ java.lang.Override protected void void ( @ Nullable final java.lang.String java.lang.String ) { final Activity org.solovyev.android.samples.http.Activity = ( Activity ) getContext ( ) ; Threads . tryRunOnUiThread ( org.solovyev.android.samples.http.Activity , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Toast . makeText ( org.solovyev.android.samples.http.Activity , getString ( R . string . acl_http_response ) + STRING + java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; } @ java.lang.Override protected void void ( @ Nonnull final java.lang.Exception java.lang.Exception ) { final Activity org.solovyev.android.samples.http.Activity = ( Activity ) getContext ( ) ; Threads . tryRunOnUiThread ( org.solovyev.android.samples.http.Activity , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; } } . execute ( java.lang.String ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.samples.http.View ) { new CommonAsyncTask < java.lang.String , java.lang.Void , java.lang.String > ( org.solovyev.android.samples.http.SamplesHttpActivity .this ) { @ java.lang.Override protected java.lang.String java.lang.String ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { assert java.util.List<java.lang.String> . int ( ) == NUMBER ; try { return HttpTransactions . execute ( new org.solovyev.android.samples.http.SamplesHttpActivity.FetchHttpData ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ) ; } catch ( java.io.IOException java.io.IOException ) { throwException ( java.io.IOException ) ; } return STRING ; } @ java.lang.Override protected void void ( @ Nullable final java.lang.String java.lang.String ) { final Activity org.solovyev.android.samples.http.Activity = ( Activity ) getContext ( ) ; Threads . tryRunOnUiThread ( org.solovyev.android.samples.http.Activity , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Toast . makeText ( org.solovyev.android.samples.http.Activity , getString ( R . string . acl_http_response ) + STRING + java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; } @ java.lang.Override protected void void ( @ Nonnull final java.lang.Exception java.lang.Exception ) { final Activity org.solovyev.android.samples.http.Activity = ( Activity ) getContext ( ) ; Threads . tryRunOnUiThread ( org.solovyev.android.samples.http.Activity , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; } } . execute ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { assert java.util.List<java.lang.String> . int ( ) == NUMBER ; try { return HttpTransactions . execute ( new org.solovyev.android.samples.http.SamplesHttpActivity.FetchHttpData ( java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ) ) ; } catch ( java.io.IOException java.io.IOException ) { throwException ( java.io.IOException ) ; } return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nullable final java.lang.String java.lang.String ) { final Activity org.solovyev.android.samples.http.Activity = ( Activity ) getContext ( ) ; Threads . tryRunOnUiThread ( org.solovyev.android.samples.http.Activity , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Toast . makeText ( org.solovyev.android.samples.http.Activity , getString ( R . string . acl_http_response ) + STRING + java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Toast . makeText ( org.solovyev.android.samples.http.Activity , getString ( R . string . acl_http_response ) + STRING + java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull final java.lang.Exception java.lang.Exception ) { final Activity org.solovyev.android.samples.http.Activity = ( Activity ) getContext ( ) ; Threads . tryRunOnUiThread ( org.solovyev.android.samples.http.Activity , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Toast . makeText ( getContext ( ) , java.lang.Exception . java.lang.String ( ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull java.lang.String java.lang.String ) { super( java.lang.String , HttpMethod . GET ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull HttpResponse org.solovyev.android.samples.http.HttpResponse ) { try { return EntityUtils . toString ( org.solovyev.android.samples.http.HttpResponse . getEntity ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { throw new HttpRuntimeIoException ( java.io.IOException ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.util.List<org.solovyev.android.samples.http.NameValuePair> < NameValuePair > java.util.List<org.solovyev.android.samples.http.NameValuePair> ( ) { return java.util.Collections . java.util.List<org.solovyev.android.samples.http.NameValuePair> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.keyboard.Bundle ) { super. onCreate ( org.solovyev.android.samples.keyboard.Bundle ) ; setContentView ( R . layout . acl_keyboard_layout ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.samples.SQLiteOpenHelper org.solovyev.android.samples.SQLiteOpenHelper ( )  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.samples.DbItemDao org.solovyev.android.samples.DbItemDao ( )  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.samples.DbItemService org.solovyev.android.samples.DbItemService ( )  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.samples.TaskService org.solovyev.android.samples.TaskService ( )  <METHOD_END>
<METHOD_START> public void ( int int , int int ) { this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.menu.OnClickAction org.solovyev.android.samples.menu.OnClickAction ( ) { return new OnClickAction ( ) { @ java.lang.Override public void void ( @ Nonnull Context org.solovyev.android.samples.menu.Context , @ Nonnull ListAdapter < ? extends ListItem > org.solovyev.android.samples.menu.ListAdapter<? extends org.solovyev.android.samples.menu.ListItem> ) { Toast . makeText ( org.solovyev.android.samples.menu.Context , org.solovyev.android.samples.menu.Context . getString ( R . string . long_press_to_open_menu ) , Toast . LENGTH_SHORT ) . show ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Context org.solovyev.android.samples.menu.Context , @ Nonnull ListAdapter < ? extends ListItem > org.solovyev.android.samples.menu.ListAdapter<? extends org.solovyev.android.samples.menu.ListItem> ) { Toast . makeText ( org.solovyev.android.samples.menu.Context , org.solovyev.android.samples.menu.Context . getString ( R . string . long_press_to_open_menu ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.menu.OnClickAction org.solovyev.android.samples.menu.OnClickAction ( ) { return new SimpleMenuOnClick < org.solovyev.android.samples.menu.MenuListItem > ( java.util.Arrays . java.util.List<org.solovyev.android.samples.menu.MenuListItem.MenuItemMenu> ( org.solovyev.android.samples.menu.MenuListItem.MenuItemMenu . org.solovyev.android.samples.menu.MenuListItem.MenuItemMenu[] ( ) ) , this , java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.menu.View org.solovyev.android.samples.menu.View ( @ Nonnull Context org.solovyev.android.samples.menu.Context , @ Nonnull View org.solovyev.android.samples.menu.View ) { if ( this . java.lang.String ( ) . boolean ( org.solovyev.android.samples.menu.View . getTag ( ) ) ) { void ( org.solovyev.android.samples.menu.Context , ( TextView ) org.solovyev.android.samples.menu.View ) ; return org.solovyev.android.samples.menu.View ; } else { return org.solovyev.android.samples.menu.View ( org.solovyev.android.samples.menu.Context ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.menu.View org.solovyev.android.samples.menu.View ( @ Nonnull Context org.solovyev.android.samples.menu.Context ) { final TextView org.solovyev.android.samples.menu.TextView = TextViewBuilder . newInstance ( R . layout . acl_menu_list_item , java.lang.String ( ) ) . build ( org.solovyev.android.samples.menu.Context ) ; void ( org.solovyev.android.samples.menu.Context , org.solovyev.android.samples.menu.TextView ) ; return org.solovyev.android.samples.menu.TextView ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull Context org.solovyev.android.samples.menu.Context , @ Nonnull TextView org.solovyev.android.samples.menu.TextView ) { org.solovyev.android.samples.menu.TextView . setText ( org.solovyev.android.samples.menu.Context . getString ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ListItemOnClickData < org.solovyev.android.samples.menu.MenuListItem > org.solovyev.android.samples.menu.ListItemOnClickData<org.solovyev.android.samples.menu.MenuListItem> , @ Nonnull Context org.solovyev.android.samples.menu.Context ) { Toast . makeText ( org.solovyev.android.samples.menu.Context , org.solovyev.android.samples.menu.Context . getString ( R . string . show_menu_number_text , java.lang.String . java.lang.String ( org.solovyev.android.samples.menu.ListItemOnClickData<org.solovyev.android.samples.menu.MenuListItem> . getDataObject ( ) . getSortOrder ( ) ) ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull ListItemOnClickData < org.solovyev.android.samples.menu.MenuListItem > org.solovyev.android.samples.menu.ListItemOnClickData<org.solovyev.android.samples.menu.MenuListItem> , @ Nonnull Context org.solovyev.android.samples.menu.Context ) { Toast . makeText ( org.solovyev.android.samples.menu.Context , org.solovyev.android.samples.menu.Context . getString ( R . string . show_menu_name_text , org.solovyev.android.samples.menu.Context . getString ( org.solovyev.android.samples.menu.ListItemOnClickData<org.solovyev.android.samples.menu.MenuListItem> . getDataObject ( ) . captionResId ) ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> private void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull Context org.solovyev.android.samples.menu.Context ) { return org.solovyev.android.samples.menu.Context . getString ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.menu.Bundle ) { super. onCreate ( org.solovyev.android.samples.menu.Bundle ) ; setContentView ( R . layout . acl_menu_layout ) ; Fragments . createFragment ( this , org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment .class , R . id . acl_main_linearlayout , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle org.solovyev.android.samples.menu.Bundle ) { super. onCreate ( org.solovyev.android.samples.menu.Bundle ) ; setHasOptionsMenu ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.samples.menu.View , Bundle org.solovyev.android.samples.menu.Bundle ) { super. onViewCreated ( org.solovyev.android.samples.menu.View , org.solovyev.android.samples.menu.Bundle ) ; final java.util.List<org.solovyev.android.samples.menu.MenuListItem> < MenuListItem > java.util.List<org.solovyev.android.samples.menu.MenuListItem> = new java.util.ArrayList<org.solovyev.android.samples.menu.MenuListItem> < MenuListItem > ( ) ; java.util.List<org.solovyev.android.samples.menu.MenuListItem> . add ( new MenuListItem ( R . string . menu_01 , NUMBER ) ) ; java.util.List<org.solovyev.android.samples.menu.MenuListItem> . add ( new MenuListItem ( R . string . menu_02 , NUMBER ) ) ; java.util.List<org.solovyev.android.samples.menu.MenuListItem> . add ( new MenuListItem ( R . string . menu_03 , NUMBER ) ) ; ListItemAdapter . createAndAttach ( this , java.util.List<org.solovyev.android.samples.menu.MenuListItem> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.menu.ListItemAdapter<org.solovyev.android.samples.menu.MenuListItem> < MenuListItem > org.solovyev.android.samples.menu.ListItemAdapter<org.solovyev.android.samples.menu.MenuListItem> ( ) { return ( ListItemAdapter < MenuListItem > ) super. getListAdapter ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Menu org.solovyev.android.samples.menu.Menu , @ Nonnull MenuInflater org.solovyev.android.samples.menu.MenuInflater ) { if ( this . org.solovyev.android.samples.menu.ActivityMenu<org.solovyev.android.samples.menu.Menu,org.solovyev.android.samples.menu.MenuItem> == null ) { final java.util.List<org.solovyev.android.samples.menu.LabeledMenuItem<org.solovyev.android.samples.menu.MenuItem>> < LabeledMenuItem < MenuItem > > java.util.List<org.solovyev.android.samples.menu.LabeledMenuItem<org.solovyev.android.samples.menu.MenuItem>> = new java.util.ArrayList<org.solovyev.android.samples.menu.LabeledMenuItem<org.solovyev.android.samples.menu.MenuItem>> < LabeledMenuItem < MenuItem > > ( ) ; java.util.Collections . boolean ( java.util.List<org.solovyev.android.samples.menu.LabeledMenuItem<org.solovyev.android.samples.menu.MenuItem>> , SamplesStaticMenu . values ( ) ) ; java.util.List<org.solovyev.android.samples.menu.LabeledMenuItem<org.solovyev.android.samples.menu.MenuItem>> . add ( new org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment.ReverseSortMenuItem ( ) ) ; java.util.List<org.solovyev.android.samples.menu.LabeledMenuItem<org.solovyev.android.samples.menu.MenuItem>> . add ( new org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment.AscSortMenuItem ( ) ) ; this . org.solovyev.android.samples.menu.ActivityMenu<org.solovyev.android.samples.menu.Menu,org.solovyev.android.samples.menu.MenuItem> = ListActivityMenu . fromList ( java.util.List<org.solovyev.android.samples.menu.LabeledMenuItem<org.solovyev.android.samples.menu.MenuItem>> , AndroidMenuHelper . getInstance ( ) , new org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment.MenuFilter ( ) ) ; } this . org.solovyev.android.samples.menu.ActivityMenu<org.solovyev.android.samples.menu.Menu,org.solovyev.android.samples.menu.MenuItem> . onCreateOptionsMenu ( this . getActivity ( ) , org.solovyev.android.samples.menu.Menu ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nullable AMenuItem < MenuItem > org.solovyev.android.samples.menu.AMenuItem<org.solovyev.android.samples.menu.MenuItem> ) { if ( org.solovyev.android.samples.menu.AMenuItem<org.solovyev.android.samples.menu.MenuItem> instanceof org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment.AscSortMenuItem ) { return ! boolean ; } else { return false ; } }  <METHOD_END>
<METHOD_START> private void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( MenuListItem org.solovyev.android.samples.menu.MenuListItem , MenuListItem org.solovyev.android.samples.menu.MenuListItem ) { int int = Objects . compare ( org.solovyev.android.samples.menu.MenuListItem . getSortOrder ( ) , org.solovyev.android.samples.menu.MenuListItem . getSortOrder ( ) ) ; if ( boolean ) { return int ; } else { return - int ; } }  <METHOD_END>
<METHOD_START> public void ( ) { super( R . string . reverse_sort ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull MenuItem org.solovyev.android.samples.menu.MenuItem , @ Nonnull Context org.solovyev.android.samples.menu.Context ) { final org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment = org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment .this ; org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment . boolean = ! org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment . boolean ; org.solovyev.android.samples.menu.ListItemAdapter<org.solovyev.android.samples.menu.MenuListItem> ( ) . sort ( new org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment.ListItemComparator ( org.solovyev.android.samples.menu.SamplesMenuActivity.SamplesListFragment . boolean ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( R . string . asc_menu_item ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull MenuItem org.solovyev.android.samples.menu.MenuItem , @ Nonnull Context org.solovyev.android.samples.menu.Context ) { Toast . makeText ( org.solovyev.android.samples.menu.Context , getString ( R . string . asc_sort_menu_item_text ) , Toast . LENGTH_LONG ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull MenuItem org.solovyev.android.samples.menu.MenuItem ) { return org.solovyev.android.samples.menu.ActivityMenu<org.solovyev.android.samples.menu.Menu,org.solovyev.android.samples.menu.MenuItem> . onOptionsItemSelected ( this . getActivity ( ) , org.solovyev.android.samples.menu.MenuItem ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Menu org.solovyev.android.samples.menu.Menu ) { this . org.solovyev.android.samples.menu.ActivityMenu<org.solovyev.android.samples.menu.Menu,org.solovyev.android.samples.menu.MenuItem> . onPrepareOptionsMenu ( this . getActivity ( ) , org.solovyev.android.samples.menu.Menu ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull MenuItem org.solovyev.android.samples.menu.MenuItem , @ Nonnull Context org.solovyev.android.samples.menu.Context ) { Toast . makeText ( org.solovyev.android.samples.menu.Context , org.solovyev.android.samples.menu.Context . getString ( R . string . show_text_text ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull MenuItem org.solovyev.android.samples.menu.MenuItem , @ Nonnull Context org.solovyev.android.samples.menu.Context ) { Activities . restartActivity ( ( Activity ) org.solovyev.android.samples.menu.Context ) ; }  <METHOD_END>
<METHOD_START> private void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull Context org.solovyev.android.samples.menu.Context ) { return org.solovyev.android.samples.menu.Context . getString ( int ) ; }  <METHOD_END>
<METHOD_START> void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> private void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.samples.prefs.Context , AttributeSet org.solovyev.android.samples.prefs.AttributeSet ) { super( org.solovyev.android.samples.prefs.Context , org.solovyev.android.samples.prefs.AttributeSet , null , false , Country .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.prefs.Bundle ) { super. onCreate ( org.solovyev.android.samples.prefs.Bundle ) ; addPreferencesFromResource ( R . xml . preferences ) ; final SharedPreferences org.solovyev.android.samples.prefs.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( this ) ; org.solovyev.android.samples.prefs.SharedPreferences . registerOnSharedPreferenceChangeListener ( this ) ; void ( Preferences . toBeOrNotTobe . getKey ( ) , getString ( Preferences . toBeOrNotTobe . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) . getCaptionResId ( ) ) ) ; void ( Preferences . integerNumber . getKey ( ) , java.lang.String . java.lang.String ( Preferences . integerNumber . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ) ; void ( Preferences . doubleNumber . getKey ( ) , java.lang.String . java.lang.String ( Preferences . doubleNumber . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ) ; void ( Preferences . country . getKey ( ) , java.lang.String . java.lang.String ( Preferences . country . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ) ; void ( Preferences . floatInterval . getKey ( ) , java.lang.String . java.lang.String ( Preferences . floatInterval . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ) ; void ( Preferences . integerInterval . getKey ( ) , java.lang.String . java.lang.String ( Preferences . integerInterval . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SharedPreferences org.solovyev.android.samples.prefs.SharedPreferences , java.lang.String java.lang.String ) { if ( Preferences . toBeOrNotTobe . getKey ( ) . equals ( java.lang.String ) ) { final java.lang.String java.lang.String = getString ( Preferences . toBeOrNotTobe . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) . getCaptionResId ( ) ) ; void ( java.lang.String , java.lang.String ) ; } if ( Preferences . integerNumber . getKey ( ) . equals ( java.lang.String ) ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( Preferences . integerNumber . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ; void ( java.lang.String , java.lang.String ) ; } if ( Preferences . doubleNumber . getKey ( ) . equals ( java.lang.String ) ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( Preferences . doubleNumber . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ; void ( java.lang.String , java.lang.String ) ; } if ( Preferences . country . getKey ( ) . equals ( java.lang.String ) ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( Preferences . country . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ; void ( java.lang.String , java.lang.String ) ; } if ( Preferences . floatInterval . getKey ( ) . equals ( java.lang.String ) ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( Preferences . floatInterval . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ; void ( java.lang.String , java.lang.String ) ; } if ( Preferences . integerInterval . getKey ( ) . equals ( java.lang.String ) ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( Preferences . integerInterval . getPreference ( org.solovyev.android.samples.prefs.SharedPreferences ) ) ; void ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.String java.lang.String ) { final android . android . android android.preference.Preference = findPreference ( java.lang.String ) ; android.preference.Preference . setSummary ( getString ( R . string . answer ) + STRING + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.Bundle ) { super. onCreate ( org.solovyev.android.samples.Bundle ) ; setContentView ( R . layout . acl_samples_list ) ; final java.util.List<org.solovyev.android.samples.SampleType> < SampleType > java.util.List<org.solovyev.android.samples.SampleType> = new java.util.ArrayList<org.solovyev.android.samples.SampleType> < SampleType > ( ) ; java.util.Collections . boolean ( java.util.List<org.solovyev.android.samples.SampleType> , SampleType . values ( ) ) ; ListItemAdapter . createAndAttach ( this , java.util.List<org.solovyev.android.samples.SampleType> ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onCreate ( ) ; App . init ( this ) ; org.solovyev.android.samples.CommonSQLiteOpenHelper = new CommonSQLiteOpenHelper ( this , org.solovyev.android.samples.SQLiteOpenHelperConfiguration ( ) ) ; org.solovyev.android.samples.DbItemService = new DbItemServiceImpl ( ) ; org.solovyev.android.samples.TaskService = Tasks . newTaskService ( ) ; AdsController . getInstance ( ) . init ( this , java.lang.String , java.lang.String , new SamplesBillingConfiguration ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.SQLiteOpenHelper org.solovyev.android.samples.SQLiteOpenHelper ( ) { return this . org.solovyev.android.samples.CommonSQLiteOpenHelper ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.DbItemDao org.solovyev.android.samples.DbItemDao ( ) { return new SqliteDbItemDao ( this , org.solovyev.android.samples.SQLiteOpenHelper ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.DbItemService org.solovyev.android.samples.DbItemService ( ) { return this . org.solovyev.android.samples.DbItemService ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.TaskService org.solovyev.android.samples.TaskService ( ) { return org.solovyev.android.samples.TaskService ; }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.samples.SQLiteOpenHelperConfiguration org.solovyev.android.samples.SQLiteOpenHelperConfiguration ( ) { return new org.solovyev.android.samples.SamplesApplication.DbConfiguration ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public SQLiteDatabase . SQLiteDatabase.CursorFactory SQLiteDatabase.CursorFactory ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public byte [] byte[] ( ) { return new byte [] { NUMBER , NUMBER , NUMBER , - NUMBER , - NUMBER , - NUMBER , NUMBER , - NUMBER , - NUMBER , NUMBER , - NUMBER , - NUMBER , NUMBER , - NUMBER , - NUMBER , - NUMBER , - NUMBER , - NUMBER , - NUMBER , - NUMBER } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private void ( int int , @ Nonnull java.lang.Class<? extends org.solovyev.android.samples.Activity> < ? extends Activity > java.lang.Class<? extends org.solovyev.android.samples.Activity> ) { this . int = int ; this . java.lang.Class<? extends org.solovyev.android.samples.Activity> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.OnClickAction org.solovyev.android.samples.OnClickAction ( ) { return new OnClickAction ( ) { @ java.lang.Override public void void ( @ Nonnull Context org.solovyev.android.samples.Context , @ Nonnull ListAdapter < ? extends ListItem > org.solovyev.android.samples.ListAdapter<? extends org.solovyev.android.samples.ListItem> ) { org.solovyev.android.samples.Context . startActivity ( new Intent ( org.solovyev.android.samples.Context . getApplicationContext ( ) , java.lang.Class<> ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Context org.solovyev.android.samples.Context , @ Nonnull ListAdapter < ? extends ListItem > org.solovyev.android.samples.ListAdapter<? extends org.solovyev.android.samples.ListItem> ) { org.solovyev.android.samples.Context . startActivity ( new Intent ( org.solovyev.android.samples.Context . getApplicationContext ( ) , java.lang.Class<> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.samples.OnClickAction org.solovyev.android.samples.OnClickAction ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.View org.solovyev.android.samples.View ( @ Nonnull Context org.solovyev.android.samples.Context , @ Nonnull View org.solovyev.android.samples.View ) { if ( java.lang.String ( ) . boolean ( org.solovyev.android.samples.View . getTag ( ) ) ) { void ( ( TextView ) org.solovyev.android.samples.View ) ; return org.solovyev.android.samples.View ; } else { return org.solovyev.android.samples.View ( org.solovyev.android.samples.Context ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.samples.View org.solovyev.android.samples.View ( @ Nonnull Context org.solovyev.android.samples.Context ) { final TextView org.solovyev.android.samples.TextView = TextViewBuilder . newInstance ( R . layout . acl_sample_list_item , java.lang.String ( ) ) . build ( org.solovyev.android.samples.Context ) ; void ( org.solovyev.android.samples.TextView ) ; return org.solovyev.android.samples.TextView ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull TextView org.solovyev.android.samples.TextView ) { org.solovyev.android.samples.TextView . setText ( int ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.tasks.Bundle ) { super. onCreate ( org.solovyev.android.samples.tasks.Bundle ) ; setContentView ( R . layout . acl_tasks_layout ) ; final View org.solovyev.android.samples.tasks.View = findViewById ( R . id . start_task_button ) ; org.solovyev.android.samples.tasks.View . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.samples.tasks.View ) { void ( ) ; } } ) ; org.solovyev.android.samples.tasks.TaskListeners . addTaskListener ( java.lang.String , Tasks . toUiThreadFutureCallback ( this , new org.solovyev.android.samples.tasks.SamplesTaskActivity.SleepTask ( ) ) , this , R . string . acl_sleeping_title , R . string . acl_sleeping_message ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.samples.tasks.View ) { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { org.solovyev.android.samples.tasks.TaskListeners . run ( Tasks . toUiThreadTask ( this , new org.solovyev.android.samples.tasks.SamplesTaskActivity.SleepTask ( ) ) , this , R . string . acl_sleeping_title , R . string . acl_sleeping_message ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { org.solovyev.android.samples.tasks.TaskListeners . removeAllTaskListeners ( ) ; super. onDestroy ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) java.lang.Exception { java.lang.Thread . void ( NUMBER ) ; return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull org.solovyev.android.samples.tasks.SamplesTaskActivity org.solovyev.android.samples.tasks.SamplesTaskActivity , java.lang.Integer java.lang.Integer ) { Log . d ( java.lang.String , STRING + org.solovyev.android.samples.tasks.SamplesTaskActivity ) ; final Button org.solovyev.android.samples.tasks.Button = ( Button ) org.solovyev.android.samples.tasks.SamplesTaskActivity . findViewById ( R . id . start_task_button ) ; org.solovyev.android.samples.tasks.Button . setText ( R . string . acl_start_task_again ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull org.solovyev.android.samples.tasks.SamplesTaskActivity org.solovyev.android.samples.tasks.SamplesTaskActivity , java.lang.Throwable java.lang.Throwable ) { Toast . makeText ( org.solovyev.android.samples.tasks.SamplesTaskActivity , STRING + java.lang.Throwable , Toast . LENGTH_LONG ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.samples.view.Bundle ) { super. onCreate ( org.solovyev.android.samples.view.Bundle ) ; setContentView ( R . layout . acl_view_layout ) ; final Picker org.solovyev.android.samples.view.Picker = ( Picker ) findViewById ( R . id . vertical_picker ) ; org.solovyev.android.samples.view.Picker . setRange ( new IntegerRange ( NUMBER , NUMBER , NUMBER , NUMBER , null ) ) ; org.solovyev.android.samples.view.Picker . setOnChangeListener ( this ) ; final Picker org.solovyev.android.samples.view.Picker = ( Picker ) findViewById ( R . id . horizontal_picker ) ; org.solovyev.android.samples.view.Picker . setRange ( new IntegerRange ( NUMBER , NUMBER , NUMBER , NUMBER , null ) ) ; org.solovyev.android.samples.view.Picker . setOnChangeListener ( this ) ; final DirectionDragButton org.solovyev.android.samples.view.DirectionDragButton = ( DirectionDragButton ) findViewById ( R . id . drag_button ) ; org.solovyev.android.samples.view.DirectionDragButton . setOnDragListener ( new SimpleOnDragListener ( new SimpleOnDragListener . SimpleOnDragListener ( ) { @ java.lang.Override public boolean boolean ( @ Nonnull DragDirection org.solovyev.android.samples.view.DragDirection , @ Nonnull DragButton org.solovyev.android.samples.view.DragButton , @ Nonnull Point2d org.solovyev.android.samples.view.Point2d , @ Nonnull MotionEvent org.solovyev.android.samples.view.MotionEvent ) { Toast . makeText ( org.solovyev.android.samples.view.SamplesViewActivity .this , STRING + ( ( DirectionDragButton ) org.solovyev.android.samples.view.DragButton ) . getText ( org.solovyev.android.samples.view.DragDirection ) , Toast . LENGTH_SHORT ) . show ( ) ; return true ; } } , SimpleOnDragListener . getDefaultPreferences ( this ) ) ) ; org.solovyev.android.samples.view.DirectionDragButton . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.samples.view.View ) { Toast . makeText ( org.solovyev.android.samples.view.SamplesViewActivity .this , STRING + org.solovyev.android.samples.view.DirectionDragButton . getText ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull DragDirection org.solovyev.android.samples.view.DragDirection , @ Nonnull DragButton org.solovyev.android.samples.view.DragButton , @ Nonnull Point2d org.solovyev.android.samples.view.Point2d , @ Nonnull MotionEvent org.solovyev.android.samples.view.MotionEvent ) { Toast . makeText ( org.solovyev.android.samples.view.SamplesViewActivity .this , STRING + ( ( DirectionDragButton ) org.solovyev.android.samples.view.DragButton ) . getText ( org.solovyev.android.samples.view.DragDirection ) , Toast . LENGTH_SHORT ) . show ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.samples.view.View ) { Toast . makeText ( org.solovyev.android.samples.view.SamplesViewActivity .this , STRING + org.solovyev.android.samples.view.DirectionDragButton . getText ( ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Picker org.solovyev.android.samples.view.Picker , @ Nonnull java.lang.Object java.lang.Object ) { switch ( org.solovyev.android.samples.view.Picker . getId ( ) ) { case R . id . vertical_picker : Toast . makeText ( this , STRING + java.lang.Object , Toast . LENGTH_SHORT ) . show ( ) ; break; case R . id . horizontal_picker : Toast . makeText ( this , STRING + java.lang.Object , Toast . LENGTH_SHORT ) . show ( ) ; break; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { super. setUp ( ) ; java.util.Random = new java.util.Random ( new java.util.Date ( ) . long ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { final SecurityService < Transaction , Transaction , byte [] > net.robotmedia.billing.utils.SecurityService<net.robotmedia.billing.utils.Transaction,net.robotmedia.billing.utils.Transaction,byte[]> = BillingSecurity . getObfuscationSecurityService ( AESObfuscator . IV , AESObfuscator . SECURITY_PREFIX ) ; final java.lang.String java.lang.String = BillingSecurity . generatePassword ( getContext ( ) ) ; final javax.crypto.SecretKey javax.crypto.SecretKey = net.robotmedia.billing.utils.SecurityService<net.robotmedia.billing.utils.Transaction,net.robotmedia.billing.utils.Transaction,byte[]> . getSecretKeyProvider ( ) . getSecretKey ( java.lang.String , byte[] ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final Transaction net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.Transaction ( ) ; final Transaction net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.Transaction . clone ( ) ; ObfuscateUtils . obfuscate ( getContext ( ) , net.robotmedia.billing.utils.Transaction , byte[] ) ; Assert . assertFalse ( net.robotmedia.billing.utils.Transaction . equals ( net.robotmedia.billing.utils.Transaction ) ) ; final Transaction net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.Transaction . clone ( ) ; ObfuscateUtils . unobfuscate ( getContext ( ) , net.robotmedia.billing.utils.Transaction , byte[] ) ; Assert . assertEquals ( net.robotmedia.billing.utils.Transaction , net.robotmedia.billing.utils.Transaction ) ; Transaction net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.Transaction . clone ( ) ; net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.SecurityService<net.robotmedia.billing.utils.Transaction,net.robotmedia.billing.utils.Transaction,byte[]> . getCipherer ( ) . decrypt ( javax.crypto.SecretKey , net.robotmedia.billing.utils.Transaction ) ; Assert . assertEquals ( net.robotmedia.billing.utils.Transaction , net.robotmedia.billing.utils.Transaction ) ; Transaction net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.Transaction . clone ( ) ; net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.SecurityService<net.robotmedia.billing.utils.Transaction,net.robotmedia.billing.utils.Transaction,byte[]> . getCipherer ( ) . encrypt ( javax.crypto.SecretKey , net.robotmedia.billing.utils.Transaction ) ; Assert . assertFalse ( net.robotmedia.billing.utils.Transaction . equals ( net.robotmedia.billing.utils.Transaction ) ) ; Assert . assertEquals ( net.robotmedia.billing.utils.Transaction , net.robotmedia.billing.utils.Transaction ) ; Transaction net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.Transaction . clone ( ) ; net.robotmedia.billing.utils.Transaction = net.robotmedia.billing.utils.SecurityService<net.robotmedia.billing.utils.Transaction,net.robotmedia.billing.utils.Transaction,byte[]> . getCipherer ( ) . decrypt ( javax.crypto.SecretKey , net.robotmedia.billing.utils.Transaction ) ; Assert . assertEquals ( net.robotmedia.billing.utils.Transaction , net.robotmedia.billing.utils.Transaction ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private net.robotmedia.billing.utils.Transaction net.robotmedia.billing.utils.Transaction ( ) { final Transaction net.robotmedia.billing.utils.Transaction = new Transaction ( ) ; transaction . orderId = Strings . generateRandomString ( java.util.Random . int ( NUMBER ) ) ; transaction . developerPayload = Strings . generateRandomString ( java.util.Random . int ( NUMBER ) ) ; transaction . notificationId = Strings . generateRandomString ( java.util.Random . int ( NUMBER ) ) ; transaction . packageName = Strings . generateRandomString ( java.util.Random . int ( NUMBER ) ) ; transaction . productId = Strings . generateRandomString ( java.util.Random . int ( NUMBER ) ) ; transaction . purchaseTime = java.util.Random . long ( ) ; transaction . purchaseState = Transaction . PurchaseState . valueOf ( java.util.Random . int ( NUMBER ) ) ; return net.robotmedia.billing.utils.Transaction ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( ListAdapterActivity .class ); }  <METHOD_END>
<METHOD_START> @ SmallTest public void void ( ) java.lang.Exception { final ListAdapterActivity org.solovyev.android.list.ListAdapterActivity = getActivity ( ) ; ListItemAdapter < ? extends ListItem > org.solovyev.android.list.ListItemAdapter<? extends org.solovyev.android.list.ListItem> = org.solovyev.android.list.ListAdapterActivity . getAdapter ( ) ; org.solovyev.android.list.ListItemAdapter<> . filter ( STRING ) ; assertEquals ( STRING , org.solovyev.android.list.ListItemAdapter<> . getFilterText ( ) ) ; Bundle org.solovyev.android.list.Bundle = new Bundle ( ) ; org.solovyev.android.list.ListItemAdapter<> . saveState ( org.solovyev.android.list.Bundle ) ; ListItemAdapter < ? extends ListItem > org.solovyev.android.list.ListItemAdapter<? extends org.solovyev.android.list.ListItem> = new ListItemAdapter < ListItem > ( org.solovyev.android.list.ListAdapterActivity , new java.util.ArrayList<org.solovyev.android.list.ListItem> < ListItem > ( ) ) ; org.solovyev.android.list.ListItemAdapter<> . restoreState ( org.solovyev.android.list.Bundle ) ; assertEquals ( STRING , org.solovyev.android.list.ListItemAdapter<> . getFilterText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ UiThreadTest public void void ( ) java.lang.Exception { final java.util.Random java.util.Random = new java.util.Random ( new java.util.Date ( ) . long ( ) ) ; final ListAdapterActivity org.solovyev.android.list.ListAdapterActivity = getActivity ( ) ; final ListItemAdapter < ? extends ListItem > org.solovyev.android.list.ListItemAdapter<? extends org.solovyev.android.list.ListItem> = org.solovyev.android.list.ListAdapterActivity . getAdapter ( ) ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { final int int = org.solovyev.android.list.ListItemAdapter<> . getCount ( ) ; final int int = java.util.Random . int ( NUMBER ) ; org.solovyev.android.list.ListAdapterActivity . addItems ( int ) ; assertEquals ( int + int , org.solovyev.android.list.ListItemAdapter<> . getCount ( ) ) ; org.solovyev.android.list.ListItemAdapter<> . filter ( java.lang.String . java.lang.String ( java.util.Random . int ( NUMBER ) ) , new Filter . Filter ( ) { @ java.lang.Override public void void ( int int ) { void ( org.solovyev.android.list.ListItemAdapter<> ) ; } } ) ; org.solovyev.android.list.ListAdapterActivity . removeItems ( int ) ; org.solovyev.android.list.ListAdapterActivity . addItemsViaRunnable ( int ) ; assertEquals ( int + int , org.solovyev.android.list.ListItemAdapter<> . getCount ( ) ) ; org.solovyev.android.list.ListItemAdapter<> . filter ( java.lang.String . java.lang.String ( java.util.Random . int ( NUMBER ) ) , new Filter . Filter ( ) { @ java.lang.Override public void void ( int int ) { void ( org.solovyev.android.list.ListItemAdapter<> ) ; } } ) ; org.solovyev.android.list.ListAdapterActivity . removeItems ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { void ( org.solovyev.android.list.ListItemAdapter<> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { void ( org.solovyev.android.list.ListItemAdapter<> ) ; }  <METHOD_END>
<METHOD_START> private void void ( final ListItemAdapter < ? extends ListItem > org.solovyev.android.list.ListItemAdapter<? extends org.solovyev.android.list.ListItem> ) { org.solovyev.android.list.ListItemAdapter<> . doWork ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { for ( int int = NUMBER ; int < org.solovyev.android.list.ListItemAdapter<> . getCount ( ) ; int ++ ) { if ( int > NUMBER ) { final ListItem org.solovyev.android.list.ListItem = org.solovyev.android.list.ListItemAdapter<> . getItem ( int - NUMBER ) ; final ListItem org.solovyev.android.list.ListItem = org.solovyev.android.list.ListItemAdapter<> . getItem ( int ) ; assertTrue ( org.solovyev.android.list.ListItem . toString ( ) . compareTo ( org.solovyev.android.list.ListItem . toString ( ) ) <= NUMBER ) ; } } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { for ( int int = NUMBER ; int < org.solovyev.android.list.ListItemAdapter<> . getCount ( ) ; int ++ ) { if ( int > NUMBER ) { final ListItem org.solovyev.android.list.ListItem = org.solovyev.android.list.ListItemAdapter<> . getItem ( int - NUMBER ) ; final ListItem org.solovyev.android.list.ListItem = org.solovyev.android.list.ListItemAdapter<> . getItem ( int ) ; assertTrue ( org.solovyev.android.list.ListItem . toString ( ) . compareTo ( org.solovyev.android.list.ListItem . toString ( ) ) <= NUMBER ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { void ( T ( ) , T ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( @ Nullable T T , @ Nullable T T ) { final SharedPreferences org.solovyev.android.prefs.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( getContext ( ) ) ; org.solovyev.android.prefs.SharedPreferences . edit ( ) . clear ( ) . commit ( ) ; final Preference < T > org.solovyev.android.prefs.Preference<T> = org.solovyev.android.prefs.Preference<T> ( STRING , T ) ; Assert . assertTrue ( org.solovyev.android.prefs.Preference<T> . isSameKey ( STRING ) ) ; Assert . assertEquals ( org.solovyev.android.prefs.Preference<T> . getKey ( ) , STRING ) ; Assert . assertEquals ( false , org.solovyev.android.prefs.Preference<T> . isSet ( org.solovyev.android.prefs.SharedPreferences ) ) ; Assert . assertEquals ( T , org.solovyev.android.prefs.Preference<T> . getPreference ( org.solovyev.android.prefs.SharedPreferences ) ) ; org.solovyev.android.prefs.Preference<T> . tryPutDefault ( org.solovyev.android.prefs.SharedPreferences ) ; Assert . assertEquals ( true , org.solovyev.android.prefs.Preference<T> . isSet ( org.solovyev.android.prefs.SharedPreferences ) ) ; Assert . assertEquals ( T , org.solovyev.android.prefs.Preference<T> . getPreference ( org.solovyev.android.prefs.SharedPreferences ) ) ; org.solovyev.android.prefs.Preference<T> . putPreference ( org.solovyev.android.prefs.SharedPreferences , T ) ; Assert . assertEquals ( true , org.solovyev.android.prefs.Preference<T> . isSet ( org.solovyev.android.prefs.SharedPreferences ) ) ; Assert . assertEquals ( T , org.solovyev.android.prefs.Preference<T> . getPreference ( org.solovyev.android.prefs.SharedPreferences ) ) ; Assert . assertEquals ( T , org.solovyev.android.prefs.Preference<T> . getDefaultValue ( ) ) ; org.solovyev.android.prefs.SharedPreferences . edit ( ) . clear ( ) . commit ( ) ; Assert . assertEquals ( false , org.solovyev.android.prefs.Preference<T> . isSet ( org.solovyev.android.prefs.SharedPreferences ) ) ; Assert . assertEquals ( T , org.solovyev.android.prefs.Preference<T> . getPreference ( org.solovyev.android.prefs.SharedPreferences ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.prefs.Preference<T> < T > org.solovyev.android.prefs.Preference<T> ( @ Nonnull java.lang.String java.lang.String , @ Nullable T T );  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract T T ( )  <METHOD_END>
<METHOD_START> protected abstract T T ( )  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.Preference<java.lang.Boolean> < java.lang.Boolean > org.solovyev.android.prefs.Preference<java.lang.Boolean> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.Boolean java.lang.Boolean ) { return BooleanPreference . of ( java.lang.String , java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { super. testPreferences ( ) ; runPreferenceTest ( java.lang.Double . double , java.lang.Double . double ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Class<java.lang.Double> < java.lang.Double > java.lang.Class<java.lang.Double> ( ) { return java.lang.Double .class ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Double java.lang.Double ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Double java.lang.Double ( ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.Preference<java.lang.Float> < java.lang.Float > org.solovyev.android.prefs.Preference<java.lang.Float> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.Float java.lang.Float ) { return FloatPreference . of ( java.lang.String , java.lang.Float ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Float java.lang.Float ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Float java.lang.Float ( ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Class<java.lang.Float> < java.lang.Float > java.lang.Class<java.lang.Float> ( ) { return java.lang.Float .class ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Float java.lang.Float ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Float java.lang.Float ( ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.Preference<java.util.Set<java.lang.String>> < java.util.Set<java.lang.String> < java.lang.String > > org.solovyev.android.prefs.Preference<java.util.Set<java.lang.String>> ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ) { return HashSetPreference . ofStrings ( java.lang.String , java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return new java.util.HashSet<java.lang.String> < java.lang.String > ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return new java.util.HashSet<java.lang.String> < java.lang.String > ( java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING , STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.Preference<java.lang.Integer> < java.lang.Integer > org.solovyev.android.prefs.Preference<java.lang.Integer> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.Integer java.lang.Integer ) { return IntegerPreference . of ( java.lang.String , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Integer java.lang.Integer ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Integer java.lang.Integer ( ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.Preference<java.util.List<java.lang.String>> < java.util.List<java.lang.String> < java.lang.String > > org.solovyev.android.prefs.Preference<java.util.List<java.lang.String>> ( @ Nonnull java.lang.String java.lang.String , @ Nullable java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return CollectionToStringPreference . forStringList ( java.lang.String , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( ) { return java.util.Arrays . java.util.List<java.lang.String> ( STRING , STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.Preference<java.lang.Long> < java.lang.Long > org.solovyev.android.prefs.Preference<java.lang.Long> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.Long java.lang.Long ) { return LongPreference . of ( java.lang.String , java.lang.Long ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Long java.lang.Long ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Long java.lang.Long ( ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.Preference<N> < N > org.solovyev.android.prefs.Preference<N> ( @ Nonnull java.lang.String java.lang.String , @ Nullable N N ) { return NumberToStringPreference . of ( java.lang.String , N , java.lang.Class<N> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract java.lang.Class<N> < N > java.lang.Class<N> ( )  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { AProperty org.solovyev.android.properties.AProperty = Properties . newProperty ( STRING , STRING ) ; Parcel org.solovyev.android.properties.Parcel = Parcel . obtain ( ) ; org.solovyev.android.properties.AProperty . writeToParcel ( org.solovyev.android.properties.Parcel , NUMBER ) ; org.solovyev.android.properties.Parcel . setDataPosition ( NUMBER ) ; AProperty org.solovyev.android.properties.AProperty = APropertyImpl . CREATOR . createFromParcel ( org.solovyev.android.properties.Parcel ) ; Assert . assertEquals ( org.solovyev.android.properties.AProperty , org.solovyev.android.properties.AProperty ) ; org.solovyev.android.properties.Parcel = Parcel . obtain ( ) ; org.solovyev.android.properties.AProperty = Properties . newProperty ( STRING , null ) ; org.solovyev.android.properties.AProperty . writeToParcel ( org.solovyev.android.properties.Parcel , NUMBER ) ; org.solovyev.android.properties.Parcel . setDataPosition ( NUMBER ) ; org.solovyev.android.properties.AProperty = APropertyImpl . CREATOR . createFromParcel ( org.solovyev.android.properties.Parcel ) ; Assert . assertEquals ( org.solovyev.android.properties.AProperty , org.solovyev.android.properties.AProperty ) ; }  <METHOD_END>
<METHOD_START> public static org.solovyev.android.samples.Test org.solovyev.android.samples.Test ( ) { return new TestSuiteBuilder ( org.solovyev.android.samples.AllTests .class ) . includeAllPackagesUnderHere ( ) . includePackages ( ObfuscateUtilsTest .class . java.lang.Package ( ) . java.lang.String ( ) ) . includePackages ( AndroidStringCiphererTest .class . java.lang.Package ( ) . java.lang.String ( ) ) . includePackages ( AbstractPreferenceTest .class . java.lang.Package ( ) . java.lang.String ( ) ) . includePackages ( APropertyTest .class . java.lang.Package ( ) . java.lang.String ( ) ) . includePackages ( ListAdapterTest .class . java.lang.Package ( ) . java.lang.String ( ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( SamplesActivity .class . java.lang.Package ( ) . java.lang.String ( ) , SamplesActivity .class ); }  <METHOD_END>
<METHOD_START> @ SmallTest public void void ( ) java.lang.Exception {	}  <METHOD_END>
<METHOD_START> @ UiThreadTest public void void ( ) java.lang.Exception { final SamplesActivity org.solovyev.android.samples.SamplesActivity = getActivity ( ) ; final ListAdapter org.solovyev.android.samples.ListAdapter = org.solovyev.android.samples.SamplesActivity . getListAdapter ( ) ; if ( org.solovyev.android.samples.ListAdapter != null ) { assertTrue ( org.solovyev.android.samples.ListAdapter . getCount ( ) >= NUMBER ) ; } else { Log . w ( STRING , STRING ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { final SecurityService < java.lang.String , java.lang.String , java.lang.String > org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> = Security . newAndroidAesStringSecurityService ( ) ; final Cipherer < java.lang.String , java.lang.String > org.solovyev.android.security.Cipherer<java.lang.String,java.lang.String> = org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> . getCipherer ( ) ; final SecretKeyProvider org.solovyev.android.security.SecretKeyProvider = org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> . getSecretKeyProvider ( ) ; final SaltGenerator org.solovyev.android.security.SaltGenerator = org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> . getSaltGenerator ( ) ; final HashProvider < java.lang.String , java.lang.String > org.solovyev.android.security.HashProvider<java.lang.String,java.lang.String> = org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> . getHashProvider ( ) ; final java.util.Random java.util.Random = new java.util.Random ( new java.util.Date ( ) . long ( ) ) ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { final java.lang.String java.lang.String = Strings . generateRandomString ( java.util.Random . int ( NUMBER ) ) ; final java.lang.String java.lang.String = Strings . generateRandomString ( NUMBER ) ; byte [] byte[] = org.solovyev.android.security.SaltGenerator . generateSalt ( ) ; final javax.crypto.SecretKey javax.crypto.SecretKey = org.solovyev.android.security.SecretKeyProvider . getSecretKey ( java.lang.String , byte[] ) ; final java.lang.String java.lang.String = org.solovyev.android.security.Cipherer<java.lang.String,java.lang.String> . encrypt ( javax.crypto.SecretKey , java.lang.String ) ; final java.lang.String java.lang.String = org.solovyev.android.security.Cipherer<java.lang.String,java.lang.String> . decrypt ( javax.crypto.SecretKey , java.lang.String ) ; Assert . assertEquals ( java.lang.String , java.lang.String ) ; final byte [] byte[] = org.solovyev.android.security.SaltGenerator . generateSalt ( ) ; final java.lang.String java.lang.String = org.solovyev.android.security.HashProvider<java.lang.String,java.lang.String> . getHash ( java.lang.String , byte[] ) ; final java.lang.String java.lang.String = org.solovyev.android.security.HashProvider<java.lang.String,java.lang.String> . getHash ( java.lang.String , byte[] ) ; Assert . assertEquals ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.base64.Converter<java.lang.String,byte[]> < java.lang.String , byte [] > org.solovyev.android.security.base64.Converter<java.lang.String,byte[]> ( ) { return org.solovyev.android.security.base64.Converter<java.lang.String,byte[]> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public byte [] byte[] ( @ Nonnull java.lang.String java.lang.String ) { return Base64 . decode ( java.lang.String , Base64 . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.base64.Converter<byte[],java.lang.String> < byte [] , java.lang.String > org.solovyev.android.security.base64.Converter<byte[],java.lang.String> ( ) { return org.solovyev.android.security.base64.Converter<byte[],java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( @ Nonnull byte [] byte[] ) { return Base64 . encodeToString ( byte[] , Base64 . DEFAULT ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.Cipherer<byte[],byte[]> < byte [] , byte [] > org.solovyev.android.security.Cipherer<byte[],byte[]> ( ) { return org . solovyev . org.solovyev.common . org.solovyev.common . Security . newCipherer ( java.lang.String , java.lang.String , InitialVectorDef . newRandom ( java.lang.String , int ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.Cipherer<byte[],byte[]> < byte [] , byte [] > org.solovyev.android.security.Cipherer<byte[],byte[]> ( final byte [] byte[] ) { return org . solovyev . org.solovyev.common . org.solovyev.common . Security . newCipherer ( java.lang.String , java.lang.String , InitialVectorDef . newPredefined ( byte[] ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.SecretKeyProvider org.solovyev.android.security.SecretKeyProvider ( ) { return org . solovyev . org.solovyev.common . org.solovyev.common . Security . newPbeSecretKeyProvider ( int , java.lang.String , CIPHERER_ALGORITHM_AES , java.lang.String , int , int ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.HashProvider<byte[],byte[]> < byte [] , byte [] > org.solovyev.android.security.HashProvider<byte[],byte[]> ( ) { return org . solovyev . org.solovyev.common . org.solovyev.common . Security . newHashProvider ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.HashProvider<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.solovyev.android.security.HashProvider<java.lang.String,java.lang.String> ( ) { return TypedHashProvider . newInstance ( org.solovyev.android.security.HashProvider<byte[],byte[]> ( ) , StringDecoder . getInstance ( ) , ABase64StringEncoder . getInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.SaltGenerator org.solovyev.android.security.SaltGenerator ( ) { return org . solovyev . org.solovyev.common . org.solovyev.common . Security . newSaltGenerator ( java.lang.String , int ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.Cipherer<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.solovyev.android.security.Cipherer<java.lang.String,java.lang.String> ( ) { return TypedCipherer . newInstance ( org.solovyev.android.security.Cipherer<byte[],byte[]> ( ) , StringDecoder . getInstance ( ) , StringEncoder . getInstance ( ) , ABase64StringDecoder . getInstance ( ) , ABase64StringEncoder . getInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.Cipherer<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > org.solovyev.android.security.Cipherer<java.lang.String,java.lang.String> ( final byte [] byte[] ) { return TypedCipherer . newInstance ( org.solovyev.android.security.Cipherer<byte[],byte[]> ( byte[] ) , StringDecoder . getInstance ( ) , StringEncoder . getInstance ( ) , ABase64StringDecoder . getInstance ( ) , ABase64StringEncoder . getInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.SecurityService<byte[],byte[],byte[]> < byte [] , byte [] , byte [] > org.solovyev.android.security.SecurityService<byte[],byte[],byte[]> ( ) { return newSecurityService ( org.solovyev.android.security.Cipherer<byte[],byte[]> ( ) , org.solovyev.android.security.SecretKeyProvider ( ) , org.solovyev.android.security.SaltGenerator ( ) , org.solovyev.android.security.HashProvider<byte[],byte[]> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.SecurityService<byte[],byte[],byte[]> < byte [] , byte [] , byte [] > org.solovyev.android.security.SecurityService<byte[],byte[],byte[]> ( final byte [] byte[] ) { return newSecurityService ( org.solovyev.android.security.Cipherer<byte[],byte[]> ( byte[] ) , org.solovyev.android.security.SecretKeyProvider ( ) , org.solovyev.android.security.SaltGenerator ( ) , org.solovyev.android.security.HashProvider<byte[],byte[]> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> < java.lang.String , java.lang.String , java.lang.String > org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> ( ) { return newSecurityService ( org.solovyev.android.security.Cipherer<java.lang.String,java.lang.String> ( ) , org.solovyev.android.security.SecretKeyProvider ( ) , org.solovyev.android.security.SaltGenerator ( ) , org.solovyev.android.security.HashProvider<java.lang.String,java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> < java.lang.String , java.lang.String , java.lang.String > org.solovyev.android.security.SecurityService<java.lang.String,java.lang.String,java.lang.String> ( @ Nonnull SecurityService < byte [] , byte [] , byte [] > org.solovyev.android.security.SecurityService<byte[],byte[],byte[]> ) { return SecurityServiceConverter . wrap ( org.solovyev.android.security.SecurityService<byte[],byte[],byte[]> , StringDecoder . getInstance ( ) , StringEncoder . getInstance ( ) , ABase64StringDecoder . getInstance ( ) , ABase64StringEncoder . getInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull SherlockFragmentActivity org.solovyev.android.sherlock.SherlockFragmentActivity , @ Nonnull java.util.List<? extends org.solovyev.android.sherlock.FragmentItem> < ? extends FragmentItem > java.util.List<? extends org.solovyev.android.sherlock.FragmentItem> , @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { assert java.util.List<> . int ( ) == java.util.List<java.lang.String> . int ( ) ; this . org.solovyev.android.sherlock.SherlockFragmentActivity = org.solovyev.android.sherlock.SherlockFragmentActivity ; this . java.util.List<? extends org.solovyev.android.sherlock.FragmentItem> = java.util.List<> ; this . org.solovyev.android.sherlock.ListAdapter<java.lang.String> = AndroidSherlockUtils . newSherlockDefaultAdapter ( org.solovyev.android.sherlock.SherlockFragmentActivity , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public synchronized org.solovyev.android.sherlock.ListAdapter org.solovyev.android.sherlock.ListAdapter ( ) { return org.solovyev.android.sherlock.ListAdapter<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , long long ) { final FragmentManager org.solovyev.android.sherlock.FragmentManager = this . org.solovyev.android.sherlock.SherlockFragmentActivity . getSupportFragmentManager ( ) ; final FragmentTransaction org.solovyev.android.sherlock.FragmentTransaction = org.solovyev.android.sherlock.FragmentManager . beginTransaction ( ) ; try { if ( int != int ) { if ( int >= NUMBER && int < java.util.List<> . int ( ) ) { java.util.List<> . get ( int ) . onUnselected ( org.solovyev.android.sherlock.FragmentTransaction ) ; } if ( int < java.util.List<> . int ( ) ) { java.util.List<> . get ( int ) . onSelected ( org.solovyev.android.sherlock.FragmentTransaction ) ; int = int ; } } } finally { if ( org.solovyev.android.sherlock.FragmentTransaction != null && ! org.solovyev.android.sherlock.FragmentTransaction . isEmpty ( ) ) { org.solovyev.android.sherlock.FragmentTransaction . commit ( ) ; } } return true ; }  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.sherlock.ActionBar org.solovyev.android.sherlock.ActionBar ( @ Nonnull Activity org.solovyev.android.sherlock.Activity ) { if ( org.solovyev.android.sherlock.Activity instanceof SherlockActivity ) { return ( ( SherlockActivity ) org.solovyev.android.sherlock.Activity ) . getSupportActionBar ( ) ; } if ( org.solovyev.android.sherlock.Activity instanceof SherlockFragmentActivity ) { return ( ( SherlockFragmentActivity ) org.solovyev.android.sherlock.Activity ) . getSupportActionBar ( ) ; } if ( org.solovyev.android.sherlock.Activity instanceof SherlockListActivity ) { return ( ( SherlockListActivity ) org.solovyev.android.sherlock.Activity ) . getSupportActionBar ( ) ; } if ( org.solovyev.android.sherlock.Activity instanceof SherlockPreferenceActivity ) { return ( ( SherlockPreferenceActivity ) org.solovyev.android.sherlock.Activity ) . getSupportActionBar ( ) ; } throw new java.lang.IllegalArgumentException ( org.solovyev.android.sherlock.Activity . getClass ( ) + STRING ) ; }  <METHOD_END>
<METHOD_START> public static org.solovyev.android.sherlock.ActionBar org.solovyev.android.sherlock.ActionBar ( @ Nonnull Fragment org.solovyev.android.sherlock.Fragment ) { if ( org.solovyev.android.sherlock.Fragment instanceof SherlockFragment ) { return ( ( SherlockFragment ) org.solovyev.android.sherlock.Fragment ) . getSherlockActivity ( ) . getSupportActionBar ( ) ; } if ( org.solovyev.android.sherlock.Fragment instanceof SherlockListFragment ) { return ( ( SherlockListFragment ) org.solovyev.android.sherlock.Fragment ) . getSherlockActivity ( ) . getSupportActionBar ( ) ; } if ( org.solovyev.android.sherlock.Fragment instanceof SherlockDialogFragment ) { return ( ( SherlockDialogFragment ) org.solovyev.android.sherlock.Fragment ) . getSherlockActivity ( ) . getSupportActionBar ( ) ; } throw new java.lang.IllegalArgumentException ( org.solovyev.android.sherlock.Fragment . getClass ( ) + STRING ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.sherlock.ListAdapter<java.lang.String> < java.lang.String > org.solovyev.android.sherlock.ListAdapter<java.lang.String> ( @ Nonnull SherlockFragmentActivity org.solovyev.android.sherlock.SherlockFragmentActivity , @ Nonnull java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { final ListAdapter < java.lang.String > org.solovyev.android.sherlock.ListAdapter<java.lang.String> = new ListAdapter < java.lang.String > ( org.solovyev.android.sherlock.SherlockFragmentActivity , com . actionbarsherlock . R . layout . sherlock_spinner_item , java.util.List<java.lang.String> ) ; org.solovyev.android.sherlock.ListAdapter<java.lang.String> . setDropDownViewResource ( com . actionbarsherlock . R . layout . sherlock_spinner_dropdown_item ) ; return org.solovyev.android.sherlock.ListAdapter<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.sherlock.MenuInflater org.solovyev.android.sherlock.MenuInflater ( @ Nonnull Activity org.solovyev.android.sherlock.Activity ) { if ( org.solovyev.android.sherlock.Activity instanceof SherlockActivity ) { return ( ( SherlockActivity ) org.solovyev.android.sherlock.Activity ) . getSupportMenuInflater ( ) ; } if ( org.solovyev.android.sherlock.Activity instanceof SherlockFragmentActivity ) { return ( ( SherlockFragmentActivity ) org.solovyev.android.sherlock.Activity ) . getSupportMenuInflater ( ) ; } if ( org.solovyev.android.sherlock.Activity instanceof SherlockListActivity ) { return ( ( SherlockListActivity ) org.solovyev.android.sherlock.Activity ) . getSupportMenuInflater ( ) ; } if ( org.solovyev.android.sherlock.Activity instanceof SherlockPreferenceActivity ) { return ( ( SherlockPreferenceActivity ) org.solovyev.android.sherlock.Activity ) . getSupportMenuInflater ( ) ; } throw new java.lang.IllegalArgumentException ( org.solovyev.android.sherlock.Activity . getClass ( ) + STRING ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull DialogFragment org.solovyev.android.sherlock.DialogFragment , @ Nonnull java.lang.String java.lang.String , @ Nonnull FragmentManager org.solovyev.android.sherlock.FragmentManager ) { final FragmentTransaction org.solovyev.android.sherlock.FragmentTransaction = org.solovyev.android.sherlock.FragmentManager . beginTransaction ( ) ; Fragment org.solovyev.android.sherlock.Fragment = org.solovyev.android.sherlock.FragmentManager . findFragmentByTag ( java.lang.String ) ; if ( org.solovyev.android.sherlock.Fragment != null ) { org.solovyev.android.sherlock.FragmentTransaction . remove ( org.solovyev.android.sherlock.Fragment ) ; } org.solovyev.android.sherlock.DialogFragment . show ( org.solovyev.android.sherlock.FragmentTransaction , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull SherlockFragmentActivity org.solovyev.android.sherlock.SherlockFragmentActivity , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.Class<? extends org.solovyev.android.sherlock.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.sherlock.Fragment> , @ Nullable Bundle org.solovyev.android.sherlock.Bundle , @ Nullable java.lang.Integer java.lang.Integer ) { this . org.solovyev.android.sherlock.SherlockFragmentActivity = org.solovyev.android.sherlock.SherlockFragmentActivity ; this . java.lang.String = java.lang.String ; this . java.lang.Class<? extends org.solovyev.android.sherlock.Fragment> = java.lang.Class<> ; this . org.solovyev.android.sherlock.Bundle = org.solovyev.android.sherlock.Bundle ; this . java.lang.Integer = java.lang.Integer ; final FragmentManager org.solovyev.android.sherlock.FragmentManager = org.solovyev.android.sherlock.SherlockFragmentActivity . getSupportFragmentManager ( ) ; this . org.solovyev.android.sherlock.Fragment = org.solovyev.android.sherlock.FragmentManager . findFragmentByTag ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull FragmentTransaction org.solovyev.android.sherlock.FragmentTransaction ) { if ( org.solovyev.android.sherlock.Fragment == null ) { org.solovyev.android.sherlock.Fragment = org.solovyev.android.sherlock.SherlockFragmentActivity . getSupportFragmentManager ( ) . findFragmentByTag ( this . java.lang.String ) ; } if ( org.solovyev.android.sherlock.Fragment == null ) { org.solovyev.android.sherlock.Fragment = Fragment . instantiate ( org.solovyev.android.sherlock.SherlockFragmentActivity , java.lang.Class<> . java.lang.String ( ) , org.solovyev.android.sherlock.Bundle ) ; if ( java.lang.Integer != null ) { org.solovyev.android.sherlock.FragmentTransaction . add ( java.lang.Integer , org.solovyev.android.sherlock.Fragment , java.lang.String ) ; } else { org.solovyev.android.sherlock.FragmentTransaction . add ( org.solovyev.android.sherlock.Fragment , java.lang.String ) ; } } else { if ( org.solovyev.android.sherlock.Fragment . isDetached ( ) ) { org.solovyev.android.sherlock.FragmentTransaction . attach ( org.solovyev.android.sherlock.Fragment ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull FragmentTransaction org.solovyev.android.sherlock.FragmentTransaction ) { if ( org.solovyev.android.sherlock.Fragment != null ) { org.solovyev.android.sherlock.FragmentTransaction . detach ( org.solovyev.android.sherlock.Fragment ) ; } }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull FragmentTransaction org.solovyev.android.sherlock.FragmentTransaction );  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull FragmentTransaction org.solovyev.android.sherlock.FragmentTransaction );  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull DialogFragment org.solovyev.android.sherlock.DialogFragment , @ Nonnull java.lang.String java.lang.String , @ Nonnull FragmentManager org.solovyev.android.sherlock.FragmentManager ) { void ( org.solovyev.android.sherlock.DialogFragment , java.lang.String , org.solovyev.android.sherlock.FragmentManager , true ) ; }  <METHOD_END>
<METHOD_START> public static void void ( DialogFragment org.solovyev.android.sherlock.DialogFragment , java.lang.String java.lang.String , FragmentManager org.solovyev.android.sherlock.FragmentManager , boolean boolean ) { Fragment org.solovyev.android.sherlock.Fragment = org.solovyev.android.sherlock.FragmentManager . findFragmentByTag ( java.lang.String ) ; if ( org.solovyev.android.sherlock.Fragment != null ) { if ( ! boolean ) { final FragmentTransaction org.solovyev.android.sherlock.FragmentTransaction = org.solovyev.android.sherlock.FragmentManager . beginTransaction ( ) ; org.solovyev.android.sherlock.FragmentTransaction . remove ( org.solovyev.android.sherlock.Fragment ) ; org.solovyev.android.sherlock.FragmentTransaction . addToBackStack ( null ) ; org.solovyev.android.sherlock.DialogFragment . show ( org.solovyev.android.sherlock.FragmentTransaction , java.lang.String ) ; org.solovyev.android.sherlock.FragmentManager . executePendingTransactions ( ) ; } } else { final FragmentTransaction org.solovyev.android.sherlock.FragmentTransaction = org.solovyev.android.sherlock.FragmentManager . beginTransaction ( ) ; org.solovyev.android.sherlock.FragmentTransaction . addToBackStack ( null ) ; org.solovyev.android.sherlock.DialogFragment . show ( org.solovyev.android.sherlock.FragmentTransaction , java.lang.String ) ; org.solovyev.android.sherlock.FragmentManager . executePendingTransactions ( ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.sherlock.menu.MenuHelper<org.solovyev.android.sherlock.menu.Menu,org.solovyev.android.sherlock.menu.MenuItem> < Menu , MenuItem > org.solovyev.android.sherlock.menu.MenuHelper<org.solovyev.android.sherlock.menu.Menu,org.solovyev.android.sherlock.menu.MenuItem> ( ) { return org.solovyev.android.sherlock.menu.SherlockMenuHelper ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( @ Nonnull Menu org.solovyev.android.sherlock.menu.Menu ) { return org.solovyev.android.sherlock.menu.Menu . size ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.sherlock.menu.MenuItem org.solovyev.android.sherlock.menu.MenuItem ( @ Nonnull Menu org.solovyev.android.sherlock.menu.Menu , int int , int int , int int , @ Nonnull java.lang.String java.lang.String ) { return org.solovyev.android.sherlock.menu.Menu . add ( int , int , int , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull final MenuItem org.solovyev.android.sherlock.menu.MenuItem , @ Nonnull final AMenuItem < MenuItem > org.solovyev.android.sherlock.menu.AMenuItem<org.solovyev.android.sherlock.menu.MenuItem> , @ Nonnull final Activity org.solovyev.android.sherlock.menu.Activity ) { org.solovyev.android.sherlock.menu.MenuItem . setOnMenuItemClickListener ( new MenuItem . MenuItem ( ) { @ java.lang.Override public boolean boolean ( MenuItem org.solovyev.android.sherlock.menu.MenuItem ) { org.solovyev.android.sherlock.menu.AMenuItem<org.solovyev.android.sherlock.menu.MenuItem> . onClick ( org.solovyev.android.sherlock.menu.MenuItem , org.solovyev.android.sherlock.menu.Activity ) ; return true ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem org.solovyev.android.sherlock.menu.MenuItem ) { org.solovyev.android.sherlock.menu.AMenuItem<org.solovyev.android.sherlock.menu.MenuItem> . onClick ( org.solovyev.android.sherlock.menu.MenuItem , org.solovyev.android.sherlock.menu.Activity ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Menu org.solovyev.android.sherlock.menu.Menu , @ Nonnull java.lang.Integer java.lang.Integer ) { org.solovyev.android.sherlock.menu.Menu . removeItem ( java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Activity org.solovyev.android.sherlock.menu.Activity , int int , @ Nonnull Menu org.solovyev.android.sherlock.menu.Menu ) { AndroidSherlockUtils . getSupportMenuInflater ( org.solovyev.android.sherlock.menu.Activity ) . inflate ( int , org.solovyev.android.sherlock.menu.Menu ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.Integer java.lang.Integer ( @ Nonnull MenuItem org.solovyev.android.sherlock.menu.MenuItem ) { return org.solovyev.android.sherlock.menu.MenuItem . getItemId ( ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull SherlockFragmentActivity org.solovyev.android.sherlock.tabs.SherlockFragmentActivity , @ Nonnull java.lang.String java.lang.String , @ Nonnull java.lang.Class<? extends org.solovyev.android.sherlock.tabs.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.sherlock.tabs.Fragment> , @ Nullable Bundle org.solovyev.android.sherlock.tabs.Bundle , @ Nullable java.lang.Integer java.lang.Integer ) { this . org.solovyev.android.sherlock.tabs.FragmentItem = new FragmentItemImpl ( org.solovyev.android.sherlock.tabs.SherlockFragmentActivity , java.lang.String , java.lang.Class<> , org.solovyev.android.sherlock.tabs.Bundle , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public void void ( ActionBar . ActionBar ActionBar.Tab , FragmentTransaction org.solovyev.android.sherlock.tabs.FragmentTransaction ) { this . org.solovyev.android.sherlock.tabs.FragmentItem . onSelected ( org.solovyev.android.sherlock.tabs.FragmentTransaction ) ; }  <METHOD_END>
<METHOD_START> public void void ( ActionBar . ActionBar ActionBar.Tab , FragmentTransaction org.solovyev.android.sherlock.tabs.FragmentTransaction ) { this . org.solovyev.android.sherlock.tabs.FragmentItem . onUnselected ( org.solovyev.android.sherlock.tabs.FragmentTransaction ) ; }  <METHOD_END>
<METHOD_START> public void void ( ActionBar . ActionBar ActionBar.Tab , FragmentTransaction org.solovyev.android.sherlock.tabs.FragmentTransaction ) {	}  <METHOD_END>
<METHOD_START> void ( @ Nonnull C C ) { this . java.lang.ref.WeakReference<C> = new java.lang.ref.WeakReference<C> < C > ( C ) ; }  <METHOD_END>
<METHOD_START> @ Nullable protected C C ( ) { return java.lang.ref.WeakReference<C> . C ( ) ; }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull C C , V V );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull C C , java.lang.Throwable java.lang.Throwable );  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public void ( @ Nonnull TaskService org.solovyev.android.tasks.TaskService ) { this . org.solovyev.android.tasks.TaskService = org.solovyev.android.tasks.TaskService ; }  <METHOD_END>
<METHOD_START> @ Nullable private < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull java.lang.String java.lang.String , @ Nullable FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> ) { if ( org.solovyev.android.tasks.FutureCallback<T> != null ) { java.util.List<org.solovyev.android.tasks.FutureCallback<?>> < FutureCallback < ? > > java.util.List<org.solovyev.android.tasks.FutureCallback<?>> = java.util.Map<java.lang.String,java.util.List<org.solovyev.android.tasks.FutureCallback<?>>> . get ( java.lang.String ) ; if ( java.util.List<org.solovyev.android.tasks.FutureCallback<?>> == null ) { java.util.List<org.solovyev.android.tasks.FutureCallback<?>> = new java.util.ArrayList<org.solovyev.android.tasks.FutureCallback<?>> < FutureCallback < ? > > ( ) ; java.util.Map<java.lang.String,java.util.List<org.solovyev.android.tasks.FutureCallback<?>>> . put ( java.lang.String , java.util.List<org.solovyev.android.tasks.FutureCallback<?>> ) ; } java.util.List<org.solovyev.android.tasks.FutureCallback<?>> . add ( org.solovyev.android.tasks.FutureCallback<T> ) ; } return org.solovyev.android.tasks.FutureCallback<T> ; }  <METHOD_END>
<METHOD_START> @ Nullable public < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull NamedTask < T > org.solovyev.android.tasks.NamedTask<T> ) { return org.solovyev.android.tasks.FutureCallback ( org.solovyev.android.tasks.NamedTask<T> . getName ( ) , org.solovyev.android.tasks.TaskService . run ( org.solovyev.android.tasks.NamedTask<T> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull NamedTask < T > org.solovyev.android.tasks.NamedTask<T> , @ Nonnull Activity org.solovyev.android.tasks.Activity , int int , int int ) { final FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> = org.solovyev.android.tasks.FutureCallback ( org.solovyev.android.tasks.NamedTask<T> . getName ( ) , org.solovyev.android.tasks.TaskService . run ( org.solovyev.android.tasks.NamedTask<T> ) ) ; org.solovyev.android.tasks.TaskOverlayDialogs . addTaskOverlayDialog ( TaskOverlayDialog . attachToTask ( org.solovyev.android.tasks.TaskService , org.solovyev.android.tasks.Activity , org.solovyev.android.tasks.NamedTask<T> . getName ( ) , int , int ) ) ; return org.solovyev.android.tasks.FutureCallback<T> ; }  <METHOD_END>
<METHOD_START> @ Nullable public < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Task < T > org.solovyev.android.tasks.Task<T> ) { return org.solovyev.android.tasks.FutureCallback ( java.lang.String , org.solovyev.android.tasks.TaskService . run ( java.lang.String , org.solovyev.android.tasks.Task<T> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Task < T > org.solovyev.android.tasks.Task<T> , @ Nonnull Activity org.solovyev.android.tasks.Activity , int int , int int ) { final FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> = org.solovyev.android.tasks.FutureCallback ( java.lang.String , org.solovyev.android.tasks.TaskService . run ( java.lang.String , org.solovyev.android.tasks.Task<T> ) ) ; org.solovyev.android.tasks.TaskOverlayDialogs . addTaskOverlayDialog ( TaskOverlayDialog . attachToTask ( org.solovyev.android.tasks.TaskService , org.solovyev.android.tasks.Activity , java.lang.String , int , int ) ) ; return org.solovyev.android.tasks.FutureCallback<T> ; }  <METHOD_END>
<METHOD_START> public < T > void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> ) { org.solovyev.android.tasks.TaskService . run ( java.lang.String , java.util.concurrent.Callable<T> ) ; }  <METHOD_END>
<METHOD_START> public < T > void void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> , @ Nonnull Activity org.solovyev.android.tasks.Activity , int int , int int ) { org.solovyev.android.tasks.TaskService . run ( java.lang.String , java.util.concurrent.Callable<T> ) ; org.solovyev.android.tasks.TaskOverlayDialogs . addTaskOverlayDialog ( TaskOverlayDialog . attachToTask ( org.solovyev.android.tasks.TaskService , org.solovyev.android.tasks.Activity , java.lang.String , int , int ) ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> , @ Nullable FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> ) { return org.solovyev.android.tasks.FutureCallback ( java.lang.String , org.solovyev.android.tasks.TaskService . run ( java.lang.String , java.util.concurrent.Callable<T> , org.solovyev.android.tasks.FutureCallback<T> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull java.util.concurrent.Callable<T> < T > java.util.concurrent.Callable<T> , @ Nullable FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> , @ Nonnull Activity org.solovyev.android.tasks.Activity , int int , int int ) { final FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> = org.solovyev.android.tasks.FutureCallback ( java.lang.String , org.solovyev.android.tasks.TaskService . run ( java.lang.String , java.util.concurrent.Callable<T> , org.solovyev.android.tasks.FutureCallback<T> ) ) ; org.solovyev.android.tasks.TaskOverlayDialogs . addTaskOverlayDialog ( TaskOverlayDialog . attachToTask ( org.solovyev.android.tasks.TaskService , org.solovyev.android.tasks.Activity , java.lang.String , int , int ) ) ; return org.solovyev.android.tasks.FutureCallback<T> ; }  <METHOD_END>
<METHOD_START> @ Nullable public < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> ) { return org.solovyev.android.tasks.FutureCallback ( java.lang.String , org.solovyev.android.tasks.TaskService . addTaskListener ( java.lang.String , org.solovyev.android.tasks.FutureCallback<T> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public < T > org.solovyev.android.tasks.FutureCallback<T> < T > org.solovyev.android.tasks.FutureCallback<T> ( @ Nonnull java.lang.String java.lang.String , @ Nonnull FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> , @ Nonnull Activity org.solovyev.android.tasks.Activity , int int , int int ) { final FutureCallback < T > org.solovyev.android.tasks.FutureCallback<T> = org.solovyev.android.tasks.FutureCallback ( java.lang.String , org.solovyev.android.tasks.TaskService . addTaskListener ( java.lang.String , org.solovyev.android.tasks.FutureCallback<T> ) ) ; org.solovyev.android.tasks.TaskOverlayDialogs . addTaskOverlayDialog ( TaskOverlayDialog . attachToTask ( org.solovyev.android.tasks.TaskService , org.solovyev.android.tasks.Activity , java.lang.String , int , int ) ) ; return org.solovyev.android.tasks.FutureCallback<T> ; }  <METHOD_END>
<METHOD_START> public void void ( ) { for ( java.lang.String java.lang.String : java.util.Map<java.lang.String,java.util.List<org.solovyev.android.tasks.FutureCallback<?>>> . keySet ( ) ) { void ( java.lang.String ) ; } java.util.Map<java.lang.String,java.util.List<org.solovyev.android.tasks.FutureCallback<?>>> . clear ( ) ; org.solovyev.android.tasks.TaskOverlayDialogs . dismissAll ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull java.lang.String java.lang.String ) { final java.util.List<org.solovyev.android.tasks.FutureCallback<?>> < FutureCallback < ? > > java.util.List<org.solovyev.android.tasks.FutureCallback<?>> = java.util.Map<java.lang.String,java.util.List<org.solovyev.android.tasks.FutureCallback<?>>> . get ( java.lang.String ) ; if ( java.util.List<org.solovyev.android.tasks.FutureCallback<?>> != null ) { for ( FutureCallback < ? > org.solovyev.android.tasks.FutureCallback<?> : java.util.List<org.solovyev.android.tasks.FutureCallback<?>> ) { org.solovyev.android.tasks.TaskService . removeTaskListener ( java.lang.String , org.solovyev.android.tasks.FutureCallback<> ) ; } java.util.List<org.solovyev.android.tasks.FutureCallback<?>> . clear ( ) ; } }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull ProgressDialog org.solovyev.android.tasks.ProgressDialog ) { this . org.solovyev.android.tasks.ProgressDialog = org.solovyev.android.tasks.ProgressDialog ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static < V > org.solovyev.android.tasks.TaskOverlayDialog<V> < V > org.solovyev.android.tasks.TaskOverlayDialog<V> ( @ Nonnull Activity org.solovyev.android.tasks.Activity , int int , int int ) { final ProgressDialog org.solovyev.android.tasks.ProgressDialog = new ProgressDialog ( org.solovyev.android.tasks.Activity ) ; org.solovyev.android.tasks.ProgressDialog . setIndeterminate ( true ) ; org.solovyev.android.tasks.ProgressDialog . setCancelable ( false ) ; org.solovyev.android.tasks.ProgressDialog . setTitle ( int ) ; org.solovyev.android.tasks.ProgressDialog . setMessage ( org.solovyev.android.tasks.Activity . getText ( int ) ) ; return new org.solovyev.android.tasks.TaskOverlayDialog<V> < V > ( org.solovyev.android.tasks.ProgressDialog ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public static org.solovyev.android.tasks.TaskOverlayDialog<?> < ? > org.solovyev.android.tasks.TaskOverlayDialog<?> ( @ Nonnull TaskService org.solovyev.android.tasks.TaskService , @ Nonnull Activity org.solovyev.android.tasks.Activity , @ Nonnull java.lang.String java.lang.String , int int , int int ) { org.solovyev.android.tasks.TaskOverlayDialog<java.lang.Object> < java.lang.Object > org.solovyev.android.tasks.TaskOverlayDialog<java.lang.Object> = org.solovyev.android.tasks.TaskOverlayDialog ( org.solovyev.android.tasks.Activity , int , int ) ; try { org.solovyev.android.tasks.TaskService . tryAddTaskListener ( java.lang.String , Tasks . toFutureCallback ( org.solovyev.android.tasks.Activity , org.solovyev.android.tasks.TaskOverlayDialog<java.lang.Object> ) ) ; org.solovyev.android.tasks.TaskOverlayDialog<java.lang.Object> . void ( ) ; } catch ( NoSuchTaskException org.solovyev.android.tasks.NoSuchTaskException ) { org.solovyev.android.tasks.TaskOverlayDialog<java.lang.Object> = null ; } catch ( TaskFinishedException org.solovyev.android.tasks.TaskFinishedException ) { org.solovyev.android.tasks.TaskOverlayDialog<java.lang.Object> = null ; } return org.solovyev.android.tasks.TaskOverlayDialog<java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Activity org.solovyev.android.tasks.Activity , V V ) { void ( ) ; }  <METHOD_END>
<METHOD_START> public synchronized void void ( ) { boolean = true ; if ( org.solovyev.android.tasks.ProgressDialog . isShowing ( ) ) { org.solovyev.android.tasks.ProgressDialog . dismiss ( ) ; } }  <METHOD_END>
<METHOD_START> public synchronized void void ( ) { if ( ! boolean ) { org.solovyev.android.tasks.ProgressDialog . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Activity org.solovyev.android.tasks.Activity , java.lang.Throwable java.lang.Throwable ) { void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable TaskOverlayDialog < ? > org.solovyev.android.tasks.TaskOverlayDialog<?> ) { if ( org.solovyev.android.tasks.TaskOverlayDialog<> != null ) { java.util.List<org.solovyev.android.tasks.TaskOverlayDialog<?>> . add ( org.solovyev.android.tasks.TaskOverlayDialog<> ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { for ( TaskOverlayDialog < ? > org.solovyev.android.tasks.TaskOverlayDialog<?> : java.util.List<org.solovyev.android.tasks.TaskOverlayDialog<?>> ) { org.solovyev.android.tasks.TaskOverlayDialog<> . dismiss ( ) ; } java.util.List<org.solovyev.android.tasks.TaskOverlayDialog<?>> . clear ( ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { super(); }  <METHOD_END>
<METHOD_START> @ Nonnull public static < A extends org.solovyev.android.tasks.Activity , V > org.solovyev.android.tasks.FutureCallback<V> < V > org.solovyev.android.tasks.FutureCallback<V> ( @ Nonnull A A , @ Nonnull ContextCallback < A , V > org.solovyev.android.tasks.ContextCallback<A,V> ) { return org.solovyev.android.tasks.Tasks.FutureCallbackAdapter . org.solovyev.android.tasks.Tasks.FutureCallbackAdapter ( A , org.solovyev.android.tasks.ContextCallback<A,V> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < C extends org.solovyev.android.tasks.Context , V > org.solovyev.android.tasks.FutureCallback<V> < V > org.solovyev.android.tasks.FutureCallback<V> ( @ Nonnull C C , @ Nonnull ContextCallback < C , V > org.solovyev.android.tasks.ContextCallback<C,V> ) { return org.solovyev.android.tasks.Tasks.FutureCallbackAdapter . org.solovyev.android.tasks.Tasks.FutureCallbackAdapter ( C , org.solovyev.android.tasks.ContextCallback<C,V> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < C extends org.solovyev.android.tasks.Context , V > org.solovyev.android.tasks.Task<V> < V > org.solovyev.android.tasks.Task<V> ( @ Nonnull C C , @ Nonnull ContextTask < C , V > org.solovyev.android.tasks.ContextTask<C,V> ) { return org.solovyev.android.tasks.Tasks.TaskAdapter . org.solovyev.android.tasks.Task ( C , org.solovyev.android.tasks.ContextTask<C,V> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < C extends org.solovyev.android.tasks.Context , V > org.solovyev.android.tasks.NamedTask<V> < V > org.solovyev.android.tasks.NamedTask<V> ( @ Nonnull C C , @ Nonnull NamedContextTask < C , V > org.solovyev.android.tasks.NamedContextTask<C,V> ) { return org.solovyev.android.tasks.Tasks.NamedTaskAdapter . org.solovyev.android.tasks.Tasks.NamedTaskAdapter ( C , org.solovyev.android.tasks.NamedContextTask<C,V> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < A extends org.solovyev.android.tasks.Activity , V > org.solovyev.android.tasks.Task<V> < V > org.solovyev.android.tasks.Task<V> ( @ Nonnull A A , @ Nonnull ContextTask < A , V > org.solovyev.android.tasks.ContextTask<A,V> ) { return org.solovyev.android.tasks.Tasks.TaskAdapter . org.solovyev.android.tasks.Task ( A , org.solovyev.android.tasks.ContextTask<A,V> ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < A extends org.solovyev.android.tasks.Activity , V > org.solovyev.android.tasks.NamedTask<V> < V > org.solovyev.android.tasks.NamedTask<V> ( @ Nonnull A A , @ Nonnull NamedContextTask < A , V > org.solovyev.android.tasks.NamedContextTask<A,V> ) { return org.solovyev.android.tasks.Tasks.NamedTaskAdapter . org.solovyev.android.tasks.Tasks.NamedTaskAdapter ( A , org.solovyev.android.tasks.NamedContextTask<A,V> ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull C C , @ Nonnull ContextCallback < C , V > org.solovyev.android.tasks.ContextCallback<C,V> , boolean boolean ) { super( C ); this . org.solovyev.android.tasks.ContextCallback<C,V> = org.solovyev.android.tasks.ContextCallback<C,V> ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> private static < A extends org.solovyev.android.tasks.Activity , V > org.solovyev.android.tasks.Tasks.FutureCallbackAdapter<A,V> < A , V > org.solovyev.android.tasks.Tasks.FutureCallbackAdapter<A,V> ( @ Nonnull A A , @ Nonnull ContextCallback < A , V > org.solovyev.android.tasks.ContextCallback<A,V> ) { return new org.solovyev.android.tasks.Tasks.FutureCallbackAdapter<A,V> < A , V > ( A , org.solovyev.android.tasks.ContextCallback<A,V> , true ) ; }  <METHOD_END>
<METHOD_START> private static < C extends org.solovyev.android.tasks.Context , V > org.solovyev.android.tasks.Tasks.FutureCallbackAdapter<C,V> < C , V > org.solovyev.android.tasks.Tasks.FutureCallbackAdapter<C,V> ( @ Nonnull C C , @ Nonnull ContextCallback < C , V > org.solovyev.android.tasks.ContextCallback<C,V> ) { return new org.solovyev.android.tasks.Tasks.FutureCallbackAdapter<C,V> < C , V > ( C , org.solovyev.android.tasks.ContextCallback<C,V> , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final V V ) { final C C = getContext ( ) ; if ( C != null ) { if ( boolean ) { final Activity org.solovyev.android.tasks.Activity = ( Activity ) C ; Threads . tryRunOnUiThread ( org.solovyev.android.tasks.Activity , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { org.solovyev.android.tasks.ContextCallback<C,V> . onSuccess ( C , V ) ; } } ) ; } else { org.solovyev.android.tasks.ContextCallback<C,V> . onSuccess ( C , V ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.tasks.ContextCallback<C,V> . onSuccess ( C , V ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.Throwable java.lang.Throwable ) { final C C = getContext ( ) ; if ( C != null ) { if ( boolean ) { Threads . tryRunOnUiThread ( ( Activity ) C , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { org.solovyev.android.tasks.ContextCallback<C,V> . onFailure ( C , java.lang.Throwable ) ; } } ) ; } else { org.solovyev.android.tasks.ContextCallback<C,V> . onFailure ( C , java.lang.Throwable ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.tasks.ContextCallback<C,V> . onFailure ( C , java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull ContextTask < C , V > org.solovyev.android.tasks.ContextTask<C,V> , @ Nonnull FutureCallback < V > org.solovyev.android.tasks.FutureCallback<V> ) { this . org.solovyev.android.tasks.ContextTask<C,V> = org.solovyev.android.tasks.ContextTask<C,V> ; this . org.solovyev.android.tasks.FutureCallback<V> = org.solovyev.android.tasks.FutureCallback<V> ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static < A extends org.solovyev.android.tasks.Activity , V > org.solovyev.android.tasks.Task<V> < V > org.solovyev.android.tasks.Task<V> ( @ Nonnull A A , @ Nonnull ContextTask < A , V > org.solovyev.android.tasks.ContextTask<A,V> ) { return new org.solovyev.android.tasks.Tasks.TaskAdapter<A,V> < A , V > ( org.solovyev.android.tasks.ContextTask<A,V> , org.solovyev.android.tasks.FutureCallback ( A , org.solovyev.android.tasks.ContextTask<A,V> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static < C extends org.solovyev.android.tasks.Context , V > org.solovyev.android.tasks.Task<V> < V > org.solovyev.android.tasks.Task<V> ( @ Nonnull C C , @ Nonnull ContextTask < C , V > org.solovyev.android.tasks.ContextTask<C,V> ) { return new org.solovyev.android.tasks.Tasks.TaskAdapter<C,V> < C , V > ( org.solovyev.android.tasks.ContextTask<C,V> , org.solovyev.android.tasks.FutureCallback ( C , org.solovyev.android.tasks.ContextTask<C,V> ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public V V ( ) java.lang.Exception { return org.solovyev.android.tasks.ContextTask<C,V> . call ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( V V ) { org.solovyev.android.tasks.FutureCallback<V> . onSuccess ( V ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Throwable java.lang.Throwable ) { org.solovyev.android.tasks.FutureCallback<V> . onFailure ( java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull NamedContextTask < C , V > org.solovyev.android.tasks.NamedContextTask<C,V> , @ Nonnull Task < V > org.solovyev.android.tasks.Task<V> ) { this . org.solovyev.android.tasks.Task<V> = org.solovyev.android.tasks.Task<V> ; this . org.solovyev.android.tasks.NamedContextTask<C,V> = org.solovyev.android.tasks.NamedContextTask<C,V> ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static < C extends org.solovyev.android.tasks.Context , V > org.solovyev.android.tasks.Tasks.NamedTaskAdapter<C,V> < C , V > org.solovyev.android.tasks.Tasks.NamedTaskAdapter<C,V> ( @ Nonnull C C , @ Nonnull NamedContextTask < C , V > org.solovyev.android.tasks.NamedContextTask<C,V> ) { return new org.solovyev.android.tasks.Tasks.NamedTaskAdapter<C,V> < C , V > ( org.solovyev.android.tasks.NamedContextTask<C,V> , org.solovyev.android.tasks.Tasks.TaskAdapter . org.solovyev.android.tasks.Task ( C , org.solovyev.android.tasks.NamedContextTask<C,V> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static < A extends org.solovyev.android.tasks.Activity , V > org.solovyev.android.tasks.Tasks.NamedTaskAdapter<A,V> < A , V > org.solovyev.android.tasks.Tasks.NamedTaskAdapter<A,V> ( @ Nonnull A A , @ Nonnull NamedContextTask < A , V > org.solovyev.android.tasks.NamedContextTask<A,V> ) { return new org.solovyev.android.tasks.Tasks.NamedTaskAdapter<A,V> < A , V > ( org.solovyev.android.tasks.NamedContextTask<A,V> , org.solovyev.android.tasks.Tasks.TaskAdapter . org.solovyev.android.tasks.Task ( A , org.solovyev.android.tasks.NamedContextTask<A,V> ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( ) { return org.solovyev.android.tasks.NamedContextTask<C,V> . getName ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public V V ( ) java.lang.Exception { return org.solovyev.android.tasks.NamedContextTask<C,V> . call ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( V V ) { org.solovyev.android.tasks.Task<V> . onSuccess ( V ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Throwable java.lang.Throwable ) { org.solovyev.android.tasks.Task<V> . onFailure ( java.lang.Throwable ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull HistoryControl < T > org.solovyev.android.history.HistoryControl<T> ) { this . org.solovyev.android.history.HistoryControl<T> = org.solovyev.android.history.HistoryControl<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull DragDirection org.solovyev.android.history.DragDirection , @ Nonnull DragButton org.solovyev.android.history.DragButton , @ Nonnull Point2d org.solovyev.android.history.Point2d , @ Nonnull MotionEvent org.solovyev.android.history.MotionEvent ) { boolean boolean = false ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.history.DragButton . getId ( ) ) , STRING + org.solovyev.android.history.DragDirection ) ; final HistoryAction org.solovyev.android.history.HistoryAction ; if ( org.solovyev.android.history.DragDirection == DragDirection . up ) { org.solovyev.android.history.HistoryAction = HistoryAction . undo ; } else if ( org.solovyev.android.history.DragDirection == DragDirection . down ) { org.solovyev.android.history.HistoryAction = HistoryAction . redo ; } else { org.solovyev.android.history.HistoryAction = null ; } if ( org.solovyev.android.history.HistoryAction != null ) { boolean = true ; org.solovyev.android.history.HistoryControl<T> . doHistoryAction ( org.solovyev.android.history.HistoryAction ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull TabActivity org.solovyev.android.TabActivity , @ Nonnull java.lang.String java.lang.String ) { this . org.solovyev.android.TabActivity = org.solovyev.android.TabActivity ; this . org.solovyev.android.StringPreference<java.lang.String> = StringPreference . of ( java.lang.String ( ) , java.lang.String ) ; final TabHost org.solovyev.android.TabHost = org.solovyev.android.TabActivity . getTabHost ( ) ; org.solovyev.android.TabHost . setCurrentTabByTag ( this . java.lang.String ( ) ) ; org.solovyev.android.TabHost . setOnTabChangedListener ( this ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final TabHost org.solovyev.android.TabHost = org.solovyev.android.TabActivity . getTabHost ( ) ; org.solovyev.android.TabHost . setOnTabChangedListener ( null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { org.solovyev.android.StringPreference<java.lang.String> . putPreference ( PreferenceManager . getDefaultSharedPreferences ( org.solovyev.android.TabActivity ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return org.solovyev.android.StringPreference<java.lang.String> . getPreference ( PreferenceManager . getDefaultSharedPreferences ( org.solovyev.android.TabActivity ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.lang.String java.lang.String ( ) { return java.lang.String + org.solovyev.android.TabActivity . getClass ( ) . getName ( ) ; }  <METHOD_END>
<METHOD_START> protected void ( Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet , @ Nullable java.lang.String java.lang.String , boolean boolean , @ Nonnull java.lang.Class<T> < T > java.lang.Class<T> ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , java.lang.String , boolean , EnumMapper . of ( java.lang.Class<T> ) ); this . java.lang.Class<T> = java.lang.Class<T> ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected Picker . Picker < T > createRange ( @ Nonnull T T ) { return new ListRange < T > ( java.util.Arrays . java.util.List<T> ( java.lang.Class<T> . T[] ( ) ) , T , new LabeledFormatter < T > ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> protected void ( Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet , @ Nullable java.lang.String java.lang.String , boolean boolean , @ Nonnull Mapper < T > org.solovyev.android.prefs.Mapper<T> ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , java.lang.String , boolean , org.solovyev.android.prefs.Mapper<T> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected LinearLayout . LinearLayout.LayoutParams LinearLayout.LayoutParams ( ) { final LinearLayout . LinearLayout LinearLayout.LayoutParams = new LinearLayout . LinearLayout ( LinearLayout . LayoutParams . WRAP_CONTENT , LinearLayout . LayoutParams . WRAP_CONTENT ) ; result . gravity = Gravity . CENTER ; return LinearLayout.LayoutParams ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.View org.solovyev.android.prefs.View ( @ Nonnull Context org.solovyev.android.prefs.Context ) { final Picker < T > org.solovyev.android.prefs.Picker<T> = new Picker < T > ( org.solovyev.android.prefs.Context ) ; org.solovyev.android.prefs.Picker<T> . setOnChangeListener ( this ) ; return org.solovyev.android.prefs.Picker<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull View org.solovyev.android.prefs.View , @ Nullable T T ) { if ( T != null ) { ( ( Picker < T > ) org.solovyev.android.prefs.View ) . setRange ( createRange ( T ) ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract Picker . Picker < T > createRange ( @ Nonnull T T );  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull Picker org.solovyev.android.prefs.Picker , @ Nonnull T T ) { persistValue ( T ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Double java.lang.Double ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.NumberRange<java.lang.Double> < java.lang.Double > org.solovyev.android.prefs.NumberRange<java.lang.Double> ( @ Nonnull Interval < java.lang.Double > org.solovyev.android.prefs.Interval<java.lang.Double> , @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double ) { return DoubleRange . newInstance ( org.solovyev.android.prefs.Interval<java.lang.Double> . getLeftLimit ( ) , org.solovyev.android.prefs.Interval<java.lang.Double> . getRightLimit ( ) , java.lang.Double , java.lang.Double , org.solovyev.android.prefs.Formatter<java.lang.Double> ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , NumberIntervalMapper . of ( java.lang.Double .class ) ); }  <METHOD_END>
<METHOD_START> private void ( int int ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( STRING ) ; for ( int int = NUMBER ; int < int ; int ++ ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } this . java.text.DecimalFormat = new java.text.DecimalFormat ( java.lang.StringBuilder . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( @ Nullable java.lang.Double java.lang.Double ) throws java.lang.IllegalArgumentException { if ( java.lang.Double == null ) { return STRING ; } else { synchronized ( java.text.DecimalFormat ) { return java.text.DecimalFormat . java.lang.String ( java.lang.Double ) ; } } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , NumberIntervalMapper . of ( java.lang.Float .class ) ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Float java.lang.Float ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Float java.lang.Float ( @ Nonnull java.lang.Float java.lang.Float , @ Nonnull java.lang.Float java.lang.Float ) { return java.lang.Float + java.lang.Float ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , NumberIntervalMapper . of ( java.lang.Integer .class ) ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Integer java.lang.Integer ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.prefs.NumberRange<java.lang.Integer> < java.lang.Integer > org.solovyev.android.prefs.NumberRange<java.lang.Integer> ( @ Nonnull Interval < java.lang.Integer > org.solovyev.android.prefs.Interval<java.lang.Integer> , @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer ) { return IntegerRange . newInstance ( org.solovyev.android.prefs.Interval<java.lang.Integer> . getLeftLimit ( ) , org.solovyev.android.prefs.Interval<java.lang.Integer> . getRightLimit ( ) , java.lang.Integer , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , NumberIntervalMapper . of ( java.lang.Integer .class ) ); }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Integer java.lang.Integer ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Integer java.lang.Integer ( @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer ) { return java.lang.Integer + java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.prefs.Context ) { this( org.solovyev.android.prefs.Context , null ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.prefs.Context , @ Nullable AttributeSet org.solovyev.android.prefs.AttributeSet ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet ); final TypedArray org.solovyev.android.prefs.TypedArray = org.solovyev.android.prefs.Context . obtainStyledAttributes ( org.solovyev.android.prefs.AttributeSet , R . styleable . MultiSelectListPreference ) ; final java.lang.String java.lang.String ; if ( org.solovyev.android.prefs.TypedArray . hasValue ( R . styleable . MultiSelectListPreference_separator ) ) { java.lang.String = org.solovyev.android.prefs.TypedArray . getString ( R . styleable . MultiSelectListPreference_separator ) ; } else { java.lang.String = java.lang.String ; } org.solovyev.android.prefs.TypedArray . recycle ( ) ; this . mapper = new org.solovyev.android.prefs.MultiSelectListPreference.Mapper ( java.lang.String ) ; this . boolean[] = new boolean [ getEntries ( ) . length ] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull java.lang.CharSequence [] java.lang.CharSequence[] ) { super. setEntries ( java.lang.CharSequence[] ) ; boolean[] = new boolean [ java.lang.CharSequence[] . int ] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull Builder org.solovyev.android.prefs.Builder ) { final java.lang.CharSequence [] java.lang.CharSequence[] = getEntries ( ) ; final java.lang.CharSequence [] java.lang.CharSequence[] = getEntryValues ( ) ; if ( java.lang.CharSequence[] == null || java.lang.CharSequence[] == null || java.lang.CharSequence[] . int != java.lang.CharSequence[] . int ) { throw new java.lang.IllegalStateException ( STRING ) ; } void ( ) ; org.solovyev.android.prefs.Builder . setMultiChoiceItems ( java.lang.CharSequence[] , boolean[] , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface org.solovyev.android.prefs.DialogInterface , int int , boolean boolean ) { boolean[] [ int ] = boolean ; } } ) ; }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface org.solovyev.android.prefs.DialogInterface , int int , boolean boolean ) { boolean[] [ int ] = boolean ; }  <METHOD_END>
<METHOD_START> private void void ( ) { final java.lang.CharSequence [] java.lang.CharSequence[] = getEntryValues ( ) ; final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = mapper . parseValue ( getValue ( ) ) ; if ( java.util.List<java.lang.String> != null ) { for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { for ( int int = NUMBER ; int < java.lang.CharSequence[] . int ; int ++ ) { final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence[] [ int ] ; if ( java.lang.CharSequence . boolean ( java.lang.String ) ) { boolean[] [ int ] = true ; break; } } } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( boolean boolean ) { final java.lang.CharSequence [] java.lang.CharSequence[] = getEntryValues ( ) ; if ( boolean && java.lang.CharSequence[] != null ) { final java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( int int = NUMBER ; int < java.lang.CharSequence[] . int ; int ++ ) { if ( boolean[] [ int ] ) { java.util.List<java.lang.String> . boolean ( java.lang.CharSequence[] [ int ] . java.lang.String ( ) ) ; } } final java.lang.String java.lang.String = mapper . formatValue ( java.util.List<java.lang.String> ) ; if ( callChangeListener ( java.lang.String ) ) { setValue ( java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( @ Nullable java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) throws java.lang.IllegalArgumentException { return StringCollections . formatValue ( java.util.List<java.lang.String> , java.lang.String , StringMapper . getInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( @ Nullable java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { return StringCollections . split ( java.lang.String , java.lang.String , StringMapper . getInstance ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T > org . solovyev . org.solovyev.common . org.solovyev.common . org.solovyev.common < java.util.List<T> < T > > newListMapper ( @ Nonnull org . solovyev . org.solovyev.common . org.solovyev.common . org.solovyev.common < T > nestedMapper ) { return new org.solovyev.android.prefs.MultiSelectListPreference.ListMapper < T > ( java.lang.String , nestedMapper ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < T > org . solovyev . org.solovyev.common . org.solovyev.common . org.solovyev.common < java.util.List<T> < T > > newListMapper ( @ Nonnull org . solovyev . org.solovyev.common . org.solovyev.common . org.solovyev.common < T > nestedMapper , @ Nonnull java.lang.String java.lang.String ) { return new org.solovyev.android.prefs.MultiSelectListPreference.ListMapper < T > ( java.lang.String , nestedMapper ) ; }  <METHOD_END>
<METHOD_START> public ListMapper ( @ Nonnull java.lang.String java.lang.String , @ Nonnull org . solovyev . org.solovyev.common . org.solovyev.common . org.solovyev.common < T > nestedMapper ) { this . java.lang.String = java.lang.String ; this . nestedMapper = nestedMapper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( @ Nullable java.util.List<T> < T > java.util.List<T> ) throws java.lang.IllegalArgumentException { return StringCollections . formatValue ( java.util.List<T> , java.lang.String , nestedMapper ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( @ Nullable java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException { return StringCollections . split ( java.lang.String , java.lang.String , nestedMapper ) ; }  <METHOD_END>
<METHOD_START> protected void ( Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet , @ Nonnull NumberIntervalMapper < N > org.solovyev.android.prefs.NumberIntervalMapper<N> ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , null , false , org.solovyev.android.prefs.NumberIntervalMapper<N> . getMapper ( ) ); org.solovyev.android.prefs.Interval<N> = org.solovyev.android.prefs.NumberIntervalMapper<N> . parseValue ( org.solovyev.android.prefs.AttributeSet . getAttributeValue ( AbstractDialogPreference . localNameSpace , STRING ) ) ; final java.lang.String java.lang.String = org.solovyev.android.prefs.AttributeSet . getAttributeValue ( AbstractDialogPreference . localNameSpace , STRING ) ; if ( java.lang.String == null ) { N = N ( ) ; } else { N = org.solovyev.android.prefs.NumberIntervalMapper<N> . getMapper ( ) . parseValue ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract N N ( )  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected Picker . Picker < N > createRange ( @ Nonnull N N ) { return org.solovyev.android.prefs.NumberRange<N> ( org.solovyev.android.prefs.Interval<N> , N , N ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.prefs.NumberRange<N> < N > org.solovyev.android.prefs.NumberRange<N> ( @ Nonnull Interval < N > org.solovyev.android.prefs.Interval<N> , @ Nonnull N N , @ Nonnull N N );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.prefs.Context , AttributeSet org.solovyev.android.prefs.AttributeSet , @ Nonnull NumberIntervalMapper < T > org.solovyev.android.prefs.NumberIntervalMapper<T> ) { super( org.solovyev.android.prefs.Context , org.solovyev.android.prefs.AttributeSet , null , true , org.solovyev.android.prefs.NumberIntervalMapper<T> ); org.solovyev.android.prefs.Interval<T> = org.solovyev.android.prefs.NumberIntervalMapper<T> . parseValue ( org.solovyev.android.prefs.AttributeSet . getAttributeValue ( AbstractDialogPreference . localNameSpace , STRING ) ) ; final java.lang.String java.lang.String = org.solovyev.android.prefs.AttributeSet . getAttributeValue ( AbstractDialogPreference . localNameSpace , STRING ) ; if ( java.lang.String == null ) { T = T ( ) ; } else { T = org.solovyev.android.prefs.NumberIntervalMapper<T> . getMapper ( ) . parseValue ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract T T ( )  <METHOD_END>
<METHOD_START> @ Nonnull protected org.solovyev.android.prefs.View org.solovyev.android.prefs.View ( @ Nonnull Context org.solovyev.android.prefs.Context ) { int int = NUMBER ; for ( T T = org.solovyev.android.prefs.Interval<T> . getLeftLimit ( ) ; T . int ( org.solovyev.android.prefs.Interval<T> . getRightLimit ( ) ) <= NUMBER ; T = T ( T , T ) ) { int += NUMBER ; } final NumberRangeSeekBar < T > org.solovyev.android.prefs.NumberRangeSeekBar<T> = new NumberRangeSeekBar < T > ( org.solovyev.android.prefs.Interval<T> , int , org.solovyev.android.prefs.Context ) ; org.solovyev.android.prefs.NumberRangeSeekBar<T> . setNotifyWhileDragging ( true ) ; org.solovyev.android.prefs.NumberRangeSeekBar<T> . setOnRangeSeekBarChangeListener ( this ) ; return org.solovyev.android.prefs.NumberRangeSeekBar<T> ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract T T ( @ Nonnull T T , @ Nonnull T T );  <METHOD_END>
<METHOD_START> @ java.lang.Override protected LinearLayout . LinearLayout.LayoutParams LinearLayout.LayoutParams ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nonnull View org.solovyev.android.prefs.View , Interval < T > org.solovyev.android.prefs.Interval<T> ) { if ( org.solovyev.android.prefs.Interval<T> != null ) { ( ( NumberRangeSeekBar < T > ) org.solovyev.android.prefs.View ) . setSelectedMinValue ( org.solovyev.android.prefs.Interval<T> . getLeftLimit ( ) ) ; ( ( NumberRangeSeekBar < T > ) org.solovyev.android.prefs.View ) . setSelectedMaxValue ( org.solovyev.android.prefs.Interval<T> . getRightLimit ( ) ) ; void ( org.solovyev.android.prefs.Interval<T> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( T T , T T , boolean boolean ) { final Interval < T > org.solovyev.android.prefs.Interval<T> = Intervals . newClosedInterval ( T , T ) ; if ( boolean ) { persistValue ( org.solovyev.android.prefs.Interval<T> ) ; } void ( org.solovyev.android.prefs.Interval<T> ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull Interval < T > org.solovyev.android.prefs.Interval<T> ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( org.solovyev.android.prefs.Interval<T> ) ; final java.lang.String java.lang.String = getValueText ( ) ; updateValueText ( java.lang.String == null ? java.lang.String : java.lang.String . java.lang.String ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull T T , @ Nonnull T T , @ Nullable java.lang.Integer java.lang.Integer , Context org.solovyev.android.view.Context ) throws java.lang.IllegalArgumentException { super( org.solovyev.android.view.Context ); this . T = T ; this . T = T ; this . org.solovyev.android.view.Converter<T,java.lang.Double> = org.solovyev.android.view.Converter<T,java.lang.Double> ( ) ; this . org.solovyev.android.view.Converter<java.lang.Double,T> = org.solovyev.android.view.Converter<java.lang.Double,T> ( ) ; org.solovyev.android.view.Normalizer = new LinearNormalizer ( org.solovyev.android.view.Converter<T,java.lang.Double> . convert ( T ) , org.solovyev.android.view.Converter<T,java.lang.Double> . convert ( T ) ) ; org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer = new org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer ( ) ; org.solovyev.android.view.Normalizer = new Normalizer ( ) { @ java.lang.Override public double double ( double double ) { int int = getWidth ( ) ; if ( int <= NUMBER * org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) { return NUMBER ; } else { double double = ( double - org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) / ( int - NUMBER * org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) ; return java.lang.Math . double ( NUMBER , java.lang.Math . double ( NUMBER , double ) ) ; } } @ java.lang.Override public double double ( double double ) { return ( float ) ( org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float + double * ( getWidth ( ) - NUMBER * org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( double double ) { int int = getWidth ( ) ; if ( int <= NUMBER * org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) { return NUMBER ; } else { double double = ( double - org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) / ( int - NUMBER * org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) ; return java.lang.Math . double ( NUMBER , java.lang.Math . double ( NUMBER , double ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public double double ( double double ) { return ( float ) ( org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float + double * ( getWidth ( ) - NUMBER * org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.view.Converter<java.lang.Double,T> < java.lang.Double , T > org.solovyev.android.view.Converter<java.lang.Double,T> ( )  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract org.solovyev.android.view.Converter<T,java.lang.Double> < T , java.lang.Double > org.solovyev.android.view.Converter<T,java.lang.Double> ( )  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public T T ( ) { return T ; }  <METHOD_END>
<METHOD_START> @ Nonnull public T T ( ) { return T ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return T ( double ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull T T ) { void ( double ( T ) ) ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return T ( double ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull T T ) { void ( double ( T ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.solovyev.android.view.AbstractRangeSeekBar.OnRangeSeekBarChangeListener<T> < T > org.solovyev.android.view.AbstractRangeSeekBar.OnRangeSeekBarChangeListener<T> ) { this . org.solovyev.android.view.AbstractRangeSeekBar.OnRangeSeekBarChangeListener<T> = org.solovyev.android.view.AbstractRangeSeekBar.OnRangeSeekBarChangeListener<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.view.MotionEvent ) { switch ( org.solovyev.android.view.MotionEvent . getAction ( ) ) { case MotionEvent . ACTION_DOWN : org.solovyev.android.view.AbstractRangeSeekBar.Thumb = org.solovyev.android.view.AbstractRangeSeekBar.Thumb ( org.solovyev.android.view.MotionEvent . getX ( ) ) ; invalidate ( ) ; break; case MotionEvent . ACTION_MOVE : if ( org.solovyev.android.view.AbstractRangeSeekBar.Thumb != null ) { double double = double ( org.solovyev.android.view.MotionEvent . getX ( ) ) ; if ( org.solovyev.android.view.AbstractRangeSeekBar.Thumb . org.solovyev.android.view.AbstractRangeSeekBar.Thumb . boolean ( org.solovyev.android.view.AbstractRangeSeekBar.Thumb ) ) { void ( double ) ; } else if ( org.solovyev.android.view.AbstractRangeSeekBar.Thumb . org.solovyev.android.view.AbstractRangeSeekBar.Thumb . boolean ( org.solovyev.android.view.AbstractRangeSeekBar.Thumb ) ) { void ( double ) ; } if ( boolean && org.solovyev.android.view.AbstractRangeSeekBar.OnRangeSeekBarChangeListener<T> != null ) { org.solovyev.android.view.AbstractRangeSeekBar.OnRangeSeekBarChangeListener<T> . void ( T ( ) , T ( ) , false ) ; } } break; case MotionEvent . ACTION_UP : case MotionEvent . ACTION_CANCEL : org.solovyev.android.view.AbstractRangeSeekBar.Thumb = null ; invalidate ( ) ; if ( org.solovyev.android.view.AbstractRangeSeekBar.OnRangeSeekBarChangeListener<T> != null ) { org.solovyev.android.view.AbstractRangeSeekBar.OnRangeSeekBarChangeListener<T> . void ( T ( ) , T ( ) , true ) ; } break; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int ) { int int = NUMBER ; if ( MeasureSpec . UNSPECIFIED != MeasureSpec . getMode ( int ) ) { int = MeasureSpec . getSize ( int ) ; } int int = org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . org.solovyev.android.view.Bitmap . getHeight ( ) ; if ( MeasureSpec . UNSPECIFIED != MeasureSpec . getMode ( int ) ) { int = java.lang.Math . int ( int , MeasureSpec . getSize ( int ) ) ; } setMeasuredDimension ( int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Canvas org.solovyev.android.view.Canvas ) { super. onDraw ( org.solovyev.android.view.Canvas ) ; final RectF org.solovyev.android.view.RectF = org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . org.solovyev.android.view.RectF ( ) ; org.solovyev.android.view.Paint . setStyle ( Style . FILL ) ; org.solovyev.android.view.Paint . setColor ( Color . GRAY ) ; org.solovyev.android.view.Canvas . drawRect ( org.solovyev.android.view.RectF , org.solovyev.android.view.Paint ) ; rect . left = float ( double ) ; rect . right = float ( double ) ; org.solovyev.android.view.Paint . setColor ( Color . rgb ( NUMBER , NUMBER , NUMBER ) ) ; org.solovyev.android.view.Canvas . drawRect ( org.solovyev.android.view.RectF , org.solovyev.android.view.Paint ) ; void ( float ( double ) , org.solovyev.android.view.AbstractRangeSeekBar.Thumb . org.solovyev.android.view.AbstractRangeSeekBar.Thumb == org.solovyev.android.view.AbstractRangeSeekBar.Thumb , org.solovyev.android.view.Canvas ) ; void ( float ( double ) , org.solovyev.android.view.AbstractRangeSeekBar.Thumb . org.solovyev.android.view.AbstractRangeSeekBar.Thumb == org.solovyev.android.view.AbstractRangeSeekBar.Thumb , org.solovyev.android.view.Canvas ) ; }  <METHOD_END>
<METHOD_START> private void void ( float float , boolean boolean , Canvas org.solovyev.android.view.Canvas ) { org.solovyev.android.view.Canvas . drawBitmap ( org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . org.solovyev.android.view.Bitmap ( boolean ) , float - org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float , ( float ) ( ( NUMBER * getHeight ( ) ) - org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ) , org.solovyev.android.view.Paint ) ; }  <METHOD_END>
<METHOD_START> private org.solovyev.android.view.AbstractRangeSeekBar.Thumb org.solovyev.android.view.AbstractRangeSeekBar.Thumb ( float float ) { org.solovyev.android.view.AbstractRangeSeekBar.Thumb org.solovyev.android.view.AbstractRangeSeekBar.Thumb = null ; boolean boolean = boolean ( float , double ) ; boolean boolean = boolean ( float , double ) ; if ( boolean && boolean ) { org.solovyev.android.view.AbstractRangeSeekBar.Thumb = ( float / getWidth ( ) > NUMBER ) ? org.solovyev.android.view.AbstractRangeSeekBar.Thumb . org.solovyev.android.view.AbstractRangeSeekBar.Thumb : org.solovyev.android.view.AbstractRangeSeekBar.Thumb . org.solovyev.android.view.AbstractRangeSeekBar.Thumb ; } else if ( boolean ) { org.solovyev.android.view.AbstractRangeSeekBar.Thumb = org.solovyev.android.view.AbstractRangeSeekBar.Thumb . org.solovyev.android.view.AbstractRangeSeekBar.Thumb ; } else if ( boolean ) { org.solovyev.android.view.AbstractRangeSeekBar.Thumb = org.solovyev.android.view.AbstractRangeSeekBar.Thumb . org.solovyev.android.view.AbstractRangeSeekBar.Thumb ; } return org.solovyev.android.view.AbstractRangeSeekBar.Thumb ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( float float , double double ) { return java.lang.Math . float ( float - float ( double ) ) <= org.solovyev.android.view.AbstractRangeSeekBar<T>.ThumbContainer . float ; }  <METHOD_END>
<METHOD_START> private void void ( double double ) { double = java.lang.Math . double ( NUMBER , java.lang.Math . double ( NUMBER , java.lang.Math . double ( double , double ) ) ) ; invalidate ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( double double ) { double = java.lang.Math . double ( NUMBER , java.lang.Math . double ( NUMBER , java.lang.Math . double ( double , double ) ) ) ; invalidate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private T T ( double double ) { return org.solovyev.android.view.Converter<java.lang.Double,T> . convert ( org.solovyev.android.view.Normalizer . denormalize ( double ) ) ; }  <METHOD_END>
<METHOD_START> private double double ( T T ) { return org.solovyev.android.view.Normalizer . normalize ( org.solovyev.android.view.Converter<T,java.lang.Double> . convert ( T ) ) ; }  <METHOD_END>
<METHOD_START> private float float ( double double ) { return ( float ) this . org.solovyev.android.view.Normalizer . denormalize ( double ) ; }  <METHOD_END>
<METHOD_START> private double double ( float float ) { return this . org.solovyev.android.view.Normalizer . normalize ( float ) ; }  <METHOD_END>
<METHOD_START> void void ( T T , T T , boolean boolean );  <METHOD_END>
<METHOD_START> public org.solovyev.android.view.RectF org.solovyev.android.view.RectF ( ) { return new RectF ( float , NUMBER * ( getHeight ( ) - float ) , getWidth ( ) - float , NUMBER * ( getHeight ( ) + float ) ) ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.view.Bitmap org.solovyev.android.view.Bitmap ( boolean boolean ) { return boolean ? org.solovyev.android.view.Bitmap : org.solovyev.android.view.Bitmap ; }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull Activity org.solovyev.android.view.Activity );  <METHOD_END>
<METHOD_START> private void ( ) { throw new java.lang.AssertionError ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Canvas org.solovyev.android.view.Canvas , @ Nonnull TextView org.solovyev.android.view.TextView ) { final int int = org.solovyev.android.view.TextView . getCompoundPaddingLeft ( ) ; final int int = org.solovyev.android.view.TextView . getCompoundPaddingTop ( ) ; final int int = org.solovyev.android.view.TextView . getCompoundPaddingRight ( ) ; final int int = org.solovyev.android.view.TextView . getCompoundPaddingBottom ( ) ; final int int = org.solovyev.android.view.TextView . getScrollX ( ) ; final int int = org.solovyev.android.view.TextView . getScrollY ( ) ; final int int = org.solovyev.android.view.TextView . getRight ( ) ; final int int = org.solovyev.android.view.TextView . getLeft ( ) ; final int int = org.solovyev.android.view.TextView . getBottom ( ) ; final int int = org.solovyev.android.view.TextView . getTop ( ) ; final Drawable [] org.solovyev.android.view.Drawable[] = org.solovyev.android.view.TextView . getCompoundDrawables ( ) ; if ( org.solovyev.android.view.Drawable[] != null ) { int int = int - int - int - int ; int int = int - int - int - int ; Drawable org.solovyev.android.view.Drawable = org.solovyev.android.view.Drawable[] [ NUMBER ] ; if ( org.solovyev.android.view.Drawable != null ) { org.solovyev.android.view.Canvas . save ( ) ; org.solovyev.android.view.Canvas . translate ( int + int + ( int - org.solovyev.android.view.Drawable . getBounds ( ) . width ( ) ) / NUMBER , int + org.solovyev.android.view.TextView . getPaddingTop ( ) + int / NUMBER ) ; org.solovyev.android.view.Drawable . draw ( org.solovyev.android.view.Canvas ) ; org.solovyev.android.view.Canvas . restore ( ) ; return true ; } } return false ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Button org.solovyev.android.view.Button , @ Nonnull ButtonDef org.solovyev.android.view.ButtonDef ) { org.solovyev.android.view.Button . setText ( org.solovyev.android.view.ButtonDef . getText ( ) ) ; final java.lang.Integer java.lang.Integer = org.solovyev.android.view.ButtonDef . getDrawableResId ( ) ; if ( java.lang.Integer != null ) { org.solovyev.android.view.Button . setPadding ( NUMBER , NUMBER , NUMBER , NUMBER ) ; final Drawable org.solovyev.android.view.Drawable = org.solovyev.android.view.Button . getContext ( ) . getResources ( ) . getDrawable ( java.lang.Integer ) ; org.solovyev.android.view.Button . setCompoundDrawablesWithIntrinsicBounds ( null , org.solovyev.android.view.Drawable , null , null ) ; org.solovyev.android.view.Button . setCompoundDrawablePadding ( NUMBER ) ; } void ( org.solovyev.android.view.Button , org.solovyev.android.view.ButtonDef ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull ImageButton org.solovyev.android.view.ImageButton , @ Nonnull ButtonDef org.solovyev.android.view.ButtonDef ) { final java.lang.Integer java.lang.Integer = org.solovyev.android.view.ButtonDef . getDrawableResId ( ) ; if ( java.lang.Integer != null ) { org.solovyev.android.view.ImageButton . setImageDrawable ( org.solovyev.android.view.ImageButton . getContext ( ) . getResources ( ) . getDrawable ( java.lang.Integer ) ) ; } void ( org.solovyev.android.view.ImageButton , org.solovyev.android.view.ButtonDef ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull View org.solovyev.android.view.View , @ Nonnull ViewDef org.solovyev.android.view.ViewDef ) { final java.lang.Integer java.lang.Integer = org.solovyev.android.view.ViewDef . getBackgroundResId ( ) ; if ( java.lang.Integer != null ) { org.solovyev.android.view.View . setBackgroundResource ( java.lang.Integer ) ; } final java.lang.String java.lang.String = org.solovyev.android.view.ViewDef . getTag ( ) ; if ( java.lang.String != null ) { org.solovyev.android.view.View . setTag ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public void void ( TextView org.solovyev.android.view.TextView , float float , float float );  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context ) { super( org.solovyev.android.view.Context ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet , int int ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet , int ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( final java.lang.CharSequence java.lang.CharSequence , final int int , final int int , final int int ) { boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int , int int , int int ) { if ( int != int || int != int ) { boolean = true ; } }  <METHOD_END>
<METHOD_START> public void void ( org.solovyev.android.view.AutoResizeTextView.OnTextResizeListener org.solovyev.android.view.AutoResizeTextView.OnTextResizeListener ) { org.solovyev.android.view.AutoResizeTextView.OnTextResizeListener = org.solovyev.android.view.AutoResizeTextView.OnTextResizeListener ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , float float ) { super. setTextSize ( int , float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( float float , float float ) { super. setLineSpacing ( float , float ) ; float = float ; float = float ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { this . float = float ; requestLayout ( ) ; invalidate ( ) ; }  <METHOD_END>
<METHOD_START> public float float ( ) { return float ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( boolean boolean , int int , int int , int int , int int ) { if ( boolean || boolean ) { int int = ( int - int ) - getCompoundPaddingLeft ( ) - getCompoundPaddingRight ( ) ; int int = ( int - int ) - getCompoundPaddingBottom ( ) - getCompoundPaddingTop ( ) ; void ( int , int , getText ( ) ) ; } super. onLayout ( boolean , int , int , int , int ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( getText ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( final java.lang.CharSequence java.lang.CharSequence ) { int int = getHeight ( ) - getPaddingBottom ( ) - getPaddingTop ( ) ; int int = getWidth ( ) - getPaddingLeft ( ) - getPaddingRight ( ) ; void ( int , int , java.lang.CharSequence ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int , int int , java.lang.CharSequence java.lang.CharSequence ) { Log . d ( this . java.lang.Class<? extends org.solovyev.android.view.AutoResizeTextView> ( ) . java.lang.String ( ) , STRING + int + STRING + int + STRING + java.lang.CharSequence + STRING ) ; if ( java.lang.CharSequence == null || java.lang.CharSequence . int ( ) == NUMBER || int <= NUMBER || int <= NUMBER ) { return; } TextPaint org.solovyev.android.view.TextPaint = getPaint ( ) ; float float = org.solovyev.android.view.TextPaint . getTextSize ( ) ; Log . d ( this . java.lang.Class<? extends org.solovyev.android.view.AutoResizeTextView> ( ) . java.lang.String ( ) , STRING + float ) ; float float = float + NUMBER ; int int ; if ( java.lang.CharSequence instanceof Editable ) { ( ( Editable ) java.lang.CharSequence ) . append ( STRING ) ; } try { int = int ( java.lang.CharSequence , org.solovyev.android.view.TextPaint , int , float ) ; void ( float , int ) ; if ( int > int ) { while ( int > int ) { if ( float <= float ) { break; } float = java.lang.Math . float ( float - NUMBER , float ) ; int = int ( java.lang.CharSequence , org.solovyev.android.view.TextPaint , int , float ) ; void ( float , int ) ; } } else { while ( int < int ) { if ( float <= float ) { break; } float = java.lang.Math . float ( float + NUMBER , float ) ; int = int ( java.lang.CharSequence , org.solovyev.android.view.TextPaint , int , float ) ; void ( float , int ) ; } } } finally { if ( java.lang.CharSequence instanceof Editable ) { ( ( Editable ) java.lang.CharSequence ) . delete ( java.lang.CharSequence . int ( ) - NUMBER , java.lang.CharSequence . int ( ) ) ; } } float = float ; if ( boolean && float == float && int > int ) { StaticLayout org.solovyev.android.view.StaticLayout = new StaticLayout ( java.lang.CharSequence , org.solovyev.android.view.TextPaint , int , Alignment . ALIGN_NORMAL , float , float , false ) ; org.solovyev.android.view.StaticLayout . draw ( org.solovyev.android.view.Canvas ) ; int int = org.solovyev.android.view.StaticLayout . getLineForVertical ( int ) - NUMBER ; int int = org.solovyev.android.view.StaticLayout . getLineStart ( int ) ; int int = org.solovyev.android.view.StaticLayout . getLineEnd ( int ) ; float float = org.solovyev.android.view.StaticLayout . getLineWidth ( int ) ; float float = org.solovyev.android.view.TextPaint . measureText ( java.lang.String ) ; while ( int < float + float ) { float = org.solovyev.android.view.TextPaint . measureText ( java.lang.CharSequence . java.lang.CharSequence ( int , -- int + NUMBER ) . java.lang.String ( ) ) ; } setText ( java.lang.CharSequence . java.lang.CharSequence ( NUMBER , int ) + java.lang.String ) ; } org.solovyev.android.view.TextPaint . setTextSize ( float ) ; void ( float , float ) ; if ( org.solovyev.android.view.AutoResizeTextView.OnTextResizeListener != null ) { org.solovyev.android.view.AutoResizeTextView.OnTextResizeListener . void ( this , float , float ) ; } boolean = false ; }  <METHOD_END>
<METHOD_START> private void void ( float float , int int ) { Log . d ( this . java.lang.Class<? extends org.solovyev.android.view.AutoResizeTextView> ( ) . java.lang.String ( ) , STRING + float + STRING + int ) ; }  <METHOD_END>
<METHOD_START> private int int ( java.lang.CharSequence java.lang.CharSequence , TextPaint org.solovyev.android.view.TextPaint , int int , float float ) { org.solovyev.android.view.TextPaint . setTextSize ( float ) ; StaticLayout org.solovyev.android.view.StaticLayout = new StaticLayout ( java.lang.CharSequence , org.solovyev.android.view.TextPaint , int , Alignment . ALIGN_NORMAL , float , float , false ) ; org.solovyev.android.view.StaticLayout . draw ( org.solovyev.android.view.Canvas ) ; return org.solovyev.android.view.StaticLayout . getHeight ( ) ; }  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Integer java.lang.Integer ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.CharSequence java.lang.CharSequence ( )  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet ) { this( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet , true ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet , boolean boolean ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ); TypedArray org.solovyev.android.view.TypedArray = org.solovyev.android.view.Context . obtainStyledAttributes ( org.solovyev.android.view.AttributeSet , R . styleable . DragButton ) ; if ( org.solovyev.android.view.TypedArray . hasValue ( R . styleable . DragButton_hTextPosition ) ) { this . float = java.lang.Float . java.lang.Float ( org.solovyev.android.view.TypedArray . getString ( R . styleable . DragButton_hTextPosition ) ) ; } else { this . float = float ; } org.solovyev.android.view.TypedArray . recycle ( ) ; if ( boolean ) { void ( org.solovyev.android.view.Context ) ; } this . org.solovyev.android.view.OnClickListenerVibrator = new OnClickListenerVibrator ( ( Vibrator ) org.solovyev.android.view.Context . getSystemService ( Context . VIBRATOR_SERVICE ) , PreferenceManager . getDefaultSharedPreferences ( org.solovyev.android.view.Context ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( Context org.solovyev.android.view.Context ) { final Resources org.solovyev.android.view.Resources = getResources ( ) ; int = org.solovyev.android.view.Resources . getColor ( R . color . magic_flame ) ; org.solovyev.android.view.Paint = new Paint ( ) ; org.solovyev.android.view.Paint . setStyle ( Style . STROKE ) ; org.solovyev.android.view.Paint . setStrokeWidth ( NUMBER ) ; getPaint ( ) . setColor ( getCurrentTextColor ( ) ) ; long = - NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int , int int , int int ) { void ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { Paint org.solovyev.android.view.Paint = getPaint ( ) ; if ( getText ( ) != null ) { org.solovyev.android.view.Point2d = org.solovyev.android.view.Point2d ( org.solovyev.android.view.Paint , getText ( ) ) ; } }  <METHOD_END>
<METHOD_START> private org.solovyev.android.view.Point2d org.solovyev.android.view.Point2d ( @ Nonnull Paint org.solovyev.android.view.Paint , @ Nonnull java.lang.CharSequence java.lang.CharSequence ) { final Point2d org.solovyev.android.view.Point2d = new Point2d ( ) ; org.solovyev.android.view.Point2d . setX ( float * getWidth ( ) - NUMBER * org.solovyev.android.view.Paint . measureText ( java.lang.CharSequence . java.lang.String ( ) ) ) ; float float = getHeight ( ) - org.solovyev.android.view.Paint . ascent ( ) - org.solovyev.android.view.Paint . descent ( ) ; org.solovyev.android.view.Point2d . setY ( float / NUMBER ) ; return org.solovyev.android.view.Point2d ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int , Canvas org.solovyev.android.view.Canvas ) { int int = NUMBER - NUMBER * int / int ; int int = int | ( int << NUMBER ) ; org.solovyev.android.view.Paint . setColor ( int ) ; org.solovyev.android.view.Canvas . drawRect ( NUMBER , NUMBER , getWidth ( ) - NUMBER , getHeight ( ) - NUMBER , org.solovyev.android.view.Paint ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Canvas org.solovyev.android.view.Canvas ) { if ( boolean ) { if ( long != - NUMBER ) { int int = ( int ) ( java.lang.System . long ( ) - long ) ; if ( int >= int ) { long = - NUMBER ; } else { void ( int , org.solovyev.android.view.Canvas ) ; postInvalidateDelayed ( int ) ; } } } java.lang.CharSequence java.lang.CharSequence = getText ( ) ; if ( ! Strings . isEmpty ( java.lang.CharSequence ) && org.solovyev.android.view.Point2d != null ) { if ( boolean ) { org.solovyev.android.view.Canvas . drawText ( java.lang.CharSequence , NUMBER , java.lang.CharSequence . int ( ) , org.solovyev.android.view.Point2d . getX ( ) , org.solovyev.android.view.Point2d . getY ( ) , getPaint ( ) ) ; } } else { AndroidViewUtils . drawDrawables ( org.solovyev.android.view.Canvas , this ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { long = java.lang.System . long ( ) ; invalidate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { void ( ) ; return super. performClick ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { void ( ) ; return super. performLongClick ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { this . org.solovyev.android.view.OnClickListenerVibrator . onClick ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.view.MotionEvent ) { boolean boolean = super. onTouchEvent ( org.solovyev.android.view.MotionEvent ) ; if ( this . boolean ) { switch ( org.solovyev.android.view.MotionEvent . getAction ( ) ) { case MotionEvent . ACTION_UP : void ( ) ; break; case MotionEvent . ACTION_DOWN : case MotionEvent . ACTION_CANCEL : invalidate ( ) ; break; } } return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> void void ( int int );  <METHOD_END>
<METHOD_START> void ( Context org.solovyev.android.view.Context , org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener , int int ) { super( org.solovyev.android.view.Context ); org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener = org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener ; int[] = new int [] { NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER } ; Shader org.solovyev.android.view.Shader = new SweepGradient ( NUMBER , NUMBER , int[] , null ) ; org.solovyev.android.view.Paint = new Paint ( Paint . ANTI_ALIAS_FLAG ) ; org.solovyev.android.view.Paint . setShader ( org.solovyev.android.view.Shader ) ; org.solovyev.android.view.Paint . setStyle ( Paint . Style . STROKE ) ; org.solovyev.android.view.Paint . setStrokeWidth ( NUMBER ) ; org.solovyev.android.view.Paint = new Paint ( Paint . ANTI_ALIAS_FLAG ) ; org.solovyev.android.view.Paint . setColor ( int ) ; org.solovyev.android.view.Paint . setStrokeWidth ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Canvas org.solovyev.android.view.Canvas ) { float float = int - org.solovyev.android.view.Paint . getStrokeWidth ( ) * NUMBER ; org.solovyev.android.view.Canvas . translate ( int , int ) ; org.solovyev.android.view.Canvas . drawOval ( new RectF ( - float , - float , float , float ) , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawCircle ( NUMBER , NUMBER , int , org.solovyev.android.view.Paint ) ; if ( boolean ) { int int = org.solovyev.android.view.Paint . getColor ( ) ; org.solovyev.android.view.Paint . setStyle ( Paint . Style . STROKE ) ; if ( boolean ) { org.solovyev.android.view.Paint . setAlpha ( NUMBER ) ; } else { org.solovyev.android.view.Paint . setAlpha ( NUMBER ) ; } org.solovyev.android.view.Canvas . drawCircle ( NUMBER , NUMBER , int + org.solovyev.android.view.Paint . getStrokeWidth ( ) , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Paint . setStyle ( Paint . Style . FILL ) ; org.solovyev.android.view.Paint . setColor ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int ) { setMeasuredDimension ( int * NUMBER , int * NUMBER ) ; }  <METHOD_END>
<METHOD_START> private int int ( float float ) { int int = java . lang . java.lang.Math . int ( float ) ; return int ; }  <METHOD_END>
<METHOD_START> private int int ( int int ) { if ( int < NUMBER ) { int = NUMBER ; } else if ( int > NUMBER ) { int = NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> private int int ( int int , int int , float float ) { return int + java . lang . java.lang.Math . int ( float * ( int - int ) ) ; }  <METHOD_END>
<METHOD_START> private int int ( int int[] [] , float float ) { if ( float <= NUMBER ) { return int[] [ NUMBER ] ; } if ( float >= NUMBER ) { return int[] [ int[] . int - NUMBER ] ; } float float = float * ( int[] . int - NUMBER ) ; int int = ( int ) float ; float -= int ; int int = int[] [ int ] ; int int = int[] [ int + NUMBER ] ; int int = int ( Color . alpha ( int ) , Color . alpha ( int ) , float ) ; int int = int ( Color . red ( int ) , Color . red ( int ) , float ) ; int int = int ( Color . green ( int ) , Color . green ( int ) , float ) ; int int = int ( Color . blue ( int ) , Color . blue ( int ) , float ) ; return Color . argb ( int , int , int , int ) ; }  <METHOD_END>
<METHOD_START> private int int ( int int , float float ) { float float = float * NUMBER / NUMBER ; int int = Color . red ( int ) ; int int = Color . green ( int ) ; int int = Color . blue ( int ) ; ColorMatrix org.solovyev.android.view.ColorMatrix = new ColorMatrix ( ) ; ColorMatrix org.solovyev.android.view.ColorMatrix = new ColorMatrix ( ) ; org.solovyev.android.view.ColorMatrix . setRGB2YUV ( ) ; org.solovyev.android.view.ColorMatrix . setRotate ( NUMBER , float ) ; org.solovyev.android.view.ColorMatrix . postConcat ( org.solovyev.android.view.ColorMatrix ) ; org.solovyev.android.view.ColorMatrix . setYUV2RGB ( ) ; org.solovyev.android.view.ColorMatrix . postConcat ( org.solovyev.android.view.ColorMatrix ) ; final float [] float[] = org.solovyev.android.view.ColorMatrix . getArray ( ) ; int int = int ( float[] [ NUMBER ] * int + float[] [ NUMBER ] * int + float[] [ NUMBER ] * int ) ; int int = int ( float[] [ NUMBER ] * int + float[] [ NUMBER ] * int + float[] [ NUMBER ] * int ) ; int int = int ( float[] [ NUMBER ] * int + float[] [ NUMBER ] * int + float[] [ NUMBER ] * int ) ; return Color . argb ( Color . alpha ( int ) , int ( int ) , int ( int ) , int ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.view.MotionEvent ) { float float = org.solovyev.android.view.MotionEvent . getX ( ) - int ; float float = org.solovyev.android.view.MotionEvent . getY ( ) - int ; boolean boolean = java . lang . java.lang.Math . double ( float * float + float * float ) <= int ; switch ( org.solovyev.android.view.MotionEvent . getAction ( ) ) { case MotionEvent . ACTION_DOWN : boolean = boolean ; if ( boolean ) { boolean = true ; invalidate ( ) ; break; } case MotionEvent . ACTION_MOVE : if ( boolean ) { if ( boolean != boolean ) { boolean = boolean ; invalidate ( ) ; } } else { float float = ( float ) java . lang . java.lang.Math . double ( float , float ) ; float float = float / ( NUMBER * float ) ; if ( float < NUMBER ) { float += NUMBER ; } org.solovyev.android.view.Paint . setColor ( int ( int[] , float ) ) ; invalidate ( ) ; } break; case MotionEvent . ACTION_UP : if ( boolean ) { if ( boolean ) { org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener . void ( org.solovyev.android.view.Paint . getColor ( ) ) ; } boolean = false ; invalidate ( ) ; } break; } return true ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener , int int ) { super( org.solovyev.android.view.Context ); org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener = org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener ; int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.view.Bundle ) { super. onCreate ( org.solovyev.android.view.Bundle ) ; org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener = new org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener ( ) { public void void ( int int ) { org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener . void ( int ) ; dismiss ( ) ; } } ; setContentView ( new org.solovyev.android.view.ColorPickerDialog.ColorPickerView ( getContext ( ) , org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener , int ) ) ; setTitle ( STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { org.solovyev.android.view.ColorPickerDialog.OnColorChangedListener . void ( int ) ; dismiss ( ) ; }  <METHOD_END>
<METHOD_START> private void ( @ Nonnull FragmentActivity org.solovyev.android.view.FragmentActivity , @ Nonnull java.lang.String java.lang.String , int int ) { this . org.solovyev.android.view.FragmentActivity = org.solovyev.android.view.FragmentActivity ; this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.ConfirmationDialogBuilder org.solovyev.android.view.ConfirmationDialogBuilder ( @ Nonnull FragmentActivity org.solovyev.android.view.FragmentActivity , @ Nonnull java.lang.String java.lang.String , int int ) { return new org.solovyev.android.view.ConfirmationDialogBuilder ( org.solovyev.android.view.FragmentActivity , java.lang.String , int ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.ConfirmationDialogBuilder org.solovyev.android.view.ConfirmationDialogBuilder ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.ConfirmationDialogBuilder org.solovyev.android.view.ConfirmationDialogBuilder ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.ConfirmationDialogBuilder org.solovyev.android.view.ConfirmationDialogBuilder ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.ConfirmationDialogBuilder org.solovyev.android.view.ConfirmationDialogBuilder ( @ Nullable DialogInterface . DialogInterface DialogInterface.OnClickListener ) { this . DialogInterface.OnClickListener = DialogInterface.OnClickListener ; return this ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.ConfirmationDialogBuilder org.solovyev.android.view.ConfirmationDialogBuilder ( @ Nullable DialogInterface . DialogInterface DialogInterface.OnClickListener ) { this . DialogInterface.OnClickListener = DialogInterface.OnClickListener ; return this ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.DialogFragmentShower org.solovyev.android.view.DialogFragmentShower ( ) { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( org.solovyev.android.view.FragmentActivity ) ; AlertDialog.Builder . setTitle ( int ) ; AlertDialog.Builder . setMessage ( int ) ; AlertDialog.Builder . setPositiveButton ( int , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.solovyev.android.view.DialogInterface , int int ) { if ( DialogInterface.OnClickListener != null ) { DialogInterface.OnClickListener . onClick ( org.solovyev.android.view.DialogInterface , int ) ; } } } ) ; AlertDialog.Builder . setNegativeButton ( int , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.solovyev.android.view.DialogInterface , int int ) { if ( DialogInterface.OnClickListener != null ) { DialogInterface.OnClickListener . onClick ( org.solovyev.android.view.DialogInterface , int ) ; } } } ) ; return new DialogFragmentShower ( org.solovyev.android.view.FragmentActivity , java.lang.String , AlertDialog.Builder ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.solovyev.android.view.DialogInterface , int int ) { if ( DialogInterface.OnClickListener != null ) { DialogInterface.OnClickListener . onClick ( org.solovyev.android.view.DialogInterface , int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.solovyev.android.view.DialogInterface , int int ) { if ( DialogInterface.OnClickListener != null ) { DialogInterface.OnClickListener . onClick ( org.solovyev.android.view.DialogInterface , int ) ; } }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull D D );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double , int int , @ Nullable Formatter < java.lang.Double > org.solovyev.android.view.Formatter<java.lang.Double> ) { super( java.lang.Double , java.lang.Double , java.lang.Double , int , org.solovyev.android.view.Formatter<java.lang.Double> ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.NumberRange<java.lang.Double> < java.lang.Double > org.solovyev.android.view.NumberRange<java.lang.Double> ( @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double , @ Nullable Formatter < java.lang.Double > org.solovyev.android.view.Formatter<java.lang.Double> ) { if ( java.lang.Double < java.lang.Double || java.lang.Double > java.lang.Double ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Double + STRING + java.lang.Double + STRING + java.lang.Double + STRING ) ; } int int = NUMBER ; for ( double double = java.lang.Double ; double < java.lang.Double ; double += java.lang.Double ) { int += NUMBER ; } return new org.solovyev.android.view.DoubleRange ( java.lang.Double , java.lang.Double , java.lang.Double , int , org.solovyev.android.view.Formatter<java.lang.Double> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double ) { int int = ( int ) ( ( java.lang.Double - java.lang.Double ) / java.lang.Double ) ; return int + NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Double java.lang.Double ( int int , @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double , @ Nonnull java.lang.Double java.lang.Double ) { return java.lang.Double + int * java.lang.Double ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.drag.DirectionDragButtonDefImpl org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( @ Nullable java.lang.CharSequence java.lang.CharSequence ) { return org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( java.lang.CharSequence , null , null , null , null ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.drag.DirectionDragButtonDefImpl org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence ) { return org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence , java.lang.CharSequence , null ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.drag.DirectionDragButtonDefImpl org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.CharSequence java.lang.CharSequence , @ Nullable java.lang.Integer java.lang.Integer ) { final org.solovyev.android.view.drag.DirectionDragButtonDefImpl org.solovyev.android.view.drag.DirectionDragButtonDefImpl = new org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( ) ; org.solovyev.android.view.drag.DirectionDragButtonDefImpl . java.lang.CharSequence = java.lang.CharSequence ; org.solovyev.android.view.drag.DirectionDragButtonDefImpl . java.util.Map<org.solovyev.android.view.drag.DragDirection,java.lang.CharSequence> . put ( DragDirection . up , java.lang.CharSequence ) ; org.solovyev.android.view.drag.DirectionDragButtonDefImpl . java.util.Map<org.solovyev.android.view.drag.DragDirection,java.lang.CharSequence> . put ( DragDirection . right , java.lang.CharSequence ) ; org.solovyev.android.view.drag.DirectionDragButtonDefImpl . java.util.Map<org.solovyev.android.view.drag.DragDirection,java.lang.CharSequence> . put ( DragDirection . down , java.lang.CharSequence ) ; org.solovyev.android.view.drag.DirectionDragButtonDefImpl . java.util.Map<org.solovyev.android.view.drag.DragDirection,java.lang.CharSequence> . put ( DragDirection . left , java.lang.CharSequence ) ; org.solovyev.android.view.drag.DirectionDragButtonDefImpl . java.lang.Integer = java.lang.Integer ; return org.solovyev.android.view.drag.DirectionDragButtonDefImpl ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.drag.DirectionDragButtonDefImpl org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( @ Nonnull java.lang.Integer java.lang.Integer ) { return org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( java.lang.Integer , null ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.drag.DirectionDragButtonDefImpl org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( @ Nonnull java.lang.Integer java.lang.Integer , @ Nullable java.lang.Integer java.lang.Integer ) { final org.solovyev.android.view.drag.DirectionDragButtonDefImpl org.solovyev.android.view.drag.DirectionDragButtonDefImpl = new org.solovyev.android.view.drag.DirectionDragButtonDefImpl ( ) ; org.solovyev.android.view.drag.DirectionDragButtonDefImpl . java.lang.Integer = java.lang.Integer ; org.solovyev.android.view.drag.DirectionDragButtonDefImpl . java.lang.Integer = java.lang.Integer ; return org.solovyev.android.view.drag.DirectionDragButtonDefImpl ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection ) { return java.util.Map<org.solovyev.android.view.drag.DragDirection,java.lang.CharSequence> . get ( org.solovyev.android.view.drag.DragDirection ) ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Float java.lang.Float ( ) { return this . java.lang.Float ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Integer java.lang.Integer ( ) { return this . java.lang.Integer ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( ) { return java.lang.CharSequence ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Float java.lang.Float ) { this . java.lang.Float = java.lang.Float ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . java.lang.Integer = int ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.CharSequence java.lang.CharSequence ) { this . java.lang.CharSequence = java.lang.CharSequence ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection , @ Nullable java.lang.CharSequence java.lang.CharSequence ) { java.util.Map<org.solovyev.android.view.drag.DragDirection,java.lang.CharSequence> . put ( org.solovyev.android.view.drag.DragDirection , java.lang.CharSequence ) ; }  <METHOD_END>
<METHOD_START> @ Nullable java.lang.CharSequence java.lang.CharSequence ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection );  <METHOD_END>
<METHOD_START> private void ( @ Nonnull org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , @ Nonnull java.lang.String java.lang.String ) { this . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection = org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , int int , int int ) { org.solovyev.android.view.drag.TextPaint . set ( org.solovyev.android.view.drag.Paint ) ; org.solovyev.android.view.drag.TextPaint . setColor ( int ) ; org.solovyev.android.view.drag.TextPaint . setAlpha ( int ) ; org.solovyev.android.view.drag.TextPaint . setTextSize ( org.solovyev.android.view.drag.Paint . getTextSize ( ) * java.lang.Float ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ( ) { return org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( ) { return org.solovyev.android.view.drag.Point2d ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.TextPaint org.solovyev.android.view.drag.TextPaint ( ) { return org.solovyev.android.view.drag.TextPaint ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.Float java.lang.Float ( ) { return java.lang.Float ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return R . styleable . DirectionDragButton_textUp ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , int int , int int ) { return org.solovyev.android.view.drag.Point2d ( org.solovyev.android.view.drag.Paint , org.solovyev.android.view.drag.Paint , java.lang.CharSequence , java.lang.CharSequence , NUMBER , int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return R . styleable . DirectionDragButton_textDown ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , int int , int int ) { return org.solovyev.android.view.drag.Point2d ( org.solovyev.android.view.drag.Paint , org.solovyev.android.view.drag.Paint , java.lang.CharSequence , java.lang.CharSequence , - NUMBER , int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return R . styleable . DirectionDragButton_textLeft ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , int int , int int ) { return org.solovyev.android.view.drag.Point2d ( org.solovyev.android.view.drag.Paint , org.solovyev.android.view.drag.Paint , java.lang.CharSequence , java.lang.CharSequence , int , int , true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return R . styleable . DirectionDragButton_textRight ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , int int , int int ) { return org.solovyev.android.view.drag.Point2d ( org.solovyev.android.view.drag.Paint , org.solovyev.android.view.drag.Paint , java.lang.CharSequence , java.lang.CharSequence , int , int , false ) ; }  <METHOD_END>
<METHOD_START> void ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection , int int ) { this . org.solovyev.android.view.drag.DragDirection = org.solovyev.android.view.drag.DragDirection ; this . int = int ; }  <METHOD_END>
<METHOD_START> public abstract int int ( )  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ Nonnull public abstract org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , int int , int int );  <METHOD_END>
<METHOD_START> @ Nonnull private static org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull Paint org.solovyev.android.view.drag.Paint , java.lang.CharSequence java.lang.CharSequence , @ Nonnull java.lang.CharSequence java.lang.CharSequence , int int , int int , boolean boolean ) { final Point2d org.solovyev.android.view.drag.Point2d = new Point2d ( ) ; if ( boolean ) { float float = org.solovyev.android.view.drag.Paint . measureText ( STRING ) ; org.solovyev.android.view.drag.Point2d . setX ( float ) ; } else { float float = org.solovyev.android.view.drag.Paint . measureText ( java.lang.CharSequence . java.lang.String ( ) + STRING ) ; org.solovyev.android.view.drag.Point2d . setX ( int - float ) ; } float float = org.solovyev.android.view.drag.Paint . ascent ( ) + org.solovyev.android.view.drag.Paint . descent ( ) ; org.solovyev.android.view.drag.Paint . measureText ( Strings . getNotEmpty ( java.lang.CharSequence , STRING ) ) ; org.solovyev.android.view.drag.Point2d . setY ( int / NUMBER - float / NUMBER ) ; return org.solovyev.android.view.drag.Point2d ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence , float float , int int , int int ) { final Point2d org.solovyev.android.view.drag.Point2d = new Point2d ( ) ; float float = org.solovyev.android.view.drag.Paint . measureText ( java.lang.CharSequence . java.lang.String ( ) + STRING ) ; org.solovyev.android.view.drag.Point2d . setX ( int - float ) ; float float = org.solovyev.android.view.drag.Paint . ascent ( ) + org.solovyev.android.view.drag.Paint . descent ( ) ; org.solovyev.android.view.drag.Paint . measureText ( Strings . getNotEmpty ( java.lang.CharSequence , STRING ) ) ; if ( float < NUMBER ) { org.solovyev.android.view.drag.Point2d . setY ( int / NUMBER + int / NUMBER - float / NUMBER ) ; } else { org.solovyev.android.view.drag.Point2d . setY ( int / NUMBER - int / NUMBER - float / NUMBER ) ; } return org.solovyev.android.view.drag.Point2d ; }  <METHOD_END>
<METHOD_START> @ Nullable public static org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection ) { for ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection : org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection[] ( ) ) { if ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DragDirection == org.solovyev.android.view.drag.DragDirection ) { return org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ; } } return null ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.drag.Context , @ Nonnull AttributeSet org.solovyev.android.view.drag.AttributeSet ) { super( org.solovyev.android.view.drag.Context , org.solovyev.android.view.drag.AttributeSet ); void ( org.solovyev.android.view.drag.Context , org.solovyev.android.view.drag.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.drag.Context , @ Nonnull DirectionDragButtonDef org.solovyev.android.view.drag.DirectionDragButtonDef ) { super( org.solovyev.android.view.drag.Context , org.solovyev.android.view.drag.DirectionDragButtonDef ); void ( org.solovyev.android.view.drag.Context , org.solovyev.android.view.drag.DirectionDragButtonDef ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull Context org.solovyev.android.view.drag.Context , @ Nonnull DirectionDragButtonDef org.solovyev.android.view.drag.DirectionDragButtonDef ) { for ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection : org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection[] ( ) ) { final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.view.drag.DirectionDragButtonDef . getText ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DragDirection ) ; this . java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> . org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , new org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , Strings . getNotEmpty ( java.lang.CharSequence , STRING ) ) ) ; } this . boolean = true ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull DirectionDragButtonDef org.solovyev.android.view.drag.DirectionDragButtonDef ) { super. applyDef ( org.solovyev.android.view.drag.DirectionDragButtonDef ) ; for ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection : org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection[] ( ) ) { final java.lang.CharSequence java.lang.CharSequence = org.solovyev.android.view.drag.DirectionDragButtonDef . getText ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DragDirection ) ; this . java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> . org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , new org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , Strings . getNotEmpty ( java.lang.CharSequence , STRING ) ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull Context org.solovyev.android.view.drag.Context , @ Nonnull AttributeSet org.solovyev.android.view.drag.AttributeSet ) { TypedArray org.solovyev.android.view.drag.TypedArray = org.solovyev.android.view.drag.Context . obtainStyledAttributes ( org.solovyev.android.view.drag.AttributeSet , R . styleable . DirectionDragButton ) ; for ( int int = NUMBER ; int < org.solovyev.android.view.drag.TypedArray . getIndexCount ( ) ; int ++ ) { int int = org.solovyev.android.view.drag.TypedArray . getIndex ( int ) ; if ( org.solovyev.android.view.drag.TypedArray . hasValue ( int ) ) { if ( int == R . styleable . DirectionDragButton_directionTextColor ) { this . int = org.solovyev.android.view.drag.TypedArray . getColor ( int , int ) ; } else if ( int == R . styleable . DirectionDragButton_directionTextScale ) { this . java.lang.String = org.solovyev.android.view.drag.TypedArray . getString ( int ) ; } else if ( int == R . styleable . DirectionDragButton_directionTextAlpha ) { this . java.lang.Integer = org.solovyev.android.view.drag.TypedArray . getInt ( int , java.lang.Integer ) ; } else { for ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection : org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection[] ( ) ) { if ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . int ( ) == int ) { this . java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> . org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , new org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , org.solovyev.android.view.drag.TypedArray . getString ( int ) ) ) ; break; } } } } } org.solovyev.android.view.drag.TypedArray . recycle ( ) ; for ( java.util.Map . java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> < org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , java.lang.Float > java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> : java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> ( ) . java.util.Set<java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float>> ( ) ) { final org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData = java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> . org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ( ) ) ; if ( org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData != null ) { org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . java.lang.Float = java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> . java.lang.Float ( ) ; } } boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int , int int , int int ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { void ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { if ( boolean ) { final Paint org.solovyev.android.view.drag.Paint = getPaint ( ) ; for ( org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData : java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> . java.util.Collection<org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> ( ) ) { void ( org.solovyev.android.view.drag.Paint , org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ) ; org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . org.solovyev.android.view.drag.Point2d = org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.Point2d ( org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . org.solovyev.android.view.drag.TextPaint , org.solovyev.android.view.drag.Paint , org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . java.lang.String , java.lang.String ( ) , getWidth ( ) , getHeight ( ) ) ; } } }  <METHOD_END>
<METHOD_START> protected void void ( @ Nonnull Paint org.solovyev.android.view.drag.Paint , @ Nonnull org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ) { org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . void ( org.solovyev.android.view.drag.Paint , int , java.lang.Integer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Canvas org.solovyev.android.view.drag.Canvas ) { super. onDraw ( org.solovyev.android.view.drag.Canvas ) ; final TextPaint org.solovyev.android.view.drag.TextPaint = getPaint ( ) ; for ( org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData : java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> . java.util.Collection<org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> ( ) ) { if ( org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . boolean ) { void ( org.solovyev.android.view.drag.TextPaint , org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ) ; final java.lang.String java.lang.String = org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . java.lang.String ; final Point2d org.solovyev.android.view.drag.Point2d = org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . org.solovyev.android.view.drag.Point2d ; org.solovyev.android.view.drag.Canvas . drawText ( java.lang.String , NUMBER , java.lang.String . int ( ) , org.solovyev.android.view.drag.Point2d . getX ( ) , org.solovyev.android.view.drag.Point2d . getY ( ) , org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . org.solovyev.android.view.drag.TextPaint ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Nullable public java.lang.String java.lang.String ( ) { return java.lang.String ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Nullable public java.lang.String java.lang.String ( ) { return java.lang.String ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public java.lang.String java.lang.String ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection ) { final org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection = org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ( org.solovyev.android.view.drag.DragDirection ) ; return org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection == null ? null : java.lang.String ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void void ( boolean boolean , @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection ) { final org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection = org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ( org.solovyev.android.view.drag.DragDirection ) ; final org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData = this . java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> . org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ) ; if ( org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData != null ) { org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . boolean = boolean ; } }  <METHOD_END>
<METHOD_START> @ Nullable private java.lang.String java.lang.String ( @ Nonnull org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ) { org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData = this . java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData> . org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection ) ; if ( org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData == null ) { return null ; } else { if ( org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . boolean ) { return org.solovyev.android.view.drag.DirectionDragButton.DirectionTextData . java.lang.String ; } else { return null ; } } }  <METHOD_END>
<METHOD_START> @ Nonnull public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> < org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , java.lang.Float > java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> ( ) { final java.util.List<java.lang.Float> < java.lang.Float > java.util.List<java.lang.Float> = StringCollections . split ( java.lang.String ( ) , STRING , NumberParser . of ( java.lang.Float .class ) ) ; final java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> < org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , java.lang.Float > java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> = new java.util.HashMap<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> < org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , java.lang.Float > ( ) ; for ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection : org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection[] ( ) ) { java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> . java.lang.Float ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , java.lang.Float ) ; } if ( java.util.List<java.lang.Float> . int ( ) == NUMBER ) { final java.lang.Float java.lang.Float = java.util.List<java.lang.Float> . java.lang.Float ( NUMBER ) ; for ( java.util.Map . java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> < org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , java.lang.Float > java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> : java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> . java.util.Set<java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float>> ( ) ) { java.util.Map.Entry<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> . java.lang.Float ( java.lang.Float ) ; } } else { for ( int int = NUMBER ; int < java.util.List<java.lang.Float> . int ( ) ; int ++ ) { for ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection : org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection[] ( ) ) { if ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection . int ( ) == int ) { java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> . java.lang.Float ( org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection , java.util.List<java.lang.Float> . java.lang.Float ( int ) ) ; } } } } return java.util.Map<org.solovyev.android.view.drag.DirectionDragButton.GuiDragDirection,java.lang.Float> ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.view.drag.Context , @ Nonnull AttributeSet org.solovyev.android.view.drag.AttributeSet ) { super( org.solovyev.android.view.drag.Context , org.solovyev.android.view.drag.AttributeSet ); void ( new org.solovyev.android.view.drag.DragButton.OnTouchListenerImpl ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Context org.solovyev.android.view.drag.Context , @ Nonnull DragButtonDef org.solovyev.android.view.drag.DragButtonDef ) { super( org.solovyev.android.view.drag.Context ); void ( new org.solovyev.android.view.drag.DragButton.OnTouchListenerImpl ( ) ) ; setText ( org.solovyev.android.view.drag.DragButtonDef . getText ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable org . solovyev . android . view . drag . org.solovyev.android.view.drag.OnDragListener org.solovyev.android.view.drag.OnDragListener ) { this . org.solovyev.android.view.drag.OnDragListener = org.solovyev.android.view.drag.OnDragListener ; }  <METHOD_END>
<METHOD_START> @ Nullable public org . solovyev . android . view . drag . org.solovyev.android.view.drag.OnDragListener org.solovyev.android.view.drag.OnDragListener ( ) { return org.solovyev.android.view.drag.OnDragListener ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull DragButtonDef org.solovyev.android.view.drag.DragButtonDef ) { AndroidViewUtils . applyButtonDef ( this , org.solovyev.android.view.drag.DragButtonDef ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( OnTouchListener org.solovyev.android.view.drag.OnTouchListener ) { if ( org.solovyev.android.view.drag.OnTouchListener instanceof org.solovyev.android.view.drag.DragButton.OnTouchListenerImpl ) { this . org.solovyev.android.view.drag.DragButton.OnTouchListenerImpl = ( org.solovyev.android.view.drag.DragButton.OnTouchListenerImpl ) org.solovyev.android.view.drag.OnTouchListener ; super. setOnTouchListener ( org.solovyev.android.view.drag.OnTouchListener ) ; } else { this . org.solovyev.android.view.drag.DragButton.OnTouchListenerImpl . org.solovyev.android.view.drag.OnTouchListener = org.solovyev.android.view.drag.OnTouchListener ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull View org.solovyev.android.view.drag.View , @ Nonnull MotionEvent org.solovyev.android.view.drag.MotionEvent ) { boolean boolean = false ; final Point2d org.solovyev.android.view.drag.Point2d = org.solovyev.android.view.drag.Point2d ; final org . solovyev . android . view . drag . org.solovyev.android.view.drag.OnDragListener org.solovyev.android.view.drag.OnDragListener = org.solovyev.android.view.drag.OnDragListener ; if ( org.solovyev.android.view.drag.OnDragListener != null ) { Log . d ( java.lang.String . java.lang.String ( getId ( ) ) , STRING + getId ( ) + STRING + org.solovyev.android.view.drag.MotionEvent ) ; switch ( org.solovyev.android.view.drag.MotionEvent . getAction ( ) ) { case MotionEvent . ACTION_DOWN : org.solovyev.android.view.drag.Point2d = new Point2d ( org.solovyev.android.view.drag.MotionEvent . getX ( ) , org.solovyev.android.view.drag.MotionEvent . getY ( ) ) ; break; case MotionEvent . ACTION_UP : if ( org.solovyev.android.view.drag.Point2d != null ) { boolean = org.solovyev.android.view.drag.OnDragListener . onDrag ( org.solovyev.android.view.drag.DragButton .this , new DragEvent ( org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.MotionEvent ) ) ; if ( boolean ) { if ( org.solovyev.android.view.drag.OnDragListener . isSuppressOnClickEvent ( ) ) { org.solovyev.android.view.drag.View . setPressed ( false ) ; } } } org.solovyev.android.view.drag.Point2d = null ; break; } } if ( org.solovyev.android.view.drag.OnTouchListener != null && ! boolean ) { return org.solovyev.android.view.drag.OnTouchListener . onTouch ( org.solovyev.android.view.drag.View , org.solovyev.android.view.drag.MotionEvent ) ; } else { return boolean ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Canvas org.solovyev.android.view.drag.Canvas ) { java.lang.CharSequence java.lang.CharSequence = getText ( ) ; if ( ! Strings . isEmpty ( java.lang.CharSequence ) ) { super. onDraw ( org.solovyev.android.view.drag.Canvas ) ; } else { if ( ! AndroidViewUtils . drawDrawables ( org.solovyev.android.view.drag.Canvas , this ) ) { super. onDraw ( org.solovyev.android.view.drag.Canvas ) ; } } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( this . boolean != boolean ) { if ( boolean ) { setText ( java.lang.CharSequence ) ; java.lang.CharSequence = null ; } else { java.lang.CharSequence = this . getText ( ) ; setText ( null ) ; } this . boolean = boolean ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Point2d org.solovyev.android.view.drag.Point2d , @ Nonnull MotionEvent org.solovyev.android.view.drag.MotionEvent ) { this . org.solovyev.android.view.drag.Point2d = org.solovyev.android.view.drag.Point2d ; this . org.solovyev.android.view.drag.MotionEvent = org.solovyev.android.view.drag.MotionEvent ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.MotionEvent org.solovyev.android.view.drag.MotionEvent ( ) { return org.solovyev.android.view.drag.MotionEvent ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.Point2d org.solovyev.android.view.drag.Point2d ( ) { return org.solovyev.android.view.drag.Point2d ; }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull SimpleOnDragListener . SimpleOnDragListener SimpleOnDragListener.Preferences );  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull DragButton org.solovyev.android.view.drag.DragButton , @ Nonnull DragEvent org.solovyev.android.view.drag.DragEvent );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull OnDragListener org.solovyev.android.view.drag.OnDragListener ) { this . org.solovyev.android.view.drag.OnDragListener = org.solovyev.android.view.drag.OnDragListener ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . org.solovyev.android.view.drag.OnDragListener . isSuppressOnClickEvent ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull DragButton org.solovyev.android.view.drag.DragButton , @ Nonnull DragEvent org.solovyev.android.view.drag.DragEvent ) { return this . org.solovyev.android.view.drag.OnDragListener . onDrag ( org.solovyev.android.view.drag.DragButton , org.solovyev.android.view.drag.DragEvent ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.Preferences org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ) { this . org.solovyev.android.view.drag.SimpleOnDragListener.Preferences = org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor , @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.Preferences org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ) { this . org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor = org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor ; this . org.solovyev.android.view.drag.SimpleOnDragListener.Preferences = org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nonnull DragButton org.solovyev.android.view.drag.DragButton , @ Nonnull DragEvent org.solovyev.android.view.drag.DragEvent ) { boolean boolean = false ; void ( org.solovyev.android.view.drag.DragButton , org.solovyev.android.view.drag.DragEvent ) ; final Point2d org.solovyev.android.view.drag.Point2d = org.solovyev.android.view.drag.DragEvent . getStartPoint ( ) ; final MotionEvent org.solovyev.android.view.drag.MotionEvent = org.solovyev.android.view.drag.DragEvent . getMotionEvent ( ) ; final Point2d org.solovyev.android.view.drag.Point2d = new Point2d ( org.solovyev.android.view.drag.MotionEvent . getX ( ) , org.solovyev.android.view.drag.MotionEvent . getY ( ) ) ; final float float = Maths . getDistance ( org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.Point2d ) ; final MutableObject < java.lang.Boolean > org.solovyev.android.view.drag.MutableObject<java.lang.Boolean> = new MutableObject < java.lang.Boolean > ( ) ; final double double = java.lang.Math . double ( Maths . getAngle ( org.solovyev.android.view.drag.Point2d , Maths . sum ( org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.Point2d ) , org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.MutableObject<java.lang.Boolean> ) ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + double ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + org.solovyev.android.view.drag.MutableObject<java.lang.Boolean> . getObject ( ) ) ; final double double = org.solovyev.android.view.drag.MotionEvent . getEventTime ( ) - org.solovyev.android.view.drag.MotionEvent . getDownTime ( ) ; final org.solovyev.android.view.drag.SimpleOnDragListener.Preference org.solovyev.android.view.drag.SimpleOnDragListener.Preference = org.solovyev.android.view.drag.SimpleOnDragListener.Preferences . java.util.Map<org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType,org.solovyev.android.view.drag.SimpleOnDragListener.Preference> ( ) . org.solovyev.android.view.drag.SimpleOnDragListener.Preference ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType . org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) ; final org.solovyev.android.view.drag.SimpleOnDragListener.Preference org.solovyev.android.view.drag.SimpleOnDragListener.Preference = org.solovyev.android.view.drag.SimpleOnDragListener.Preferences . java.util.Map<org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType,org.solovyev.android.view.drag.SimpleOnDragListener.Preference> ( ) . org.solovyev.android.view.drag.SimpleOnDragListener.Preference ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType . org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) ; DragDirection org.solovyev.android.view.drag.DragDirection = null ; for ( java.util.Map . java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> < DragDirection , org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference > java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> : org.solovyev.android.view.drag.SimpleOnDragListener.Preference . java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> ( ) . entrySet ( ) ) { Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> . getKey ( ) ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> . getValue ( ) . getInterval ( ) ) ; if ( java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> . getValue ( ) . getInterval ( ) . contains ( float ) ) { final org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference = org.solovyev.android.view.drag.SimpleOnDragListener.Preference . java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> ( ) . get ( java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> . getKey ( ) ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference . org.solovyev.android.view.drag.Interval<java.lang.Float> ( ) ) ; if ( java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> . getKey ( ) == DragDirection . left && org.solovyev.android.view.drag.MutableObject<java.lang.Boolean> . getObject ( ) ) {				} else if ( java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> . getKey ( ) == DragDirection . right && ! org.solovyev.android.view.drag.MutableObject<java.lang.Boolean> . getObject ( ) ) {				} else { if ( org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference . org.solovyev.android.view.drag.Interval<java.lang.Float> ( ) . contains ( ( float ) double ) ) { org.solovyev.android.view.drag.DragDirection = java.util.Map.Entry<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> . getKey ( ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + org.solovyev.android.view.drag.DragDirection ) ; break; } } } } if ( org.solovyev.android.view.drag.DragDirection != null ) { final org.solovyev.android.view.drag.SimpleOnDragListener.Preference org.solovyev.android.view.drag.SimpleOnDragListener.Preference = org.solovyev.android.view.drag.SimpleOnDragListener.Preferences . java.util.Map<org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType,org.solovyev.android.view.drag.SimpleOnDragListener.Preference> ( ) . org.solovyev.android.view.drag.SimpleOnDragListener.Preference ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType . org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) ; final org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference = org.solovyev.android.view.drag.SimpleOnDragListener.Preference . java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> ( ) . get ( org.solovyev.android.view.drag.DragDirection ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference . org.solovyev.android.view.drag.Interval<java.lang.Float> ( ) ) ; if ( org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference . org.solovyev.android.view.drag.Interval<java.lang.Float> ( ) . contains ( ( float ) double ) ) { Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING ) ; boolean = org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor . boolean ( org.solovyev.android.view.drag.DragDirection , org.solovyev.android.view.drag.DragButton , org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.MotionEvent ) ; } } return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull DragButton org.solovyev.android.view.drag.DragButton , @ Nonnull DragEvent org.solovyev.android.view.drag.DragEvent ) { final Point2d org.solovyev.android.view.drag.Point2d = org.solovyev.android.view.drag.DragEvent . getStartPoint ( ) ; final MotionEvent org.solovyev.android.view.drag.MotionEvent = org.solovyev.android.view.drag.DragEvent . getMotionEvent ( ) ; final Point2d org.solovyev.android.view.drag.Point2d = new Point2d ( org.solovyev.android.view.drag.MotionEvent . getX ( ) , org.solovyev.android.view.drag.MotionEvent . getY ( ) ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + org.solovyev.android.view.drag.Point2d + STRING + org.solovyev.android.view.drag.Point2d ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + Maths . getDistance ( org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.Point2d ) ) ; final MutableObject < java.lang.Boolean > org.solovyev.android.view.drag.MutableObject<java.lang.Boolean> = new MutableObject < java.lang.Boolean > ( ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + java.lang.Math . double ( Maths . getAngle ( org.solovyev.android.view.drag.Point2d , Maths . sum ( org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.Point2d ) , org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.MutableObject<java.lang.Boolean> ) ) ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + org.solovyev.android.view.drag.MutableObject<java.lang.Boolean> ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + org.solovyev.android.view.drag.Point2d + STRING + Maths . subtract ( org.solovyev.android.view.drag.Point2d , org.solovyev.android.view.drag.Point2d ) ) ; Log . d ( java.lang.String . java.lang.String ( org.solovyev.android.view.drag.DragButton . getId ( ) ) , STRING + ( org.solovyev.android.view.drag.MotionEvent . getEventTime ( ) - org.solovyev.android.view.drag.MotionEvent . getDownTime ( ) ) + STRING ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor ( ) { return org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor ) { this . org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor = org.solovyev.android.view.drag.SimpleOnDragListener.DragProcessor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.Preferences org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ) { this . org.solovyev.android.view.drag.SimpleOnDragListener.Preferences = org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ; }  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection , @ Nonnull DragButton org.solovyev.android.view.drag.DragButton , @ Nonnull Point2d org.solovyev.android.view.drag.Point2d , @ Nonnull MotionEvent org.solovyev.android.view.drag.MotionEvent );  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType , @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection ) { return STRING + STRING + org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.drag.SimpleOnDragListener.Preferences org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ( @ Nonnull Context org.solovyev.android.view.drag.Context ) { return org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ( null , org.solovyev.android.view.drag.Context ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.drag.SimpleOnDragListener.Preferences org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ( @ Nonnull final SharedPreferences org.solovyev.android.view.drag.SharedPreferences , @ Nonnull Context org.solovyev.android.view.drag.Context ) { return org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ( org.solovyev.android.view.drag.SharedPreferences , org.solovyev.android.view.drag.Context ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private static org.solovyev.android.view.drag.SimpleOnDragListener.Preferences org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ( @ Nullable final SharedPreferences org.solovyev.android.view.drag.SharedPreferences , @ Nonnull Context org.solovyev.android.view.drag.Context ) { final Mapper < Interval < java.lang.Float > > org.solovyev.android.view.drag.Mapper<org.solovyev.android.view.drag.Interval<java.lang.Float>> = NumberIntervalMapper . of ( java.lang.Float .class ) ; final org.solovyev.android.view.drag.SimpleOnDragListener.Preferences org.solovyev.android.view.drag.SimpleOnDragListener.Preferences = new org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ( ) ; for ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType : org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType . org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType[] ( ) ) { for ( DragDirection org.solovyev.android.view.drag.DragDirection : DragDirection . values ( ) ) { final java.lang.String java.lang.String = java.lang.String ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType , org.solovyev.android.view.drag.DragDirection ) ; final java.lang.String java.lang.String ; switch ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) { case org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType : java.lang.String = org.solovyev.android.view.drag.Context . getResources ( ) . getString ( R . string . p_drag_angle ) ; break; case org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType : java.lang.String = org.solovyev.android.view.drag.Context . getResources ( ) . getString ( R . string . p_drag_distance ) ; break; case org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType : java.lang.String = org.solovyev.android.view.drag.Context . getResources ( ) . getString ( R . string . p_drag_duration ) ; break; default: java.lang.String = null ; Log . e ( org.solovyev.android.view.drag.SimpleOnDragListener .class . java.lang.String ( ) , STRING + java.lang.String ) ; } final java.lang.String java.lang.String = org.solovyev.android.view.drag.SharedPreferences == null ? java.lang.String : org.solovyev.android.view.drag.SharedPreferences . getString ( java.lang.String , java.lang.String ) ; if ( java.lang.String != null ) { final Interval < java.lang.Float > org.solovyev.android.view.drag.Interval<java.lang.Float> = org.solovyev.android.view.drag.Interval<java.lang.Float> ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType , org.solovyev.android.view.drag.DragDirection , org.solovyev.android.view.drag.Mapper<org.solovyev.android.view.drag.Interval<java.lang.Float>> . parseValue ( java.lang.String ) ) ; Log . d ( org.solovyev.android.view.drag.SimpleOnDragListener .class . java.lang.String ( ) , STRING + org.solovyev.android.view.drag.DragDirection + STRING + java.lang.String + STRING + org.solovyev.android.view.drag.Interval<java.lang.Float> . toString ( ) ) ; final org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference = new org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference ( org.solovyev.android.view.drag.DragDirection , org.solovyev.android.view.drag.Interval<java.lang.Float> ) ; org.solovyev.android.view.drag.SimpleOnDragListener.Preference org.solovyev.android.view.drag.SimpleOnDragListener.Preference = org.solovyev.android.view.drag.SimpleOnDragListener.Preferences . java.util.Map<org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType,org.solovyev.android.view.drag.SimpleOnDragListener.Preference> ( ) . org.solovyev.android.view.drag.SimpleOnDragListener.Preference ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) ; if ( org.solovyev.android.view.drag.SimpleOnDragListener.Preference == null ) { org.solovyev.android.view.drag.SimpleOnDragListener.Preference = new org.solovyev.android.view.drag.SimpleOnDragListener.Preference ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) ; org.solovyev.android.view.drag.SimpleOnDragListener.Preferences . java.util.Map<org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType,org.solovyev.android.view.drag.SimpleOnDragListener.Preference> ( ) . org.solovyev.android.view.drag.SimpleOnDragListener.Preference ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType , org.solovyev.android.view.drag.SimpleOnDragListener.Preference ) ; } org.solovyev.android.view.drag.SimpleOnDragListener.Preference . java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> ( ) . put ( org.solovyev.android.view.drag.DragDirection , org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference ) ; } } } return org.solovyev.android.view.drag.SimpleOnDragListener.Preferences ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.drag.Interval<java.lang.Float> < java.lang.Float > org.solovyev.android.view.drag.Interval<java.lang.Float> ( @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType , @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection , @ Nonnull Interval < java.lang.Float > org.solovyev.android.view.drag.Interval<java.lang.Float> ) { if ( org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType == org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType . org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) { final java.lang.Float java.lang.Float = org.solovyev.android.view.drag.Interval<java.lang.Float> . getLeftLimit ( ) ; final java.lang.Float java.lang.Float = org.solovyev.android.view.drag.Interval<java.lang.Float> . getRightLimit ( ) ; if ( java.lang.Float != null && java.lang.Float != null ) { final java.lang.Float java.lang.Float ; final java.lang.Float java.lang.Float ; if ( org.solovyev.android.view.drag.DragDirection == DragDirection . up ) { java.lang.Float = NUMBER - java.lang.Float ; java.lang.Float = NUMBER - java.lang.Float ; } else if ( org.solovyev.android.view.drag.DragDirection == DragDirection . left ) { java.lang.Float = NUMBER - java.lang.Float ; java.lang.Float = NUMBER + java.lang.Float ; } else if ( org.solovyev.android.view.drag.DragDirection == DragDirection . right ) { java.lang.Float = NUMBER - java.lang.Float ; java.lang.Float = NUMBER + java.lang.Float ; } else { java.lang.Float = java.lang.Float ; java.lang.Float = java.lang.Float ; } return Intervals . newClosedInterval ( java.lang.Float , java.lang.Float ) ; } } return org.solovyev.android.view.drag.Interval<java.lang.Float> ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection , @ Nonnull Interval < java.lang.Float > org.solovyev.android.view.drag.Interval<java.lang.Float> ) { this . org.solovyev.android.view.drag.DragDirection = org.solovyev.android.view.drag.DragDirection ; this . org.solovyev.android.view.drag.Interval<java.lang.Float> = org.solovyev.android.view.drag.Interval<java.lang.Float> ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.DragDirection org.solovyev.android.view.drag.DragDirection ( ) { return org.solovyev.android.view.drag.DragDirection ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull DragDirection org.solovyev.android.view.drag.DragDirection ) { this . org.solovyev.android.view.drag.DragDirection = org.solovyev.android.view.drag.DragDirection ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.Interval<java.lang.Float> < java.lang.Float > org.solovyev.android.view.drag.Interval<java.lang.Float> ( ) { return org.solovyev.android.view.drag.Interval<java.lang.Float> ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Interval < java.lang.Float > org.solovyev.android.view.drag.Interval<java.lang.Float> ) { this . org.solovyev.android.view.drag.Interval<java.lang.Float> = org.solovyev.android.view.drag.Interval<java.lang.Float> ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) { this . org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType = org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ( ) { return org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ) { this . org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType = org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType ; }  <METHOD_END>
<METHOD_START> @ Nonnull public java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> < DragDirection , org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference > java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> ( ) { return java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> < DragDirection , org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference > java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> ) { this . java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> = java.util.Map<org.solovyev.android.view.drag.DragDirection,org.solovyev.android.view.drag.SimpleOnDragListener.DragPreference> ; }  <METHOD_END>
<METHOD_START> public java.util.Map<org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType,org.solovyev.android.view.drag.SimpleOnDragListener.Preference> < org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType , org.solovyev.android.view.drag.SimpleOnDragListener.Preference > java.util.Map<org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType,org.solovyev.android.view.drag.SimpleOnDragListener.Preference> ( ) { return java.util.Map<org.solovyev.android.view.drag.SimpleOnDragListener.PreferenceType,org.solovyev.android.view.drag.SimpleOnDragListener.Preference> ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context ) { super( org.solovyev.android.view.Context ); this . void ( org.solovyev.android.view.Context , null ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ); this . void ( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet , int int ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet , int ); this . void ( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int ) { int int = MeasureSpec . getSize ( int ) - this . getPaddingRight ( ) - this . getPaddingLeft ( ) ; int int = MeasureSpec . getSize ( int ) - this . getPaddingRight ( ) - this . getPaddingLeft ( ) ; int int = MeasureSpec . getMode ( int ) ; int int = MeasureSpec . getMode ( int ) ; int int ; int int ; if ( int == int ) { int = int ; int = int ; } else { int = int ; int = int ; } int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View org.solovyev.android.view.View = getChildAt ( int ) ; if ( org.solovyev.android.view.View . getVisibility ( ) == GONE ) { continue; } org.solovyev.android.view.View . measure ( MeasureSpec . makeMeasureSpec ( int , int == MeasureSpec . EXACTLY ? MeasureSpec . AT_MOST : int ) , MeasureSpec . makeMeasureSpec ( int , int == MeasureSpec . EXACTLY ? MeasureSpec . AT_MOST : int ) ) ; org.solovyev.android.view.FlowLayout.LayoutParams org.solovyev.android.view.FlowLayout.LayoutParams = ( org.solovyev.android.view.FlowLayout.LayoutParams ) org.solovyev.android.view.View . getLayoutParams ( ) ; int int = this . int ( org.solovyev.android.view.FlowLayout.LayoutParams ) ; int int = this . int ( org.solovyev.android.view.FlowLayout.LayoutParams ) ; int int = org.solovyev.android.view.View . getMeasuredWidth ( ) ; int int = org.solovyev.android.view.View . getMeasuredHeight ( ) ; int int ; int int ; int int ; int int ; if ( int == int ) { int = int ; int = int ; int = int ; int = int ; } else { int = int ; int = int ; int = int ; int = int ; } int = int + int ; int = int + int ; boolean boolean = org.solovyev.android.view.FlowLayout.LayoutParams . boolean || ( int != MeasureSpec . UNSPECIFIED && int > int ) ; if ( boolean ) { int = int + int ; int = int ; int = int ; int = int + int ; int = int + int ; } int = java.lang.Math . int ( int , int + int ) ; int = java.lang.Math . int ( int , int ) ; int int ; int int ; if ( int == int ) { int = getPaddingLeft ( ) + int - int ; int = getPaddingTop ( ) + int ; } else { int = getPaddingLeft ( ) + int ; int = getPaddingTop ( ) + int - int ; } org.solovyev.android.view.FlowLayout.LayoutParams . void ( int , int ) ; int = java.lang.Math . int ( int , int ) ; int = int + int ; } if ( int == int ) { this . setMeasuredDimension ( resolveSize ( int , int ) , resolveSize ( int , int ) ) ; } else { this . setMeasuredDimension ( resolveSize ( int , int ) , resolveSize ( int , int ) ) ; } }  <METHOD_END>
<METHOD_START> private int int ( org.solovyev.android.view.FlowLayout.LayoutParams org.solovyev.android.view.FlowLayout.LayoutParams ) { int int ; if ( org.solovyev.android.view.FlowLayout.LayoutParams . boolean ( ) ) { int = org.solovyev.android.view.FlowLayout.LayoutParams . int ; } else { int = this . int ; } return int ; }  <METHOD_END>
<METHOD_START> private int int ( org.solovyev.android.view.FlowLayout.LayoutParams org.solovyev.android.view.FlowLayout.LayoutParams ) { int int ; if ( org.solovyev.android.view.FlowLayout.LayoutParams . boolean ( ) ) { int = org.solovyev.android.view.FlowLayout.LayoutParams . int ; } else { int = this . int ; } return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( boolean boolean , int int , int int , int int , int int ) { final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { View org.solovyev.android.view.View = getChildAt ( int ) ; org.solovyev.android.view.FlowLayout.LayoutParams org.solovyev.android.view.FlowLayout.LayoutParams = ( org.solovyev.android.view.FlowLayout.LayoutParams ) org.solovyev.android.view.View . getLayoutParams ( ) ; org.solovyev.android.view.View . layout ( org.solovyev.android.view.FlowLayout.LayoutParams . int , org.solovyev.android.view.FlowLayout.LayoutParams . int , org.solovyev.android.view.FlowLayout.LayoutParams . int + org.solovyev.android.view.View . getMeasuredWidth ( ) , org.solovyev.android.view.FlowLayout.LayoutParams . int + org.solovyev.android.view.View . getMeasuredHeight ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( Canvas org.solovyev.android.view.Canvas , View org.solovyev.android.view.View , long long ) { boolean boolean = super. drawChild ( org.solovyev.android.view.Canvas , org.solovyev.android.view.View , long ) ; this . void ( org.solovyev.android.view.Canvas , org.solovyev.android.view.View ) ; return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ViewGroup . ViewGroup ViewGroup.LayoutParams ) { return ViewGroup.LayoutParams instanceof org.solovyev.android.view.FlowLayout.LayoutParams ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.view.FlowLayout.LayoutParams org.solovyev.android.view.FlowLayout.LayoutParams ( ) { return new org.solovyev.android.view.FlowLayout.LayoutParams ( org.solovyev.android.view.FlowLayout.LayoutParams . WRAP_CONTENT , org.solovyev.android.view.FlowLayout.LayoutParams . WRAP_CONTENT ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.view.FlowLayout.LayoutParams org.solovyev.android.view.FlowLayout.LayoutParams ( AttributeSet org.solovyev.android.view.AttributeSet ) { return new org.solovyev.android.view.FlowLayout.LayoutParams ( getContext ( ) , org.solovyev.android.view.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.view.FlowLayout.LayoutParams org.solovyev.android.view.FlowLayout.LayoutParams ( ViewGroup . ViewGroup ViewGroup.LayoutParams ) { return new org.solovyev.android.view.FlowLayout.LayoutParams ( ViewGroup.LayoutParams ) ; }  <METHOD_END>
<METHOD_START> private void void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet ) { TypedArray org.solovyev.android.view.TypedArray = org.solovyev.android.view.Context . obtainStyledAttributes ( org.solovyev.android.view.AttributeSet , R . styleable . FlowLayout ) ; try { int = org.solovyev.android.view.TypedArray . getDimensionPixelSize ( R . styleable . FlowLayout_horizontalSpacing , NUMBER ) ; int = org.solovyev.android.view.TypedArray . getDimensionPixelSize ( R . styleable . FlowLayout_verticalSpacing , NUMBER ) ; int = org.solovyev.android.view.TypedArray . getInteger ( R . styleable . FlowLayout_orientation , int ) ; boolean = org.solovyev.android.view.TypedArray . getBoolean ( R . styleable . FlowLayout_debugDraw , false ) ; } finally { org.solovyev.android.view.TypedArray . recycle ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( Canvas org.solovyev.android.view.Canvas , View org.solovyev.android.view.View ) { if ( ! boolean ) { return; } Paint org.solovyev.android.view.Paint = this . org.solovyev.android.view.Paint ( NUMBER ) ; Paint org.solovyev.android.view.Paint = this . org.solovyev.android.view.Paint ( NUMBER ) ; Paint org.solovyev.android.view.Paint = this . org.solovyev.android.view.Paint ( NUMBER ) ; org.solovyev.android.view.FlowLayout.LayoutParams org.solovyev.android.view.FlowLayout.LayoutParams = ( org.solovyev.android.view.FlowLayout.LayoutParams ) org.solovyev.android.view.View . getLayoutParams ( ) ; if ( org.solovyev.android.view.FlowLayout.LayoutParams . int > NUMBER ) { float float = org.solovyev.android.view.View . getRight ( ) ; float float = org.solovyev.android.view.View . getTop ( ) + org.solovyev.android.view.View . getHeight ( ) / NUMBER ; org.solovyev.android.view.Canvas . drawLine ( float , float , float + org.solovyev.android.view.FlowLayout.LayoutParams . int , float , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawLine ( float + org.solovyev.android.view.FlowLayout.LayoutParams . int - NUMBER , float - NUMBER , float + org.solovyev.android.view.FlowLayout.LayoutParams . int , float , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawLine ( float + org.solovyev.android.view.FlowLayout.LayoutParams . int - NUMBER , float + NUMBER , float + org.solovyev.android.view.FlowLayout.LayoutParams . int , float , org.solovyev.android.view.Paint ) ; } else if ( this . int > NUMBER ) { float float = org.solovyev.android.view.View . getRight ( ) ; float float = org.solovyev.android.view.View . getTop ( ) + org.solovyev.android.view.View . getHeight ( ) / NUMBER ; org.solovyev.android.view.Canvas . drawLine ( float , float , float + this . int , float , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawLine ( float + this . int - NUMBER , float - NUMBER , float + this . int , float , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawLine ( float + this . int - NUMBER , float + NUMBER , float + this . int , float , org.solovyev.android.view.Paint ) ; } if ( org.solovyev.android.view.FlowLayout.LayoutParams . int > NUMBER ) { float float = org.solovyev.android.view.View . getLeft ( ) + org.solovyev.android.view.View . getWidth ( ) / NUMBER ; float float = org.solovyev.android.view.View . getBottom ( ) ; org.solovyev.android.view.Canvas . drawLine ( float , float , float , float + org.solovyev.android.view.FlowLayout.LayoutParams . int , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawLine ( float - NUMBER , float + org.solovyev.android.view.FlowLayout.LayoutParams . int - NUMBER , float , float + org.solovyev.android.view.FlowLayout.LayoutParams . int , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawLine ( float + NUMBER , float + org.solovyev.android.view.FlowLayout.LayoutParams . int - NUMBER , float , float + org.solovyev.android.view.FlowLayout.LayoutParams . int , org.solovyev.android.view.Paint ) ; } else if ( this . int > NUMBER ) { float float = org.solovyev.android.view.View . getLeft ( ) + org.solovyev.android.view.View . getWidth ( ) / NUMBER ; float float = org.solovyev.android.view.View . getBottom ( ) ; org.solovyev.android.view.Canvas . drawLine ( float , float , float , float + this . int , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawLine ( float - NUMBER , float + this . int - NUMBER , float , float + this . int , org.solovyev.android.view.Paint ) ; org.solovyev.android.view.Canvas . drawLine ( float + NUMBER , float + this . int - NUMBER , float , float + this . int , org.solovyev.android.view.Paint ) ; } if ( org.solovyev.android.view.FlowLayout.LayoutParams . boolean ) { if ( int == int ) { float float = org.solovyev.android.view.View . getLeft ( ) ; float float = org.solovyev.android.view.View . getTop ( ) + org.solovyev.android.view.View . getHeight ( ) / NUMBER ; org.solovyev.android.view.Canvas . drawLine ( float , float - NUMBER , float , float + NUMBER , org.solovyev.android.view.Paint ) ; } else { float float = org.solovyev.android.view.View . getLeft ( ) + org.solovyev.android.view.View . getWidth ( ) / NUMBER ; float float = org.solovyev.android.view.View . getTop ( ) ; org.solovyev.android.view.Canvas . drawLine ( float - NUMBER , float , float + NUMBER , float , org.solovyev.android.view.Paint ) ; } } }  <METHOD_END>
<METHOD_START> private org.solovyev.android.view.Paint org.solovyev.android.view.Paint ( int int ) { Paint org.solovyev.android.view.Paint = new Paint ( ) ; org.solovyev.android.view.Paint . setAntiAlias ( true ) ; org.solovyev.android.view.Paint . setColor ( int ) ; org.solovyev.android.view.Paint . setStrokeWidth ( NUMBER ) ; return org.solovyev.android.view.Paint ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ); this . void ( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> public void ( int int , int int ) { super( int , int ); }  <METHOD_END>
<METHOD_START> public void ( ViewGroup . ViewGroup ViewGroup.LayoutParams ) { super( ViewGroup.LayoutParams ); }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return int != int ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return int != int ; }  <METHOD_END>
<METHOD_START> public void void ( int int , int int ) { this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> private void void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet ) { TypedArray org.solovyev.android.view.TypedArray = org.solovyev.android.view.Context . obtainStyledAttributes ( org.solovyev.android.view.AttributeSet , R . styleable . FlowLayout_LayoutParams ) ; try { int = org.solovyev.android.view.TypedArray . getDimensionPixelSize ( R . styleable . FlowLayout_LayoutParams_layout_horizontalSpacing , int ) ; int = org.solovyev.android.view.TypedArray . getDimensionPixelSize ( R . styleable . FlowLayout_LayoutParams_layout_verticalSpacing , int ) ; boolean = org.solovyev.android.view.TypedArray . getBoolean ( R . styleable . FlowLayout_LayoutParams_layout_newLine , false ) ; } finally { org.solovyev.android.view.TypedArray . recycle ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.view.Paint = new Paint ( ) ; org.solovyev.android.view.Paint . setARGB ( NUMBER , NUMBER , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.view.Paint = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull View org.solovyev.android.view.View , @ Nonnull Canvas org.solovyev.android.view.Canvas ) { final Paint org.solovyev.android.view.Paint = org.solovyev.android.view.Paint ; if ( org.solovyev.android.view.Paint != null ) { final RectF org.solovyev.android.view.RectF = new RectF ( ) ; org.solovyev.android.view.RectF . set ( NUMBER , NUMBER , org.solovyev.android.view.View . getMeasuredWidth ( ) , org.solovyev.android.view.View . getMeasuredHeight ( ) ) ; org.solovyev.android.view.Canvas . drawRoundRect ( org.solovyev.android.view.RectF , NUMBER , NUMBER , org.solovyev.android.view.Paint ) ; } }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context ) { super( org.solovyev.android.view.Context ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.view.ViewGrayable . grayOut ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.view.ViewGrayable . grayIn ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Canvas org.solovyev.android.view.Canvas ) { super. dispatchDraw ( org.solovyev.android.view.Canvas ) ; this . org.solovyev.android.view.ViewGrayable . dispatchDraw ( this , org.solovyev.android.view.Canvas ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer , int int , @ Nullable Formatter < java.lang.Integer > org.solovyev.android.view.Formatter<java.lang.Integer> ) { super( java.lang.Integer , java.lang.Integer , java.lang.Integer , int , org.solovyev.android.view.Formatter<java.lang.Integer> ); }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.NumberRange<java.lang.Integer> < java.lang.Integer > org.solovyev.android.view.NumberRange<java.lang.Integer> ( @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer ) { if ( java.lang.Integer < java.lang.Integer || java.lang.Integer > java.lang.Integer ) { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Integer + STRING + java.lang.Integer + STRING + java.lang.Integer + STRING ) ; } int int = NUMBER ; for ( int int = java.lang.Integer ; int < java.lang.Integer ; int += java.lang.Integer ) { int += NUMBER ; } return new org.solovyev.android.view.IntegerRange ( java.lang.Integer , java.lang.Integer , java.lang.Integer , int , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer ) { return ( java.lang.Integer - java.lang.Integer ) / java.lang.Integer + NUMBER ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected java.lang.Integer java.lang.Integer ( int int , @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer , @ Nonnull java.lang.Integer java.lang.Integer ) { return java.lang.Integer + int * java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.util.List<T> < T > java.util.List<T> , @ Nullable T T ) { this . java.util.List<T> = java.util.List<T> ; this . int = java.util.List<T> . int ( T ) ; if ( this . int < NUMBER ) { this . int = NUMBER ; } this . org.solovyev.android.view.Formatter<T> = null ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.util.List<T> < T > java.util.List<T> , @ Nullable T T , @ Nullable Formatter < T > org.solovyev.android.view.Formatter<T> ) { this( java.util.List<T> , T ); this . org.solovyev.android.view.Formatter<T> = org.solovyev.android.view.Formatter<T> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return this . java.util.List<T> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( int int ) { final T T = T ( int ) ; return org.solovyev.android.view.Formatter<T> == null ? T . java.lang.String ( ) : org.solovyev.android.view.Formatter<T> . formatValue ( T ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public T T ( int int ) { return this . java.util.List<T> . T ( int ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.ViewBuilder<org.solovyev.android.view.ListView> < ListView > org.solovyev.android.view.ViewBuilder<org.solovyev.android.view.ListView> ( @ Nonnull ListAdapter org.solovyev.android.view.ListAdapter ) { final org.solovyev.android.view.ListViewBuilder org.solovyev.android.view.ListViewBuilder = new org.solovyev.android.view.ListViewBuilder ( ) ; org.solovyev.android.view.ListViewBuilder . java.lang.Integer = null ; org.solovyev.android.view.ListViewBuilder . org.solovyev.android.view.ListAdapter = org.solovyev.android.view.ListAdapter ; return org.solovyev.android.view.ListViewBuilder ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.ViewBuilder<org.solovyev.android.view.ListView> < ListView > org.solovyev.android.view.ViewBuilder<org.solovyev.android.view.ListView> ( int int , @ Nonnull ListAdapter org.solovyev.android.view.ListAdapter ) { final org.solovyev.android.view.ListViewBuilder org.solovyev.android.view.ListViewBuilder = new org.solovyev.android.view.ListViewBuilder ( ) ; org.solovyev.android.view.ListViewBuilder . java.lang.Integer = int ; org.solovyev.android.view.ListViewBuilder . org.solovyev.android.view.ListAdapter = org.solovyev.android.view.ListAdapter ; return org.solovyev.android.view.ListViewBuilder ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.ListView org.solovyev.android.view.ListView ( @ Nonnull Context org.solovyev.android.view.Context ) { final ListView org.solovyev.android.view.ListView ; if ( java.lang.Integer != null ) { org.solovyev.android.view.ListView = ViewFromLayoutBuilder .< ListView > newInstance ( java.lang.Integer ) . build ( org.solovyev.android.view.Context ) ; } else { org.solovyev.android.view.ListView = new ListView ( org.solovyev.android.view.Context ) ; } org.solovyev.android.view.ListView . setAdapter ( org.solovyev.android.view.ListAdapter ) ; return org.solovyev.android.view.ListView ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull N N , @ Nonnull N N , @ Nonnull N N , int int , @ Nullable Formatter < N > org.solovyev.android.view.Formatter<N> ) { assert N . int ( N ) <= NUMBER ; this . N = N ; this . N = N ; this . N = N ; this . int = int ; this . org.solovyev.android.view.Formatter<N> = org.solovyev.android.view.Formatter<N> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { if ( this . int < int ( ) ) { return this . int ; } else { return int ( ) - NUMBER ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { if ( int == - NUMBER ) { int = int ( N , N , N ) ; } return int ; }  <METHOD_END>
<METHOD_START> protected abstract int int ( @ Nonnull N N , @ Nonnull N N , @ Nonnull N N );  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( int int ) { int int = int ( ) ; if ( int < NUMBER || int >= int ) { throw new java.lang.IllegalArgumentException ( STRING + int + STRING + int + STRING ) ; } final N N = N ( int , N , N , N ) ; return org.solovyev.android.view.Formatter<N> == null ? N . java.lang.String ( ) : org.solovyev.android.view.Formatter<N> . formatValue ( N ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public N N ( int int ) { return N ( int , N , N , N ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull protected abstract N N ( int int , @ Nonnull N N , @ Nonnull N N , @ Nonnull N N );  <METHOD_END>
<METHOD_START> public void ( @ Nonnull Interval < T > org.solovyev.android.view.Interval<T> , @ Nullable java.lang.Integer java.lang.Integer , Context org.solovyev.android.view.Context ) throws java.lang.IllegalArgumentException { this( org.solovyev.android.view.Interval<T> . getLeftLimit ( ) , org.solovyev.android.view.Interval<T> . getRightLimit ( ) , java.lang.Integer , org.solovyev.android.view.Context ); }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull T T , @ Nonnull T T , @ Nullable java.lang.Integer java.lang.Integer , Context org.solovyev.android.view.Context ) throws java.lang.IllegalArgumentException { super( T , T , java.lang.Integer , org.solovyev.android.view.Context ); org.solovyev.android.view.NumberType = NumberType . fromNumber ( T ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.view.Converter<java.lang.Double,T> < java.lang.Double , T > org.solovyev.android.view.Converter<java.lang.Double,T> ( ) { return new Converter < java.lang.Double , T > ( ) { @ Nonnull @ java.lang.Override public T T ( @ Nonnull java.lang.Double java.lang.Double ) { return ( T ) org.solovyev.android.view.NumberType . toNumber ( java.lang.Double ) ; } } ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public T T ( @ Nonnull java.lang.Double java.lang.Double ) { return ( T ) org.solovyev.android.view.NumberType . toNumber ( java.lang.Double ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override protected org.solovyev.android.view.Converter<T,java.lang.Double> < T , java.lang.Double > org.solovyev.android.view.Converter<T,java.lang.Double> ( ) { return new NumberValuer < T > ( ) ; }  <METHOD_END>
<METHOD_START> void ( @ Nonnull java.lang.Class java.lang.Class ) { this . java.lang.Class = java.lang.Class ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < E extends java.lang.Number > org.solovyev.android.view.NumberType org.solovyev.android.view.NumberType ( E E ) throws java.lang.IllegalArgumentException { for ( org.solovyev.android.view.NumberType org.solovyev.android.view.NumberType : org.solovyev.android.view.NumberType . org.solovyev.android.view.NumberType[] ( ) ) { if ( org.solovyev.android.view.NumberType . java.lang.Class . boolean ( E ) ) { return org.solovyev.android.view.NumberType ; } } throw new java.lang.IllegalArgumentException ( STRING + E . java.lang.Class<? extends java.lang.Number> ( ) . java.lang.String ( ) + STRING ) ; }  <METHOD_END>
<METHOD_START> public < T extends java.lang.Number > T T ( double double ) { switch ( this ) { case org.solovyev.android.view.NumberType : return ( T ) new java.lang.Long ( ( long ) double ) ; case org.solovyev.android.view.NumberType : return ( T ) new java.lang.Double ( double ) ; case org.solovyev.android.view.NumberType : return ( T ) new java.lang.Integer ( ( int ) double ) ; case org.solovyev.android.view.NumberType : return ( T ) new java.lang.Float ( ( float ) double ) ; case org.solovyev.android.view.NumberType : return ( T ) new java.lang.Short ( ( short ) double ) ; case org.solovyev.android.view.NumberType : return ( T ) new java.lang.Byte ( ( byte ) double ) ; case org.solovyev.android.view.NumberType : return ( T ) new java.math.BigDecimal ( double ) ; } throw new java.lang.InstantiationError ( STRING + this + STRING ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nullable Vibrator org.solovyev.android.view.Vibrator , @ Nonnull SharedPreferences org.solovyev.android.view.SharedPreferences ) { this . org.solovyev.android.view.VibratorContainer = new VibratorContainer ( org.solovyev.android.view.Vibrator , org.solovyev.android.view.SharedPreferences , float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.view.View ) { org.solovyev.android.view.VibratorContainer . vibrate ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet , int int ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet , int ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , AttributeSet org.solovyev.android.view.AttributeSet ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context ) { super( org.solovyev.android.view.Context ); }  <METHOD_END>
<METHOD_START> public void void ( Picker org.solovyev.android.view.Picker ) { org.solovyev.android.view.Picker = org.solovyev.android.view.Picker ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.view.MotionEvent ) { void ( org.solovyev.android.view.MotionEvent ) ; return super. onTouchEvent ( org.solovyev.android.view.MotionEvent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.view.MotionEvent ) { void ( org.solovyev.android.view.MotionEvent ) ; return super. onTrackballEvent ( org.solovyev.android.view.MotionEvent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( int int , KeyEvent org.solovyev.android.view.KeyEvent ) { if ( ( int == KeyEvent . KEYCODE_DPAD_CENTER ) || ( int == KeyEvent . KEYCODE_ENTER ) ) { void ( ) ; } return super. onKeyUp ( int , org.solovyev.android.view.KeyEvent ) ; }  <METHOD_END>
<METHOD_START> private void void ( MotionEvent org.solovyev.android.view.MotionEvent ) { if ( ( org.solovyev.android.view.MotionEvent . getAction ( ) == MotionEvent . ACTION_CANCEL ) || ( org.solovyev.android.view.MotionEvent . getAction ( ) == MotionEvent . ACTION_UP ) ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( R . id . increment == getId ( ) ) { org.solovyev.android.view.Picker . cancelIncrement ( ) ; } else if ( R . id . decrement == getId ( ) ) { org.solovyev.android.view.Picker . cancelDecrement ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { super. onWindowFocusChanged ( boolean ) ; if ( ! boolean ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull org.solovyev.android.view.Picker org.solovyev.android.view.Picker , @ Nonnull T T );  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( int int );  <METHOD_END>
<METHOD_START> @ Nonnull T T ( int int );  <METHOD_END>
<METHOD_START> public void void ( ) { if ( boolean ) { void ( int + NUMBER ) ; org.solovyev.android.view.Handler . postDelayed ( this , long ) ; } else if ( boolean ) { void ( int - NUMBER ) ; org.solovyev.android.view.Handler . postDelayed ( this , long ) ; } }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context ) { this( org.solovyev.android.view.Context , null ); }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.Context , @ Nullable AttributeSet org.solovyev.android.view.AttributeSet ) { super( org.solovyev.android.view.Context , org.solovyev.android.view.AttributeSet ); TypedArray org.solovyev.android.view.TypedArray = org.solovyev.android.view.Context . obtainStyledAttributes ( org.solovyev.android.view.AttributeSet , R . styleable . Picker ) ; final int int = org.solovyev.android.view.TypedArray . getInt ( R . styleable . Picker_orientation , VERTICAL ) ; setOrientation ( int ) ; final LayoutInflater org.solovyev.android.view.LayoutInflater = ( LayoutInflater ) getContext ( ) . getSystemService ( Context . LAYOUT_INFLATER_SERVICE ) ; if ( int == HORIZONTAL ) { org.solovyev.android.view.LayoutInflater . inflate ( R . layout . number_picker_horizontal , this , true ) ; } else { org.solovyev.android.view.LayoutInflater . inflate ( R . layout . number_picker , this , true ) ; } final OnClickListener org.solovyev.android.view.OnClickListener = new OnClickListener ( ) { public void void ( View org.solovyev.android.view.View ) { if ( R . id . increment == org.solovyev.android.view.View . getId ( ) ) { void ( int + NUMBER ) ; } else if ( R . id . decrement == org.solovyev.android.view.View . getId ( ) ) { void ( int - NUMBER ) ; } } } ; final OnLongClickListener org.solovyev.android.view.OnLongClickListener = new OnLongClickListener ( ) { public boolean boolean ( View org.solovyev.android.view.View ) { if ( R . id . increment == org.solovyev.android.view.View . getId ( ) ) { boolean = true ; org.solovyev.android.view.Handler . post ( java.lang.Runnable ) ; } else if ( R . id . decrement == org.solovyev.android.view.View . getId ( ) ) { boolean = true ; org.solovyev.android.view.Handler . post ( java.lang.Runnable ) ; } return true ; } } ; org.solovyev.android.view.PickerButton = ( PickerButton ) this . findViewById ( R . id . increment ) ; org.solovyev.android.view.PickerButton . setNumberPicker ( this ) ; org.solovyev.android.view.PickerButton . setOnClickListener ( org.solovyev.android.view.OnClickListener ) ; org.solovyev.android.view.PickerButton . setOnLongClickListener ( org.solovyev.android.view.OnLongClickListener ) ; org.solovyev.android.view.PickerButton = ( PickerButton ) this . findViewById ( R . id . decrement ) ; org.solovyev.android.view.PickerButton . setNumberPicker ( this ) ; org.solovyev.android.view.PickerButton . setOnClickListener ( org.solovyev.android.view.OnClickListener ) ; org.solovyev.android.view.PickerButton . setOnLongClickListener ( org.solovyev.android.view.OnLongClickListener ) ; org.solovyev.android.view.TextView = ( TextView ) this . findViewById ( R . id . timepicker_input ) ; if ( ! isEnabled ( ) ) { void ( false ) ; } }  <METHOD_END>
<METHOD_START> public void void ( View org.solovyev.android.view.View ) { if ( R . id . increment == org.solovyev.android.view.View . getId ( ) ) { void ( int + NUMBER ) ; } else if ( R . id . decrement == org.solovyev.android.view.View . getId ( ) ) { void ( int - NUMBER ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( View org.solovyev.android.view.View ) { if ( R . id . increment == org.solovyev.android.view.View . getId ( ) ) { boolean = true ; org.solovyev.android.view.Handler . post ( java.lang.Runnable ) ; } else if ( R . id . decrement == org.solovyev.android.view.View . getId ( ) ) { boolean = true ; org.solovyev.android.view.Handler . post ( java.lang.Runnable ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { super. setEnabled ( boolean ) ; org.solovyev.android.view.PickerButton . setEnabled ( boolean ) ; org.solovyev.android.view.PickerButton . setEnabled ( boolean ) ; org.solovyev.android.view.TextView . setEnabled ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( org.solovyev.android.view.Picker.OnChangedListener<T> < T > org.solovyev.android.view.Picker.OnChangedListener<T> ) { this . org.solovyev.android.view.Picker.OnChangedListener<T> = org.solovyev.android.view.Picker.OnChangedListener<T> ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull org.solovyev.android.view.Picker.Range<T> < T > org.solovyev.android.view.Picker.Range<T> ) { this . org.solovyev.android.view.Picker.Range<T> = org.solovyev.android.view.Picker.Range<T> ; this . int = org.solovyev.android.view.Picker.Range<T> . int ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if ( int < NUMBER || int >= org.solovyev.android.view.Picker.Range<T> . int ( ) ) { throw new java.lang.IllegalArgumentException ( STRING + int + STRING + org.solovyev.android.view.Picker.Range<T> . int ( ) ) ; } this . int = int ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> protected void void ( int int ) { if ( int < NUMBER ) { int = this . org.solovyev.android.view.Picker.Range<T> . int ( ) - NUMBER ; } else if ( int >= this . org.solovyev.android.view.Picker.Range<T> . int ( ) ) { int = NUMBER ; } this . int = int ; void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( org.solovyev.android.view.Picker.OnChangedListener<T> != null ) { org.solovyev.android.view.Picker.OnChangedListener<T> . void ( this , org.solovyev.android.view.Picker.Range<T> . T ( int ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { org.solovyev.android.view.TextView . setText ( org.solovyev.android.view.Picker.Range<T> . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { boolean = false ; }  <METHOD_END>
<METHOD_START> public void void ( ) { boolean = false ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void ( ) {	}  <METHOD_END>
<METHOD_START> public void ( @ Nonnull ScrollView org.solovyev.android.view.scroll.ScrollView ) { this . int = org.solovyev.android.view.scroll.ScrollView . getScrollX ( ) ; this . int = org.solovyev.android.view.scroll.ScrollView . getScrollY ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull final ScrollView org.solovyev.android.view.scroll.ScrollView ) { org.solovyev.android.view.scroll.ScrollView . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { org.solovyev.android.view.scroll.ScrollView . scrollTo ( int , int ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.view.scroll.ScrollView . scrollTo ( int , int ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Bundle org.solovyev.android.view.scroll.Bundle , @ Nonnull final ScrollView org.solovyev.android.view.scroll.ScrollView ) { org.solovyev.android.view.scroll.Bundle . putSerializable ( java.lang.String , new org.solovyev.android.view.scroll.ScrollViewState ( org.solovyev.android.view.scroll.ScrollView ) ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Bundle org.solovyev.android.view.scroll.Bundle , @ Nonnull final ScrollView org.solovyev.android.view.scroll.ScrollView ) { final java.lang.Object java.lang.Object = org.solovyev.android.view.scroll.Bundle . getSerializable ( java.lang.String ) ; if ( java.lang.Object instanceof org.solovyev.android.view.scroll.ScrollViewState ) { ( ( org.solovyev.android.view.scroll.ScrollViewState ) java.lang.Object ) . void ( org.solovyev.android.view.scroll.ScrollView ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean );  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.sidebar.SideBarAttributes org.solovyev.android.view.sidebar.SideBarAttributes ( @ Nonnull Context org.solovyev.android.view.sidebar.Context , @ Nonnull AttributeSet org.solovyev.android.view.sidebar.AttributeSet ) { final org.solovyev.android.view.sidebar.SideBarAttributes org.solovyev.android.view.sidebar.SideBarAttributes = new org.solovyev.android.view.sidebar.SideBarAttributes ( ) ; final TypedArray org.solovyev.android.view.sidebar.TypedArray = org.solovyev.android.view.sidebar.Context . obtainStyledAttributes ( org.solovyev.android.view.sidebar.AttributeSet , R . styleable . SideBarLayout ) ; org.solovyev.android.view.sidebar.SideBarAttributes . int = org.solovyev.android.view.sidebar.TypedArray . getResourceId ( R . styleable . SideBarLayout_mainViewId , View . NO_ID ) ; org.solovyev.android.view.sidebar.SideBarAttributes . int = org.solovyev.android.view.sidebar.TypedArray . getResourceId ( R . styleable . SideBarLayout_slidingViewId , View . NO_ID ) ; org.solovyev.android.view.sidebar.SideBarAttributes . int = org.solovyev.android.view.sidebar.TypedArray . getDimensionPixelSize ( R . styleable . SideBarLayout_slidingViewLedge , NUMBER ) ; org.solovyev.android.view.sidebar.SideBarAttributes . org.solovyev.android.view.sidebar.SideBarSlidingViewPosition = SideBarSlidingViewPosition . getById ( org.solovyev.android.view.sidebar.TypedArray . getInt ( R . styleable . SideBarLayout_slidingViewPosition , NUMBER ) ) ; org.solovyev.android.view.sidebar.SideBarAttributes . org.solovyev.android.view.sidebar.SideBarSlidingViewStyle = SideBarSlidingViewStyle . getById ( org.solovyev.android.view.sidebar.TypedArray . getInt ( R . styleable . SideBarLayout_slidingViewStyle , NUMBER ) ) ; org.solovyev.android.view.sidebar.TypedArray . recycle ( ) ; void ( org.solovyev.android.view.sidebar.SideBarAttributes ) ; return org.solovyev.android.view.sidebar.SideBarAttributes ; }  <METHOD_END>
<METHOD_START> private static void void ( org.solovyev.android.view.sidebar.SideBarAttributes org.solovyev.android.view.sidebar.SideBarAttributes ) { if ( org.solovyev.android.view.sidebar.SideBarAttributes . int == View . NO_ID ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( org.solovyev.android.view.sidebar.SideBarAttributes . int == View . NO_ID ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.sidebar.SideBarAttributes org.solovyev.android.view.sidebar.SideBarAttributes ( int int , int int , int int , SideBarSlidingViewPosition org.solovyev.android.view.sidebar.SideBarSlidingViewPosition ) { final org.solovyev.android.view.sidebar.SideBarAttributes org.solovyev.android.view.sidebar.SideBarAttributes = new org.solovyev.android.view.sidebar.SideBarAttributes ( ) ; org.solovyev.android.view.sidebar.SideBarAttributes . int = int ; org.solovyev.android.view.sidebar.SideBarAttributes . int = int ; org.solovyev.android.view.sidebar.SideBarAttributes . int = int ; org.solovyev.android.view.sidebar.SideBarAttributes . org.solovyev.android.view.sidebar.SideBarSlidingViewPosition = org.solovyev.android.view.sidebar.SideBarSlidingViewPosition ; void ( org.solovyev.android.view.sidebar.SideBarAttributes ) ; return org.solovyev.android.view.sidebar.SideBarAttributes ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.view.sidebar.SideBarSlidingViewPosition org.solovyev.android.view.sidebar.SideBarSlidingViewPosition ( ) { return org.solovyev.android.view.sidebar.SideBarSlidingViewPosition ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return int > NUMBER ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.view.sidebar.SideBarSlidingViewStyle org.solovyev.android.view.sidebar.SideBarSlidingViewStyle ( ) { return org.solovyev.android.view.sidebar.SideBarSlidingViewStyle ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.sidebar.Context , int int , int int ) { super( org.solovyev.android.view.sidebar.Context ); org.solovyev.android.view.sidebar.SideBarAttributes = SideBarAttributes . newAttributes ( int , int , NUMBER , SideBarSlidingViewPosition . left ) ; void ( org.solovyev.android.view.sidebar.Context , null ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.sidebar.Context , AttributeSet org.solovyev.android.view.sidebar.AttributeSet ) { super( org.solovyev.android.view.sidebar.Context , org.solovyev.android.view.sidebar.AttributeSet ); void ( org.solovyev.android.view.sidebar.Context , org.solovyev.android.view.sidebar.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> public void ( Context org.solovyev.android.view.sidebar.Context , AttributeSet org.solovyev.android.view.sidebar.AttributeSet , int int ) { super( org.solovyev.android.view.sidebar.Context , org.solovyev.android.view.sidebar.AttributeSet , int ); void ( org.solovyev.android.view.sidebar.Context , org.solovyev.android.view.sidebar.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull Context org.solovyev.android.view.sidebar.Context , @ Nullable AttributeSet org.solovyev.android.view.sidebar.AttributeSet ) { if ( org.solovyev.android.view.sidebar.AttributeSet != null ) { org.solovyev.android.view.sidebar.SideBarAttributes = SideBarAttributes . newAttributes ( org.solovyev.android.view.sidebar.Context , org.solovyev.android.view.sidebar.AttributeSet ) ; } org.solovyev.android.view.sidebar.SideBarSlider = new SideBarSlider ( this , org.solovyev.android.view.sidebar.SideBarAttributes , this ) ; org.solovyev.android.view.sidebar.Paint = new Paint ( Paint . ANTI_ALIAS_FLAG | Paint . FILTER_BITMAP_FLAG | Paint . DITHER_FLAG ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int ) { final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; if ( org.solovyev.android.view.sidebar.SideBarAttributes . isSlideMainView ( ) ) { final int int = org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewLedge ( ) ; if ( boolean || int > NUMBER ) { final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; final LayoutParams org.solovyev.android.view.sidebar.LayoutParams = ( LayoutParams ) org.solovyev.android.view.sidebar.View . getLayoutParams ( ) ; if ( boolean ) { measureChild ( org.solovyev.android.view.sidebar.View , int , int ) ; switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : lp . leftMargin = org.solovyev.android.view.sidebar.View . getMeasuredWidth ( ) ; break; case top : lp . topMargin = org.solovyev.android.view.sidebar.View . getMeasuredWidth ( ) ; break; case right : lp . rightMargin = org.solovyev.android.view.sidebar.View . getMeasuredWidth ( ) ; break; case bottom : lp . bottomMargin = org.solovyev.android.view.sidebar.View . getMeasuredWidth ( ) ; break; } } else { switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : measureChild ( org.solovyev.android.view.sidebar.View , int , int ) ; lp . leftMargin = int ; break; case top : measureChild ( org.solovyev.android.view.sidebar.View , int , int ) ; lp . topMargin = int ; break; case right : measureChild ( org.solovyev.android.view.sidebar.View , int , int ) ; lp . rightMargin = int ; break; case bottom : measureChild ( org.solovyev.android.view.sidebar.View , int , int ) ; lp . bottomMargin = int ; break; } } } } super. onMeasure ( int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( boolean boolean , int int , int int , int int , int int ) { final int int = int - int ; final int int = int - int ; final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; final int int = org.solovyev.android.view.sidebar.View . getMeasuredWidth ( ) ; final int int = org.solovyev.android.view.sidebar.View . getMeasuredHeight ( ) ; final int int ; if ( boolean || org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) { switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case int : case int : int = int ; break; case int : case int : int = int ; break; default: throw new java.lang.UnsupportedOperationException ( ) ; } } else if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) { int = org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewLedge ( ) ; } else { int = org.solovyev.android.view.sidebar.SideBarSlider . getOffset ( ) ; } switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewStyle ( ) ) { case hover : org.solovyev.android.view.sidebar.View . layout ( NUMBER , NUMBER , int , int ) ; break; case push : switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case int : org.solovyev.android.view.sidebar.View . layout ( int , NUMBER , int + int , int ) ; break; case int : org.solovyev.android.view.sidebar.View . layout ( NUMBER , int , int , int + int ) ; break; case int : org.solovyev.android.view.sidebar.View . layout ( - int , NUMBER , int - int , int ) ; break; case int : org.solovyev.android.view.sidebar.View . layout ( NUMBER , - int , int , int - int ) ; break; } break; } switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case int : org.solovyev.android.view.sidebar.View . layout ( - int + int , NUMBER , int , int ) ; break; case int : org.solovyev.android.view.sidebar.View . layout ( NUMBER , int - int , int , int ) ; break; case int : org.solovyev.android.view.sidebar.View . layout ( int - int , NUMBER , int - int + int , int ) ; break; case int : org.solovyev.android.view.sidebar.View . layout ( NUMBER , int - int , int , int - int + int ) ; break; } invalidate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Canvas org.solovyev.android.view.sidebar.Canvas ) { try { if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ) { if ( java.util.concurrent.atomic.AtomicInteger . int ( ) > int ) { void ( ) ; java.util.concurrent.atomic.AtomicInteger . void ( NUMBER ) ; } org.solovyev.android.view.sidebar.Canvas . save ( ) ; switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewStyle ( ) ) { case push : switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : org.solovyev.android.view.sidebar.Canvas . translate ( org.solovyev.android.view.sidebar.SideBarSlider . getOffset ( ) , NUMBER ) ; break; case top : org.solovyev.android.view.sidebar.Canvas . translate ( NUMBER , org.solovyev.android.view.sidebar.SideBarSlider . getOffset ( ) ) ; break; case right : org.solovyev.android.view.sidebar.Canvas . translate ( - org.solovyev.android.view.sidebar.SideBarSlider . getOffset ( ) , NUMBER ) ; break; case bottom : org.solovyev.android.view.sidebar.Canvas . translate ( NUMBER , - org.solovyev.android.view.sidebar.SideBarSlider . getOffset ( ) ) ; break; } break; } org.solovyev.android.view.sidebar.Canvas . drawBitmap ( org.solovyev.android.view.sidebar.Bitmap , NUMBER , NUMBER , org.solovyev.android.view.sidebar.Paint ) ; org.solovyev.android.view.sidebar.Canvas . restore ( ) ; final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; final int int = org.solovyev.android.view.sidebar.View . getScrollX ( ) ; final int int = org.solovyev.android.view.sidebar.View . getScrollY ( ) ; org.solovyev.android.view.sidebar.Canvas . save ( ) ; final int int = org.solovyev.android.view.sidebar.Canvas . getWidth ( ) ; final int int = org.solovyev.android.view.sidebar.Canvas . getHeight ( ) ; switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : org.solovyev.android.view.sidebar.Canvas . clipRect ( NUMBER , NUMBER , org.solovyev.android.view.sidebar.SideBarSlider . getOffsetOnScreen ( ) , int , Region . Op . REPLACE ) ; org.solovyev.android.view.sidebar.Canvas . translate ( - int - ( org.solovyev.android.view.sidebar.View . getMeasuredWidth ( ) - org.solovyev.android.view.sidebar.SideBarSlider . getOffset ( ) ) , - int ) ; break; case top : org.solovyev.android.view.sidebar.Canvas . clipRect ( NUMBER , NUMBER , int , org.solovyev.android.view.sidebar.SideBarSlider . getOffsetOnScreen ( ) , Region . Op . REPLACE ) ; org.solovyev.android.view.sidebar.Canvas . translate ( - int , - int - org.solovyev.android.view.sidebar.View . getMeasuredHeight ( ) + org.solovyev.android.view.sidebar.SideBarSlider . getOffsetOnScreen ( ) ) ; break; case right : org.solovyev.android.view.sidebar.Canvas . clipRect ( org.solovyev.android.view.sidebar.SideBarSlider . getOffsetOnScreen ( ) , NUMBER , int , int , Region . Op . REPLACE ) ; org.solovyev.android.view.sidebar.Canvas . translate ( - int + org.solovyev.android.view.sidebar.SideBarSlider . getOffsetOnScreen ( ) , - int ) ; break; case bottom : org.solovyev.android.view.sidebar.Canvas . clipRect ( NUMBER , org.solovyev.android.view.sidebar.SideBarSlider . getOffsetOnScreen ( ) , int , int , Region . Op . REPLACE ) ; org.solovyev.android.view.sidebar.Canvas . translate ( - int , - int + org.solovyev.android.view.sidebar.SideBarSlider . getOffsetOnScreen ( ) ) ; break; default: throw new java.lang.UnsupportedOperationException ( ) ; } org.solovyev.android.view.sidebar.View . draw ( org.solovyev.android.view.sidebar.Canvas ) ; org.solovyev.android.view.sidebar.Canvas . restore ( ) ; } else { if ( ! boolean ) { if ( ! org.solovyev.android.view.sidebar.SideBarAttributes . isSlidingViewLedgeExists ( ) ) { if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) { org.solovyev.android.view.sidebar.View ( ) . setVisibility ( View . GONE ) ; } } } super. dispatchDraw ( org.solovyev.android.view.sidebar.Canvas ) ; } } catch ( java.lang.IndexOutOfBoundsException java.lang.IndexOutOfBoundsException ) { } }  <METHOD_END>
<METHOD_START> private void void ( ) { final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; org.solovyev.android.view.sidebar.Canvas . drawColor ( Color . TRANSPARENT , PorterDuff . Mode . CLEAR ) ; org.solovyev.android.view.sidebar.Canvas . translate ( - org.solovyev.android.view.sidebar.View . getScrollX ( ) , - org.solovyev.android.view.sidebar.View . getScrollY ( ) ) ; org.solovyev.android.view.sidebar.View . draw ( org.solovyev.android.view.sidebar.Canvas ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected org.solovyev.android.view.sidebar.Parcelable org.solovyev.android.view.sidebar.Parcelable ( ) { boolean boolean ; if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) { boolean = true ; } else if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ) { boolean = org.solovyev.android.view.sidebar.SideBarSlider . isOpening ( ) ; } else { boolean = false ; } return new org.solovyev.android.view.sidebar.SideBarLayout.ViewState ( super. onSaveInstanceState ( ) , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Parcelable org.solovyev.android.view.sidebar.Parcelable ) { if ( org.solovyev.android.view.sidebar.Parcelable instanceof org.solovyev.android.view.sidebar.SideBarLayout.ViewState ) { final org.solovyev.android.view.sidebar.SideBarLayout.ViewState org.solovyev.android.view.sidebar.SideBarLayout.ViewState = ( org.solovyev.android.view.sidebar.SideBarLayout.ViewState ) org.solovyev.android.view.sidebar.Parcelable ; super. onRestoreInstanceState ( org.solovyev.android.view.sidebar.SideBarLayout.ViewState . getSuperState ( ) ) ; if ( org.solovyev.android.view.sidebar.SideBarLayout.ViewState . boolean ) { boolean ( ) ; } else { boolean ( ) ; } } else { super. onRestoreInstanceState ( org.solovyev.android.view.sidebar.Parcelable ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.view.sidebar.View org.solovyev.android.view.sidebar.View ( ) { if ( org.solovyev.android.view.sidebar.View == null ) { org.solovyev.android.view.sidebar.View = findViewById ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewId ( ) ) ; } return org.solovyev.android.view.sidebar.View ; }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.view.sidebar.View org.solovyev.android.view.sidebar.View ( ) { if ( org.solovyev.android.view.sidebar.View == null ) { org.solovyev.android.view.sidebar.View = findViewById ( org.solovyev.android.view.sidebar.SideBarAttributes . getMainViewId ( ) ) ; } return org.solovyev.android.view.sidebar.View ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { boolean = boolean ; requestLayout ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( OnSlideListener org.solovyev.android.view.sidebar.OnSlideListener ) { org.solovyev.android.view.sidebar.OnSlideListener = org.solovyev.android.view.sidebar.OnSlideListener ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( boolean ) { void ( ) ; } else { void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( boolean ( ) ) { boolean ( ) ; } else { boolean ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( boolean ( ) ) { boolean ( ) ; } else { boolean ( ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { if ( boolean ( ) || boolean || org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ) { return false ; } void ( ) ; void ( org.solovyev.android.view.sidebar.SideBarSlider . newOpenAnimation ( ) ) ; invalidate ( ) ; return true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { if ( boolean ( ) || boolean || org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ) { return false ; } org.solovyev.android.view.sidebar.View ( ) . setVisibility ( View . VISIBLE ) ; org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState = org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; requestLayout ( ) ; if ( org.solovyev.android.view.sidebar.OnSlideListener != null ) { org.solovyev.android.view.sidebar.OnSlideListener . onSlideCompleted ( true ) ; } return true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { if ( ! boolean ( ) || boolean || org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ) { return false ; } void ( ) ; void ( org.solovyev.android.view.sidebar.SideBarSlider . newCloseAnimation ( ) ) ; invalidate ( ) ; return true ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { if ( ! boolean ( ) || boolean || org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ) { return false ; } if ( ! org.solovyev.android.view.sidebar.SideBarAttributes . isSlidingViewLedgeExists ( ) ) { org.solovyev.android.view.sidebar.View ( ) . setVisibility ( View . GONE ) ; } org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState = org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; requestLayout ( ) ; if ( org.solovyev.android.view.sidebar.OnSlideListener != null ) { org.solovyev.android.view.sidebar.OnSlideListener . onSlideCompleted ( false ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.view.sidebar.MotionEvent ) { if ( boolean ) { return super. dispatchTouchEvent ( org.solovyev.android.view.sidebar.MotionEvent ) ; } else if ( ! isEnabled ( ) && org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) { return super. dispatchTouchEvent ( org.solovyev.android.view.sidebar.MotionEvent ) ; } if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState != org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) { boolean ( org.solovyev.android.view.sidebar.MotionEvent ) ; if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ) { super. dispatchTouchEvent ( org.solovyev.android.view.sidebar.MotionEvent ) ; } else { final MotionEvent org.solovyev.android.view.sidebar.MotionEvent = MotionEvent . obtain ( org.solovyev.android.view.sidebar.MotionEvent ) ; org.solovyev.android.view.sidebar.MotionEvent . setAction ( MotionEvent . ACTION_CANCEL ) ; super. dispatchTouchEvent ( org.solovyev.android.view.sidebar.MotionEvent ) ; } return true ; } else { final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; final Rect org.solovyev.android.view.sidebar.Rect = new Rect ( ) ; org.solovyev.android.view.sidebar.View . getHitRect ( org.solovyev.android.view.sidebar.Rect ) ; if ( ! org.solovyev.android.view.sidebar.Rect . contains ( ( int ) org.solovyev.android.view.sidebar.MotionEvent . getX ( ) , ( int ) org.solovyev.android.view.sidebar.MotionEvent . getY ( ) ) ) { org.solovyev.android.view.sidebar.MotionEvent . offsetLocation ( - org.solovyev.android.view.sidebar.View . getLeft ( ) , - org.solovyev.android.view.sidebar.View . getTop ( ) ) ; org.solovyev.android.view.sidebar.View . dispatchTouchEvent ( org.solovyev.android.view.sidebar.MotionEvent ) ; org.solovyev.android.view.sidebar.MotionEvent . offsetLocation ( org.solovyev.android.view.sidebar.View . getLeft ( ) , org.solovyev.android.view.sidebar.View . getTop ( ) ) ; boolean ( org.solovyev.android.view.sidebar.MotionEvent ) ; return true ; } else { boolean ( org.solovyev.android.view.sidebar.MotionEvent ) ; org.solovyev.android.view.sidebar.MotionEvent . offsetLocation ( - org.solovyev.android.view.sidebar.View . getLeft ( ) , - org.solovyev.android.view.sidebar.View . getTop ( ) ) ; org.solovyev.android.view.sidebar.View . dispatchTouchEvent ( org.solovyev.android.view.sidebar.MotionEvent ) ; return true ; } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( @ Nonnull MotionEvent org.solovyev.android.view.sidebar.MotionEvent ) { if ( ! isEnabled ( ) ) { return false ; } final float float ; switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : case right : float = org.solovyev.android.view.sidebar.MotionEvent . getX ( ) ; break; case top : case bottom : float = org.solovyev.android.view.sidebar.MotionEvent . getY ( ) ; break; default: throw new java.lang.UnsupportedOperationException ( ) ; } switch ( org.solovyev.android.view.sidebar.MotionEvent . getAction ( ) ) { case MotionEvent . ACTION_DOWN : int = ( int ) float ; return true ; case MotionEvent . ACTION_MOVE : return boolean ( float ) ; case MotionEvent . ACTION_UP : if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) { org.solovyev.android.view.sidebar.SideBarSlider . finishSlide ( ) ; } return false ; } return org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( float float ) { final float float = float - int ; final float float = int ; int = ( int ) float ; if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . boolean ( ) ) { if ( org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) { org.solovyev.android.view.sidebar.SideBarSlider . addOffsetDelta ( ( int ) float ) ; } return true ; } else { final boolean boolean ; final boolean boolean ; switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : case top : boolean = float > int && org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; boolean = float < - int && org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; break; case right : case bottom : boolean = float < - int && org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; boolean = float > int && org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; break; default: throw new java.lang.UnsupportedOperationException ( ) ; } if ( boolean || boolean ) { if ( org.solovyev.android.view.sidebar.SideBarSlider . canStartSlide ( float ) ) { void ( ) ; org.solovyev.android.view.sidebar.SideBarSlider . addOffsetDelta ( ( int ) float ) ; } } return false ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.view.sidebar.Animation ) { org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState = org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; super. startAnimation ( org.solovyev.android.view.sidebar.Animation ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent org.solovyev.android.view.sidebar.MotionEvent ) { boolean boolean = boolean ( org.solovyev.android.view.sidebar.MotionEvent ) ; invalidate ( ) ; return boolean ; }  <METHOD_END>
<METHOD_START> private void void ( ) { final View org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ( ) ; final int int ; final int int = getWidth ( ) ; final int int = getHeight ( ) ; switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : case right : int = org.solovyev.android.view.sidebar.View ( ) . getMeasuredWidth ( ) ; break; case bottom : case top : int = org.solovyev.android.view.sidebar.View ( ) . getMeasuredHeight ( ) ; break; default: throw new java.lang.UnsupportedOperationException ( STRING ) ; } org.solovyev.android.view.sidebar.SideBarSlider . init ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewLedge ( ) , int , org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState == org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ) ; if ( org.solovyev.android.view.sidebar.Bitmap == null || org.solovyev.android.view.sidebar.Bitmap . isRecycled ( ) || org.solovyev.android.view.sidebar.Bitmap . getWidth ( ) != int ) { org.solovyev.android.view.sidebar.Bitmap = Bitmap . createBitmap ( int , int , Bitmap . Config . ARGB_8888 ) ; org.solovyev.android.view.sidebar.Canvas = new Canvas ( org.solovyev.android.view.sidebar.Bitmap ) ; } org.solovyev.android.view.sidebar.View . setVisibility ( View . VISIBLE ) ; void ( ) ; org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState = org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; org.solovyev.android.view.sidebar.View ( ) . setVisibility ( View . VISIBLE ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final boolean boolean ) { requestLayout ( ) ; post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { if ( boolean ) { org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState = org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; if ( ! org.solovyev.android.view.sidebar.SideBarAttributes . isSlidingViewLedgeExists ( ) ) { org.solovyev.android.view.sidebar.View ( ) . setVisibility ( View . VISIBLE ) ; } } else { org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState = org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; if ( ! org.solovyev.android.view.sidebar.SideBarAttributes . isSlidingViewLedgeExists ( ) ) { org.solovyev.android.view.sidebar.View ( ) . setVisibility ( View . GONE ) ; } } } } ) ; if ( org.solovyev.android.view.sidebar.OnSlideListener != null ) { org.solovyev.android.view.sidebar.OnSlideListener . onSlideCompleted ( boolean ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( boolean ) { org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState = org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; if ( ! org.solovyev.android.view.sidebar.SideBarAttributes . isSlidingViewLedgeExists ( ) ) { org.solovyev.android.view.sidebar.View ( ) . setVisibility ( View . VISIBLE ) ; } } else { org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState = org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState . org.solovyev.android.view.sidebar.SideBarLayout.SlidingViewState ; if ( ! org.solovyev.android.view.sidebar.SideBarAttributes . isSlidingViewLedgeExists ( ) ) { org.solovyev.android.view.sidebar.View ( ) . setVisibility ( View . GONE ) ; } } }  <METHOD_END>
<METHOD_START> void ( boolean boolean ) { boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! boolean ( ) ; }  <METHOD_END>
<METHOD_START> public ViewState createFromParcel ( Parcel in ) { return new ViewState ( in ) ; }  <METHOD_END>
<METHOD_START> public ViewState [] newArray ( int size ) { return new ViewState [ size ] ; }  <METHOD_END>
<METHOD_START> public void ( Parcel org.solovyev.android.view.sidebar.Parcel ) { super( org.solovyev.android.view.sidebar.Parcel ); boolean = org.solovyev.android.view.sidebar.Parcel . readInt ( ) == NUMBER ; }  <METHOD_END>
<METHOD_START> public void ( Parcelable org.solovyev.android.view.sidebar.Parcelable , boolean boolean ) { super( org.solovyev.android.view.sidebar.Parcelable ); boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Parcel org.solovyev.android.view.sidebar.Parcel , int int ) { super. writeToParcel ( org.solovyev.android.view.sidebar.Parcel , int ) ; org.solovyev.android.view.sidebar.Parcel . writeInt ( this . boolean ? NUMBER : NUMBER ) ; }  <METHOD_END>
<METHOD_START> void ( @ Nonnull View org.solovyev.android.view.sidebar.View , SideBarAttributes org.solovyev.android.view.sidebar.SideBarAttributes , @ Nullable OnSlideListener org.solovyev.android.view.sidebar.OnSlideListener ) { this . org.solovyev.android.view.sidebar.View = org.solovyev.android.view.sidebar.View ; this . int = org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewLedge ( ) ; this . int = org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewLedge ( ) ; this . int = org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewLedge ( ) ; this . boolean = true ; this . org.solovyev.android.view.sidebar.SideBarAttributes = org.solovyev.android.view.sidebar.SideBarAttributes ; this . org.solovyev.android.view.sidebar.OnSlideListener = org.solovyev.android.view.sidebar.OnSlideListener ; }  <METHOD_END>
<METHOD_START> public void void ( int int , int int , boolean boolean ) { if ( boolean ) { this . int = int ; } else { this . int = int ; } this . int = int ; this . int = int ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public int int ( ) { final int int ; switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : case top : int = int ; break; case right : int = org.solovyev.android.view.sidebar.View . getMeasuredWidth ( ) - int ; break; case bottom : int = org.solovyev.android.view.sidebar.View . getMeasuredHeight ( ) - int ; break; default: throw new java.lang.UnsupportedOperationException ( ) ; } return int ; }  <METHOD_END>
<METHOD_START> public void void ( ) { int = int ; }  <METHOD_END>
<METHOD_START> public void void ( ) { int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.sidebar.Animation org.solovyev.android.view.sidebar.Animation ( ) { int = java.lang.Math . int ( int , int ) ; final Animation org.solovyev.android.view.sidebar.Animation = new org.solovyev.android.view.sidebar.SideBarSlider.SlideAnimation ( int , int ) ; org.solovyev.android.view.sidebar.Animation . setAnimationListener ( Animation.AnimationListener ) ; return org.solovyev.android.view.sidebar.Animation ; }  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.view.sidebar.Animation org.solovyev.android.view.sidebar.Animation ( ) { int = java.lang.Math . int ( int , int ) ; final Animation org.solovyev.android.view.sidebar.Animation = new org.solovyev.android.view.sidebar.SideBarSlider.SlideAnimation ( int , int ) ; org.solovyev.android.view.sidebar.Animation . setAnimationListener ( Animation.AnimationListener ) ; return org.solovyev.android.view.sidebar.Animation ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : case top : int += int ; break; case right : case bottom : int -= int ; break; } final boolean boolean = int <= int || int >= int ; int = java.lang.Math . int ( int , int ) ; int = java.lang.Math . int ( int , int ) ; if ( boolean ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { final boolean boolean ; if ( boolean ( ) ) { final int int = java.lang.Math . int ( int + NUMBER * int ) / NUMBER ; boolean = int > int ; } else { final int int = java.lang.Math . int ( NUMBER * int + int ) / NUMBER ; boolean = int > int ; } org.solovyev.android.view.sidebar.View . startAnimation ( boolean ? org.solovyev.android.view.sidebar.Animation ( ) : org.solovyev.android.view.sidebar.Animation ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + int + STRING + int + STRING + int + STRING + boolean + '}' ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( float float ) { final boolean boolean ; switch ( org.solovyev.android.view.sidebar.SideBarAttributes . getSlidingViewPosition ( ) ) { case left : case top : boolean = float < int ( ) + int ; break; case right : case bottom : boolean = float > int ( ) - int ; break; default: throw new java.lang.UnsupportedOperationException ( ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> public void ( float float , float float ) { float = float ; float = float ; setInterpolator ( new DecelerateInterpolator ( ) ) ; float float = java.lang.Math . float ( float - float ) / float ; setDuration ( ( long ) float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( float float , Transformation org.solovyev.android.view.sidebar.Transformation ) { super. applyTransformation ( float , org.solovyev.android.view.sidebar.Transformation ) ; final float float = ( float - float ) * float + float ; org.solovyev.android.view.sidebar.SideBarSlider .this . int = ( int ) float ; org.solovyev.android.view.sidebar.View . postInvalidate ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.view.sidebar.Animation ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.view.sidebar.Animation ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.view.sidebar.Animation ) { void ( ) ; org.solovyev.android.view.sidebar.OnSlideListener . onSlideCompleted ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.view.sidebar.Animation ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.view.sidebar.Animation ) {		}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Animation org.solovyev.android.view.sidebar.Animation ) { void ( ) ; org.solovyev.android.view.sidebar.OnSlideListener . onSlideCompleted ( false ) ; }  <METHOD_END>
<METHOD_START> void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.sidebar.SideBarSlidingViewPosition org.solovyev.android.view.sidebar.SideBarSlidingViewPosition ( int int ) { for ( org.solovyev.android.view.sidebar.SideBarSlidingViewPosition org.solovyev.android.view.sidebar.SideBarSlidingViewPosition : org.solovyev.android.view.sidebar.SideBarSlidingViewPosition[] ( ) ) { if ( org.solovyev.android.view.sidebar.SideBarSlidingViewPosition . int == int ) { return org.solovyev.android.view.sidebar.SideBarSlidingViewPosition ; } } throw new java.lang.IllegalArgumentException ( STRING + int + STRING ) ; }  <METHOD_END>
<METHOD_START> void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.sidebar.SideBarSlidingViewStyle org.solovyev.android.view.sidebar.SideBarSlidingViewStyle ( int int ) { for ( org.solovyev.android.view.sidebar.SideBarSlidingViewStyle org.solovyev.android.view.sidebar.SideBarSlidingViewStyle : org.solovyev.android.view.sidebar.SideBarSlidingViewStyle . org.solovyev.android.view.sidebar.SideBarSlidingViewStyle[] ( ) ) { if ( org.solovyev.android.view.sidebar.SideBarSlidingViewStyle . int == int ) { return org.solovyev.android.view.sidebar.SideBarSlidingViewStyle ; } } throw new java.lang.IllegalArgumentException ( STRING + int + STRING ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {	}  <METHOD_END>
<METHOD_START> @ Nonnull public static org.solovyev.android.view.UpdatableViewBuilder<org.solovyev.android.view.TextView> < TextView > org.solovyev.android.view.UpdatableViewBuilder<org.solovyev.android.view.TextView> ( int int , @ Nullable java.lang.String java.lang.String ) { final org.solovyev.android.view.TextViewBuilder org.solovyev.android.view.TextViewBuilder = new org.solovyev.android.view.TextViewBuilder ( ) ; org.solovyev.android.view.TextViewBuilder . int = int ; org.solovyev.android.view.TextViewBuilder . java.lang.String = java.lang.String ; return org.solovyev.android.view.TextViewBuilder ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.TextView org.solovyev.android.view.TextView ( @ Nonnull Context org.solovyev.android.view.Context ) { final TextView org.solovyev.android.view.TextView = ViewFromLayoutBuilder .< TextView > newInstance ( int ) . build ( org.solovyev.android.view.Context ) ; org.solovyev.android.view.TextView . setTag ( java.lang.String ( ) ) ; return org.solovyev.android.view.TextView ( org.solovyev.android.view.Context , org.solovyev.android.view.TextView ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private java.lang.String java.lang.String ( ) { return java.lang.String == null ? this . java.lang.Class<? extends org.solovyev.android.view.TextViewBuilder> ( ) . java.lang.String ( ) : java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.view.TextView org.solovyev.android.view.TextView ( @ Nonnull Context org.solovyev.android.view.Context , @ Nonnull View org.solovyev.android.view.View ) { if ( java.lang.String ( ) . boolean ( org.solovyev.android.view.View . getTag ( ) ) ) { return ( TextView ) org.solovyev.android.view.View ; } else { return org.solovyev.android.view.TextView ( org.solovyev.android.view.Context ) ; } }  <METHOD_END>
<METHOD_START> public void ( @ Nullable Vibrator org.solovyev.android.view.Vibrator , @ Nonnull SharedPreferences org.solovyev.android.view.SharedPreferences , float float ) { this . org.solovyev.android.view.Vibrator = org.solovyev.android.view.Vibrator ; this . float = float ; org.solovyev.android.view.SharedPreferences . registerOnSharedPreferenceChangeListener ( this ) ; void ( org.solovyev.android.view.SharedPreferences , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( long > NUMBER && org.solovyev.android.view.Vibrator != null ) { org.solovyev.android.view.Vibrator . vibrate ( long ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SharedPreferences org.solovyev.android.view.SharedPreferences , @ Nullable java.lang.String java.lang.String ) { if ( org.solovyev.android.view.VibratorContainer.Preferences . org.solovyev.android.view.Preference<java.lang.Boolean> . getPreference ( org.solovyev.android.view.SharedPreferences ) ) { this . long = long ( org.solovyev.android.view.VibratorContainer.Preferences . org.solovyev.android.view.Preference<java.lang.Long> . getPreference ( org.solovyev.android.view.SharedPreferences ) ) ; } else { this . long = NUMBER ; } }  <METHOD_END>
<METHOD_START> private long long ( long long ) { return ( long ) ( long * float ) ; }  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Float java.lang.Float ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Integer java.lang.Integer ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Integer java.lang.Integer ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.Integer java.lang.Integer ( )  <METHOD_END>
<METHOD_START> private void ( int int , int int , boolean boolean ) { this . int = int ; this . int = int ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < V extends org.solovyev.android.view.View > org.solovyev.android.view.ViewFromLayoutBuilder<V> < V > org.solovyev.android.view.ViewFromLayoutBuilder<V> ( int int , int int ) { return new org.solovyev.android.view.ViewFromLayoutBuilder<V> < V > ( int , int , false ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull public static < V extends org.solovyev.android.view.View > org.solovyev.android.view.ViewFromLayoutBuilder<V> < V > org.solovyev.android.view.ViewFromLayoutBuilder<V> ( int int ) { return new org.solovyev.android.view.ViewFromLayoutBuilder<V> < V > ( int , NUMBER , true ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable LayoutInflater org.solovyev.android.view.LayoutInflater ) { this . org.solovyev.android.view.LayoutInflater = org.solovyev.android.view.LayoutInflater ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public V V ( @ Nonnull Context org.solovyev.android.view.Context ) { LayoutInflater org.solovyev.android.view.LayoutInflater = org.solovyev.android.view.LayoutInflater ; if ( org.solovyev.android.view.LayoutInflater == null ) { org.solovyev.android.view.LayoutInflater = ( LayoutInflater ) org.solovyev.android.view.Context . getSystemService ( Context . LAYOUT_INFLATER_SERVICE ) ; } if ( boolean ) { return ( V ) org.solovyev.android.view.LayoutInflater . inflate ( int , null ) ; } else { final ViewGroup org.solovyev.android.view.ViewGroup = ( ViewGroup ) org.solovyev.android.view.LayoutInflater . inflate ( int , null ) ; return ( V ) org.solovyev.android.view.ViewGroup . findViewById ( int ) ; } }  <METHOD_END>
<METHOD_START> void void ( @ Nonnull View org.solovyev.android.view.View , @ Nonnull Canvas org.solovyev.android.view.Canvas );  <METHOD_END>
<METHOD_START> protected void ( int int ) { org.solovyev.android.wizard.WizardUi = new WizardUi < org.solovyev.android.wizard.BaseWizardActivity > ( this , this , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.wizard.Bundle ) { super. onCreate ( org.solovyev.android.wizard.Bundle ) ; org.solovyev.android.wizard.WizardUi . onCreate ( org.solovyev.android.wizard.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.solovyev.android.wizard.Bundle ) { super. onSaveInstanceState ( org.solovyev.android.wizard.Bundle ) ; org.solovyev.android.wizard.WizardUi . onSaveInstanceState ( org.solovyev.android.wizard.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; org.solovyev.android.wizard.WizardUi . onPause ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.wizard.WizardUi . onBackPressed ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { org.solovyev.android.wizard.WizardUi . finishWizardAbruptly ( ) ; }  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.lang.String java.lang.String , @ Nonnull Context org.solovyev.android.wizard.Context , @ Nonnull WizardFlow org.solovyev.android.wizard.WizardFlow ) { this . java.lang.String = java.lang.String ; this . org.solovyev.android.wizard.Context = org.solovyev.android.wizard.Context ; this . org.solovyev.android.wizard.WizardFlow = org.solovyev.android.wizard.WizardFlow ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep ) { final SharedPreferences org.solovyev.android.wizard.SharedPreferences = org.solovyev.android.wizard.SharedPreferences ( ) ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = org.solovyev.android.wizard.SharedPreferences . edit ( ) ; SharedPreferences.Editor . putString ( java.lang.String ( java.lang.String ) , org.solovyev.android.wizard.WizardStep . getName ( ) ) ; SharedPreferences.Editor . commit ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep , boolean boolean ) { final SharedPreferences org.solovyev.android.wizard.SharedPreferences = org.solovyev.android.wizard.SharedPreferences ( ) ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = org.solovyev.android.wizard.SharedPreferences . edit ( ) ; SharedPreferences.Editor . putBoolean ( java.lang.String ( java.lang.String ) , boolean || org.solovyev.android.wizard.WizardFlow . getNextStep ( org.solovyev.android.wizard.WizardStep ) == null ) ; SharedPreferences.Editor . commit ( ) ; }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.wizard.SharedPreferences org.solovyev.android.wizard.SharedPreferences ( ) { return getDefaultSharedPreferences ( org.solovyev.android.wizard.Context ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nullable public java.lang.String java.lang.String ( ) { return org.solovyev.android.wizard.SharedPreferences ( ) . getString ( java.lang.String ( java.lang.String ) , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return org.solovyev.android.wizard.SharedPreferences ( ) . getBoolean ( java.lang.String ( java.lang.String ) , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return java.lang.String ( ) != null ; }  <METHOD_END>
<METHOD_START> @ Nonnull static java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String ) { return java.lang.String + STRING + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Nonnull static java.lang.String java.lang.String ( @ Nonnull java.lang.String java.lang.String ) { return java.lang.String + STRING + java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ Nonnull public org.solovyev.android.wizard.WizardFlow org.solovyev.android.wizard.WizardFlow ( ) { return org.solovyev.android.wizard.WizardFlow ; }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.solovyev.android.wizard.Dialog org.solovyev.android.wizard.Dialog ( Bundle org.solovyev.android.wizard.Bundle ) { final AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) ; AlertDialog.Builder . setMessage ( R . string . acl_wizard_finish_confirmation ) ; AlertDialog.Builder . setPositiveButton ( R . string . acl_yes , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.solovyev.android.wizard.DialogInterface , int int ) { ( ( org.solovyev.android.wizard.FinishWizardConfirmationDialog.Listener ) getActivity ( ) ) . void ( ) ; } } ) ; AlertDialog.Builder . setNegativeButton ( R . string . acl_no , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.solovyev.android.wizard.DialogInterface , int int ) { dismiss ( ) ; } } ) ; return AlertDialog.Builder . create ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.solovyev.android.wizard.DialogInterface , int int ) { ( ( org.solovyev.android.wizard.FinishWizardConfirmationDialog.Listener ) getActivity ( ) ) . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.solovyev.android.wizard.DialogInterface , int int ) { dismiss ( ) ; }  <METHOD_END>
<METHOD_START> public static < A extends org.solovyev.android.wizard.FragmentActivity & org.solovyev.android.wizard.FinishWizardConfirmationDialog.Listener > void void ( @ Nonnull A A ) { if ( ! ( A instanceof org.solovyev.android.wizard.FinishWizardConfirmationDialog.Listener ) ) { throw new java.lang.IllegalArgumentException ( STRING + org.solovyev.android.wizard.FinishWizardConfirmationDialog.Listener .class ) ; } AndroidSherlockUtils . showDialog ( new org.solovyev.android.wizard.FinishWizardConfirmationDialog ( ) , org.solovyev.android.wizard.FinishWizardConfirmationDialog .class . java.lang.String ( ) , A . getSupportFragmentManager ( ) ) ; }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( @ Nonnull java.util.List<org.solovyev.android.wizard.WizardStep> < WizardStep > java.util.List<org.solovyev.android.wizard.WizardStep> ) { this . java.util.List<org.solovyev.android.wizard.WizardStep> = java.util.List<org.solovyev.android.wizard.WizardStep> ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( @ Nonnull final java.lang.String java.lang.String ) { return find ( java.util.List<org.solovyev.android.wizard.WizardStep> , new JPredicate < WizardStep > ( ) { @ java.lang.Override public boolean boolean ( @ Nullable WizardStep org.solovyev.android.wizard.WizardStep ) { assert org.solovyev.android.wizard.WizardStep != null ; return org.solovyev.android.wizard.WizardStep . getName ( ) . equals ( java.lang.String ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( @ Nullable WizardStep org.solovyev.android.wizard.WizardStep ) { assert org.solovyev.android.wizard.WizardStep != null ; return org.solovyev.android.wizard.WizardStep . getName ( ) . equals ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep ) { final int int = java.util.List<org.solovyev.android.wizard.WizardStep> . indexOf ( org.solovyev.android.wizard.WizardStep ) ; if ( int >= NUMBER && int + NUMBER < java.util.List<org.solovyev.android.wizard.WizardStep> . size ( ) ) { return java.util.List<org.solovyev.android.wizard.WizardStep> . get ( int + NUMBER ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep ) { final int int = java.util.List<org.solovyev.android.wizard.WizardStep> . indexOf ( org.solovyev.android.wizard.WizardStep ) ; if ( int >= NUMBER ) { return java.util.List<org.solovyev.android.wizard.WizardStep> . get ( int - NUMBER ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> @ Nonnull @ java.lang.Override public org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( ) { return java.util.List<org.solovyev.android.wizard.WizardStep> . get ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( @ Nonnull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep );  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( )  <METHOD_END>
<METHOD_START> @ Nullable java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> void void ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep );  <METHOD_END>
<METHOD_START> void void ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep , boolean boolean );  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.wizard.WizardFlow org.solovyev.android.wizard.WizardFlow ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nonnull org.solovyev.android.wizard.Wizards org.solovyev.android.wizard.Wizards ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.Class<? extends org.solovyev.android.wizard.Activity> < ? extends Activity > java.lang.Class<? extends org.solovyev.android.wizard.Activity> ( )  <METHOD_END>
<METHOD_START> @ Nonnull public org.solovyev.android.wizard.Wizard org.solovyev.android.wizard.Wizard ( @ Nullable java.lang.String java.lang.String ) throws java.lang.IllegalArgumentException ;  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.Class<? extends org.solovyev.android.wizard.Fragment> < ? extends Fragment > java.lang.Class<? extends org.solovyev.android.wizard.Fragment> ( )  <METHOD_END>
<METHOD_START> @ Nullable org.solovyev.android.wizard.Bundle org.solovyev.android.wizard.Bundle ( )  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull Fragment org.solovyev.android.wizard.Fragment );  <METHOD_END>
<METHOD_START> boolean boolean ( @ Nonnull Fragment org.solovyev.android.wizard.Fragment );  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> @ Nonnull java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public void ( @ Nonnull A A , @ Nonnull WizardsAware org.solovyev.android.wizard.WizardsAware , int int ) { this . A = A ; this . org.solovyev.android.wizard.WizardsAware = org.solovyev.android.wizard.WizardsAware ; this . int = int ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable Bundle org.solovyev.android.wizard.Bundle ) { A . setContentView ( int ) ; org.solovyev.android.wizard.View = A . findViewById ( R . id . acl_wizard_prev_button ) ; org.solovyev.android.wizard.Button = ( Button ) A . findViewById ( R . id . acl_wizard_next_button ) ; java.lang.String java.lang.String = A . getIntent ( ) . getStringExtra ( java.lang.String ) ; java.lang.String java.lang.String = A . getIntent ( ) . getStringExtra ( java.lang.String ) ; if ( org.solovyev.android.wizard.Bundle != null ) { java.lang.String = org.solovyev.android.wizard.Bundle . getString ( java.lang.String ) ; java.lang.String = org.solovyev.android.wizard.Bundle . getString ( java.lang.String ) ; } org.solovyev.android.wizard.Wizard = org.solovyev.android.wizard.WizardsAware . getWizards ( ) . getWizard ( java.lang.String ) ; WizardStep org.solovyev.android.wizard.WizardStep = null ; if ( java.lang.String != null ) { org.solovyev.android.wizard.WizardStep = org.solovyev.android.wizard.Wizard . getFlow ( ) . getStepByName ( java.lang.String ) ; } if ( org.solovyev.android.wizard.WizardStep == null ) { org.solovyev.android.wizard.WizardStep = org.solovyev.android.wizard.Wizard . getFlow ( ) . getFirstStep ( ) ; } void ( org.solovyev.android.wizard.WizardStep ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull WizardStep org.solovyev.android.wizard.WizardStep ) { if ( this . org.solovyev.android.wizard.WizardStep == null || ! this . org.solovyev.android.wizard.WizardStep . equals ( org.solovyev.android.wizard.WizardStep ) ) { void ( ) ; this . org.solovyev.android.wizard.WizardStep = org.solovyev.android.wizard.WizardStep ; org.solovyev.android.wizard.Fragment ( ) ; void ( ) ; void ( ) ; void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { A . setTitle ( org.solovyev.android.wizard.WizardStep . getTitleResId ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( org.solovyev.android.wizard.View != null ) { final WizardStep org.solovyev.android.wizard.WizardStep = org.solovyev.android.wizard.Wizard . getFlow ( ) . getPrevStep ( org.solovyev.android.wizard.WizardStep ) ; if ( org.solovyev.android.wizard.WizardStep == null ) { org.solovyev.android.wizard.View . setVisibility ( GONE ) ; org.solovyev.android.wizard.View . setOnClickListener ( null ) ; } else { org.solovyev.android.wizard.View . setVisibility ( VISIBLE ) ; org.solovyev.android.wizard.View . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.wizard.View ) { if ( boolean ( ) ) { void ( org.solovyev.android.wizard.WizardStep ) ; } } } ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.wizard.View ) { if ( boolean ( ) ) { void ( org.solovyev.android.wizard.WizardStep ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { final WizardStep org.solovyev.android.wizard.WizardStep = org.solovyev.android.wizard.Wizard . getFlow ( ) . getNextStep ( org.solovyev.android.wizard.WizardStep ) ; if ( org.solovyev.android.wizard.WizardStep == null ) { org.solovyev.android.wizard.Button . setText ( R . string . acl_wizard_finish ) ; org.solovyev.android.wizard.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.wizard.View ) { if ( boolean ( ) ) { void ( ) ; } } } ) ; } else { org.solovyev.android.wizard.Button . setText ( org.solovyev.android.wizard.WizardStep . getNextButtonTitleResId ( ) ) ; org.solovyev.android.wizard.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View org.solovyev.android.wizard.View ) { if ( boolean ( ) ) { void ( org.solovyev.android.wizard.WizardStep ) ; } } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.wizard.View ) { if ( boolean ( ) ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View org.solovyev.android.wizard.View ) { if ( boolean ( ) ) { void ( org.solovyev.android.wizard.WizardStep ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( true ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( false ) ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean ) { if ( org.solovyev.android.wizard.Wizard != null && org.solovyev.android.wizard.WizardStep != null ) { org.solovyev.android.wizard.Wizard . saveFinished ( org.solovyev.android.wizard.WizardStep , boolean ) ; } A . finish ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { if ( org.solovyev.android.wizard.WizardStep == null ) { return true ; } else { final Fragment org.solovyev.android.wizard.Fragment = org.solovyev.android.wizard.FragmentManager ( ) . findFragmentByTag ( org.solovyev.android.wizard.WizardStep . getFragmentTag ( ) ) ; return org.solovyev.android.wizard.Fragment == null || org.solovyev.android.wizard.WizardStep . onPrev ( org.solovyev.android.wizard.Fragment ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.wizard.FragmentManager org.solovyev.android.wizard.FragmentManager ( ) { return A . getSupportFragmentManager ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { if ( org.solovyev.android.wizard.WizardStep == null ) { return true ; } else { final Fragment org.solovyev.android.wizard.Fragment = org.solovyev.android.wizard.FragmentManager ( ) . findFragmentByTag ( org.solovyev.android.wizard.WizardStep . getFragmentTag ( ) ) ; return org.solovyev.android.wizard.Fragment == null || org.solovyev.android.wizard.WizardStep . onNext ( org.solovyev.android.wizard.Fragment ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private org.solovyev.android.wizard.Fragment org.solovyev.android.wizard.Fragment ( ) { final FragmentManager org.solovyev.android.wizard.FragmentManager = org.solovyev.android.wizard.FragmentManager ( ) ; final FragmentTransaction org.solovyev.android.wizard.FragmentTransaction = org.solovyev.android.wizard.FragmentManager . beginTransaction ( ) ; Fragment org.solovyev.android.wizard.Fragment = org.solovyev.android.wizard.FragmentManager . findFragmentByTag ( org.solovyev.android.wizard.WizardStep . getFragmentTag ( ) ) ; if ( org.solovyev.android.wizard.Fragment == null ) { org.solovyev.android.wizard.Fragment = Fragment . instantiate ( A , org.solovyev.android.wizard.WizardStep . getFragmentClass ( ) . getName ( ) , org.solovyev.android.wizard.WizardStep . getFragmentArgs ( ) ) ; org.solovyev.android.wizard.FragmentTransaction . add ( R . id . acl_wizard_content , org.solovyev.android.wizard.Fragment , org.solovyev.android.wizard.WizardStep . getFragmentTag ( ) ) ; } org.solovyev.android.wizard.FragmentTransaction . commit ( ) ; org.solovyev.android.wizard.FragmentManager . executePendingTransactions ( ) ; return org.solovyev.android.wizard.Fragment ; }  <METHOD_END>
<METHOD_START> private void void ( ) { final FragmentManager org.solovyev.android.wizard.FragmentManager = org.solovyev.android.wizard.FragmentManager ( ) ; final FragmentTransaction org.solovyev.android.wizard.FragmentTransaction = org.solovyev.android.wizard.FragmentManager . beginTransaction ( ) ; if ( org.solovyev.android.wizard.WizardStep != null ) { void ( org.solovyev.android.wizard.FragmentManager , org.solovyev.android.wizard.FragmentTransaction , org.solovyev.android.wizard.WizardStep . getFragmentTag ( ) ) ; } org.solovyev.android.wizard.FragmentTransaction . commit ( ) ; org.solovyev.android.wizard.FragmentManager . executePendingTransactions ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nonnull FragmentManager org.solovyev.android.wizard.FragmentManager , @ Nonnull FragmentTransaction org.solovyev.android.wizard.FragmentTransaction , @ Nonnull java.lang.String java.lang.String ) { final Fragment org.solovyev.android.wizard.Fragment = org.solovyev.android.wizard.FragmentManager . findFragmentByTag ( java.lang.String ) ; if ( org.solovyev.android.wizard.Fragment != null ) { org.solovyev.android.wizard.FragmentTransaction . remove ( org.solovyev.android.wizard.Fragment ) ; } }  <METHOD_END>
<METHOD_START> public void void ( @ Nonnull Bundle org.solovyev.android.wizard.Bundle ) { org.solovyev.android.wizard.Bundle . putString ( java.lang.String , org.solovyev.android.wizard.Wizard . getName ( ) ) ; org.solovyev.android.wizard.Bundle . putString ( java.lang.String , org.solovyev.android.wizard.WizardStep . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( org.solovyev.android.wizard.Wizard != null && org.solovyev.android.wizard.WizardStep != null ) { org.solovyev.android.wizard.Wizard . saveLastStep ( org.solovyev.android.wizard.WizardStep ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { FinishWizardConfirmationDialog . show ( A ) ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.wizard.WizardStep org.solovyev.android.wizard.WizardStep ( ) { return org.solovyev.android.wizard.WizardStep ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.wizard.WizardFlow org.solovyev.android.wizard.WizardFlow ( ) { return org.solovyev.android.wizard.Wizard . getFlow ( ) ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.wizard.Wizard org.solovyev.android.wizard.Wizard ( ) { return org.solovyev.android.wizard.Wizard ; }  <METHOD_END>
<METHOD_START> @ Nullable public org.solovyev.android.wizard.View org.solovyev.android.wizard.View ( ) { return org.solovyev.android.wizard.View ; }  <METHOD_END>
<METHOD_START> public org.solovyev.android.wizard.View org.solovyev.android.wizard.View ( ) { return org.solovyev.android.wizard.Button ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Wizards org.solovyev.android.wizard.Wizards , @ Nonnull Context org.solovyev.android.wizard.Context ) { org.solovyev.android.wizard.Context . startActivity ( org.solovyev.android.wizard.Intent ( org.solovyev.android.wizard.Wizards , null , org.solovyev.android.wizard.Context ) ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Wizards org.solovyev.android.wizard.Wizards , @ Nullable java.lang.String java.lang.String , @ Nonnull Context org.solovyev.android.wizard.Context ) { org.solovyev.android.wizard.Context . startActivity ( org.solovyev.android.wizard.Intent ( org.solovyev.android.wizard.Wizards , java.lang.String , org.solovyev.android.wizard.Context ) ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Wizards org.solovyev.android.wizard.Wizards , @ Nonnull java.lang.String java.lang.String , @ Nonnull Context org.solovyev.android.wizard.Context ) { final Intent org.solovyev.android.wizard.Intent = org.solovyev.android.wizard.Intent ( org.solovyev.android.wizard.Wizards , java.lang.String , org.solovyev.android.wizard.Context ) ; final Wizard org.solovyev.android.wizard.Wizard = org.solovyev.android.wizard.Wizards . getWizard ( java.lang.String ) ; final java.lang.String java.lang.String = org.solovyev.android.wizard.Wizard . getLastSavedStepName ( ) ; void ( org.solovyev.android.wizard.Intent , java.lang.String ) ; org.solovyev.android.wizard.Context . startActivity ( org.solovyev.android.wizard.Intent ) ; }  <METHOD_END>
<METHOD_START> public static void void ( @ Nonnull Intent org.solovyev.android.wizard.Intent , @ Nullable WizardStep org.solovyev.android.wizard.WizardStep ) { void ( org.solovyev.android.wizard.Intent , org.solovyev.android.wizard.WizardStep != null ? org.solovyev.android.wizard.WizardStep . getName ( ) : null ) ; }  <METHOD_END>
<METHOD_START> private static void void ( @ Nonnull Intent org.solovyev.android.wizard.Intent , @ Nullable java.lang.String java.lang.String ) { if ( java.lang.String != null ) { org.solovyev.android.wizard.Intent . putExtra ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ Nonnull private static org.solovyev.android.wizard.Intent org.solovyev.android.wizard.Intent ( @ Nonnull Wizards org.solovyev.android.wizard.Wizards , @ Nullable java.lang.String java.lang.String , @ Nonnull Context org.solovyev.android.wizard.Context ) { final Intent org.solovyev.android.wizard.Intent = new Intent ( org.solovyev.android.wizard.Context , org.solovyev.android.wizard.Wizards . getActivityClassName ( ) ) ; org.solovyev.android.wizard.Intent . putExtra ( java.lang.String , java.lang.String ) ; org.solovyev.android.wizard.Intent . setFlags ( Intent . FLAG_ACTIVITY_SINGLE_TOP ) ; return org.solovyev.android.wizard.Intent ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.example.content.Uri com.getbase.android.db.example.content.Uri ( long long ) { return ContentUris . withAppendedId ( com.getbase.android.db.example.content.Uri , long ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.getbase.android.db.example.content.Context ) { super( com.getbase.android.db.example.content.Context , java.lang.String , null , int ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.getbase.android.db.example.content.SQLiteDatabase ) { com.getbase.android.db.example.content.SQLiteDatabase . execSQL ( STRING + com.getbase.android.db.example.content.Database.Tables . java.lang.String + STRING + Contract . PeopleColumns . _ID + STRING + Contract . PeopleColumns . FIRST_NAME + STRING + Contract . PeopleColumns . SECOND_NAME + STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.getbase.android.db.example.content.SQLiteDatabase , int int , int int ) {  }  <METHOD_END>
<METHOD_START> public static void void ( Context com.getbase.android.db.example.content.Context ) { com.getbase.android.db.example.content.Context . startService ( new Intent ( com.getbase.android.db.example.content.Context , com.getbase.android.db.example.content.PeopleInsertingService .class ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Intent com.getbase.android.db.example.content.Intent ) { final SharedPreferences com.getbase.android.db.example.content.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( this ) ; if ( ! com.getbase.android.db.example.content.SharedPreferences . getBoolean ( java.lang.String , false ) ) { void ( ) ; com.getbase.android.db.example.content.SharedPreferences . edit ( ) . putBoolean ( java.lang.String , true ) . commit ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { java.util.ArrayList<com.getbase.android.db.example.content.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.example.content.ContentProviderOperation> = Lists . newArrayList ( ) ; for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; final ContentValues com.getbase.android.db.example.content.ContentValues = new ContentValues ( ) ; com.getbase.android.db.example.content.ContentValues . put ( Contract . People . FIRST_NAME , java.lang.String[] [ NUMBER ] ) ; com.getbase.android.db.example.content.ContentValues . put ( Contract . People . SECOND_NAME , java.lang.String[] [ NUMBER ] ) ; final ContentProviderOperation com.getbase.android.db.example.content.ContentProviderOperation = ContentProviderOperation . newInsert ( Contract . People . CONTENT_URI ) . withValues ( com.getbase.android.db.example.content.ContentValues ) . build ( ) ; java.util.ArrayList<com.getbase.android.db.example.content.ContentProviderOperation> . add ( com.getbase.android.db.example.content.ContentProviderOperation ) ; } try { getContentResolver ( ) . applyBatch ( Contract . AUTHORITY , java.util.ArrayList<com.getbase.android.db.example.content.ContentProviderOperation> ) ; } catch ( RemoteException com.getbase.android.db.example.content.RemoteException ) { Log . e ( java.lang.String , STRING , com.getbase.android.db.example.content.RemoteException ) ; } catch ( OperationApplicationException com.getbase.android.db.example.content.OperationApplicationException ) { Log . e ( java.lang.String , STRING , com.getbase.android.db.example.content.OperationApplicationException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { com.getbase.android.db.example.content.Database = new Database ( getContext ( ) ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.example.content.Cursor com.getbase.android.db.example.content.Cursor ( Uri com.getbase.android.db.example.content.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) { switch ( com.getbase.android.db.example.content.UriMatcher . match ( com.getbase.android.db.example.content.Uri ) ) { case int : final Cursor com.getbase.android.db.example.content.Cursor = Query . select ( ) . columns ( java.lang.String[] ) . from ( Database . Tables . PEOPLE ) . where ( java.lang.String , ( java.lang.Object [] ) java.lang.String[] ) . orderBy ( java.lang.String ) . build ( ) . perform ( com.getbase.android.db.example.content.Database . getReadableDatabase ( ) ) ; com.getbase.android.db.example.content.Cursor . setNotificationUri ( com.getbase.android.db.example.content.ContentResolver ( ) , Contract . People . CONTENT_URI ) ; return com.getbase.android.db.example.content.Cursor ; default: throw new java.lang.IllegalArgumentException ( STRING + com.getbase.android.db.example.content.Uri ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Uri com.getbase.android.db.example.content.Uri ) { switch ( com.getbase.android.db.example.content.UriMatcher . match ( com.getbase.android.db.example.content.Uri ) ) { case int : return STRING ; } throw new java.lang.IllegalArgumentException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.example.content.Uri com.getbase.android.db.example.content.Uri ( Uri com.getbase.android.db.example.content.Uri , ContentValues com.getbase.android.db.example.content.ContentValues ) { switch ( com.getbase.android.db.example.content.UriMatcher . match ( com.getbase.android.db.example.content.Uri ) ) { case int : final long long = Insert . insert ( ) . into ( Database . Tables . PEOPLE ) . values ( com.getbase.android.db.example.content.ContentValues ) . perform ( com.getbase.android.db.example.content.Database . getWritableDatabase ( ) ) ; com.getbase.android.db.example.content.ContentResolver ( ) . notifyChange ( Contract . People . CONTENT_URI , null ) ; return Contract . People . buildUriForItem ( long ) ; } throw new java.lang.IllegalArgumentException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.getbase.android.db.example.content.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.getbase.android.db.example.content.Uri , ContentValues com.getbase.android.db.example.content.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.example.content.ContentResolver com.getbase.android.db.example.content.ContentResolver ( ) { return getContext ( ) . getContentResolver ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Character java.lang.Character ( ) { return java.lang.String . char ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String . java.lang.String ( STRING , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> T T ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.getbase.android.db.example.ui.Bundle ) { super. onCreate ( com.getbase.android.db.example.ui.Bundle ) ; PeopleInsertingService . schedule ( this ) ; setContentView ( R . layout . activity_main ) ; Button com.getbase.android.db.example.ui.Button = ( Button ) findViewById ( R . id . toggle ) ; com.getbase.android.db.example.ui.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.getbase.android.db.example.ui.View ) { void ( ) ; } } ) ; if ( com.getbase.android.db.example.ui.Bundle == null ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.getbase.android.db.example.ui.View ) { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { final Fragment com.getbase.android.db.example.ui.Fragment = java.util.Queue<com.getbase.android.db.example.ui.Fragment> . poll ( ) ; java.util.Queue<com.getbase.android.db.example.ui.Fragment> . add ( com.getbase.android.db.example.ui.Fragment ) ; getSupportFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . content , com.getbase.android.db.example.ui.Fragment ) . commit ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.getbase.android.db.example.ui.Context ) { this . com.getbase.android.db.example.ui.Context = com.getbase.android.db.example.ui.Context ; com.getbase.android.db.example.ui.LayoutInflater = LayoutInflater . from ( com.getbase.android.db.example.ui.Context ) ; }  <METHOD_END>
<METHOD_START> public void void ( SectionedPeopleList com.getbase.android.db.example.ui.SectionedPeopleList ) { this . com.getbase.android.db.example.ui.SectionedPeopleList = com.getbase.android.db.example.ui.SectionedPeopleList ; notifyDataSetChanged ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { if ( com.getbase.android.db.example.ui.SectionedPeopleList == null ) { return NUMBER ; } return com.getbase.android.db.example.ui.SectionedPeopleList . getCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( int int ) { if ( com.getbase.android.db.example.ui.SectionedPeopleList . isSection ( int ) ) { return com.getbase.android.db.example.ui.SectionedPeopleList . getSection ( int ) ; } return com.getbase.android.db.example.ui.SectionedPeopleList . getItem ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( int int ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.example.ui.View com.getbase.android.db.example.ui.View ( int int , View com.getbase.android.db.example.ui.View , ViewGroup com.getbase.android.db.example.ui.ViewGroup ) { if ( com.getbase.android.db.example.ui.View == null ) { com.getbase.android.db.example.ui.View = com.getbase.android.db.example.ui.LayoutInflater . inflate ( android . R . layout . simple_list_item_1 , com.getbase.android.db.example.ui.ViewGroup , false ) ; com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder = new com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder ( ) ; com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder . com.getbase.android.db.example.ui.TextView = ( TextView ) com.getbase.android.db.example.ui.View . findViewById ( android . R . id . text1 ) ; com.getbase.android.db.example.ui.View . setTag ( com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder ) ; } com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder = ( com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder ) com.getbase.android.db.example.ui.View . getTag ( ) ; com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder . com.getbase.android.db.example.ui.TextView . setTextColor ( int ( int ) ) ; com.getbase.android.db.example.ui.SectionedPeopleAdapter.ViewHolder . com.getbase.android.db.example.ui.TextView . setText ( java.lang.CharSequence ( int ) ) ; return com.getbase.android.db.example.ui.View ; }  <METHOD_END>
<METHOD_START> private int int ( int int ) { if ( com.getbase.android.db.example.ui.SectionedPeopleList . isSection ( int ) ) { return com.getbase.android.db.example.ui.Context . getResources ( ) . getColor ( R . color . section_header ) ; } return com.getbase.android.db.example.ui.Context . getResources ( ) . getColor ( android . R . color . white ) ; }  <METHOD_END>
<METHOD_START> private java.lang.CharSequence java.lang.CharSequence ( int int ) { if ( com.getbase.android.db.example.ui.SectionedPeopleList . isSection ( int ) ) { return java.lang.String . java.lang.String ( com.getbase.android.db.example.ui.SectionedPeopleList . getSection ( int ) ) ; } final Person com.getbase.android.db.example.ui.Person = com.getbase.android.db.example.ui.SectionedPeopleList . getItem ( int ) ; return com.getbase.android.db.example.ui.Person . getFullname ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.List<com.getbase.android.db.example.ui.Person> < Person > java.util.List<com.getbase.android.db.example.ui.Person> ) { this . java.util.List<com.getbase.android.db.example.ui.Person> = ImmutableList . copyOf ( java.util.List<com.getbase.android.db.example.ui.Person> ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.Character java.lang.Character = null ; java.util.SortedMap<java.lang.Integer,java.lang.Character> = Maps . newTreeMap ( ) ; int int = NUMBER ; for ( Person com.getbase.android.db.example.ui.Person : java.util.List<com.getbase.android.db.example.ui.Person> ) { final java.lang.Character java.lang.Character = com.getbase.android.db.example.ui.Person . getSection ( ) ; if ( ! java.lang.Character . boolean ( java.lang.Character ) ) { java.util.SortedMap<java.lang.Integer,java.lang.Character> . java.lang.Character ( java.util.SortedMap<java.lang.Integer,java.lang.Character> . int ( ) + int , java.lang.Character ) ; java.lang.Character = java.lang.Character ; } int ++ ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( int int ) { return java.util.SortedMap<java.lang.Integer,java.lang.Character> . java.lang.Character ( int ) != null ; }  <METHOD_END>
<METHOD_START> public char char ( int int ) { return java.util.SortedMap<java.lang.Integer,java.lang.Character> . java.lang.Character ( int ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.example.ui.Person com.getbase.android.db.example.ui.Person ( int int ) { int int = int - java.util.SortedMap<java.lang.Integer,java.lang.Character> . java.util.SortedMap<java.lang.Integer,java.lang.Character> ( int ) . int ( ) ; return java.util.List<com.getbase.android.db.example.ui.Person> . get ( int ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return java.util.List<com.getbase.android.db.example.ui.Person> . size ( ) + java.util.SortedMap<java.lang.Integer,java.lang.Character> . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.getbase.android.db.example.ui.View , Bundle com.getbase.android.db.example.ui.Bundle ) { super. onViewCreated ( com.getbase.android.db.example.ui.View , com.getbase.android.db.example.ui.Bundle ) ; com.getbase.android.db.example.ui.ArrayAdapter<java.lang.String> = new ArrayAdapter <> ( getActivity ( ) , android . R . layout . simple_list_item_1 , android . R . id . text1 ) ; setListAdapter ( com.getbase.android.db.example.ui.ArrayAdapter<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.getbase.android.db.example.ui.Bundle ) { super. onActivityCreated ( com.getbase.android.db.example.ui.Bundle ) ; com.getbase.android.db.example.ui.LoaderHelper<java.util.List<java.lang.String>> . initLoader ( this , null , this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.getbase.android.db.example.ui.Loader<java.util.List<java.lang.String>> < java.util.List<java.lang.String> < java.lang.String > > com.getbase.android.db.example.ui.Loader<java.util.List<java.lang.String>> ( Context com.getbase.android.db.example.ui.Context , Bundle com.getbase.android.db.example.ui.Bundle ) { return CursorLoaderBuilder . forUri ( Contract . People . CONTENT_URI ) . projection ( Contract . People . FIRST_NAME , Contract . People . SECOND_NAME ) . transformRow ( new Function < Cursor , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.example.ui.Cursor ) { return java.lang.String . java.lang.String ( STRING , com.getbase.android.db.example.ui.Cursor . getString ( NUMBER ) , com.getbase.android.db.example.ui.Cursor . getString ( NUMBER ) ) ; } } ) . lazy ( ) . build ( com.getbase.android.db.example.ui.Context ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.example.ui.Cursor ) { return java.lang.String . java.lang.String ( STRING , com.getbase.android.db.example.ui.Cursor . getString ( NUMBER ) , com.getbase.android.db.example.ui.Cursor . getString ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Loader < java.util.List<java.lang.String> < java.lang.String > > com.getbase.android.db.example.ui.Loader<java.util.List<java.lang.String>> , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { com.getbase.android.db.example.ui.ArrayAdapter<java.lang.String> . add ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Loader < java.util.List<java.lang.String> < java.lang.String > > com.getbase.android.db.example.ui.Loader<java.util.List<java.lang.String>> ) { com.getbase.android.db.example.ui.ArrayAdapter<java.lang.String> . clear ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.getbase.android.db.example.ui.View , Bundle com.getbase.android.db.example.ui.Bundle ) { super. onViewCreated ( com.getbase.android.db.example.ui.View , com.getbase.android.db.example.ui.Bundle ) ; com.getbase.android.db.example.ui.SectionedPeopleAdapter = new SectionedPeopleAdapter ( getActivity ( ) ) ; setListAdapter ( com.getbase.android.db.example.ui.SectionedPeopleAdapter ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.getbase.android.db.example.ui.Bundle ) { super. onActivityCreated ( com.getbase.android.db.example.ui.Bundle ) ; com.getbase.android.db.example.ui.LoaderHelper<com.getbase.android.db.example.ui.SectionedPeopleList> . initLoader ( this , null , this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.getbase.android.db.example.ui.Loader<com.getbase.android.db.example.ui.SectionedPeopleList> < SectionedPeopleList > com.getbase.android.db.example.ui.Loader<com.getbase.android.db.example.ui.SectionedPeopleList> ( Context com.getbase.android.db.example.ui.Context , Bundle com.getbase.android.db.example.ui.Bundle ) { return CursorLoaderBuilder . forUri ( Contract . People . CONTENT_URI ) . projection ( Contract . People . FIRST_NAME , Contract . People . SECOND_NAME ) . orderBy ( Contract . People . FIRST_NAME ) . transformRow ( new Function < Cursor , Person > ( ) { @ java.lang.Override public com.getbase.android.db.example.ui.Person com.getbase.android.db.example.ui.Person ( Cursor com.getbase.android.db.example.ui.Cursor ) { final java.lang.String java.lang.String = com.getbase.android.db.example.ui.Cursor . getString ( com.getbase.android.db.example.ui.Cursor . getColumnIndexOrThrow ( Contract . PeopleColumns . FIRST_NAME ) ) ; final java.lang.String java.lang.String = com.getbase.android.db.example.ui.Cursor . getString ( com.getbase.android.db.example.ui.Cursor . getColumnIndexOrThrow ( Contract . PeopleColumns . SECOND_NAME ) ) ; return new Person ( java.lang.String , java.lang.String ) ; } } ) . lazy ( ) . transform ( new Function < java.util.List<com.getbase.android.db.example.ui.Person> < Person > , SectionedPeopleList > ( ) { @ java.lang.Override public com.getbase.android.db.example.ui.SectionedPeopleList com.getbase.android.db.example.ui.SectionedPeopleList ( java.util.List<com.getbase.android.db.example.ui.Person> < Person > java.util.List<com.getbase.android.db.example.ui.Person> ) { return new SectionedPeopleList ( java.util.List<com.getbase.android.db.example.ui.Person> ) ; } } ) . build ( com.getbase.android.db.example.ui.Context ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.example.ui.Person com.getbase.android.db.example.ui.Person ( Cursor com.getbase.android.db.example.ui.Cursor ) { final java.lang.String java.lang.String = com.getbase.android.db.example.ui.Cursor . getString ( com.getbase.android.db.example.ui.Cursor . getColumnIndexOrThrow ( Contract . PeopleColumns . FIRST_NAME ) ) ; final java.lang.String java.lang.String = com.getbase.android.db.example.ui.Cursor . getString ( com.getbase.android.db.example.ui.Cursor . getColumnIndexOrThrow ( Contract . PeopleColumns . SECOND_NAME ) ) ; return new Person ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.example.ui.SectionedPeopleList com.getbase.android.db.example.ui.SectionedPeopleList ( java.util.List<com.getbase.android.db.example.ui.Person> < Person > java.util.List<com.getbase.android.db.example.ui.Person> ) { return new SectionedPeopleList ( java.util.List<com.getbase.android.db.example.ui.Person> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Loader < SectionedPeopleList > com.getbase.android.db.example.ui.Loader<com.getbase.android.db.example.ui.SectionedPeopleList> , SectionedPeopleList com.getbase.android.db.example.ui.SectionedPeopleList ) { com.getbase.android.db.example.ui.SectionedPeopleAdapter . setNewModel ( com.getbase.android.db.example.ui.SectionedPeopleList ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Loader < SectionedPeopleList > com.getbase.android.db.example.ui.Loader<com.getbase.android.db.example.ui.SectionedPeopleList> ) { com.getbase.android.db.example.ui.SectionedPeopleAdapter . setNewModel ( null ) ; }  <METHOD_END>
<METHOD_START> public void ( Uri com.getbase.android.db.common.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) { this . com.getbase.android.db.common.Uri = com.getbase.android.db.common.Uri ; this . java.lang.String[] = java.lang.String[] ; this . java.lang.String = java.lang.String ; this . java.lang.String[] = java.lang.String[] ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.common.Uri com.getbase.android.db.common.Uri ( ) { return com.getbase.android.db.common.Uri ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( ) { return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void ( ) {  }  <METHOD_END>
<METHOD_START> public static < T > com.getbase.android.db.cursors.FluentIterable<T> < T > com.getbase.android.db.cursors.FluentIterable<T> ( Cursor com.getbase.android.db.cursors.Cursor , Function < ? super Cursor , T > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,T> ) { java.util.List<T> < T > java.util.List<T> = Lists . newArrayList ( ) ; if ( com.getbase.android.db.cursors.Cursor != null ) { for ( int int = NUMBER ; com.getbase.android.db.cursors.Cursor . moveToPosition ( int ) ; int ++ ) { java.util.List<T> . boolean ( com.getbase.android.db.cursors.Function<,T> . apply ( com.getbase.android.db.cursors.Cursor ) ) ; } } return FluentIterable . from ( java.util.List<T> ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Cursor com.getbase.android.db.cursors.Cursor ) { if ( com.getbase.android.db.cursors.Cursor != null && ! com.getbase.android.db.cursors.Cursor . isClosed ( ) ) { com.getbase.android.db.cursors.Cursor . close ( ) ; } }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.cursors.Cursor com.getbase.android.db.cursors.Cursor ( Cursor com.getbase.android.db.cursors.Cursor ) { if ( com.getbase.android.db.cursors.Cursor == null ) { return new EmptyCursor ( ) ; } return com.getbase.android.db.cursors.Cursor ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( new java.lang.String [] { } ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.String java.lang.String ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.String java.lang.String ) { return - NUMBER ; }  <METHOD_END>
<METHOD_START> public void ( Cursor com.getbase.android.db.cursors.Cursor ) { super( Cursors . returnSameOrEmptyIfNull ( com.getbase.android.db.cursors.Cursor ) ); }  <METHOD_END>
<METHOD_START> public < T > com.getbase.android.db.cursors.FluentIterable<T> < T > com.getbase.android.db.cursors.FluentIterable<T> ( Function < ? super Cursor , T > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,T> ) { try { return Cursors . toFluentIterable ( this , com.getbase.android.db.cursors.Function<,T> ) ; } finally { close ( ) ; } }  <METHOD_END>
<METHOD_START> public < T > com.getbase.android.db.cursors.LazyCursorList<T> < T > com.getbase.android.db.cursors.LazyCursorList<T> ( Function < ? super Cursor , T > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,T> ) { return new LazyCursorList <> ( this , com.getbase.android.db.cursors.Function<,T> ) ; }  <METHOD_END>
<METHOD_START> public < TKey , TValue > com.getbase.android.db.cursors.LinkedHashMultimap<TKey,TValue> < TKey , TValue > com.getbase.android.db.cursors.LinkedHashMultimap<TKey,TValue> ( Function < ? super Cursor , TKey > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,TKey> , Function < ? super Cursor , TValue > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,TValue> ) { try { LinkedHashMultimap < TKey , TValue > com.getbase.android.db.cursors.LinkedHashMultimap<TKey,TValue> = LinkedHashMultimap . create ( getCount ( ) , NUMBER ) ; for ( moveToFirst ( ) ; ! isAfterLast ( ) ; moveToNext ( ) ) { com.getbase.android.db.cursors.LinkedHashMultimap<TKey,TValue> . put ( com.getbase.android.db.cursors.Function<,TKey> . apply ( this ) , com.getbase.android.db.cursors.Function<,TValue> . apply ( this ) ) ; } return com.getbase.android.db.cursors.LinkedHashMultimap<TKey,TValue> ; } finally { close ( ) ; } }  <METHOD_END>
<METHOD_START> public < TKey , TValue > java.util.LinkedHashMap<TKey,TValue> < TKey , TValue > java.util.LinkedHashMap<TKey,TValue> ( Function < ? super Cursor , TKey > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,TKey> , Function < ? super Cursor , TValue > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,TValue> ) { try { java.util.LinkedHashMap<TKey,TValue> < TKey , TValue > java.util.LinkedHashMap<TKey,TValue> = new java.util.LinkedHashMap <> ( getCount ( ) , NUMBER ) ; for ( moveToFirst ( ) ; ! isAfterLast ( ) ; moveToNext ( ) ) { final TKey TKey = com.getbase.android.db.cursors.Function<,TKey> . apply ( this ) ; final TValue TValue = com.getbase.android.db.cursors.Function<,TValue> . apply ( this ) ; final TValue TValue = java.util.LinkedHashMap<TKey,TValue> . TValue ( TKey , TValue ) ; Preconditions . checkArgument ( TValue == null , STRING , TKey , getPosition ( ) ) ; } return java.util.LinkedHashMap<TKey,TValue> ; } finally { close ( ) ; } }  <METHOD_END>
<METHOD_START> public < T > T T ( Function < ? super Cursor , T > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,T> ) { try { switch ( getCount ( ) ) { case NUMBER : throw new java.util.NoSuchElementException ( ) ; case NUMBER : moveToFirst ( ) ; return com.getbase.android.db.cursors.Function<,T> . apply ( this ) ; default: throw new java.lang.IllegalArgumentException ( STRING + getCount ( ) ) ; } } finally { close ( ) ; } }  <METHOD_END>
<METHOD_START> public < T > T T ( Function < ? super Cursor , T > com.getbase.android.db.cursors.Function<? super com.getbase.android.db.cursors.Cursor,T> , T T ) { if ( moveToFirst ( ) ) { return java.lang.Object ( com.getbase.android.db.cursors.Function<,T> ) ; } else { close ( ) ; return T ; } }  <METHOD_END>
<METHOD_START> public int int ( ) { try { return getCount ( ) ; } finally { close ( ) ; } }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.cursors.FluentCursor com.getbase.android.db.cursors.FluentCursor ( ContentResolver com.getbase.android.db.cursors.ContentResolver , Uri com.getbase.android.db.cursors.Uri ) { setNotificationUri ( com.getbase.android.db.cursors.ContentResolver , com.getbase.android.db.cursors.Uri ) ; return this ; }  <METHOD_END>
<METHOD_START> private void ( ) {  }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.cursors.SingleRowTransforms.Builder com.getbase.android.db.cursors.SingleRowTransforms.Builder ( java.lang.String java.lang.String ) { return new com.getbase.android.db.cursors.SingleRowTransforms.Builder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.String> < Cursor , java.lang.String > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.String> ( ) { return new com.getbase.android.db.cursors.SingleRowTransforms.CursorRowFunction<java.lang.String> < java.lang.String > ( java.lang.String ) { @ java.lang.Override protected java.lang.String java.lang.String ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getString ( int ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Short> < Cursor , java.lang.Short > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Short> ( ) { return new com.getbase.android.db.cursors.SingleRowTransforms.CursorRowFunction<java.lang.Short> < java.lang.Short > ( java.lang.String ) { @ java.lang.Override protected java.lang.Short java.lang.Short ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getShort ( int ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Short java.lang.Short ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getShort ( int ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> < Cursor , java.lang.Integer > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> ( ) { return new com.getbase.android.db.cursors.SingleRowTransforms.CursorRowFunction<java.lang.Integer> < java.lang.Integer > ( java.lang.String ) { @ java.lang.Override protected java.lang.Integer java.lang.Integer ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getInt ( int ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Integer java.lang.Integer ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getInt ( int ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Long> < Cursor , java.lang.Long > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Long> ( ) { return new com.getbase.android.db.cursors.SingleRowTransforms.CursorRowFunction<java.lang.Long> < java.lang.Long > ( java.lang.String ) { @ java.lang.Override protected java.lang.Long java.lang.Long ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getLong ( int ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Long java.lang.Long ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getLong ( int ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Float> < Cursor , java.lang.Float > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Float> ( ) { return new com.getbase.android.db.cursors.SingleRowTransforms.CursorRowFunction<java.lang.Float> < java.lang.Float > ( java.lang.String ) { @ java.lang.Override protected java.lang.Float java.lang.Float ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getFloat ( int ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Float java.lang.Float ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getFloat ( int ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Double> < Cursor , java.lang.Double > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Double> ( ) { return new com.getbase.android.db.cursors.SingleRowTransforms.CursorRowFunction<java.lang.Double> < java.lang.Double > ( java.lang.String ) { @ java.lang.Override protected java.lang.Double java.lang.Double ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getDouble ( int ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Double java.lang.Double ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getDouble ( int ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Boolean> < Cursor , java.lang.Boolean > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Boolean> ( ) { return new com.getbase.android.db.cursors.SingleRowTransforms.CursorRowFunction<java.lang.Boolean> < java.lang.Boolean > ( java.lang.String ) { @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getInt ( int ) == NUMBER ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( Cursor com.getbase.android.db.cursors.Cursor , int int ) { return com.getbase.android.db.cursors.Cursor . getInt ( int ) == NUMBER ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> private int int ( Cursor com.getbase.android.db.cursors.Cursor ) { if ( ! Objects . equal ( com.getbase.android.db.cursors.Cursor , com.getbase.android.db.cursors.Cursor ) ) { int = com.getbase.android.db.cursors.Cursor . getColumnIndexOrThrow ( java.lang.String ) ; com.getbase.android.db.cursors.Cursor = com.getbase.android.db.cursors.Cursor ; } return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final T T ( Cursor com.getbase.android.db.cursors.Cursor ) { int int = int ( com.getbase.android.db.cursors.Cursor ) ; return com.getbase.android.db.cursors.Cursor . isNull ( int ) ? null : T ( com.getbase.android.db.cursors.Cursor , int ) ; }  <METHOD_END>
<METHOD_START> protected abstract T T ( Cursor com.getbase.android.db.cursors.Cursor , int int );  <METHOD_END>
<METHOD_START> private void ( ) {  }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.DeleteTableSelector com.getbase.android.db.fluentsqlite.DeleteTableSelector ( ) { return new com.getbase.android.db.fluentsqlite.Delete ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { return com.getbase.android.db.fluentsqlite.SQLiteDatabase . delete ( java.lang.String , Joiner . on ( STRING ) . join ( java.util.List<java.lang.String> ) , FluentIterable . from ( java.util.List<java.lang.Object> ) . transform ( Functions . toStringFunction ( ) ) . toArray ( java.lang.String .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Delete com.getbase.android.db.fluentsqlite.Delete ( java.lang.String java.lang.String ) { java.lang.String = checkNotNull ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public final < T > com.getbase.android.db.fluentsqlite.Delete com.getbase.android.db.fluentsqlite.Delete ( java.lang.String java.lang.String , T ... T[] ) { if ( java.lang.String != null ) { java.util.List<java.lang.String> . boolean ( STRING + java.lang.String + STRING ) ; if ( T[] != null ) { java.util.List<java.lang.Object> . boolean ( java.util.Arrays . java.util.List<T> ( T[] ) ) ; } } else { Preconditions . checkArgument ( T[] == null || T[] . int == NUMBER , STRING ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public final < T > com.getbase.android.db.fluentsqlite.Delete com.getbase.android.db.fluentsqlite.Delete ( Expression com.getbase.android.db.fluentsqlite.Expression , T ... T[] ) { return com.getbase.android.db.fluentsqlite.Delete ( com.getbase.android.db.fluentsqlite.Expression . getSql ( ) , com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( T[] ) ) ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Delete com.getbase.android.db.fluentsqlite.Delete ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Iterable<java.lang.String> < java.lang.String > java.lang.Iterable<java.lang.String> ( Query com.getbase.android.db.fluentsqlite.Query ) { return com.getbase.android.db.fluentsqlite.Query . getTables ( ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {  }  <METHOD_END>
<METHOD_START> static void void ( java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> , com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression , java.lang.Object ... java.lang.Object[] ) { if ( java.lang.Object[] == null ) { Preconditions . checkArgument ( com.getbase.android.db.fluentsqlite.Expressions.Expression . int ( ) == com.getbase.android.db.fluentsqlite.Expressions.Expression . java.util.Map<java.lang.Integer,java.lang.Object> ( ) . int ( ) , STRING ) ; java.util.List<java.lang.Object> . boolean ( com.getbase.android.db.fluentsqlite.Expressions.Expression . java.util.Map<java.lang.Integer,java.lang.Object> ( ) . java.util.Collection<java.lang.Object> ( ) ) ; } else { Preconditions . checkArgument ( com.getbase.android.db.fluentsqlite.Expressions.Expression . int ( ) == java.lang.Object[] . int + com.getbase.android.db.fluentsqlite.Expressions.Expression . java.util.Map<java.lang.Integer,java.lang.Object> ( ) . int ( ) , STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression . int ( ) , com.getbase.android.db.fluentsqlite.Expressions.Expression . java.util.Map<java.lang.Integer,java.lang.Object> ( ) . int ( ) , ( com.getbase.android.db.fluentsqlite.Expressions.Expression . int ( ) - com.getbase.android.db.fluentsqlite.Expressions.Expression . java.util.Map<java.lang.Integer,java.lang.Object> ( ) . int ( ) ) , java.lang.Object[] . int ) ; int int = NUMBER ; for ( int int = NUMBER ; int < com.getbase.android.db.fluentsqlite.Expressions.Expression . int ( ) ; int ++ ) { final java.lang.Object java.lang.Object ; if ( com.getbase.android.db.fluentsqlite.Expressions.Expression . java.util.Map<java.lang.Integer,java.lang.Object> ( ) . boolean ( int ) ) { java.lang.Object = com.getbase.android.db.fluentsqlite.Expressions.Expression . java.util.Map<java.lang.Integer,java.lang.Object> ( ) . java.lang.Object ( int ) ; } else { java.lang.Object = java.lang.Object[] [ int ++ ] ; } java.util.List<java.lang.Object> . boolean ( java.lang.Object ) ; } } }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCore com.getbase.android.db.fluentsqlite.Expressions.ExpressionCore ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.CollatingSequence com.getbase.android.db.fluentsqlite.Expressions.CollatingSequence );  <METHOD_END>
<METHOD_START> void ( ) {    }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { Preconditions . checkState ( java.util.Map<java.lang.Integer,java.lang.Object> ( ) . boolean ( ) , STRING ) ; return java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> abstract int int ( )  <METHOD_END>
<METHOD_START> abstract java.util.Map<java.lang.Integer,java.lang.Object> < java.lang.Integer , java.lang.Object > java.util.Map<java.lang.Integer,java.lang.Object> ( )  <METHOD_END>
<METHOD_START> abstract java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( )  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) abstract < T > java.lang.Object [] java.lang.Object[] ( T ... T[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Number java.lang.Number );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String , com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.CaseCondition com.getbase.android.db.fluentsqlite.Expressions.CaseCondition ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.CaseCondition com.getbase.android.db.fluentsqlite.Expressions.CaseCondition ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.CaseValue com.getbase.android.db.fluentsqlite.Expressions.CaseValue ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.CaseExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.CaseExpressionBuilder ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression );  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCore com.getbase.android.db.fluentsqlite.Expressions.ExpressionCore ( ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCore ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Number java.lang.Number ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Object java.lang.Object ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public static < T > com.getbase.android.db.fluentsqlite.Expressions.Expression [] com.getbase.android.db.fluentsqlite.Expressions.Expression[] ( T ... T[] ) { Preconditions . checkNotNull ( T[] ) ; com.getbase.android.db.fluentsqlite.Expressions.Expression [] com.getbase.android.db.fluentsqlite.Expressions.Expression[] = new com.getbase.android.db.fluentsqlite.Expressions.Expression [ T[] . int ] ; for ( int int = NUMBER ; int < T[] . int ; int ++ ) { com.getbase.android.db.fluentsqlite.Expressions.Expression[] [ int ] = com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( T[] [ int ] ) ; } return com.getbase.android.db.fluentsqlite.Expressions.Expression[] ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.Expression [] com.getbase.android.db.fluentsqlite.Expressions.Expression[] ( java.lang.Number ... java.lang.Number[] ) { Preconditions . checkNotNull ( java.lang.Number[] ) ; com.getbase.android.db.fluentsqlite.Expressions.Expression [] com.getbase.android.db.fluentsqlite.Expressions.Expression[] = new com.getbase.android.db.fluentsqlite.Expressions.Expression [ java.lang.Number[] . int ] ; for ( int int = NUMBER ; int < java.lang.Number[] . int ; int ++ ) { com.getbase.android.db.fluentsqlite.Expressions.Expression[] [ int ] = com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Number[] [ int ] ) ; } return com.getbase.android.db.fluentsqlite.Expressions.Expression[] ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String , com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String , com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.CaseCondition com.getbase.android.db.fluentsqlite.Expressions.CaseCondition ( ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.CaseCondition ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Expressions.CaseCondition com.getbase.android.db.fluentsqlite.Expressions.CaseCondition ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return new com.getbase.android.db.fluentsqlite.Expressions.Builder ( ) . com.getbase.android.db.fluentsqlite.Expressions.CaseCondition ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return com.getbase.android.db.fluentsqlite.Expressions.Expression . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Expressions.Expression . java.lang.String ( ) ) . java.lang.StringBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { for ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression : com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Joiner . join ( java.lang.Iterable<java.lang.String> ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ) ) . append ( STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { for ( java.util.Map.Entry<java.lang.Integer,java.lang.Object> < java.lang.Integer , java.lang.Object > java.util.Map.Entry<java.lang.Integer,java.lang.Object> : com.getbase.android.db.fluentsqlite.Expressions.Expression . java.util.Map<java.lang.Integer,java.lang.Object> ( ) . java.util.Set<java.util.Map.Entry<java.lang.Integer,java.lang.Object>> ( ) ) { java.util.Map<java.lang.Integer,java.lang.Object> . java.lang.Object ( int + java.util.Map.Entry<java.lang.Integer,java.lang.Object> . java.lang.Integer ( ) , java.util.Map.Entry<java.lang.Integer,java.lang.Object> . java.lang.Object ( ) ) ; } int += com.getbase.android.db.fluentsqlite.Expressions.Expression . int ( ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( java.lang.String java.lang.String ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( Query com.getbase.android.db.fluentsqlite.Query ) { RawQuery com.getbase.android.db.fluentsqlite.RawQuery = com.getbase.android.db.fluentsqlite.Query . toRawQuery ( ) ; for ( java.lang.String java.lang.String : rawQuery . mRawQueryArgs ) { java.util.Map<java.lang.Integer,java.lang.Object> . java.lang.Object ( int ++ , java.lang.String ) ; } java.util.List<com.getbase.android.db.fluentsqlite.Query> . add ( com.getbase.android.db.fluentsqlite.Query ) ; com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( rawQuery . mRawQuery ) . append ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( Query com.getbase.android.db.fluentsqlite.Query ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Query ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { com.getbase.android.db.fluentsqlite.Expressions.ExpressionBuilder ( ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.StringBuilder . java.lang.String ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Map<java.lang.Integer,java.lang.Object> < java.lang.Integer , java.lang.Object > java.util.Map<java.lang.Integer,java.lang.Object> ( ) { return java.util.Map<java.lang.Integer,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return FluentIterable . from ( java.util.List<com.getbase.android.db.fluentsqlite.Query> ) . transformAndConcat ( com.getbase.android.db.fluentsqlite.Function<com.getbase.android.db.fluentsqlite.Query,java.lang.Iterable<java.lang.String>> ) . toSet ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs @ java.lang.Override public final < T > java.lang.Object [] java.lang.Object[] ( T ... T[] ) { java.util.ArrayList<java.lang.Object> < java.lang.Object > java.util.ArrayList<java.lang.Object> = Lists . newArrayList ( ) ; void ( java.util.ArrayList<java.lang.Object> , this , T[] ) ; return java.util.ArrayList<java.lang.Object> . java.lang.Object[] ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; ++ int ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Number java.lang.Number ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.Number . java.lang.String ( ) ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.Object java.lang.Object ) { java.lang.StringBuilder . java.lang.StringBuilder ( '\'' ) . java.lang.StringBuilder ( java.lang.Object . java.lang.String ( ) . java.lang.String ( STRING , STRING ) ) . java.lang.StringBuilder ( '\'' ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { Preconditions . checkArgument ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] . int >= NUMBER ) ; return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( STRING , com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { java.lang.StringBuilder . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Joiner . join ( java.lang.Iterable<java.lang.String> ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ) ) ; return this ; }  <METHOD_END>
<METHOD_START> private java.lang.Iterable<java.lang.String> < java.lang.String > java.lang.Iterable<java.lang.String> ( com.getbase.android.db.fluentsqlite.Expressions.Expression [] com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { return Iterables . transform ( java.util.Arrays . java.util.List<com.getbase.android.db.fluentsqlite.Expressions.Expression> ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) , com.getbase.android.db.fluentsqlite.Function<com.getbase.android.db.fluentsqlite.Expressions.Expression,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private static < T > java.lang.Iterable<T> < T > java.lang.Iterable<T> ( final T T , final java.lang.Iterable<T> < T > java.lang.Iterable<T> ) { return new java.lang.Iterable<T> < T > ( ) { @ java.lang.Override public java.util.Iterator<T> < T > java.util.Iterator<T> ( ) { final java.util.Iterator<T> < T > java.util.Iterator<T> = java.lang.Iterable<T> . java.util.Iterator<T> ( ) ; return new AbstractIterator < T > ( ) { boolean boolean = false ; @ java.lang.Override protected T T ( ) { if ( java.util.Iterator<T> . boolean ( ) ) { final T T ; if ( boolean ) { T = T ; } else { T = java.util.Iterator<T> . T ( ) ; } boolean = ! boolean ; return T ; } return endOfData ( ) ; } } ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Iterator<T> < T > java.util.Iterator<T> ( ) { final java.util.Iterator<T> < T > java.util.Iterator<T> = java.lang.Iterable<T> . java.util.Iterator<T> ( ) ; return new AbstractIterator < T > ( ) { boolean boolean = false ; @ java.lang.Override protected T T ( ) { if ( java.util.Iterator<T> . boolean ( ) ) { final T T ; if ( boolean ) { T = T ; } else { T = java.util.Iterator<T> . T ( ) ; } boolean = ! boolean ; return T ; } return endOfData ( ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected T T ( ) { if ( java.util.Iterator<T> . boolean ( ) ) { final T T ; if ( boolean ) { T = T ; } else { T = java.util.Iterator<T> . T ( ) ; } boolean = ! boolean ; return T ; } return endOfData ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String , com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( FluentIterable . from ( java.lang.Iterable<com.getbase.android.db.fluentsqlite.Expressions.Expression> ( com.getbase.android.db.fluentsqlite.Expressions . com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String ) , java.util.Arrays . java.util.List<com.getbase.android.db.fluentsqlite.Expressions.Expression> ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ) ) . toArray ( com.getbase.android.db.fluentsqlite.Expressions.Expression .class ) ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String , com.getbase.android.db.fluentsqlite.Expressions.Expression ... com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression[] ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( java.lang.String java.lang.String ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCore com.getbase.android.db.fluentsqlite.Expressions.ExpressionCore ( ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.CaseValue com.getbase.android.db.fluentsqlite.Expressions.CaseValue ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.CaseCondition com.getbase.android.db.fluentsqlite.Expressions.CaseCondition ( ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.CaseCondition com.getbase.android.db.fluentsqlite.Expressions.CaseCondition ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.CaseExpressionBuilder com.getbase.android.db.fluentsqlite.Expressions.CaseExpressionBuilder ( com.getbase.android.db.fluentsqlite.Expressions.Expression com.getbase.android.db.fluentsqlite.Expressions.Expression ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; void ( com.getbase.android.db.fluentsqlite.Expressions.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner com.getbase.android.db.fluentsqlite.Expressions.ExpressionCombiner ( com.getbase.android.db.fluentsqlite.Expressions.CollatingSequence com.getbase.android.db.fluentsqlite.Expressions.CollatingSequence ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Expressions.CollatingSequence . java.lang.String ( ) ) ; return this ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.DefaultValuesInsert com.getbase.android.db.fluentsqlite.DefaultValuesInsert ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , ContentValues com.getbase.android.db.fluentsqlite.ContentValues ) { java.lang.String = java.lang.String ; com.getbase.android.db.fluentsqlite.ContentValues = com.getbase.android.db.fluentsqlite.ContentValues ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.InsertTableSelector com.getbase.android.db.fluentsqlite.InsertTableSelector ( ) { return new com.getbase.android.db.fluentsqlite.Insert.InsertBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.InsertFormSelector com.getbase.android.db.fluentsqlite.InsertFormSelector ( java.lang.String java.lang.String ) { java.lang.String = checkNotNull ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Insert.DefaultValuesInsert com.getbase.android.db.fluentsqlite.Insert.DefaultValuesInsert ( java.lang.String java.lang.String ) { return new com.getbase.android.db.fluentsqlite.Insert.DefaultValuesInsert ( java.lang.String , checkNotNull ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.InsertSubqueryForm com.getbase.android.db.fluentsqlite.InsertSubqueryForm ( java.lang.String ... java.lang.String[] ) { Preconditions . checkArgument ( java.lang.String[] != null , STRING ) ; java.util.Collections . boolean ( java.util.List<java.lang.String> , java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Insert.InsertWithSelect com.getbase.android.db.fluentsqlite.Insert.InsertWithSelect ( Query com.getbase.android.db.fluentsqlite.Query ) { checkNotNull ( com.getbase.android.db.fluentsqlite.Query ) ; return new com.getbase.android.db.fluentsqlite.Insert.InsertWithSelect ( java.lang.String , com.getbase.android.db.fluentsqlite.Query . toRawQuery ( ) , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Insert.InsertWithSelect com.getbase.android.db.fluentsqlite.Insert.InsertWithSelect ( QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder ) { checkNotNull ( com.getbase.android.db.fluentsqlite.QueryBuilder ) ; return com.getbase.android.db.fluentsqlite.Insert.InsertWithSelect ( com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Insert com.getbase.android.db.fluentsqlite.Insert ( ContentValues com.getbase.android.db.fluentsqlite.ContentValues ) { return new com.getbase.android.db.fluentsqlite.Insert ( java.lang.String , new ContentValues ( com.getbase.android.db.fluentsqlite.ContentValues ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Insert com.getbase.android.db.fluentsqlite.Insert ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; Utils . addToContentValues ( java.lang.String , java.lang.Object , com.getbase.android.db.fluentsqlite.ContentValues ) ; return new com.getbase.android.db.fluentsqlite.Insert ( java.lang.String , com.getbase.android.db.fluentsqlite.ContentValues ) ; }  <METHOD_END>
<METHOD_START> public long long ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { return com.getbase.android.db.fluentsqlite.SQLiteDatabase . insert ( java.lang.String , null , com.getbase.android.db.fluentsqlite.ContentValues ) ; }  <METHOD_END>
<METHOD_START> public long long ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { return com.getbase.android.db.fluentsqlite.SQLiteDatabase . insertOrThrow ( java.lang.String , null , com.getbase.android.db.fluentsqlite.ContentValues ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , RawQuery com.getbase.android.db.fluentsqlite.RawQuery , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { java.lang.String = java.lang.String ; com.getbase.android.db.fluentsqlite.RawQuery = com.getbase.android.db.fluentsqlite.RawQuery ; java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public long long ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( STRING ) ; if ( ! java.util.List<java.lang.String> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( java.util.List<java.lang.String> ) ) . append ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.RawQuery . mRawQuery ) ; SQLiteStatement com.getbase.android.db.fluentsqlite.SQLiteStatement = com.getbase.android.db.fluentsqlite.SQLiteDatabase . compileStatement ( java.lang.StringBuilder . java.lang.String ( ) ) ; try { int int = NUMBER ; for ( java.lang.String java.lang.String : com.getbase.android.db.fluentsqlite.RawQuery . mRawQueryArgs ) { Utils . bindContentValueArg ( com.getbase.android.db.fluentsqlite.SQLiteStatement , int ++ , java.lang.String ) ; } return com.getbase.android.db.fluentsqlite.SQLiteStatement . executeInsert ( ) ; } finally { com.getbase.android.db.fluentsqlite.SQLiteStatement . close ( ) ; } }  <METHOD_END>
<METHOD_START> public long long ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { long long = long ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; if ( long == - NUMBER ) { throw new java.lang.RuntimeException ( STRING ) ; } return long ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public long long ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { return com.getbase.android.db.fluentsqlite.SQLiteDatabase . insert ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public long long ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { return com.getbase.android.db.fluentsqlite.SQLiteDatabase . insertOrThrow ( java.lang.String , java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Insert com.getbase.android.db.fluentsqlite.Insert ( ContentValues com.getbase.android.db.fluentsqlite.ContentValues ) { com.getbase.android.db.fluentsqlite.ContentValues . putAll ( com.getbase.android.db.fluentsqlite.ContentValues ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Insert com.getbase.android.db.fluentsqlite.Insert ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Utils . addToContentValues ( java.lang.String , java.lang.Object , com.getbase.android.db.fluentsqlite.ContentValues ) ; return this ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.InsertSubqueryForm com.getbase.android.db.fluentsqlite.InsertSubqueryForm ( java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.InsertWithSelect com.getbase.android.db.fluentsqlite.InsertWithSelect ( Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.InsertWithSelect com.getbase.android.db.fluentsqlite.InsertWithSelect ( QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.InsertFormSelector com.getbase.android.db.fluentsqlite.InsertFormSelector ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Insert com.getbase.android.db.fluentsqlite.Insert ( ContentValues com.getbase.android.db.fluentsqlite.ContentValues );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Insert com.getbase.android.db.fluentsqlite.Insert ( java.lang.String java.lang.String , java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.fluentsqlite.FluentCursor com.getbase.android.db.fluentsqlite.FluentCursor ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.FluentCursor ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.fluentsqlite.RawQuery com.getbase.android.db.fluentsqlite.RawQuery ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.RawQuery ( ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.Set<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> private void getTables ( ImmutableSet . ImmutableSet < java.lang.String > builder ) { builder . addAll ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.Set<java.lang.String> ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return STRING + java.lang.String + STRING ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { return new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { return new com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilderImpl ( com.getbase.android.db.fluentsqlite.Query ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ( com.getbase.android.db.fluentsqlite.Query ... com.getbase.android.db.fluentsqlite.Query[] ) { Preconditions . checkNotNull ( com.getbase.android.db.fluentsqlite.Query[] ) ; Preconditions . checkArgument ( com.getbase.android.db.fluentsqlite.Query[] . int > NUMBER ) ; if ( com.getbase.android.db.fluentsqlite.Query[] . int == NUMBER ) { return com.getbase.android.db.fluentsqlite.Query[] [ NUMBER ] ; } com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder = com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query[] [ NUMBER ] ) ; for ( int int = NUMBER ; int < com.getbase.android.db.fluentsqlite.Query[] . int ; int ++ ) { com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder = com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder . com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query[] [ int ] ) ; } return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ( com.getbase.android.db.fluentsqlite.Query ... com.getbase.android.db.fluentsqlite.Query[] ) { Preconditions . checkNotNull ( com.getbase.android.db.fluentsqlite.Query[] ) ; Preconditions . checkArgument ( com.getbase.android.db.fluentsqlite.Query[] . int > NUMBER ) ; if ( com.getbase.android.db.fluentsqlite.Query[] . int == NUMBER ) { return com.getbase.android.db.fluentsqlite.Query[] [ NUMBER ] ; } com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder = com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query[] [ NUMBER ] ) ; for ( int int = NUMBER ; int < com.getbase.android.db.fluentsqlite.Query[] . int ; int ++ ) { com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder = com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder . com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query[] [ int ] ) ; } return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ( com.getbase.android.db.fluentsqlite.Query ... com.getbase.android.db.fluentsqlite.Query[] ) { Preconditions . checkNotNull ( com.getbase.android.db.fluentsqlite.Query[] ) ; Preconditions . checkArgument ( com.getbase.android.db.fluentsqlite.Query[] . int > NUMBER ) ; if ( com.getbase.android.db.fluentsqlite.Query[] . int == NUMBER ) { return com.getbase.android.db.fluentsqlite.Query[] [ NUMBER ] ; } com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder = com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query[] [ NUMBER ] ) ; for ( int int = NUMBER ; int < com.getbase.android.db.fluentsqlite.Query[] . int ; int ++ ) { com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder = com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder . com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query[] [ int ] ) ; } return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundOrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.CompoundOrderingTermBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundOrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.CompoundOrderingTermBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundOrderingDirectionSelector com.getbase.android.db.fluentsqlite.Query.CompoundOrderingDirectionSelector ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundOrderingDirectionSelector com.getbase.android.db.fluentsqlite.Query.CompoundOrderingDirectionSelector ( CollatingSequence com.getbase.android.db.fluentsqlite.CollatingSequence );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundLimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.CompoundLimitOffsetBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundLimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.CompoundLimitOffsetBuilder ( int int );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( int int );  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl = com.getbase.android.db.fluentsqlite.Query . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( ) ; if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . boolean ( ) ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> = Lists . newLinkedList ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> . boolean ( new com.getbase.android.db.fluentsqlite.Query.QueryOrOperator ( com.getbase.android.db.fluentsqlite.Query ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( int int ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundOrderingDirectionSelector com.getbase.android.db.fluentsqlite.Query.CompoundOrderingDirectionSelector ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundOrderingDirectionSelector com.getbase.android.db.fluentsqlite.Query.CompoundOrderingDirectionSelector ( CollatingSequence com.getbase.android.db.fluentsqlite.CollatingSequence ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector ( com.getbase.android.db.fluentsqlite.CollatingSequence ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) ; return this ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query , java.lang.String java.lang.String ) { if ( ! com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . boolean ( ) ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> . boolean ( new com.getbase.android.db.fluentsqlite.Query.QueryOrOperator ( new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ) . com.getbase.android.db.fluentsqlite.Query ( ) ) ) ; } com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> . boolean ( new com.getbase.android.db.fluentsqlite.Query.QueryOrOperator ( java.lang.String ) ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> . boolean ( new com.getbase.android.db.fluentsqlite.Query.QueryOrOperator ( com.getbase.android.db.fluentsqlite.Query ) ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart = new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ( ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.CompoundQueryBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ( ) { return new com.getbase.android.db.fluentsqlite.Query ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundLimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.CompoundLimitOffsetBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundLimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.CompoundLimitOffsetBuilder ( int int ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( int ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundOrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.CompoundOrderingTermBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.CompoundOrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.CompoundOrderingTermBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( com.getbase.android.db.fluentsqlite.Expression ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ( ) { void ( ) ; return new com.getbase.android.db.fluentsqlite.Query ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return java.util.List<java.lang.String> . boolean ( ) && java.lang.String == null && java.util.List<java.lang.String> . boolean ( ) && java.lang.String == null && java.util.List<java.lang.String> . boolean ( ) && java.util.List<java.lang.String> . boolean ( ) && java.util.List<java.lang.String> . boolean ( ) && com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . isEmpty ( ) && com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery == null && java.util.LinkedHashMap<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> . boolean ( ) && Strings . isNullOrEmpty ( java.lang.String ) && com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec == null && java.util.List<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec> . boolean ( ) ; }  <METHOD_END>
<METHOD_START> void ( ) {      }  <METHOD_END>
<METHOD_START> void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ) { boolean = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . boolean ; java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> ) ; java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String ; java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> ) ; java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String ; java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> ) ; java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> ) ; java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> ) ; com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . putAll ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ; java.util.LinkedHashMap<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> . void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.LinkedHashMap<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> ) ; java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec != null ? new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec ) : null ; java.util.List<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec> = Lists . newArrayListWithCapacity ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec> . int ( ) ) ; for ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec : com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec> ) { java.util.List<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec> . boolean ( new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec ) ) ; } java.util.Set<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( java.lang.String != null ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; java.lang.String = null ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( java.lang.String != null ) { for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { java.util.List<java.lang.String> . boolean ( java.lang.String + STRING + java.lang.String ) ; } } else { java.util.List<java.lang.String> . boolean ( java.util.List<java.lang.String> ) ; } java.lang.String = null ; java.util.List<java.lang.String> . void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery != null ) { java.util.LinkedHashMap<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> . java.lang.String ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery , java.lang.String ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery = null ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec != null ) { java.util.List<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec = null ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { void ( ) ; void ( ) ; void ( null ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.RawQuery com.getbase.android.db.fluentsqlite.RawQuery ( ) { void ( ) ; Preconditions . checkState ( ! ( ! java.util.List<java.lang.String> . boolean ( ) && java.util.List<java.lang.String> . boolean ( ) ) , STRING ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = Lists . newArrayList ( ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; if ( boolean ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } if ( ! java.util.List<java.lang.String> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( java.util.List<java.lang.String> ) ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.util.List<java.lang.String> . boolean ( Collections2 . transform ( com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . get ( QueryPart . PROJECTION ) , Functions . toStringFunction ( ) ) ) ; if ( ! java.util.LinkedHashMap<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = Lists . newArrayList ( ) ; for ( java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> < com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery , java.lang.String > java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> : java.util.LinkedHashMap<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> . java.util.Set<java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String>> ( ) ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery = java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ( ) ; java.lang.String java.lang.String = java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> . java.lang.String ( ) ; java.lang.String java.lang.String ; if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . java.lang.String != null ) { java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . java.lang.String ; } else { RawQuery com.getbase.android.db.fluentsqlite.RawQuery = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . com.getbase.android.db.fluentsqlite.Query . com.getbase.android.db.fluentsqlite.RawQuery ( ) ; java.lang.String = com.getbase.android.db.fluentsqlite.Function<java.lang.String,java.lang.String> . apply ( rawSubquery . mRawQuery ) ; java.util.List<java.lang.String> . boolean ( rawSubquery . mRawQueryArgs ) ; } if ( java.lang.String != null ) { java.lang.String += STRING + java.lang.String ; } java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( java.util.List<java.lang.String> ) ) ; } for ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec : java.util.List<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec> ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . java.lang.String != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . java.lang.String ) ; } else { final RawQuery com.getbase.android.db.fluentsqlite.RawQuery = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . com.getbase.android.db.fluentsqlite.Query . com.getbase.android.db.fluentsqlite.RawQuery ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Function<java.lang.String,java.lang.String> . apply ( rawQuery . mRawQuery ) ) ; java.util.List<java.lang.String> . boolean ( rawQuery . mRawQueryArgs ) ; } if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String ) ; } if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String[] != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String[] ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else if ( ! com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.String> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( Collections2 . transform ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.String> , com.getbase.android.db.fluentsqlite.Function<java.lang.String,java.lang.String> ) ) ) ; java.util.List<java.lang.String> . boolean ( Collections2 . transform ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.Object> , Functions . toStringFunction ( ) ) ) ; } } if ( ! java.util.List<java.lang.String> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.List<java.lang.String> , com.getbase.android.db.fluentsqlite.Function<java.lang.String,java.lang.String> ) ) ) ; java.util.List<java.lang.String> . boolean ( Collections2 . transform ( com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . get ( QueryPart . SELECTION ) , Functions . toStringFunction ( ) ) ) ; } if ( ! java.util.List<java.lang.String> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( java.util.List<java.lang.String> ) ) ; java.util.List<java.lang.String> . boolean ( Collections2 . transform ( com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . get ( QueryPart . GROUP_BY ) , Functions . toStringFunction ( ) ) ) ; if ( ! java.util.List<java.lang.String> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.List<java.lang.String> , com.getbase.android.db.fluentsqlite.Function<java.lang.String,java.lang.String> ) ) ) ; java.util.List<java.lang.String> . boolean ( Collections2 . transform ( com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . get ( QueryPart . HAVING ) , Functions . toStringFunction ( ) ) ) ; } } return new RawQuery ( java.lang.StringBuilder . java.lang.String ( ) , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public void getTables ( ImmutableSet . ImmutableSet < java.lang.String > builder ) { addTableOrSubquery ( builder , com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ) ; for ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery : java.util.LinkedHashMap<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery,java.lang.String> . java.util.Set<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery> ( ) ) { addTableOrSubquery ( builder , com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ) ; } if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec != null ) { addTableOrSubquery ( builder , com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ) ; } for ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec : java.util.List<com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec> ) { addTableOrSubquery ( builder , com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ) ; } builder . addAll ( java.util.Set<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { int int = ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . boolean ( ) ? NUMBER : NUMBER ) + java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> . int ( ) ; return int > NUMBER ; }  <METHOD_END>
<METHOD_START> private void ( ) {    }  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ) { java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.lang.String ; java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.lang.String ; java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.lang.String ; java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.lang.String ; java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.lang.String ; java.util.List<java.lang.String> = Lists . newCopyOnWriteArrayList ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.List<java.lang.String> ) ; java.util.List<java.lang.Object> = Lists . newCopyOnWriteArrayList ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.List<java.lang.Object> ) ; java.util.Set<java.lang.String> = Sets . newHashSet ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.Set<java.lang.String> ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart = new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ) ; java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> = Lists . newLinkedList ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> ) ; }  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart = new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ) ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( ) { return new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { Builder < java.lang.String > com.getbase.android.db.fluentsqlite.Builder<java.lang.String> = ImmutableSet . builder ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . getTables ( com.getbase.android.db.fluentsqlite.Builder<java.lang.String> ) ; for ( com.getbase.android.db.fluentsqlite.Query.QueryOrOperator com.getbase.android.db.fluentsqlite.Query.QueryOrOperator : java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> ) { if ( com.getbase.android.db.fluentsqlite.Query.QueryOrOperator . boolean ( ) ) { com.getbase.android.db.fluentsqlite.Query.QueryOrOperator . com.getbase.android.db.fluentsqlite.Query . java.util.Set<java.lang.String> ( com.getbase.android.db.fluentsqlite.Builder<java.lang.String> ) ; } } com.getbase.android.db.fluentsqlite.Builder<java.lang.String> . addAll ( java.util.Set<java.lang.String> ) ; return com.getbase.android.db.fluentsqlite.Builder<java.lang.String> . build ( ) ; }  <METHOD_END>
<METHOD_START> private static void addTableOrSubquery ( ImmutableSet . ImmutableSet < java.lang.String > builder , com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ) { if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery != null ) { if ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . com.getbase.android.db.fluentsqlite.Query != null ) { builder . addAll ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . com.getbase.android.db.fluentsqlite.Query . java.util.Set<java.lang.String> ( ) ) ; } else { builder . add ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery . java.lang.String ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.RawQuery com.getbase.android.db.fluentsqlite.RawQuery ( ) { boolean boolean = ! com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . boolean ( ) ; Preconditions . checkState ( boolean || java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> . int ( ) > NUMBER ) ; void ( ) ; java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = Lists . newArrayList ( ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( com.getbase.android.db.fluentsqlite.Query.QueryOrOperator com.getbase.android.db.fluentsqlite.Query.QueryOrOperator : java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> ) { if ( com.getbase.android.db.fluentsqlite.Query.QueryOrOperator . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryOrOperator . java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query = com.getbase.android.db.fluentsqlite.Query.QueryOrOperator . com.getbase.android.db.fluentsqlite.Query ; RawQuery com.getbase.android.db.fluentsqlite.RawQuery = com.getbase.android.db.fluentsqlite.Query . com.getbase.android.db.fluentsqlite.RawQuery ( ) ; if ( com.getbase.android.db.fluentsqlite.Query . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( partRawQuery . mRawQuery ) ; if ( com.getbase.android.db.fluentsqlite.Query . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.util.List<java.lang.String> . boolean ( partRawQuery . mRawQueryArgs ) ; } } if ( boolean ) { RawQuery com.getbase.android.db.fluentsqlite.RawQuery = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.RawQuery ( ) ; java.util.List<java.lang.String> . boolean ( lastQueryPart . mRawQueryArgs ) ; java.lang.StringBuilder . java.lang.StringBuilder ( lastQueryPart . mRawQuery ) ; } if ( ! java.util.List<java.lang.String> . boolean ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( java.util.List<java.lang.String> ) ) ; } java.util.List<java.lang.String> . boolean ( Collections2 . transform ( java.util.List<java.lang.Object> , Functions . toStringFunction ( ) ) ) ; if ( java.lang.String != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; if ( java.lang.String != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; } } return new RawQuery ( java.lang.StringBuilder . java.lang.String ( ) , java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.FluentCursor com.getbase.android.db.fluentsqlite.FluentCursor ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { RawQuery com.getbase.android.db.fluentsqlite.RawQuery = com.getbase.android.db.fluentsqlite.RawQuery ( ) ; return new FluentCursor ( com.getbase.android.db.fluentsqlite.SQLiteDatabase . rawQuery ( rawQuery . mRawQuery , rawQuery . mRawQueryArgs . toArray ( new java.lang.String [ rawQuery . mRawQueryArgs . size ( ) ] ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( Expressions . column ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( Expressions . column ( java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.Number java.lang.Number ) { return com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( Expressions . literal ( java.lang.Number ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.Object java.lang.Object ) { return com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( Expressions . literal ( java.lang.Object ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( ) { return com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( Expressions . nul ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String = com.getbase.android.db.fluentsqlite.Expression . getSql ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.Set<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Expression . getTables ( ) ) ; if ( com.getbase.android.db.fluentsqlite.Expression . getArgsCount ( ) > NUMBER ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . putAll ( QueryPart . PROJECTION , java.util.Arrays . java.util.List ( com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( ) ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String ) { Preconditions . checkState ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String != null ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String + STRING + java.lang.String ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String = null ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnListTableSelector com.getbase.android.db.fluentsqlite.Query.ColumnListTableSelector ( java.lang.String ... java.lang.String[] ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; if ( java.lang.String[] != null ) { java.util.Collections . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> , java.lang.String[] ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnsTableSelector com.getbase.android.db.fluentsqlite.Query.ColumnsTableSelector ( ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . boolean ( STRING ) ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.ColumnsTableSelectorHelper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnsListAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnsListAliasBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { for ( java.lang.String java.lang.String : com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String + STRING + java.lang.String + STRING + java.lang.String ) ; } com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String = null ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . boolean = true ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . boolean = false ; return this ; }  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { super( com.getbase.android.db.fluentsqlite.Query.QueryBuilder ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String ) { for ( java.lang.String java.lang.String : com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . boolean ( java.lang.String + STRING + java.lang.String ) ; } com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . void ( ) ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl .this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.UnionTypeSelector com.getbase.android.db.fluentsqlite.Query.UnionTypeSelector ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper ( STRING ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryHelper ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> . boolean ( new com.getbase.android.db.fluentsqlite.Query.QueryOrOperator ( new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ) . com.getbase.android.db.fluentsqlite.Query ( ) ) ) ; java.util.LinkedList<com.getbase.android.db.fluentsqlite.Query.QueryOrOperator> . boolean ( new com.getbase.android.db.fluentsqlite.Query.QueryOrOperator ( java.lang.String ) ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart = new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart ( ) ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl .this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.Set<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Expression . getTables ( ) ) ; if ( com.getbase.android.db.fluentsqlite.Expression . getArgsCount ( ) > NUMBER ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . putAll ( QueryPart . GROUP_BY , java.util.Arrays . java.util.List ( com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( ) ) ) ; } return com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( com.getbase.android.db.fluentsqlite.Expression . getSql ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; if ( java.lang.Object[] != null ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . putAll ( QueryPart . HAVING , java.util.Arrays . java.util.List<java.lang.Object> ( java.lang.Object[] ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression , java.lang.Object ... java.lang.Object[] ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.Set<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Expression . getTables ( ) ) ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( com.getbase.android.db.fluentsqlite.Expression . getSql ( ) , com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinTypeBuilder com.getbase.android.db.fluentsqlite.Query.JoinTypeBuilder ( ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String = STRING ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinBuilder com.getbase.android.db.fluentsqlite.Query.JoinBuilder ( ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String += STRING ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinBuilder com.getbase.android.db.fluentsqlite.Query.JoinBuilder ( ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String += STRING ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec = new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String , new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ( java.lang.String ) ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String = STRING ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinHelper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec = new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String , new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ( com.getbase.android.db.fluentsqlite.Query ) ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.lang.String = STRING ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinHelper ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { super( com.getbase.android.db.fluentsqlite.Query.QueryBuilder ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinConstraintBuilder com.getbase.android.db.fluentsqlite.Query.JoinConstraintBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String ... java.lang.String[] ) { Preconditions . checkArgument ( java.lang.String[] != null , STRING ) ; Preconditions . checkArgument ( java.lang.String[] . int > NUMBER , STRING ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String[] = java.lang.String[] ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( ) ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl .this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinOnConstraintBuilder com.getbase.android.db.fluentsqlite.Query.JoinOnConstraintBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; if ( java.lang.Object[] != null ) { java.util.Collections . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.Object> , java.lang.Object[] ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinOnConstraintBuilder com.getbase.android.db.fluentsqlite.Query.JoinOnConstraintBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression , java.lang.Object ... java.lang.Object[] ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.Set<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Expression . getTables ( ) ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Expression . getSql ( ) ) ; java.util.Collections . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.Object> , com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( java.lang.Object[] ) ) ; return this ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ) { java.lang.String = java.lang.String ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ; }  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec ) { java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ; java.lang.String = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String ; java.lang.String[] = com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String[] != null ? java.util.Arrays . java.lang.String[] ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String[] , com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.lang.String[] . int ) : null ; java.util.List<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.String> ) ; java.util.List<java.lang.Object> . boolean ( com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.JoinSpec . java.util.List<java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( java.lang.String java.lang.String ) { Preconditions . checkState ( java.lang.String == null , STRING ) ; java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( int int ) { return com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String ) { Preconditions . checkState ( java.lang.String != null ) ; Preconditions . checkState ( java.lang.String == null ) ; java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( int int ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( java.lang.String java.lang.String ) { void ( ) ; java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression ) { java.util.Set<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Expression . getTables ( ) ) ; java.util.Collections . boolean ( java.util.List<java.lang.Object> , com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( ) ) ; return com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( com.getbase.android.db.fluentsqlite.Expression . getSql ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector ( CollatingSequence com.getbase.android.db.fluentsqlite.CollatingSequence ) { java.lang.String = com.getbase.android.db.fluentsqlite.CollatingSequence . name ( ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { java.lang.String = STRING ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { java.lang.String = STRING ; return this ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( java.lang.String != null ) { java.lang.String java.lang.String = java.lang.String ; if ( java.lang.String != null ) { java.lang.String += STRING + java.lang.String ; } if ( java.lang.String != null ) { java.lang.String += java.lang.String ; } java.lang.String = null ; java.lang.String = null ; java.lang.String = null ; java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs @ java.lang.Override public final < T > com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String , T ... T[] ) { if ( ! Strings . isNullOrEmpty ( java.lang.String ) ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; if ( T[] != null ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.LinkedListMultimap<com.getbase.android.db.fluentsqlite.QueryPart,java.lang.Object> . putAll ( QueryPart . SELECTION , java.util.Arrays . java.util.List<T> ( T[] ) ) ; } } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs @ java.lang.Override public final < T > com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression , T ... T[] ) { if ( com.getbase.android.db.fluentsqlite.Expression != null ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . java.util.Set<java.lang.String> . boolean ( com.getbase.android.db.fluentsqlite.Expression . getTables ( ) ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( com.getbase.android.db.fluentsqlite.Expression . getSql ( ) , com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( T[] ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { super( com.getbase.android.db.fluentsqlite.Query.QueryBuilder ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( java.lang.String ) ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl .this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( null ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery = new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ( java.lang.String ) ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableAliasBuilderImpl ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . void ( null ) ; com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.CompoundQueryPart . com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery = new com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableOrSubquery ( com.getbase.android.db.fluentsqlite.Query ) ; return com.getbase.android.db.fluentsqlite.Query.QueryBuilderImpl.TableAliasBuilderImpl ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; com.getbase.android.db.fluentsqlite.Query = null ; }  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { java.lang.String = null ; com.getbase.android.db.fluentsqlite.Query = com.getbase.android.db.fluentsqlite.Query ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; com.getbase.android.db.fluentsqlite.Query = null ; }  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { java.lang.String = null ; com.getbase.android.db.fluentsqlite.Query = com.getbase.android.db.fluentsqlite.Query ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return java.lang.String != null ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return com.getbase.android.db.fluentsqlite.Query != null ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.RawQuery com.getbase.android.db.fluentsqlite.RawQuery ( )  <METHOD_END>
<METHOD_START> java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.FluentCursor com.getbase.android.db.fluentsqlite.FluentCursor ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase );  <METHOD_END>
<METHOD_START> private void ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { com.getbase.android.db.fluentsqlite.Query.QueryBuilder = com.getbase.android.db.fluentsqlite.Query.QueryBuilder ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.Number java.lang.Number ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.Number ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.Object java.lang.Object ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnListTableSelector com.getbase.android.db.fluentsqlite.Query.ColumnListTableSelector ( java.lang.String ... java.lang.String[] ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.ColumnListTableSelector ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnsTableSelector com.getbase.android.db.fluentsqlite.Query.ColumnsTableSelector ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.ColumnsTableSelector ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( com.getbase.android.db.fluentsqlite.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.UnionTypeSelector com.getbase.android.db.fluentsqlite.Query.UnionTypeSelector ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.UnionTypeSelector ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( com.getbase.android.db.fluentsqlite.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression , java.lang.Object ... java.lang.Object[] ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( com.getbase.android.db.fluentsqlite.Expression , java.lang.Object[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinBuilder com.getbase.android.db.fluentsqlite.Query.JoinBuilder ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.JoinBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinBuilder com.getbase.android.db.fluentsqlite.Query.JoinBuilder ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.JoinBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( int int ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.JoinTypeBuilder com.getbase.android.db.fluentsqlite.Query.JoinTypeBuilder ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.JoinTypeBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( com.getbase.android.db.fluentsqlite.Expression ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs @ java.lang.Override public final < T > com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String , T ... T[] ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String , T[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs @ java.lang.Override public final < T > com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression , T ... T[] ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( com.getbase.android.db.fluentsqlite.Expression , T[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( java.lang.String java.lang.String ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.RawQuery com.getbase.android.db.fluentsqlite.RawQuery ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.RawQuery ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . java.util.Set<java.lang.String> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.FluentCursor com.getbase.android.db.fluentsqlite.FluentCursor ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.FluentCursor ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) { return com.getbase.android.db.fluentsqlite.Query.QueryBuilder . com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( ) ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder com.getbase.android.db.fluentsqlite.Query.TableAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.String java.lang.String , java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.Number java.lang.Number );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( java.lang.Object java.lang.Object );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnListTableSelector com.getbase.android.db.fluentsqlite.Query.ColumnListTableSelector ( java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnsTableSelector com.getbase.android.db.fluentsqlite.Query.ColumnsTableSelector ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnAliasBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.ColumnsListAliasBuilder com.getbase.android.db.fluentsqlite.Query.ColumnsListAliasBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> < T > com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String , T ... T[] );  <METHOD_END>
<METHOD_START> < T > com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression , T ... T[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinBuilder com.getbase.android.db.fluentsqlite.Query.JoinBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinBuilder com.getbase.android.db.fluentsqlite.Query.JoinBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinTypeBuilder com.getbase.android.db.fluentsqlite.Query.JoinTypeBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder com.getbase.android.db.fluentsqlite.Query.JoinAliasBuilder ( com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinConstraintBuilder com.getbase.android.db.fluentsqlite.Query.JoinConstraintBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String ... java.lang.String[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinOnConstraintBuilder com.getbase.android.db.fluentsqlite.Query.JoinOnConstraintBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.JoinOnConstraintBuilder com.getbase.android.db.fluentsqlite.Query.JoinOnConstraintBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression , java.lang.Object ... java.lang.Object[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String , java.lang.Object ... java.lang.Object[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression , java.lang.Object ... java.lang.Object[] );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder com.getbase.android.db.fluentsqlite.Query.OrderingTermBuilder ( Expression com.getbase.android.db.fluentsqlite.Expression );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector com.getbase.android.db.fluentsqlite.Query.OrderingDirectionSelector ( CollatingSequence com.getbase.android.db.fluentsqlite.CollatingSequence );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder com.getbase.android.db.fluentsqlite.Query.LimitOffsetBuilder ( int int );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( int int );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.UnionTypeSelector com.getbase.android.db.fluentsqlite.Query.UnionTypeSelector ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart com.getbase.android.db.fluentsqlite.Query.NextQueryPartStart ( )  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Query.QueryBuilder com.getbase.android.db.fluentsqlite.Query.QueryBuilder ( )  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { java.lang.String = java.lang.String ; java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> private void ( ) {  }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.UpdateTableSelector com.getbase.android.db.fluentsqlite.UpdateTableSelector ( ) { return new com.getbase.android.db.fluentsqlite.Update ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { java.lang.String java.lang.String = Joiner . on ( STRING ) . join ( java.util.List<java.lang.String> ) ; if ( java.util.LinkedHashMap<java.lang.String,java.lang.String> . boolean ( ) ) { return com.getbase.android.db.fluentsqlite.SQLiteDatabase . update ( java.lang.String , com.getbase.android.db.fluentsqlite.ContentValues , java.lang.String , FluentIterable . from ( java.util.List<java.lang.Object> ) . transform ( Functions . toStringFunction ( ) ) . toArray ( java.lang.String .class ) ) ; } else { return int ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private int int ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase , java.lang.String java.lang.String ) { java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = Lists . newArrayList ( ) ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.LinkedHashMap<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) , new Function < java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> ) { return java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) + STRING + java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ; } } ) ) ) ; if ( com.getbase.android.db.fluentsqlite.ContentValues . size ( ) != NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> < java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > > java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> = com.getbase.android.db.fluentsqlite.ContentValues . valueSet ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> , new Function < java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > , java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> ) { return java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) + STRING ; } } ) ) ) ; java.util.List<java.lang.Object> . boolean ( Collections2 . transform ( java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> , new Function < java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > , java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> ) { return java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; } } ) ) ; java.util.List<java.lang.Object> . boolean ( java.util.List<java.lang.Object> ) ; if ( ! Strings . isNullOrEmpty ( java.lang.String ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.lang.String ) ; } SQLiteStatement com.getbase.android.db.fluentsqlite.SQLiteStatement = com.getbase.android.db.fluentsqlite.SQLiteDatabase . compileStatement ( java.lang.StringBuilder . java.lang.String ( ) ) ; try { int int = NUMBER ; for ( java.lang.String java.lang.String : java.util.LinkedHashMap<java.lang.String,java.lang.String> . java.util.Set<java.lang.String> ( ) ) { for ( java.lang.Object java.lang.Object : com.getbase.android.db.fluentsqlite.LinkedListMultimap<java.lang.String,java.lang.Object> . get ( java.lang.String ) ) { Utils . bindContentValueArg ( com.getbase.android.db.fluentsqlite.SQLiteStatement , int ++ , java.lang.Object ) ; } } for ( java.lang.Object java.lang.Object : java.util.List<java.lang.Object> ) { Utils . bindContentValueArg ( com.getbase.android.db.fluentsqlite.SQLiteStatement , int ++ , java.lang.Object ) ; } return com.getbase.android.db.fluentsqlite.SQLiteStatement . executeUpdateDelete ( ) ; } finally { com.getbase.android.db.fluentsqlite.SQLiteStatement . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> ) { return java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) + STRING + java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> ) { return java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) + STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> ) { return java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.Update com.getbase.android.db.fluentsqlite.Update ( java.lang.String java.lang.String ) { java.lang.String = checkNotNull ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.fluentsqlite.Update com.getbase.android.db.fluentsqlite.Update ( ContentValues com.getbase.android.db.fluentsqlite.ContentValues ) { for ( java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : com.getbase.android.db.fluentsqlite.ContentValues . valueSet ( ) ) { java.util.LinkedHashMap<java.lang.String,java.lang.String> . java.lang.String ( java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ) ; } com.getbase.android.db.fluentsqlite.ContentValues . putAll ( com.getbase.android.db.fluentsqlite.ContentValues ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.fluentsqlite.Update com.getbase.android.db.fluentsqlite.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { java.util.LinkedHashMap<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String ) ; com.getbase.android.db.fluentsqlite.LinkedListMultimap<java.lang.String,java.lang.Object> . removeAll ( java.lang.String ) ; Utils . addToContentValues ( java.lang.String , java.lang.Object , com.getbase.android.db.fluentsqlite.ContentValues ) ; return this ; }  <METHOD_END>
<METHOD_START> @ TargetApi ( HONEYCOMB ) public com.getbase.android.db.fluentsqlite.Update com.getbase.android.db.fluentsqlite.Update ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { com.getbase.android.db.fluentsqlite.ContentValues . remove ( java.lang.String ) ; com.getbase.android.db.fluentsqlite.LinkedListMultimap<java.lang.String,java.lang.Object> . removeAll ( java.lang.String ) ; java.util.LinkedHashMap<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String , STRING + java.lang.String + STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ TargetApi ( HONEYCOMB ) public com.getbase.android.db.fluentsqlite.Update com.getbase.android.db.fluentsqlite.Update ( java.lang.String java.lang.String , Expression com.getbase.android.db.fluentsqlite.Expression ) { com.getbase.android.db.fluentsqlite.Update ( java.lang.String , com.getbase.android.db.fluentsqlite.Expression . getSql ( ) ) ; com.getbase.android.db.fluentsqlite.LinkedListMultimap<java.lang.String,java.lang.Object> . putAll ( java.lang.String , java.util.Arrays . java.util.List ( com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( ) ) ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public final < T > com.getbase.android.db.fluentsqlite.Update com.getbase.android.db.fluentsqlite.Update ( java.lang.String java.lang.String , T ... T[] ) { if ( java.lang.String != null ) { java.util.List<java.lang.String> . boolean ( STRING + java.lang.String + STRING ) ; if ( T[] != null ) { java.util.Collections . boolean ( java.util.List<java.lang.Object> , T[] ) ; } } else { Preconditions . checkArgument ( T[] == null || T[] . int == NUMBER , STRING ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public final < T > com.getbase.android.db.fluentsqlite.Update com.getbase.android.db.fluentsqlite.Update ( Expression com.getbase.android.db.fluentsqlite.Expression , T ... T[] ) { return com.getbase.android.db.fluentsqlite.Update ( com.getbase.android.db.fluentsqlite.Expression . getSql ( ) , com.getbase.android.db.fluentsqlite.Expression . getMergedArgs ( T[] ) ) ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.Update com.getbase.android.db.fluentsqlite.Update ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> private void ( ) {  }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.ViewActions.ViewSelector<com.getbase.android.db.fluentsqlite.ViewActions.ViewSelectStatementChooser> < com.getbase.android.db.fluentsqlite.ViewActions.ViewSelectStatementChooser > com.getbase.android.db.fluentsqlite.ViewActions.ViewSelector<com.getbase.android.db.fluentsqlite.ViewActions.ViewSelectStatementChooser> ( ) { return new com.getbase.android.db.fluentsqlite.ViewActions.CreateViewAction ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.fluentsqlite.ViewActions.ViewSelector<com.getbase.android.db.fluentsqlite.ViewActions.ViewAction> < com.getbase.android.db.fluentsqlite.ViewActions.ViewAction > com.getbase.android.db.fluentsqlite.ViewActions.ViewSelector<com.getbase.android.db.fluentsqlite.ViewActions.ViewAction> ( ) { return new com.getbase.android.db.fluentsqlite.ViewActions.DropViewAction ( ) ; }  <METHOD_END>
<METHOD_START> void ( ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { com.getbase.android.db.fluentsqlite.SQLiteDatabase . execSQL ( STRING + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.ViewActions.ViewAction com.getbase.android.db.fluentsqlite.ViewActions.ViewAction ( java.lang.String java.lang.String ) { java.lang.String = checkNotNull ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> void ( ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase ) { com.getbase.android.db.fluentsqlite.SQLiteDatabase . execSQL ( STRING + java.lang.String + STRING + com.getbase.android.db.fluentsqlite.RawQuery . mRawQuery ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.ViewActions.ViewAction com.getbase.android.db.fluentsqlite.ViewActions.ViewAction ( Query com.getbase.android.db.fluentsqlite.Query ) { checkNotNull ( com.getbase.android.db.fluentsqlite.Query ) ; com.getbase.android.db.fluentsqlite.RawQuery = com.getbase.android.db.fluentsqlite.Query . toRawQuery ( ) ; checkArgument ( com.getbase.android.db.fluentsqlite.RawQuery . mRawQueryArgs . isEmpty ( ) , STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.ViewActions.ViewAction com.getbase.android.db.fluentsqlite.ViewActions.ViewAction ( QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder ) { checkNotNull ( com.getbase.android.db.fluentsqlite.QueryBuilder ) ; return com.getbase.android.db.fluentsqlite.ViewActions.ViewAction ( com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.fluentsqlite.ViewActions.ViewSelectStatementChooser com.getbase.android.db.fluentsqlite.ViewActions.ViewSelectStatementChooser ( java.lang.String java.lang.String ) { java.lang.String = checkNotNull ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> T T ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> void void ( SQLiteDatabase com.getbase.android.db.fluentsqlite.SQLiteDatabase );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.ViewActions.ViewAction com.getbase.android.db.fluentsqlite.ViewActions.ViewAction ( Query com.getbase.android.db.fluentsqlite.Query );  <METHOD_END>
<METHOD_START> com.getbase.android.db.fluentsqlite.ViewActions.ViewAction com.getbase.android.db.fluentsqlite.ViewActions.ViewAction ( QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder );  <METHOD_END>
<METHOD_START> public void ( Context com.getbase.android.db.loaders.Context ) { super( com.getbase.android.db.loaders.Context ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( T T ) { if ( isReset ( ) ) { void ( T ) ; return; } T T = T ; T = T ; if ( isStarted ( ) ) { if ( T != T ) { try { void ( T ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new java.lang.RuntimeException ( STRING + this , java.lang.Throwable ) ; } } super. deliverResult ( T ) ; } if ( T != T && T != null ) { void ( T ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( T T ) { super. onCanceled ( T ) ; void ( T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onReset ( ) ; void ( ) ; void ( T ) ; T = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { if ( T != null ) { void ( T ) ; } if ( takeContentChanged ( ) || T == null ) { forceLoad ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { cancelLoad ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( T T ) {  }  <METHOD_END>
<METHOD_START> protected void void ( T T ) {  }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { com.getbase.android.db.loaders.DisableableContentObserver . setEnabled ( true ) ; super. onStartLoading ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( ) { try { final Cursor com.getbase.android.db.loaders.Cursor = com.getbase.android.db.loaders.Cursor ( ) ; final T T = com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> . apply ( com.getbase.android.db.loaders.Cursor ) ; Preconditions . checkNotNull ( T , STRING ) ; if ( com.getbase.android.db.loaders.IdentityLinkedMap<T,com.getbase.android.db.loaders.Cursor> . get ( T ) != null ) { void ( com.getbase.android.db.loaders.Cursor ) ; } else { com.getbase.android.db.loaders.IdentityLinkedMap<T,com.getbase.android.db.loaders.Cursor> . put ( T , com.getbase.android.db.loaders.Cursor ) ; } return T ; } catch ( java.lang.Throwable java.lang.Throwable ) { throw new java.lang.RuntimeException ( STRING + this , java.lang.Throwable ) ; } }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.loaders.Cursor com.getbase.android.db.loaders.Cursor ( ) { Cursor com.getbase.android.db.loaders.Cursor = getContext ( ) . getContentResolver ( ) . query ( com.getbase.android.db.loaders.Uri , java.lang.String[] , java.lang.String , java.lang.String[] , java.lang.String ) ; if ( com.getbase.android.db.loaders.Cursor != null ) { com.getbase.android.db.loaders.Cursor . getCount ( ) ; } return com.getbase.android.db.loaders.Cursor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( T T ) { com.getbase.android.db.loaders.IdentityLinkedMap<T,com.getbase.android.db.loaders.Cursor> . get ( T ) . registerContentObserver ( com.getbase.android.db.loaders.DisableableContentObserver ) ; if ( ! boolean ) { ContentResolver com.getbase.android.db.loaders.ContentResolver = getContext ( ) . getContentResolver ( ) ; for ( Uri com.getbase.android.db.loaders.Uri : com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> ) { com.getbase.android.db.loaders.ContentResolver . registerContentObserver ( com.getbase.android.db.loaders.Uri , true , com.getbase.android.db.loaders.DisableableContentObserver ) ; } boolean = true ; } }  <METHOD_END>
<METHOD_START> public void ( Context com.getbase.android.db.loaders.Context , QueryData com.getbase.android.db.loaders.QueryData , ImmutableList < Uri > com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> , Function < Cursor , T > com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ) { super( com.getbase.android.db.loaders.Context ); com.getbase.android.db.loaders.DisableableContentObserver = new DisableableContentObserver ( new ForceLoadContentObserver ( ) ) ; com.getbase.android.db.loaders.Uri = com.getbase.android.db.loaders.QueryData . getUri ( ) ; java.lang.String[] = com.getbase.android.db.loaders.QueryData . getProjection ( ) ; java.lang.String = com.getbase.android.db.loaders.QueryData . getSelection ( ) ; java.lang.String[] = com.getbase.android.db.loaders.QueryData . getSelectionArgs ( ) ; java.lang.String = com.getbase.android.db.loaders.QueryData . getOrderBy ( ) ; com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> = com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ; com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> = com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { com.getbase.android.db.loaders.DisableableContentObserver . setEnabled ( false ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { com.getbase.android.db.loaders.DisableableContentObserver . setEnabled ( false ) ; void ( ) ; super. onReset ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( T T ) { void ( com.getbase.android.db.loaders.IdentityLinkedMap<T,com.getbase.android.db.loaders.Cursor> . remove ( T ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( boolean ) { getContext ( ) . getContentResolver ( ) . unregisterContentObserver ( com.getbase.android.db.loaders.DisableableContentObserver ) ; boolean = false ; } }  <METHOD_END>
<METHOD_START> private void void ( @ Nullable Cursor com.getbase.android.db.loaders.Cursor ) { if ( com.getbase.android.db.loaders.Cursor != null && ! com.getbase.android.db.loaders.Cursor . isClosed ( ) ) { com.getbase.android.db.loaders.Cursor . close ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.io.FileDescriptor java.io.FileDescriptor , java.io.PrintWriter java.io.PrintWriter , java.lang.String [] java.lang.String[] ) { super. dump ( java.lang.String , java.io.FileDescriptor , java.io.PrintWriter , java.lang.String[] ) ; java.io.PrintWriter . void ( java.lang.String ) ; java.io.PrintWriter . void ( STRING ) ; java.io.PrintWriter . void ( com.getbase.android.db.loaders.Uri ) ; java.io.PrintWriter . void ( java.lang.String ) ; java.io.PrintWriter . void ( STRING ) ; java.io.PrintWriter . void ( java.util.Arrays . java.lang.String ( java.lang.String[] ) ) ; java.io.PrintWriter . void ( java.lang.String ) ; java.io.PrintWriter . void ( STRING ) ; java.io.PrintWriter . void ( java.lang.String ) ; java.io.PrintWriter . void ( java.lang.String ) ; java.io.PrintWriter . void ( STRING ) ; java.io.PrintWriter . void ( java.util.Arrays . java.lang.String ( java.lang.String[] ) ) ; java.io.PrintWriter . void ( java.lang.String ) ; java.io.PrintWriter . void ( STRING ) ; java.io.PrintWriter . void ( java.lang.String ) ; java.io.PrintWriter . void ( java.lang.String ) ; java.io.PrintWriter . void ( STRING ) ; java.io.PrintWriter . void ( mResult ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return MoreObjects . toStringHelper ( this ) . add ( STRING , getId ( ) ) . add ( STRING , com.getbase.android.db.loaders.Uri ) . add ( STRING , java.util.Arrays . java.lang.String ( java.lang.String[] ) ) . add ( STRING , java.lang.String ) . add ( STRING , java.util.Arrays . java.lang.String ( java.lang.String[] ) ) . add ( STRING , java.lang.String ) . toString ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.loaders.CursorLoaderBuilder com.getbase.android.db.loaders.CursorLoaderBuilder ( Uri com.getbase.android.db.loaders.Uri ) { return new com.getbase.android.db.loaders.CursorLoaderBuilder ( com.getbase.android.db.loaders.Uri ) ; }  <METHOD_END>
<METHOD_START> private void ( Uri com.getbase.android.db.loaders.Uri ) { this . com.getbase.android.db.loaders.Query = ProviderAction . query ( com.getbase.android.db.loaders.Uri ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.CursorLoaderBuilder com.getbase.android.db.loaders.CursorLoaderBuilder ( java.lang.String ... java.lang.String[] ) { com.getbase.android.db.loaders.Query . projection ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public final < T > com.getbase.android.db.loaders.CursorLoaderBuilder com.getbase.android.db.loaders.CursorLoaderBuilder ( java.lang.String java.lang.String , T ... T[] ) { com.getbase.android.db.loaders.Query . where ( java.lang.String , T[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public < T > com.getbase.android.db.loaders.CursorLoaderBuilder com.getbase.android.db.loaders.CursorLoaderBuilder ( java.lang.String java.lang.String , java.util.Collection<T> < T > java.util.Collection<T> ) { com.getbase.android.db.loaders.Query . whereIn ( java.lang.String , java.util.Collection<T> ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.CursorLoaderBuilder com.getbase.android.db.loaders.CursorLoaderBuilder ( java.lang.String java.lang.String ) { com.getbase.android.db.loaders.Query . orderBy ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.CursorLoaderBuilder com.getbase.android.db.loaders.CursorLoaderBuilder ( Uri com.getbase.android.db.loaders.Uri ) { java.util.List<com.getbase.android.db.loaders.Uri> . add ( com.getbase.android.db.loaders.Uri ) ; return this ; }  <METHOD_END>
<METHOD_START> public < Out > com.getbase.android.db.loaders.TransformedRowLoaderBuilder<Out> < Out > com.getbase.android.db.loaders.TransformedRowLoaderBuilder<Out> ( Function < Cursor , Out > com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,Out> ) { return new TransformedRowLoaderBuilder <> ( com.getbase.android.db.loaders.Query . getQueryData ( ) , ImmutableList . copyOf ( java.util.List<com.getbase.android.db.loaders.Uri> ) , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,Out> ) ; }  <METHOD_END>
<METHOD_START> public < Out > com.getbase.android.db.loaders.TransformedLoaderBuilder<Out> < Out > com.getbase.android.db.loaders.TransformedLoaderBuilder<Out> ( Function < Cursor , Out > com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,Out> ) { return new TransformedLoaderBuilder <> ( com.getbase.android.db.loaders.Query . getQueryData ( ) , ImmutableList . copyOf ( java.util.List<com.getbase.android.db.loaders.Uri> ) , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,Out> ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.Cursor> < Cursor > com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.Cursor> ( Context com.getbase.android.db.loaders.Context ) { return new ComposedCursorLoader <> ( com.getbase.android.db.loaders.Context , com.getbase.android.db.loaders.Query . getQueryData ( ) , ImmutableList . copyOf ( java.util.List<com.getbase.android.db.loaders.Uri> ) , Functions .< Cursor > identity ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ContentObserver com.getbase.android.db.loaders.ContentObserver ) { super( new Handler ( ) ); com.getbase.android.db.loaders.ContentObserver = com.getbase.android.db.loaders.ContentObserver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean ) { if ( boolean ) { com.getbase.android.db.loaders.ContentObserver . onChange ( boolean ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { boolean = boolean ; }  <METHOD_END>
<METHOD_START> private void ( Key Key , Value Value ) { this . Key = Key ; this . Value = Value ; }  <METHOD_END>
<METHOD_START> public synchronized V V ( K K , V V ) { final int int = int ( K ) ; if ( int == - NUMBER ) { java.util.List<com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V>> . boolean ( new com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> <> ( K , V ) ) ; return null ; } else { com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> < K , V > com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> = java.util.List<com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V>> . com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> ( int ) ; V V = com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> . V ; com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> . V = V ; return V ; } }  <METHOD_END>
<METHOD_START> public synchronized V V ( K K ) { final int int = int ( K ) ; if ( int != - NUMBER ) { return java.util.List<com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V>> . com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> ( int ) . V ; } else { return null ; } }  <METHOD_END>
<METHOD_START> private int int ( K K ) { int int = NUMBER ; for ( com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> < K , V > com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> : java.util.List<com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V>> ) { if ( com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> . K == K ) { return int ; } int ++ ; } return - NUMBER ; }  <METHOD_END>
<METHOD_START> public synchronized V V ( K K ) { final int int = int ( K ) ; if ( int != - NUMBER ) { return java.util.List<com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V>> . com.getbase.android.db.loaders.IdentityLinkedMap.Entry<K,V> ( int ) . V ; } return null ; }  <METHOD_END>
<METHOD_START> public void ( final Cursor com.getbase.android.db.loaders.Cursor , final Function < ? super Cursor , T > com.getbase.android.db.loaders.Function<? super com.getbase.android.db.loaders.Cursor,T> ) { this . com.getbase.android.db.loaders.Cursor = Cursors . returnSameOrEmptyIfNull ( com.getbase.android.db.loaders.Cursor ) ; com.getbase.android.db.loaders.LruCache<java.lang.Integer,T> = new LruCache < java.lang.Integer , T > ( NUMBER ) { @ java.lang.Override protected T T ( java.lang.Integer java.lang.Integer ) { com.getbase.android.db.loaders.Cursor . moveToPosition ( java.lang.Integer ) ; return com.getbase.android.db.loaders.Function<,T> . apply ( com.getbase.android.db.loaders.Cursor ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected T T ( java.lang.Integer java.lang.Integer ) { com.getbase.android.db.loaders.Cursor . moveToPosition ( java.lang.Integer ) ; return com.getbase.android.db.loaders.Function<,T> . apply ( com.getbase.android.db.loaders.Cursor ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public T T ( int int ) { return com.getbase.android.db.loaders.LruCache<java.lang.Integer,T> . get ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return com.getbase.android.db.loaders.Cursor . getCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { com.getbase.android.db.loaders.Cursor . close ( ) ; }  <METHOD_END>
<METHOD_START> public void ( int int ) { int = int ; }  <METHOD_END>
<METHOD_START> public final void void ( Fragment com.getbase.android.db.loaders.Fragment ) { com.getbase.android.db.loaders.Fragment . getLoaderManager ( ) . destroyLoader ( int ) ; }  <METHOD_END>
<METHOD_START> public final void void ( FragmentActivity com.getbase.android.db.loaders.FragmentActivity ) { com.getbase.android.db.loaders.FragmentActivity . getSupportLoaderManager ( ) . destroyLoader ( int ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( Fragment com.getbase.android.db.loaders.Fragment , Bundle com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> < T > com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) { return com.getbase.android.db.loaders.Loader<T> ( com.getbase.android.db.loaders.Fragment . getLoaderManager ( ) , com.getbase.android.db.loaders.Fragment . getActivity ( ) , com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( FragmentActivity com.getbase.android.db.loaders.FragmentActivity , Bundle com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> < T > com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) { return com.getbase.android.db.loaders.Loader<T> ( com.getbase.android.db.loaders.FragmentActivity . getSupportLoaderManager ( ) , com.getbase.android.db.loaders.FragmentActivity , com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( LoaderManager com.getbase.android.db.loaders.LoaderManager , Context com.getbase.android.db.loaders.Context , Bundle com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> < T > com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) { return com.getbase.android.db.loaders.LoaderManager . restartLoader ( int , com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderCallbacks<T> ( com.getbase.android.db.loaders.Context . getApplicationContext ( ) , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( Fragment com.getbase.android.db.loaders.Fragment , Bundle com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> < T > com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) { return com.getbase.android.db.loaders.Loader<T> ( com.getbase.android.db.loaders.Fragment . getLoaderManager ( ) , com.getbase.android.db.loaders.Fragment . getActivity ( ) , com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( FragmentActivity com.getbase.android.db.loaders.FragmentActivity , Bundle com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> < T > com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) { return com.getbase.android.db.loaders.Loader<T> ( com.getbase.android.db.loaders.FragmentActivity . getSupportLoaderManager ( ) , com.getbase.android.db.loaders.FragmentActivity , com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( LoaderManager com.getbase.android.db.loaders.LoaderManager , Context com.getbase.android.db.loaders.Context , Bundle com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> < T > com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) { return com.getbase.android.db.loaders.LoaderManager . initLoader ( int , com.getbase.android.db.loaders.Bundle , com.getbase.android.db.loaders.LoaderCallbacks<T> ( com.getbase.android.db.loaders.Context . getApplicationContext ( ) , com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.loaders.LoaderCallbacks<T> < T > com.getbase.android.db.loaders.LoaderCallbacks<T> ( final Context com.getbase.android.db.loaders.Context , final com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> < T > com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> ) { return new LoaderCallbacks < T > ( ) { @ java.lang.Override public com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( int int , Bundle com.getbase.android.db.loaders.Bundle ) { Preconditions . checkArgument ( int == int ) ; return com.getbase.android.db.loaders.LoaderHelper .this . com.getbase.android.db.loaders.Loader<T> ( com.getbase.android.db.loaders.Context , com.getbase.android.db.loaders.Bundle ) ; } @ java.lang.Override public void void ( Loader < T > com.getbase.android.db.loaders.Loader<T> , T T ) { com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> . void ( com.getbase.android.db.loaders.Loader<T> , T ) ; } @ java.lang.Override public void void ( Loader < T > com.getbase.android.db.loaders.Loader<T> ) { com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> . void ( com.getbase.android.db.loaders.Loader<T> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( int int , Bundle com.getbase.android.db.loaders.Bundle ) { Preconditions . checkArgument ( int == int ) ; return com.getbase.android.db.loaders.LoaderHelper .this . com.getbase.android.db.loaders.Loader<T> ( com.getbase.android.db.loaders.Context , com.getbase.android.db.loaders.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Loader < T > com.getbase.android.db.loaders.Loader<T> , T T ) { com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> . void ( com.getbase.android.db.loaders.Loader<T> , T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Loader < T > com.getbase.android.db.loaders.Loader<T> ) { com.getbase.android.db.loaders.LoaderHelper.LoaderDataCallbacks<T> . void ( com.getbase.android.db.loaders.Loader<T> ) ; }  <METHOD_END>
<METHOD_START> protected abstract com.getbase.android.db.loaders.Loader<T> < T > com.getbase.android.db.loaders.Loader<T> ( Context com.getbase.android.db.loaders.Context , Bundle com.getbase.android.db.loaders.Bundle );  <METHOD_END>
<METHOD_START> public void void ( Loader < T > com.getbase.android.db.loaders.Loader<T> , T T );  <METHOD_END>
<METHOD_START> public void void ( Loader < T > com.getbase.android.db.loaders.Loader<T> );  <METHOD_END>
<METHOD_START> public void ( QueryData com.getbase.android.db.loaders.QueryData , ImmutableList < Uri > com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> , Function < Cursor , To > com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,To> ) { this . com.getbase.android.db.loaders.QueryData = com.getbase.android.db.loaders.QueryData ; this . com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> = com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> ; this . com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,To> = com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,To> ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.TransformedLoaderBuilder<To> < To > com.getbase.android.db.loaders.TransformedLoaderBuilder<To> ( Uri com.getbase.android.db.loaders.Uri ) { return new com.getbase.android.db.loaders.TransformedLoaderBuilder <> ( com.getbase.android.db.loaders.QueryData , ImmutableList .< Uri > builder ( ) . addAll ( com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> ) . add ( com.getbase.android.db.loaders.Uri ) . build ( ) , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,To> ) ; }  <METHOD_END>
<METHOD_START> public < NewTo > com.getbase.android.db.loaders.TransformedLoaderBuilder<NewTo> < NewTo > com.getbase.android.db.loaders.TransformedLoaderBuilder<NewTo> ( Function < To , NewTo > com.getbase.android.db.loaders.Function<To,NewTo> ) { return new com.getbase.android.db.loaders.TransformedLoaderBuilder <> ( com.getbase.android.db.loaders.QueryData , com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> , Functions . compose ( com.getbase.android.db.loaders.Function<To,NewTo> , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,To> ) ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.Loader<To> < To > com.getbase.android.db.loaders.Loader<To> ( Context com.getbase.android.db.loaders.Context ) { return new ComposedCursorLoader <> ( com.getbase.android.db.loaders.Context , com.getbase.android.db.loaders.QueryData , com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,To> ) ; }  <METHOD_END>
<METHOD_START> public void ( QueryData com.getbase.android.db.loaders.QueryData , ImmutableList < Uri > com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> , Function < Cursor , T > com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ) { this . com.getbase.android.db.loaders.QueryData = com.getbase.android.db.loaders.QueryData ; this . com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> = com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> ; this . com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> = com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ; }  <METHOD_END>
<METHOD_START> public < Out > com.getbase.android.db.loaders.TransformedRowLoaderBuilder<Out> < Out > com.getbase.android.db.loaders.TransformedRowLoaderBuilder<Out> ( final Function < T , Out > com.getbase.android.db.loaders.Function<T,Out> ) { return new com.getbase.android.db.loaders.TransformedRowLoaderBuilder <> ( com.getbase.android.db.loaders.QueryData , com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> , Functions . compose ( com.getbase.android.db.loaders.Function<T,Out> , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ) ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.TransformedLoaderBuilder<java.util.List<T>> < java.util.List<T> < T > > com.getbase.android.db.loaders.TransformedLoaderBuilder<java.util.List<T>> ( ) { return new TransformedLoaderBuilder <> ( com.getbase.android.db.loaders.QueryData , com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.util.List<T>> ( ) ) ; }  <METHOD_END>
<METHOD_START> public < Out > com.getbase.android.db.loaders.TransformedLoaderBuilder<Out> < Out > com.getbase.android.db.loaders.TransformedLoaderBuilder<Out> ( final Function < java.util.List<T> < T > , Out > com.getbase.android.db.loaders.Function<java.util.List<T>,Out> ) { return new TransformedLoaderBuilder <> ( com.getbase.android.db.loaders.QueryData , com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> , Functions . compose ( com.getbase.android.db.loaders.Function<java.util.List<T>,Out> , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.util.List<T>> ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.TransformedRowLoaderBuilder<T> < T > com.getbase.android.db.loaders.TransformedRowLoaderBuilder<T> ( Uri com.getbase.android.db.loaders.Uri ) { return new com.getbase.android.db.loaders.TransformedRowLoaderBuilder <> ( com.getbase.android.db.loaders.QueryData , ImmutableList .< Uri > builder ( ) . addAll ( com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> ) . add ( com.getbase.android.db.loaders.Uri ) . build ( ) , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ) ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.loaders.Loader<java.util.List<T>> < java.util.List<T> < T > > com.getbase.android.db.loaders.Loader<java.util.List<T>> ( Context com.getbase.android.db.loaders.Context ) { return new ComposedCursorLoader <> ( com.getbase.android.db.loaders.Context , com.getbase.android.db.loaders.QueryData , ImmutableList . copyOf ( com.getbase.android.db.loaders.ImmutableList<com.getbase.android.db.loaders.Uri> ) , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.util.List<T>> ( ) ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.util.List<T>> < Cursor , java.util.List<T> < T > > com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.util.List<T>> ( ) { return new Function < Cursor , java.util.List<T> < T > > ( ) { @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( Cursor com.getbase.android.db.loaders.Cursor ) { return Lists . newArrayList ( Cursors . toFluentIterable ( com.getbase.android.db.loaders.Cursor , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( Cursor com.getbase.android.db.loaders.Cursor ) { return Lists . newArrayList ( Cursors . toFluentIterable ( com.getbase.android.db.loaders.Cursor , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ) ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.util.List<T>> < Cursor , java.util.List<T> < T > > com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.util.List<T>> ( ) { return new Function < Cursor , java.util.List<T> < T > > ( ) { @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( Cursor com.getbase.android.db.loaders.Cursor ) { return new LazyCursorList <> ( com.getbase.android.db.loaders.Cursor , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.List<T> < T > java.util.List<T> ( Cursor com.getbase.android.db.loaders.Cursor ) { return new LazyCursorList <> ( com.getbase.android.db.loaders.Cursor , com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,T> ) ; }  <METHOD_END>
<METHOD_START> public void ( BatcherImpl com.getbase.android.db.provider.BatcherImpl , java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> < ConvertibleToOperation > java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ) { super( com.getbase.android.db.provider.BatcherImpl ); this . com.getbase.android.db.provider.BatcherImpl = com.getbase.android.db.provider.BatcherImpl ; this . java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> = java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ; }  <METHOD_END>
<METHOD_START> public void ( BatcherImpl com.getbase.android.db.provider.BatcherImpl , ConvertibleToOperation ... com.getbase.android.db.provider.ConvertibleToOperation[] ) { this( com.getbase.android.db.provider.BatcherImpl , java.util.Arrays . java.util.List ( com.getbase.android.db.provider.ConvertibleToOperation[] ) ); }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.BackRefBuilder com.getbase.android.db.provider.BackRefBuilder ( Insert com.getbase.android.db.provider.Insert , java.lang.String java.lang.String ) { for ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation : java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ) { com.getbase.android.db.provider.BatcherImpl . putValueBackRef ( com.getbase.android.db.provider.ConvertibleToOperation , new ValueBackRef ( com.getbase.android.db.provider.Insert , java.lang.String ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.BackRefBuilder com.getbase.android.db.provider.BackRefBuilder ( Insert com.getbase.android.db.provider.Insert , int int ) { for ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation : java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ) { com.getbase.android.db.provider.BatcherImpl . putSelectionBackRef ( com.getbase.android.db.provider.ConvertibleToOperation , new SelectionBackRef ( com.getbase.android.db.provider.Insert , int ) ) ; } return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.BackRefBuilder com.getbase.android.db.provider.BackRefBuilder ( ConvertibleToOperation ... com.getbase.android.db.provider.ConvertibleToOperation[] ) { java.util.Collections . boolean ( java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> , com.getbase.android.db.provider.ConvertibleToOperation[] ) ; return new BackRefBuilder ( this , com.getbase.android.db.provider.ConvertibleToOperation[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.BackRefBuilder com.getbase.android.db.provider.BackRefBuilder ( java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> < ConvertibleToOperation > java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ) { Iterables . addAll ( java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> , java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ) ; return new BackRefBuilder ( this , java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Batcher com.getbase.android.db.provider.Batcher ( UriDecorator com.getbase.android.db.provider.UriDecorator ) { com.getbase.android.db.provider.UriDecorator = MoreObjects . firstNonNull ( com.getbase.android.db.provider.UriDecorator , Utils . DUMMY_URI_DECORATOR ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ( ) { java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> = Lists . newArrayListWithCapacity ( java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> . size ( ) ) ; com.getbase.android.db.provider.BatcherImpl.BackRefResolver com.getbase.android.db.provider.BatcherImpl.BackRefResolver = com.getbase.android.db.provider.BatcherImpl.BackRefResolver ( ) ; for ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation : java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> ) { final Builder com.getbase.android.db.provider.Builder = com.getbase.android.db.provider.ConvertibleToOperation . toContentProviderOperationBuilder ( com.getbase.android.db.provider.UriDecorator ) ; com.getbase.android.db.provider.BatcherImpl.BackRefResolver . void ( com.getbase.android.db.provider.ConvertibleToOperation , com.getbase.android.db.provider.Builder ) ; java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . add ( com.getbase.android.db.provider.Builder . build ( ) ) ; } return java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ; }  <METHOD_END>
<METHOD_START> public void void ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation , ValueBackRef com.getbase.android.db.provider.ValueBackRef ) { if ( com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> == null ) { com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> = HashMultimap . create ( ) ; } com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> . put ( com.getbase.android.db.provider.ConvertibleToOperation , com.getbase.android.db.provider.ValueBackRef ) ; }  <METHOD_END>
<METHOD_START> public void void ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation , SelectionBackRef com.getbase.android.db.provider.SelectionBackRef ) { if ( com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> == null ) { com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> = HashMultimap . create ( ) ; } com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> . put ( com.getbase.android.db.provider.ConvertibleToOperation , com.getbase.android.db.provider.SelectionBackRef ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.provider.BatcherImpl.BackRefResolver com.getbase.android.db.provider.BatcherImpl.BackRefResolver ( ) { if ( com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> == null && com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> == null ) { return com.getbase.android.db.provider.BatcherImpl.BackRefResolver ; } else { return new com.getbase.android.db.provider.BatcherImpl.BackRefResolverImpl ( com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> , com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> ) ; } }  <METHOD_END>
<METHOD_START> void void ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation , Builder com.getbase.android.db.provider.Builder );  <METHOD_END>
<METHOD_START> public void ( Multimap < ConvertibleToOperation , ValueBackRef > com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> , Multimap < ConvertibleToOperation , SelectionBackRef > com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> ) { com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> = com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> ; com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> = com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> ; com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,java.lang.Integer> = HashMultimap . create ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation , Builder com.getbase.android.db.provider.Builder ) { if ( com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> != null && com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> . containsKey ( com.getbase.android.db.provider.ConvertibleToOperation ) ) { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; for ( ValueBackRef com.getbase.android.db.provider.ValueBackRef : com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.ValueBackRef> . get ( com.getbase.android.db.provider.ConvertibleToOperation ) ) { com.getbase.android.db.provider.ContentValues . put ( valueBackRef . column , int ( valueBackRef . parent ) ) ; } com.getbase.android.db.provider.Builder . withValueBackReferences ( com.getbase.android.db.provider.ContentValues ) ; } if ( com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> != null ) { for ( SelectionBackRef com.getbase.android.db.provider.SelectionBackRef : com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,com.getbase.android.db.provider.SelectionBackRef> . get ( com.getbase.android.db.provider.ConvertibleToOperation ) ) { com.getbase.android.db.provider.Builder . withSelectionBackReference ( selectionBackRef . selectionArgumentIndex , int ( selectionBackRef . parent ) ) ; } } com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,java.lang.Integer> . put ( com.getbase.android.db.provider.ConvertibleToOperation , com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,java.lang.Integer> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> private int int ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation ) { java.util.Collection<java.lang.Integer> < java.lang.Integer > java.util.Collection<java.lang.Integer> = com.getbase.android.db.provider.Multimap<com.getbase.android.db.provider.ConvertibleToOperation,java.lang.Integer> . get ( com.getbase.android.db.provider.ConvertibleToOperation ) ; if ( java.util.Collection<java.lang.Integer> . boolean ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } else if ( java.util.Collection<java.lang.Integer> . int ( ) > NUMBER ) { throw new java.lang.IllegalStateException ( STRING ) ; } return Iterables . getOnlyElement ( java.util.Collection<java.lang.Integer> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ConvertibleToOperation com.getbase.android.db.provider.ConvertibleToOperation , Builder com.getbase.android.db.provider.Builder ) {    }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.provider.Batcher com.getbase.android.db.provider.Batcher ( ) { return new BatcherImpl ( ) ; }  <METHOD_END>
<METHOD_START> public abstract com.getbase.android.db.provider.BackRefBuilder com.getbase.android.db.provider.BackRefBuilder ( ConvertibleToOperation ... com.getbase.android.db.provider.ConvertibleToOperation[] );  <METHOD_END>
<METHOD_START> public abstract com.getbase.android.db.provider.BackRefBuilder com.getbase.android.db.provider.BackRefBuilder ( java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> < ConvertibleToOperation > java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> );  <METHOD_END>
<METHOD_START> public abstract com.getbase.android.db.provider.Batcher com.getbase.android.db.provider.Batcher ( UriDecorator com.getbase.android.db.provider.UriDecorator );  <METHOD_END>
<METHOD_START> public abstract java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ( )  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( ContentProvider com.getbase.android.db.provider.ContentProvider ) { return com.getbase.android.db.provider.ContentProviderResult[] ( null , new ContentProviderCrudHandler ( com.getbase.android.db.provider.ContentProvider ) ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( ContentProviderClient com.getbase.android.db.provider.ContentProviderClient ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException { return com.getbase.android.db.provider.ContentProviderResult[] ( null , new ContentProviderClientCrudHandler ( com.getbase.android.db.provider.ContentProviderClient ) ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , ContentResolver com.getbase.android.db.provider.ContentResolver ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException { return com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String , new ContentResolverCrudHandler ( com.getbase.android.db.provider.ContentResolver ) ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , CrudHandler com.getbase.android.db.provider.CrudHandler ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException { return com.getbase.android.db.provider.CrudHandler . applyBatch ( java.lang.String , java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ( ) ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , ContentProvider com.getbase.android.db.provider.ContentProvider ) { return com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String , new ContentProviderCrudHandler ( com.getbase.android.db.provider.ContentProvider ) ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , ContentResolver com.getbase.android.db.provider.ContentResolver ) { return com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String , new ContentResolverCrudHandler ( com.getbase.android.db.provider.ContentResolver ) ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( ContentProviderClient com.getbase.android.db.provider.ContentProviderClient ) { return com.getbase.android.db.provider.ContentProviderResult[] ( null , new ContentProviderClientCrudHandler ( com.getbase.android.db.provider.ContentProviderClient ) ) ; }  <METHOD_END>
<METHOD_START> public final com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , CrudHandler com.getbase.android.db.provider.CrudHandler ) { try { return com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String , com.getbase.android.db.provider.CrudHandler ) ; } catch ( RemoteException | OperationApplicationException java.lang.Object ) { throw new java.lang.RuntimeException ( STRING , java.lang.Object ) ; } }  <METHOD_END>
<METHOD_START> void ( Insert com.getbase.android.db.provider.Insert , java.lang.String java.lang.String ) { this . com.getbase.android.db.provider.Insert = com.getbase.android.db.provider.Insert ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> void ( Insert com.getbase.android.db.provider.Insert , int int ) { this . com.getbase.android.db.provider.Insert = com.getbase.android.db.provider.Insert ; this . int = int ; }  <METHOD_END>
<METHOD_START> void ( Batcher com.getbase.android.db.provider.Batcher ) { this . com.getbase.android.db.provider.Batcher = com.getbase.android.db.provider.Batcher ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.BackRefBuilder com.getbase.android.db.provider.BackRefBuilder ( ConvertibleToOperation ... com.getbase.android.db.provider.ConvertibleToOperation[] ) { return com.getbase.android.db.provider.Batcher . append ( com.getbase.android.db.provider.ConvertibleToOperation[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.BackRefBuilder com.getbase.android.db.provider.BackRefBuilder ( java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> < ConvertibleToOperation > java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ) { return com.getbase.android.db.provider.Batcher . append ( java.lang.Iterable<com.getbase.android.db.provider.ConvertibleToOperation> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Batcher com.getbase.android.db.provider.Batcher ( UriDecorator com.getbase.android.db.provider.UriDecorator ) { return com.getbase.android.db.provider.Batcher . decorateUrisWith ( com.getbase.android.db.provider.UriDecorator ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ( ) { return com.getbase.android.db.provider.Batcher . operations ( ) ; }  <METHOD_END>
<METHOD_START> void ( ContentProviderClient com.getbase.android.db.provider.ContentProviderClient ) { this . com.getbase.android.db.provider.ContentProviderClient = com.getbase.android.db.provider.ContentProviderClient ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Cursor com.getbase.android.db.provider.Cursor ( Uri com.getbase.android.db.provider.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.ContentProviderClient . query ( com.getbase.android.db.provider.Uri , java.lang.String[] , java.lang.String , java.lang.String[] , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.getbase.android.db.provider.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.ContentProviderClient . delete ( com.getbase.android.db.provider.Uri , java.lang.String , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.getbase.android.db.provider.Uri , ContentValues com.getbase.android.db.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.ContentProviderClient . update ( com.getbase.android.db.provider.Uri , com.getbase.android.db.provider.ContentValues , java.lang.String , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( Uri com.getbase.android.db.provider.Uri , ContentValues com.getbase.android.db.provider.ContentValues ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.ContentProviderClient . insert ( com.getbase.android.db.provider.Uri , com.getbase.android.db.provider.ContentValues ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException { return com.getbase.android.db.provider.ContentProviderClient . applyBatch ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) ; }  <METHOD_END>
<METHOD_START> public void ( ContentProvider com.getbase.android.db.provider.ContentProvider ) { this . com.getbase.android.db.provider.ContentProvider = com.getbase.android.db.provider.ContentProvider ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Cursor com.getbase.android.db.provider.Cursor ( Uri com.getbase.android.db.provider.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.ContentProvider . query ( com.getbase.android.db.provider.Uri , java.lang.String[] , java.lang.String , java.lang.String[] , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.getbase.android.db.provider.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.ContentProvider . delete ( com.getbase.android.db.provider.Uri , java.lang.String , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.getbase.android.db.provider.Uri , ContentValues com.getbase.android.db.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.ContentProvider . update ( com.getbase.android.db.provider.Uri , com.getbase.android.db.provider.ContentValues , java.lang.String , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( Uri com.getbase.android.db.provider.Uri , ContentValues com.getbase.android.db.provider.ContentValues ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.ContentProvider . insert ( com.getbase.android.db.provider.Uri , com.getbase.android.db.provider.ContentValues ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException { return com.getbase.android.db.provider.ContentProvider . applyBatch ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) ; }  <METHOD_END>
<METHOD_START> void ( ContentResolver com.getbase.android.db.provider.ContentResolver ) { this . com.getbase.android.db.provider.ContentResolver = com.getbase.android.db.provider.ContentResolver ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Cursor com.getbase.android.db.provider.Cursor ( Uri com.getbase.android.db.provider.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) { return com.getbase.android.db.provider.ContentResolver . query ( com.getbase.android.db.provider.Uri , java.lang.String[] , java.lang.String , java.lang.String[] , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( Uri com.getbase.android.db.provider.Uri , ContentValues com.getbase.android.db.provider.ContentValues ) { return com.getbase.android.db.provider.ContentResolver . insert ( com.getbase.android.db.provider.Uri , com.getbase.android.db.provider.ContentValues ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException { return com.getbase.android.db.provider.ContentResolver . applyBatch ( java.lang.String , java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.getbase.android.db.provider.Uri , ContentValues com.getbase.android.db.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { return com.getbase.android.db.provider.ContentResolver . update ( com.getbase.android.db.provider.Uri , com.getbase.android.db.provider.ContentValues , java.lang.String , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.getbase.android.db.provider.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { return com.getbase.android.db.provider.ContentResolver . delete ( com.getbase.android.db.provider.Uri , java.lang.String , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> ContentProviderOperation . ContentProviderOperation.Builder ContentProviderOperation.Builder ( UriDecorator com.getbase.android.db.provider.UriDecorator );  <METHOD_END>
<METHOD_START> com.getbase.android.db.provider.ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation ( UriDecorator com.getbase.android.db.provider.UriDecorator );  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.Cursor com.getbase.android.db.provider.Cursor ( Uri com.getbase.android.db.provider.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) throws com.getbase.android.db.provider.RemoteException ;  <METHOD_END>
<METHOD_START> public int int ( Uri com.getbase.android.db.provider.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) throws com.getbase.android.db.provider.RemoteException ;  <METHOD_END>
<METHOD_START> public int int ( Uri com.getbase.android.db.provider.Uri , ContentValues com.getbase.android.db.provider.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) throws com.getbase.android.db.provider.RemoteException ;  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( Uri com.getbase.android.db.provider.Uri , ContentValues com.getbase.android.db.provider.ContentValues ) throws com.getbase.android.db.provider.RemoteException ;  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.ContentProviderResult [] com.getbase.android.db.provider.ContentProviderResult[] ( java.lang.String java.lang.String , java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException ;  <METHOD_END>
<METHOD_START> void ( Uri com.getbase.android.db.provider.Uri ) { super( com.getbase.android.db.provider.Uri ); }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public final < T > com.getbase.android.db.provider.Delete com.getbase.android.db.provider.Delete ( java.lang.String java.lang.String , T ... T[] ) { this . com.getbase.android.db.provider.Selection . append ( java.lang.String , T[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public < T > com.getbase.android.db.provider.Delete com.getbase.android.db.provider.Delete ( java.lang.String java.lang.String , java.util.Collection<T> < T > java.util.Collection<T> ) { this . com.getbase.android.db.provider.Selection . append ( java.lang.String + STRING + Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.Collection<T> , Utils . toEscapedSqlFunction ( ) ) ) + STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( CrudHandler com.getbase.android.db.provider.CrudHandler ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.CrudHandler . delete ( getUri ( ) , com.getbase.android.db.provider.Selection . getSelection ( ) , com.getbase.android.db.provider.Selection . getSelectionArgs ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation ( UriDecorator com.getbase.android.db.provider.UriDecorator ) { return com.getbase.android.db.provider.Builder ( com.getbase.android.db.provider.UriDecorator ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Builder com.getbase.android.db.provider.Builder ( UriDecorator com.getbase.android.db.provider.UriDecorator ) { return ContentProviderOperation . newDelete ( com.getbase.android.db.provider.UriDecorator . decorate ( getUri ( ) ) ) . withSelection ( com.getbase.android.db.provider.Selection . getSelection ( ) , com.getbase.android.db.provider.Selection . getSelectionArgs ( ) ) ; }  <METHOD_END>
<METHOD_START> void ( Uri com.getbase.android.db.provider.Uri ) { super( com.getbase.android.db.provider.Uri ); }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.Insert com.getbase.android.db.provider.Insert ( ContentValues com.getbase.android.db.provider.ContentValues ) { this . com.getbase.android.db.provider.ContentValues . putAll ( com.getbase.android.db.provider.ContentValues ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.Insert com.getbase.android.db.provider.Insert ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Utils . addToContentValues ( java.lang.String , java.lang.Object , com.getbase.android.db.provider.ContentValues ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( CrudHandler com.getbase.android.db.provider.CrudHandler ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.CrudHandler . insert ( getUri ( ) , com.getbase.android.db.provider.ContentValues ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation ( UriDecorator com.getbase.android.db.provider.UriDecorator ) { return com.getbase.android.db.provider.Builder ( com.getbase.android.db.provider.UriDecorator ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Builder com.getbase.android.db.provider.Builder ( UriDecorator com.getbase.android.db.provider.UriDecorator ) { return ContentProviderOperation . newInsert ( com.getbase.android.db.provider.UriDecorator . decorate ( getUri ( ) ) ) . withValues ( com.getbase.android.db.provider.ContentValues ) ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.String ... java.lang.String[] ) { java.util.Collections . boolean ( this . java.util.List<java.lang.String> , java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> java.lang.String [] java.lang.String[] ( ) { if ( ! java.util.List<java.lang.String> . boolean ( ) ) { return java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( java.lang.Object == null || java.lang.Class<? extends com.getbase.android.db.provider.Projection> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) return false ; com.getbase.android.db.provider.Projection com.getbase.android.db.provider.Projection = ( com.getbase.android.db.provider.Projection ) java.lang.Object ; return Objects . equal ( java.util.List<java.lang.String> , com.getbase.android.db.provider.Projection . java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.util.List<java.lang.String> . int ( ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.provider.Query com.getbase.android.db.provider.Query ( Uri com.getbase.android.db.provider.Uri ) { return new Query ( com.getbase.android.db.provider.Uri ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.provider.Insert com.getbase.android.db.provider.Insert ( Uri com.getbase.android.db.provider.Uri ) { return new Insert ( com.getbase.android.db.provider.Uri ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.provider.Delete com.getbase.android.db.provider.Delete ( Uri com.getbase.android.db.provider.Uri ) { return new Delete ( com.getbase.android.db.provider.Uri ) ; }  <METHOD_END>
<METHOD_START> public static com.getbase.android.db.provider.Update com.getbase.android.db.provider.Update ( Uri com.getbase.android.db.provider.Uri ) { return new Update ( com.getbase.android.db.provider.Uri ) ; }  <METHOD_END>
<METHOD_START> protected void ( Uri com.getbase.android.db.provider.Uri ) { com.getbase.android.db.provider.Uri = com.getbase.android.db.provider.Uri ; }  <METHOD_END>
<METHOD_START> protected com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( ) { return com.getbase.android.db.provider.Uri ; }  <METHOD_END>
<METHOD_START> public T T ( ContentProvider com.getbase.android.db.provider.ContentProvider ) { try { return T ( new ContentProviderCrudHandler ( com.getbase.android.db.provider.ContentProvider ) ) ; } catch ( RemoteException com.getbase.android.db.provider.RemoteException ) { throw new java.lang.RuntimeException ( STRING , com.getbase.android.db.provider.RemoteException ) ; } }  <METHOD_END>
<METHOD_START> public T T ( Context com.getbase.android.db.provider.Context ) { return T ( com.getbase.android.db.provider.Context . getContentResolver ( ) ) ; }  <METHOD_END>
<METHOD_START> public T T ( ContentResolver com.getbase.android.db.provider.ContentResolver ) { try { return T ( new ContentResolverCrudHandler ( com.getbase.android.db.provider.ContentResolver ) ) ; } catch ( RemoteException com.getbase.android.db.provider.RemoteException ) { throw new java.lang.RuntimeException ( STRING , com.getbase.android.db.provider.RemoteException ) ; } }  <METHOD_END>
<METHOD_START> public T T ( ContentProviderClient com.getbase.android.db.provider.ContentProviderClient ) throws com.getbase.android.db.provider.RemoteException { return T ( new ContentProviderClientCrudHandler ( com.getbase.android.db.provider.ContentProviderClient ) ) ; }  <METHOD_END>
<METHOD_START> protected abstract T T ( CrudHandler com.getbase.android.db.provider.CrudHandler ) throws com.getbase.android.db.provider.RemoteException ;  <METHOD_END>
<METHOD_START> void ( Uri com.getbase.android.db.provider.Uri ) { super( com.getbase.android.db.provider.Uri ); }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.Query com.getbase.android.db.provider.Query ( java.lang.String ... java.lang.String[] ) { this . com.getbase.android.db.provider.Projection . append ( java.lang.String[] ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public final < T > com.getbase.android.db.provider.Query com.getbase.android.db.provider.Query ( java.lang.String java.lang.String , T ... T[] ) { this . com.getbase.android.db.provider.Selection . append ( java.lang.String , T[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public < T > com.getbase.android.db.provider.Query com.getbase.android.db.provider.Query ( java.lang.String java.lang.String , java.util.Collection<T> < T > java.util.Collection<T> ) { this . com.getbase.android.db.provider.Selection . append ( java.lang.String + STRING + Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.Collection<T> , Utils . toEscapedSqlFunction ( ) ) ) + STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.Query com.getbase.android.db.provider.Query ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.QueryData com.getbase.android.db.provider.QueryData ( ) { return new QueryData ( getUri ( ) , com.getbase.android.db.provider.Projection . getProjection ( ) , com.getbase.android.db.provider.Selection . getSelection ( ) , com.getbase.android.db.provider.Selection . getSelectionArgs ( ) , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.FluentCursor com.getbase.android.db.provider.FluentCursor ( CrudHandler com.getbase.android.db.provider.CrudHandler ) throws com.getbase.android.db.provider.RemoteException { final Cursor com.getbase.android.db.provider.Cursor = com.getbase.android.db.provider.CrudHandler . query ( getUri ( ) , com.getbase.android.db.provider.Projection . getProjection ( ) , com.getbase.android.db.provider.Selection . getSelection ( ) , com.getbase.android.db.provider.Selection . getSelectionArgs ( ) , java.lang.String ) ; return new FluentCursor ( com.getbase.android.db.provider.Cursor ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( java.lang.Object == null || java.lang.Class<? extends com.getbase.android.db.provider.Query> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) return false ; com.getbase.android.db.provider.Query com.getbase.android.db.provider.Query = ( com.getbase.android.db.provider.Query ) java.lang.Object ; return Objects . equal ( getUri ( ) , com.getbase.android.db.provider.Query . getUri ( ) ) && Objects . equal ( java.lang.String , com.getbase.android.db.provider.Query . java.lang.String ) && Objects . equal ( com.getbase.android.db.provider.Projection , com.getbase.android.db.provider.Query . com.getbase.android.db.provider.Projection ) && Objects . equal ( com.getbase.android.db.provider.Selection , com.getbase.android.db.provider.Query . com.getbase.android.db.provider.Selection ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return Objects . hashCode ( getUri ( ) , com.getbase.android.db.provider.Projection , com.getbase.android.db.provider.Selection , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return STRING + java.lang.String + STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs final < T > void void ( java.lang.String java.lang.String , T ... T[] ) { Preconditions . checkArgument ( java.lang.String != null || T[] == null || T[] . int == NUMBER , STRING ) ; if ( java.lang.String != null ) { this . java.util.List<java.lang.String> . boolean ( java.lang.String ) ; if ( T[] != null ) { java.util.Collections . boolean ( this . java.util.List<java.lang.Object> , T[] ) ; } } }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { if ( java.util.List<java.lang.String> . boolean ( ) ) { return null ; } return Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.List<java.lang.String> , com.getbase.android.db.provider.Function<java.lang.String,java.lang.String> ) ) ; }  <METHOD_END>
<METHOD_START> java.lang.String [] java.lang.String[] ( ) { if ( java.util.List<java.lang.Object> . boolean ( ) ) { return null ; } return Collections2 . transform ( java.util.List<java.lang.Object> , Functions . toStringFunction ( ) ) . toArray ( new java.lang.String [ java.util.List<java.lang.Object> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( java.lang.Object == null || java.lang.Class<? extends com.getbase.android.db.provider.Selection> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) return false ; com.getbase.android.db.provider.Selection com.getbase.android.db.provider.Selection = ( com.getbase.android.db.provider.Selection ) java.lang.Object ; return Objects . equal ( java.util.List<java.lang.String> , com.getbase.android.db.provider.Selection . java.util.List<java.lang.String> ) && Objects . equal ( java.util.List<java.lang.Object> , com.getbase.android.db.provider.Selection . java.util.List<java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return Objects . hashCode ( java.util.List<java.lang.String> , java.util.List<java.lang.Object> ) ; }  <METHOD_END>
<METHOD_START> void ( Uri com.getbase.android.db.provider.Uri ) { super( com.getbase.android.db.provider.Uri ); }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.Update com.getbase.android.db.provider.Update ( ContentValues com.getbase.android.db.provider.ContentValues ) { this . com.getbase.android.db.provider.ContentValues . putAll ( com.getbase.android.db.provider.ContentValues ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.getbase.android.db.provider.Update com.getbase.android.db.provider.Update ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { Utils . addToContentValues ( java.lang.String , java.lang.Object , com.getbase.android.db.provider.ContentValues ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.SafeVarargs public final < T > com.getbase.android.db.provider.Update com.getbase.android.db.provider.Update ( java.lang.String java.lang.String , T ... T[] ) { this . com.getbase.android.db.provider.Selection . append ( java.lang.String , T[] ) ; return this ; }  <METHOD_END>
<METHOD_START> public < T > com.getbase.android.db.provider.Update com.getbase.android.db.provider.Update ( java.lang.String java.lang.String , java.util.Collection<T> < T > java.util.Collection<T> ) { this . com.getbase.android.db.provider.Selection . append ( java.lang.String + STRING + Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.Collection<T> , Utils . toEscapedSqlFunction ( ) ) ) + STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Integer java.lang.Integer ( CrudHandler com.getbase.android.db.provider.CrudHandler ) throws com.getbase.android.db.provider.RemoteException { return com.getbase.android.db.provider.CrudHandler . update ( getUri ( ) , com.getbase.android.db.provider.ContentValues , com.getbase.android.db.provider.Selection . getSelection ( ) , com.getbase.android.db.provider.Selection . getSelectionArgs ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation ( UriDecorator com.getbase.android.db.provider.UriDecorator ) { return com.getbase.android.db.provider.Builder ( com.getbase.android.db.provider.UriDecorator ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Builder com.getbase.android.db.provider.Builder ( UriDecorator com.getbase.android.db.provider.UriDecorator ) { return ContentProviderOperation . newUpdate ( com.getbase.android.db.provider.UriDecorator . decorate ( getUri ( ) ) ) . withSelection ( com.getbase.android.db.provider.Selection . getSelection ( ) , com.getbase.android.db.provider.Selection . getSelectionArgs ( ) ) . withValues ( com.getbase.android.db.provider.ContentValues ) ; }  <METHOD_END>
<METHOD_START> com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( Uri com.getbase.android.db.provider.Uri );  <METHOD_END>
<METHOD_START> private void ( ) {  }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( Uri com.getbase.android.db.provider.Uri ) { return com.getbase.android.db.provider.Uri ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object , ContentValues com.getbase.android.db.provider.ContentValues ) { if ( java.lang.Object == null ) { com.getbase.android.db.provider.ContentValues . putNull ( java.lang.String ) ; } else if ( java.lang.Object instanceof java.lang.String ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( java.lang.String ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Byte ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( java.lang.Byte ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Short ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( java.lang.Short ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Integer ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( java.lang.Integer ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Long ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( java.lang.Long ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Float ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( java.lang.Float ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Double ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( java.lang.Double ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Boolean ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( java.lang.Boolean ) java.lang.Object ) ; } else if ( java.lang.Object instanceof byte [] ) { com.getbase.android.db.provider.ContentValues . put ( java.lang.String , ( byte [] ) java.lang.Object ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( SQLiteStatement com.getbase.android.db.provider.SQLiteStatement , int int , java.lang.Object java.lang.Object ) { if ( java.lang.Object == null ) { com.getbase.android.db.provider.SQLiteStatement . bindNull ( int ) ; } else if ( java.lang.Object instanceof java.lang.String ) { com.getbase.android.db.provider.SQLiteStatement . bindString ( int , ( java.lang.String ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Byte ) { com.getbase.android.db.provider.SQLiteStatement . bindLong ( int , java.lang.Long . java.lang.Long ( ( java.lang.Byte ) java.lang.Object ) ) ; } else if ( java.lang.Object instanceof java.lang.Short ) { com.getbase.android.db.provider.SQLiteStatement . bindLong ( int , java.lang.Long . java.lang.Long ( ( java.lang.Short ) java.lang.Object ) ) ; } else if ( java.lang.Object instanceof java.lang.Integer ) { com.getbase.android.db.provider.SQLiteStatement . bindLong ( int , java.lang.Long . java.lang.Long ( ( java.lang.Integer ) java.lang.Object ) ) ; } else if ( java.lang.Object instanceof java.lang.Long ) { com.getbase.android.db.provider.SQLiteStatement . bindLong ( int , ( java.lang.Long ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Float ) { com.getbase.android.db.provider.SQLiteStatement . bindDouble ( int , ( java.lang.Float ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Double ) { com.getbase.android.db.provider.SQLiteStatement . bindDouble ( int , ( java.lang.Double ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Boolean ) { com.getbase.android.db.provider.SQLiteStatement . bindLong ( int , ( java.lang.Boolean ) java.lang.Object ? NUMBER : NUMBER ) ; } else if ( java.lang.Object instanceof byte [] ) { com.getbase.android.db.provider.SQLiteStatement . bindBlob ( int , ( byte [] ) java.lang.Object ) ; } else { throw new java.lang.IllegalArgumentException ( STRING + java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> public static java.lang.Object java.lang.Object ( java.lang.Object java.lang.Object ) { if ( java.lang.Object == null ) { return null ; } if ( java.lang.Object instanceof java.lang.Boolean ) { return ( java.lang.Boolean ) java.lang.Object ? NUMBER : NUMBER ; } if( java.lang.Object instanceof java.lang.Number ) { return java.lang.Object ; } return DatabaseUtils . sqlEscapeString ( java.lang.Object . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public static < T > com.getbase.android.db.provider.Function<T,java.lang.Object> < T , java.lang.Object > com.getbase.android.db.provider.Function<T,java.lang.Object> ( ) { return new Function < T , java.lang.Object > ( ) { @ Nullable @ java.lang.Override public java.lang.Object java.lang.Object ( @ Nullable T T ) { return java.lang.Object ( T ) ; } } ; }  <METHOD_END>
<METHOD_START> @ Nullable @ java.lang.Override public java.lang.Object java.lang.Object ( @ Nullable T T ) { return java.lang.Object ( T ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Cursor com.getbase.android.db.cursors.Cursor = null ; final FluentIterable < java.lang.Object > com.getbase.android.db.cursors.FluentIterable<java.lang.Object> = Cursors . toFluentIterable ( com.getbase.android.db.cursors.Cursor , new Function < Cursor , java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( Cursor com.getbase.android.db.cursors.Cursor ) { return null ; } } ) ; assertThat ( com.getbase.android.db.cursors.FluentIterable<java.lang.Object> ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Cursor com.getbase.android.db.cursors.Cursor ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = new MatrixCursor ( new java.lang.String [] { STRING } ) ; Cursors . closeQuietly ( com.getbase.android.db.cursors.MatrixCursor ) ; assertThat ( com.getbase.android.db.cursors.MatrixCursor . isClosed ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursors . closeQuietly ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursor com.getbase.android.db.cursors.Cursor = mock ( Cursor .class ) ; when ( com.getbase.android.db.cursors.Cursor . isClosed ( ) ) . thenReturn ( true ) ; Cursors . closeQuietly ( com.getbase.android.db.cursors.Cursor ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( Cursor com.getbase.android.db.cursors.Cursor ) { throw new java.lang.RuntimeException ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = new MatrixCursor ( new java.lang.String [] { java.lang.String } ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; com.getbase.android.db.cursors.FluentCursor . toFluentIterable ( Functions . constant ( null ) ) ; assertThat ( com.getbase.android.db.cursors.FluentCursor . isClosed ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; final FluentIterable < java.lang.Long > com.getbase.android.db.cursors.FluentIterable<java.lang.Long> = com.getbase.android.db.cursors.FluentCursor . toFluentIterable ( new Function < Cursor , java.lang.Long > ( ) { @ java.lang.Override public java.lang.Long java.lang.Long ( Cursor com.getbase.android.db.cursors.Cursor ) { return com.getbase.android.db.cursors.Cursor . getLong ( com.getbase.android.db.cursors.Cursor . getColumnIndexOrThrow ( java.lang.String ) ) ; } } ) ; assertThat ( com.getbase.android.db.cursors.FluentIterable<java.lang.Long> ) . hasSize ( com.getbase.android.db.cursors.MatrixCursor . getCount ( ) ) ; assertThat ( com.getbase.android.db.cursors.FluentIterable<java.lang.Long> . allMatch ( new Predicate < java.lang.Long > ( ) { @ java.lang.Override public boolean boolean ( java.lang.Long java.lang.Long ) { return java.lang.Long . boolean ( NUMBER ) ; } } ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Long java.lang.Long ( Cursor com.getbase.android.db.cursors.Cursor ) { return com.getbase.android.db.cursors.Cursor . getLong ( com.getbase.android.db.cursors.Cursor . getColumnIndexOrThrow ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Long java.lang.Long ) { return java.lang.Long . boolean ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( null ) ; assertThat ( com.getbase.android.db.cursors.FluentCursor . getCount ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( null ) ; com.getbase.android.db.cursors.FluentCursor . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( null ) ; com.getbase.android.db.cursors.FluentCursor . getColumnIndexOrThrow ( java.lang.String ) ; com.getbase.android.db.cursors.FluentCursor . getColumnIndex ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) ; try { com.getbase.android.db.cursors.FluentCursor . toFluentIterable ( com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Object> ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { } assertThat ( com.getbase.android.db.cursors.FluentCursor . isClosed ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; final LinkedHashMultimap < java.lang.Integer , java.lang.Long > com.getbase.android.db.cursors.LinkedHashMultimap<java.lang.Integer,java.lang.Long> = com.getbase.android.db.cursors.FluentCursor . toMultimap ( SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) , SingleRowTransforms . getColumn ( java.lang.String ) . asLong ( ) ) ; assertThat ( com.getbase.android.db.cursors.LinkedHashMultimap<java.lang.Integer,java.lang.Long> . size ( ) ) . isEqualTo ( com.getbase.android.db.cursors.MatrixCursor . getCount ( ) ) ; assertThat ( com.getbase.android.db.cursors.LinkedHashMultimap<java.lang.Integer,java.lang.Long> . keySet ( ) ) . containsExactly ( ContiguousSet . create ( Range . closed ( NUMBER , NUMBER ) , DiscreteDomain . integers ( ) ) . toArray ( ) ) ; assertThat ( com.getbase.android.db.cursors.LinkedHashMultimap<java.lang.Integer,java.lang.Long> . values ( ) ) . containsExactlyElementsIn ( java.util.Collections . java.util.List<java.lang.Long> ( NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; final LinkedHashMultimap < java.lang.Integer , java.lang.Long > com.getbase.android.db.cursors.LinkedHashMultimap<java.lang.Integer,java.lang.Long> = com.getbase.android.db.cursors.FluentCursor . toMultimap ( SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) , SingleRowTransforms . getColumn ( java.lang.String ) . asLong ( ) ) ; assertThat ( Lists . newArrayList ( com.getbase.android.db.cursors.LinkedHashMultimap<java.lang.Integer,java.lang.Long> . keySet ( ) ) ) . containsExactly ( NUMBER , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = new MatrixCursor ( new java.lang.String [] { java.lang.String } ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; com.getbase.android.db.cursors.FluentCursor . toMultimap ( Functions . constant ( null ) , Functions . constant ( null ) ) ; assertThat ( com.getbase.android.db.cursors.FluentCursor . isClosed ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) ; try { com.getbase.android.db.cursors.FluentCursor . toMultimap ( com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Object> , com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Object> ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { } assertThat ( com.getbase.android.db.cursors.FluentCursor . isClosed ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; final java.util.Map<java.lang.Integer,java.lang.Long> < java.lang.Integer , java.lang.Long > java.util.Map<java.lang.Integer,java.lang.Long> = com.getbase.android.db.cursors.FluentCursor . toMap ( SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) , SingleRowTransforms . getColumn ( java.lang.String ) . asLong ( ) ) ; assertThat ( java.util.Map<java.lang.Integer,java.lang.Long> . int ( ) ) . isEqualTo ( com.getbase.android.db.cursors.MatrixCursor . getCount ( ) ) ; assertThat ( java.util.Map<java.lang.Integer,java.lang.Long> . java.util.Set<java.lang.Integer> ( ) ) . containsExactly ( ContiguousSet . create ( Range . closed ( NUMBER , NUMBER ) , DiscreteDomain . integers ( ) ) . toArray ( ) ) ; assertThat ( java.util.Map<java.lang.Integer,java.lang.Long> . java.util.Collection<java.lang.Long> ( ) ) . containsExactlyElementsIn ( java.util.Collections . java.util.List<java.lang.Long> ( NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = new MatrixCursor ( new java.lang.String [] { java.lang.String , java.lang.String } ) ; com.getbase.android.db.cursors.MatrixCursor . addRow ( new java.lang.Object [] { NUMBER , NUMBER } ) ; com.getbase.android.db.cursors.MatrixCursor . addRow ( new java.lang.Object [] { NUMBER , NUMBER } ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; com.getbase.android.db.cursors.FluentCursor . toMap ( SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) , SingleRowTransforms . getColumn ( java.lang.String ) . asLong ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; final java.util.Map<java.lang.Integer,java.lang.Long> < java.lang.Integer , java.lang.Long > java.util.Map<java.lang.Integer,java.lang.Long> = com.getbase.android.db.cursors.FluentCursor . toMap ( SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) , SingleRowTransforms . getColumn ( java.lang.String ) . asLong ( ) ) ; assertThat ( Lists . newArrayList ( java.util.Map<java.lang.Integer,java.lang.Long> . java.util.Set<java.lang.Integer> ( ) ) ) . containsExactly ( NUMBER , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = new MatrixCursor ( new java.lang.String [] { java.lang.String } ) ; final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) ; com.getbase.android.db.cursors.FluentCursor . toMap ( Functions . constant ( null ) , Functions . constant ( null ) ) ; assertThat ( com.getbase.android.db.cursors.FluentCursor . isClosed ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final FluentCursor com.getbase.android.db.cursors.FluentCursor = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) ; try { com.getbase.android.db.cursors.FluentCursor . toMap ( com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Object> , com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Object> ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { } assertThat ( com.getbase.android.db.cursors.FluentCursor . isClosed ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { new FluentCursor ( null ) . toFluentIterable ( Functions . constant ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursor com.getbase.android.db.cursors.Cursor = mock ( Cursor .class ) ; new FluentCursor ( com.getbase.android.db.cursors.Cursor ) . toRowCount ( ) ; verify ( com.getbase.android.db.cursors.Cursor ) . close ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursor com.getbase.android.db.cursors.Cursor = mock ( Cursor .class ) ; when ( com.getbase.android.db.cursors.Cursor . getCount ( ) ) . thenReturn ( NUMBER ) ; assertThat ( new FluentCursor ( com.getbase.android.db.cursors.Cursor ) . toRowCount ( ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) . toOnlyElement ( Functions . constant ( null ) ) ; assertThat ( com.getbase.android.db.cursors.MatrixCursor ) . isClosed ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) . toOnlyElement ( Functions . constant ( null ) , null ) ; assertThat ( com.getbase.android.db.cursors.MatrixCursor ) . isClosed ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.util.NoSuchElementException .class ) public void void ( ) java.lang.Exception { new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) . toOnlyElement ( Functions . constant ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.Integer java.lang.Integer = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) . toOnlyElement ( Functions . constant ( NUMBER ) , NUMBER ) ; assertThat ( java.lang.Integer ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) . toOnlyElement ( Functions . constant ( null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) . toOnlyElement ( Functions . constant ( null ) , null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; java.lang.Integer java.lang.Integer = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) . toOnlyElement ( Functions . constant ( NUMBER ) ) ; assertThat ( java.lang.Integer ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { MatrixCursor com.getbase.android.db.cursors.MatrixCursor = com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ; java.lang.Integer java.lang.Integer = new FluentCursor ( com.getbase.android.db.cursors.MatrixCursor ) . toOnlyElement ( Functions . constant ( NUMBER ) , NUMBER ) ; assertThat ( java.lang.Integer ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursor com.getbase.android.db.cursors.Cursor = spy ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) ; new FluentCursor ( com.getbase.android.db.cursors.Cursor ) . toOnlyElement ( Functions . constant ( null ) ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToNext ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToLast ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToPrevious ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToPosition ( intThat ( not ( equalTo ( NUMBER ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursor com.getbase.android.db.cursors.Cursor = spy ( com.getbase.android.db.cursors.MatrixCursor ( NUMBER ) ) ; new FluentCursor ( com.getbase.android.db.cursors.Cursor ) . toOnlyElement ( Functions . constant ( null ) , null ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToNext ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToLast ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToPrevious ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToPosition ( intThat ( not ( equalTo ( NUMBER ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursor com.getbase.android.db.cursors.Cursor = mock ( Cursor .class ) ; new FluentCursor ( com.getbase.android.db.cursors.Cursor ) . toRowCount ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToFirst ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToNext ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToLast ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToPrevious ( ) ; verify ( com.getbase.android.db.cursors.Cursor , never ( ) ) . moveToPosition ( anyInt ( ) ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.cursors.MatrixCursor com.getbase.android.db.cursors.MatrixCursor ( int int ) { final MatrixCursor com.getbase.android.db.cursors.MatrixCursor = new MatrixCursor ( new java.lang.String [] { java.lang.String , java.lang.String } ) ; for ( int int = NUMBER ; int < int ; int ++ ) { com.getbase.android.db.cursors.MatrixCursor . addRow ( new java.lang.Object [] { int , NUMBER } ) ; } return com.getbase.android.db.cursors.MatrixCursor ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; when ( com.getbase.android.db.cursors.Cursor . getColumnIndexOrThrow ( java.lang.String ) ) . thenReturn ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursor com.getbase.android.db.cursors.Cursor = mock ( Cursor .class ) ; Function < Cursor , java.lang.Integer > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> = SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) ; com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> . apply ( com.getbase.android.db.cursors.Cursor ) ; com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> . apply ( com.getbase.android.db.cursors.Cursor ) ; verify ( com.getbase.android.db.cursors.Cursor , times ( NUMBER ) ) . getColumnIndexOrThrow ( anyString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Cursor com.getbase.android.db.cursors.Cursor = mock ( Cursor .class ) ; when ( com.getbase.android.db.cursors.Cursor . getColumnIndexOrThrow ( java.lang.String ) ) . thenReturn ( NUMBER ) ; when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getInt ( NUMBER ) ) . thenReturn ( NUMBER ) ; when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenThrow ( new java.lang.IllegalArgumentException ( ) ) ; when ( com.getbase.android.db.cursors.Cursor . getInt ( NUMBER ) ) . thenThrow ( new java.lang.IllegalArgumentException ( ) ) ; Cursor com.getbase.android.db.cursors.Cursor = mock ( Cursor .class ) ; when ( com.getbase.android.db.cursors.Cursor . getColumnIndexOrThrow ( java.lang.String ) ) . thenReturn ( NUMBER ) ; when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getInt ( NUMBER ) ) . thenReturn ( NUMBER ) ; when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenThrow ( new java.lang.IllegalArgumentException ( ) ) ; when ( com.getbase.android.db.cursors.Cursor . getInt ( NUMBER ) ) . thenThrow ( new java.lang.IllegalArgumentException ( ) ) ; Function < Cursor , java.lang.Integer > com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> = SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) ; assertThat ( com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> . apply ( com.getbase.android.db.cursors.Cursor ) ) . isEqualTo ( NUMBER ) ; assertThat ( com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> . apply ( com.getbase.android.db.cursors.Cursor ) ) . isEqualTo ( NUMBER ) ; assertThat ( com.getbase.android.db.cursors.Function<com.getbase.android.db.cursors.Cursor,java.lang.Integer> . apply ( com.getbase.android.db.cursors.Cursor ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { MatrixCursor com.getbase.android.db.cursors.MatrixCursor = new MatrixCursor ( new java.lang.String [] { java.lang.String } ) ; com.getbase.android.db.cursors.MatrixCursor . addRow ( new java.lang.Object [] { NUMBER } ) ; com.getbase.android.db.cursors.MatrixCursor . moveToFirst ( ) ; SingleRowTransforms . getColumn ( STRING ) . asInteger ( ) . apply ( com.getbase.android.db.cursors.MatrixCursor ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { short short = NUMBER ; when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getShort ( NUMBER ) ) . thenReturn ( short ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asShort ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isEqualTo ( short ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( true ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asShort ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getInt ( NUMBER ) ) . thenReturn ( NUMBER ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( true ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asInteger ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getLong ( NUMBER ) ) . thenReturn ( NUMBER ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asLong ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( true ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asLong ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getFloat ( NUMBER ) ) . thenReturn ( NUMBER ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asFloat ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( true ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asFloat ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getDouble ( NUMBER ) ) . thenReturn ( NUMBER ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asDouble ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isWithin ( NUMBER ) . of ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( true ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asDouble ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getInt ( NUMBER ) ) . thenReturn ( NUMBER ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asBoolean ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getInt ( NUMBER ) ) . thenReturn ( NUMBER ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asBoolean ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( true ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asBoolean ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( false ) ; when ( com.getbase.android.db.cursors.Cursor . getString ( NUMBER ) ) . thenReturn ( STRING ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asString ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.cursors.Cursor . isNull ( NUMBER ) ) . thenReturn ( true ) ; assertThat ( SingleRowTransforms . getColumn ( java.lang.String ) . asString ( ) . apply ( com.getbase.android.db.cursors.Cursor ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) throws com.getbase.android.db.InitializationError { super( java.lang.Class<> ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.getbase.android.db.ShadowMap com.getbase.android.db.ShadowMap ( ) { return super. createShadowMap ( ) . newBuilder ( ) . addShadowClass ( ShadowAsyncTaskLoader .class ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( select ( ) . allColumns ( ) . from ( STRING ) ) . union ( select ( ) . allColumns ( ) . from ( STRING ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( select ( ) . allColumns ( ) . from ( STRING ) ) . unionAll ( select ( ) . allColumns ( ) . from ( STRING ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( select ( ) . allColumns ( ) . from ( STRING ) ) . intersect ( select ( ) . allColumns ( ) . from ( STRING ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( select ( ) . allColumns ( ) . from ( STRING ) ) . except ( select ( ) . allColumns ( ) . from ( STRING ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( select ( ) . allColumns ( ) . from ( STRING ) ) . union ( select ( ) . allColumns ( ) . from ( STRING ) ) . orderBy ( STRING ) . collate ( STRING ) . asc ( ) . limit ( NUMBER ) . offset ( NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Query com.getbase.android.db.fluentsqlite.Query = select ( select ( ) . allColumns ( ) . from ( STRING ) ) . union ( select ( ) . allColumns ( ) . from ( STRING ) ) . build ( ) ; assertThat ( com.getbase.android.db.fluentsqlite.Query . getTables ( ) ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.NullPointerException .class ) public void void ( ) java.lang.Exception { union ( ( Query [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { union ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = union ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) , select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.NullPointerException .class ) public void void ( ) java.lang.Exception { unionAll ( ( Query [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { unionAll ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = unionAll ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) , select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.NullPointerException .class ) public void void ( ) java.lang.Exception { intersect ( ( Query [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = intersect ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) , select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { intersect ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = intersect ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) , union ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) , select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) , select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = intersect ( union ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) , select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) , select ( ) . allColumns ( ) . from ( STRING ) . build ( ) , unionAll ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) , select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = intersect ( select ( ) . from ( STRING ) . union ( ) . select ( ) . from ( STRING ) . build ( ) ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = intersect ( intersect ( select ( ) . from ( STRING ) . build ( ) , select ( ) . from ( STRING ) . build ( ) ) ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( eq ( STRING ) , anyString ( ) , any ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( anyString ( ) , eq ( STRING ) , any ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( column ( STRING ) . is ( ) . nul ( ) ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( anyString ( ) , eq ( STRING ) , any ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( STRING ) . where ( STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( anyString ( ) , eq ( STRING ) , any ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( STRING , NUMBER ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( anyString ( ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( anyString ( ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( anyString ( ) , anyString ( ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( STRING , ( java.lang.Object [] ) null ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( eq ( STRING ) , eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( column ( STRING ) . is ( ) . nul ( ) , ( java.lang.Object [] ) null ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . delete ( eq ( STRING ) , eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( ( java.lang.String ) null ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { delete ( ) . from ( STRING ) . where ( ( java.lang.String ) null , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> public void ( int int , int int ) { int = int ; int = int ; }  <METHOD_END>
<METHOD_START> @ Parameters public static java.util.Collection<java.lang.Object[]> < java.lang.Object [] > java.util.Collection<java.lang.Object[]> ( ) { return FluentIterable . from ( java.util.Map<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> . entrySet ( ) ) . transform ( new Function < java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> < Expression , java.lang.Integer > , java.lang.Object [] > ( ) { @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> < Expression , java.lang.Integer > java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> ) { return new java.lang.Object [] { java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> . getKey ( ) . getArgsCount ( ) , java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> . getValue ( ) } ; } } ) . toList ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> < Expression , java.lang.Integer > java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> ) { return new java.lang.Object [] { java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> . getKey ( ) . getArgsCount ( ) , java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.Integer> . getValue ( ) } ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( int ) . isEqualTo ( int ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ Parameters public static java.util.Collection<java.lang.Object[]> < java.lang.Object [] > java.util.Collection<java.lang.Object[]> ( ) { return FluentIterable . from ( java.util.Map<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> . entrySet ( ) ) . transform ( new Function < java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> < Expression , java.lang.String > , java.lang.Object [] > ( ) { @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> < Expression , java.lang.String > java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> ) { return new java.lang.Object [] { java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> . getKey ( ) . getSql ( ) , java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> . getValue ( ) } ; } } ) . toList ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object [] java.lang.Object[] ( java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> < Expression , java.lang.String > java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> ) { return new java.lang.Object [] { java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> . getKey ( ) . getSql ( ) , java.util.Map.Entry<com.getbase.android.db.fluentsqlite.Expression,java.lang.String> . getValue ( ) } ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( java.lang.String ) . isEqualTo ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { coalesce ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { coalesce ( literal ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { addExpressionArgs ( Lists . newArrayList ( ) , arg ( ) , ( java.lang.Object [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Expression com.getbase.android.db.fluentsqlite.Expression = column ( STRING ) . eq ( arg ( ) ) . and ( ) . column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) . build ( ) ) . and ( ) . column ( STRING ) . eq ( ) . arg ( ) ; assertThat ( com.getbase.android.db.fluentsqlite.Expression . getBoundArgs ( ) ) . isEqualTo ( ImmutableMap . of ( NUMBER , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) . build ( ) ) . toRawSql ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = column ( STRING ) . eq ( ) . literal ( NUMBER ) . toRawSql ( ) ; assertThat ( java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.NullPointerException .class ) public void void ( ) java.lang.Exception { literals ( ( java.lang.Number [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = column ( STRING ) . in ( literals ( NUMBER , NUMBER , NUMBER ) ) . toRawSql ( ) ; assertThat ( java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = column ( STRING ) . in ( literals ( new java.lang.Number [ NUMBER ] ) ) . toRawSql ( ) ; assertThat ( java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.NullPointerException .class ) public void void ( ) java.lang.Exception { literals ( ( java.lang.Number [] ) null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = column ( STRING ) . in ( literals ( STRING , STRING , STRING ) ) . toRawSql ( ) ; assertThat ( java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.lang.String java.lang.String = column ( STRING ) . in ( literals ( new java.lang.Object [ NUMBER ] ) ) . toRawSql ( ) ; assertThat ( java.lang.String ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; when ( com.getbase.android.db.fluentsqlite.SQLiteDatabase . compileStatement ( anyString ( ) ) ) . thenReturn ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultValuesInsert com.getbase.android.db.fluentsqlite.DefaultValuesInsert = insert ( ) . into ( STRING ) . defaultValues ( STRING ) ; assertThat ( insert . mTable ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Insert com.getbase.android.db.fluentsqlite.Insert = insert ( ) . into ( STRING ) . value ( STRING , null ) ; assertThat ( insert . mTable ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { DefaultValuesInsert com.getbase.android.db.fluentsqlite.DefaultValuesInsert = insert ( ) . into ( STRING ) . defaultValues ( STRING ) ; assertThat ( insert . mNullColumnHack ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ; insert ( ) . into ( STRING ) . resultOf ( com.getbase.android.db.fluentsqlite.Query ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING + com.getbase.android.db.fluentsqlite.Query . toRawQuery ( ) . mRawQuery ) ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . executeInsert ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { insert ( ) . into ( STRING ) . resultOf ( select ( ) . allColumns ( ) . from ( STRING ) . where ( STRING , NUMBER ) . build ( ) ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING ) ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . bindString ( eq ( NUMBER ) , eq ( STRING ) ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . executeInsert ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ; insert ( ) . into ( STRING ) . columns ( STRING , STRING , STRING ) . resultOf ( com.getbase.android.db.fluentsqlite.Query ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING + com.getbase.android.db.fluentsqlite.Query . toRawQuery ( ) . mRawQuery ) ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . executeInsert ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ; insert ( ) . into ( STRING ) . columns ( STRING , STRING ) . columns ( STRING ) . resultOf ( com.getbase.android.db.fluentsqlite.Query ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING + com.getbase.android.db.fluentsqlite.Query . toRawQuery ( ) . mRawQuery ) ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . executeInsert ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ; insert ( ) . into ( STRING ) . columns ( ( java.lang.String [] ) null ) . resultOf ( com.getbase.android.db.fluentsqlite.Query ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Insert com.getbase.android.db.fluentsqlite.Insert = insert ( ) . into ( STRING ) . value ( STRING , STRING ) ; assertThat ( insert . mValues ) . contains ( entry ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; insert ( ) . into ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . value ( STRING , STRING ) ; assertThat ( com.getbase.android.db.fluentsqlite.ContentValues . containsKey ( STRING ) ) . isFalse ( ) ; ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; insert ( ) . into ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) ; assertThat ( com.getbase.android.db.fluentsqlite.ContentValues . containsKey ( STRING ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; Insert com.getbase.android.db.fluentsqlite.Insert = insert ( ) . into ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) ; assertThat ( insert . mValues ) . contains ( entry ( STRING , STRING ) , entry ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; Insert com.getbase.android.db.fluentsqlite.Insert = insert ( ) . into ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . value ( STRING , null ) ; assertThat ( insert . mValues ) . contains ( entry ( STRING , STRING ) , entry ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . putNull ( STRING ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; Insert com.getbase.android.db.fluentsqlite.Insert = insert ( ) . into ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) ; assertThat ( insert . mValues ) . contains ( entry ( STRING , STRING ) , entry ( STRING , STRING ) , entry ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { insert ( ) . into ( STRING ) . defaultValues ( STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . insert ( eq ( STRING ) , eq ( STRING ) , isNull ( ContentValues .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { insert ( ) . into ( STRING ) . value ( STRING , NUMBER ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . insert ( eq ( STRING ) , isNull ( java.lang.String .class ) , com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . capture ( ) ) ; assertThat ( com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.RuntimeException .class ) public void void ( ) java.lang.Exception { when ( com.getbase.android.db.fluentsqlite.SQLiteStatement . executeInsert ( ) ) . thenReturn ( - NUMBER ) ; Query com.getbase.android.db.fluentsqlite.Query = select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ; insert ( ) . into ( STRING ) . columns ( STRING ) . resultOf ( com.getbase.android.db.fluentsqlite.Query ) . performOrThrow ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.fluentsqlite.SQLiteStatement . executeInsert ( ) ) . thenReturn ( NUMBER ) ; Query com.getbase.android.db.fluentsqlite.Query = select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ; long long = insert ( ) . into ( STRING ) . columns ( STRING ) . resultOf ( com.getbase.android.db.fluentsqlite.Query ) . performOrThrow ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; assertThat ( long ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , NUMBER ) ; insert ( ) . into ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . performOrThrow ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . insertOrThrow ( eq ( STRING ) , isNull ( java.lang.String .class ) , eq ( com.getbase.android.db.fluentsqlite.ContentValues ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { when ( com.getbase.android.db.fluentsqlite.SQLiteDatabase . insertOrThrow ( anyString ( ) , anyString ( ) , any ( ContentValues .class ) ) ) . thenReturn ( NUMBER ) ; long long = insert ( ) . into ( STRING ) . value ( STRING , NUMBER ) . performOrThrow ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; assertThat ( long ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { insert ( ) . into ( STRING ) . defaultValues ( STRING ) . performOrThrow ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . insertOrThrow ( eq ( STRING ) , eq ( STRING ) , isNull ( ContentValues .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query . select ( ) . distinct ( ) . allColumns ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . union ( ) . select ( ) . allColumns ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . union ( ) . select ( ) . distinct ( ) . allColumns ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . union ( ) . all ( ) . select ( ) . allColumns ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . except ( ) . select ( ) . allColumns ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . intersect ( ) . select ( ) . allColumns ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . where ( STRING , NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . where ( STRING , NUMBER ) . where ( STRING , NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . left ( ) . join ( STRING ) . on ( STRING , NUMBER ) . where ( STRING , NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . cross ( ) . join ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . natural ( ) . join ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . join ( STRING ) . as ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . join ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . join ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . left ( ) . join ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( select ( ) . allColumns ( ) . from ( STRING ) . build ( ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . join ( STRING ) . using ( STRING , STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . column ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . column ( STRING ) . as ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . columns ( STRING , STRING , STRING ) . of ( STRING ) . asColumnNames ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . column ( STRING ) . column ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . of ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . as ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . column ( STRING ) . columns ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . columns ( ( java.lang.String [] ) null ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . where ( ( java.lang.String ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . where ( ( Expression ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( ( java.lang.String ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . limit ( NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . limit ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . limit ( NUMBER ) . offset ( NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . limit ( NUMBER ) . offset ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . limit ( NUMBER ) . limit ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . column ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . groupBy ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( STRING , NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( STRING , NUMBER ) . having ( STRING , NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . limit ( null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . limit ( null ) . offset ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . limit ( null ) . offset ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . having ( STRING , NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( STRING ) . asc ( ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( STRING ) . desc ( ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( STRING ) . orderBy ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( STRING ) . collate ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( STRING ) . collate ( CollatingSequence . NOCASE ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . expr ( column ( STRING ) ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( column ( STRING ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . where ( column ( STRING ) . is ( ) . not ( ) . nul ( ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . on ( column ( STRING , STRING ) . eq ( ) . column ( STRING , STRING ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( column ( STRING ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( sum ( column ( STRING ) ) . gt ( ) . literal ( NUMBER ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . columns ( STRING , STRING , STRING ) . of ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . nul ( ) . as ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . literal ( NUMBER ) . as ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . literal ( STRING ) . as ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . column ( STRING , STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.fluentsqlite.QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder ( ) { return select ( ) . column ( STRING , STRING ) . from ( STRING ) . left ( ) . join ( STRING ) . as ( STRING ) . on ( STRING , NUMBER ) . groupBy ( column ( STRING , STRING ) ) . having ( column ( STRING ) . lt ( ) . arg ( ) , NUMBER ) . limit ( NUMBER ) . offset ( NUMBER ) . orderBy ( column ( STRING , STRING ) ) . except ( ) . select ( ) . distinct ( ) . column ( STRING ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . literal ( - NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = com.getbase.android.db.fluentsqlite.QueryBuilder ( ) . build ( ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder = com.getbase.android.db.fluentsqlite.Query . buildUpon ( ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , times ( NUMBER ) ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = com.getbase.android.db.fluentsqlite.QueryBuilder ( ) . build ( ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder = com.getbase.android.db.fluentsqlite.Query . buildUpon ( ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . where ( column ( STRING ) . is ( ) . not ( ) . nul ( ) ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , times ( NUMBER ) ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder = com.getbase.android.db.fluentsqlite.QueryBuilder ( ) ; Query com.getbase.android.db.fluentsqlite.Query = com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder = com.getbase.android.db.fluentsqlite.Query . buildUpon ( ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . where ( column ( STRING ) . is ( ) . not ( ) . nul ( ) ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , times ( NUMBER ) ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = select ( ) . from ( STRING ) . join ( STRING ) . build ( ) ; QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder = com.getbase.android.db.fluentsqlite.Query . buildUpon ( ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , times ( NUMBER ) ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = select ( ) . from ( STRING ) . join ( STRING ) . join ( STRING ) . build ( ) ; QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder = com.getbase.android.db.fluentsqlite.Query . buildUpon ( ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , times ( NUMBER ) ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . distinct ( ) . from ( STRING ) . all ( ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = select ( ) . from ( STRING ) . join ( STRING ) . on ( column ( STRING ) . eq ( ) . column ( STRING ) ) . build ( ) ; QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder = com.getbase.android.db.fluentsqlite.Query . buildUpon ( ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , times ( NUMBER ) ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Query com.getbase.android.db.fluentsqlite.Query = select ( ) . from ( STRING ) . left ( ) . join ( STRING ) . using ( STRING ) . build ( ) ; QueryBuilder com.getbase.android.db.fluentsqlite.QueryBuilder = com.getbase.android.db.fluentsqlite.Query . buildUpon ( ) ; com.getbase.android.db.fluentsqlite.Query . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; com.getbase.android.db.fluentsqlite.QueryBuilder . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , times ( NUMBER ) ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( select ( ) . from ( STRING ) . build ( ) ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . join ( STRING ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . join ( STRING ) . join ( STRING ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . join ( select ( ) . from ( STRING ) . build ( ) ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . union ( ) . select ( ) . from ( STRING ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . where ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . build ( ) ) ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . build ( ) ) ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . expr ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . build ( ) ) ) . from ( STRING ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . orderBy ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . build ( ) ) ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = select ( ) . from ( STRING ) . join ( STRING ) . on ( column ( STRING , STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . build ( ) ) ) . getTables ( ) ; assertThat ( java.util.Set<java.lang.String> ) . containsExactly ( STRING , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . expr ( column ( STRING ) . eq ( ) . arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . expr ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . where ( column ( STRING ) . eq ( ) . arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . where ( column ( STRING ) . eq ( ) . arg ( ) , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . where ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . on ( column ( STRING ) . eq ( ) . arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . on ( column ( STRING ) . eq ( ) . arg ( ) , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . on ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . on ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( column ( STRING ) . eq ( ) . arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( column ( STRING ) . eq ( ) . arg ( ) , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . groupBy ( column ( STRING ) . eq ( ) . arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . orderBy ( column ( STRING ) . eq ( ) . arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . orderBy ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . where ( STRING , ( java.lang.Object [] ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . where ( column ( STRING ) . is ( ) . nul ( ) , ( java.lang.Object [] ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( STRING , ( java.lang.Object [] ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . groupBy ( STRING ) . having ( column ( STRING ) . is ( ) . nul ( ) , ( java.lang.Object [] ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . on ( STRING , ( java.lang.Object [] ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . on ( column ( STRING ) . is ( ) . nul ( ) , ( java.lang.Object [] ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . using ( ( java.lang.String [] ) null ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { select ( ) . from ( STRING ) . join ( STRING ) . using ( new java.lang.String [ NUMBER ] ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . column ( STRING ) . columns ( STRING , STRING ) . column ( STRING ) . from ( STRING ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) @ Test public void void ( ) java.lang.Exception { java.lang.String [] java.lang.String[] = null ; java.lang.String java.lang.String = null ; java.lang.String java.lang.String = null ; java.lang.String java.lang.String = null ; select ( ) . columns ( java.lang.String[] ) . from ( STRING ) . where ( java.lang.String , java.lang.String ) . orderBy ( java.lang.String ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . allColumns ( ) . from ( STRING ) . join ( select ( ) . column ( STRING ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { select ( ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { select ( ) . literal ( NUMBER ) . build ( ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . rawQuery ( eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; when ( com.getbase.android.db.fluentsqlite.SQLiteDatabase . compileStatement ( anyString ( ) ) ) . thenReturn ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , NUMBER ) . where ( STRING , NUMBER ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( eq ( STRING ) , any ( ContentValues .class ) , anyString ( ) , any ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , NUMBER ) . where ( STRING , NUMBER ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . capture ( ) , anyString ( ) , any ( java.lang.String [] .class ) ) ; assertThat ( com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , NUMBER ) . where ( STRING , NUMBER ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , any ( ContentValues .class ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , NUMBER ) . where ( STRING , NUMBER ) . where ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , any ( ContentValues .class ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , NUMBER ) . where ( column ( STRING ) . eq ( ) . arg ( ) , NUMBER ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , any ( ContentValues .class ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , never ( ) ) . update ( anyString ( ) , any ( ContentValues .class ) , anyString ( ) , any ( java.lang.String [] .class ) ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( anyString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , STRING ) . where ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , Expressions . literal ( NUMBER ) ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , STRING ) . value ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , STRING ) . value ( STRING , STRING ) . setColumn ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , STRING ) . setColumn ( STRING , STRING ) . value ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , STRING ) . value ( STRING , STRING ) . value ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , any ( ContentValues .class ) , anyString ( ) , any ( java.lang.String [] .class ) ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase , never ( ) ) . compileStatement ( anyString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; update ( ) . table ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . value ( STRING , STRING ) ; assertThat ( com.getbase.android.db.fluentsqlite.ContentValues . containsKey ( STRING ) ) . isFalse ( ) ; ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; update ( ) . table ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) ; assertThat ( com.getbase.android.db.fluentsqlite.ContentValues . containsKey ( STRING ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; update ( ) . table ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . capture ( ) , anyString ( ) , any ( java.lang.String [] .class ) ) ; assertThat ( com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; update ( ) . table ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . value ( STRING , null ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . capture ( ) , anyString ( ) , any ( java.lang.String [] .class ) ) ; assertThat ( com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; ContentValues com.getbase.android.db.fluentsqlite.ContentValues = new ContentValues ( ) ; com.getbase.android.db.fluentsqlite.ContentValues . putNull ( STRING ) ; com.getbase.android.db.fluentsqlite.ContentValues . put ( STRING , STRING ) ; update ( ) . table ( STRING ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . values ( com.getbase.android.db.fluentsqlite.ContentValues ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . capture ( ) , anyString ( ) , any ( java.lang.String [] .class ) ) ; assertThat ( com.getbase.android.db.fluentsqlite.ArgumentCaptor<com.getbase.android.db.fluentsqlite.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , STRING ) , entry ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . compileStatement ( eq ( STRING ) ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . bindString ( eq ( NUMBER ) , eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , any ( ContentValues .class ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . value ( STRING , STRING ) . where ( column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , any ( ContentValues .class ) , anyString ( ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . value ( STRING , NUMBER ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( anyString ( ) , any ( ContentValues .class ) , anyString ( ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . setColumn ( STRING , column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . bindString ( eq ( NUMBER ) , eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . setColumn ( STRING , column ( STRING ) . in ( select ( ) . column ( STRING ) . from ( STRING ) . where ( STRING , STRING ) . build ( ) ) ) . setColumn ( STRING , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . executeUpdateDelete ( ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) . close ( ) ; verifyNoMoreInteractions ( com.getbase.android.db.fluentsqlite.SQLiteStatement ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . where ( STRING , ( java.lang.Object [] ) null ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( eq ( STRING ) , any ( ContentValues .class ) , eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . where ( column ( STRING ) . is ( ) . nul ( ) , ( java.lang.Object [] ) null ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . update ( eq ( STRING ) , any ( ContentValues .class ) , eq ( STRING ) , eq ( new java.lang.String [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . where ( ( java.lang.String ) null ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { update ( ) . table ( STRING ) . where ( ( java.lang.String ) null , STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ViewActions . create ( ) . view ( STRING ) . as ( select ( ) . from ( STRING ) . build ( ) ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; Mockito . verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . execSQL ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ViewActions . create ( ) . view ( STRING ) . as ( select ( ) . from ( STRING ) . where ( column ( STRING ) . eq ( ) . arg ( ) , STRING ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ViewActions . dropIfExists ( ) . view ( STRING ) . perform ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) ; Mockito . verify ( com.getbase.android.db.fluentsqlite.SQLiteDatabase ) . execSQL ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { throw new java.lang.AssertionError ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { return com.getbase.android.db.loaders.Cursor . getString ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; ShadowContentResolver . registerProvider ( java.lang.String , com.getbase.android.db.loaders.ContentProvider ) ; com.getbase.android.db.loaders.MatrixCursor = com.getbase.android.db.loaders.MatrixCursor ( ) ; void ( com.getbase.android.db.loaders.MatrixCursor ) ; Robolectric . getBackgroundScheduler ( ) . pause ( ) ; }  <METHOD_END>
<METHOD_START> private com.getbase.android.db.loaders.MatrixCursor com.getbase.android.db.loaders.MatrixCursor ( ) { MatrixCursor com.getbase.android.db.loaders.MatrixCursor = new MatrixCursor ( new java.lang.String [] { STRING } ) ; com.getbase.android.db.loaders.MatrixCursor . addRow ( new java.lang.Object [] { STRING } ) ; com.getbase.android.db.loaders.MatrixCursor . addRow ( new java.lang.Object [] { STRING } ) ; com.getbase.android.db.loaders.MatrixCursor . setNotificationUri ( Robolectric . application . getContentResolver ( ) , com.getbase.android.db.loaders.Uri ) ; return com.getbase.android.db.loaders.MatrixCursor ; }  <METHOD_END>
<METHOD_START> private void void ( Cursor com.getbase.android.db.loaders.Cursor ) { when ( com.getbase.android.db.loaders.ContentProvider . query ( eq ( com.getbase.android.db.loaders.Uri ) , ( java.lang.String [] ) isNull ( ) , ( java.lang.String ) isNull ( ) , ( java.lang.String [] ) isNull ( ) , ( java.lang.String ) isNull ( ) ) ) . thenReturn ( com.getbase.android.db.loaders.Cursor ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < java.util.List<java.lang.String> < java.lang.String > > com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> . startLoading ( ) ; final Loader . Loader < java.util.List<java.lang.String> < java.lang.String > > listenerMock = mock ( Loader . Loader .class ) ; com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> . registerListener ( NUMBER , listenerMock ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; verify ( listenerMock ) . onLoadComplete ( same ( com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> ) , eq ( Lists . newArrayList ( STRING , STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < java.util.List<java.lang.String> < java.lang.String > > com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; assertThat ( com.getbase.android.db.loaders.MatrixCursor . isClosed ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < java.util.List<java.lang.String> < java.lang.String > > com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; final MatrixCursor com.getbase.android.db.loaders.MatrixCursor = new MatrixCursor ( com.getbase.android.db.loaders.MatrixCursor . getColumnNames ( ) ) ; com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> . reset ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; void ( com.getbase.android.db.loaders.MatrixCursor ) ; assertThat ( com.getbase.android.db.loaders.MatrixCursor . isClosed ( ) ) . isTrue ( ) ; assertThat ( com.getbase.android.db.loaders.MatrixCursor . isClosed ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . transform ( new Function < java.util.List<java.lang.String> < java.lang.String > , com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > ( ) { @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; } } ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . startLoading ( ) ; final Loader . Loader < com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > listenerMock = mock ( Loader . Loader .class ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . registerListener ( NUMBER , listenerMock ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; verify ( listenerMock ) . onLoadComplete ( same ( com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> ) , eq ( new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( Lists . newArrayList ( STRING , STRING ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < java.util.List<java.lang.String> < java.lang.String > > com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . lazy ( ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<java.util.List<java.lang.String>> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; }  <METHOD_END>
<METHOD_START> @ Ignore @ Test public void void ( ) java.lang.Exception { final Loader < com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . transform ( new Function < java.util.List<java.lang.String> < java.lang.String > , com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > ( ) { @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; } } ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; Robolectric . application . getContentResolver ( ) . notifyChange ( com.getbase.android.db.loaders.Uri , null ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; assertThat ( com.getbase.android.db.loaders.MatrixCursor . isClosed ( ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private int int ( Cursor ... com.getbase.android.db.loaders.Cursor[] ) { int int = NUMBER ; for ( Cursor com.getbase.android.db.loaders.Cursor : com.getbase.android.db.loaders.Cursor[] ) { if ( ! com.getbase.android.db.loaders.Cursor . isClosed ( ) ) { int ++ ; } } return int ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . transform ( new Function < java.util.List<java.lang.String> < java.lang.String > , com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > ( ) { @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; } } ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; Robolectric . application . getContentResolver ( ) . notifyChange ( com.getbase.android.db.loaders.Uri , null ) ; MatrixCursor com.getbase.android.db.loaders.MatrixCursor = com.getbase.android.db.loaders.MatrixCursor ( ) ; void ( com.getbase.android.db.loaders.MatrixCursor ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; assertThat ( int ( com.getbase.android.db.loaders.MatrixCursor , com.getbase.android.db.loaders.MatrixCursor ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < java.lang.String > com.getbase.android.db.loaders.Loader<java.lang.String> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transform ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<java.lang.String> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; Robolectric . application . getContentResolver ( ) . notifyChange ( com.getbase.android.db.loaders.Uri , null ) ; MatrixCursor com.getbase.android.db.loaders.MatrixCursor = com.getbase.android.db.loaders.MatrixCursor ( ) ; void ( com.getbase.android.db.loaders.MatrixCursor ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; assertThat ( int ( com.getbase.android.db.loaders.MatrixCursor , com.getbase.android.db.loaders.MatrixCursor ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . transform ( new Function < java.util.List<java.lang.String> < java.lang.String > , com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > ( ) { @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; } } ) . build ( Robolectric . application ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . reset ( ) ; Robolectric . getBackgroundScheduler ( ) . runOneTask ( ) ; assertThat ( com.getbase.android.db.loaders.MatrixCursor . isClosed ( ) ) . isTrue ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Loader < com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> = CursorLoaderBuilder . forUri ( com.getbase.android.db.loaders.Uri ) . transformRow ( com.getbase.android.db.loaders.Function<com.getbase.android.db.loaders.Cursor,java.lang.String> ) . transform ( new Function < java.util.List<java.lang.String> < java.lang.String > , com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > ( ) { @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; } } ) . build ( Robolectric . application ) ; final Loader . Loader < com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper > listenerMock = mock ( Loader . Loader .class ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . registerListener ( NUMBER , listenerMock ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . startLoading ( ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . reset ( ) ; Robolectric . getBackgroundScheduler ( ) . runTasks ( NUMBER ) ; void ( new MatrixCursor ( com.getbase.android.db.loaders.MatrixCursor . getColumnNames ( ) ) ) ; com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> . startLoading ( ) ; Robolectric . getBackgroundScheduler ( ) . runTasks ( NUMBER ) ; verify ( listenerMock , times ( NUMBER ) ) . onLoadComplete ( same ( com.getbase.android.db.loaders.Loader<com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> ) , eq ( new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( Lists .< java.lang.String > newArrayList ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { return new com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ( java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> private void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( this == java.lang.Object ) return true ; if ( java.lang.Object == null || java.lang.Class<? extends com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper> ( ) != java.lang.Object . java.lang.Class<? extends java.lang.Object> ( ) ) return false ; com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper = ( com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper ) java.lang.Object ; return Objects . equal ( java.util.List<java.lang.String> , com.getbase.android.db.loaders.ComposedCursorLoaderTest.MyCustomWrapper . java.util.List<java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.util.List<java.lang.String> != null ? java.util.List<java.lang.String> . int ( ) : NUMBER ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.loaders.MatrixCursor = new MatrixCursor ( new java.lang.String [] { STRING } ) ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { com.getbase.android.db.loaders.MatrixCursor . addRow ( new java.lang.Object [] { STRING + int } ) ; } final LazyCursorList < java.lang.String > com.getbase.android.db.loaders.LazyCursorList<java.lang.String> = new LazyCursorList < java.lang.String > ( com.getbase.android.db.loaders.MatrixCursor , new Function < Cursor , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { return com.getbase.android.db.loaders.Cursor . getString ( NUMBER ) ; } } ) ; assertThat ( com.getbase.android.db.loaders.LazyCursorList<java.lang.String> . get ( NUMBER ) ) . isEqualTo ( STRING + NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { return com.getbase.android.db.loaders.Cursor . getString ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final MatrixCursor com.getbase.android.db.loaders.MatrixCursor = new MatrixCursor ( new java.lang.String [] { STRING } ) ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { com.getbase.android.db.loaders.MatrixCursor . addRow ( new java.lang.Object [] { STRING + int } ) ; } final LazyCursorList < java.lang.String > com.getbase.android.db.loaders.LazyCursorList<java.lang.String> = new LazyCursorList < java.lang.String > ( com.getbase.android.db.loaders.MatrixCursor , new Function < Cursor , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { return null ; } } ) ; assertThat ( com.getbase.android.db.loaders.LazyCursorList<java.lang.String> . size ( ) ) . isEqualTo ( com.getbase.android.db.loaders.MatrixCursor . getCount ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { return null ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final LazyCursorList < java.lang.String > com.getbase.android.db.loaders.LazyCursorList<java.lang.String> = new LazyCursorList < java.lang.String > ( null , new Function < Cursor , java.lang.String > ( ) { @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { return com.getbase.android.db.loaders.Cursor . getString ( NUMBER ) ; } } ) ; assertThat ( com.getbase.android.db.loaders.LazyCursorList<java.lang.String> ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Cursor com.getbase.android.db.loaders.Cursor ) { return com.getbase.android.db.loaders.Cursor . getString ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( Uri . EMPTY ) ; final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( Uri . EMPTY ) ; final java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> = Batcher . begin ( ) . append ( com.getbase.android.db.provider.Insert ) . append ( com.getbase.android.db.provider.Insert ) . append ( ProviderAction . insert ( Uri . EMPTY ) ) . withValueBackReference ( com.getbase.android.db.provider.Insert , BaseColumns . _ID ) . withValueBackReference ( com.getbase.android.db.provider.Insert , STRING ) . operations ( ) ; assertThat ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) . hasSize ( NUMBER ) ; final ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation = java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) ; ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( com.getbase.android.db.provider.ContentProviderOperation ) ; final ContentValues com.getbase.android.db.provider.ContentValues = com.getbase.android.db.provider.ShadowContentProviderOperation . getValuesBackReferences ( ) ; assertThat ( com.getbase.android.db.provider.ContentValues . get ( STRING ) ) . isEqualTo ( NUMBER ) ; assertThat ( com.getbase.android.db.provider.ContentValues . get ( STRING ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( Uri . EMPTY ) ; final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( Uri . EMPTY ) ; final java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> = Batcher . begin ( ) . append ( com.getbase.android.db.provider.Insert ) . append ( com.getbase.android.db.provider.Insert ) . append ( ProviderAction . update ( Uri . EMPTY ) . value ( STRING , NUMBER ) . where ( BaseColumns . _ID + STRING ) ) . withSelectionBackReference ( com.getbase.android.db.provider.Insert , NUMBER ) . withSelectionBackReference ( com.getbase.android.db.provider.Insert , NUMBER ) . operations ( ) ; assertThat ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) . hasSize ( NUMBER ) ; final ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation = java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) ; ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( com.getbase.android.db.provider.ContentProviderOperation ) ; final java.util.Map<java.lang.Integer,java.lang.Integer> < java.lang.Integer , java.lang.Integer > java.util.Map<java.lang.Integer,java.lang.Integer> = com.getbase.android.db.provider.ShadowContentProviderOperation . getSelectionArgsBackReferences ( ) ; assertThat ( java.util.Map<java.lang.Integer,java.lang.Integer> ) . containsEntry ( NUMBER , NUMBER ) ; assertThat ( java.util.Map<java.lang.Integer,java.lang.Integer> ) . containsEntry ( NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> = Batcher . begin ( ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . append ( ProviderAction . update ( com.getbase.android.db.provider.Uri ( STRING ) ) . value ( STRING , NUMBER ) ) . operations ( ) ; assertThat ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) . hasSize ( NUMBER ) ; void ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) , com.getbase.android.db.provider.Uri ( STRING ) , ShadowContentProviderOperation . TYPE_INSERT ) ; void ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) , com.getbase.android.db.provider.Uri ( STRING ) , ShadowContentProviderOperation . TYPE_INSERT ) ; void ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) , com.getbase.android.db.provider.Uri ( STRING ) , ShadowContentProviderOperation . TYPE_UPDATE ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , NUMBER ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; final java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> = Batcher . begin ( ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) . values ( com.getbase.android.db.provider.ContentValues ) ) . operations ( ) ; final ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getContentValues ( ) ) . isEqualTo ( com.getbase.android.db.provider.ContentValues ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( Batcher . begin ( ) . operations ( ) ) . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ; final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ; final java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> = Batcher . begin ( ) . append ( com.getbase.android.db.provider.Insert ) . append ( com.getbase.android.db.provider.Insert ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . withValueBackReference ( com.getbase.android.db.provider.Insert , STRING ) . operations ( ) ; assertThat ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) . hasSize ( NUMBER ) ; final ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( Iterables . getLast ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) ) ; final ContentValues com.getbase.android.db.provider.ContentValues = com.getbase.android.db.provider.ShadowContentProviderOperation . getValuesBackReferences ( ) ; assertThat ( com.getbase.android.db.provider.ContentValues . get ( STRING ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ; Batcher . begin ( ) . append ( com.getbase.android.db.provider.Insert ) . append ( com.getbase.android.db.provider.Insert ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . withValueBackReference ( com.getbase.android.db.provider.Insert , STRING ) . operations ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ; Batcher . begin ( ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . withValueBackReference ( com.getbase.android.db.provider.Insert , STRING ) . operations ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ; Batcher . begin ( ) . append ( com.getbase.android.db.provider.Insert ) . append ( com.getbase.android.db.provider.Insert ) . append ( ProviderAction . delete ( com.getbase.android.db.provider.Uri ( STRING ) ) . where ( BaseColumns . _ID + STRING ) ) . withSelectionBackReference ( com.getbase.android.db.provider.Insert , NUMBER ) . operations ( ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalStateException .class ) public void void ( ) java.lang.Exception { final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ; Batcher . begin ( ) . append ( ProviderAction . delete ( com.getbase.android.db.provider.Uri ( STRING ) ) . where ( BaseColumns . _ID + STRING ) ) . withSelectionBackReference ( com.getbase.android.db.provider.Insert , NUMBER ) . operations ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ; final Insert com.getbase.android.db.provider.Insert = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ; final int int = NUMBER ; final java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> < ConvertibleToOperation > java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> = java.util.Collections .< ConvertibleToOperation > java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> ( int , ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) ; final java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> < ConvertibleToOperation > java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> = java.util.Collections .< ConvertibleToOperation > java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> ( int , ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) ; final java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> = Batcher . begin ( ) . append ( com.getbase.android.db.provider.Insert ) . append ( com.getbase.android.db.provider.Insert ) . append ( java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> ) . withValueBackReference ( com.getbase.android.db.provider.Insert , STRING ) . withValueBackReference ( com.getbase.android.db.provider.Insert , STRING ) . append ( java.util.List<com.getbase.android.db.provider.ConvertibleToOperation> ) . withValueBackReference ( com.getbase.android.db.provider.Insert , STRING ) . withValueBackReference ( com.getbase.android.db.provider.Insert , STRING ) . operations ( ) ; assertThat ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) . hasSize ( int * NUMBER + NUMBER ) ; for ( ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation : java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . subList ( NUMBER , NUMBER + int ) ) { final ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( com.getbase.android.db.provider.ContentProviderOperation ) ; final ContentValues com.getbase.android.db.provider.ContentValues = com.getbase.android.db.provider.ShadowContentProviderOperation . getValuesBackReferences ( ) ; assertThat ( com.getbase.android.db.provider.ContentValues . get ( STRING ) ) . isEqualTo ( NUMBER ) ; assertThat ( com.getbase.android.db.provider.ContentValues . get ( STRING ) ) . isEqualTo ( NUMBER ) ; } for ( ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation : java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . subList ( NUMBER + int , java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . size ( ) ) ) { final ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( com.getbase.android.db.provider.ContentProviderOperation ) ; final ContentValues com.getbase.android.db.provider.ContentValues = com.getbase.android.db.provider.ShadowContentProviderOperation . getValuesBackReferences ( ) ; assertThat ( com.getbase.android.db.provider.ContentValues . get ( STRING ) ) . isEqualTo ( NUMBER ) ; assertThat ( com.getbase.android.db.provider.ContentValues . get ( STRING ) ) . isEqualTo ( NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.RuntimeException .class ) public void void ( ) java.lang.Exception { void ( OperationApplicationException .class ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.RuntimeException .class ) public void void ( ) java.lang.Exception { void ( OperationApplicationException .class ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.SecurityException .class ) public void void ( ) java.lang.Exception { void ( java.lang.SecurityException .class ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.RuntimeException .class ) public void void ( ) java.lang.Exception { void ( OperationApplicationException .class ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.RuntimeException .class ) public void void ( ) java.lang.Exception { void ( OperationApplicationException .class ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.SecurityException .class ) public void void ( ) java.lang.Exception { void ( java.lang.SecurityException .class ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> = Batcher . begin ( ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . append ( ProviderAction . update ( com.getbase.android.db.provider.Uri ( STRING ) ) . value ( STRING , NUMBER ) ) . append ( ProviderAction . delete ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . decorateUrisWith ( new UriDecorator ( ) { @ java.lang.Override public com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( Uri com.getbase.android.db.provider.Uri ) { return Uri . withAppendedPath ( com.getbase.android.db.provider.Uri , STRING ) ; } } ) . operations ( ) ; assertThat ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> ) . hasSize ( NUMBER ) ; void ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) , com.getbase.android.db.provider.Uri ( STRING , STRING ) , ShadowContentProviderOperation . TYPE_INSERT ) ; void ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) , com.getbase.android.db.provider.Uri ( STRING , STRING ) , ShadowContentProviderOperation . TYPE_UPDATE ) ; void ( java.util.ArrayList<com.getbase.android.db.provider.ContentProviderOperation> . get ( NUMBER ) , com.getbase.android.db.provider.Uri ( STRING , STRING ) , ShadowContentProviderOperation . TYPE_DELETE ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( Uri com.getbase.android.db.provider.Uri ) { return Uri . withAppendedPath ( com.getbase.android.db.provider.Uri , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void void ( java.lang.Class<? extends java.lang.Exception> < ? extends java.lang.Exception > java.lang.Class<? extends java.lang.Exception> ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException { final ContentResolver com.getbase.android.db.provider.ContentResolver = mock ( ContentResolver .class ) ; when ( com.getbase.android.db.provider.ContentResolver . applyBatch ( anyString ( ) , any ( java.util.ArrayList .class ) ) ) . thenThrow ( java.lang.Class<> ) ; Batcher . begin ( ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . applyBatchOrThrow ( STRING , com.getbase.android.db.provider.ContentResolver ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private void void ( java.lang.Class<? extends java.lang.Exception> < ? extends java.lang.Exception > java.lang.Class<? extends java.lang.Exception> ) throws com.getbase.android.db.provider.RemoteException , com.getbase.android.db.provider.OperationApplicationException { final ContentProviderClient com.getbase.android.db.provider.ContentProviderClient = mock ( ContentProviderClient .class ) ; when ( com.getbase.android.db.provider.ContentProviderClient . applyBatch ( any ( java.util.ArrayList .class ) ) ) . thenThrow ( java.lang.Class<> ) ; Batcher . begin ( ) . append ( ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) ) . applyBatchOrThrow ( com.getbase.android.db.provider.ContentProviderClient ) ; }  <METHOD_END>
<METHOD_START> private static com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( java.lang.String ... java.lang.String[] ) { Builder com.getbase.android.db.provider.Builder = Uri . parse ( STRING ) . buildUpon ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { com.getbase.android.db.provider.Builder . appendPath ( java.lang.String ) ; } return com.getbase.android.db.provider.Builder . build ( ) ; }  <METHOD_END>
<METHOD_START> private static void void ( ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation , Uri com.getbase.android.db.provider.Uri , int int ) { final ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( com.getbase.android.db.provider.ContentProviderOperation ) ; assertThat ( com.getbase.android.db.provider.ContentProviderOperation . getUri ( ) ) . isEqualTo ( com.getbase.android.db.provider.Uri ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getType ( ) ) . isEqualTo ( int ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , NUMBER ) ; final ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation = ProviderAction . insert ( com.getbase.android.db.provider.Uri ( STRING ) ) . values ( com.getbase.android.db.provider.ContentValues ) . toContentProviderOperation ( Utils . DUMMY_URI_DECORATOR ) ; final ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( com.getbase.android.db.provider.ContentProviderOperation ) ; assertThat ( com.getbase.android.db.provider.ContentProviderOperation . getUri ( ) ) . isEqualTo ( com.getbase.android.db.provider.Uri ( STRING ) ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getType ( ) ) . isEqualTo ( ShadowContentProviderOperation . TYPE_INSERT ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getContentValues ( ) ) . isEqualTo ( com.getbase.android.db.provider.ContentValues ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation = ProviderAction . update ( com.getbase.android.db.provider.Uri ( STRING ) ) . value ( STRING , STRING ) . where ( STRING , STRING ) . toContentProviderOperation ( Utils . DUMMY_URI_DECORATOR ) ; final ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( com.getbase.android.db.provider.ContentProviderOperation ) ; assertThat ( com.getbase.android.db.provider.ContentProviderOperation . getUri ( ) ) . isEqualTo ( com.getbase.android.db.provider.Uri ( STRING ) ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getType ( ) ) . isEqualTo ( ShadowContentProviderOperation . TYPE_UPDATE ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getSelection ( ) ) . isEqualTo ( STRING ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getSelectionArgs ( ) ) . isEqualTo ( new java.lang.String [] { STRING } ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final ContentProviderOperation com.getbase.android.db.provider.ContentProviderOperation = ProviderAction . delete ( com.getbase.android.db.provider.Uri ( STRING ) ) . where ( STRING , STRING ) . toContentProviderOperation ( Utils . DUMMY_URI_DECORATOR ) ; final ShadowContentProviderOperation com.getbase.android.db.provider.ShadowContentProviderOperation = Robolectric . shadowOf ( com.getbase.android.db.provider.ContentProviderOperation ) ; assertThat ( com.getbase.android.db.provider.ContentProviderOperation . getUri ( ) ) . isEqualTo ( com.getbase.android.db.provider.Uri ( STRING ) ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getType ( ) ) . isEqualTo ( ShadowContentProviderOperation . TYPE_DELETE ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getSelection ( ) ) . isEqualTo ( STRING ) ; assertThat ( com.getbase.android.db.provider.ShadowContentProviderOperation . getSelectionArgs ( ) ) . isEqualTo ( new java.lang.String [] { STRING } ) ; }  <METHOD_END>
<METHOD_START> private static com.getbase.android.db.provider.Uri com.getbase.android.db.provider.Uri ( java.lang.String java.lang.String ) { return Uri . parse ( STRING ) . buildUpon ( ) . appendPath ( java.lang.String ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , eq ( ( java.lang.String [] ) null ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) , eq ( ( java.lang.String ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . projection ( STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , eq ( new java.lang.String [] { STRING } ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) , eq ( ( java.lang.String ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . projection ( STRING ) . projection ( STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , eq ( new java.lang.String [] { STRING , STRING } ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) , eq ( ( java.lang.String ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . where ( STRING , STRING ) . where ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , eq ( ( java.lang.String [] ) null ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING } ) , eq ( ( java.lang.String ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . where ( STRING , STRING , STRING ) . where ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , eq ( ( java.lang.String [] ) null ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING , STRING } ) , eq ( ( java.lang.String ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . delete ( com.getbase.android.db.provider.Uri ) . where ( STRING , STRING , STRING ) . where ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . delete ( eq ( com.getbase.android.db.provider.Uri ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . update ( com.getbase.android.db.provider.Uri ) . where ( STRING , STRING , STRING ) . where ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , any ( ContentValues .class ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING , STRING , STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . orderBy ( STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , eq ( ( java.lang.String [] ) null ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) , eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . insert ( eq ( com.getbase.android.db.provider.Uri ) , eq ( com.getbase.android.db.provider.ContentValues ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ArgumentCaptor < ContentValues > com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . value ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . insert ( eq ( com.getbase.android.db.provider.Uri ) , com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . capture ( ) ) ; assertThat ( com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . value ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; assertThat ( com.getbase.android.db.provider.ContentValues . containsKey ( STRING ) ) . isFalse ( ) ; ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . values ( com.getbase.android.db.provider.ContentValues ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; assertThat ( com.getbase.android.db.provider.ContentValues . containsKey ( STRING ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . values ( com.getbase.android.db.provider.ContentValues ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . insert ( eq ( com.getbase.android.db.provider.Uri ) , com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . capture ( ) ) ; assertThat ( com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . value ( STRING , null ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . insert ( eq ( com.getbase.android.db.provider.Uri ) , com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . capture ( ) ) ; assertThat ( com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . putNull ( STRING ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . values ( com.getbase.android.db.provider.ContentValues ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . insert ( eq ( com.getbase.android.db.provider.Uri ) , com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . capture ( ) ) ; assertThat ( com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , STRING ) , entry ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . value ( STRING , new java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , eq ( com.getbase.android.db.provider.ContentValues ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ArgumentCaptor < ContentValues > com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . value ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . capture ( ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) ) ; assertThat ( com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . values ( com.getbase.android.db.provider.ContentValues ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . capture ( ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) ) ; assertThat ( com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . value ( STRING , null ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . capture ( ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) ) ; assertThat ( com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . putNull ( STRING ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ArgumentCaptor < ContentValues > com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> = ArgumentCaptor . forClass ( ContentValues .class ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . values ( com.getbase.android.db.provider.ContentValues ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . capture ( ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) ) ; assertThat ( com.getbase.android.db.provider.ArgumentCaptor<com.getbase.android.db.provider.ContentValues> . getValue ( ) ) . contains ( entry ( STRING , STRING ) , entry ( STRING , STRING ) , entry ( STRING , null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ProviderAction . update ( com.getbase.android.db.provider.Uri ) . value ( STRING , new java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . where ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , eq ( com.getbase.android.db.provider.ContentValues ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . value ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; assertThat ( com.getbase.android.db.provider.ContentValues . containsKey ( STRING ) ) . isFalse ( ) ; ContentValues com.getbase.android.db.provider.ContentValues = new ContentValues ( ) ; com.getbase.android.db.provider.ContentValues . put ( STRING , STRING ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . values ( com.getbase.android.db.provider.ContentValues ) . values ( com.getbase.android.db.provider.ContentValues ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; assertThat ( com.getbase.android.db.provider.ContentValues . containsKey ( STRING ) ) . isFalse ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . delete ( com.getbase.android.db.provider.Uri ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . delete ( eq ( com.getbase.android.db.provider.Uri ) , eq ( ( java.lang.String ) null ) , eq ( ( java.lang.String [] ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . delete ( com.getbase.android.db.provider.Uri ) . where ( STRING , STRING ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . delete ( eq ( com.getbase.android.db.provider.Uri ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . where ( STRING , NUMBER ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , eq ( ( java.lang.String [] ) null ) , eq ( STRING ) , eq ( new java.lang.String [] { STRING } ) , eq ( ( java.lang.String ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.util.List<?> < ? > java.util.List<?> = Lists . newArrayList ( NUMBER , STRING , NUMBER ) ; ProviderAction . query ( com.getbase.android.db.provider.Uri ) . whereIn ( STRING , java.util.List<> ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; final java.lang.String java.lang.String = STRING + STRING + Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.List<> , Utils . toEscapedSqlFunction ( ) ) ) + STRING + STRING ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , eq ( ( java.lang.String [] ) null ) , eq ( java.lang.String ) , eq ( ( java.lang.String [] ) null ) , eq ( ( java.lang.String ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = Lists .< java.lang.Object > newArrayList ( NUMBER , STRING , NUMBER ) ; ProviderAction . update ( com.getbase.android.db.provider.Uri ) . whereIn ( STRING , java.util.List<java.lang.Object> ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; final java.lang.String java.lang.String = STRING + STRING + Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.List<java.lang.Object> , Utils . toEscapedSqlFunction ( ) ) ) + STRING + STRING ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , any ( ContentValues .class ) , eq ( java.lang.String ) , eq ( ( java.lang.String [] ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final java.util.List<java.lang.Object> < java.lang.Object > java.util.List<java.lang.Object> = Lists .< java.lang.Object > newArrayList ( NUMBER , STRING , NUMBER ) ; ProviderAction . delete ( com.getbase.android.db.provider.Uri ) . whereIn ( STRING , java.util.List<java.lang.Object> ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; final java.lang.String java.lang.String = STRING + STRING + Joiner . on ( STRING ) . join ( Collections2 . transform ( java.util.List<java.lang.Object> , Utils . toEscapedSqlFunction ( ) ) ) + STRING + STRING ; verify ( com.getbase.android.db.provider.ContentResolver ) . delete ( eq ( com.getbase.android.db.provider.Uri ) , eq ( java.lang.String ) , eq ( ( java.lang.String [] ) null ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . insert ( com.getbase.android.db.provider.Uri ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . insert ( eq ( com.getbase.android.db.provider.Uri ) , isNotNull ( ContentValues .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . update ( com.getbase.android.db.provider.Uri ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , isNotNull ( ContentValues .class ) , isNull ( java.lang.String .class ) , isNull ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . where ( null ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , isNull ( java.lang.String [] .class ) , isNull ( java.lang.String .class ) , isNull ( java.lang.String [] .class ) , isNull ( java.lang.String .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . update ( com.getbase.android.db.provider.Uri ) . where ( null ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , any ( ContentValues .class ) , isNull ( java.lang.String .class ) , isNull ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . delete ( com.getbase.android.db.provider.Uri ) . where ( null ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . delete ( eq ( com.getbase.android.db.provider.Uri ) , isNull ( java.lang.String .class ) , isNull ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . where ( STRING , java.lang.Object[] ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , isNull ( java.lang.String [] .class ) , eq ( STRING ) , isNull ( java.lang.String [] .class ) , isNull ( java.lang.String .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . update ( com.getbase.android.db.provider.Uri ) . where ( STRING , java.lang.Object[] ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , any ( ContentValues .class ) , eq ( STRING ) , isNull ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . delete ( com.getbase.android.db.provider.Uri ) . where ( STRING , java.lang.Object[] ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . delete ( eq ( com.getbase.android.db.provider.Uri ) , eq ( STRING ) , isNull ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . where ( null , java.lang.Object[] ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . query ( eq ( com.getbase.android.db.provider.Uri ) , isNull ( java.lang.String [] .class ) , isNull ( java.lang.String .class ) , isNull ( java.lang.String [] .class ) , isNull ( java.lang.String .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . update ( com.getbase.android.db.provider.Uri ) . where ( null , java.lang.Object[] ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . update ( eq ( com.getbase.android.db.provider.Uri ) , any ( ContentValues .class ) , isNull ( java.lang.String .class ) , isNull ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { ProviderAction . delete ( com.getbase.android.db.provider.Uri ) . where ( null , java.lang.Object[] ) . perform ( com.getbase.android.db.provider.ContentResolver ) ; verify ( com.getbase.android.db.provider.ContentResolver ) . delete ( eq ( com.getbase.android.db.provider.Uri ) , isNull ( java.lang.String .class ) , isNull ( java.lang.String [] .class ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ProviderAction . query ( com.getbase.android.db.provider.Uri ) . where ( null , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ProviderAction . update ( com.getbase.android.db.provider.Uri ) . where ( null , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { ProviderAction . delete ( com.getbase.android.db.provider.Uri ) . where ( null , STRING ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , STRING ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindString ( eq ( NUMBER ) , eq ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , ( byte ) NUMBER ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindLong ( eq ( NUMBER ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , ( short ) NUMBER ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindLong ( eq ( NUMBER ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , NUMBER ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindLong ( eq ( NUMBER ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , NUMBER ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindLong ( eq ( NUMBER ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , NUMBER ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindDouble ( eq ( NUMBER ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , NUMBER ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindDouble ( eq ( NUMBER ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , true ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindLong ( eq ( NUMBER ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , false ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindLong ( eq ( NUMBER ) , eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , null ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindNull ( eq ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , new byte [ NUMBER ] ) ; verify ( com.getbase.android.db.provider.SQLiteStatement ) . bindBlob ( eq ( NUMBER ) , eq ( new byte [ NUMBER ] ) ) ; }  <METHOD_END>
<METHOD_START> @ Test ( expected = java.lang.IllegalArgumentException .class ) public void void ( ) java.lang.Exception { Utils . bindContentValueArg ( com.getbase.android.db.provider.SQLiteStatement , NUMBER , new java.lang.Object ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( Utils . escapeSqlArg ( null ) ) . isNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( Utils . escapeSqlArg ( true ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( Utils . escapeSqlArg ( NUMBER ) ) . isEqualTo ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( Utils . escapeSqlArg ( STRING ) ) . isEqualTo ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ Implementation public void void ( ) { new AsyncTask < java.lang.Void , java.lang.Void , T > ( ) { @ java.lang.Override protected T T ( java.lang.Void ... java.lang.Void[] ) { return com.getbase.android.db.shadows.AsyncTaskLoader<T> . loadInBackground ( ) ; } @ java.lang.Override protected void void ( T T ) { com.getbase.android.db.shadows.AsyncTaskLoader<T> . deliverResult ( T ) ; } } . execute ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected T T ( java.lang.Void ... java.lang.Void[] ) { return com.getbase.android.db.shadows.AsyncTaskLoader<T> . loadInBackground ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( T T ) { com.getbase.android.db.shadows.AsyncTaskLoader<T> . deliverResult ( T ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { java.lang.Class<?> = java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> @ Parameters ( name = STRING ) public static java.util.Collection<java.lang.Object[]> < java.lang.Object [] > java.util.Collection<java.lang.Object[]> ( ) { return java.util.Arrays . java.util.List<java.lang.Object[]> ( new java.lang.Object [] [] { { Cursors .class } , { SingleRowTransforms .class } , { Utils .class } ,    } ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { assertThat ( java.lang.Class<> . java.lang.Class<? super > ( ) ) . isEqualTo ( java.lang.Object .class ) ; assertThat ( java.lang.reflect.Modifier . boolean ( java.lang.Class<> . int ( ) ) ) . isTrue ( ) ; assertThat ( java.lang.Class<> . java.lang.reflect.Constructor<?>[] ( ) ) . hasLength ( NUMBER ) ; final java.lang.reflect.Constructor<?> < ? > java.lang.reflect.Constructor<?> = java.lang.Class<> . java.lang.reflect.Constructor<> ( ) ; assertThat ( java.lang.reflect.Constructor<> . boolean ( ) ) . isFalse ( ) ; assertThat ( java.lang.reflect.Modifier . boolean ( java.lang.reflect.Constructor<> . int ( ) ) ) . isTrue ( ) ; for ( final java.lang.reflect.Method java.lang.reflect.Method : java.lang.Class<> . java.lang.reflect.Method[] ( ) ) { assertThat ( java.lang.reflect.Modifier . boolean ( java.lang.reflect.Method . int ( ) ) ) . named ( java.lang.reflect.Method . java.lang.String ( ) ) . isTrue ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable Bundle net.rdrei.android.dirchooser.Bundle ) { super. onCreate ( net.rdrei.android.dirchooser.Bundle ) ; void ( ) ; setContentView ( R . layout . directory_chooser_activity ) ; final DirectoryChooserConfig net.rdrei.android.dirchooser.DirectoryChooserConfig = getIntent ( ) . getParcelableExtra ( java.lang.String ) ; if ( net.rdrei.android.dirchooser.DirectoryChooserConfig == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( net.rdrei.android.dirchooser.Bundle == null ) { final FragmentManager net.rdrei.android.dirchooser.FragmentManager = getFragmentManager ( ) ; final DirectoryChooserFragment net.rdrei.android.dirchooser.DirectoryChooserFragment = DirectoryChooserFragment . newInstance ( net.rdrei.android.dirchooser.DirectoryChooserConfig ) ; net.rdrei.android.dirchooser.FragmentManager . beginTransaction ( ) . add ( R . id . main , net.rdrei.android.dirchooser.DirectoryChooserFragment ) . commit ( ) ; } }  <METHOD_END>
<METHOD_START> void void ( ) { @ SuppressLint ( STRING ) final ActionBar net.rdrei.android.dirchooser.ActionBar = getActionBar ( ) ; if ( net.rdrei.android.dirchooser.ActionBar != null ) { net.rdrei.android.dirchooser.ActionBar . setDisplayHomeAsUpEnabled ( true ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem net.rdrei.android.dirchooser.MenuItem ) { final int int = net.rdrei.android.dirchooser.MenuItem . getItemId ( ) ; if ( int == android . R . id . home ) { setResult ( RESULT_CANCELED ) ; finish ( ) ; return true ; } return super. onOptionsItemSelected ( net.rdrei.android.dirchooser.MenuItem ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ NonNull java.lang.String java.lang.String ) { final Intent net.rdrei.android.dirchooser.Intent = new Intent ( ) ; net.rdrei.android.dirchooser.Intent . putExtra ( java.lang.String , java.lang.String ) ; setResult ( int , net.rdrei.android.dirchooser.Intent ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { setResult ( RESULT_CANCELED ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> public static net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder ( ) { return new AutoParcel_DirectoryChooserConfig . AutoParcel_DirectoryChooserConfig ( ) . initialDirectory ( STRING ) . allowNewDirectoryNameModification ( false ) . allowReadOnlyDirectory ( false ) ; }  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> abstract boolean boolean ( )  <METHOD_END>
<METHOD_START> abstract boolean boolean ( )  <METHOD_END>
<METHOD_START> public abstract net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public abstract net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder ( java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> public abstract net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder ( boolean boolean );  <METHOD_END>
<METHOD_START> public abstract net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder net.rdrei.android.dirchooser.DirectoryChooserConfig.Builder ( boolean boolean );  <METHOD_END>
<METHOD_START> public abstract net.rdrei.android.dirchooser.DirectoryChooserConfig net.rdrei.android.dirchooser.DirectoryChooserConfig ( )  <METHOD_END>
<METHOD_START> public void ( ) { }  <METHOD_END>
<METHOD_START> public static net.rdrei.android.dirchooser.DirectoryChooserFragment net.rdrei.android.dirchooser.DirectoryChooserFragment ( @ NonNull final DirectoryChooserConfig net.rdrei.android.dirchooser.DirectoryChooserConfig ) { final net.rdrei.android.dirchooser.DirectoryChooserFragment net.rdrei.android.dirchooser.DirectoryChooserFragment = new net.rdrei.android.dirchooser.DirectoryChooserFragment ( ) ; final Bundle net.rdrei.android.dirchooser.Bundle = new Bundle ( ) ; net.rdrei.android.dirchooser.Bundle . putParcelable ( java.lang.String , net.rdrei.android.dirchooser.DirectoryChooserConfig ) ; net.rdrei.android.dirchooser.DirectoryChooserFragment . setArguments ( net.rdrei.android.dirchooser.Bundle ) ; return net.rdrei.android.dirchooser.DirectoryChooserFragment ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ NonNull final Bundle net.rdrei.android.dirchooser.Bundle ) { super. onSaveInstanceState ( net.rdrei.android.dirchooser.Bundle ) ; if ( java.io.File != null ) { net.rdrei.android.dirchooser.Bundle . putString ( java.lang.String , java.io.File . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Bundle net.rdrei.android.dirchooser.Bundle ) { super. onCreate ( net.rdrei.android.dirchooser.Bundle ) ; if ( getArguments ( ) == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } net.rdrei.android.dirchooser.DirectoryChooserConfig = getArguments ( ) . getParcelable ( java.lang.String ) ; if ( net.rdrei.android.dirchooser.DirectoryChooserConfig == null ) { throw new java.lang.NullPointerException ( STRING + STRING ) ; } java.lang.String = net.rdrei.android.dirchooser.DirectoryChooserConfig . newDirectoryName ( ) ; java.lang.String = net.rdrei.android.dirchooser.DirectoryChooserConfig . initialDirectory ( ) ; if ( net.rdrei.android.dirchooser.Bundle != null ) { java.lang.String = net.rdrei.android.dirchooser.Bundle . getString ( java.lang.String ) ; } if ( getShowsDialog ( ) ) { setStyle ( DialogFragment . STYLE_NO_TITLE , NUMBER ) ; } else { setHasOptionsMenu ( true ) ; } if ( ! net.rdrei.android.dirchooser.DirectoryChooserConfig . allowNewDirectoryNameModification ( ) && TextUtils . isEmpty ( java.lang.String ) ) { throw new java.lang.IllegalArgumentException ( STRING + STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.View net.rdrei.android.dirchooser.View ( final LayoutInflater net.rdrei.android.dirchooser.LayoutInflater , final ViewGroup net.rdrei.android.dirchooser.ViewGroup , final Bundle net.rdrei.android.dirchooser.Bundle ) { assert getActivity ( ) != null ; final View net.rdrei.android.dirchooser.View = net.rdrei.android.dirchooser.LayoutInflater . inflate ( R . layout . directory_chooser , net.rdrei.android.dirchooser.ViewGroup , false ) ; net.rdrei.android.dirchooser.Button = ( Button ) net.rdrei.android.dirchooser.View . findViewById ( R . id . btnConfirm ) ; net.rdrei.android.dirchooser.Button = ( Button ) net.rdrei.android.dirchooser.View . findViewById ( R . id . btnCancel ) ; net.rdrei.android.dirchooser.ImageButton = ( ImageButton ) net.rdrei.android.dirchooser.View . findViewById ( R . id . btnNavUp ) ; net.rdrei.android.dirchooser.ImageButton = ( ImageButton ) net.rdrei.android.dirchooser.View . findViewById ( R . id . btnCreateFolder ) ; net.rdrei.android.dirchooser.TextView = ( TextView ) net.rdrei.android.dirchooser.View . findViewById ( R . id . txtvSelectedFolder ) ; net.rdrei.android.dirchooser.ListView = ( ListView ) net.rdrei.android.dirchooser.View . findViewById ( R . id . directoryList ) ; net.rdrei.android.dirchooser.Button . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View net.rdrei.android.dirchooser.View ) { if ( boolean ( java.io.File ) ) { void ( ) ; } } } ) ; net.rdrei.android.dirchooser.Button . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View net.rdrei.android.dirchooser.View ) { net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> . foreach ( new UnitFunction < net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener > ( ) { @ java.lang.Override public void void ( final net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener . void ( ) ; } } ) ; } } ) ; net.rdrei.android.dirchooser.ListView . setOnItemClickListener ( new OnItemClickListener ( ) { @ java.lang.Override public void void ( final AdapterView < ? > net.rdrei.android.dirchooser.AdapterView<?> , final View net.rdrei.android.dirchooser.View , final int int , final long long ) { void ( STRING , int ) ; if ( java.io.File[] != null && int >= NUMBER && int < java.io.File[] . int ) { void ( java.io.File[] [ int ] ) ; } } } ) ; net.rdrei.android.dirchooser.ImageButton . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View net.rdrei.android.dirchooser.View ) { final java.io.File java.io.File ; if ( java.io.File != null && ( java.io.File = java.io.File . java.io.File ( ) ) != null ) { void ( java.io.File ) ; } } } ) ; net.rdrei.android.dirchooser.ImageButton . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( final View net.rdrei.android.dirchooser.View ) { void ( ) ; } } ) ; if ( ! getShowsDialog ( ) ) { net.rdrei.android.dirchooser.ImageButton . setVisibility ( View . GONE ) ; } void ( ) ; java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; net.rdrei.android.dirchooser.ArrayAdapter<java.lang.String> = new ArrayAdapter <> ( getActivity ( ) , android . R . layout . simple_list_item_1 , java.util.List<java.lang.String> ) ; net.rdrei.android.dirchooser.ListView . setAdapter ( net.rdrei.android.dirchooser.ArrayAdapter<java.lang.String> ) ; final java.io.File java.io.File ; if ( ! TextUtils . isEmpty ( java.lang.String ) && boolean ( new java.io.File ( java.lang.String ) ) ) { java.io.File = new java.io.File ( java.lang.String ) ; } else { java.io.File = Environment . getExternalStorageDirectory ( ) ; } void ( java.io.File ) ; return net.rdrei.android.dirchooser.View ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final View net.rdrei.android.dirchooser.View ) { if ( boolean ( java.io.File ) ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final View net.rdrei.android.dirchooser.View ) { net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> . foreach ( new UnitFunction < net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener > ( ) { @ java.lang.Override public void void ( final net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener . void ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final AdapterView < ? > net.rdrei.android.dirchooser.AdapterView<?> , final View net.rdrei.android.dirchooser.View , final int int , final long long ) { void ( STRING , int ) ; if ( java.io.File[] != null && int >= NUMBER && int < java.io.File[] . int ) { void ( java.io.File[] [ int ] ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final View net.rdrei.android.dirchooser.View ) { final java.io.File java.io.File ; if ( java.io.File != null && ( java.io.File = java.io.File . java.io.File ( ) ) != null ) { void ( java.io.File ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final View net.rdrei.android.dirchooser.View ) { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { int int = NUMBER ; final Resources . Resources Resources.Theme = getActivity ( ) . getTheme ( ) ; if ( Resources.Theme != null ) { final TypedArray net.rdrei.android.dirchooser.TypedArray = Resources.Theme . obtainStyledAttributes ( new int [] { android . R . attr . colorBackground } ) ; if ( net.rdrei.android.dirchooser.TypedArray != null ) { int = net.rdrei.android.dirchooser.TypedArray . getColor ( NUMBER , NUMBER ) ; net.rdrei.android.dirchooser.TypedArray . recycle ( ) ; } } if ( int != NUMBER && NUMBER * Color . red ( int ) + NUMBER * Color . green ( int ) + NUMBER * Color . blue ( int ) < NUMBER ) { net.rdrei.android.dirchooser.ImageButton . setImageResource ( R . drawable . navigation_up_light ) ; net.rdrei.android.dirchooser.ImageButton . setImageResource ( R . drawable . ic_action_create_light ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Activity net.rdrei.android.dirchooser.Activity ) { super. onAttach ( net.rdrei.android.dirchooser.Activity ) ; if ( net.rdrei.android.dirchooser.Activity instanceof net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> = Option . some ( ( net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) net.rdrei.android.dirchooser.Activity ) ; } else { Fragment net.rdrei.android.dirchooser.Fragment = getTargetFragment ( ) ; if ( net.rdrei.android.dirchooser.Fragment instanceof net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> = Option . some ( ( net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) net.rdrei.android.dirchooser.Fragment ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onDetach ( ) ; net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; if ( net.rdrei.android.dirchooser.FileObserver != null ) { net.rdrei.android.dirchooser.FileObserver . stopWatching ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; if ( net.rdrei.android.dirchooser.FileObserver != null ) { net.rdrei.android.dirchooser.FileObserver . startWatching ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Menu net.rdrei.android.dirchooser.Menu , final MenuInflater net.rdrei.android.dirchooser.MenuInflater ) { net.rdrei.android.dirchooser.MenuInflater . inflate ( R . menu . directory_chooser , net.rdrei.android.dirchooser.Menu ) ; final MenuItem net.rdrei.android.dirchooser.MenuItem = net.rdrei.android.dirchooser.Menu . findItem ( R . id . new_folder_item ) ; if ( net.rdrei.android.dirchooser.MenuItem == null ) { return; } net.rdrei.android.dirchooser.MenuItem . setVisible ( boolean ( java.io.File ) && java.lang.String != null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final MenuItem net.rdrei.android.dirchooser.MenuItem ) { final int int = net.rdrei.android.dirchooser.MenuItem . getItemId ( ) ; if ( int == R . id . new_folder_item ) { void ( ) ; return true ; } return super. onOptionsItemSelected ( net.rdrei.android.dirchooser.MenuItem ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { @ SuppressLint ( STRING ) final View net.rdrei.android.dirchooser.View = getActivity ( ) . getLayoutInflater ( ) . inflate ( R . layout . dialog_new_folder , null ) ; final TextView net.rdrei.android.dirchooser.TextView = ( TextView ) net.rdrei.android.dirchooser.View . findViewById ( R . id . msgText ) ; final EditText net.rdrei.android.dirchooser.EditText = ( EditText ) net.rdrei.android.dirchooser.View . findViewById ( R . id . editText ) ; net.rdrei.android.dirchooser.EditText . setText ( java.lang.String ) ; net.rdrei.android.dirchooser.TextView . setText ( getString ( R . string . create_folder_msg , java.lang.String ) ) ; final AlertDialog net.rdrei.android.dirchooser.AlertDialog = new AlertDialog . AlertDialog ( getActivity ( ) ) . setTitle ( R . string . create_folder_label ) . setView ( net.rdrei.android.dirchooser.View ) . setNegativeButton ( R . string . cancel_label , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface net.rdrei.android.dirchooser.DialogInterface , final int int ) { net.rdrei.android.dirchooser.DialogInterface . dismiss ( ) ; } } ) . setPositiveButton ( R . string . confirm_label , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface net.rdrei.android.dirchooser.DialogInterface , final int int ) { net.rdrei.android.dirchooser.DialogInterface . dismiss ( ) ; java.lang.String = net.rdrei.android.dirchooser.EditText . getText ( ) . toString ( ) ; final int int = int ( ) ; Toast . makeText ( getActivity ( ) , int , Toast . LENGTH_SHORT ) . show ( ) ; } } ) . show ( ) ; net.rdrei.android.dirchooser.AlertDialog . getButton ( DialogInterface . BUTTON_POSITIVE ) . setEnabled ( net.rdrei.android.dirchooser.EditText . getText ( ) . length ( ) != NUMBER ) ; net.rdrei.android.dirchooser.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( final java.lang.CharSequence java.lang.CharSequence , final int int , final int int , final int int ) {            } @ java.lang.Override public void void ( final java.lang.CharSequence java.lang.CharSequence , final int int , final int int , final int int ) { final boolean boolean = java.lang.CharSequence . int ( ) != NUMBER ; net.rdrei.android.dirchooser.AlertDialog . getButton ( DialogInterface . BUTTON_POSITIVE ) . setEnabled ( boolean ) ; net.rdrei.android.dirchooser.TextView . setText ( getString ( R . string . create_folder_msg , java.lang.CharSequence . java.lang.String ( ) ) ) ; } @ java.lang.Override public void void ( final Editable net.rdrei.android.dirchooser.Editable ) {            } } ) ; net.rdrei.android.dirchooser.EditText . setVisibility ( net.rdrei.android.dirchooser.DirectoryChooserConfig . allowNewDirectoryNameModification ( ) ? View . VISIBLE : View . GONE ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final DialogInterface net.rdrei.android.dirchooser.DialogInterface , final int int ) { net.rdrei.android.dirchooser.DialogInterface . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final DialogInterface net.rdrei.android.dirchooser.DialogInterface , final int int ) { net.rdrei.android.dirchooser.DialogInterface . dismiss ( ) ; java.lang.String = net.rdrei.android.dirchooser.EditText . getText ( ) . toString ( ) ; final int int = int ( ) ; Toast . makeText ( getActivity ( ) , int , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.CharSequence java.lang.CharSequence , final int int , final int int , final int int ) {            }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.CharSequence java.lang.CharSequence , final int int , final int int , final int int ) { final boolean boolean = java.lang.CharSequence . int ( ) != NUMBER ; net.rdrei.android.dirchooser.AlertDialog . getButton ( DialogInterface . BUTTON_POSITIVE ) . setEnabled ( boolean ) ; net.rdrei.android.dirchooser.TextView . setText ( getString ( R . string . create_folder_msg , java.lang.CharSequence . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Editable net.rdrei.android.dirchooser.Editable ) {            }  <METHOD_END>
<METHOD_START> private static void void ( final java.lang.String java.lang.String , final java.lang.Object ... java.lang.Object[] ) { Log . d ( java.lang.String , java.lang.String . java.lang.String ( java.lang.String , java.lang.Object[] ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( final java.io.File java.io.File ) { if ( java.io.File == null ) { void ( STRING ) ; } else if ( ! java.io.File . boolean ( ) ) { void ( STRING ) ; } else { final java.io.File [] java.io.File[] = java.io.File . java.io.File[] ( ) ; if ( java.io.File[] != null ) { int int = NUMBER ; for ( final java.io.File java.io.File : java.io.File[] ) { if ( java.io.File . boolean ( ) ) { int ++ ; } } java.io.File[] = new java.io.File [ int ] ; java.util.List<java.lang.String> . void ( ) ; for ( int int = NUMBER , int = NUMBER ; int < int ; int ++ ) { if ( java.io.File[] [ int ] . boolean ( ) ) { java.io.File[] [ int ] = java.io.File[] [ int ] ; java.util.List<java.lang.String> . boolean ( java.io.File[] [ int ] . java.lang.String ( ) ) ; int ++ ; } } java.util.Arrays . void ( java.io.File[] ) ; java.util.Collections . void ( java.util.List<java.lang.String> ) ; java.io.File = java.io.File ; net.rdrei.android.dirchooser.TextView . setText ( java.io.File . java.lang.String ( ) ) ; net.rdrei.android.dirchooser.ArrayAdapter<java.lang.String> . notifyDataSetChanged ( ) ; net.rdrei.android.dirchooser.FileObserver = net.rdrei.android.dirchooser.FileObserver ( java.io.File . java.lang.String ( ) ) ; net.rdrei.android.dirchooser.FileObserver . startWatching ( ) ; void ( STRING , java.io.File . java.lang.String ( ) ) ; } else { void ( STRING ) ; } } void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { final Activity net.rdrei.android.dirchooser.Activity = getActivity ( ) ; if ( net.rdrei.android.dirchooser.Activity != null && java.io.File != null ) { net.rdrei.android.dirchooser.Button . setEnabled ( boolean ( java.io.File ) ) ; getActivity ( ) . invalidateOptionsMenu ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( java.io.File != null ) { void ( java.io.File ) ; } }  <METHOD_END>
<METHOD_START> private net.rdrei.android.dirchooser.FileObserver net.rdrei.android.dirchooser.FileObserver ( final java.lang.String java.lang.String ) { return new FileObserver ( java.lang.String , FileObserver . CREATE | FileObserver . DELETE | FileObserver . MOVED_FROM | FileObserver . MOVED_TO ) { @ java.lang.Override public void void ( final int int , final java.lang.String java.lang.String ) { void ( STRING , int ) ; final Activity net.rdrei.android.dirchooser.Activity = getActivity ( ) ; if ( net.rdrei.android.dirchooser.Activity != null ) { net.rdrei.android.dirchooser.Activity . runOnUiThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( ) ; } } ) ; } } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final java.lang.String java.lang.String ) { void ( STRING , int ) ; final Activity net.rdrei.android.dirchooser.Activity = getActivity ( ) ; if ( net.rdrei.android.dirchooser.Activity != null ) { net.rdrei.android.dirchooser.Activity . runOnUiThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { void ( ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( java.io.File != null ) { void ( STRING , java.io.File . java.lang.String ( ) ) ; net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> . foreach ( new UnitFunction < net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener > ( ) { @ java.lang.Override public void void ( final net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener . void ( java.io.File . java.lang.String ( ) ) ; } } ) ; } else { net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> . foreach ( new UnitFunction < net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener > ( ) { @ java.lang.Override public void void ( final net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener . void ( ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener . void ( java.io.File . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener . void ( ) ; }  <METHOD_END>
<METHOD_START> private int int ( ) { if ( java.lang.String != null && java.io.File != null && java.io.File . boolean ( ) ) { final java.io.File java.io.File = new java.io.File ( java.io.File , java.lang.String ) ; if ( java.io.File . boolean ( ) ) { return R . string . create_folder_error_already_exists ; } else { final boolean boolean = java.io.File . boolean ( ) ; if ( boolean ) { return R . string . create_folder_success ; } else { return R . string . create_folder_error ; } } } else if ( java.io.File != null && ! java.io.File . boolean ( ) ) { return R . string . create_folder_error_no_write_access ; } else { return R . string . create_folder_error ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( final java.io.File java.io.File ) { return ( java.io.File != null && java.io.File . boolean ( ) && java.io.File . boolean ( ) && ( net.rdrei.android.dirchooser.DirectoryChooserConfig . allowNewDirectoryNameModification ( ) || java.io.File . boolean ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Nullable public net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ( ) { return net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> . get ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Nullable final net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) { net.rdrei.android.dirchooser.Option<net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener> = Option . option ( net.rdrei.android.dirchooser.DirectoryChooserFragment.OnFragmentInteractionListener ) ; }  <METHOD_END>
<METHOD_START> void void ( @ NonNull java.lang.String java.lang.String );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> @ Before public void void ( ) { net.rdrei.android.dirchooser.DirectoryChooserActivity = Mockito . mock ( DirectoryChooserActivity .class ) ; Mockito . doNothing ( ) . when ( net.rdrei.android.dirchooser.DirectoryChooserActivity ) . setupActionBar ( ) ; net.rdrei.android.dirchooser.Intent = new Intent ( ) ; Mockito . doReturn ( net.rdrei.android.dirchooser.Intent ) . when ( net.rdrei.android.dirchooser.DirectoryChooserActivity ) . getIntent ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { net.rdrei.android.dirchooser.DirectoryChooserActivity . onCreate ( null ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { final DirectoryChooserConfig net.rdrei.android.dirchooser.DirectoryChooserConfig = DirectoryChooserConfig . builder ( ) . newDirectoryName ( STRING ) . build ( ) ; net.rdrei.android.dirchooser.Intent . putExtra ( DirectoryChooserActivity . EXTRA_CONFIG , net.rdrei.android.dirchooser.DirectoryChooserConfig ) ; net.rdrei.android.dirchooser.DirectoryChooserActivity . onCreate ( null ) ; }  <METHOD_END>
<METHOD_START> @ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) public static void void ( @ NonNull final Fragment net.rdrei.android.dirchooser.Fragment , @ Nullable java.lang.Class java.lang.Class ) { final Activity net.rdrei.android.dirchooser.Activity = ( Activity ) Robolectric . buildActivity ( java.lang.Class == null ? Activity .class : java.lang.Class ) . create ( ) . start ( ) . resume ( ) . get ( ) ; final FragmentManager net.rdrei.android.dirchooser.FragmentManager = net.rdrei.android.dirchooser.Activity . getFragmentManager ( ) ; final FragmentTransaction net.rdrei.android.dirchooser.FragmentTransaction = net.rdrei.android.dirchooser.FragmentManager . beginTransaction ( ) ; net.rdrei.android.dirchooser.FragmentTransaction . add ( R . id . main , net.rdrei.android.dirchooser.Fragment ) ; net.rdrei.android.dirchooser.FragmentTransaction . commit ( ) ; net.rdrei.android.dirchooser.FragmentManager . executePendingTransactions ( ) ; }  <METHOD_END>
<METHOD_START> @ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) @ Test public void void ( ) { final DirectoryChooserFragment net.rdrei.android.dirchooser.DirectoryChooserFragment = DirectoryChooserFragment . newInstance ( DirectoryChooserConfig . builder ( ) . newDirectoryName ( STRING ) . build ( ) ) ; void ( net.rdrei.android.dirchooser.DirectoryChooserFragment , net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.DirectoryChooserActivityMock .class ) ; final View net.rdrei.android.dirchooser.View = net.rdrei.android.dirchooser.DirectoryChooserFragment . getActivity ( ) . findViewById ( R . id . btnConfirm ) ; assertThat ( net.rdrei.android.dirchooser.View ) . isEnabled ( ) ; assertThat ( net.rdrei.android.dirchooser.View . performClick ( ) ) . isTrue ( ) ; assertThat ( ( ( net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.DirectoryChooserActivityMock ) net.rdrei.android.dirchooser.DirectoryChooserFragment . getActivity ( ) ) . java.lang.String ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final DirectoryChooserFragment net.rdrei.android.dirchooser.DirectoryChooserFragment = DirectoryChooserFragment . newInstance ( DirectoryChooserConfig . builder ( ) . newDirectoryName ( java.lang.String ) . initialDirectory ( STRING ) . allowReadOnlyDirectory ( false ) . allowNewDirectoryNameModification ( true ) . build ( ) ) ; void ( net.rdrei.android.dirchooser.DirectoryChooserFragment , net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.DirectoryChooserActivityMock .class ) ; net.rdrei.android.dirchooser.DirectoryChooserFragment . onOptionsItemSelected ( new TestMenuItem ( ) { @ java.lang.Override public int int ( ) { return R . id . new_folder_item ; } } ) ; final AlertDialog net.rdrei.android.dirchooser.AlertDialog = ( AlertDialog ) ShadowDialog . getLatestDialog ( ) ; final ShadowAlertDialog net.rdrei.android.dirchooser.ShadowAlertDialog = Shadows . shadowOf ( net.rdrei.android.dirchooser.AlertDialog ) ; assertThat ( net.rdrei.android.dirchooser.ShadowAlertDialog . getTitle ( ) ) . isEqualTo ( STRING ) ; assertThat ( ShadowDialog . getShownDialogs ( ) ) . contains ( net.rdrei.android.dirchooser.AlertDialog ) ; final TextView net.rdrei.android.dirchooser.TextView = ( TextView ) net.rdrei.android.dirchooser.AlertDialog . findViewById ( R . id . msgText ) ; assertThat ( net.rdrei.android.dirchooser.TextView ) . hasText ( STRING ) ; final EditText net.rdrei.android.dirchooser.EditText = ( EditText ) net.rdrei.android.dirchooser.AlertDialog . findViewById ( R . id . editText ) ; assertThat ( net.rdrei.android.dirchooser.EditText ) . isVisible ( ) ; assertThat ( net.rdrei.android.dirchooser.EditText ) . hasTextString ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return R . id . new_folder_item ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { final java.lang.String java.lang.String = STRING ; final DirectoryChooserFragment net.rdrei.android.dirchooser.DirectoryChooserFragment = DirectoryChooserFragment . newInstance ( DirectoryChooserConfig . builder ( ) . newDirectoryName ( java.lang.String ) . initialDirectory ( STRING ) . allowReadOnlyDirectory ( false ) . allowNewDirectoryNameModification ( false ) . build ( ) ) ; void ( net.rdrei.android.dirchooser.DirectoryChooserFragment , net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.DirectoryChooserActivityMock .class ) ; net.rdrei.android.dirchooser.DirectoryChooserFragment . onOptionsItemSelected ( new TestMenuItem ( ) { @ java.lang.Override public int int ( ) { return R . id . new_folder_item ; } } ) ; final AlertDialog net.rdrei.android.dirchooser.AlertDialog = ( AlertDialog ) ShadowDialog . getLatestDialog ( ) ; final ShadowAlertDialog net.rdrei.android.dirchooser.ShadowAlertDialog = Shadows . shadowOf ( net.rdrei.android.dirchooser.AlertDialog ) ; assertThat ( net.rdrei.android.dirchooser.ShadowAlertDialog . getTitle ( ) ) . isEqualTo ( STRING ) ; assertThat ( ShadowDialog . getShownDialogs ( ) ) . contains ( net.rdrei.android.dirchooser.AlertDialog ) ; final TextView net.rdrei.android.dirchooser.TextView = ( TextView ) net.rdrei.android.dirchooser.AlertDialog . findViewById ( R . id . msgText ) ; assertThat ( net.rdrei.android.dirchooser.TextView ) . hasText ( STRING ) ; final EditText net.rdrei.android.dirchooser.EditText = ( EditText ) net.rdrei.android.dirchooser.AlertDialog . findViewById ( R . id . editText ) ; assertThat ( net.rdrei.android.dirchooser.EditText ) . isGone ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return R . id . new_folder_item ; }  <METHOD_END>
<METHOD_START> @ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) @ Test public void void ( ) { final DirectoryChooserFragment net.rdrei.android.dirchooser.DirectoryChooserFragment = DirectoryChooserFragment . newInstance ( DirectoryChooserConfig . builder ( ) . newDirectoryName ( STRING ) . build ( ) ) ; void ( net.rdrei.android.dirchooser.DirectoryChooserFragment , net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.CustomDirectoryChooserActivity .class ) ; final net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.CustomDirectoryChooserListener net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.CustomDirectoryChooserListener = new net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.CustomDirectoryChooserListener ( ) ; net.rdrei.android.dirchooser.DirectoryChooserFragment . setDirectoryChooserListener ( net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.CustomDirectoryChooserListener ) ; final View net.rdrei.android.dirchooser.View = net.rdrei.android.dirchooser.DirectoryChooserFragment . getActivity ( ) . findViewById ( R . id . btnConfirm ) ; assertThat ( net.rdrei.android.dirchooser.View ) . isEnabled ( ) ; assertThat ( net.rdrei.android.dirchooser.View . performClick ( ) ) . isTrue ( ) ; assertThat ( net.rdrei.android.dirchooser.DirectoryChooserFragmentTest.CustomDirectoryChooserListener . java.lang.String ) . isNotNull ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable final Bundle net.rdrei.android.dirchooser.Bundle ) { super. onCreate ( net.rdrei.android.dirchooser.Bundle ) ; setContentView ( R . layout . directory_chooser_activity ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ NonNull final java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {        }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( final Bundle net.rdrei.android.dirchooser.Bundle ) { super. onCreate ( net.rdrei.android.dirchooser.Bundle ) ; setContentView ( R . layout . directory_chooser_activity ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ NonNull final java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { java.lang.String = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( java.lang.CharSequence java.lang.CharSequence ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( int int ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( java.lang.CharSequence java.lang.CharSequence ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( Drawable net.rdrei.android.dirchooser.Drawable ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( int int ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.Drawable net.rdrei.android.dirchooser.Drawable ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( Intent net.rdrei.android.dirchooser.Intent ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.Intent net.rdrei.android.dirchooser.Intent ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( char char , char char ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( char char ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public char char ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( char char ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public char char ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( boolean boolean ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( boolean boolean ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( boolean boolean ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( boolean boolean ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.SubMenu net.rdrei.android.dirchooser.SubMenu ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( OnMenuItemClickListener net.rdrei.android.dirchooser.OnMenuItemClickListener ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public ContextMenu . ContextMenu.ContextMenuInfo ContextMenu.ContextMenuInfo ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( int int ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( View net.rdrei.android.dirchooser.View ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( int int ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.View net.rdrei.android.dirchooser.View ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( ActionProvider net.rdrei.android.dirchooser.ActionProvider ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.ActionProvider net.rdrei.android.dirchooser.ActionProvider ( ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public net.rdrei.android.dirchooser.MenuItem net.rdrei.android.dirchooser.MenuItem ( OnActionExpandListener net.rdrei.android.dirchooser.OnActionExpandListener ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( @ Nullable final Bundle net.rdrei.android.dirchooser.sample.Bundle ) { super. onCreate ( net.rdrei.android.dirchooser.sample.Bundle ) ; setContentView ( R . layout . dialog ) ; final DirectoryChooserConfig net.rdrei.android.dirchooser.sample.DirectoryChooserConfig = DirectoryChooserConfig . builder ( ) . newDirectoryName ( STRING ) . build ( ) ; net.rdrei.android.dirchooser.sample.DirectoryChooserFragment = DirectoryChooserFragment . newInstance ( net.rdrei.android.dirchooser.sample.DirectoryChooserConfig ) ; net.rdrei.android.dirchooser.sample.TextView = ( TextView ) findViewById ( R . id . textDirectory ) ; findViewById ( R . id . btnChoose ) . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View net.rdrei.android.dirchooser.sample.View ) { net.rdrei.android.dirchooser.sample.DirectoryChooserFragment . show ( getFragmentManager ( ) , null ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View net.rdrei.android.dirchooser.sample.View ) { net.rdrei.android.dirchooser.sample.DirectoryChooserFragment . show ( getFragmentManager ( ) , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ NonNull final java.lang.String java.lang.String ) { net.rdrei.android.dirchooser.sample.TextView . setText ( java.lang.String ) ; net.rdrei.android.dirchooser.sample.DirectoryChooserFragment . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { net.rdrei.android.dirchooser.sample.DirectoryChooserFragment . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle net.rdrei.android.dirchooser.sample.Bundle ) { super. onCreate ( net.rdrei.android.dirchooser.sample.Bundle ) ; setContentView ( R . layout . main ) ; net.rdrei.android.dirchooser.sample.TextView = ( TextView ) findViewById ( R . id . textDirectory ) ; findViewById ( R . id . btnChoose ) . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( View net.rdrei.android.dirchooser.sample.View ) { final Intent net.rdrei.android.dirchooser.sample.Intent = new Intent ( net.rdrei.android.dirchooser.sample.DirChooserSample .this , DirectoryChooserActivity .class ) ; final DirectoryChooserConfig net.rdrei.android.dirchooser.sample.DirectoryChooserConfig = DirectoryChooserConfig . builder ( ) . newDirectoryName ( STRING ) . allowReadOnlyDirectory ( true ) . allowNewDirectoryNameModification ( true ) . build ( ) ; net.rdrei.android.dirchooser.sample.Intent . putExtra ( DirectoryChooserActivity . EXTRA_CONFIG , net.rdrei.android.dirchooser.sample.DirectoryChooserConfig ) ; startActivityForResult ( net.rdrei.android.dirchooser.sample.Intent , int ) ; } } ) ; findViewById ( R . id . btnChange ) . setOnClickListener ( new OnClickListener ( ) { @ java.lang.Override public void void ( View net.rdrei.android.dirchooser.sample.View ) { final Intent net.rdrei.android.dirchooser.sample.Intent = new Intent ( net.rdrei.android.dirchooser.sample.DirChooserSample .this , DirChooserFragmentSample .class ) ; startActivity ( net.rdrei.android.dirchooser.sample.Intent ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View net.rdrei.android.dirchooser.sample.View ) { final Intent net.rdrei.android.dirchooser.sample.Intent = new Intent ( net.rdrei.android.dirchooser.sample.DirChooserSample .this , DirectoryChooserActivity .class ) ; final DirectoryChooserConfig net.rdrei.android.dirchooser.sample.DirectoryChooserConfig = DirectoryChooserConfig . builder ( ) . newDirectoryName ( STRING ) . allowReadOnlyDirectory ( true ) . allowNewDirectoryNameModification ( true ) . build ( ) ; net.rdrei.android.dirchooser.sample.Intent . putExtra ( DirectoryChooserActivity . EXTRA_CONFIG , net.rdrei.android.dirchooser.sample.DirectoryChooserConfig ) ; startActivityForResult ( net.rdrei.android.dirchooser.sample.Intent , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View net.rdrei.android.dirchooser.sample.View ) { final Intent net.rdrei.android.dirchooser.sample.Intent = new Intent ( net.rdrei.android.dirchooser.sample.DirChooserSample .this , DirChooserFragmentSample .class ) ; startActivity ( net.rdrei.android.dirchooser.sample.Intent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int , Intent net.rdrei.android.dirchooser.sample.Intent ) { super. onActivityResult ( int , int , net.rdrei.android.dirchooser.sample.Intent ) ; if ( int == int ) { Log . i ( java.lang.String , java.lang.String . java.lang.String ( STRING , int ) ) ; if ( int == DirectoryChooserActivity . RESULT_CODE_DIR_SELECTED ) { net.rdrei.android.dirchooser.sample.TextView . setText ( net.rdrei.android.dirchooser.sample.Intent . getStringExtra ( DirectoryChooserActivity . RESULT_SELECTED_DIR ) ) ; } else { net.rdrei.android.dirchooser.sample.TextView . setText ( STRING ) ; } } }  <METHOD_END>
<METHOD_START> public void ( ) { this( new float [] { NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER } ); }  <METHOD_END>
<METHOD_START> public void ( final float [] float[] ) { super( java.lang.String ); float[] = float[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; void ( float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float [] float[] ) { float[] = float[] ; setUniformMatrix3f ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NO_FILTER_VERTEX_SHADER ); }  <METHOD_END>
<METHOD_START> public void ( final java.lang.String java.lang.String ) { super( java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; if ( float != NUMBER ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final int int ) { super. onOutputSizeChanged ( int , int ) ; if ( ! boolean ) { void ( float ) ; } }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { boolean = true ; float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { boolean = true ; float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; float = float / getOutputWidth ( ) ; float = float / getOutputHeight ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { setFloat ( int , float ) ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( float float ) { super( java.lang.String , float ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( java.lang.String , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> private void void ( final float float , final float float ) { setFloatVec2 ( int , new float [] { NUMBER / float , NUMBER / float } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final int int ) { super. onOutputSizeChanged ( int , int ) ; void ( int , int ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float ) { super( java.lang.String , java.lang.String , java.lang.String , java.lang.String ); this . float = float ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { this . float = float ; runOnDraw ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { initTexelOffsets ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { initTexelOffsets ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public float float ( ) { return float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public float float ( ) { return float ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER , new PointF ( NUMBER , NUMBER ) ); }  <METHOD_END>
<METHOD_START> public void ( float float , float float , PointF jp.co.cyberagent.android.gpuimage.PointF ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float = float ; jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( float ) ; void ( jp.co.cyberagent.android.gpuimage.PointF ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int ) { float = ( float ) int / int ; void ( float ) ; super. onOutputSizeChanged ( int , int ) ; }  <METHOD_END>
<METHOD_START> private void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( PointF jp.co.cyberagent.android.gpuimage.PointF ) { jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; setPoint ( int , jp.co.cyberagent.android.gpuimage.PointF ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( float ) ; void ( float[] [ NUMBER ] , float[] [ NUMBER ] , float[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float ) { float[] = new float [] { float , float , float } ; setFloatVec3 ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); this . float[] = new float [] { NUMBER , NUMBER , NUMBER } ; this . float[] = new float [] { NUMBER , NUMBER , NUMBER } ; this . float[] = new float [] { NUMBER , NUMBER , NUMBER } ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( this . float[] ) ; void ( this . float[] ) ; void ( this . float[] ) ; void ( this . boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( float [] float[] ) { this . float[] = float[] ; setFloatVec3 ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( float [] float[] ) { this . float[] = float[] ; setFloatVec3 ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( float [] float[] ) { this . float[] = float[] ; setFloatVec3 ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; setInteger ( int , boolean ? NUMBER : NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , new float [] { NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER } ); }  <METHOD_END>
<METHOD_START> public void ( final float float , final float [] float[] ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float[] = float[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float [] float[] ) { float[] = float[] ; setUniformMatrix4f ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float , float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float float ; if ( getOutputWidth ( ) != NUMBER ) { float = NUMBER / ( float ) getOutputWidth ( ) ; } else { float = NUMBER / NUMBER ; } if ( float < float ) { float = float ; } else { float = float ; } setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( int int ) { this( java.lang.String ( int ) , java.lang.String ( int ) ); }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String , java.lang.String , java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( int int ) { switch ( int ) { case NUMBER : case NUMBER : return java.lang.String ; case NUMBER : return java.lang.String ; case NUMBER : return java.lang.String ; default: return java.lang.String ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( int int ) { switch ( int ) { case NUMBER : case NUMBER : return java.lang.String ; case NUMBER : return java.lang.String ; case NUMBER : return java.lang.String ; default: return java.lang.String ; } }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( float float ) { super( java.lang.String , float ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super(); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setConvolutionKernel ( new float [] { float * ( - NUMBER ) , - float , NUMBER , - float , NUMBER , float , NUMBER , float , float * NUMBER ,        } ) ; }  <METHOD_END>
<METHOD_START> public float float ( ) { return float ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float , float float , float float , float float , float float , float float ) { this( new float [] { float , float , float } , new float [] { float , float , float } ); }  <METHOD_END>
<METHOD_START> public void ( float [] float[] , float [] float[] ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float[] = float[] ; float[] = float[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float[] ) ; void ( float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float [] float[] ) { float[] = float[] ; setFloatVec3 ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float [] float[] ) { float[] = float[] ; setFloatVec3 ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( null ); }  <METHOD_END>
<METHOD_START> public void ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> < GPUImageFilter > java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ) { java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> = java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ; if ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> == null ) { java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> = new java.util.ArrayList<jp.co.cyberagent.android.gpuimage.GPUImageFilter> < GPUImageFilter > ( ) ; } else { void ( ) ; } java.nio.FloatBuffer = java.nio.ByteBuffer . java.nio.ByteBuffer ( CUBE . length * NUMBER ) . order ( java.nio.ByteOrder . java.nio.ByteOrder ( ) ) . asFloatBuffer ( ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( CUBE ) . position ( NUMBER ) ; java.nio.FloatBuffer = java.nio.ByteBuffer . java.nio.ByteBuffer ( TEXTURE_NO_ROTATION . length * NUMBER ) . order ( java.nio.ByteOrder . java.nio.ByteOrder ( ) ) . asFloatBuffer ( ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( TEXTURE_NO_ROTATION ) . position ( NUMBER ) ; float [] float[] = TextureRotationUtil . getRotation ( Rotation . NORMAL , false , true ) ; java.nio.FloatBuffer = java.nio.ByteBuffer . java.nio.ByteBuffer ( float[] . int * NUMBER ) . java.nio.ByteBuffer ( java.nio.ByteOrder . java.nio.ByteOrder ( ) ) . java.nio.FloatBuffer ( ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) . java.nio.Buffer ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter ) { if ( jp.co.cyberagent.android.gpuimage.GPUImageFilter == null ) { return; } java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . add ( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; for ( GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter : java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter . init ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; for ( GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter : java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter . destroy ( ) ; } super. onDestroy ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( int[] != null ) { GLES20 . glDeleteTextures ( int[] . int , int[] , NUMBER ) ; int[] = null ; } if ( int[] != null ) { GLES20 . glDeleteFramebuffers ( int[] . int , int[] , NUMBER ) ; int[] = null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final int int ) { super. onOutputSizeChanged ( int , int ) ; if ( int[] != null ) { void ( ) ; } int int = java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . size ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . get ( int ) . onOutputSizeChanged ( int , int ) ; } if ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> != null && java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . size ( ) > NUMBER ) { int = java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . size ( ) ; int[] = new int [ int - NUMBER ] ; int[] = new int [ int - NUMBER ] ; for ( int int = NUMBER ; int < int - NUMBER ; int ++ ) { GLES20 . glGenFramebuffers ( NUMBER , int[] , int ) ; GLES20 . glGenTextures ( NUMBER , int[] , int ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int[] [ int ] ) ; GLES20 . glTexImage2D ( GLES20 . GL_TEXTURE_2D , NUMBER , GLES20 . GL_RGBA , int , int , NUMBER , GLES20 . GL_RGBA , GLES20 . GL_UNSIGNED_BYTE , null ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_MAG_FILTER , GLES20 . GL_LINEAR ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_MIN_FILTER , GLES20 . GL_LINEAR ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_S , GLES20 . GL_CLAMP_TO_EDGE ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_T , GLES20 . GL_CLAMP_TO_EDGE ) ; GLES20 . glBindFramebuffer ( GLES20 . GL_FRAMEBUFFER , int[] [ int ] ) ; GLES20 . glFramebufferTexture2D ( GLES20 . GL_FRAMEBUFFER , GLES20 . GL_COLOR_ATTACHMENT0 , GLES20 . GL_TEXTURE_2D , int[] [ int ] , NUMBER ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , NUMBER ) ; GLES20 . glBindFramebuffer ( GLES20 . GL_FRAMEBUFFER , NUMBER ) ; } } }  <METHOD_END>
<METHOD_START> @ SuppressLint ( STRING ) @ java.lang.Override public void void ( final int int , final java.nio.FloatBuffer java.nio.FloatBuffer , final java.nio.FloatBuffer java.nio.FloatBuffer ) { runPendingOnDrawTasks ( ) ; if ( ! isInitialized ( ) || int[] == null || int[] == null ) { return; } if ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> != null ) { int int = java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . size ( ) ; int int = int ; for ( int int = NUMBER ; int < int ; int ++ ) { GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter = java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . get ( int ) ; boolean boolean = int < int - NUMBER ; if ( boolean ) { GLES20 . glBindFramebuffer ( GLES20 . GL_FRAMEBUFFER , int[] [ int ] ) ; GLES20 . glClearColor ( NUMBER , NUMBER , NUMBER , NUMBER ) ; } if ( int == NUMBER ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter . onDraw ( int , java.nio.FloatBuffer , java.nio.FloatBuffer ) ; } else if ( int == int - NUMBER ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter . onDraw ( int , java.nio.FloatBuffer , ( int % NUMBER == NUMBER ) ? java.nio.FloatBuffer : java.nio.FloatBuffer ) ; } else { jp.co.cyberagent.android.gpuimage.GPUImageFilter . onDraw ( int , java.nio.FloatBuffer , java.nio.FloatBuffer ) ; } if ( boolean ) { GLES20 . glBindFramebuffer ( GLES20 . GL_FRAMEBUFFER , NUMBER ) ; int = int[] [ int ] ; } } } }  <METHOD_END>
<METHOD_START> public java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> < GPUImageFilter > java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ( ) { return java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ; }  <METHOD_END>
<METHOD_START> public java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> < GPUImageFilter > java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ( ) { return java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> == null ) { return; } if ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> == null ) { java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> = new java.util.ArrayList<jp.co.cyberagent.android.gpuimage.GPUImageFilter> < GPUImageFilter > ( ) ; } else { java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . clear ( ) ; } java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> < GPUImageFilter > java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ; for ( GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter : java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ) { if ( jp.co.cyberagent.android.gpuimage.GPUImageFilter instanceof jp.co.cyberagent.android.gpuimage.GPUImageFilterGroup ) { ( ( jp.co.cyberagent.android.gpuimage.GPUImageFilterGroup ) jp.co.cyberagent.android.gpuimage.GPUImageFilter ) . void ( ) ; java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> = ( ( jp.co.cyberagent.android.gpuimage.GPUImageFilterGroup ) jp.co.cyberagent.android.gpuimage.GPUImageFilter ) . java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ( ) ; if ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> == null || java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . isEmpty ( ) ) continue; java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . addAll ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ) ; continue; } java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . add ( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) { this( java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { java.util.LinkedList<java.lang.Runnable> = new java.util.LinkedList<java.lang.Runnable> < java.lang.Runnable > ( ) ; java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public final void void ( ) { void ( ) ; boolean = true ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { int = OpenGlUtils . loadProgram ( java.lang.String , java.lang.String ) ; int = GLES20 . glGetAttribLocation ( int , STRING ) ; int = GLES20 . glGetUniformLocation ( int , STRING ) ; int = GLES20 . glGetAttribLocation ( int , STRING ) ; boolean = true ; }  <METHOD_END>
<METHOD_START> public void void ( ) {    }  <METHOD_END>
<METHOD_START> public final void void ( ) { boolean = false ; GLES20 . glDeleteProgram ( int ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) {    }  <METHOD_END>
<METHOD_START> public void void ( final int int , final int int ) { int = int ; int = int ; }  <METHOD_END>
<METHOD_START> public void void ( final int int , final java.nio.FloatBuffer java.nio.FloatBuffer , final java.nio.FloatBuffer java.nio.FloatBuffer ) { GLES20 . glUseProgram ( int ) ; void ( ) ; if ( ! boolean ) { return; } java.nio.FloatBuffer . java.nio.Buffer ( NUMBER ) ; GLES20 . glVertexAttribPointer ( int , NUMBER , GLES20 . GL_FLOAT , false , NUMBER , java.nio.FloatBuffer ) ; GLES20 . glEnableVertexAttribArray ( int ) ; java.nio.FloatBuffer . java.nio.Buffer ( NUMBER ) ; GLES20 . glVertexAttribPointer ( int , NUMBER , GLES20 . GL_FLOAT , false , NUMBER , java.nio.FloatBuffer ) ; GLES20 . glEnableVertexAttribArray ( int ) ; if ( int != OpenGlUtils . NO_TEXTURE ) { GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE0 ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int ) ; GLES20 . glUniform1i ( int , NUMBER ) ; } void ( ) ; GLES20 . glDrawArrays ( GLES20 . GL_TRIANGLE_STRIP , NUMBER , NUMBER ) ; GLES20 . glDisableVertexAttribArray ( int ) ; GLES20 . glDisableVertexAttribArray ( int ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , NUMBER ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) {}  <METHOD_END>
<METHOD_START> protected void void ( ) { while ( ! java.util.LinkedList<java.lang.Runnable> . boolean ( ) ) { java.util.LinkedList<java.lang.Runnable> . java.lang.Runnable ( ) . void ( ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final int int ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glUniform1i ( int , int ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glUniform1i ( int , int ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final float float ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glUniform1f ( int , float ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glUniform1f ( int , float ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final float [] float[] ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glUniform2fv ( int , NUMBER , java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glUniform2fv ( int , NUMBER , java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final float [] float[] ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glUniform3fv ( int , NUMBER , java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glUniform3fv ( int , NUMBER , java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final float [] float[] ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glUniform4fv ( int , NUMBER , java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glUniform4fv ( int , NUMBER , java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final float [] float[] ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glUniform1fv ( int , float[] . int , java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glUniform1fv ( int , float[] . int , java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final PointF jp.co.cyberagent.android.gpuimage.PointF ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { float [] float[] = new float [ NUMBER ] ; float[] [ NUMBER ] = point . x ; float[] [ NUMBER ] = point . y ; GLES20 . glUniform2fv ( int , NUMBER , float[] , NUMBER ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { float [] float[] = new float [ NUMBER ] ; float[] [ NUMBER ] = point . x ; float[] [ NUMBER ] = point . y ; GLES20 . glUniform2fv ( int , NUMBER , float[] , NUMBER ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final float [] float[] ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glUniformMatrix3fv ( int , NUMBER , false , float[] , NUMBER ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glUniformMatrix3fv ( int , NUMBER , false , float[] , NUMBER ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final int int , final float [] float[] ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glUniformMatrix4fv ( int , NUMBER , false , float[] , NUMBER ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glUniformMatrix4fv ( int , NUMBER , false , float[] , NUMBER ) ; }  <METHOD_END>
<METHOD_START> protected void void ( final java.lang.Runnable java.lang.Runnable ) { synchronized ( java.util.LinkedList<java.lang.Runnable> ) { java.util.LinkedList<java.lang.Runnable> . void ( java.lang.Runnable ) ; } }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String , Context jp.co.cyberagent.android.gpuimage.Context ) { try { AssetManager jp.co.cyberagent.android.gpuimage.AssetManager = jp.co.cyberagent.android.gpuimage.Context . getAssets ( ) ; java.io.InputStream java.io.InputStream = jp.co.cyberagent.android.gpuimage.AssetManager . open ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.io.InputStream ) ; java.io.InputStream . void ( ) ; return java.lang.String ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } return STRING ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java . io . java.io.InputStream java.io.InputStream ) { java . util . java.util.Scanner java.util.Scanner = new java . util . java.util.Scanner ( java.io.InputStream ) . java.util.Scanner ( STRING ) ; return java.util.Scanner . boolean ( ) ? java.util.Scanner . java.lang.String ( ) : STRING ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float ) { super( java.lang.String , java.lang.String , java.lang.String , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public float float ( ) { return float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public float float ( ) { return float ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; runOnDraw ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { initTexelOffsets ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { initTexelOffsets ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( new PointF ( NUMBER , NUMBER ) , NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( PointF jp.co.cyberagent.android.gpuimage.PointF , float float , float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( jp.co.cyberagent.android.gpuimage.PointF ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int ) { float = ( float ) int / int ; void ( float ) ; super. onOutputSizeChanged ( int , int ) ; }  <METHOD_END>
<METHOD_START> private void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( PointF jp.co.cyberagent.android.gpuimage.PointF ) { jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; setPoint ( int , jp.co.cyberagent.android.gpuimage.PointF ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final int int ) { super. onOutputSizeChanged ( int , int ) ; void ( ( float ) int / ( float ) int ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float , float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float , final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; float float = ( float % NUMBER ) * ( float ) java.lang.Math . double / NUMBER ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( final Context jp.co.cyberagent.android.gpuimage.Context ) { if ( ! boolean ( jp.co.cyberagent.android.gpuimage.Context ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } jp.co.cyberagent.android.gpuimage.Context = jp.co.cyberagent.android.gpuimage.Context ; jp.co.cyberagent.android.gpuimage.GPUImageFilter = new GPUImageFilter ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer = new GPUImageRenderer ( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( final Context jp.co.cyberagent.android.gpuimage.Context ) { final ActivityManager jp.co.cyberagent.android.gpuimage.ActivityManager = ( ActivityManager ) jp.co.cyberagent.android.gpuimage.Context . getSystemService ( Context . ACTIVITY_SERVICE ) ; final ConfigurationInfo jp.co.cyberagent.android.gpuimage.ConfigurationInfo = jp.co.cyberagent.android.gpuimage.ActivityManager . getDeviceConfigurationInfo ( ) ; return configurationInfo . reqGlEsVersion >= NUMBER ; }  <METHOD_END>
<METHOD_START> public void void ( final GLSurfaceView jp.co.cyberagent.android.gpuimage.GLSurfaceView ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView = jp.co.cyberagent.android.gpuimage.GLSurfaceView ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . setEGLContextClientVersion ( NUMBER ) ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . setEGLConfigChooser ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . getHolder ( ) . setFormat ( PixelFormat . RGBA_8888 ) ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . setRenderer ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer ) ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . setRenderMode ( GLSurfaceView . RENDERMODE_WHEN_DIRTY ) ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . requestRender ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setBackgroundColor ( float , float , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( jp.co.cyberagent.android.gpuimage.GLSurfaceView != null ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView . requestRender ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( final Camera jp.co.cyberagent.android.gpuimage.Camera ) { void ( jp.co.cyberagent.android.gpuimage.Camera , NUMBER , false , false ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Camera jp.co.cyberagent.android.gpuimage.Camera , final int int , final boolean boolean , final boolean boolean ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView . setRenderMode ( GLSurfaceView . RENDERMODE_CONTINUOUSLY ) ; if ( Build . VERSION . SDK_INT > Build . VERSION_CODES . GINGERBREAD_MR1 ) { void ( jp.co.cyberagent.android.gpuimage.Camera ) ; } else { jp.co.cyberagent.android.gpuimage.Camera . setPreviewCallback ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer ) ; jp.co.cyberagent.android.gpuimage.Camera . startPreview ( ) ; } Rotation jp.co.cyberagent.android.gpuimage.Rotation = Rotation . NORMAL ; switch ( int ) { case NUMBER : jp.co.cyberagent.android.gpuimage.Rotation = Rotation . ROTATION_90 ; break; case NUMBER : jp.co.cyberagent.android.gpuimage.Rotation = Rotation . ROTATION_180 ; break; case NUMBER : jp.co.cyberagent.android.gpuimage.Rotation = Rotation . ROTATION_270 ; break; } jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setRotationCamera ( jp.co.cyberagent.android.gpuimage.Rotation , boolean , boolean ) ; }  <METHOD_END>
<METHOD_START> @ TargetApi ( NUMBER ) private void void ( final Camera jp.co.cyberagent.android.gpuimage.Camera ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setUpSurfaceTexture ( jp.co.cyberagent.android.gpuimage.Camera ) ; }  <METHOD_END>
<METHOD_START> public void void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter = jp.co.cyberagent.android.gpuimage.GPUImageFilter ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setFilter ( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setImageBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , false ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType ) { jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType = jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setScaleType ( jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . deleteImage ( ) ; jp.co.cyberagent.android.gpuimage.Bitmap = null ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( Rotation jp.co.cyberagent.android.gpuimage.Rotation ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setRotation ( jp.co.cyberagent.android.gpuimage.Rotation ) ; }  <METHOD_END>
<METHOD_START> public void void ( Rotation jp.co.cyberagent.android.gpuimage.Rotation , boolean boolean , boolean boolean ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setRotation ( jp.co.cyberagent.android.gpuimage.Rotation , boolean , boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . deleteImage ( ) ; jp.co.cyberagent.android.gpuimage.Bitmap = null ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Uri jp.co.cyberagent.android.gpuimage.Uri ) { new jp.co.cyberagent.android.gpuimage.GPUImage.LoadImageUriTask ( this , jp.co.cyberagent.android.gpuimage.Uri ) . execute ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( final java.io.File java.io.File ) { new jp.co.cyberagent.android.gpuimage.GPUImage.LoadImageFileTask ( this , java.io.File ) . execute ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( final Uri jp.co.cyberagent.android.gpuimage.Uri ) { java.lang.String [] java.lang.String[] = { MediaStore . Images . Media . DATA ,        } ; Cursor jp.co.cyberagent.android.gpuimage.Cursor = jp.co.cyberagent.android.gpuimage.Context . getContentResolver ( ) . query ( jp.co.cyberagent.android.gpuimage.Uri , java.lang.String[] , null , null , null ) ; int int = jp.co.cyberagent.android.gpuimage.Cursor . getColumnIndexOrThrow ( MediaStore . Images . Media . DATA ) ; java.lang.String java.lang.String = null ; if ( jp.co.cyberagent.android.gpuimage.Cursor . moveToFirst ( ) ) { java.lang.String = jp.co.cyberagent.android.gpuimage.Cursor . getString ( int ) ; } jp.co.cyberagent.android.gpuimage.Cursor . close ( ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( ) { return jp.co.cyberagent.android.gpuimage.Bitmap ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { if ( jp.co.cyberagent.android.gpuimage.GLSurfaceView != null ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . deleteImage ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . runOnDraw ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { synchronized( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter . destroy ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . notify ( ) ; } } } ) ; synchronized( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) { void ( ) ; try { jp.co.cyberagent.android.gpuimage.GPUImageFilter . wait ( ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.InterruptedException . void ( ) ; } } } GPUImageRenderer jp.co.cyberagent.android.gpuimage.GPUImageRenderer = new GPUImageRenderer ( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setRotation ( Rotation . NORMAL , jp.co.cyberagent.android.gpuimage.GPUImageRenderer . isFlippedHorizontally ( ) , jp.co.cyberagent.android.gpuimage.GPUImageRenderer . isFlippedVertically ( ) ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setScaleType ( jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType ) ; PixelBuffer jp.co.cyberagent.android.gpuimage.PixelBuffer = new PixelBuffer ( jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) , jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) ) ; jp.co.cyberagent.android.gpuimage.PixelBuffer . setRenderer ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setImageBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , false ) ; Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.PixelBuffer . getBitmap ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . destroy ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . deleteImage ( ) ; jp.co.cyberagent.android.gpuimage.PixelBuffer . destroy ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setFilter ( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) ; if ( jp.co.cyberagent.android.gpuimage.Bitmap != null ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setImageBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , false ) ; } void ( ) ; return jp.co.cyberagent.android.gpuimage.Bitmap ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { synchronized( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter . destroy ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . notify ( ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap , final java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> < GPUImageFilter > java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> , final jp.co.cyberagent.android.gpuimage.GPUImage.ResponseListener<jp.co.cyberagent.android.gpuimage.Bitmap> < Bitmap > jp.co.cyberagent.android.gpuimage.GPUImage.ResponseListener<jp.co.cyberagent.android.gpuimage.Bitmap> ) { if ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . isEmpty ( ) ) { return; } GPUImageRenderer jp.co.cyberagent.android.gpuimage.GPUImageRenderer = new GPUImageRenderer ( java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> . get ( NUMBER ) ) ; jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setImageBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , false ) ; PixelBuffer jp.co.cyberagent.android.gpuimage.PixelBuffer = new PixelBuffer ( jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) , jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) ) ; jp.co.cyberagent.android.gpuimage.PixelBuffer . setRenderer ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer ) ; for ( GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter : java.util.List<jp.co.cyberagent.android.gpuimage.GPUImageFilter> ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . setFilter ( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) ; jp.co.cyberagent.android.gpuimage.GPUImage.ResponseListener<jp.co.cyberagent.android.gpuimage.Bitmap> . response ( jp.co.cyberagent.android.gpuimage.PixelBuffer . getBitmap ( ) ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . destroy ( ) ; } jp.co.cyberagent.android.gpuimage.GPUImageRenderer . deleteImage ( ) ; jp.co.cyberagent.android.gpuimage.PixelBuffer . destroy ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener ) { void ( jp.co.cyberagent.android.gpuimage.Bitmap , java.lang.String , java.lang.String , jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public void void ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap , final java.lang.String java.lang.String , final java.lang.String java.lang.String , final jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener ) { new jp.co.cyberagent.android.gpuimage.GPUImage.SaveTask ( jp.co.cyberagent.android.gpuimage.Bitmap , java.lang.String , java.lang.String , jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener ) . execute ( ) ; }  <METHOD_END>
<METHOD_START> void void ( java.lang.Runnable java.lang.Runnable ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . runOnDrawEnd ( java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> private int int ( ) { if ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer != null && jp.co.cyberagent.android.gpuimage.GPUImageRenderer . getFrameWidth ( ) != NUMBER ) { return jp.co.cyberagent.android.gpuimage.GPUImageRenderer . getFrameWidth ( ) ; } else if ( jp.co.cyberagent.android.gpuimage.Bitmap != null ) { return jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) ; } else { WindowManager jp.co.cyberagent.android.gpuimage.WindowManager = ( WindowManager ) jp.co.cyberagent.android.gpuimage.Context . getSystemService ( Context . WINDOW_SERVICE ) ; Display jp.co.cyberagent.android.gpuimage.Display = jp.co.cyberagent.android.gpuimage.WindowManager . getDefaultDisplay ( ) ; return jp.co.cyberagent.android.gpuimage.Display . getWidth ( ) ; } }  <METHOD_END>
<METHOD_START> private int int ( ) { if ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer != null && jp.co.cyberagent.android.gpuimage.GPUImageRenderer . getFrameHeight ( ) != NUMBER ) { return jp.co.cyberagent.android.gpuimage.GPUImageRenderer . getFrameHeight ( ) ; } else if ( jp.co.cyberagent.android.gpuimage.Bitmap != null ) { return jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) ; } else { WindowManager jp.co.cyberagent.android.gpuimage.WindowManager = ( WindowManager ) jp.co.cyberagent.android.gpuimage.Context . getSystemService ( Context . WINDOW_SERVICE ) ; Display jp.co.cyberagent.android.gpuimage.Display = jp.co.cyberagent.android.gpuimage.WindowManager . getDefaultDisplay ( ) ; return jp.co.cyberagent.android.gpuimage.Display . getHeight ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap , final java.lang.String java.lang.String , final java.lang.String java.lang.String , final jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener ) { jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ; java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener = jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener ; jp.co.cyberagent.android.gpuimage.Handler = new Handler ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( final java.lang.Void ... java.lang.Void[] ) { Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; void ( java.lang.String , java.lang.String , jp.co.cyberagent.android.gpuimage.Bitmap ) ; return null ; }  <METHOD_END>
<METHOD_START> private void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { java.io.File java.io.File = Environment . getExternalStoragePublicDirectory ( Environment . DIRECTORY_PICTURES ) ; java.io.File java.io.File = new java.io.File ( java.io.File , java.lang.String + STRING + java.lang.String ) ; try { java.io.File . java.io.File ( ) . boolean ( ) ; jp.co.cyberagent.android.gpuimage.Bitmap . compress ( CompressFormat . JPEG , NUMBER , new java.io.FileOutputStream ( java.io.File ) ) ; MediaScannerConnection . scanFile ( jp.co.cyberagent.android.gpuimage.Context , new java.lang.String [] { java.io.File . java.lang.String ( ) } , null , new MediaScannerConnection . MediaScannerConnection ( ) { @ java.lang.Override public void void ( final java.lang.String java.lang.String , final Uri jp.co.cyberagent.android.gpuimage.Uri ) { if ( jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener != null ) { jp.co.cyberagent.android.gpuimage.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener . void ( jp.co.cyberagent.android.gpuimage.Uri ) ; } } ) ; } } } ) ; } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { java.io.FileNotFoundException . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.String java.lang.String , final Uri jp.co.cyberagent.android.gpuimage.Uri ) { if ( jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener != null ) { jp.co.cyberagent.android.gpuimage.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener . void ( jp.co.cyberagent.android.gpuimage.Uri ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener . void ( jp.co.cyberagent.android.gpuimage.Uri ) ; }  <METHOD_END>
<METHOD_START> void void ( Uri jp.co.cyberagent.android.gpuimage.Uri );  <METHOD_END>
<METHOD_START> public void ( jp.co.cyberagent.android.gpuimage.GPUImage jp.co.cyberagent.android.gpuimage.GPUImage , Uri jp.co.cyberagent.android.gpuimage.Uri ) { super( jp.co.cyberagent.android.gpuimage.GPUImage ); jp.co.cyberagent.android.gpuimage.Uri = jp.co.cyberagent.android.gpuimage.Uri ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( BitmapFactory . BitmapFactory BitmapFactory.Options ) { try { java.io.InputStream java.io.InputStream ; if ( jp.co.cyberagent.android.gpuimage.Uri . getScheme ( ) . startsWith ( STRING ) || jp.co.cyberagent.android.gpuimage.Uri . getScheme ( ) . startsWith ( STRING ) ) { java.io.InputStream = new java.net.URL ( jp.co.cyberagent.android.gpuimage.Uri . toString ( ) ) . java.io.InputStream ( ) ; } else { java.io.InputStream = jp.co.cyberagent.android.gpuimage.Context . getContentResolver ( ) . openInputStream ( jp.co.cyberagent.android.gpuimage.Uri ) ; } return BitmapFactory . decodeStream ( java.io.InputStream , null , BitmapFactory.Options ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( ) java.io.IOException { Cursor jp.co.cyberagent.android.gpuimage.Cursor = jp.co.cyberagent.android.gpuimage.Context . getContentResolver ( ) . query ( jp.co.cyberagent.android.gpuimage.Uri , new java.lang.String [] { MediaStore . Images . ImageColumns . ORIENTATION } , null , null , null ) ; if ( jp.co.cyberagent.android.gpuimage.Cursor == null || jp.co.cyberagent.android.gpuimage.Cursor . getCount ( ) != NUMBER ) { return NUMBER ; } jp.co.cyberagent.android.gpuimage.Cursor . moveToFirst ( ) ; int int = jp.co.cyberagent.android.gpuimage.Cursor . getInt ( NUMBER ) ; jp.co.cyberagent.android.gpuimage.Cursor . close ( ) ; return int ; }  <METHOD_END>
<METHOD_START> public void ( jp.co.cyberagent.android.gpuimage.GPUImage jp.co.cyberagent.android.gpuimage.GPUImage , java.io.File java.io.File ) { super( jp.co.cyberagent.android.gpuimage.GPUImage ); java.io.File = java.io.File ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( BitmapFactory . BitmapFactory BitmapFactory.Options ) { return BitmapFactory . decodeFile ( java.io.File . java.lang.String ( ) , BitmapFactory.Options ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( ) java.io.IOException { ExifInterface jp.co.cyberagent.android.gpuimage.ExifInterface = new ExifInterface ( java.io.File . java.lang.String ( ) ) ; int int = jp.co.cyberagent.android.gpuimage.ExifInterface . getAttributeInt ( ExifInterface . TAG_ORIENTATION , NUMBER ) ; switch ( int ) { case ExifInterface . ORIENTATION_NORMAL : return NUMBER ; case ExifInterface . ORIENTATION_ROTATE_90 : return NUMBER ; case ExifInterface . ORIENTATION_ROTATE_180 : return NUMBER ; case ExifInterface . ORIENTATION_ROTATE_270 : return NUMBER ; default: return NUMBER ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public void ( final jp.co.cyberagent.android.gpuimage.GPUImage jp.co.cyberagent.android.gpuimage.GPUImage ) { jp.co.cyberagent.android.gpuimage.GPUImage = jp.co.cyberagent.android.gpuimage.GPUImage ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( java.lang.Void ... java.lang.Void[] ) { if ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer != null && jp.co.cyberagent.android.gpuimage.GPUImageRenderer . getFrameWidth ( ) == NUMBER ) { try { synchronized ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer . mSurfaceChangedWaiter ) { jp.co.cyberagent.android.gpuimage.GPUImageRenderer . mSurfaceChangedWaiter . wait ( NUMBER ) ; } } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.InterruptedException . void ( ) ; } } int = int ( ) ; int = int ( ) ; return jp.co.cyberagent.android.gpuimage.Bitmap ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { super. onPostExecute ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; jp.co.cyberagent.android.gpuimage.GPUImage . void ( ) ; jp.co.cyberagent.android.gpuimage.GPUImage . void ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; }  <METHOD_END>
<METHOD_START> protected abstract jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( BitmapFactory . BitmapFactory BitmapFactory.Options );  <METHOD_END>
<METHOD_START> private jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( ) { BitmapFactory . BitmapFactory BitmapFactory.Options = new BitmapFactory . BitmapFactory ( ) ; options . inJustDecodeBounds = true ; jp.co.cyberagent.android.gpuimage.Bitmap ( BitmapFactory.Options ) ; int int = NUMBER ; while ( boolean ( options . outWidth / int > int , options . outHeight / int > int ) ) { int ++ ; } int -- ; if ( int < NUMBER ) { int = NUMBER ; } BitmapFactory.Options = new BitmapFactory . BitmapFactory ( ) ; options . inSampleSize = int ; options . inPreferredConfig = Bitmap . Config . RGB_565 ; options . inPurgeable = true ; options . inTempStorage = new byte [ NUMBER * NUMBER ] ; Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ( BitmapFactory.Options ) ; if ( jp.co.cyberagent.android.gpuimage.Bitmap == null ) { return null ; } jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; return jp.co.cyberagent.android.gpuimage.Bitmap ; }  <METHOD_END>
<METHOD_START> private jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { int int = jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) ; int int = jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) ; int [] int[] = int[] ( int , int ) ; Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = Bitmap . createScaledBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , int[] [ NUMBER ] , int[] [ NUMBER ] , true ) ; if ( jp.co.cyberagent.android.gpuimage.Bitmap != jp.co.cyberagent.android.gpuimage.Bitmap ) { jp.co.cyberagent.android.gpuimage.Bitmap . recycle ( ) ; jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ; java.lang.System . void ( ) ; } if ( jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType == jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType . jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType ) { int int = int[] [ NUMBER ] - int ; int int = int[] [ NUMBER ] - int ; jp.co.cyberagent.android.gpuimage.Bitmap = Bitmap . createBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , int / NUMBER , int / NUMBER , int[] [ NUMBER ] - int , int[] [ NUMBER ] - int ) ; if ( jp.co.cyberagent.android.gpuimage.Bitmap != jp.co.cyberagent.android.gpuimage.Bitmap ) { jp.co.cyberagent.android.gpuimage.Bitmap . recycle ( ) ; jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ; } } return jp.co.cyberagent.android.gpuimage.Bitmap ; }  <METHOD_END>
<METHOD_START> private int [] int[] ( int int , int int ) { float float ; float float ; float float = ( float ) int / int ; float float = ( float ) int / int ; boolean boolean = jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType == jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType . jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType ? float > float : float < float ; if ( boolean ) { float = int ; float = ( float / int ) * int ; } else { float = int ; float = ( float / int ) * int ; } return new int [] { java.lang.Math . int ( float ) , java.lang.Math . int ( float ) } ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( boolean boolean , boolean boolean ) { if ( jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType == jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType . jp.co.cyberagent.android.gpuimage.GPUImage.ScaleType ) { return boolean && boolean ; } else { return boolean || boolean ; } }  <METHOD_END>
<METHOD_START> private jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { if ( jp.co.cyberagent.android.gpuimage.Bitmap == null ) { return null ; } Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ; try { int int = int ( ) ; if ( int != NUMBER ) { Matrix jp.co.cyberagent.android.gpuimage.Matrix = new Matrix ( ) ; jp.co.cyberagent.android.gpuimage.Matrix . postRotate ( int ) ; jp.co.cyberagent.android.gpuimage.Bitmap = Bitmap . createBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , NUMBER , NUMBER , jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) , jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) , jp.co.cyberagent.android.gpuimage.Matrix , true ) ; jp.co.cyberagent.android.gpuimage.Bitmap . recycle ( ) ; } } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } return jp.co.cyberagent.android.gpuimage.Bitmap ; }  <METHOD_END>
<METHOD_START> protected abstract int int ( ) java.io.IOException ;  <METHOD_END>
<METHOD_START> void void ( T T );  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( int int ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( final int int ) { int = int ; setInteger ( int , int ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( new float [] { NUMBER , NUMBER , NUMBER , NUMBER , - NUMBER , NUMBER , NUMBER , NUMBER , NUMBER } ); }  <METHOD_END>
<METHOD_START> private void ( final float [] float[] ) { super( java.lang.String ); float[] = float[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; void ( float[] ) ; }  <METHOD_END>
<METHOD_START> private void void ( final float [] float[] ) { float[] = float[] ; setUniformMatrix3f ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( new float [] { NUMBER , NUMBER , NUMBER } , new float [] { NUMBER , NUMBER , NUMBER } , new float [] { NUMBER , NUMBER , NUMBER } , new float [] { NUMBER , NUMBER , NUMBER } , new float [] { NUMBER , NUMBER , NUMBER } ); }  <METHOD_END>
<METHOD_START> private void ( final float [] float[] , final float [] float[] , final float [] float[] , final float [] float[] , final float [] float[] ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float[] = float[] ; float[] = float[] ; float[] = float[] ; float[] = float[] ; float[] = float[] ; void ( NUMBER , NUMBER , NUMBER , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { setFloatVec3 ( int , float[] ) ; setFloatVec3 ( int , float[] ) ; setFloatVec3 ( int , float[] ) ; setFloatVec3 ( int , float[] ) ; setFloatVec3 ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float , float float , float float ) { void ( float , float , float , float , float ) ; void ( float , float , float , float , float ) ; void ( float , float , float , float , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float ) { void ( float , float , float , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float , float float , float float ) { float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float ) { void ( float , float , float , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float , float float , float float ) { float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float ) { void ( float , float , float , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float , float float , float float ) { float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; float[] [ NUMBER ] = float ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float ) { void ( float , float , float , NUMBER , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( java.lang.String , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , float float ) { super( java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , new float [] { NUMBER , NUMBER , NUMBER , NUMBER } ); }  <METHOD_END>
<METHOD_START> public void ( final float float , final float [] float[] ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float[] = float[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( NUMBER ) ; void ( new float [] { NUMBER , NUMBER , NUMBER , NUMBER } ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float [] float[] ) { float[] = float[] ; void ( float[] [ NUMBER ] , float[] [ NUMBER ] , float[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float , final float float , final float float ) { setFloatVec3 ( int , new float [] { float , float , float } ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public static native void void ( byte [] byte[] , int int , int int , int [] int[] );  <METHOD_END>
<METHOD_START> public static native void void ( byte [] byte[] , int int , int int , int [] int[] );  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final int int ) { super. onOutputSizeChanged ( int , int ) ; setFloat ( int , NUMBER / int ) ; setFloat ( int , NUMBER / int ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final int int ) { super( GPUImageFilter . NO_FILTER_VERTEX_SHADER , java.lang.String ); int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; void ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( final int int ) { int = int ; setFloat ( int , int ) ; }  <METHOD_END>
<METHOD_START> public void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter = jp.co.cyberagent.android.gpuimage.GPUImageFilter ; java.util.Queue<java.lang.Runnable> = new java.util.LinkedList<java.lang.Runnable> < java.lang.Runnable > ( ) ; java.util.Queue<java.lang.Runnable> = new java.util.LinkedList<java.lang.Runnable> < java.lang.Runnable > ( ) ; java.nio.FloatBuffer = java.nio.ByteBuffer . java.nio.ByteBuffer ( float[] . int * NUMBER ) . java.nio.ByteBuffer ( java.nio.ByteOrder . java.nio.ByteOrder ( ) ) . java.nio.FloatBuffer ( ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) . java.nio.Buffer ( NUMBER ) ; java.nio.FloatBuffer = java.nio.ByteBuffer . java.nio.ByteBuffer ( TEXTURE_NO_ROTATION . length * NUMBER ) . order ( java.nio.ByteOrder . java.nio.ByteOrder ( ) ) . asFloatBuffer ( ) ; void ( Rotation . NORMAL , false , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final GL10 jp.co.cyberagent.android.gpuimage.GL10 , final EGLConfig jp.co.cyberagent.android.gpuimage.EGLConfig ) { GLES20 . glClearColor ( float , float , float , NUMBER ) ; GLES20 . glDisable ( GLES20 . GL_DEPTH_TEST ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . init ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final GL10 jp.co.cyberagent.android.gpuimage.GL10 , final int int , final int int ) { int = int ; int = int ; GLES20 . glViewport ( NUMBER , NUMBER , int , int ) ; GLES20 . glUseProgram ( jp.co.cyberagent.android.gpuimage.GPUImageFilter . getProgram ( ) ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . onOutputSizeChanged ( int , int ) ; void ( ) ; synchronized ( java.lang.Object ) { java.lang.Object . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final GL10 jp.co.cyberagent.android.gpuimage.GL10 ) { GLES20 . glClear ( GLES20 . GL_COLOR_BUFFER_BIT | GLES20 . GL_DEPTH_BUFFER_BIT ) ; void ( java.util.Queue<java.lang.Runnable> ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . onDraw ( int , java.nio.FloatBuffer , java.nio.FloatBuffer ) ; void ( java.util.Queue<java.lang.Runnable> ) ; if ( jp.co.cyberagent.android.gpuimage.SurfaceTexture != null ) { jp.co.cyberagent.android.gpuimage.SurfaceTexture . updateTexImage ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float ) { float = float ; float = float ; float = float ; }  <METHOD_END>
<METHOD_START> private void void ( java.util.Queue<java.lang.Runnable> < java.lang.Runnable > java.util.Queue<java.lang.Runnable> ) { synchronized ( java.util.Queue<java.lang.Runnable> ) { while ( ! java.util.Queue<java.lang.Runnable> . boolean ( ) ) { java.util.Queue<java.lang.Runnable> . java.lang.Runnable ( ) . void ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final byte [] byte[] , final Camera jp.co.cyberagent.android.gpuimage.Camera ) { final Size jp.co.cyberagent.android.gpuimage.Size = jp.co.cyberagent.android.gpuimage.Camera . getParameters ( ) . getPreviewSize ( ) ; if ( java.nio.IntBuffer == null ) { java.nio.IntBuffer = java.nio.IntBuffer . java.nio.IntBuffer ( previewSize . width * previewSize . height ) ; } if ( java.util.Queue<java.lang.Runnable> . boolean ( ) ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GPUImageNativeLibrary . YUVtoRBGA ( byte[] , previewSize . width , previewSize . height , java.nio.IntBuffer . int[] ( ) ) ; int = OpenGlUtils . loadTexture ( java.nio.IntBuffer , jp.co.cyberagent.android.gpuimage.Size , int ) ; jp.co.cyberagent.android.gpuimage.Camera . addCallbackBuffer ( byte[] ) ; if ( int != previewSize . width ) { int = previewSize . width ; int = previewSize . height ; void ( ) ; } } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GPUImageNativeLibrary . YUVtoRBGA ( byte[] , previewSize . width , previewSize . height , java.nio.IntBuffer . int[] ( ) ) ; int = OpenGlUtils . loadTexture ( java.nio.IntBuffer , jp.co.cyberagent.android.gpuimage.Size , int ) ; jp.co.cyberagent.android.gpuimage.Camera . addCallbackBuffer ( byte[] ) ; if ( int != previewSize . width ) { int = previewSize . width ; int = previewSize . height ; void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( final Camera jp.co.cyberagent.android.gpuimage.Camera ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { int [] int[] = new int [ NUMBER ] ; GLES20 . glGenTextures ( NUMBER , int[] , NUMBER ) ; jp.co.cyberagent.android.gpuimage.SurfaceTexture = new SurfaceTexture ( int[] [ NUMBER ] ) ; try { jp.co.cyberagent.android.gpuimage.Camera . setPreviewTexture ( jp.co.cyberagent.android.gpuimage.SurfaceTexture ) ; jp.co.cyberagent.android.gpuimage.Camera . setPreviewCallback ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer .this ) ; jp.co.cyberagent.android.gpuimage.Camera . startPreview ( ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { int [] int[] = new int [ NUMBER ] ; GLES20 . glGenTextures ( NUMBER , int[] , NUMBER ) ; jp.co.cyberagent.android.gpuimage.SurfaceTexture = new SurfaceTexture ( int[] [ NUMBER ] ) ; try { jp.co.cyberagent.android.gpuimage.Camera . setPreviewTexture ( jp.co.cyberagent.android.gpuimage.SurfaceTexture ) ; jp.co.cyberagent.android.gpuimage.Camera . setPreviewCallback ( jp.co.cyberagent.android.gpuimage.GPUImageRenderer .this ) ; jp.co.cyberagent.android.gpuimage.Camera . startPreview ( ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { final GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter = jp.co.cyberagent.android.gpuimage.GPUImageFilter ; jp.co.cyberagent.android.gpuimage.GPUImageFilter = jp.co.cyberagent.android.gpuimage.GPUImageFilter ; if ( jp.co.cyberagent.android.gpuimage.GPUImageFilter != null ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter . destroy ( ) ; } jp.co.cyberagent.android.gpuimage.GPUImageFilter . init ( ) ; GLES20 . glUseProgram ( jp.co.cyberagent.android.gpuimage.GPUImageFilter . getProgram ( ) ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . onOutputSizeChanged ( int , int ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter = jp.co.cyberagent.android.gpuimage.GPUImageFilter ; jp.co.cyberagent.android.gpuimage.GPUImageFilter = jp.co.cyberagent.android.gpuimage.GPUImageFilter ; if ( jp.co.cyberagent.android.gpuimage.GPUImageFilter != null ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter . destroy ( ) ; } jp.co.cyberagent.android.gpuimage.GPUImageFilter . init ( ) ; GLES20 . glUseProgram ( jp.co.cyberagent.android.gpuimage.GPUImageFilter . getProgram ( ) ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . onOutputSizeChanged ( int , int ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glDeleteTextures ( NUMBER , new int [] { int } , NUMBER ) ; int = int ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glDeleteTextures ( NUMBER , new int [] { int } , NUMBER ) ; int = int ; }  <METHOD_END>
<METHOD_START> public void void ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { void ( jp.co.cyberagent.android.gpuimage.Bitmap , true ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap , final boolean boolean ) { if ( jp.co.cyberagent.android.gpuimage.Bitmap == null ) { return; } void ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = null ; if ( jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) % NUMBER == NUMBER ) { jp.co.cyberagent.android.gpuimage.Bitmap = Bitmap . createBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) + NUMBER , jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) , Bitmap . Config . ARGB_8888 ) ; Canvas jp.co.cyberagent.android.gpuimage.Canvas = new Canvas ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; jp.co.cyberagent.android.gpuimage.Canvas . drawARGB ( NUMBER , NUMBER , NUMBER , NUMBER ) ; jp.co.cyberagent.android.gpuimage.Canvas . drawBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , NUMBER , NUMBER , null ) ; int = NUMBER ; } else { int = NUMBER ; } int = OpenGlUtils . loadTexture ( jp.co.cyberagent.android.gpuimage.Bitmap != null ? jp.co.cyberagent.android.gpuimage.Bitmap : jp.co.cyberagent.android.gpuimage.Bitmap , int , boolean ) ; if ( jp.co.cyberagent.android.gpuimage.Bitmap != null ) { jp.co.cyberagent.android.gpuimage.Bitmap . recycle ( ) ; } int = jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) ; int = jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) ; void ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = null ; if ( jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) % NUMBER == NUMBER ) { jp.co.cyberagent.android.gpuimage.Bitmap = Bitmap . createBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) + NUMBER , jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) , Bitmap . Config . ARGB_8888 ) ; Canvas jp.co.cyberagent.android.gpuimage.Canvas = new Canvas ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; jp.co.cyberagent.android.gpuimage.Canvas . drawARGB ( NUMBER , NUMBER , NUMBER , NUMBER ) ; jp.co.cyberagent.android.gpuimage.Canvas . drawBitmap ( jp.co.cyberagent.android.gpuimage.Bitmap , NUMBER , NUMBER , null ) ; int = NUMBER ; } else { int = NUMBER ; } int = OpenGlUtils . loadTexture ( jp.co.cyberagent.android.gpuimage.Bitmap != null ? jp.co.cyberagent.android.gpuimage.Bitmap : jp.co.cyberagent.android.gpuimage.Bitmap , int , boolean ) ; if ( jp.co.cyberagent.android.gpuimage.Bitmap != null ) { jp.co.cyberagent.android.gpuimage.Bitmap . recycle ( ) ; } int = jp.co.cyberagent.android.gpuimage.Bitmap . getWidth ( ) ; int = jp.co.cyberagent.android.gpuimage.Bitmap . getHeight ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( GPUImage . GPUImage GPUImage.ScaleType ) { GPUImage.ScaleType = GPUImage.ScaleType ; }  <METHOD_END>
<METHOD_START> protected int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> protected int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> private void void ( ) { float float = int ; float float = int ; if ( jp.co.cyberagent.android.gpuimage.Rotation == Rotation . ROTATION_270 || jp.co.cyberagent.android.gpuimage.Rotation == Rotation . ROTATION_90 ) { float = int ; float = int ; } float float = float / int ; float float = float / int ; float float = java.lang.Math . float ( float , float ) ; int int = java.lang.Math . int ( int * float ) ; int int = java.lang.Math . int ( int * float ) ; float float = int / float ; float float = int / float ; float [] float[] = float[] ; float [] float[] = TextureRotationUtil . getRotation ( jp.co.cyberagent.android.gpuimage.Rotation , boolean , boolean ) ; if ( GPUImage.ScaleType == GPUImage . ScaleType . CENTER_CROP ) { float float = ( NUMBER - NUMBER / float ) / NUMBER ; float float = ( NUMBER - NUMBER / float ) / NUMBER ; float[] = new float [] { float ( float[] [ NUMBER ] , float ) , float ( float[] [ NUMBER ] , float ) , float ( float[] [ NUMBER ] , float ) , float ( float[] [ NUMBER ] , float ) , float ( float[] [ NUMBER ] , float ) , float ( float[] [ NUMBER ] , float ) , float ( float[] [ NUMBER ] , float ) , float ( float[] [ NUMBER ] , float ) ,            } ; } else { float[] = new float [] { float[] [ NUMBER ] / float , float[] [ NUMBER ] / float , float[] [ NUMBER ] / float , float[] [ NUMBER ] / float , float[] [ NUMBER ] / float , float[] [ NUMBER ] / float , float[] [ NUMBER ] / float , float[] [ NUMBER ] / float ,            } ; } java.nio.FloatBuffer . java.nio.Buffer ( ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) . java.nio.Buffer ( NUMBER ) ; java.nio.FloatBuffer . java.nio.Buffer ( ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) . java.nio.Buffer ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> private float float ( float float , float float ) { return float == NUMBER ? float : NUMBER - float ; }  <METHOD_END>
<METHOD_START> public void void ( final Rotation jp.co.cyberagent.android.gpuimage.Rotation , final boolean boolean , final boolean boolean ) { void ( jp.co.cyberagent.android.gpuimage.Rotation , boolean , boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Rotation jp.co.cyberagent.android.gpuimage.Rotation ) { jp.co.cyberagent.android.gpuimage.Rotation = jp.co.cyberagent.android.gpuimage.Rotation ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Rotation jp.co.cyberagent.android.gpuimage.Rotation , final boolean boolean , final boolean boolean ) { boolean = boolean ; boolean = boolean ; void ( jp.co.cyberagent.android.gpuimage.Rotation ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.Rotation jp.co.cyberagent.android.gpuimage.Rotation ( ) { return jp.co.cyberagent.android.gpuimage.Rotation ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> protected void void ( final java.lang.Runnable java.lang.Runnable ) { synchronized ( java.util.Queue<java.lang.Runnable> ) { java.util.Queue<java.lang.Runnable> . boolean ( java.lang.Runnable ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( final java.lang.Runnable java.lang.Runnable ) { synchronized ( java.util.Queue<java.lang.Runnable> ) { java.util.Queue<java.lang.Runnable> . boolean ( java.lang.Runnable ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( int int ) { this( java.lang.String ( int ) , java.lang.String ( int ) ); }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String , java.lang.String , java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( int int ) { switch ( int ) { case NUMBER : case NUMBER : return java.lang.String ; case NUMBER : return java.lang.String ; case NUMBER : return java.lang.String ; default: return java.lang.String ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( int int ) { switch ( int ) { case NUMBER : case NUMBER : return java.lang.String ; case NUMBER : return java.lang.String ; case NUMBER : return java.lang.String ; default: return java.lang.String ; } }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float , final float float , final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; boolean = true ; void ( float ) ; void ( float ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; if ( boolean ) { setFloat ( int , float ) ; } }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; if ( boolean ) { setFloat ( int , float ) ; } }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; if ( boolean ) { setFloat ( int , float ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( float , new float [] { NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER , NUMBER } ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float ) { super( java.lang.String , java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final int int ) { super. onOutputSizeChanged ( int , int ) ; setFloat ( int , NUMBER / int ) ; setFloat ( int , NUMBER / int ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super(); addFilter ( new GPUImageGrayscaleFilter ( ) ) ; addFilter ( new GPUImage3x3TextureSamplingFilter ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { jp.co.cyberagent.android.gpuimage.GPUImageGaussianBlurFilter = new GPUImageGaussianBlurFilter ( ) ; addFilter ( jp.co.cyberagent.android.gpuimage.GPUImageGaussianBlurFilter ) ; jp.co.cyberagent.android.gpuimage.GPUImageToonFilter = new GPUImageToonFilter ( ) ; addFilter ( jp.co.cyberagent.android.gpuimage.GPUImageToonFilter ) ; getFilters ( ) . add ( jp.co.cyberagent.android.gpuimage.GPUImageGaussianBlurFilter ) ; void ( NUMBER ) ; void ( NUMBER ) ; void ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { jp.co.cyberagent.android.gpuimage.GPUImageToonFilter . setTexelWidth ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { jp.co.cyberagent.android.gpuimage.GPUImageToonFilter . setTexelHeight ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { jp.co.cyberagent.android.gpuimage.GPUImageGaussianBlurFilter . setBlurSize ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { jp.co.cyberagent.android.gpuimage.GPUImageToonFilter . setThreshold ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { jp.co.cyberagent.android.gpuimage.GPUImageToonFilter . setQuantizationLevels ( float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super(); addFilter ( new GPUImageGrayscaleFilter ( ) ) ; addFilter ( new GPUImage3x3TextureSamplingFilter ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { ( ( GPUImage3x3TextureSamplingFilter ) getFilters ( ) . get ( NUMBER ) ) . setLineSize ( float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float ) { super( java.lang.String ); float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( new PointF ( NUMBER , NUMBER ) , NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( PointF jp.co.cyberagent.android.gpuimage.PointF , float float , float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( jp.co.cyberagent.android.gpuimage.PointF ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int ) { float = ( float ) int / int ; void ( float ) ; super. onOutputSizeChanged ( int , int ) ; }  <METHOD_END>
<METHOD_START> private void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( PointF jp.co.cyberagent.android.gpuimage.PointF ) { jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; setPoint ( int , jp.co.cyberagent.android.gpuimage.PointF ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER , new PointF ( NUMBER , NUMBER ) ); }  <METHOD_END>
<METHOD_START> public void ( float float , float float , PointF jp.co.cyberagent.android.gpuimage.PointF ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float = float ; jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( float ) ; void ( jp.co.cyberagent.android.gpuimage.PointF ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( PointF jp.co.cyberagent.android.gpuimage.PointF ) { jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; setPoint ( int , jp.co.cyberagent.android.gpuimage.PointF ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super(); addFilter ( new GPUImageGrayscaleFilter ( ) ) ; addFilter ( new GPUImageSobelThresholdFilter ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { ( ( GPUImage3x3TextureSamplingFilter ) getFilters ( ) . get ( NUMBER ) ) . setLineSize ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { ( ( GPUImageSobelThresholdFilter ) getFilters ( ) . get ( NUMBER ) ) . setThreshold ( float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); PointF [] jp.co.cyberagent.android.gpuimage.PointF[] = new PointF [] { new PointF ( NUMBER , NUMBER ) , new PointF ( NUMBER , NUMBER ) , new PointF ( NUMBER , NUMBER ) } ; jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] ; jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] ; jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] ; jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE3 ) ; GLES20 . glGenTextures ( NUMBER , int[] , NUMBER ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int[] [ NUMBER ] ) ; GLES20 . glTexParameteri ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_MIN_FILTER , GLES20 . GL_LINEAR ) ; GLES20 . glTexParameteri ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_MAG_FILTER , GLES20 . GL_LINEAR ) ; GLES20 . glTexParameteri ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_S , GLES20 . GL_CLAMP_TO_EDGE ) ; GLES20 . glTexParameteri ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_T , GLES20 . GL_CLAMP_TO_EDGE ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; void ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; void ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; void ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { if ( int[] [ NUMBER ] != OpenGlUtils . NO_TEXTURE ) { GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE3 ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int[] [ NUMBER ] ) ; GLES20 . glUniform1i ( int , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.io.InputStream java.io.InputStream ) { try { int int = short ( java.io.InputStream ) ; int int = short ( java.io.InputStream ) ; java.util.ArrayList<jp.co.cyberagent.android.gpuimage.PointF[]> < PointF [] > java.util.ArrayList<jp.co.cyberagent.android.gpuimage.PointF[]> = new java.util.ArrayList<jp.co.cyberagent.android.gpuimage.PointF[]> < PointF [] > ( int ) ; float float = NUMBER / NUMBER ; for ( int int = NUMBER ; int < int ; int ++ ) { short short = short ( java.io.InputStream ) ; PointF [] jp.co.cyberagent.android.gpuimage.PointF[] = new PointF [ short ] ; for ( int int = NUMBER ; int < short ; int ++ ) { short short = short ( java.io.InputStream ) ; short short = short ( java.io.InputStream ) ; jp.co.cyberagent.android.gpuimage.PointF[] [ int ] = new PointF ( short * float , short * float ) ; } java.util.ArrayList<jp.co.cyberagent.android.gpuimage.PointF[]> . add ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; } java.io.InputStream . void ( ) ; jp.co.cyberagent.android.gpuimage.PointF[] = java.util.ArrayList<jp.co.cyberagent.android.gpuimage.PointF[]> . get ( NUMBER ) ; jp.co.cyberagent.android.gpuimage.PointF[] = java.util.ArrayList<jp.co.cyberagent.android.gpuimage.PointF[]> . get ( NUMBER ) ; jp.co.cyberagent.android.gpuimage.PointF[] = java.util.ArrayList<jp.co.cyberagent.android.gpuimage.PointF[]> . get ( NUMBER ) ; jp.co.cyberagent.android.gpuimage.PointF[] = java.util.ArrayList<jp.co.cyberagent.android.gpuimage.PointF[]> . get ( NUMBER ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } }  <METHOD_END>
<METHOD_START> private short short ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { return ( short ) ( java.io.InputStream . int ( ) << NUMBER | java.io.InputStream . int ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( PointF [] jp.co.cyberagent.android.gpuimage.PointF[] ) { jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] ; java.util.ArrayList<java.lang.Float> = java.util.ArrayList<java.lang.Float> ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( PointF [] jp.co.cyberagent.android.gpuimage.PointF[] ) { jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] ; java.util.ArrayList<java.lang.Float> = java.util.ArrayList<java.lang.Float> ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( PointF [] jp.co.cyberagent.android.gpuimage.PointF[] ) { jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] ; java.util.ArrayList<java.lang.Float> = java.util.ArrayList<java.lang.Float> ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( PointF [] jp.co.cyberagent.android.gpuimage.PointF[] ) { jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] ; java.util.ArrayList<java.lang.Float> = java.util.ArrayList<java.lang.Float> ( jp.co.cyberagent.android.gpuimage.PointF[] ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { runOnDraw ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE3 ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int[] [ NUMBER ] ) ; if ( ( java.util.ArrayList<java.lang.Float> . int ( ) >= NUMBER ) && ( java.util.ArrayList<java.lang.Float> . int ( ) >= NUMBER ) && ( java.util.ArrayList<java.lang.Float> . int ( ) >= NUMBER ) && ( java.util.ArrayList<java.lang.Float> . int ( ) >= NUMBER ) ) { byte [] byte[] = new byte [ NUMBER * NUMBER ] ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { byte[] [ int * NUMBER + NUMBER ] = ( byte ) ( ( int ) java.lang.Math . float ( java.lang.Math . float ( int + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) , NUMBER ) , NUMBER ) & NUMBER ) ; byte[] [ int * NUMBER + NUMBER ] = ( byte ) ( ( int ) java.lang.Math . float ( java.lang.Math . float ( int + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) , NUMBER ) , NUMBER ) & NUMBER ) ; byte[] [ int * NUMBER ] = ( byte ) ( ( int ) java.lang.Math . float ( java.lang.Math . float ( int + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) , NUMBER ) , NUMBER ) & NUMBER ) ; byte[] [ int * NUMBER + NUMBER ] = ( byte ) ( NUMBER & NUMBER ) ; } GLES20 . glTexImage2D ( GLES20 . GL_TEXTURE_2D , NUMBER , GLES20 . GL_RGBA , NUMBER , NUMBER , NUMBER , GLES20 . GL_RGBA , GLES20 . GL_UNSIGNED_BYTE , java.nio.ByteBuffer . java.nio.ByteBuffer ( byte[] ) ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE3 ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int[] [ NUMBER ] ) ; if ( ( java.util.ArrayList<java.lang.Float> . int ( ) >= NUMBER ) && ( java.util.ArrayList<java.lang.Float> . int ( ) >= NUMBER ) && ( java.util.ArrayList<java.lang.Float> . int ( ) >= NUMBER ) && ( java.util.ArrayList<java.lang.Float> . int ( ) >= NUMBER ) ) { byte [] byte[] = new byte [ NUMBER * NUMBER ] ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { byte[] [ int * NUMBER + NUMBER ] = ( byte ) ( ( int ) java.lang.Math . float ( java.lang.Math . float ( int + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) , NUMBER ) , NUMBER ) & NUMBER ) ; byte[] [ int * NUMBER + NUMBER ] = ( byte ) ( ( int ) java.lang.Math . float ( java.lang.Math . float ( int + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) , NUMBER ) , NUMBER ) & NUMBER ) ; byte[] [ int * NUMBER ] = ( byte ) ( ( int ) java.lang.Math . float ( java.lang.Math . float ( int + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) + java.util.ArrayList<java.lang.Float> . java.lang.Float ( int ) , NUMBER ) , NUMBER ) & NUMBER ) ; byte[] [ int * NUMBER + NUMBER ] = ( byte ) ( NUMBER & NUMBER ) ; } GLES20 . glTexImage2D ( GLES20 . GL_TEXTURE_2D , NUMBER , GLES20 . GL_RGBA , NUMBER , NUMBER , NUMBER , GLES20 . GL_RGBA , GLES20 . GL_UNSIGNED_BYTE , java.nio.ByteBuffer . java.nio.ByteBuffer ( byte[] ) ) ; } }  <METHOD_END>
<METHOD_START> private java.util.ArrayList<java.lang.Float> < java.lang.Float > java.util.ArrayList<java.lang.Float> ( PointF [] jp.co.cyberagent.android.gpuimage.PointF[] ) { if ( jp.co.cyberagent.android.gpuimage.PointF[] == null || points . length <= NUMBER ) { return null ; } PointF [] jp.co.cyberagent.android.gpuimage.PointF[] = jp.co.cyberagent.android.gpuimage.PointF[] . clone ( ) ; java.util.Arrays . void ( jp.co.cyberagent.android.gpuimage.PointF[] , new java.util.Comparator<jp.co.cyberagent.android.gpuimage.PointF> < PointF > ( ) { @ java.lang.Override public int int ( PointF jp.co.cyberagent.android.gpuimage.PointF , PointF jp.co.cyberagent.android.gpuimage.PointF ) { if ( point1 . x < point2 . x ) { return - NUMBER ; } else if ( point1 . x > point2 . x ) { return NUMBER ; } else { return NUMBER ; } } } ) ; Point [] jp.co.cyberagent.android.gpuimage.Point[] = new Point [ pointsSorted . length ] ; for ( int int = NUMBER ; int < points . length ; int ++ ) { PointF jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF[] [ int ] ; jp.co.cyberagent.android.gpuimage.Point[] [ int ] = new Point ( ( int ) ( point . x * NUMBER ) , ( int ) ( point . y * NUMBER ) ) ; } java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> < Point > java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> = java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> ( jp.co.cyberagent.android.gpuimage.Point[] ) ; Point jp.co.cyberagent.android.gpuimage.Point = java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . get ( NUMBER ) ; if ( firstSplinePoint . x > NUMBER ) { for ( int int = firstSplinePoint . x ; int >= NUMBER ; int -- ) { java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . add ( NUMBER , new Point ( int , NUMBER ) ) ; } } Point jp.co.cyberagent.android.gpuimage.Point = java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . get ( java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . size ( ) - NUMBER ) ; if ( lastSplinePoint . x < NUMBER ) { for ( int int = lastSplinePoint . x + NUMBER ; int <= NUMBER ; int ++ ) { java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . add ( new Point ( int , NUMBER ) ) ; } } java.util.ArrayList<java.lang.Float> < java.lang.Float > java.util.ArrayList<java.lang.Float> = new java.util.ArrayList<java.lang.Float> < java.lang.Float > ( java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . size ( ) ) ; for ( Point jp.co.cyberagent.android.gpuimage.Point : java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> ) { Point jp.co.cyberagent.android.gpuimage.Point = new Point ( newPoint . x , newPoint . x ) ; float float = ( float ) java.lang.Math . double ( java.lang.Math . double ( ( origPoint . x - newPoint . x ) , NUMBER ) + java.lang.Math . double ( ( origPoint . y - newPoint . y ) , NUMBER ) ) ; if ( origPoint . y > newPoint . y ) { float = - float ; } java.util.ArrayList<java.lang.Float> . boolean ( float ) ; } return java.util.ArrayList<java.lang.Float> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( PointF jp.co.cyberagent.android.gpuimage.PointF , PointF jp.co.cyberagent.android.gpuimage.PointF ) { if ( point1 . x < point2 . x ) { return - NUMBER ; } else if ( point1 . x > point2 . x ) { return NUMBER ; } else { return NUMBER ; } }  <METHOD_END>
<METHOD_START> private java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> < Point > java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> ( Point [] jp.co.cyberagent.android.gpuimage.Point[] ) { java.util.ArrayList<java.lang.Double> < java.lang.Double > java.util.ArrayList<java.lang.Double> = java.util.ArrayList<java.lang.Double> ( jp.co.cyberagent.android.gpuimage.Point[] ) ; int int = java.util.ArrayList<java.lang.Double> . int ( ) ; if ( int < NUMBER ) { return null ; } double double[] [] = new double [ int ] ; for ( int int = NUMBER ; int < int ; int ++ ) { double[] [ int ] = java.util.ArrayList<java.lang.Double> . java.lang.Double ( int ) ; } java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> < Point > java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> = new java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> < Point > ( int + NUMBER ) ; for ( int int = NUMBER ; int < int - NUMBER ; int ++ ) { Point jp.co.cyberagent.android.gpuimage.Point = jp.co.cyberagent.android.gpuimage.Point[] [ int ] ; Point jp.co.cyberagent.android.gpuimage.Point = jp.co.cyberagent.android.gpuimage.Point[] [ int + NUMBER ] ; for ( int int = cur . x ; int < next . x ; int ++ ) { double double = ( double ) ( int - cur . x ) / ( next . x - cur . x ) ; double double = NUMBER - double ; double double = double ; double double = next . x - cur . x ; double double = double * cur . y + double * next . y + ( double * double / NUMBER ) * ( ( double * double * double - double ) * double[] [ int ] + ( double * double * double - double ) * double[] [ int + NUMBER ] ) ; if ( double > NUMBER ) { double = NUMBER ; } else if ( double < NUMBER ) { double = NUMBER ; } java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . add ( new Point ( int , ( int ) java.lang.Math . long ( double ) ) ) ; } } if ( java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . size ( ) == NUMBER ) { java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> . add ( jp.co.cyberagent.android.gpuimage.Point[] [ points . length - NUMBER ] ) ; } return java.util.ArrayList<jp.co.cyberagent.android.gpuimage.Point> ; }  <METHOD_END>
<METHOD_START> private java.util.ArrayList<java.lang.Double> < java.lang.Double > java.util.ArrayList<java.lang.Double> ( Point [] jp.co.cyberagent.android.gpuimage.Point[] ) { int int = points . length ; if ( int <= NUMBER ) { return null ; } double double[][] [] [] = new double [ [ int ][ NUMBER ] ; double double[] [] = new double [ int ] ; double[][] [ NUMBER ] [ NUMBER ] = NUMBER ; double[][] [ NUMBER ] [ NUMBER ] = NUMBER ; double[][] [ NUMBER ] [ NUMBER ] = NUMBER ; for ( int int = NUMBER ; int < int - NUMBER ; int ++ ) { Point jp.co.cyberagent.android.gpuimage.Point = jp.co.cyberagent.android.gpuimage.Point[] [ int - NUMBER ] ; Point jp.co.cyberagent.android.gpuimage.Point = jp.co.cyberagent.android.gpuimage.Point[] [ int ] ; Point jp.co.cyberagent.android.gpuimage.Point = jp.co.cyberagent.android.gpuimage.Point[] [ int + NUMBER ] ; double[][] [ int ] [ NUMBER ] = ( double ) ( P2 . x - P1 . x ) / NUMBER ; double[][] [ int ] [ NUMBER ] = ( double ) ( P3 . x - P1 . x ) / NUMBER ; double[][] [ int ] [ NUMBER ] = ( double ) ( P3 . x - P2 . x ) / NUMBER ; double[] [ int ] = ( double ) ( P3 . y - P2 . y ) / ( P3 . x - P2 . x ) - ( double ) ( P2 . y - P1 . y ) / ( P2 . x - P1 . x ) ; } double[] [ NUMBER ] = NUMBER ; double[] [ int - NUMBER ] = NUMBER ; double[][] [ int - NUMBER ] [ NUMBER ] = NUMBER ; double[][] [ int - NUMBER ] [ NUMBER ] = NUMBER ; double[][] [ int - NUMBER ] [ NUMBER ] = NUMBER ; for ( int int = NUMBER ; int < int ; int ++ ) { double double = double[][] [ int ] [ NUMBER ] / double[][] [ int - NUMBER ] [ NUMBER ] ; double[][] [ int ] [ NUMBER ] -= double * double[][] [ int - NUMBER ] [ NUMBER ] ; double[][] [ int ] [ NUMBER ] = NUMBER ; double[] [ int ] -= double * double[] [ int - NUMBER ] ; } for ( int int = int - NUMBER ; int >= NUMBER ; int -- ) { double double = double[][] [ int ] [ NUMBER ] / double[][] [ int + NUMBER ] [ NUMBER ] ; double[][] [ int ] [ NUMBER ] -= double * double[][] [ int + NUMBER ] [ NUMBER ] ; double[][] [ int ] [ NUMBER ] = NUMBER ; double[] [ int ] -= double * double[] [ int + NUMBER ] ; } java.util.ArrayList<java.lang.Double> < java.lang.Double > java.util.ArrayList<java.lang.Double> = new java.util.ArrayList<java.lang.Double> < java.lang.Double > ( int ) ; for ( int int = NUMBER ; int < int ; int ++ ) java.util.ArrayList<java.lang.Double> . boolean ( double[] [ int ] / double[][] [ int ] [ NUMBER ] ) ; return java.util.ArrayList<java.lang.Double> ; }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( float float , float float ) { super( java.lang.String ); float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; void ( float ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String , NO_FILTER_FRAGMENT_SHADER ); float[] = new float [ NUMBER ] ; Matrix . orthoM ( float[] , NUMBER , - NUMBER , NUMBER , - NUMBER , NUMBER , - NUMBER , NUMBER ) ; float[] = new float [ NUMBER ] ; Matrix . setIdentityM ( float[] , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; setUniformMatrix4f ( int , float[] ) ; setUniformMatrix4f ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInitialized ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final int int ) { super. onOutputSizeChanged ( int , int ) ; if ( ! boolean ) { Matrix . orthoM ( float[] , NUMBER , - NUMBER , NUMBER , - NUMBER * ( float ) int / ( float ) int , NUMBER * ( float ) int / ( float ) int , - NUMBER , NUMBER ) ; setUniformMatrix4f ( int , float[] ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final java.nio.FloatBuffer java.nio.FloatBuffer , final java.nio.FloatBuffer java.nio.FloatBuffer ) { java.nio.FloatBuffer java.nio.FloatBuffer = java.nio.FloatBuffer ; if ( ! boolean ) { float [] float[] = new float [ NUMBER ] ; java.nio.FloatBuffer . java.nio.Buffer ( NUMBER ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ; float float = ( float ) getOutputHeight ( ) / ( float ) getOutputWidth ( ) ; float[] [ NUMBER ] *= float ; float[] [ NUMBER ] *= float ; float[] [ NUMBER ] *= float ; float[] [ NUMBER ] *= float ; java.nio.FloatBuffer = java.nio.ByteBuffer . java.nio.ByteBuffer ( float[] . int * NUMBER ) . java.nio.ByteBuffer ( java.nio.ByteOrder . java.nio.ByteOrder ( ) ) . java.nio.FloatBuffer ( ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) . java.nio.Buffer ( NUMBER ) ; } super. onDraw ( int , java.nio.FloatBuffer , java.nio.FloatBuffer ) ; }  <METHOD_END>
<METHOD_START> public void void ( float [] float[] ) { this . float[] = float[] ; setUniformMatrix4f ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public float [] float[] ( ) { return float[] ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; if ( boolean ) { Matrix . orthoM ( float[] , NUMBER , - NUMBER , NUMBER , - NUMBER , NUMBER , - NUMBER , NUMBER ) ; setUniformMatrix4f ( int , float[] ) ; } else { void ( getOutputWidth ( ) , getOutputHeight ( ) ) ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; void ( boolean ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this( java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String , java.lang.String ); void ( Rotation . NORMAL , false , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetAttribLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; GLES20 . glEnableVertexAttribArray ( int ) ; if ( jp.co.cyberagent.android.gpuimage.Bitmap != null && ! jp.co.cyberagent.android.gpuimage.Bitmap . isRecycled ( ) ) { void ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; } }  <METHOD_END>
<METHOD_START> public void void ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { if ( jp.co.cyberagent.android.gpuimage.Bitmap != null && jp.co.cyberagent.android.gpuimage.Bitmap . isRecycled ( ) ) { return; } jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ; if ( jp.co.cyberagent.android.gpuimage.Bitmap == null ) { return; } runOnDraw ( new java.lang.Runnable ( ) { public void void ( ) { if ( int == OpenGlUtils . NO_TEXTURE ) { if ( jp.co.cyberagent.android.gpuimage.Bitmap == null || jp.co.cyberagent.android.gpuimage.Bitmap . isRecycled ( ) ) { return; } GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE3 ) ; int = OpenGlUtils . loadTexture ( jp.co.cyberagent.android.gpuimage.Bitmap , OpenGlUtils . NO_TEXTURE , false ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( int == OpenGlUtils . NO_TEXTURE ) { if ( jp.co.cyberagent.android.gpuimage.Bitmap == null || jp.co.cyberagent.android.gpuimage.Bitmap . isRecycled ( ) ) { return; } GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE3 ) ; int = OpenGlUtils . loadTexture ( jp.co.cyberagent.android.gpuimage.Bitmap , OpenGlUtils . NO_TEXTURE , false ) ; } }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( ) { return jp.co.cyberagent.android.gpuimage.Bitmap ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( jp.co.cyberagent.android.gpuimage.Bitmap != null && ! jp.co.cyberagent.android.gpuimage.Bitmap . isRecycled ( ) ) { jp.co.cyberagent.android.gpuimage.Bitmap . recycle ( ) ; jp.co.cyberagent.android.gpuimage.Bitmap = null ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { super. onDestroy ( ) ; GLES20 . glDeleteTextures ( NUMBER , new int [] { int } , NUMBER ) ; int = OpenGlUtils . NO_TEXTURE ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { GLES20 . glEnableVertexAttribArray ( int ) ; GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE3 ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int ) ; GLES20 . glUniform1i ( int , NUMBER ) ; java.nio.ByteBuffer . java.nio.Buffer ( NUMBER ) ; GLES20 . glVertexAttribPointer ( int , NUMBER , GLES20 . GL_FLOAT , false , NUMBER , java.nio.ByteBuffer ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Rotation jp.co.cyberagent.android.gpuimage.Rotation , final boolean boolean , final boolean boolean ) { float [] float[] = TextureRotationUtil . getRotation ( jp.co.cyberagent.android.gpuimage.Rotation , boolean , boolean ) ; java.nio.ByteBuffer java.nio.ByteBuffer = java.nio.ByteBuffer . java.nio.ByteBuffer ( NUMBER ) . java.nio.ByteBuffer ( java.nio.ByteOrder . java.nio.ByteOrder ( ) ) ; java.nio.FloatBuffer java.nio.FloatBuffer = java.nio.ByteBuffer . java.nio.FloatBuffer ( ) ; java.nio.FloatBuffer . java.nio.FloatBuffer ( float[] ) ; java.nio.FloatBuffer . java.nio.Buffer ( ) ; java.nio.ByteBuffer = java.nio.ByteBuffer ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( null ); addFilter ( new GPUImageFilter ( java.lang.String , java.lang.String ) ) ; addFilter ( new GPUImageFilter ( java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { super( java.lang.String , java.lang.String , java.lang.String , java.lang.String ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { float float = float ( ) ; GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter = mFilters . get ( NUMBER ) ; int int = GLES20 . glGetUniformLocation ( jp.co.cyberagent.android.gpuimage.GPUImageFilter . getProgram ( ) , STRING ) ; int int = GLES20 . glGetUniformLocation ( jp.co.cyberagent.android.gpuimage.GPUImageFilter . getProgram ( ) , STRING ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . setFloat ( int , float / mOutputWidth ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . setFloat ( int , NUMBER ) ; float = float ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter = mFilters . get ( NUMBER ) ; int = GLES20 . glGetUniformLocation ( jp.co.cyberagent.android.gpuimage.GPUImageFilter . getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( jp.co.cyberagent.android.gpuimage.GPUImageFilter . getProgram ( ) , STRING ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . setFloat ( int , NUMBER ) ; jp.co.cyberagent.android.gpuimage.GPUImageFilter . setFloat ( int , float / mOutputHeight ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int ) { super. onOutputSizeChanged ( int , int ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public float float ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> public float float ( ) { return NUMBER ; }  <METHOD_END>
<METHOD_START> public void ( Context jp.co.cyberagent.android.gpuimage.Context ) { super( jp.co.cyberagent.android.gpuimage.Context ); void ( jp.co.cyberagent.android.gpuimage.Context , null ) ; }  <METHOD_END>
<METHOD_START> public void ( Context jp.co.cyberagent.android.gpuimage.Context , AttributeSet jp.co.cyberagent.android.gpuimage.AttributeSet ) { super( jp.co.cyberagent.android.gpuimage.Context , jp.co.cyberagent.android.gpuimage.AttributeSet ); void ( jp.co.cyberagent.android.gpuimage.Context , jp.co.cyberagent.android.gpuimage.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> private void void ( Context jp.co.cyberagent.android.gpuimage.Context , AttributeSet jp.co.cyberagent.android.gpuimage.AttributeSet ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView = new jp.co.cyberagent.android.gpuimage.GPUImageView.GPUImageGLSurfaceView ( jp.co.cyberagent.android.gpuimage.Context , jp.co.cyberagent.android.gpuimage.AttributeSet ) ; addView ( jp.co.cyberagent.android.gpuimage.GLSurfaceView ) ; jp.co.cyberagent.android.gpuimage.GPUImage = new GPUImage ( getContext ( ) ) ; jp.co.cyberagent.android.gpuimage.GPUImage . setGLSurfaceView ( jp.co.cyberagent.android.gpuimage.GLSurfaceView ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int ) { if ( float != NUMBER ) { int int = MeasureSpec . getSize ( int ) ; int int = MeasureSpec . getSize ( int ) ; int int ; int int ; if ( int / float < int ) { int = int ; int = java.lang.Math . int ( int / float ) ; } else { int = int ; int = java.lang.Math . int ( int * float ) ; } int int = MeasureSpec . makeMeasureSpec ( int , MeasureSpec . EXACTLY ) ; int int = MeasureSpec . makeMeasureSpec ( int , MeasureSpec . EXACTLY ) ; super. onMeasure ( int , int ) ; } else { super. onMeasure ( int , int ) ; } }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.GPUImage jp.co.cyberagent.android.gpuimage.GPUImage ( ) { return jp.co.cyberagent.android.gpuimage.GPUImage ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , float float ) { jp.co.cyberagent.android.gpuimage.GPUImage . setBackgroundColor ( float , float , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { float = float ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . requestLayout ( ) ; jp.co.cyberagent.android.gpuimage.GPUImage . deleteImage ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( GPUImage . GPUImage GPUImage.ScaleType ) { jp.co.cyberagent.android.gpuimage.GPUImage . setScaleType ( GPUImage.ScaleType ) ; }  <METHOD_END>
<METHOD_START> public void void ( Rotation jp.co.cyberagent.android.gpuimage.Rotation ) { jp.co.cyberagent.android.gpuimage.GPUImage . setRotation ( jp.co.cyberagent.android.gpuimage.Rotation ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter ) { jp.co.cyberagent.android.gpuimage.GPUImageFilter = jp.co.cyberagent.android.gpuimage.GPUImageFilter ; jp.co.cyberagent.android.gpuimage.GPUImage . setFilter ( jp.co.cyberagent.android.gpuimage.GPUImageFilter ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.GPUImageFilter jp.co.cyberagent.android.gpuimage.GPUImageFilter ( ) { return jp.co.cyberagent.android.gpuimage.GPUImageFilter ; }  <METHOD_END>
<METHOD_START> public void void ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { jp.co.cyberagent.android.gpuimage.GPUImage . setImage ( jp.co.cyberagent.android.gpuimage.Bitmap ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Uri jp.co.cyberagent.android.gpuimage.Uri ) { jp.co.cyberagent.android.gpuimage.GPUImage . setImage ( jp.co.cyberagent.android.gpuimage.Uri ) ; }  <METHOD_END>
<METHOD_START> public void void ( final java.io.File java.io.File ) { jp.co.cyberagent.android.gpuimage.GPUImage . setImage ( java.io.File ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView . requestRender ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener ) { new jp.co.cyberagent.android.gpuimage.GPUImageView.SaveTask ( java.lang.String , java.lang.String , jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener ) . execute ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , int int , int int , final jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener ) { new jp.co.cyberagent.android.gpuimage.GPUImageView.SaveTask ( java.lang.String , java.lang.String , int , int , jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener ) . execute ( ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( final int int , final int int ) throws java.lang.InterruptedException { if ( Looper . myLooper ( ) == Looper . getMainLooper ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } jp.co.cyberagent.android.gpuimage.GPUImageView.Size = new jp.co.cyberagent.android.gpuimage.GPUImageView.Size ( int , int ) ; final java.util.concurrent.Semaphore java.util.concurrent.Semaphore = new java.util.concurrent.Semaphore ( NUMBER ) ; getViewTreeObserver ( ) . addOnGlobalLayoutListener ( new ViewTreeObserver . ViewTreeObserver ( ) { @ java.lang.Override public void void ( ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . JELLY_BEAN ) { getViewTreeObserver ( ) . removeGlobalOnLayoutListener ( this ) ; } else { getViewTreeObserver ( ) . removeOnGlobalLayoutListener ( this ) ; } java.util.concurrent.Semaphore . void ( ) ; } } ) ; post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { addView ( new jp.co.cyberagent.android.gpuimage.GPUImageView.LoadingView ( getContext ( ) ) ) ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . requestLayout ( ) ; } } ) ; java.util.concurrent.Semaphore . void ( ) ; jp.co.cyberagent.android.gpuimage.GPUImage . runOnGLThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { java.util.concurrent.Semaphore . void ( ) ; } } ) ; void ( ) ; java.util.concurrent.Semaphore . void ( ) ; Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = jp.co.cyberagent.android.gpuimage.Bitmap ( ) ; jp.co.cyberagent.android.gpuimage.GPUImageView.Size = null ; post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView . requestLayout ( ) ; } } ) ; void ( ) ; postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { removeViewAt ( NUMBER ) ; } } , NUMBER ) ; return jp.co.cyberagent.android.gpuimage.Bitmap ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . JELLY_BEAN ) { getViewTreeObserver ( ) . removeGlobalOnLayoutListener ( this ) ; } else { getViewTreeObserver ( ) . removeOnGlobalLayoutListener ( this ) ; } java.util.concurrent.Semaphore . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { addView ( new jp.co.cyberagent.android.gpuimage.GPUImageView.LoadingView ( getContext ( ) ) ) ; jp.co.cyberagent.android.gpuimage.GLSurfaceView . requestLayout ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { java.util.concurrent.Semaphore . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView . requestLayout ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { removeViewAt ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( ) java.lang.InterruptedException { final java.util.concurrent.Semaphore java.util.concurrent.Semaphore = new java.util.concurrent.Semaphore ( NUMBER ) ; final int int = jp.co.cyberagent.android.gpuimage.GLSurfaceView . getMeasuredWidth ( ) ; final int int = jp.co.cyberagent.android.gpuimage.GLSurfaceView . getMeasuredHeight ( ) ; final int [] int[] = new int [ int * int ] ; jp.co.cyberagent.android.gpuimage.GPUImage . runOnGLThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { final java.nio.IntBuffer java.nio.IntBuffer = java.nio.IntBuffer . java.nio.IntBuffer ( int * int ) ; GLES20 . glReadPixels ( NUMBER , NUMBER , int , int , GLES20 . GL_RGBA , GLES20 . GL_UNSIGNED_BYTE , java.nio.IntBuffer ) ; int [] int[] = java.nio.IntBuffer . int[] ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { for ( int int = NUMBER ; int < int ; int ++ ) { int[] [ ( int - int - NUMBER ) * int + int ] = int[] [ int * int + int ] ; } } java.util.concurrent.Semaphore . void ( ) ; } } ) ; void ( ) ; java.util.concurrent.Semaphore . void ( ) ; Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = Bitmap . createBitmap ( int , int , Bitmap . Config . ARGB_8888 ) ; jp.co.cyberagent.android.gpuimage.Bitmap . copyPixelsFromBuffer ( java.nio.IntBuffer . java.nio.IntBuffer ( int[] ) ) ; return jp.co.cyberagent.android.gpuimage.Bitmap ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final java.nio.IntBuffer java.nio.IntBuffer = java.nio.IntBuffer . java.nio.IntBuffer ( int * int ) ; GLES20 . glReadPixels ( NUMBER , NUMBER , int , int , GLES20 . GL_RGBA , GLES20 . GL_UNSIGNED_BYTE , java.nio.IntBuffer ) ; int [] int[] = java.nio.IntBuffer . int[] ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { for ( int int = NUMBER ; int < int ; int ++ ) { int[] [ ( int - int - NUMBER ) * int + int ] = int[] [ int * int + int ] ; } } java.util.concurrent.Semaphore . void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView . onPause ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { jp.co.cyberagent.android.gpuimage.GLSurfaceView . onResume ( ) ; }  <METHOD_END>
<METHOD_START> public void ( int int , int int ) { this . int = int ; this . int = int ; }  <METHOD_END>
<METHOD_START> public void ( Context jp.co.cyberagent.android.gpuimage.Context ) { super( jp.co.cyberagent.android.gpuimage.Context ); }  <METHOD_END>
<METHOD_START> public void ( Context jp.co.cyberagent.android.gpuimage.Context , AttributeSet jp.co.cyberagent.android.gpuimage.AttributeSet ) { super( jp.co.cyberagent.android.gpuimage.Context , jp.co.cyberagent.android.gpuimage.AttributeSet ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int ) { if ( jp.co.cyberagent.android.gpuimage.GPUImageView.Size != null ) { super. onMeasure ( MeasureSpec . makeMeasureSpec ( jp.co.cyberagent.android.gpuimage.GPUImageView.Size . int , MeasureSpec . EXACTLY ) , MeasureSpec . makeMeasureSpec ( jp.co.cyberagent.android.gpuimage.GPUImageView.Size . int , MeasureSpec . EXACTLY ) ) ; } else { super. onMeasure ( int , int ) ; } }  <METHOD_END>
<METHOD_START> public void ( Context jp.co.cyberagent.android.gpuimage.Context ) { super( jp.co.cyberagent.android.gpuimage.Context ); void ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Context jp.co.cyberagent.android.gpuimage.Context , AttributeSet jp.co.cyberagent.android.gpuimage.AttributeSet ) { super( jp.co.cyberagent.android.gpuimage.Context , jp.co.cyberagent.android.gpuimage.AttributeSet ); void ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Context jp.co.cyberagent.android.gpuimage.Context , AttributeSet jp.co.cyberagent.android.gpuimage.AttributeSet , int int ) { super( jp.co.cyberagent.android.gpuimage.Context , jp.co.cyberagent.android.gpuimage.AttributeSet , int ); void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { ProgressBar jp.co.cyberagent.android.gpuimage.ProgressBar = new ProgressBar ( getContext ( ) ) ; jp.co.cyberagent.android.gpuimage.ProgressBar . setLayoutParams ( new LayoutParams ( LayoutParams . WRAP_CONTENT , LayoutParams . WRAP_CONTENT , Gravity . CENTER ) ) ; addView ( jp.co.cyberagent.android.gpuimage.ProgressBar ) ; void ( Color . BLACK ) ; }  <METHOD_END>
<METHOD_START> public void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener ) { this( java.lang.String , java.lang.String , NUMBER , NUMBER , jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener ); }  <METHOD_END>
<METHOD_START> public void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , int int , int int , final jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener ) { java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; int = int ; int = int ; jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener = jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener ; jp.co.cyberagent.android.gpuimage.Handler = new Handler ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( final java.lang.Void ... java.lang.Void[] ) { try { Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = int != NUMBER ? jp.co.cyberagent.android.gpuimage.Bitmap ( int , int ) : jp.co.cyberagent.android.gpuimage.Bitmap ( ) ; void ( java.lang.String , java.lang.String , jp.co.cyberagent.android.gpuimage.Bitmap ) ; } catch ( java.lang.InterruptedException java.lang.InterruptedException ) { java.lang.InterruptedException . void ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ) { java.io.File java.io.File = Environment . getExternalStoragePublicDirectory ( Environment . DIRECTORY_PICTURES ) ; java.io.File java.io.File = new java.io.File ( java.io.File , java.lang.String + STRING + java.lang.String ) ; try { java.io.File . java.io.File ( ) . boolean ( ) ; jp.co.cyberagent.android.gpuimage.Bitmap . compress ( Bitmap . CompressFormat . JPEG , NUMBER , new java.io.FileOutputStream ( java.io.File ) ) ; MediaScannerConnection . scanFile ( getContext ( ) , new java.lang.String [] { java.io.File . java.lang.String ( ) } , null , new MediaScannerConnection . MediaScannerConnection ( ) { @ java.lang.Override public void void ( final java.lang.String java.lang.String , final Uri jp.co.cyberagent.android.gpuimage.Uri ) { if ( jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener != null ) { jp.co.cyberagent.android.gpuimage.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener . void ( jp.co.cyberagent.android.gpuimage.Uri ) ; } } ) ; } } } ) ; } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { java.io.FileNotFoundException . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final java.lang.String java.lang.String , final Uri jp.co.cyberagent.android.gpuimage.Uri ) { if ( jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener != null ) { jp.co.cyberagent.android.gpuimage.Handler . post ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener . void ( jp.co.cyberagent.android.gpuimage.Uri ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { jp.co.cyberagent.android.gpuimage.GPUImageView.OnPictureSavedListener . void ( jp.co.cyberagent.android.gpuimage.Uri ) ; }  <METHOD_END>
<METHOD_START> void void ( Uri jp.co.cyberagent.android.gpuimage.Uri );  <METHOD_END>
<METHOD_START> public void ( ) { this( new PointF ( ) , new float [] { NUMBER , NUMBER , NUMBER } , NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final PointF jp.co.cyberagent.android.gpuimage.PointF , final float [] float[] , final float float , final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; float[] = float[] ; float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; void ( jp.co.cyberagent.android.gpuimage.PointF ) ; void ( float[] ) ; void ( float ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final PointF jp.co.cyberagent.android.gpuimage.PointF ) { jp.co.cyberagent.android.gpuimage.PointF = jp.co.cyberagent.android.gpuimage.PointF ; setPoint ( int , jp.co.cyberagent.android.gpuimage.PointF ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float [] float[] ) { float[] = float[] ; setFloatVec3 ( int , float[] ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public void ( ) { this( NUMBER , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final float float , final float float ) { super( NO_FILTER_VERTEX_SHADER , java.lang.String ); float = float ; float = float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInit ( ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; int = GLES20 . glGetUniformLocation ( getProgram ( ) , STRING ) ; void ( float ) ; void ( float ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , float < NUMBER ? ( float ) ( NUMBER * ( float - NUMBER ) ) : ( float ) ( NUMBER * ( float - NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( final float float ) { float = float ; setFloat ( int , ( float ) ( float / NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public static int int ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap , final int int ) { return int ( jp.co.cyberagent.android.gpuimage.Bitmap , int , true ) ; }  <METHOD_END>
<METHOD_START> public static int int ( final Bitmap jp.co.cyberagent.android.gpuimage.Bitmap , final int int , final boolean boolean ) { int int[] [] = new int [ NUMBER ] ; if ( int == int ) { GLES20 . glGenTextures ( NUMBER , int[] , NUMBER ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int[] [ NUMBER ] ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_MAG_FILTER , GLES20 . GL_LINEAR ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_MIN_FILTER , GLES20 . GL_LINEAR ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_S , GLES20 . GL_CLAMP_TO_EDGE ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_T , GLES20 . GL_CLAMP_TO_EDGE ) ; GLUtils . texImage2D ( GLES20 . GL_TEXTURE_2D , NUMBER , jp.co.cyberagent.android.gpuimage.Bitmap , NUMBER ) ; } else { GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int ) ; GLUtils . texSubImage2D ( GLES20 . GL_TEXTURE_2D , NUMBER , NUMBER , NUMBER , jp.co.cyberagent.android.gpuimage.Bitmap ) ; int[] [ NUMBER ] = int ; } if ( boolean ) { jp.co.cyberagent.android.gpuimage.Bitmap . recycle ( ) ; } return int[] [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> public static int int ( final java.nio.IntBuffer java.nio.IntBuffer , final Size jp.co.cyberagent.android.gpuimage.Size , final int int ) { int int[] [] = new int [ NUMBER ] ; if ( int == int ) { GLES20 . glGenTextures ( NUMBER , int[] , NUMBER ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int[] [ NUMBER ] ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_MAG_FILTER , GLES20 . GL_LINEAR ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_MIN_FILTER , GLES20 . GL_LINEAR ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_S , GLES20 . GL_CLAMP_TO_EDGE ) ; GLES20 . glTexParameterf ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_T , GLES20 . GL_CLAMP_TO_EDGE ) ; GLES20 . glTexImage2D ( GLES20 . GL_TEXTURE_2D , NUMBER , GLES20 . GL_RGBA , size . width , size . height , NUMBER , GLES20 . GL_RGBA , GLES20 . GL_UNSIGNED_BYTE , java.nio.IntBuffer ) ; } else { GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , int ) ; GLES20 . glTexSubImage2D ( GLES20 . GL_TEXTURE_2D , NUMBER , NUMBER , NUMBER , size . width , size . height , GLES20 . GL_RGBA , GLES20 . GL_UNSIGNED_BYTE , java.nio.IntBuffer ) ; int[] [ NUMBER ] = int ; } return int[] [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> public static int int ( final java.nio.IntBuffer java.nio.IntBuffer , final Size jp.co.cyberagent.android.gpuimage.Size , final int int ) { Bitmap jp.co.cyberagent.android.gpuimage.Bitmap = Bitmap . createBitmap ( java.nio.IntBuffer . int[] ( ) , size . width , size . height , Config . ARGB_8888 ) ; return int ( jp.co.cyberagent.android.gpuimage.Bitmap , int ) ; }  <METHOD_END>
<METHOD_START> public static int int ( final java.lang.String java.lang.String , final int int ) { int [] int[] = new int [ NUMBER ] ; int int = GLES20 . glCreateShader ( int ) ; GLES20 . glShaderSource ( int , java.lang.String ) ; GLES20 . glCompileShader ( int ) ; GLES20 . glGetShaderiv ( int , GLES20 . GL_COMPILE_STATUS , int[] , NUMBER ) ; if ( int[] [ NUMBER ] == NUMBER ) { Log . d ( STRING , STRING + GLES20 . glGetShaderInfoLog ( int ) ) ; return NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> public static int int ( final java.lang.String java.lang.String , final java.lang.String java.lang.String ) { int int ; int int ; int int ; int [] int[] = new int [ NUMBER ] ; int = int ( java.lang.String , GLES20 . GL_VERTEX_SHADER ) ; if ( int == NUMBER ) { Log . d ( STRING , STRING ) ; return NUMBER ; } int = int ( java.lang.String , GLES20 . GL_FRAGMENT_SHADER ) ; if ( int == NUMBER ) { Log . d ( STRING , STRING ) ; return NUMBER ; } int = GLES20 . glCreateProgram ( ) ; GLES20 . glAttachShader ( int , int ) ; GLES20 . glAttachShader ( int , int ) ; GLES20 . glLinkProgram ( int ) ; GLES20 . glGetProgramiv ( int , GLES20 . GL_LINK_STATUS , int[] , NUMBER ) ; if ( int[] [ NUMBER ] <= NUMBER ) { Log . d ( STRING , STRING ) ; return NUMBER ; } GLES20 . glDeleteShader ( int ) ; GLES20 . glDeleteShader ( int ) ; return int ; }  <METHOD_END>
<METHOD_START> public static float float ( final float float , final float float ) { float float = ( float ) java.lang.Math . double ( ) ; return float + ( float - float ) * float ; }  <METHOD_END>
<METHOD_START> public void ( final int int , final int int ) { int = int ; int = int ; int [] int[] = new int [ NUMBER ] ; int [] int[] = new int [] { EGL_WIDTH , int , EGL_HEIGHT , int , EGL_NONE } ; jp.co.cyberagent.android.gpuimage.EGL10 = ( EGL10 ) EGLContext . getEGL ( ) ; jp.co.cyberagent.android.gpuimage.EGLDisplay = jp.co.cyberagent.android.gpuimage.EGL10 . eglGetDisplay ( EGL_DEFAULT_DISPLAY ) ; jp.co.cyberagent.android.gpuimage.EGL10 . eglInitialize ( jp.co.cyberagent.android.gpuimage.EGLDisplay , int[] ) ; jp.co.cyberagent.android.gpuimage.EGLConfig = jp.co.cyberagent.android.gpuimage.EGLConfig ( ) ; int int = NUMBER ; int [] int[] = { int , NUMBER , EGL10 . EGL_NONE } ; jp.co.cyberagent.android.gpuimage.EGLContext = jp.co.cyberagent.android.gpuimage.EGL10 . eglCreateContext ( jp.co.cyberagent.android.gpuimage.EGLDisplay , jp.co.cyberagent.android.gpuimage.EGLConfig , EGL_NO_CONTEXT , int[] ) ; jp.co.cyberagent.android.gpuimage.EGLSurface = jp.co.cyberagent.android.gpuimage.EGL10 . eglCreatePbufferSurface ( jp.co.cyberagent.android.gpuimage.EGLDisplay , jp.co.cyberagent.android.gpuimage.EGLConfig , int[] ) ; jp.co.cyberagent.android.gpuimage.EGL10 . eglMakeCurrent ( jp.co.cyberagent.android.gpuimage.EGLDisplay , jp.co.cyberagent.android.gpuimage.EGLSurface , jp.co.cyberagent.android.gpuimage.EGLSurface , jp.co.cyberagent.android.gpuimage.EGLContext ) ; jp.co.cyberagent.android.gpuimage.GL10 = ( GL10 ) jp.co.cyberagent.android.gpuimage.EGLContext . getGL ( ) ; java.lang.String = java.lang.Thread . java.lang.Thread ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( final GLSurfaceView . GLSurfaceView GLSurfaceView.Renderer ) { GLSurfaceView.Renderer = GLSurfaceView.Renderer ; if ( ! java.lang.Thread . java.lang.Thread ( ) . java.lang.String ( ) . boolean ( java.lang.String ) ) { Log . e ( java.lang.String , STRING ) ; return; } GLSurfaceView.Renderer . onSurfaceCreated ( jp.co.cyberagent.android.gpuimage.GL10 , jp.co.cyberagent.android.gpuimage.EGLConfig ) ; GLSurfaceView.Renderer . onSurfaceChanged ( jp.co.cyberagent.android.gpuimage.GL10 , int , int ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.Bitmap jp.co.cyberagent.android.gpuimage.Bitmap ( ) { if ( GLSurfaceView.Renderer == null ) { Log . e ( java.lang.String , STRING ) ; return null ; } if ( ! java.lang.Thread . java.lang.Thread ( ) . java.lang.String ( ) . boolean ( java.lang.String ) ) { Log . e ( java.lang.String , STRING ) ; return null ; } GLSurfaceView.Renderer . onDrawFrame ( jp.co.cyberagent.android.gpuimage.GL10 ) ; GLSurfaceView.Renderer . onDrawFrame ( jp.co.cyberagent.android.gpuimage.GL10 ) ; void ( ) ; return jp.co.cyberagent.android.gpuimage.Bitmap ; }  <METHOD_END>
<METHOD_START> public void void ( ) { GLSurfaceView.Renderer . onDrawFrame ( jp.co.cyberagent.android.gpuimage.GL10 ) ; GLSurfaceView.Renderer . onDrawFrame ( jp.co.cyberagent.android.gpuimage.GL10 ) ; jp.co.cyberagent.android.gpuimage.EGL10 . eglMakeCurrent ( jp.co.cyberagent.android.gpuimage.EGLDisplay , EGL10 . EGL_NO_SURFACE , EGL10 . EGL_NO_SURFACE , EGL10 . EGL_NO_CONTEXT ) ; jp.co.cyberagent.android.gpuimage.EGL10 . eglDestroySurface ( jp.co.cyberagent.android.gpuimage.EGLDisplay , jp.co.cyberagent.android.gpuimage.EGLSurface ) ; jp.co.cyberagent.android.gpuimage.EGL10 . eglDestroyContext ( jp.co.cyberagent.android.gpuimage.EGLDisplay , jp.co.cyberagent.android.gpuimage.EGLContext ) ; jp.co.cyberagent.android.gpuimage.EGL10 . eglTerminate ( jp.co.cyberagent.android.gpuimage.EGLDisplay ) ; }  <METHOD_END>
<METHOD_START> private jp.co.cyberagent.android.gpuimage.EGLConfig jp.co.cyberagent.android.gpuimage.EGLConfig ( ) { int [] int[] = new int [] { EGL_DEPTH_SIZE , NUMBER , EGL_STENCIL_SIZE , NUMBER , EGL_RED_SIZE , NUMBER , EGL_GREEN_SIZE , NUMBER , EGL_BLUE_SIZE , NUMBER , EGL_ALPHA_SIZE , NUMBER , EGL10 . EGL_RENDERABLE_TYPE , NUMBER , EGL_NONE } ; int [] int[] = new int [ NUMBER ] ; jp.co.cyberagent.android.gpuimage.EGL10 . eglChooseConfig ( jp.co.cyberagent.android.gpuimage.EGLDisplay , int[] , null , NUMBER , int[] ) ; int int = int[] [ NUMBER ] ; jp.co.cyberagent.android.gpuimage.EGLConfig[] = new EGLConfig [ int ] ; jp.co.cyberagent.android.gpuimage.EGL10 . eglChooseConfig ( jp.co.cyberagent.android.gpuimage.EGLDisplay , int[] , jp.co.cyberagent.android.gpuimage.EGLConfig[] , int , int[] ) ; if ( boolean ) { void ( ) ; } return jp.co.cyberagent.android.gpuimage.EGLConfig[] [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Log . i ( java.lang.String , STRING ) ; for ( EGLConfig jp.co.cyberagent.android.gpuimage.EGLConfig : jp.co.cyberagent.android.gpuimage.EGLConfig[] ) { int int , int , int , int , int , int ; int = int ( jp.co.cyberagent.android.gpuimage.EGLConfig , EGL_DEPTH_SIZE ) ; int = int ( jp.co.cyberagent.android.gpuimage.EGLConfig , EGL_STENCIL_SIZE ) ; int = int ( jp.co.cyberagent.android.gpuimage.EGLConfig , EGL_RED_SIZE ) ; int = int ( jp.co.cyberagent.android.gpuimage.EGLConfig , EGL_GREEN_SIZE ) ; int = int ( jp.co.cyberagent.android.gpuimage.EGLConfig , EGL_BLUE_SIZE ) ; int = int ( jp.co.cyberagent.android.gpuimage.EGLConfig , EGL_ALPHA_SIZE ) ; Log . i ( java.lang.String , STRING + int + STRING + int + STRING + int + STRING + int + STRING + int + STRING + int + STRING ) ; } Log . i ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> private int int ( final EGLConfig jp.co.cyberagent.android.gpuimage.EGLConfig , final int int ) { int [] int[] = new int [ NUMBER ] ; return jp.co.cyberagent.android.gpuimage.EGL10 . eglGetConfigAttrib ( jp.co.cyberagent.android.gpuimage.EGLDisplay , jp.co.cyberagent.android.gpuimage.EGLConfig , int , int[] ) ? int[] [ NUMBER ] : NUMBER ; }  <METHOD_END>
<METHOD_START> private void void ( ) { int [] int[] = new int [ int * int ] ; java.nio.IntBuffer java.nio.IntBuffer = java.nio.IntBuffer . java.nio.IntBuffer ( int * int ) ; jp.co.cyberagent.android.gpuimage.GL10 . glReadPixels ( NUMBER , NUMBER , int , int , GL_RGBA , GL_UNSIGNED_BYTE , java.nio.IntBuffer ) ; int [] int[] = java.nio.IntBuffer . int[] ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { for ( int int = NUMBER ; int < int ; int ++ ) { int[] [ ( int - int - NUMBER ) * int + int ] = int[] [ int * int + int ] ; } } jp.co.cyberagent.android.gpuimage.Bitmap = Bitmap . createBitmap ( int , int , Bitmap . Config . ARGB_8888 ) ; jp.co.cyberagent.android.gpuimage.Bitmap . copyPixelsFromBuffer ( java.nio.IntBuffer . java.nio.IntBuffer ( int[] ) ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { switch ( this ) { case jp.co.cyberagent.android.gpuimage.Rotation : return NUMBER ; case jp.co.cyberagent.android.gpuimage.Rotation : return NUMBER ; case jp.co.cyberagent.android.gpuimage.Rotation : return NUMBER ; case jp.co.cyberagent.android.gpuimage.Rotation : return NUMBER ; default: throw new java.lang.IllegalStateException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public static jp.co.cyberagent.android.gpuimage.Rotation jp.co.cyberagent.android.gpuimage.Rotation ( int int ) { switch ( int ) { case NUMBER : return jp.co.cyberagent.android.gpuimage.Rotation ; case NUMBER : return jp.co.cyberagent.android.gpuimage.Rotation ; case NUMBER : return jp.co.cyberagent.android.gpuimage.Rotation ; case NUMBER : return jp.co.cyberagent.android.gpuimage.Rotation ; case NUMBER : return jp.co.cyberagent.android.gpuimage.Rotation ; default: throw new java.lang.IllegalStateException ( int + STRING ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {    }  <METHOD_END>
<METHOD_START> public static float [] float[] ( final Rotation jp.co.cyberagent.android.gpuimage.util.Rotation , final boolean boolean , final boolean boolean ) { float [] float[] ; switch ( jp.co.cyberagent.android.gpuimage.util.Rotation ) { case ROTATION_90 : float[] = float[] ; break; case ROTATION_180 : float[] = float[] ; break; case ROTATION_270 : float[] = float[] ; break; case NORMAL : default: float[] = float[] ; break; } if ( boolean ) { float[] = new float [] { float ( float[] [ NUMBER ] ) , float[] [ NUMBER ] , float ( float[] [ NUMBER ] ) , float[] [ NUMBER ] , float ( float[] [ NUMBER ] ) , float[] [ NUMBER ] , float ( float[] [ NUMBER ] ) , float[] [ NUMBER ] ,            } ; } if ( boolean ) { float[] = new float [] { float[] [ NUMBER ] , float ( float[] [ NUMBER ] ) , float[] [ NUMBER ] , float ( float[] [ NUMBER ] ) , float[] [ NUMBER ] , float ( float[] [ NUMBER ] ) , float[] [ NUMBER ] , float ( float[] [ NUMBER ] ) ,            } ; } return float[] ; }  <METHOD_END>
<METHOD_START> private static float float ( final float float ) { if ( float == NUMBER ) { return NUMBER ; } return NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Bundle jp.co.cyberagent.android.gpuimage.sample.activity.Bundle ) { super. onCreate ( jp.co.cyberagent.android.gpuimage.sample.activity.Bundle ) ; setContentView ( R . layout . activity_camera ) ; ( ( SeekBar ) findViewById ( R . id . seekBar ) ) . setOnSeekBarChangeListener ( this ) ; findViewById ( R . id . button_choose_filter ) . setOnClickListener ( this ) ; findViewById ( R . id . button_capture ) . setOnClickListener ( this ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImage = new GPUImage ( this ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImage . setGLSurfaceView ( ( GLSurfaceView ) findViewById ( R . id . surfaceView ) ) ; jp.co.cyberagent.android.gpuimage.sample.activity.CameraHelper = new CameraHelper ( this ) ; jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader = new jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader ( ) ; View jp.co.cyberagent.android.gpuimage.sample.activity.View = findViewById ( R . id . img_switch_camera ) ; jp.co.cyberagent.android.gpuimage.sample.activity.View . setOnClickListener ( this ) ; if ( ! jp.co.cyberagent.android.gpuimage.sample.activity.CameraHelper . hasFrontCamera ( ) || ! jp.co.cyberagent.android.gpuimage.sample.activity.CameraHelper . hasBackCamera ( ) ) { jp.co.cyberagent.android.gpuimage.sample.activity.View . setVisibility ( View . GONE ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onResume ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader . void ( ) ; super. onPause ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final View jp.co.cyberagent.android.gpuimage.sample.activity.View ) { switch ( jp.co.cyberagent.android.gpuimage.sample.activity.View . getId ( ) ) { case R . id . button_choose_filter : GPUImageFilterTools . showDialog ( this , new OnGpuImageFilterChosenListener ( ) { @ java.lang.Override public void void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) { void ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) ; } } ) ; break; case R . id . button_capture : if ( jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader . jp.co.cyberagent.android.gpuimage.sample.activity.Camera . getParameters ( ) . getFocusMode ( ) . equals ( Parameters . FOCUS_MODE_CONTINUOUS_PICTURE ) ) { void ( ) ; } else { jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader . jp.co.cyberagent.android.gpuimage.sample.activity.Camera . autoFocus ( new Camera . Camera ( ) { @ java.lang.Override public void void ( final boolean boolean , final Camera jp.co.cyberagent.android.gpuimage.sample.activity.Camera ) { void ( ) ; } } ) ; } break; case R . id . img_switch_camera : jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader . void ( ) ; break; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) { void ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final boolean boolean , final Camera jp.co.cyberagent.android.gpuimage.sample.activity.Camera ) { void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { Camera . Camera Camera.Parameters = jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader . jp.co.cyberagent.android.gpuimage.sample.activity.Camera . getParameters ( ) ; Camera.Parameters . setRotation ( NUMBER ) ; jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader . jp.co.cyberagent.android.gpuimage.sample.activity.Camera . setParameters ( Camera.Parameters ) ; for ( Camera . Camera Camera.Size : Camera.Parameters . getSupportedPictureSizes ( ) ) { Log . i ( STRING , STRING + size . width + STRING + size . height ) ; } jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera.CameraLoader . jp.co.cyberagent.android.gpuimage.sample.activity.Camera . takePicture ( null , null , new Camera . Camera ( ) { @ java.lang.Override public void void ( byte [] byte[] , final Camera jp.co.cyberagent.android.gpuimage.sample.activity.Camera ) { final java.io.File java.io.File = java.io.File ( int ) ; if ( java.io.File == null ) { Log . d ( STRING , STRING ) ; return; } try { java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream ( java.io.File ) ; java.io.FileOutputStream . void ( byte[] ) ; java.io.FileOutputStream . void ( ) ; } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { Log . d ( STRING , STRING + java.io.FileNotFoundException . java.lang.String ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { Log . d ( STRING , STRING + java.io.IOException . java.lang.String ( ) ) ; } byte[] = null ; Bitmap jp.co.cyberagent.android.gpuimage.sample.activity.Bitmap = BitmapFactory . decodeFile ( java.io.File . java.lang.String ( ) ) ; final GLSurfaceView jp.co.cyberagent.android.gpuimage.sample.activity.GLSurfaceView = ( GLSurfaceView ) findViewById ( R . id . surfaceView ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GLSurfaceView . setRenderMode ( GLSurfaceView . RENDERMODE_WHEN_DIRTY ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImage . saveToPictures ( jp.co.cyberagent.android.gpuimage.sample.activity.Bitmap , STRING , java.lang.System . long ( ) + STRING , new OnPictureSavedListener ( ) { @ java.lang.Override public void void ( final Uri jp.co.cyberagent.android.gpuimage.sample.activity.Uri ) { java.io.File . boolean ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.Camera . startPreview ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GLSurfaceView . setRenderMode ( GLSurfaceView . RENDERMODE_CONTINUOUSLY ) ; } } ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( byte [] byte[] , final Camera jp.co.cyberagent.android.gpuimage.sample.activity.Camera ) { final java.io.File java.io.File = java.io.File ( int ) ; if ( java.io.File == null ) { Log . d ( STRING , STRING ) ; return; } try { java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream ( java.io.File ) ; java.io.FileOutputStream . void ( byte[] ) ; java.io.FileOutputStream . void ( ) ; } catch ( java.io.FileNotFoundException java.io.FileNotFoundException ) { Log . d ( STRING , STRING + java.io.FileNotFoundException . java.lang.String ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { Log . d ( STRING , STRING + java.io.IOException . java.lang.String ( ) ) ; } byte[] = null ; Bitmap jp.co.cyberagent.android.gpuimage.sample.activity.Bitmap = BitmapFactory . decodeFile ( java.io.File . java.lang.String ( ) ) ; final GLSurfaceView jp.co.cyberagent.android.gpuimage.sample.activity.GLSurfaceView = ( GLSurfaceView ) findViewById ( R . id . surfaceView ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GLSurfaceView . setRenderMode ( GLSurfaceView . RENDERMODE_WHEN_DIRTY ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImage . saveToPictures ( jp.co.cyberagent.android.gpuimage.sample.activity.Bitmap , STRING , java.lang.System . long ( ) + STRING , new OnPictureSavedListener ( ) { @ java.lang.Override public void void ( final Uri jp.co.cyberagent.android.gpuimage.sample.activity.Uri ) { java.io.File . boolean ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.Camera . startPreview ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GLSurfaceView . setRenderMode ( GLSurfaceView . RENDERMODE_CONTINUOUSLY ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Uri jp.co.cyberagent.android.gpuimage.sample.activity.Uri ) { java.io.File . boolean ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.Camera . startPreview ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GLSurfaceView . setRenderMode ( GLSurfaceView . RENDERMODE_CONTINUOUSLY ) ; }  <METHOD_END>
<METHOD_START> private static java.io.File java.io.File ( final int int ) { java.io.File java.io.File = new java.io.File ( Environment . getExternalStoragePublicDirectory ( Environment . DIRECTORY_PICTURES ) , STRING ) ; if ( ! java.io.File . boolean ( ) ) { if ( ! java.io.File . boolean ( ) ) { Log . d ( STRING , STRING ) ; return null ; } } java.lang.String java.lang.String = new java.text.SimpleDateFormat ( STRING ) . java.lang.String ( new java.util.Date ( ) ) ; java.io.File java.io.File ; if ( int == int ) { java.io.File = new java.io.File ( java.io.File . java.lang.String ( ) + java.io.File . java.lang.String + STRING + java.lang.String + STRING ) ; } else if ( int == int ) { java.io.File = new java.io.File ( java.io.File . java.lang.String ( ) + java.io.File . java.lang.String + STRING + java.lang.String + STRING ) ; } else { return null ; } return java.io.File ; }  <METHOD_END>
<METHOD_START> private void void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) { if ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter == null || ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter != null && ! jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter . getClass ( ) . equals ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter . getClass ( ) ) ) ) { jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter = jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImage . setFilter ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) ; jp.co.cyberagent.android.gpuimage.sample.activity.FilterAdjuster = new FilterAdjuster ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final SeekBar jp.co.cyberagent.android.gpuimage.sample.activity.SeekBar , final int int , final boolean boolean ) { if ( jp.co.cyberagent.android.gpuimage.sample.activity.FilterAdjuster != null ) { jp.co.cyberagent.android.gpuimage.sample.activity.FilterAdjuster . adjust ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final SeekBar jp.co.cyberagent.android.gpuimage.sample.activity.SeekBar ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final SeekBar jp.co.cyberagent.android.gpuimage.sample.activity.SeekBar ) {    }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( ) ; int = ( int + NUMBER ) % jp.co.cyberagent.android.gpuimage.sample.activity.CameraHelper . getNumberOfCameras ( ) ; void ( int ) ; }  <METHOD_END>
<METHOD_START> private void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.activity.Camera = jp.co.cyberagent.android.gpuimage.sample.activity.Camera ( int ) ; Parameters jp.co.cyberagent.android.gpuimage.sample.activity.Parameters = jp.co.cyberagent.android.gpuimage.sample.activity.Camera . getParameters ( ) ; if ( jp.co.cyberagent.android.gpuimage.sample.activity.Parameters . getSupportedFocusModes ( ) . contains ( Camera . Parameters . FOCUS_MODE_CONTINUOUS_PICTURE ) ) { jp.co.cyberagent.android.gpuimage.sample.activity.Parameters . setFocusMode ( Parameters . FOCUS_MODE_CONTINUOUS_PICTURE ) ; } jp.co.cyberagent.android.gpuimage.sample.activity.Camera . setParameters ( jp.co.cyberagent.android.gpuimage.sample.activity.Parameters ) ; int int = jp.co.cyberagent.android.gpuimage.sample.activity.CameraHelper . getCameraDisplayOrientation ( jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera .this , int ) ; CameraInfo2 jp.co.cyberagent.android.gpuimage.sample.activity.CameraInfo2 = new CameraInfo2 ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.CameraHelper . getCameraInfo ( int , jp.co.cyberagent.android.gpuimage.sample.activity.CameraInfo2 ) ; boolean boolean = cameraInfo . facing == CameraInfo . CAMERA_FACING_FRONT ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImage . setUpCamera ( jp.co.cyberagent.android.gpuimage.sample.activity.Camera , int , boolean , false ) ; }  <METHOD_END>
<METHOD_START> private jp.co.cyberagent.android.gpuimage.sample.activity.Camera jp.co.cyberagent.android.gpuimage.sample.activity.Camera ( final int int ) { Camera jp.co.cyberagent.android.gpuimage.sample.activity.Camera = null ; try { jp.co.cyberagent.android.gpuimage.sample.activity.Camera = jp.co.cyberagent.android.gpuimage.sample.activity.CameraHelper . openCamera ( int ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } return jp.co.cyberagent.android.gpuimage.sample.activity.Camera ; }  <METHOD_END>
<METHOD_START> private void void ( ) { jp.co.cyberagent.android.gpuimage.sample.activity.Camera . setPreviewCallback ( null ) ; jp.co.cyberagent.android.gpuimage.sample.activity.Camera . release ( ) ; jp.co.cyberagent.android.gpuimage.sample.activity.Camera = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Bundle jp.co.cyberagent.android.gpuimage.sample.activity.Bundle ) { super. onCreate ( jp.co.cyberagent.android.gpuimage.sample.activity.Bundle ) ; setContentView ( R . layout . activity_gallery ) ; ( ( SeekBar ) findViewById ( R . id . seekBar ) ) . setOnSeekBarChangeListener ( this ) ; findViewById ( R . id . button_choose_filter ) . setOnClickListener ( this ) ; findViewById ( R . id . button_save ) . setOnClickListener ( this ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageView = ( GPUImageView ) findViewById ( R . id . gpuimage ) ; Intent jp.co.cyberagent.android.gpuimage.sample.activity.Intent = new Intent ( Intent . ACTION_PICK ) ; jp.co.cyberagent.android.gpuimage.sample.activity.Intent . setType ( STRING ) ; startActivityForResult ( jp.co.cyberagent.android.gpuimage.sample.activity.Intent , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( final int int , final int int , final Intent jp.co.cyberagent.android.gpuimage.sample.activity.Intent ) { switch ( int ) { case int : if ( int == RESULT_OK ) { void ( jp.co.cyberagent.android.gpuimage.sample.activity.Intent . getData ( ) ) ; } else { finish ( ) ; } break; default: super. onActivityResult ( int , int , jp.co.cyberagent.android.gpuimage.sample.activity.Intent ) ; break; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final View jp.co.cyberagent.android.gpuimage.sample.activity.View ) { switch ( jp.co.cyberagent.android.gpuimage.sample.activity.View . getId ( ) ) { case R . id . button_choose_filter : GPUImageFilterTools . showDialog ( this , new OnGpuImageFilterChosenListener ( ) { @ java.lang.Override public void void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) { void ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageView . requestRender ( ) ; } } ) ; break; case R . id . button_save : void ( ) ; break; default: break; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) { void ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageView . requestRender ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Uri jp.co.cyberagent.android.gpuimage.sample.activity.Uri ) { Toast . makeText ( this , STRING + jp.co.cyberagent.android.gpuimage.sample.activity.Uri . toString ( ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.String java.lang.String = java.lang.System . long ( ) + STRING ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageView . saveToPictures ( STRING , java.lang.String , this ) ; }  <METHOD_END>
<METHOD_START> private void void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) { if ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter == null || ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter != null && ! jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter . getClass ( ) . equals ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter . getClass ( ) ) ) ) { jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter = jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ; jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageView . setFilter ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) ; jp.co.cyberagent.android.gpuimage.sample.activity.FilterAdjuster = new FilterAdjuster ( jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageFilter ) ; findViewById ( R . id . seekBar ) . setVisibility ( jp.co.cyberagent.android.gpuimage.sample.activity.FilterAdjuster . canAdjust ( ) ? View . VISIBLE : View . GONE ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final SeekBar jp.co.cyberagent.android.gpuimage.sample.activity.SeekBar , final int int , final boolean boolean ) { if ( jp.co.cyberagent.android.gpuimage.sample.activity.FilterAdjuster != null ) { jp.co.cyberagent.android.gpuimage.sample.activity.FilterAdjuster . adjust ( int ) ; } jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageView . requestRender ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final SeekBar jp.co.cyberagent.android.gpuimage.sample.activity.SeekBar ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final SeekBar jp.co.cyberagent.android.gpuimage.sample.activity.SeekBar ) {    }  <METHOD_END>
<METHOD_START> private void void ( final Uri jp.co.cyberagent.android.gpuimage.sample.activity.Uri ) { jp.co.cyberagent.android.gpuimage.sample.activity.GPUImageView . setImage ( jp.co.cyberagent.android.gpuimage.sample.activity.Uri ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Bundle jp.co.cyberagent.android.gpuimage.sample.activity.Bundle ) { super. onCreate ( jp.co.cyberagent.android.gpuimage.sample.activity.Bundle ) ; setContentView ( R . layout . activity_main ) ; findViewById ( R . id . button_gallery ) . setOnClickListener ( this ) ; findViewById ( R . id . button_camera ) . setOnClickListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final View jp.co.cyberagent.android.gpuimage.sample.activity.View ) { if ( PermissionChecker . checkSelfPermission ( this , Manifest . permission . CAMERA ) == PackageManager . PERMISSION_DENIED ) { ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest . permission . CAMERA } , jp.co.cyberagent.android.gpuimage.sample.activity.View . getId ( ) ) ; } else { void ( jp.co.cyberagent.android.gpuimage.sample.activity.View . getId ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , java.lang.String [] java.lang.String[] , int [] int[] ) { if ( int[] . int != NUMBER || int[] [ NUMBER ] == PackageManager . PERMISSION_GRANTED ) { void ( int ) ; } else { super. onRequestPermissionsResult ( int , java.lang.String[] , int[] ) ; } }  <METHOD_END>
<METHOD_START> private void void ( int int ) { switch ( int ) { case R . id . button_gallery : void ( new Intent ( this , ActivityGallery .class ) ) ; break; case R . id . button_camera : void ( new Intent ( this , ActivityCamera .class ) ) ; break; default: break; } }  <METHOD_END>
<METHOD_START> public static void void ( final Context jp.co.cyberagent.android.gpuimage.sample.Context , final jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.OnGpuImageFilterChosenListener jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.OnGpuImageFilterChosenListener ) { final jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList ( ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . void ( STRING , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( jp.co.cyberagent.android.gpuimage.sample.Context ) ; AlertDialog.Builder . setTitle ( STRING ) ; AlertDialog.Builder . setItems ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . java.util.List<java.lang.String> . int ( ) ] ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( final DialogInterface jp.co.cyberagent.android.gpuimage.sample.DialogInterface , final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.OnGpuImageFilterChosenListener . void ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType> . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ( int ) ) ) ; } } ) ; AlertDialog.Builder . create ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final DialogInterface jp.co.cyberagent.android.gpuimage.sample.DialogInterface , final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.OnGpuImageFilterChosenListener . void ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterList . java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType> . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> private static jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( final Context jp.co.cyberagent.android.gpuimage.sample.Context , final jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) { switch ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) { case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageContrastFilter ( NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageGammaFilter ( NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageColorInvertFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImagePixelationFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageHueFilter ( NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageBrightnessFilter ( NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageGrayscaleFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageSepiaFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : GPUImageSharpenFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageSharpenFilter = new GPUImageSharpenFilter ( ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageSharpenFilter . setSharpness ( NUMBER ) ; return jp.co.cyberagent.android.gpuimage.sample.GPUImageSharpenFilter ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageSobelEdgeDetection ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : GPUImage3x3ConvolutionFilter jp.co.cyberagent.android.gpuimage.sample.GPUImage3x3ConvolutionFilter = new GPUImage3x3ConvolutionFilter ( ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImage3x3ConvolutionFilter . setConvolutionKernel ( new float [] { - NUMBER , NUMBER , NUMBER , - NUMBER , NUMBER , NUMBER , - NUMBER , NUMBER , NUMBER } ) ; return jp.co.cyberagent.android.gpuimage.sample.GPUImage3x3ConvolutionFilter ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageEmbossFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImagePosterizeFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> < GPUImageFilter > java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new java.util.LinkedList<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> < GPUImageFilter > ( ) ; java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> . add ( new GPUImageContrastFilter ( ) ) ; java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> . add ( new GPUImageDirectionalSobelEdgeDetectionFilter ( ) ) ; java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> . add ( new GPUImageGrayscaleFilter ( ) ) ; return new GPUImageFilterGroup ( java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageSaturationFilter ( NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageExposureFilter ( NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageHighlightShadowFilter ( NUMBER , NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageMonochromeFilter ( NUMBER , new float [] { NUMBER , NUMBER , NUMBER , NUMBER } ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageOpacityFilter ( NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageRGBFilter ( NUMBER , NUMBER , NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageWhiteBalanceFilter ( NUMBER , NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : PointF jp.co.cyberagent.android.gpuimage.sample.PointF = new PointF ( ) ; centerPoint . x = NUMBER ; centerPoint . y = NUMBER ; return new GPUImageVignetteFilter ( jp.co.cyberagent.android.gpuimage.sample.PointF , new float [] { NUMBER , NUMBER , NUMBER } , NUMBER , NUMBER ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : GPUImageToneCurveFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageToneCurveFilter = new GPUImageToneCurveFilter ( ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageToneCurveFilter . setFromCurveFileInputStream ( jp.co.cyberagent.android.gpuimage.sample.Context . getResources ( ) . openRawResource ( R . raw . tone_cuver_sample ) ) ; return jp.co.cyberagent.android.gpuimage.sample.GPUImageToneCurveFilter ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageDifferenceBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageSourceOverBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageColorBurnBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageColorDodgeBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageDarkenBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageDissolveBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageExclusionBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageHardLightBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageLightenBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageAddBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageDivideBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageMultiplyBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageOverlayBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageScreenBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageAlphaBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageColorBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageHueBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageSaturationBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageLuminosityBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageLinearBurnBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageSoftLightBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageSubtractBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageChromaKeyBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( jp.co.cyberagent.android.gpuimage.sample.Context , GPUImageNormalBlendFilter .class ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : GPUImageLookupFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageLookupFilter = new GPUImageLookupFilter ( ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageLookupFilter . setBitmap ( BitmapFactory . decodeResource ( jp.co.cyberagent.android.gpuimage.sample.Context . getResources ( ) , R . drawable . lookup_amatorka ) ) ; return jp.co.cyberagent.android.gpuimage.sample.GPUImageLookupFilter ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageGaussianBlurFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageCrosshatchFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageBoxBlurFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageCGAColorspaceFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageDilationFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageKuwaharaFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageRGBDilationFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageSketchFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageToonFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageSmoothToonFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageBulgeDistortionFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageGlassSphereFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageHazeFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageLaplacianFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageNonMaximumSuppressionFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageSphereRefractionFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageSwirlFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageWeakPixelInclusionFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageFalseColorFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageColorBalanceFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : GPUImageLevelsFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageLevelsFilter = new GPUImageLevelsFilter ( ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageLevelsFilter . setMin ( NUMBER , NUMBER , NUMBER ) ; return jp.co.cyberagent.android.gpuimage.sample.GPUImageLevelsFilter ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageHalftoneFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageBilateralFilter ( ) ; case jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType : return new GPUImageTransformFilter ( ) ; default: throw new java.lang.IllegalStateException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> private static jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ( Context jp.co.cyberagent.android.gpuimage.sample.Context , java.lang.Class<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageTwoInputFilter> < ? extends GPUImageTwoInputFilter > java.lang.Class<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageTwoInputFilter> ) { try { GPUImageTwoInputFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageTwoInputFilter = java.lang.Class<> . newInstance ( ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageTwoInputFilter . setBitmap ( BitmapFactory . decodeResource ( jp.co.cyberagent.android.gpuimage.sample.Context . getResources ( ) , R . drawable . ic_launcher ) ) ; return jp.co.cyberagent.android.gpuimage.sample.GPUImageTwoInputFilter ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; return null ; } }  <METHOD_END>
<METHOD_START> void void ( GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter );  <METHOD_END>
<METHOD_START> public void void ( final java.lang.String java.lang.String , final jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; java.util.List<jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType> . boolean ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterType ) ; }  <METHOD_END>
<METHOD_START> public void ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) { if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageSharpenFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.SharpnessAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageSharpenFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageSepiaFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.SepiaAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageSepiaFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageContrastFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.ContrastAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageContrastFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageGammaFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.GammaAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageGammaFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageBrightnessFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.BrightnessAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageBrightnessFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageSobelEdgeDetection ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.SobelAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageSobelEdgeDetection> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageEmbossFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.EmbossAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageEmbossFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImage3x3TextureSamplingFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.GPU3x3TextureAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImage3x3TextureSamplingFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageHueFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.HueAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageHueFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImagePosterizeFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.PosterizeAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImagePosterizeFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImagePixelationFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.PixelationAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImagePixelationFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageSaturationFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.SaturationAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageSaturationFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageExposureFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.ExposureAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageExposureFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageHighlightShadowFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.HighlightShadowAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageHighlightShadowFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageMonochromeFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.MonochromeAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageMonochromeFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageOpacityFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.OpacityAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageOpacityFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageRGBFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.RGBAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageRGBFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageWhiteBalanceFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.WhiteBalanceAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageWhiteBalanceFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageVignetteFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.VignetteAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageVignetteFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageDissolveBlendFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.DissolveBlendAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageDissolveBlendFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageGaussianBlurFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.GaussianBlurAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageGaussianBlurFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageCrosshatchFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.CrosshatchBlurAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageCrosshatchFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageBulgeDistortionFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.BulgeDistortionAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageBulgeDistortionFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageGlassSphereFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.GlassSphereAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageGlassSphereFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageHazeFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.HazeAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageHazeFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageSphereRefractionFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.SphereRefractionAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageSphereRefractionFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageSwirlFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.SwirlAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageSwirlFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageColorBalanceFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.ColorBalanceAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageColorBalanceFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageLevelsFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.LevelsMinMidAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageLevelsFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageBilateralFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.BilateralAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageBilateralFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter instanceof GPUImageTransformFilter ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = new jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.RotateAdjuster ( ) . jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<jp.co.cyberagent.android.gpuimage.sample.GPUImageTransformFilter> ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) ; } else { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<? extends jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter> = null ; } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<> != null ; }  <METHOD_END>
<METHOD_START> public void void ( final int int ) { if ( jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<> != null ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<> . void ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) public jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<T> < T > jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster.Adjuster<T> ( final GPUImageFilter jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ) { this . T = ( T ) jp.co.cyberagent.android.gpuimage.sample.GPUImageFilter ; return this ; }  <METHOD_END>
<METHOD_START> public T T ( ) { return T ; }  <METHOD_END>
<METHOD_START> public abstract void void ( int int );  <METHOD_END>
<METHOD_START> protected float float ( final int int , final float float , final float float ) { return ( float - float ) * int / NUMBER + float ; }  <METHOD_END>
<METHOD_START> protected int int ( final int int , final int int , final int int ) { return ( int - int ) * int / NUMBER + int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageSharpenFilter ( ) . setSharpness ( float ( int , - NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImagePixelationFilter ( ) . setPixel ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageHueFilter ( ) . setHue ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageContrastFilter ( ) . setContrast ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageGammaFilter ( ) . setGamma ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageBrightnessFilter ( ) . setBrightness ( float ( int , - NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageSepiaFilter ( ) . setIntensity ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageSobelEdgeDetection ( ) . setLineSize ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageEmbossFilter ( ) . setIntensity ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImagePosterizeFilter ( ) . setColorLevels ( int ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImage3x3TextureSamplingFilter ( ) . setLineSize ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageSaturationFilter ( ) . setSaturation ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageExposureFilter ( ) . setExposure ( float ( int , - NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageHighlightShadowFilter ( ) . setShadows ( float ( int , NUMBER , NUMBER ) ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageHighlightShadowFilter ( ) . setHighlights ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageMonochromeFilter ( ) . setIntensity ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageOpacityFilter ( ) . setOpacity ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageRGBFilter ( ) . setRed ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageWhiteBalanceFilter ( ) . setTemperature ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageVignetteFilter ( ) . setVignetteStart ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageDissolveBlendFilter ( ) . setMix ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageGaussianBlurFilter ( ) . setBlurSize ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageCrosshatchFilter ( ) . setCrossHatchSpacing ( float ( int , NUMBER , NUMBER ) ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageCrosshatchFilter ( ) . setLineWidth ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageBulgeDistortionFilter ( ) . setRadius ( float ( int , NUMBER , NUMBER ) ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageBulgeDistortionFilter ( ) . setScale ( float ( int , - NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageGlassSphereFilter ( ) . setRadius ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageHazeFilter ( ) . setDistance ( float ( int , - NUMBER , NUMBER ) ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageHazeFilter ( ) . setSlope ( float ( int , - NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageSphereRefractionFilter ( ) . setRadius ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageSwirlFilter ( ) . setAngle ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageColorBalanceFilter ( ) . setMidtones ( new float [] { float ( int , NUMBER , NUMBER ) , float ( int / NUMBER , NUMBER , NUMBER ) , float ( int / NUMBER , NUMBER , NUMBER ) } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageLevelsFilter ( ) . setMin ( NUMBER , float ( int , NUMBER , NUMBER ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { jp.co.cyberagent.android.gpuimage.sample.GPUImageBilateralFilter ( ) . setDistanceNormalizationFactor ( float ( int , NUMBER , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int ) { float [] float[] = new float [ NUMBER ] ; Matrix . setRotateM ( float[] , NUMBER , NUMBER * int / NUMBER , NUMBER , NUMBER , NUMBER ) ; jp.co.cyberagent.android.gpuimage.sample.GPUImageTransformFilter ( ) . setTransform3D ( float[] ) ; }  <METHOD_END>
<METHOD_START> public void ( final Context jp.co.cyberagent.android.gpuimage.sample.utils.Context ) { jp.co.cyberagent.android.gpuimage.sample.utils.Context = jp.co.cyberagent.android.gpuimage.sample.utils.Context ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return boolean ( ) ? NUMBER : NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( final int int ) { return Camera . open ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( ) { return Camera . open ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final int int ) { if ( int == CameraInfo . CAMERA_FACING_BACK ) { return boolean ( ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( final int int ) { if ( int == CameraInfo . CAMERA_FACING_BACK ) { return Camera . open ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final CameraInfo2 jp.co.cyberagent.android.gpuimage.sample.utils.CameraInfo2 ) { cameraInfo . facing = Camera . CameraInfo . CAMERA_FACING_BACK ; cameraInfo . orientation = NUMBER ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return jp.co.cyberagent.android.gpuimage.sample.utils.Context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return Camera . getNumberOfCameras ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( final int int ) { return Camera . open ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( ) { return Camera . open ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final int int ) { return int ( int ) != - NUMBER ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( final int int ) { return Camera . open ( int ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final int int , final CameraInfo2 jp.co.cyberagent.android.gpuimage.sample.utils.CameraInfo2 ) { CameraInfo jp.co.cyberagent.android.gpuimage.sample.utils.CameraInfo = new CameraInfo ( ) ; Camera . getCameraInfo ( int , jp.co.cyberagent.android.gpuimage.sample.utils.CameraInfo ) ; cameraInfo . facing = info . facing ; cameraInfo . orientation = info . orientation ; }  <METHOD_END>
<METHOD_START> private int int ( final int int ) { int int = Camera . getNumberOfCameras ( ) ; CameraInfo jp.co.cyberagent.android.gpuimage.sample.utils.CameraInfo = new CameraInfo ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { Camera . getCameraInfo ( int , jp.co.cyberagent.android.gpuimage.sample.utils.CameraInfo ) ; if ( info . facing == int ) { return int ; } } return - NUMBER ; }  <METHOD_END>
<METHOD_START> public void ( final Context jp.co.cyberagent.android.gpuimage.sample.utils.Context ) { if ( SDK_INT >= GINGERBREAD ) { jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl = new CameraHelperGB ( ) ; } else { jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl = new CameraHelperBase ( jp.co.cyberagent.android.gpuimage.sample.utils.Context ) ; } }  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( int int );  <METHOD_END>
<METHOD_START> jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( )  <METHOD_END>
<METHOD_START> jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( int int );  <METHOD_END>
<METHOD_START> boolean boolean ( int int );  <METHOD_END>
<METHOD_START> void void ( int int , jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 );  <METHOD_END>
<METHOD_START> public int int ( ) { return jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl . int ( ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( final int int ) { return jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl . jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( int ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( ) { return jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl . jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( ) { return jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl . jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( CameraInfo . CAMERA_FACING_FRONT ) ; }  <METHOD_END>
<METHOD_START> public jp.co.cyberagent.android.gpuimage.sample.utils.Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( ) { return jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl . jp.co.cyberagent.android.gpuimage.sample.utils.Camera ( CameraInfo . CAMERA_FACING_BACK ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl . boolean ( CameraInfo . CAMERA_FACING_FRONT ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl . boolean ( CameraInfo . CAMERA_FACING_BACK ) ; }  <METHOD_END>
<METHOD_START> public void void ( final int int , final jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 ) { jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraHelperImpl . void ( int , jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 ) ; }  <METHOD_END>
<METHOD_START> public void void ( final Activity jp.co.cyberagent.android.gpuimage.sample.utils.Activity , final int int , final Camera jp.co.cyberagent.android.gpuimage.sample.utils.Camera ) { int int = int ( jp.co.cyberagent.android.gpuimage.sample.utils.Activity , int ) ; jp.co.cyberagent.android.gpuimage.sample.utils.Camera . setDisplayOrientation ( int ) ; }  <METHOD_END>
<METHOD_START> public int int ( final Activity jp.co.cyberagent.android.gpuimage.sample.utils.Activity , final int int ) { int int = jp.co.cyberagent.android.gpuimage.sample.utils.Activity . getWindowManager ( ) . getDefaultDisplay ( ) . getRotation ( ) ; int int = NUMBER ; switch ( int ) { case Surface . ROTATION_0 : int = NUMBER ; break; case Surface . ROTATION_90 : int = NUMBER ; break; case Surface . ROTATION_180 : int = NUMBER ; break; case Surface . ROTATION_270 : int = NUMBER ; break; } int int ; jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 = new jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 ( ) ; void ( int , jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 ) ; if ( jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 . int == Camera . CameraInfo . CAMERA_FACING_FRONT ) { int = ( jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 . int + int ) % NUMBER ; } else { int = ( jp.co.cyberagent.android.gpuimage.sample.utils.CameraHelper.CameraInfo2 . int - int + NUMBER ) % NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.demo.View ) { View com.daimajia.slider.demo.View = com.daimajia.slider.demo.View . findViewById ( com . daimajia . slider . library . R . id . description_layout ) ; if( com.daimajia.slider.demo.View != null ) { com.daimajia.slider.demo.View . findViewById ( com . daimajia . slider . library . R . id . description_layout ) . setVisibility ( View . INVISIBLE ) ; } Log . e ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.demo.View ) { View com.daimajia.slider.demo.View = com.daimajia.slider.demo.View . findViewById ( com . daimajia . slider . library . R . id . description_layout ) ; if( com.daimajia.slider.demo.View != null ) { com.daimajia.slider.demo.View . findViewById ( com . daimajia . slider . library . R . id . description_layout ) . setVisibility ( View . INVISIBLE ) ; } Log . e ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.demo.View ) { Log . e ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.demo.View ) { View com.daimajia.slider.demo.View = com.daimajia.slider.demo.View . findViewById ( com . daimajia . slider . library . R . id . description_layout ) ; if( com.daimajia.slider.demo.View != null ) { com.daimajia.slider.demo.View . findViewById ( com . daimajia . slider . library . R . id . description_layout ) . setVisibility ( View . VISIBLE ) ; new StandUpAnimator ( ) . animate ( com.daimajia.slider.demo.View ) ; } Log . e ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.daimajia.slider.demo.Bundle ) { super. onCreate ( com.daimajia.slider.demo.Bundle ) ; setContentView ( R . layout . activity_main ) ; com.daimajia.slider.demo.SliderLayout = ( SliderLayout ) findViewById ( R . id . slider ) ; java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.HashMap<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) ; java.util.HashMap<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.HashMap<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.HashMap<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.HashMap<java.lang.String,java.lang.String> . java.lang.String ( STRING , STRING ) ; java.util.HashMap<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > java.util.HashMap<java.lang.String,java.lang.Integer> = new java.util.HashMap<java.lang.String,java.lang.Integer> < java.lang.String , java.lang.Integer > ( ) ; java.util.HashMap<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING , R . drawable . hannibal ) ; java.util.HashMap<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING , R . drawable . bigbang ) ; java.util.HashMap<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING , R . drawable . house ) ; java.util.HashMap<java.lang.String,java.lang.Integer> . java.lang.Integer ( STRING , R . drawable . game_of_thrones ) ; for( java.lang.String java.lang.String : java.util.HashMap<java.lang.String,java.lang.Integer> . java.util.Set<java.lang.String> ( ) ) { TextSliderView com.daimajia.slider.demo.TextSliderView = new TextSliderView ( this ) ; com.daimajia.slider.demo.TextSliderView . description ( java.lang.String ) . image ( java.util.HashMap<java.lang.String,java.lang.Integer> . java.lang.Integer ( java.lang.String ) ) . setScaleType ( BaseSliderView . ScaleType . Fit ) . setOnSliderClickListener ( this ) ; com.daimajia.slider.demo.TextSliderView . bundle ( new Bundle ( ) ) ; com.daimajia.slider.demo.TextSliderView . getBundle ( ) . putString ( STRING , java.lang.String ) ; com.daimajia.slider.demo.SliderLayout . addSlider ( com.daimajia.slider.demo.TextSliderView ) ; } com.daimajia.slider.demo.SliderLayout . setPresetTransformer ( SliderLayout . Transformer . Accordion ) ; com.daimajia.slider.demo.SliderLayout . setPresetIndicator ( SliderLayout . PresetIndicators . Center_Bottom ) ; com.daimajia.slider.demo.SliderLayout . setCustomAnimation ( new DescriptionAnimation ( ) ) ; com.daimajia.slider.demo.SliderLayout . setDuration ( NUMBER ) ; com.daimajia.slider.demo.SliderLayout . addOnPageChangeListener ( this ) ; ListView com.daimajia.slider.demo.ListView = ( ListView ) findViewById ( R . id . transformers ) ; com.daimajia.slider.demo.ListView . setAdapter ( new TransformerAdapter ( this ) ) ; com.daimajia.slider.demo.ListView . setOnItemClickListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( AdapterView < ? > com.daimajia.slider.demo.AdapterView<?> , View com.daimajia.slider.demo.View , int int , long long ) { com.daimajia.slider.demo.SliderLayout . setPresetTransformer ( ( ( TextView ) com.daimajia.slider.demo.View ) . getText ( ) . toString ( ) ) ; Toast . makeText ( com.daimajia.slider.demo.MainActivity .this , ( ( TextView ) com.daimajia.slider.demo.View ) . getText ( ) . toString ( ) , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > com.daimajia.slider.demo.AdapterView<?> , View com.daimajia.slider.demo.View , int int , long long ) { com.daimajia.slider.demo.SliderLayout . setPresetTransformer ( ( ( TextView ) com.daimajia.slider.demo.View ) . getText ( ) . toString ( ) ) ; Toast . makeText ( com.daimajia.slider.demo.MainActivity .this , ( ( TextView ) com.daimajia.slider.demo.View ) . getText ( ) . toString ( ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { com.daimajia.slider.demo.SliderLayout . stopAutoCycle ( ) ; super. onStop ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BaseSliderView com.daimajia.slider.demo.BaseSliderView ) { Toast . makeText ( this , com.daimajia.slider.demo.BaseSliderView . getBundle ( ) . get ( STRING ) + STRING , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Menu com.daimajia.slider.demo.Menu ) { MenuInflater com.daimajia.slider.demo.MenuInflater = getMenuInflater ( ) ; com.daimajia.slider.demo.MenuInflater . inflate ( R . menu . main , com.daimajia.slider.demo.Menu ) ; return super. onCreateOptionsMenu ( com.daimajia.slider.demo.Menu ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.daimajia.slider.demo.MenuItem ) { switch ( com.daimajia.slider.demo.MenuItem . getItemId ( ) ){ case R . id . action_custom_indicator : com.daimajia.slider.demo.SliderLayout . setCustomIndicator ( ( PagerIndicator ) findViewById ( R . id . custom_indicator ) ) ; break; case R . id . action_custom_child_animation : com.daimajia.slider.demo.SliderLayout . setCustomAnimation ( new ChildAnimationExample ( ) ) ; break; case R . id . action_restore_default : com.daimajia.slider.demo.SliderLayout . setPresetIndicator ( SliderLayout . PresetIndicators . Center_Bottom ) ; com.daimajia.slider.demo.SliderLayout . setCustomAnimation ( new DescriptionAnimation ( ) ) ; break; case R . id . action_github : Intent com.daimajia.slider.demo.Intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING ) ) ; startActivity ( com.daimajia.slider.demo.Intent ) ; break; } return super. onOptionsItemSelected ( com.daimajia.slider.demo.MenuItem ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , float float , int int ) {}  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { Log . d ( STRING , STRING + int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) {}  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.demo.Context ) { com.daimajia.slider.demo.Context = com.daimajia.slider.demo.Context ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return SliderLayout . Transformer . values ( ) . length ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( int int ) { return SliderLayout . Transformer . values ( ) [ int ] . toString ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( int int ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.daimajia.slider.demo.View com.daimajia.slider.demo.View ( int int , View com.daimajia.slider.demo.View , ViewGroup com.daimajia.slider.demo.ViewGroup ) { TextView com.daimajia.slider.demo.TextView = ( TextView ) LayoutInflater . from ( com.daimajia.slider.demo.Context ) . inflate ( R . layout . item , null ) ; com.daimajia.slider.demo.TextView . setText ( java.lang.Object ( int ) . java.lang.String ( ) ) ; return com.daimajia.slider.demo.TextView ; }  <METHOD_END>
<METHOD_START> public void void ( View com.daimajia.slider.library.Animations.View );  <METHOD_END>
<METHOD_START> public void void ( View com.daimajia.slider.library.Animations.View );  <METHOD_END>
<METHOD_START> public void void ( View com.daimajia.slider.library.Animations.View );  <METHOD_END>
<METHOD_START> public void void ( View com.daimajia.slider.library.Animations.View );  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Animations.View ) { View com.daimajia.slider.library.Animations.View = com.daimajia.slider.library.Animations.View . findViewById ( R . id . description_layout ) ; if( com.daimajia.slider.library.Animations.View != null ) { com.daimajia.slider.library.Animations.View . findViewById ( R . id . description_layout ) . setVisibility ( View . INVISIBLE ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Animations.View ) { View com.daimajia.slider.library.Animations.View = com.daimajia.slider.library.Animations.View . findViewById ( R . id . description_layout ) ; if( com.daimajia.slider.library.Animations.View != null ) { com.daimajia.slider.library.Animations.View . findViewById ( R . id . description_layout ) . setVisibility ( View . INVISIBLE ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Animations.View ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Animations.View ) { View com.daimajia.slider.library.Animations.View = com.daimajia.slider.library.Animations.View . findViewById ( R . id . description_layout ) ; if( com.daimajia.slider.library.Animations.View != null ) { float float = ViewHelper . getY ( com.daimajia.slider.library.Animations.View ) ; com.daimajia.slider.library.Animations.View . findViewById ( R . id . description_layout ) . setVisibility ( View . VISIBLE ) ; ValueAnimator com.daimajia.slider.library.Animations.ValueAnimator = ObjectAnimator . ofFloat ( com.daimajia.slider.library.Animations.View , STRING , float + com.daimajia.slider.library.Animations.View . getHeight ( ) , float ) . setDuration ( NUMBER ) ; com.daimajia.slider.library.Animations.ValueAnimator . start ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Indicators.Context ) { this( com.daimajia.slider.library.Indicators.Context , null ); }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Indicators.Context , AttributeSet com.daimajia.slider.library.Indicators.AttributeSet ) { super( com.daimajia.slider.library.Indicators.Context , com.daimajia.slider.library.Indicators.AttributeSet ); com.daimajia.slider.library.Indicators.Context = com.daimajia.slider.library.Indicators.Context ; final TypedArray com.daimajia.slider.library.Indicators.TypedArray = com.daimajia.slider.library.Indicators.Context . obtainStyledAttributes ( com.daimajia.slider.library.Indicators.AttributeSet , R . styleable . PagerIndicator , NUMBER , NUMBER ) ; int int = com.daimajia.slider.library.Indicators.TypedArray . getInt ( R . styleable . PagerIndicator_visibility , com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility . com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility . int ( ) ) ; for( com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility : com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility . com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility[] ( ) ) { if( com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility . int ( ) == int ) { com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility = com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility ; break; } } int int = com.daimajia.slider.library.Indicators.TypedArray . getInt ( R . styleable . PagerIndicator_shape , com.daimajia.slider.library.Indicators.PagerIndicator.Shape . com.daimajia.slider.library.Indicators.PagerIndicator.Shape . int ( ) ) ; for( com.daimajia.slider.library.Indicators.PagerIndicator.Shape com.daimajia.slider.library.Indicators.PagerIndicator.Shape : com.daimajia.slider.library.Indicators.PagerIndicator.Shape . com.daimajia.slider.library.Indicators.PagerIndicator.Shape[] ( ) ) { if( com.daimajia.slider.library.Indicators.PagerIndicator.Shape . int ( ) == int ) { com.daimajia.slider.library.Indicators.PagerIndicator.Shape = com.daimajia.slider.library.Indicators.PagerIndicator.Shape ; break; } } int = com.daimajia.slider.library.Indicators.TypedArray . getResourceId ( R . styleable . PagerIndicator_selected_drawable , NUMBER ) ; int = com.daimajia.slider.library.Indicators.TypedArray . getResourceId ( R . styleable . PagerIndicator_unselected_drawable , NUMBER ) ; int = com.daimajia.slider.library.Indicators.TypedArray . getColor ( R . styleable . PagerIndicator_selected_color , Color . rgb ( NUMBER , NUMBER , NUMBER ) ) ; int = com.daimajia.slider.library.Indicators.TypedArray . getColor ( R . styleable . PagerIndicator_unselected_color , Color . argb ( NUMBER , NUMBER , NUMBER , NUMBER ) ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimension ( R . styleable . PagerIndicator_selected_width , ( int ) float ( NUMBER ) ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_selected_height , ( int ) float ( NUMBER ) ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_unselected_width , ( int ) float ( NUMBER ) ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_unselected_height , ( int ) float ( NUMBER ) ) ; com.daimajia.slider.library.Indicators.GradientDrawable = new GradientDrawable ( ) ; com.daimajia.slider.library.Indicators.GradientDrawable = new GradientDrawable ( ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_padding_left , ( int ) float ( NUMBER ) ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_padding_right , ( int ) float ( NUMBER ) ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_padding_top , ( int ) float ( NUMBER ) ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_padding_bottom , ( int ) float ( NUMBER ) ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_selected_padding_left , ( int ) float ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_selected_padding_right , ( int ) float ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_selected_padding_top , ( int ) float ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_selected_padding_bottom , ( int ) float ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_unselected_padding_left , ( int ) float ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_unselected_padding_right , ( int ) float ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_unselected_padding_top , ( int ) float ) ; float = com.daimajia.slider.library.Indicators.TypedArray . getDimensionPixelSize ( R . styleable . PagerIndicator_unselected_padding_bottom , ( int ) float ) ; com.daimajia.slider.library.Indicators.LayerDrawable = new LayerDrawable ( new Drawable [] { com.daimajia.slider.library.Indicators.GradientDrawable } ) ; com.daimajia.slider.library.Indicators.LayerDrawable = new LayerDrawable ( new Drawable [] { com.daimajia.slider.library.Indicators.GradientDrawable } ) ; void ( int , int ) ; void ( com.daimajia.slider.library.Indicators.PagerIndicator.Shape ) ; void ( float , float , com.daimajia.slider.library.Indicators.PagerIndicator.Unit . com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) ; void ( float , float , com.daimajia.slider.library.Indicators.PagerIndicator.Unit . com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) ; void ( int , int ) ; void ( com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility ) ; com.daimajia.slider.library.Indicators.TypedArray . recycle ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.Indicators.PagerIndicator.Shape com.daimajia.slider.library.Indicators.PagerIndicator.Shape ) { if( int == NUMBER ) { if( com.daimajia.slider.library.Indicators.PagerIndicator.Shape == com.daimajia.slider.library.Indicators.PagerIndicator.Shape . com.daimajia.slider.library.Indicators.PagerIndicator.Shape ) { com.daimajia.slider.library.Indicators.GradientDrawable . setShape ( GradientDrawable . OVAL ) ; } else { com.daimajia.slider.library.Indicators.GradientDrawable . setShape ( GradientDrawable . RECTANGLE ) ; } } if( int == NUMBER ) { if( com.daimajia.slider.library.Indicators.PagerIndicator.Shape == com.daimajia.slider.library.Indicators.PagerIndicator.Shape . com.daimajia.slider.library.Indicators.PagerIndicator.Shape ) { com.daimajia.slider.library.Indicators.GradientDrawable . setShape ( GradientDrawable . OVAL ) ; } else { com.daimajia.slider.library.Indicators.GradientDrawable . setShape ( GradientDrawable . RECTANGLE ) ; } } void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int , int int ) { int = int ; int = int ; if( int == NUMBER ) { com.daimajia.slider.library.Indicators.Drawable = com.daimajia.slider.library.Indicators.LayerDrawable ; } else { com.daimajia.slider.library.Indicators.Drawable = com.daimajia.slider.library.Indicators.Context . getResources ( ) . getDrawable ( int ) ; } if( int == NUMBER ) { com.daimajia.slider.library.Indicators.Drawable = com.daimajia.slider.library.Indicators.LayerDrawable ; } else { com.daimajia.slider.library.Indicators.Drawable = com.daimajia.slider.library.Indicators.Context . getResources ( ) . getDrawable ( int ) ; } void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int , int int ) { if( int == NUMBER ) { com.daimajia.slider.library.Indicators.GradientDrawable . setColor ( int ) ; } if( int == NUMBER ) { com.daimajia.slider.library.Indicators.GradientDrawable . setColor ( int ) ; } void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , com.daimajia.slider.library.Indicators.PagerIndicator.Unit com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) { if( int == NUMBER ) { float float = float ; float float = float ; if( com.daimajia.slider.library.Indicators.PagerIndicator.Unit == com.daimajia.slider.library.Indicators.PagerIndicator.Unit . com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) { float = float ( float ) ; float = float ( float ) ; } com.daimajia.slider.library.Indicators.GradientDrawable . setSize ( ( int ) float , ( int ) float ) ; void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , com.daimajia.slider.library.Indicators.PagerIndicator.Unit com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) { if( int == NUMBER ) { float float = float ; float float = float ; if( com.daimajia.slider.library.Indicators.PagerIndicator.Unit == com.daimajia.slider.library.Indicators.PagerIndicator.Unit . com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) { float = float ( float ) ; float = float ( float ) ; } com.daimajia.slider.library.Indicators.GradientDrawable . setSize ( ( int ) float , ( int ) float ) ; void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( float float , float float , com.daimajia.slider.library.Indicators.PagerIndicator.Unit com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) { void ( float , float , com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) ; void ( float , float , com.daimajia.slider.library.Indicators.PagerIndicator.Unit ) ; }  <METHOD_END>
<METHOD_START> private float float ( float float ) { return float / this . getContext ( ) . getResources ( ) . getDisplayMetrics ( ) . density ; }  <METHOD_END>
<METHOD_START> private float float ( float float ) { return float * this . getContext ( ) . getResources ( ) . getDisplayMetrics ( ) . density ; }  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility ) { if( com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility == com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility . com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility ) { setVisibility ( View . VISIBLE ) ; } else { setVisibility ( View . INVISIBLE ) ; } void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if( com.daimajia.slider.library.Indicators.ViewPagerEx == null || com.daimajia.slider.library.Indicators.ViewPagerEx . getAdapter ( ) == null ) { return; } InfinitePagerAdapter com.daimajia.slider.library.Indicators.InfinitePagerAdapter = ( InfinitePagerAdapter ) com.daimajia.slider.library.Indicators.ViewPagerEx . getAdapter ( ) ; PagerAdapter com.daimajia.slider.library.Indicators.PagerAdapter = com.daimajia.slider.library.Indicators.InfinitePagerAdapter . getRealAdapter ( ) ; if( com.daimajia.slider.library.Indicators.PagerAdapter != null ) { com.daimajia.slider.library.Indicators.PagerAdapter . unregisterDataSetObserver ( com.daimajia.slider.library.Indicators.DataSetObserver ) ; } removeAllViews ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ViewPagerEx com.daimajia.slider.library.Indicators.ViewPagerEx ) { if( com.daimajia.slider.library.Indicators.ViewPagerEx . getAdapter ( ) == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } com.daimajia.slider.library.Indicators.ViewPagerEx = com.daimajia.slider.library.Indicators.ViewPagerEx ; com.daimajia.slider.library.Indicators.ViewPagerEx . addOnPageChangeListener ( this ) ; ( ( InfinitePagerAdapter ) com.daimajia.slider.library.Indicators.ViewPagerEx . getAdapter ( ) ) . getRealAdapter ( ) . registerDataSetObserver ( com.daimajia.slider.library.Indicators.DataSetObserver ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { for( View com.daimajia.slider.library.Indicators.View : java.util.ArrayList<com.daimajia.slider.library.Indicators.ImageView> ) { if( com.daimajia.slider.library.Indicators.ImageView != null && com.daimajia.slider.library.Indicators.ImageView . equals ( com.daimajia.slider.library.Indicators.View ) ) { ( ( ImageView ) com.daimajia.slider.library.Indicators.View ) . setImageDrawable ( com.daimajia.slider.library.Indicators.Drawable ) ; } else { ( ( ImageView ) com.daimajia.slider.library.Indicators.View ) . setImageDrawable ( com.daimajia.slider.library.Indicators.Drawable ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) { int = int ( ) ; com.daimajia.slider.library.Indicators.ImageView = null ; for( View com.daimajia.slider.library.Indicators.View : java.util.ArrayList<com.daimajia.slider.library.Indicators.ImageView> ) { removeView ( com.daimajia.slider.library.Indicators.View ) ; } for( int int = NUMBER ; int < int ; int ++ ) { ImageView com.daimajia.slider.library.Indicators.ImageView = new ImageView ( com.daimajia.slider.library.Indicators.Context ) ; com.daimajia.slider.library.Indicators.ImageView . setImageDrawable ( com.daimajia.slider.library.Indicators.Drawable ) ; com.daimajia.slider.library.Indicators.ImageView . setPadding ( ( int ) float , ( int ) float , ( int ) float , ( int ) float ) ; addView ( com.daimajia.slider.library.Indicators.ImageView ) ; java.util.ArrayList<com.daimajia.slider.library.Indicators.ImageView> . add ( com.daimajia.slider.library.Indicators.ImageView ) ; } void ( int ) ; }  <METHOD_END>
<METHOD_START> private int int ( ) { if( com.daimajia.slider.library.Indicators.ViewPagerEx . getAdapter ( ) instanceof InfinitePagerAdapter ) { return ( ( InfinitePagerAdapter ) com.daimajia.slider.library.Indicators.ViewPagerEx . getAdapter ( ) ) . getRealCount ( ) ; } else { return com.daimajia.slider.library.Indicators.ViewPagerEx . getAdapter ( ) . getCount ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { PagerAdapter com.daimajia.slider.library.Indicators.PagerAdapter = com.daimajia.slider.library.Indicators.ViewPagerEx . getAdapter ( ) ; int int = NUMBER ; if( com.daimajia.slider.library.Indicators.PagerAdapter instanceof InfinitePagerAdapter ) { int = ( ( InfinitePagerAdapter ) com.daimajia.slider.library.Indicators.PagerAdapter ) . getRealCount ( ) ; } else { int = com.daimajia.slider.library.Indicators.PagerAdapter . getCount ( ) ; } if( int > int ) { for( int int = NUMBER ; int < int - int ; int ++ ) { ImageView com.daimajia.slider.library.Indicators.ImageView = new ImageView ( com.daimajia.slider.library.Indicators.Context ) ; com.daimajia.slider.library.Indicators.ImageView . setImageDrawable ( com.daimajia.slider.library.Indicators.Drawable ) ; com.daimajia.slider.library.Indicators.ImageView . setPadding ( ( int ) float , ( int ) float , ( int ) float , ( int ) float ) ; addView ( com.daimajia.slider.library.Indicators.ImageView ) ; java.util.ArrayList<com.daimajia.slider.library.Indicators.ImageView> . add ( com.daimajia.slider.library.Indicators.ImageView ) ; } } else if( int < int ) { for( int int = NUMBER ; int < int - int ; int ++ ) { removeView ( java.util.ArrayList<com.daimajia.slider.library.Indicators.ImageView> . get ( NUMBER ) ) ; java.util.ArrayList<com.daimajia.slider.library.Indicators.ImageView> . remove ( NUMBER ) ; } } int = int ; com.daimajia.slider.library.Indicators.ViewPagerEx . setCurrentItem ( int * NUMBER + com.daimajia.slider.library.Indicators.ViewPagerEx . getCurrentItem ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onInvalidated ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { if( com.daimajia.slider.library.Indicators.ImageView != null ) { com.daimajia.slider.library.Indicators.ImageView . setImageDrawable ( com.daimajia.slider.library.Indicators.Drawable ) ; com.daimajia.slider.library.Indicators.ImageView . setPadding ( ( int ) float , ( int ) float , ( int ) float , ( int ) float ) ; } ImageView com.daimajia.slider.library.Indicators.ImageView = ( ImageView ) getChildAt ( int + NUMBER ) ; if( com.daimajia.slider.library.Indicators.ImageView != null ) { com.daimajia.slider.library.Indicators.ImageView . setImageDrawable ( com.daimajia.slider.library.Indicators.Drawable ) ; com.daimajia.slider.library.Indicators.ImageView . setPadding ( ( int ) float , ( int ) float , ( int ) float , ( int ) float ) ; com.daimajia.slider.library.Indicators.ImageView = com.daimajia.slider.library.Indicators.ImageView ; } int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , float float , int int ) {    }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility ( ) { return com.daimajia.slider.library.Indicators.PagerIndicator.IndicatorVisibility ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { if( int == NUMBER ) { return; } void ( int - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) {    }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Context ) { com.daimajia.slider.library.Context = com.daimajia.slider.library.Context ; java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> = new java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> < BaseSliderView > ( ) ; }  <METHOD_END>
<METHOD_START> public < T extends com.daimajia.slider.library.BaseSliderView > void void ( T T ) { T . setOnImageLoadListener ( this ) ; java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . add ( T ) ; notifyDataSetChanged ( ) ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.BaseSliderView com.daimajia.slider.library.BaseSliderView ( int int ) { if( int < NUMBER || int >= java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . size ( ) ) { return null ; } else { return java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . get ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object ) { return POSITION_NONE ; }  <METHOD_END>
<METHOD_START> public < T extends com.daimajia.slider.library.BaseSliderView > void void ( T T ) { if( java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . contains ( T ) ) { java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . remove ( T ) ; notifyDataSetChanged ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if( java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . size ( ) > int ) { java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . remove ( int ) ; notifyDataSetChanged ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . clear ( ) ; notifyDataSetChanged ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . size ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( View com.daimajia.slider.library.View , java.lang.Object java.lang.Object ) { return com.daimajia.slider.library.View == java.lang.Object ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ViewGroup com.daimajia.slider.library.ViewGroup , int int , java.lang.Object java.lang.Object ) { com.daimajia.slider.library.ViewGroup . removeView ( ( View ) java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ViewGroup com.daimajia.slider.library.ViewGroup , int int ) { BaseSliderView com.daimajia.slider.library.BaseSliderView = java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> . get ( int ) ; View com.daimajia.slider.library.View = com.daimajia.slider.library.BaseSliderView . getView ( ) ; com.daimajia.slider.library.ViewGroup . addView ( com.daimajia.slider.library.View ) ; return com.daimajia.slider.library.View ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( BaseSliderView com.daimajia.slider.library.BaseSliderView ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( boolean boolean , BaseSliderView com.daimajia.slider.library.BaseSliderView ) { if( com.daimajia.slider.library.BaseSliderView . isErrorDisappear ( ) == false || boolean == true ) { return; } for ( BaseSliderView com.daimajia.slider.library.BaseSliderView : java.util.ArrayList<com.daimajia.slider.library.BaseSliderView> ) { if( com.daimajia.slider.library.BaseSliderView . equals ( com.daimajia.slider.library.BaseSliderView ) ) { void ( com.daimajia.slider.library.BaseSliderView ) ; break; } } }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Context ) { this( com.daimajia.slider.library.Context , null ); }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Context , AttributeSet com.daimajia.slider.library.AttributeSet ) { this( com.daimajia.slider.library.Context , com.daimajia.slider.library.AttributeSet , R . attr . SliderStyle ); }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Context , AttributeSet com.daimajia.slider.library.AttributeSet , int int ) { super( com.daimajia.slider.library.Context , com.daimajia.slider.library.AttributeSet , int ); com.daimajia.slider.library.Context = com.daimajia.slider.library.Context ; LayoutInflater . from ( com.daimajia.slider.library.Context ) . inflate ( R . layout . slider_layout , this , true ) ; final TypedArray com.daimajia.slider.library.TypedArray = com.daimajia.slider.library.Context . getTheme ( ) . obtainStyledAttributes ( com.daimajia.slider.library.AttributeSet , R . styleable . SliderLayout , int , NUMBER ) ; int = com.daimajia.slider.library.TypedArray . getInteger ( R . styleable . SliderLayout_pager_animation_span , NUMBER ) ; int = com.daimajia.slider.library.TypedArray . getInt ( R . styleable . SliderLayout_pager_animation , com.daimajia.slider.library.SliderLayout.Transformer . com.daimajia.slider.library.SliderLayout.Transformer . int ( ) ) ; boolean = com.daimajia.slider.library.TypedArray . getBoolean ( R . styleable . SliderLayout_auto_cycle , true ) ; int int = com.daimajia.slider.library.TypedArray . getInt ( R . styleable . SliderLayout_indicator_visibility , NUMBER ) ; for( PagerIndicator . PagerIndicator PagerIndicator.IndicatorVisibility : PagerIndicator . IndicatorVisibility . values ( ) ) { if( PagerIndicator.IndicatorVisibility . ordinal ( ) == int ) { PagerIndicator.IndicatorVisibility = PagerIndicator.IndicatorVisibility ; break; } } com.daimajia.slider.library.SliderAdapter = new SliderAdapter ( com.daimajia.slider.library.Context ) ; PagerAdapter com.daimajia.slider.library.PagerAdapter = new InfinitePagerAdapter ( com.daimajia.slider.library.SliderAdapter ) ; com.daimajia.slider.library.InfiniteViewPager = ( InfiniteViewPager ) findViewById ( R . id . daimajia_slider_viewpager ) ; com.daimajia.slider.library.InfiniteViewPager . setAdapter ( com.daimajia.slider.library.PagerAdapter ) ; com.daimajia.slider.library.InfiniteViewPager . setOnTouchListener ( new OnTouchListener ( ) { @ java.lang.Override public boolean boolean ( View com.daimajia.slider.library.View , MotionEvent com.daimajia.slider.library.MotionEvent ) { int int = com.daimajia.slider.library.MotionEvent . getAction ( ) ; switch ( int ) { case MotionEvent . ACTION_UP : void ( ) ; break; } return false ; } } ) ; com.daimajia.slider.library.TypedArray . recycle ( ) ; void ( com.daimajia.slider.library.SliderLayout.PresetIndicators . com.daimajia.slider.library.SliderLayout.PresetIndicators ) ; void ( int ) ; void ( int , null ) ; void ( PagerIndicator.IndicatorVisibility ) ; if( boolean ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( View com.daimajia.slider.library.View , MotionEvent com.daimajia.slider.library.MotionEvent ) { int int = com.daimajia.slider.library.MotionEvent . getAction ( ) ; switch ( int ) { case MotionEvent . ACTION_UP : void ( ) ; break; } return false ; }  <METHOD_END>
<METHOD_START> public void void ( ViewPagerEx . ViewPagerEx ViewPagerEx.OnPageChangeListener ) { if( ViewPagerEx.OnPageChangeListener != null ) { com.daimajia.slider.library.InfiniteViewPager . addOnPageChangeListener ( ViewPagerEx.OnPageChangeListener ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ViewPagerEx . ViewPagerEx ViewPagerEx.OnPageChangeListener ) { com.daimajia.slider.library.InfiniteViewPager . removeOnPageChangeListener ( ViewPagerEx.OnPageChangeListener ) ; }  <METHOD_END>
<METHOD_START> public void void ( PagerIndicator com.daimajia.slider.library.PagerIndicator ) { if( com.daimajia.slider.library.PagerIndicator != null ) { com.daimajia.slider.library.PagerIndicator . destroySelf ( ) ; } com.daimajia.slider.library.PagerIndicator = com.daimajia.slider.library.PagerIndicator ; com.daimajia.slider.library.PagerIndicator . setIndicatorVisibility ( PagerIndicator.IndicatorVisibility ) ; com.daimajia.slider.library.PagerIndicator . setViewPager ( com.daimajia.slider.library.InfiniteViewPager ) ; com.daimajia.slider.library.PagerIndicator . redraw ( ) ; }  <METHOD_END>
<METHOD_START> public < T extends com.daimajia.slider.library.BaseSliderView > void void ( T T ) { com.daimajia.slider.library.SliderAdapter . addSlider ( T ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Message com.daimajia.slider.library.Message ) { super. handleMessage ( com.daimajia.slider.library.Message ) ; void ( true ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( long , long , boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( long long , long long , boolean boolean ) { if( java.util.Timer != null ) java.util.Timer . void ( ) ; if( java.util.TimerTask != null ) java.util.TimerTask . boolean ( ) ; if( java.util.TimerTask != null ) java.util.TimerTask . boolean ( ) ; if( java.util.Timer != null ) java.util.Timer . void ( ) ; long = long ; java.util.Timer = new java.util.Timer ( ) ; boolean = boolean ; java.util.TimerTask = new java.util.TimerTask ( ) { @ java.lang.Override public void void ( ) { android.os.Handler . sendEmptyMessage ( NUMBER ) ; } } ; java.util.Timer . void ( java.util.TimerTask , long , long ) ; boolean = true ; boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { android.os.Handler . sendEmptyMessage ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if( boolean ) { java.util.Timer . void ( ) ; java.util.TimerTask . boolean ( ) ; boolean = false ; } else { if( java.util.Timer != null && java.util.TimerTask != null ) { void ( ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( long long ) { if( long >= NUMBER ) { long = long ; if( boolean && boolean ) { void ( ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) { if( java.util.TimerTask != null ) { java.util.TimerTask . boolean ( ) ; } if( java.util.Timer != null ) { java.util.Timer . void ( ) ; } if( java.util.Timer != null ) { java.util.Timer . void ( ) ; } if( java.util.TimerTask != null ) { java.util.TimerTask . boolean ( ) ; } boolean = false ; boolean = false ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if( ! boolean || ! boolean ) { return; } if( ! boolean ) { if( java.util.TimerTask != null && java.util.Timer != null ) { java.util.Timer . void ( ) ; java.util.TimerTask . boolean ( ) ; } java.util.Timer = new java.util.Timer ( ) ; java.util.TimerTask = new java.util.TimerTask ( ) { @ java.lang.Override public void void ( ) { void ( ) ; } } ; java.util.Timer . void ( java.util.TimerTask , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent com.daimajia.slider.library.MotionEvent ) { int int = com.daimajia.slider.library.MotionEvent . getAction ( ) ; switch ( int ) { case MotionEvent . ACTION_DOWN : void ( ) ; break; } return false ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean , BaseTransformer com.daimajia.slider.library.BaseTransformer ) { com.daimajia.slider.library.BaseTransformer = com.daimajia.slider.library.BaseTransformer ; com.daimajia.slider.library.BaseTransformer . setCustomAnimationInterface ( com.daimajia.slider.library.BaseAnimationInterface ) ; com.daimajia.slider.library.InfiniteViewPager . setPageTransformer ( boolean , com.daimajia.slider.library.BaseTransformer ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int , Interpolator com.daimajia.slider.library.Interpolator ) { try { java.lang.reflect.Field java.lang.reflect.Field = ViewPagerEx .class . java.lang.reflect.Field ( STRING ) ; java.lang.reflect.Field . void ( true ) ; FixedSpeedScroller com.daimajia.slider.library.FixedSpeedScroller = new FixedSpeedScroller ( com.daimajia.slider.library.InfiniteViewPager . getContext ( ) , com.daimajia.slider.library.Interpolator , int ) ; java.lang.reflect.Field . void ( com.daimajia.slider.library.InfiniteViewPager , com.daimajia.slider.library.FixedSpeedScroller ) ; } catch ( java.lang.Exception java.lang.Exception ) {        } }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( java.lang.String java.lang.String ) { return ( java.lang.String == null ) ? false : java.lang.String . boolean ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { for( com.daimajia.slider.library.SliderLayout.Transformer com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.SliderLayout.Transformer . com.daimajia.slider.library.SliderLayout.Transformer[] ( ) ) { if( com.daimajia.slider.library.SliderLayout.Transformer . int ( ) == int ) { void ( com.daimajia.slider.library.SliderLayout.Transformer ) ; break; } } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { for( com.daimajia.slider.library.SliderLayout.Transformer com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.SliderLayout.Transformer . com.daimajia.slider.library.SliderLayout.Transformer[] ( ) ) { if( com.daimajia.slider.library.SliderLayout.Transformer . boolean ( java.lang.String ) ) { void ( com.daimajia.slider.library.SliderLayout.Transformer ) ; return; } } }  <METHOD_END>
<METHOD_START> public void void ( BaseAnimationInterface com.daimajia.slider.library.BaseAnimationInterface ) { com.daimajia.slider.library.BaseAnimationInterface = com.daimajia.slider.library.BaseAnimationInterface ; if( com.daimajia.slider.library.BaseTransformer != null ) { com.daimajia.slider.library.BaseTransformer . setCustomAnimationInterface ( com.daimajia.slider.library.BaseAnimationInterface ) ; } }  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.SliderLayout.Transformer com.daimajia.slider.library.SliderLayout.Transformer ) { BaseTransformer com.daimajia.slider.library.BaseTransformer = null ; switch ( com.daimajia.slider.library.SliderLayout.Transformer ){ case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new DefaultTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new AccordionTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new BackgroundToForegroundTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new CubeInTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new DepthPageTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new FadeTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new FlipHorizontalTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new FlipPageViewTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new ForegroundToBackgroundTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new RotateDownTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new RotateUpTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new StackTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new TabletTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new ZoomInTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new ZoomOutSlideTransformer ( ) ; break; case com.daimajia.slider.library.SliderLayout.Transformer : com.daimajia.slider.library.BaseTransformer = new ZoomOutTransformer ( ) ; break; } void ( true , com.daimajia.slider.library.BaseTransformer ) ; }  <METHOD_END>
<METHOD_START> public void void ( PagerIndicator . PagerIndicator PagerIndicator.IndicatorVisibility ) { if( com.daimajia.slider.library.PagerIndicator == null ) { return; } com.daimajia.slider.library.PagerIndicator . setIndicatorVisibility ( PagerIndicator.IndicatorVisibility ) ; }  <METHOD_END>
<METHOD_START> public PagerIndicator . PagerIndicator.IndicatorVisibility PagerIndicator.IndicatorVisibility ( ) { if( com.daimajia.slider.library.PagerIndicator == null ) { return com.daimajia.slider.library.PagerIndicator . getIndicatorVisibility ( ) ; } return PagerIndicator . IndicatorVisibility . Invisible ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.PagerIndicator com.daimajia.slider.library.PagerIndicator ( ) { return com.daimajia.slider.library.PagerIndicator ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , int int ) { this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.SliderLayout.PresetIndicators com.daimajia.slider.library.SliderLayout.PresetIndicators ) { PagerIndicator com.daimajia.slider.library.PagerIndicator = ( PagerIndicator ) findViewById ( com.daimajia.slider.library.SliderLayout.PresetIndicators . int ( ) ) ; void ( com.daimajia.slider.library.PagerIndicator ) ; }  <METHOD_END>
<METHOD_START> private com.daimajia.slider.library.InfinitePagerAdapter com.daimajia.slider.library.InfinitePagerAdapter ( ) { PagerAdapter com.daimajia.slider.library.PagerAdapter = com.daimajia.slider.library.InfiniteViewPager . getAdapter ( ) ; if( com.daimajia.slider.library.PagerAdapter != null ) { return ( InfinitePagerAdapter ) com.daimajia.slider.library.PagerAdapter ; } else { return null ; } }  <METHOD_END>
<METHOD_START> private com.daimajia.slider.library.SliderAdapter com.daimajia.slider.library.SliderAdapter ( ) { PagerAdapter com.daimajia.slider.library.PagerAdapter = com.daimajia.slider.library.InfiniteViewPager . getAdapter ( ) ; if( com.daimajia.slider.library.PagerAdapter != null ) { return ( ( InfinitePagerAdapter ) com.daimajia.slider.library.PagerAdapter ) . getRealAdapter ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> public int int ( ) { if( com.daimajia.slider.library.SliderAdapter ( ) == null ) throw new java.lang.IllegalStateException ( STRING ) ; return com.daimajia.slider.library.InfiniteViewPager . getCurrentItem ( ) % com.daimajia.slider.library.SliderAdapter ( ) . getCount ( ) ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.BaseSliderView com.daimajia.slider.library.BaseSliderView ( ) { if( com.daimajia.slider.library.SliderAdapter ( ) == null ) throw new java.lang.IllegalStateException ( STRING ) ; int int = com.daimajia.slider.library.SliderAdapter ( ) . getCount ( ) ; int int = com.daimajia.slider.library.InfiniteViewPager . getCurrentItem ( ) % int ; return com.daimajia.slider.library.SliderAdapter ( ) . getSliderView ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if( com.daimajia.slider.library.SliderAdapter ( ) != null ) { com.daimajia.slider.library.SliderAdapter ( ) . removeSliderAt ( int ) ; com.daimajia.slider.library.InfiniteViewPager . setCurrentItem ( com.daimajia.slider.library.InfiniteViewPager . getCurrentItem ( ) , false ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if( com.daimajia.slider.library.SliderAdapter ( ) != null ) { int int = com.daimajia.slider.library.SliderAdapter ( ) . getCount ( ) ; com.daimajia.slider.library.SliderAdapter ( ) . removeAllSliders ( ) ; com.daimajia.slider.library.InfiniteViewPager . setCurrentItem ( com.daimajia.slider.library.InfiniteViewPager . getCurrentItem ( ) + int , false ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , boolean boolean ) { if ( com.daimajia.slider.library.SliderAdapter ( ) == null ) throw new java.lang.IllegalStateException ( STRING ) ; if( int >= com.daimajia.slider.library.SliderAdapter ( ) . getCount ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } int int = com.daimajia.slider.library.InfiniteViewPager . getCurrentItem ( ) % com.daimajia.slider.library.SliderAdapter ( ) . getCount ( ) ; int int = ( int - int ) + com.daimajia.slider.library.InfiniteViewPager . getCurrentItem ( ) ; com.daimajia.slider.library.InfiniteViewPager . setCurrentItem ( int , boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { void ( int , true ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( com.daimajia.slider.library.SliderAdapter ( ) == null ) throw new java.lang.IllegalStateException ( STRING ) ; com.daimajia.slider.library.InfiniteViewPager . setCurrentItem ( com.daimajia.slider.library.InfiniteViewPager . getCurrentItem ( ) - NUMBER , boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( true ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( com.daimajia.slider.library.SliderAdapter ( ) == null ) throw new java.lang.IllegalStateException ( STRING ) ; com.daimajia.slider.library.InfiniteViewPager . setCurrentItem ( com.daimajia.slider.library.InfiniteViewPager . getCurrentItem ( ) + NUMBER , boolean ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( true ) ; }  <METHOD_END>
<METHOD_START> protected void ( Context com.daimajia.slider.library.SliderTypes.Context ) { com.daimajia.slider.library.SliderTypes.Context = com.daimajia.slider.library.SliderTypes.Context ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( int int ) { int = int ; return this ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( boolean boolean ) { boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( int int ) { int = int ; return this ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( java.lang.String java.lang.String ) { if( java.io.File != null || int != NUMBER ) { throw new java.lang.IllegalStateException ( STRING + STRING ) ; } java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( java.io.File java.io.File ) { if( java.lang.String != null || int != NUMBER ) { throw new java.lang.IllegalStateException ( STRING + STRING ) ; } java.io.File = java.io.File ; return this ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( int int ) { if( java.lang.String != null || java.io.File != null ) { throw new java.lang.IllegalStateException ( STRING + STRING ) ; } int = int ; return this ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( Bundle com.daimajia.slider.library.SliderTypes.Bundle ) { com.daimajia.slider.library.SliderTypes.Bundle = com.daimajia.slider.library.SliderTypes.Bundle ; return this ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.Context com.daimajia.slider.library.SliderTypes.Context ( ) { return com.daimajia.slider.library.SliderTypes.Context ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( com.daimajia.slider.library.SliderTypes.BaseSliderView.OnSliderClickListener com.daimajia.slider.library.SliderTypes.BaseSliderView.OnSliderClickListener ) { com.daimajia.slider.library.SliderTypes.BaseSliderView.OnSliderClickListener = com.daimajia.slider.library.SliderTypes.BaseSliderView.OnSliderClickListener ; return this ; }  <METHOD_END>
<METHOD_START> protected void void ( final View com.daimajia.slider.library.SliderTypes.View , ImageView com.daimajia.slider.library.SliderTypes.ImageView ) { final com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView = this ; com.daimajia.slider.library.SliderTypes.View . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.daimajia.slider.library.SliderTypes.View ) { if( com.daimajia.slider.library.SliderTypes.BaseSliderView.OnSliderClickListener != null ) { com.daimajia.slider.library.SliderTypes.BaseSliderView.OnSliderClickListener . void ( com.daimajia.slider.library.SliderTypes.BaseSliderView ) ; } } } ) ; if ( com.daimajia.slider.library.SliderTypes.ImageView == null ) return; if ( com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener != null ) { com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener . void ( com.daimajia.slider.library.SliderTypes.BaseSliderView ) ; } Picasso com.daimajia.slider.library.SliderTypes.Picasso = ( com.daimajia.slider.library.SliderTypes.Picasso != null ) ? com.daimajia.slider.library.SliderTypes.Picasso : Picasso . with ( com.daimajia.slider.library.SliderTypes.Context ) ; RequestCreator com.daimajia.slider.library.SliderTypes.RequestCreator = null ; if( java.lang.String != null ) { com.daimajia.slider.library.SliderTypes.RequestCreator = com.daimajia.slider.library.SliderTypes.Picasso . load ( java.lang.String ) ; } else if( java.io.File != null ) { com.daimajia.slider.library.SliderTypes.RequestCreator = com.daimajia.slider.library.SliderTypes.Picasso . load ( java.io.File ) ; } else if( int != NUMBER ) { com.daimajia.slider.library.SliderTypes.RequestCreator = com.daimajia.slider.library.SliderTypes.Picasso . load ( int ) ; } else { return; } if( com.daimajia.slider.library.SliderTypes.RequestCreator == null ) { return; } if( int ( ) != NUMBER ) { com.daimajia.slider.library.SliderTypes.RequestCreator . placeholder ( int ( ) ) ; } if( int ( ) != NUMBER ) { com.daimajia.slider.library.SliderTypes.RequestCreator . error ( int ( ) ) ; } switch ( com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType ){ case com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType : com.daimajia.slider.library.SliderTypes.RequestCreator . fit ( ) ; break; case com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType : com.daimajia.slider.library.SliderTypes.RequestCreator . fit ( ) . centerCrop ( ) ; break; case com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType : com.daimajia.slider.library.SliderTypes.RequestCreator . fit ( ) . centerInside ( ) ; break; } com.daimajia.slider.library.SliderTypes.RequestCreator . into ( com.daimajia.slider.library.SliderTypes.ImageView , new Callback ( ) { @ java.lang.Override public void void ( ) { if( com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . loading_bar ) != null ) { com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . loading_bar ) . setVisibility ( View . INVISIBLE ) ; } } @ java.lang.Override public void void ( ) { if( com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener != null ) { com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener . void ( false , com.daimajia.slider.library.SliderTypes.BaseSliderView ) ; } if( com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . loading_bar ) != null ) { com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . loading_bar ) . setVisibility ( View . INVISIBLE ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.SliderTypes.View ) { if( com.daimajia.slider.library.SliderTypes.BaseSliderView.OnSliderClickListener != null ) { com.daimajia.slider.library.SliderTypes.BaseSliderView.OnSliderClickListener . void ( com.daimajia.slider.library.SliderTypes.BaseSliderView ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if( com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . loading_bar ) != null ) { com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . loading_bar ) . setVisibility ( View . INVISIBLE ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if( com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener != null ) { com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener . void ( false , com.daimajia.slider.library.SliderTypes.BaseSliderView ) ; } if( com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . loading_bar ) != null ) { com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . loading_bar ) . setVisibility ( View . INVISIBLE ) ; } }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView ( com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType ) { com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType = com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType ; return this ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType ( ) { return com.daimajia.slider.library.SliderTypes.BaseSliderView.ScaleType ; }  <METHOD_END>
<METHOD_START> public abstract com.daimajia.slider.library.SliderTypes.View com.daimajia.slider.library.SliderTypes.View ( )  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener ) { com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener = com.daimajia.slider.library.SliderTypes.BaseSliderView.ImageLoadListener ; }  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView );  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.Bundle com.daimajia.slider.library.SliderTypes.Bundle ( ) { return com.daimajia.slider.library.SliderTypes.Bundle ; }  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView );  <METHOD_END>
<METHOD_START> public void void ( boolean boolean , com.daimajia.slider.library.SliderTypes.BaseSliderView com.daimajia.slider.library.SliderTypes.BaseSliderView );  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.SliderTypes.Picasso com.daimajia.slider.library.SliderTypes.Picasso ( ) { return com.daimajia.slider.library.SliderTypes.Picasso ; }  <METHOD_END>
<METHOD_START> public void void ( Picasso com.daimajia.slider.library.SliderTypes.Picasso ) { com.daimajia.slider.library.SliderTypes.Picasso = com.daimajia.slider.library.SliderTypes.Picasso ; }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.SliderTypes.Context ) { super( com.daimajia.slider.library.SliderTypes.Context ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.daimajia.slider.library.SliderTypes.View com.daimajia.slider.library.SliderTypes.View ( ) { View com.daimajia.slider.library.SliderTypes.View = LayoutInflater . from ( getContext ( ) ) . inflate ( R . layout . render_type_default , null ) ; ImageView com.daimajia.slider.library.SliderTypes.ImageView = ( ImageView ) com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . daimajia_slider_image ) ; bindEventAndShow ( com.daimajia.slider.library.SliderTypes.View , com.daimajia.slider.library.SliderTypes.ImageView ) ; return com.daimajia.slider.library.SliderTypes.View ; }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.SliderTypes.Context ) { super( com.daimajia.slider.library.SliderTypes.Context ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.daimajia.slider.library.SliderTypes.View com.daimajia.slider.library.SliderTypes.View ( ) { View com.daimajia.slider.library.SliderTypes.View = LayoutInflater . from ( getContext ( ) ) . inflate ( R . layout . render_type_text , null ) ; ImageView com.daimajia.slider.library.SliderTypes.ImageView = ( ImageView ) com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . daimajia_slider_image ) ; TextView com.daimajia.slider.library.SliderTypes.TextView = ( TextView ) com.daimajia.slider.library.SliderTypes.View . findViewById ( R . id . description ) ; com.daimajia.slider.library.SliderTypes.TextView . setText ( getDescription ( ) ) ; bindEventAndShow ( com.daimajia.slider.library.SliderTypes.View , com.daimajia.slider.library.SliderTypes.ImageView ) ; return com.daimajia.slider.library.SliderTypes.View ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , float < NUMBER ? NUMBER : com.daimajia.slider.library.Transformers.View . getWidth ( ) ) ; ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , float < NUMBER ? NUMBER + float : NUMBER - float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = com.daimajia.slider.library.Transformers.View . getHeight ( ) ; final float float = com.daimajia.slider.library.Transformers.View . getWidth ( ) ; final float float = float ( float < NUMBER ? NUMBER : java.lang.Math . float ( NUMBER - float ) , NUMBER ) ; ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , float * NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , float * NUMBER ) ; ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , float < NUMBER ? float * float : - float * float * NUMBER ) ; }  <METHOD_END>
<METHOD_START> private static final float float ( float float , float float ) { return float < float ? float : float ; }  <METHOD_END>
<METHOD_START> protected abstract void void ( View com.daimajia.slider.library.Transformers.View , float float );  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Transformers.View , float float ) { void ( com.daimajia.slider.library.Transformers.View , float ) ; void ( com.daimajia.slider.library.Transformers.View , float ) ; void ( com.daimajia.slider.library.Transformers.View , float ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = com.daimajia.slider.library.Transformers.View . getWidth ( ) ; ViewHelper . setRotationX ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setRotationY ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setRotation ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setTranslationY ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , boolean ( ) ? NUMBER : - float * float ) ; if ( boolean ( ) ) { ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , float <= - NUMBER || float >= NUMBER ? NUMBER : NUMBER ) ; } else { ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; } if( com.daimajia.slider.library.Transformers.BaseAnimationInterface != null ) { if( java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . containsKey ( com.daimajia.slider.library.Transformers.View ) == false || java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . get ( com.daimajia.slider.library.Transformers.View ) . size ( ) == NUMBER ) { if( float > - NUMBER && float < NUMBER ) { if( java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . get ( com.daimajia.slider.library.Transformers.View ) == null ) { java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . put ( com.daimajia.slider.library.Transformers.View , new java.util.ArrayList<java.lang.Float> < java.lang.Float > ( ) ) ; } java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . get ( com.daimajia.slider.library.Transformers.View ) . add ( float ) ; if( java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . get ( com.daimajia.slider.library.Transformers.View ) . size ( ) == NUMBER ) { float float = java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . get ( com.daimajia.slider.library.Transformers.View ) . get ( NUMBER ) ; float float = java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . get ( com.daimajia.slider.library.Transformers.View ) . get ( NUMBER ) - java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . get ( com.daimajia.slider.library.Transformers.View ) . get ( NUMBER ) ; if( float > NUMBER ) { if( float > - NUMBER && float < NUMBER ) { com.daimajia.slider.library.Transformers.BaseAnimationInterface . onPrepareNextItemShowInScreen ( com.daimajia.slider.library.Transformers.View ) ; } else { com.daimajia.slider.library.Transformers.BaseAnimationInterface . onPrepareCurrentItemLeaveScreen ( com.daimajia.slider.library.Transformers.View ) ; } } else { if( float > - NUMBER && float < NUMBER ) { com.daimajia.slider.library.Transformers.BaseAnimationInterface . onPrepareCurrentItemLeaveScreen ( com.daimajia.slider.library.Transformers.View ) ; } else { com.daimajia.slider.library.Transformers.BaseAnimationInterface . onPrepareNextItemShowInScreen ( com.daimajia.slider.library.Transformers.View ) ; } } } } } } }  <METHOD_END>
<METHOD_START> protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { if( com.daimajia.slider.library.Transformers.BaseAnimationInterface != null ) { if( float == - NUMBER || float == NUMBER ) { com.daimajia.slider.library.Transformers.BaseAnimationInterface . onCurrentItemDisappear ( com.daimajia.slider.library.Transformers.View ) ; boolean = true ; } else if( float == NUMBER ) { com.daimajia.slider.library.Transformers.BaseAnimationInterface . onNextItemAppear ( com.daimajia.slider.library.Transformers.View ) ; boolean = true ; } if( boolean && boolean ) { java.util.HashMap<com.daimajia.slider.library.Transformers.View,java.util.ArrayList<java.lang.Float>> . clear ( ) ; boolean = false ; boolean = false ; } } }  <METHOD_END>
<METHOD_START> public void void ( BaseAnimationInterface com.daimajia.slider.library.Transformers.BaseAnimationInterface ) { com.daimajia.slider.library.Transformers.BaseAnimationInterface = com.daimajia.slider.library.Transformers.BaseAnimationInterface ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , float > NUMBER ? NUMBER : com.daimajia.slider.library.Transformers.View . getWidth ( ) ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setRotation ( com.daimajia.slider.library.Transformers.View , - NUMBER * float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) {	}  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { if ( float <= NUMBER ) { ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; } else if ( float <= NUMBER ) { final float float = float + ( NUMBER - float ) * ( NUMBER - java.lang.Math . float ( float ) ) ; ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , NUMBER - float ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , NUMBER * com.daimajia.slider.library.Transformers.View . getHeight ( ) ) ; ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getWidth ( ) * - float ) ; ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , float ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { if( float < - NUMBER || float > NUMBER ) { ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; } else if ( float <= NUMBER || float <= NUMBER ) { float float = ( float <= NUMBER ) ? float + NUMBER : NUMBER - float ; ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , float ) ; } else if ( float == NUMBER ) { ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = NUMBER * float ; ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , float > NUMBER || float < - NUMBER ? NUMBER : NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getHeight ( ) * NUMBER ) ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getWidth ( ) * NUMBER ) ; ViewHelper . setRotationY ( com.daimajia.slider.library.Transformers.View , float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { float float = NUMBER - java.lang.Math . float ( float ) ; if( Build . VERSION . SDK_INT >= NUMBER ) { com.daimajia.slider.library.Transformers.View . setCameraDistance ( NUMBER ) ; } void ( com.daimajia.slider.library.Transformers.View , float ) ; void ( com.daimajia.slider.library.Transformers.View ) ; void ( com.daimajia.slider.library.Transformers.View , float , float ) ; void ( com.daimajia.slider.library.Transformers.View , float , float ) ; }  <METHOD_END>
<METHOD_START> private void void ( View com.daimajia.slider.library.Transformers.View , float float ) { if ( float < NUMBER && float > - NUMBER ) { com.daimajia.slider.library.Transformers.View . setVisibility ( View . VISIBLE ) ; } else { com.daimajia.slider.library.Transformers.View . setVisibility ( View . INVISIBLE ) ; } }  <METHOD_END>
<METHOD_START> private void void ( View com.daimajia.slider.library.Transformers.View ) { ViewPagerEx com.daimajia.slider.library.Transformers.ViewPagerEx = ( ViewPagerEx ) com.daimajia.slider.library.Transformers.View . getParent ( ) ; int int = com.daimajia.slider.library.Transformers.ViewPagerEx . getScrollX ( ) - com.daimajia.slider.library.Transformers.View . getLeft ( ) ; ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , int ) ; }  <METHOD_END>
<METHOD_START> private void void ( View com.daimajia.slider.library.Transformers.View , float float , float float ) { ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , ( float != NUMBER && float != NUMBER ) ? float : NUMBER ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , ( float != NUMBER && float != NUMBER ) ? float : NUMBER ) ; }  <METHOD_END>
<METHOD_START> private void void ( View com.daimajia.slider.library.Transformers.View , float float , float float ) { if ( float > NUMBER ) { ViewHelper . setRotationY ( com.daimajia.slider.library.Transformers.View , - NUMBER * ( float + NUMBER ) ) ; } else { ViewHelper . setRotationY ( com.daimajia.slider.library.Transformers.View , NUMBER * ( float + NUMBER ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = com.daimajia.slider.library.Transformers.View . getHeight ( ) ; final float float = com.daimajia.slider.library.Transformers.View . getWidth ( ) ; final float float = float ( float > NUMBER ? NUMBER : java.lang.Math . float ( NUMBER + float ) , NUMBER ) ; ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , float * NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , float * NUMBER ) ; ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , float > NUMBER ? float * float : - float * float * NUMBER ) ; }  <METHOD_END>
<METHOD_START> private static final float float ( float float , float float ) { return float < float ? float : float ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = com.daimajia.slider.library.Transformers.View . getWidth ( ) ; final float float = com.daimajia.slider.library.Transformers.View . getHeight ( ) ; final float float = float * float * - NUMBER ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , float * NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setRotation ( com.daimajia.slider.library.Transformers.View , float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = com.daimajia.slider.library.Transformers.View . getWidth ( ) ; final float float = float * float ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , float * NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setRotation ( com.daimajia.slider.library.Transformers.View , float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , float < NUMBER ? NUMBER : - com.daimajia.slider.library.Transformers.View . getWidth ( ) * float ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = ( float < NUMBER ? NUMBER : - NUMBER ) * java.lang.Math . float ( float ) ; ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , float ( float , com.daimajia.slider.library.Transformers.View . getWidth ( ) , com.daimajia.slider.library.Transformers.View . getHeight ( ) ) ) ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getWidth ( ) * NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , NUMBER ) ; ViewHelper . setRotationY ( com.daimajia.slider.library.Transformers.View , float ) ; }  <METHOD_END>
<METHOD_START> protected static final float float ( float float , int int , int int ) { com.daimajia.slider.library.Transformers.Matrix . reset ( ) ; com.daimajia.slider.library.Transformers.Camera . save ( ) ; com.daimajia.slider.library.Transformers.Camera . rotateY ( java.lang.Math . float ( float ) ) ; com.daimajia.slider.library.Transformers.Camera . getMatrix ( com.daimajia.slider.library.Transformers.Matrix ) ; com.daimajia.slider.library.Transformers.Camera . restore ( ) ; com.daimajia.slider.library.Transformers.Matrix . preTranslate ( - int * NUMBER , - int * NUMBER ) ; com.daimajia.slider.library.Transformers.Matrix . postTranslate ( int * NUMBER , int * NUMBER ) ; float[] [ NUMBER ] = int ; float[] [ NUMBER ] = int ; com.daimajia.slider.library.Transformers.Matrix . mapPoints ( float[] ) ; return ( int - float[] [ NUMBER ] ) * ( float > NUMBER ? NUMBER : - NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = float < NUMBER ? float + NUMBER : java.lang.Math . float ( NUMBER - float ) ; ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getWidth ( ) * NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getHeight ( ) * NUMBER ) ; ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , float < - NUMBER || float > NUMBER ? NUMBER : NUMBER - ( float - NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { if ( float >= - NUMBER || float <= NUMBER ) { final float float = com.daimajia.slider.library.Transformers.View . getHeight ( ) ; final float float = java.lang.Math . float ( float , NUMBER - java.lang.Math . float ( float ) ) ; final float float = float * ( NUMBER - float ) / NUMBER ; final float float = com.daimajia.slider.library.Transformers.View . getWidth ( ) * ( NUMBER - float ) / NUMBER ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , NUMBER * float ) ; if ( float < NUMBER ) { ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , float - float / NUMBER ) ; } else { ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , - float + float / NUMBER ) ; } ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , float + ( float - float ) / ( NUMBER - float ) * ( NUMBER - float ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( View com.daimajia.slider.library.Transformers.View , float float ) { final float float = NUMBER + java.lang.Math . float ( float ) ; ViewHelper . setScaleX ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setScaleY ( com.daimajia.slider.library.Transformers.View , float ) ; ViewHelper . setPivotX ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getWidth ( ) * NUMBER ) ; ViewHelper . setPivotY ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getWidth ( ) * NUMBER ) ; ViewHelper . setAlpha ( com.daimajia.slider.library.Transformers.View , float < - NUMBER || float > NUMBER ? NUMBER : NUMBER - ( float - NUMBER ) ) ; if( float < - NUMBER ) { ViewHelper . setTranslationX ( com.daimajia.slider.library.Transformers.View , com.daimajia.slider.library.Transformers.View . getWidth ( ) * float ) ; } }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Tricks.Context ) { super( com.daimajia.slider.library.Tricks.Context ); }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Tricks.Context , Interpolator com.daimajia.slider.library.Tricks.Interpolator ) { super( com.daimajia.slider.library.Tricks.Context , com.daimajia.slider.library.Tricks.Interpolator ); }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Tricks.Context , Interpolator com.daimajia.slider.library.Tricks.Interpolator , int int ) { this( com.daimajia.slider.library.Tricks.Context , com.daimajia.slider.library.Tricks.Interpolator ); int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int , int int , int int , int int ) { super. startScroll ( int , int , int , int , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int , int int , int int ) { super. startScroll ( int , int , int , int , int ) ; }  <METHOD_END>
<METHOD_START> public void ( SliderAdapter com.daimajia.slider.library.Tricks.SliderAdapter ) { this . com.daimajia.slider.library.Tricks.SliderAdapter = com.daimajia.slider.library.Tricks.SliderAdapter ; }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.Tricks.SliderAdapter com.daimajia.slider.library.Tricks.SliderAdapter ( ) { return this . com.daimajia.slider.library.Tricks.SliderAdapter ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.lang.Integer . int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return com.daimajia.slider.library.Tricks.SliderAdapter . getCount ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( ViewGroup com.daimajia.slider.library.Tricks.ViewGroup , int int ) { if( int ( ) == NUMBER ) { return null ; } int int = int % int ( ) ; void ( STRING + int ) ; void ( STRING + int ) ; return com.daimajia.slider.library.Tricks.SliderAdapter . instantiateItem ( com.daimajia.slider.library.Tricks.ViewGroup , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ViewGroup com.daimajia.slider.library.Tricks.ViewGroup , int int , java.lang.Object java.lang.Object ) { if( int ( ) == NUMBER ) { return; } int int = int % int ( ) ; void ( STRING + int ) ; void ( STRING + int ) ; com.daimajia.slider.library.Tricks.SliderAdapter . destroyItem ( com.daimajia.slider.library.Tricks.ViewGroup , int , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ViewGroup com.daimajia.slider.library.Tricks.ViewGroup ) { com.daimajia.slider.library.Tricks.SliderAdapter . finishUpdate ( com.daimajia.slider.library.Tricks.ViewGroup ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( View com.daimajia.slider.library.Tricks.View , java.lang.Object java.lang.Object ) { return com.daimajia.slider.library.Tricks.SliderAdapter . isViewFromObject ( com.daimajia.slider.library.Tricks.View , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Parcelable com.daimajia.slider.library.Tricks.Parcelable , java.lang.ClassLoader java.lang.ClassLoader ) { com.daimajia.slider.library.Tricks.SliderAdapter . restoreState ( com.daimajia.slider.library.Tricks.Parcelable , java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.daimajia.slider.library.Tricks.Parcelable com.daimajia.slider.library.Tricks.Parcelable ( ) { return com.daimajia.slider.library.Tricks.SliderAdapter . saveState ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ViewGroup com.daimajia.slider.library.Tricks.ViewGroup ) { com.daimajia.slider.library.Tricks.SliderAdapter . startUpdate ( com.daimajia.slider.library.Tricks.ViewGroup ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . d ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Tricks.Context ) { super( com.daimajia.slider.library.Tricks.Context ); }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Tricks.Context , AttributeSet com.daimajia.slider.library.Tricks.AttributeSet ) { super( com.daimajia.slider.library.Tricks.Context , com.daimajia.slider.library.Tricks.AttributeSet ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( PagerAdapter com.daimajia.slider.library.Tricks.PagerAdapter ) { super. setAdapter ( com.daimajia.slider.library.Tricks.PagerAdapter ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ) { return com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int - com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ; }  <METHOD_END>
<METHOD_START> public float float ( float float ) { float -= NUMBER ; return float * float * float * float * float + NUMBER ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( int ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int , float float , int int );  <METHOD_END>
<METHOD_START> public void void ( int int );  <METHOD_END>
<METHOD_START> public void void ( int int );  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , float float , int int ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int ) { }  <METHOD_END>
<METHOD_START> private void void ( int int ) { for ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener : java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener> ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener != null ) { InfinitePagerAdapter com.daimajia.slider.library.Tricks.InfinitePagerAdapter = ( InfinitePagerAdapter ) com.daimajia.slider.library.Tricks.PagerAdapter ; if ( com.daimajia.slider.library.Tricks.InfinitePagerAdapter . getRealCount ( ) == NUMBER ) { return; } int int = int % com.daimajia.slider.library.Tricks.InfinitePagerAdapter . getRealCount ( ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener . void ( int ) ; } } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener != null ) { com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener . void ( int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( View com.daimajia.slider.library.Tricks.View , float float );  <METHOD_END>
<METHOD_START> public void void ( PagerAdapter com.daimajia.slider.library.Tricks.PagerAdapter , PagerAdapter com.daimajia.slider.library.Tricks.PagerAdapter );  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Tricks.Context ) { super( com.daimajia.slider.library.Tricks.Context ); void ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Tricks.Context , AttributeSet com.daimajia.slider.library.Tricks.AttributeSet ) { super( com.daimajia.slider.library.Tricks.Context , com.daimajia.slider.library.Tricks.AttributeSet ); void ( ) ; }  <METHOD_END>
<METHOD_START> void void ( ) { setWillNotDraw ( false ) ; setDescendantFocusability ( FOCUS_AFTER_DESCENDANTS ) ; setFocusable ( true ) ; final Context com.daimajia.slider.library.Tricks.Context = getContext ( ) ; com.daimajia.slider.library.Tricks.Scroller = new Scroller ( com.daimajia.slider.library.Tricks.Context , com.daimajia.slider.library.Tricks.Interpolator ) ; final ViewConfiguration com.daimajia.slider.library.Tricks.ViewConfiguration = ViewConfiguration . get ( com.daimajia.slider.library.Tricks.Context ) ; final float float = com.daimajia.slider.library.Tricks.Context . getResources ( ) . getDisplayMetrics ( ) . density ; int = ViewConfigurationCompat . getScaledPagingTouchSlop ( com.daimajia.slider.library.Tricks.ViewConfiguration ) ; int = ( int ) ( int * float ) ; int = com.daimajia.slider.library.Tricks.ViewConfiguration . getScaledMaximumFlingVelocity ( ) ; com.daimajia.slider.library.Tricks.EdgeEffectCompat = new EdgeEffectCompat ( com.daimajia.slider.library.Tricks.Context ) ; com.daimajia.slider.library.Tricks.EdgeEffectCompat = new EdgeEffectCompat ( com.daimajia.slider.library.Tricks.Context ) ; int = ( int ) ( int * float ) ; int = ( int ) ( int * float ) ; int = ( int ) ( int * float ) ; ViewCompat . setAccessibilityDelegate ( this , new com.daimajia.slider.library.Tricks.ViewPagerEx.MyAccessibilityDelegate ( ) ) ; if ( ViewCompat . getImportantForAccessibility ( this ) == ViewCompat . IMPORTANT_FOR_ACCESSIBILITY_AUTO ) { ViewCompat . setImportantForAccessibility ( this , ViewCompat . IMPORTANT_FOR_ACCESSIBILITY_YES ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { removeCallbacks ( java.lang.Runnable ) ; super. onDetachedFromWindow ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { if ( int == int ) { return; } int = int ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer != null ) { void ( int != int ) ; } for ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener : java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener> ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener != null ) { com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener . void ( int ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( PagerAdapter com.daimajia.slider.library.Tricks.PagerAdapter ) { if ( com.daimajia.slider.library.Tricks.PagerAdapter != null ) { com.daimajia.slider.library.Tricks.PagerAdapter . unregisterDataSetObserver ( com.daimajia.slider.library.Tricks.ViewPagerEx.PagerObserver ) ; com.daimajia.slider.library.Tricks.PagerAdapter . startUpdate ( this ) ; for ( int int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; com.daimajia.slider.library.Tricks.PagerAdapter . destroyItem ( this , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object ) ; } com.daimajia.slider.library.Tricks.PagerAdapter . finishUpdate ( this ) ; java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . void ( ) ; void ( ) ; int = NUMBER ; scrollTo ( NUMBER , NUMBER ) ; } final PagerAdapter com.daimajia.slider.library.Tricks.PagerAdapter = com.daimajia.slider.library.Tricks.PagerAdapter ; com.daimajia.slider.library.Tricks.PagerAdapter = com.daimajia.slider.library.Tricks.PagerAdapter ; int = NUMBER ; if ( com.daimajia.slider.library.Tricks.PagerAdapter != null ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.PagerObserver == null ) { com.daimajia.slider.library.Tricks.ViewPagerEx.PagerObserver = new com.daimajia.slider.library.Tricks.ViewPagerEx.PagerObserver ( ) ; } com.daimajia.slider.library.Tricks.PagerAdapter . registerDataSetObserver ( com.daimajia.slider.library.Tricks.ViewPagerEx.PagerObserver ) ; boolean = false ; final boolean boolean = boolean ; boolean = true ; int = com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) ; if ( int >= NUMBER ) { com.daimajia.slider.library.Tricks.PagerAdapter . restoreState ( com.daimajia.slider.library.Tricks.Parcelable , java.lang.ClassLoader ) ; void ( int , false , true ) ; int = - NUMBER ; com.daimajia.slider.library.Tricks.Parcelable = null ; java.lang.ClassLoader = null ; } else if ( ! boolean ) { void ( ) ; } else { requestLayout ( ) ; } } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnAdapterChangeListener != null && com.daimajia.slider.library.Tricks.PagerAdapter != com.daimajia.slider.library.Tricks.PagerAdapter ) { com.daimajia.slider.library.Tricks.ViewPagerEx.OnAdapterChangeListener . void ( com.daimajia.slider.library.Tricks.PagerAdapter , com.daimajia.slider.library.Tricks.PagerAdapter ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { for ( int int = NUMBER ; int < getChildCount ( ) ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; if ( ! com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) { removeViewAt ( int ) ; int -- ; } } }  <METHOD_END>
<METHOD_START> public com.daimajia.slider.library.Tricks.PagerAdapter com.daimajia.slider.library.Tricks.PagerAdapter ( ) { return com.daimajia.slider.library.Tricks.PagerAdapter ; }  <METHOD_END>
<METHOD_START> void void ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnAdapterChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnAdapterChangeListener ) { com.daimajia.slider.library.Tricks.ViewPagerEx.OnAdapterChangeListener = com.daimajia.slider.library.Tricks.ViewPagerEx.OnAdapterChangeListener ; }  <METHOD_END>
<METHOD_START> private int int ( ) { return getMeasuredWidth ( ) - getPaddingLeft ( ) - getPaddingRight ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { boolean = false ; void ( int , ! boolean , false ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int , boolean boolean ) { boolean = false ; void ( int , boolean , false ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> void void ( int int , boolean boolean , boolean boolean ) { void ( int , boolean , boolean , NUMBER ) ; }  <METHOD_END>
<METHOD_START> void void ( int int , boolean boolean , boolean boolean , int int ) { if ( com.daimajia.slider.library.Tricks.PagerAdapter == null || com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) <= NUMBER ) { void ( false ) ; return; } if ( ! boolean && int == int && java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) != NUMBER ) { void ( false ) ; return; } if ( int < NUMBER ) { int = NUMBER ; } else if ( int >= com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) ) { int = com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) - NUMBER ; } final int int = int ; if ( int > ( int + int ) || int < ( int - int ) ) { for ( int int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) . boolean = true ; } } final boolean boolean = int != int ; if ( boolean ) { int = int ; void ( int ) ; requestLayout ( ) ; } else { void ( int ) ; void ( int , boolean , int , boolean ) ; } }  <METHOD_END>
<METHOD_START> private void void ( int int , boolean boolean , int int , boolean boolean ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; int int = NUMBER ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null ) { final int int = int ( ) ; int = ( int ) ( int * java.lang.Math . float ( float , java.lang.Math . float ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float , float ) ) ) ; } if ( boolean ) { void ( int , NUMBER , int ) ; if ( boolean ) { void ( int ) ; } } else { if ( boolean ) { void ( int ) ; } void ( false ) ; scrollTo ( int , NUMBER ) ; boolean ( int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ) { if ( ! java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener> . boolean ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ) ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener> . boolean ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ) ; } }  <METHOD_END>
<METHOD_START> public void void ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener> . boolean ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean , com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer ) { final boolean boolean = com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer != null ; final boolean boolean = boolean != ( com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer != null ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer = com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer ; void ( boolean ) ; if ( boolean ) { int = boolean ? int : int ; } else { int = int ; } if ( boolean ) void ( ) ; }  <METHOD_END>
<METHOD_START> void void ( boolean boolean ) { if ( Build . VERSION . SDK_INT >= NUMBER ) { if ( java.lang.reflect.Method == null ) { try { java.lang.reflect.Method = ViewGroup .class . java.lang.reflect.Method ( STRING , new java.lang.Class [] { java.lang.Boolean . java.lang.Class<java.lang.Boolean> } ) ; } catch ( java.lang.NoSuchMethodException java.lang.NoSuchMethodException ) { Log . e ( java.lang.String , STRING , java.lang.NoSuchMethodException ) ; } } try { java.lang.reflect.Method . java.lang.Object ( this , boolean ) ; } catch ( java.lang.Exception java.lang.Exception ) { Log . e ( java.lang.String , STRING , java.lang.Exception ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected int int ( int int , int int ) { final int int = int == int ? int - NUMBER - int : int ; final int int = ( ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) java.util.ArrayList<com.daimajia.slider.library.Tricks.View> . get ( int ) . getLayoutParams ( ) ) . int ; return int ; }  <METHOD_END>
<METHOD_START> com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ) { com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener = com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ; com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener = com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ; return com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if ( int < int ) { Log . w ( java.lang.String , STRING + int + STRING + int ) ; int = int ; } if ( int != int ) { int = int ; void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int ) { final int int = int ; int = int ; final int int = getWidth ( ) ; void ( int , int , int , int ) ; requestLayout ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( Drawable com.daimajia.slider.library.Tricks.Drawable ) { com.daimajia.slider.library.Tricks.Drawable = com.daimajia.slider.library.Tricks.Drawable ; if ( com.daimajia.slider.library.Tricks.Drawable != null ) refreshDrawableState ( ) ; setWillNotDraw ( com.daimajia.slider.library.Tricks.Drawable == null ) ; invalidate ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { void ( getContext ( ) . getResources ( ) . getDrawable ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( Drawable com.daimajia.slider.library.Tricks.Drawable ) { return super. verifyDrawable ( com.daimajia.slider.library.Tricks.Drawable ) || com.daimajia.slider.library.Tricks.Drawable == com.daimajia.slider.library.Tricks.Drawable ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. drawableStateChanged ( ) ; final Drawable com.daimajia.slider.library.Tricks.Drawable = com.daimajia.slider.library.Tricks.Drawable ; if ( com.daimajia.slider.library.Tricks.Drawable != null && com.daimajia.slider.library.Tricks.Drawable . isStateful ( ) ) { com.daimajia.slider.library.Tricks.Drawable . setState ( getDrawableState ( ) ) ; } }  <METHOD_END>
<METHOD_START> float float ( float float ) { float -= NUMBER ; float *= NUMBER * java.lang.Math . double / NUMBER ; return ( float ) java.lang.Math . double ( float ) ; }  <METHOD_END>
<METHOD_START> void void ( int int , int int ) { void ( int , int , NUMBER ) ; }  <METHOD_END>
<METHOD_START> void void ( int int , int int , int int ) { if ( getChildCount ( ) == NUMBER ) { void ( false ) ; return; } int int = getScrollX ( ) ; int int = getScrollY ( ) ; int int = int - int ; int int = int - int ; if ( int == NUMBER && int == NUMBER ) { void ( false ) ; void ( ) ; void ( int ) ; return; } void ( true ) ; void ( int ) ; final int int = int ( ) ; final int int = int / NUMBER ; final float float = java.lang.Math . float ( NUMBER , NUMBER * java.lang.Math . int ( int ) / int ) ; final float float = int + int * float ( float ) ; int int = NUMBER ; int = java.lang.Math . int ( int ) ; if ( int > NUMBER ) { int = NUMBER * java.lang.Math . int ( NUMBER * java.lang.Math . float ( float / int ) ) ; } else { final float float = int * com.daimajia.slider.library.Tricks.PagerAdapter . getPageWidth ( int ) ; final float float = ( float ) java.lang.Math . int ( int ) / ( float + int ) ; int = ( int ) ( ( float + NUMBER ) * NUMBER ) ; } int = java.lang.Math . int ( int , int ) ; com.daimajia.slider.library.Tricks.Scroller . startScroll ( int , int , int , int , int ) ; ViewCompat . postInvalidateOnAnimation ( this ) ; }  <METHOD_END>
<METHOD_START> com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int int , int int ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = new com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int = int ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object = com.daimajia.slider.library.Tricks.PagerAdapter . instantiateItem ( this , int ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float = com.daimajia.slider.library.Tricks.PagerAdapter . getPageWidth ( int ) ; if ( int < NUMBER || int >= java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . boolean ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ) ; } else { java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . void ( int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ) ; } return com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; }  <METHOD_END>
<METHOD_START> void void ( ) { final int int = com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) ; int = int ; boolean boolean = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) < int * NUMBER + NUMBER && java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) < int ; int int = int ; boolean boolean = false ; for ( int int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; final int int = com.daimajia.slider.library.Tricks.PagerAdapter . getItemPosition ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object ) ; if ( int == PagerAdapter . POSITION_UNCHANGED ) { continue; } if ( int == PagerAdapter . POSITION_NONE ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; int -- ; if ( ! boolean ) { com.daimajia.slider.library.Tricks.PagerAdapter . startUpdate ( this ) ; boolean = true ; } com.daimajia.slider.library.Tricks.PagerAdapter . destroyItem ( this , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object ) ; boolean = true ; if ( int == com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { int = java.lang.Math . int ( NUMBER , java.lang.Math . int ( int , int - NUMBER ) ) ; boolean = true ; } continue; } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int != int ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int ) { int = int ; } com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int = int ; boolean = true ; } } if ( boolean ) { com.daimajia.slider.library.Tricks.PagerAdapter . finishUpdate ( this ) ; } java.util.Collections . void ( java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> , java.util.Comparator<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> ) ; if ( boolean ) { final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; if ( ! com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) { com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . float = NUMBER ; } } void ( int , false , true ) ; requestLayout ( ) ; } }  <METHOD_END>
<METHOD_START> void void ( ) { void ( int ) ; }  <METHOD_END>
<METHOD_START> void void ( int int ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = null ; int int = View . FOCUS_FORWARD ; if ( int != int ) { int = int < int ? View . FOCUS_RIGHT : View . FOCUS_LEFT ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; int = int ; } if ( com.daimajia.slider.library.Tricks.PagerAdapter == null ) { void ( ) ; return; } if ( boolean ) { if ( boolean ) Log . i ( java.lang.String , STRING ) ; void ( ) ; return; } if ( getWindowToken ( ) == null ) { return; } com.daimajia.slider.library.Tricks.PagerAdapter . startUpdate ( this ) ; final int int = int ; final int int = java.lang.Math . int ( NUMBER , int - int ) ; final int int = com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) ; final int int = java.lang.Math . int ( int - NUMBER , int + int ) ; if ( int != int ) { java.lang.String java.lang.String ; try { java.lang.String = getResources ( ) . getResourceName ( getId ( ) ) ; } catch ( Resources . Resources Resources.NotFoundException ) { java.lang.String = java.lang.Integer . java.lang.String ( getId ( ) ) ; } throw new java.lang.IllegalStateException ( STRING + STRING + STRING + int + STRING + int + STRING + java.lang.String + STRING + java.lang.Class<? extends com.daimajia.slider.library.Tricks.ViewPagerEx> ( ) + STRING + com.daimajia.slider.library.Tricks.PagerAdapter . getClass ( ) ) ; } int int = - NUMBER ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = null ; for ( int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int >= int ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int ) com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; break; } } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo == null && int > NUMBER ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int , int ) ; } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null ) { float float = NUMBER ; int int = int - NUMBER ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = int >= NUMBER ? java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) : null ; final int int = int ( ) ; final float float = int <= NUMBER ? NUMBER : NUMBER - com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + ( float ) getPaddingLeft ( ) / ( float ) int ; for ( int int = int - NUMBER ; int >= NUMBER ; int -- ) { if ( float >= float && int < int ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo == null ) { break; } if ( int == com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int && ! com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . boolean ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; com.daimajia.slider.library.Tricks.PagerAdapter . destroyItem ( this , int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object ) ; if ( boolean ) { Log . i ( java.lang.String , STRING + int + STRING + ( ( View ) com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object ) ) ; } int -- ; int -- ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = int >= NUMBER ? java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) : null ; } } else if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null && int == com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { float += com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; int -- ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = int >= NUMBER ? java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) : null ; } else { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int , int + NUMBER ) ; float += com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; int ++ ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = int >= NUMBER ? java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) : null ; } } float float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; int = int + NUMBER ; if ( float < NUMBER ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ? java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) : null ; final float float = int <= NUMBER ? NUMBER : ( float ) getPaddingRight ( ) / ( float ) int + NUMBER ; for ( int int = int + NUMBER ; int < int ; int ++ ) { if ( float >= float && int > int ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo == null ) { break; } if ( int == com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int && ! com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . boolean ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; com.daimajia.slider.library.Tricks.PagerAdapter . destroyItem ( this , int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object ) ; if ( boolean ) { Log . i ( java.lang.String , STRING + int + STRING + ( ( View ) com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object ) ) ; } com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ? java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) : null ; } } else if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null && int == com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { float += com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; int ++ ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ? java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) : null ; } else { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int , int ) ; int ++ ; float += com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ? java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) : null ; } } } void ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo , int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ) ; } if ( boolean ) { Log . i ( java.lang.String , STRING ) ; for ( int int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { Log . i ( java.lang.String , STRING + int + STRING + java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) . int ) ; } } com.daimajia.slider.library.Tricks.PagerAdapter . setPrimaryItem ( this , int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null ? com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object : null ) ; com.daimajia.slider.library.Tricks.PagerAdapter . finishUpdate ( this ) ; final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int = int ; if ( ! com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean && com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . float == NUMBER ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null ) { com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ; } } } void ( ) ; if ( hasFocus ( ) ) { View com.daimajia.slider.library.Tricks.View = findFocus ( ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.View != null ? com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) : null ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo == null || com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int != int ) { for ( int int = NUMBER ; int < getChildCount ( ) ; int ++ ) { View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null && com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int ) { if ( com.daimajia.slider.library.Tricks.View . requestFocus ( int ) ) { break; } } } } } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( int != int ) { if ( java.util.ArrayList<com.daimajia.slider.library.Tricks.View> == null ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.View> = new java.util.ArrayList<com.daimajia.slider.library.Tricks.View> < View > ( ) ; } else { java.util.ArrayList<com.daimajia.slider.library.Tricks.View> . clear ( ) ; } final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; java.util.ArrayList<com.daimajia.slider.library.Tricks.View> . add ( com.daimajia.slider.library.Tricks.View ) ; } java.util.Collections . void ( java.util.ArrayList<com.daimajia.slider.library.Tricks.View> , com.daimajia.slider.library.Tricks.ViewPagerEx.ViewPositionComparator ) ; } }  <METHOD_END>
<METHOD_START> private void void ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo , int int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ) { final int int = com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) ; final int int = int ( ) ; final float float = int > NUMBER ? ( float ) int / int : NUMBER ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null ) { final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ; if ( int < com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { int int = NUMBER ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = null ; float float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ; for ( int int = int + NUMBER ; int <= com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int && int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; while ( int > com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int && int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) - NUMBER ) { int ++ ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; } while ( int < com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { float += com.daimajia.slider.library.Tricks.PagerAdapter . getPageWidth ( int ) + float ; int ++ ; } com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float = float ; float += com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ; } } else if ( int > com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { int int = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) - NUMBER ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = null ; float float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; for ( int int = int - NUMBER ; int >= com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int && int >= NUMBER ; int -- ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; while ( int < com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int && int > NUMBER ) { int -- ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; } while ( int > com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { float -= com.daimajia.slider.library.Tricks.PagerAdapter . getPageWidth ( int ) + float ; int -- ; } float -= com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float = float ; } } } final int int = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; float float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; int int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int - NUMBER ; float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == NUMBER ? com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float : - java.lang.Float . float ; float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int - NUMBER ? com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float - NUMBER : java.lang.Float . float ; for ( int int = int - NUMBER ; int >= NUMBER ; int -- , int -- ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; while ( int > com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { float -= com.daimajia.slider.library.Tricks.PagerAdapter . getPageWidth ( int -- ) + float ; } float -= com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float = float ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == NUMBER ) float = float ; } float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ; int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int + NUMBER ; for ( int int = int + NUMBER ; int < int ; int ++ , int ++ ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; while ( int < com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { float += com.daimajia.slider.library.Tricks.PagerAdapter . getPageWidth ( int ++ ) + float ; } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int - NUMBER ) { float = float + com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float - NUMBER ; } com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float = float ; float += com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ; } boolean = false ; }  <METHOD_END>
<METHOD_START> public void ( Parcelable com.daimajia.slider.library.Tricks.Parcelable ) { super( com.daimajia.slider.library.Tricks.Parcelable ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Parcel com.daimajia.slider.library.Tricks.Parcel , int int ) { super. writeToParcel ( com.daimajia.slider.library.Tricks.Parcel , int ) ; com.daimajia.slider.library.Tricks.Parcel . writeInt ( int ) ; com.daimajia.slider.library.Tricks.Parcel . writeParcelable ( com.daimajia.slider.library.Tricks.Parcelable , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + java.lang.Integer . java.lang.String ( java.lang.System . int ( this ) ) + STRING + int + STRING ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState ( Parcel com.daimajia.slider.library.Tricks.Parcel , java.lang.ClassLoader java.lang.ClassLoader ) { return new com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState ( com.daimajia.slider.library.Tricks.Parcel , java.lang.ClassLoader ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState [] com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState[] ( int int ) { return new com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState [ int ] ; }  <METHOD_END>
<METHOD_START> void ( Parcel com.daimajia.slider.library.Tricks.Parcel , java.lang.ClassLoader java.lang.ClassLoader ) { super( com.daimajia.slider.library.Tricks.Parcel ); if ( java.lang.ClassLoader == null ) { java.lang.ClassLoader = java.lang.Class<? extends com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState> ( ) . java.lang.ClassLoader ( ) ; } int = com.daimajia.slider.library.Tricks.Parcel . readInt ( ) ; com.daimajia.slider.library.Tricks.Parcelable = com.daimajia.slider.library.Tricks.Parcel . readParcelable ( java.lang.ClassLoader ) ; this . java.lang.ClassLoader = java.lang.ClassLoader ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.daimajia.slider.library.Tricks.Parcelable com.daimajia.slider.library.Tricks.Parcelable ( ) { Parcelable com.daimajia.slider.library.Tricks.Parcelable = super. onSaveInstanceState ( ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState = new com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState ( com.daimajia.slider.library.Tricks.Parcelable ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . int = int ; if ( com.daimajia.slider.library.Tricks.PagerAdapter != null ) { com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . com.daimajia.slider.library.Tricks.Parcelable = com.daimajia.slider.library.Tricks.PagerAdapter . saveState ( ) ; } return com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Parcelable com.daimajia.slider.library.Tricks.Parcelable ) { if ( ! ( com.daimajia.slider.library.Tricks.Parcelable instanceof com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState ) ) { super. onRestoreInstanceState ( com.daimajia.slider.library.Tricks.Parcelable ) ; return; } com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState = ( com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState ) com.daimajia.slider.library.Tricks.Parcelable ; super. onRestoreInstanceState ( com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . getSuperState ( ) ) ; if ( com.daimajia.slider.library.Tricks.PagerAdapter != null ) { com.daimajia.slider.library.Tricks.PagerAdapter . restoreState ( com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . com.daimajia.slider.library.Tricks.Parcelable , com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . java.lang.ClassLoader ) ; void ( com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . int , false , true ) ; } else { int = com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . int ; com.daimajia.slider.library.Tricks.Parcelable = com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . com.daimajia.slider.library.Tricks.Parcelable ; java.lang.ClassLoader = com.daimajia.slider.library.Tricks.ViewPagerEx.SavedState . java.lang.ClassLoader ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Tricks.View , int int , ViewGroup . ViewGroup ViewGroup.LayoutParams ) { if ( ! boolean ( ViewGroup.LayoutParams ) ) { ViewGroup.LayoutParams = ViewGroup.LayoutParams ( ViewGroup.LayoutParams ) ; } final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) ViewGroup.LayoutParams ; com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean |= com.daimajia.slider.library.Tricks.View instanceof com.daimajia.slider.library.Tricks.ViewPagerEx.Decor ; if ( boolean ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams != null && com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean = true ; addViewInLayout ( com.daimajia.slider.library.Tricks.View , int , ViewGroup.LayoutParams ) ; } else { super. addView ( com.daimajia.slider.library.Tricks.View , int , ViewGroup.LayoutParams ) ; } if ( boolean ) { if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) != GONE ) { com.daimajia.slider.library.Tricks.View . setDrawingCacheEnabled ( boolean ) ; } else { com.daimajia.slider.library.Tricks.View . setDrawingCacheEnabled ( false ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Tricks.View ) { if ( boolean ) { removeViewInLayout ( com.daimajia.slider.library.Tricks.View ) ; } else { super. removeView ( com.daimajia.slider.library.Tricks.View ) ; } }  <METHOD_END>
<METHOD_START> com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( View com.daimajia.slider.library.Tricks.View ) { for ( int int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; if ( com.daimajia.slider.library.Tricks.PagerAdapter . isViewFromObject ( com.daimajia.slider.library.Tricks.View , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object ) ) { return com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; } } return null ; }  <METHOD_END>
<METHOD_START> com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( View com.daimajia.slider.library.Tricks.View ) { ViewParent com.daimajia.slider.library.Tricks.ViewParent ; while ( ( com.daimajia.slider.library.Tricks.ViewParent = com.daimajia.slider.library.Tricks.View . getParent ( ) ) != this ) { if ( com.daimajia.slider.library.Tricks.ViewParent == null || ! ( com.daimajia.slider.library.Tricks.ViewParent instanceof View ) ) { return null ; } com.daimajia.slider.library.Tricks.View = ( View ) com.daimajia.slider.library.Tricks.ViewParent ; } return com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) ; }  <METHOD_END>
<METHOD_START> com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int int ) { for ( int int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int ) { return com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; } } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onAttachedToWindow ( ) ; boolean = true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int ) { setMeasuredDimension ( getDefaultSize ( NUMBER , int ) , getDefaultSize ( NUMBER , int ) ) ; final int int = getMeasuredWidth ( ) ; final int int = int / NUMBER ; int = java.lang.Math . int ( int , int ) ; int int = int - getPaddingLeft ( ) - getPaddingRight ( ) ; int int = getMeasuredHeight ( ) - getPaddingTop ( ) - getPaddingBottom ( ) ; int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; ++ int ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) != GONE ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams != null && com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) { final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int & Gravity . HORIZONTAL_GRAVITY_MASK ; final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int & Gravity . VERTICAL_GRAVITY_MASK ; int int = MeasureSpec . AT_MOST ; int int = MeasureSpec . AT_MOST ; boolean boolean = int == Gravity . TOP || int == Gravity . BOTTOM ; boolean boolean = int == Gravity . LEFT || int == Gravity . RIGHT ; if ( boolean ) { int = MeasureSpec . EXACTLY ; } else if ( boolean ) { int = MeasureSpec . EXACTLY ; } int int = int ; int int = int ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . width != com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . WRAP_CONTENT ) { int = MeasureSpec . EXACTLY ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . width != com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . FILL_PARENT ) { int = com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . width ; } } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . height != com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . WRAP_CONTENT ) { int = MeasureSpec . EXACTLY ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . height != com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . FILL_PARENT ) { int = com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . height ; } } final int int = MeasureSpec . makeMeasureSpec ( int , int ) ; final int int = MeasureSpec . makeMeasureSpec ( int , int ) ; com.daimajia.slider.library.Tricks.View . measure ( int , int ) ; if ( boolean ) { int -= com.daimajia.slider.library.Tricks.View . getMeasuredHeight ( ) ; } else if ( boolean ) { int -= com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) ; } } } } int = MeasureSpec . makeMeasureSpec ( int , MeasureSpec . EXACTLY ) ; int = MeasureSpec . makeMeasureSpec ( int , MeasureSpec . EXACTLY ) ; boolean = true ; void ( ) ; boolean = false ; int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; ++ int ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) != GONE ) { if ( boolean ) Log . v ( java.lang.String , STRING + int + STRING + com.daimajia.slider.library.Tricks.View + STRING + int ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams == null || ! com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) { final int int = MeasureSpec . makeMeasureSpec ( ( int ) ( int * com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . float ) , MeasureSpec . EXACTLY ) ; com.daimajia.slider.library.Tricks.View . measure ( int , int ) ; } } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int , int int , int int ) { super. onSizeChanged ( int , int , int , int ) ; if ( int != int ) { void ( int , int , int , int ) ; } }  <METHOD_END>
<METHOD_START> private void void ( int int , int int , int int , int int ) { if ( int > NUMBER && ! java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . boolean ( ) ) { final int int = int - getPaddingLeft ( ) - getPaddingRight ( ) + int ; final int int = int - getPaddingLeft ( ) - getPaddingRight ( ) + int ; final int int = getScrollX ( ) ; final float float = ( float ) int / int ; final int int = ( int ) ( float * int ) ; scrollTo ( int , getScrollY ( ) ) ; if ( ! com.daimajia.slider.library.Tricks.Scroller . isFinished ( ) ) { final int int = com.daimajia.slider.library.Tricks.Scroller . getDuration ( ) - com.daimajia.slider.library.Tricks.Scroller . timePassed ( ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; com.daimajia.slider.library.Tricks.Scroller . startScroll ( int , NUMBER , ( int ) ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float * int ) , NUMBER , int ) ; } } else { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; final float float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null ? java.lang.Math . float ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float , float ) : NUMBER ; final int int = ( int ) ( float * ( int - getPaddingLeft ( ) - getPaddingRight ( ) ) ) ; if ( int != getScrollX ( ) ) { void ( false ) ; scrollTo ( int , getScrollY ( ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( boolean boolean , int int , int int , int int , int int ) { final int int = getChildCount ( ) ; int int = int - int ; int int = int - int ; int int = getPaddingLeft ( ) ; int int = getPaddingTop ( ) ; int int = getPaddingRight ( ) ; int int = getPaddingBottom ( ) ; final int int = getScrollX ( ) ; int int = NUMBER ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) != GONE ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; int int = NUMBER ; int int = NUMBER ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) { final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int & Gravity . HORIZONTAL_GRAVITY_MASK ; final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int & Gravity . VERTICAL_GRAVITY_MASK ; switch ( int ) { default: int = int ; break; case Gravity . LEFT : int = int ; int += com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) ; break; case Gravity . CENTER_HORIZONTAL : int = java.lang.Math . int ( ( int - com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) ) / NUMBER , int ) ; break; case Gravity . RIGHT : int = int - int - com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) ; int += com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) ; break; } switch ( int ) { default: int = int ; break; case Gravity . TOP : int = int ; int += com.daimajia.slider.library.Tricks.View . getMeasuredHeight ( ) ; break; case Gravity . CENTER_VERTICAL : int = java.lang.Math . int ( ( int - com.daimajia.slider.library.Tricks.View . getMeasuredHeight ( ) ) / NUMBER , int ) ; break; case Gravity . BOTTOM : int = int - int - com.daimajia.slider.library.Tricks.View . getMeasuredHeight ( ) ; int += com.daimajia.slider.library.Tricks.View . getMeasuredHeight ( ) ; break; } int += int ; com.daimajia.slider.library.Tricks.View . layout ( int , int , int + com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) , int + com.daimajia.slider.library.Tricks.View . getMeasuredHeight ( ) ) ; int ++ ; } } } final int int = int - int - int ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) != GONE ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; if ( ! com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean && ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) ) != null ) { int int = ( int ) ( int * com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ) ; int int = int + int ; int int = int ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) { com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean = false ; final int int = MeasureSpec . makeMeasureSpec ( ( int ) ( int * com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . float ) , MeasureSpec . EXACTLY ) ; final int int = MeasureSpec . makeMeasureSpec ( ( int ) ( int - int - int ) , MeasureSpec . EXACTLY ) ; com.daimajia.slider.library.Tricks.View . measure ( int , int ) ; } if ( boolean ) Log . v ( java.lang.String , STRING + int + STRING + com.daimajia.slider.library.Tricks.View + STRING + com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . java.lang.Object + STRING + int + STRING + int + STRING + com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) + STRING + com.daimajia.slider.library.Tricks.View . getMeasuredHeight ( ) ) ; com.daimajia.slider.library.Tricks.View . layout ( int , int , int + com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) , int + com.daimajia.slider.library.Tricks.View . getMeasuredHeight ( ) ) ; } } } int = int ; int = int - int ; int = int ; if ( boolean ) { void ( int , false , NUMBER , false ) ; } boolean = false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( ! com.daimajia.slider.library.Tricks.Scroller . isFinished ( ) && com.daimajia.slider.library.Tricks.Scroller . computeScrollOffset ( ) ) { int int = getScrollX ( ) ; int int = getScrollY ( ) ; int int = com.daimajia.slider.library.Tricks.Scroller . getCurrX ( ) ; int int = com.daimajia.slider.library.Tricks.Scroller . getCurrY ( ) ; if ( int != int || int != int ) { scrollTo ( int , int ) ; if ( ! boolean ( int ) ) { com.daimajia.slider.library.Tricks.Scroller . abortAnimation ( ) ; scrollTo ( NUMBER , int ) ; } } ViewCompat . postInvalidateOnAnimation ( this ) ; return; } void ( true ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( int int ) { if ( java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) == NUMBER ) { boolean = false ; void ( NUMBER , NUMBER , NUMBER ) ; if ( ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } return false ; } final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( ) ; final int int = int ( ) ; final int int = int + int ; final float float = ( float ) int / int ; final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ; final float float = ( ( ( float ) int / int ) - com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ) / ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ) ; final int int = ( int ) ( float * int ) ; boolean = false ; void ( int , float , int ) ; if ( ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } return true ; }  <METHOD_END>
<METHOD_START> protected void void ( int int , float float , int int ) { if ( int > NUMBER ) { final int int = getScrollX ( ) ; int int = getPaddingLeft ( ) ; int int = getPaddingRight ( ) ; final int int = getWidth ( ) ; final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; if ( ! com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) continue; final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int & Gravity . HORIZONTAL_GRAVITY_MASK ; int int = NUMBER ; switch ( int ) { default: int = int ; break; case Gravity . LEFT : int = int ; int += com.daimajia.slider.library.Tricks.View . getWidth ( ) ; break; case Gravity . CENTER_HORIZONTAL : int = java.lang.Math . int ( ( int - com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) ) / NUMBER , int ) ; break; case Gravity . RIGHT : int = int - int - com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) ; int += com.daimajia.slider.library.Tricks.View . getMeasuredWidth ( ) ; break; } int += int ; final int int = int - com.daimajia.slider.library.Tricks.View . getLeft ( ) ; if ( int != NUMBER ) { com.daimajia.slider.library.Tricks.View . offsetLeftAndRight ( int ) ; } } } for ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener : java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener> ) { if ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener != null ) { com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener . void ( int , float , int ) ; } } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener != null ) { com.daimajia.slider.library.Tricks.ViewPagerEx.OnPageChangeListener . void ( int , float , int ) ; } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer != null ) { final int int = getScrollX ( ) ; final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) continue; final float float = ( float ) ( com.daimajia.slider.library.Tricks.View . getLeft ( ) - int ) / int ( ) ; com.daimajia.slider.library.Tricks.ViewPagerEx.PageTransformer . void ( com.daimajia.slider.library.Tricks.View , float ) ; } } boolean = true ; }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { boolean boolean = int == int ; if ( boolean ) { void ( false ) ; com.daimajia.slider.library.Tricks.Scroller . abortAnimation ( ) ; int int = getScrollX ( ) ; int int = getScrollY ( ) ; int int = com.daimajia.slider.library.Tricks.Scroller . getCurrX ( ) ; int int = com.daimajia.slider.library.Tricks.Scroller . getCurrY ( ) ; if ( int != int || int != int ) { scrollTo ( int , int ) ; } } boolean = false ; for ( int int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . boolean ) { boolean = true ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . boolean = false ; } } if ( boolean ) { if ( boolean ) { ViewCompat . postOnAnimation ( this , java.lang.Runnable ) ; } else { java.lang.Runnable . void ( ) ; } } }  <METHOD_END>
<METHOD_START> private boolean boolean ( float float , float float ) { return ( float < int && float > NUMBER ) || ( float > getWidth ( ) - int && float < NUMBER ) ; }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final int int = boolean ? ViewCompat . LAYER_TYPE_HARDWARE : ViewCompat . LAYER_TYPE_NONE ; ViewCompat . setLayerType ( getChildAt ( int ) , int , null ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent com.daimajia.slider.library.Tricks.MotionEvent ) { final int int = com.daimajia.slider.library.Tricks.MotionEvent . getAction ( ) & MotionEventCompat . ACTION_MASK ; if ( int == MotionEvent . ACTION_CANCEL || int == MotionEvent . ACTION_UP ) { if ( boolean ) Log . v ( java.lang.String , STRING ) ; boolean = false ; boolean = false ; int = int ; if ( com.daimajia.slider.library.Tricks.VelocityTracker != null ) { com.daimajia.slider.library.Tricks.VelocityTracker . recycle ( ) ; com.daimajia.slider.library.Tricks.VelocityTracker = null ; } return false ; } if ( int != MotionEvent . ACTION_DOWN ) { if ( boolean ) { if ( boolean ) Log . v ( java.lang.String , STRING ) ; return true ; } if ( boolean ) { if ( boolean ) Log . v ( java.lang.String , STRING ) ; return false ; } } switch ( int ) { case MotionEvent . ACTION_MOVE : { final int int = int ; if ( int == int ) { break; } final int int = MotionEventCompat . findPointerIndex ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final float float = MotionEventCompat . getX ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final float float = float - float ; final float float = java.lang.Math . float ( float ) ; final float float = MotionEventCompat . getY ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final float float = java.lang.Math . float ( float - float ) ; if ( boolean ) Log . v ( java.lang.String , STRING + float + STRING + float + STRING + float + STRING + float ) ; if ( float != NUMBER && ! boolean ( float , float ) && boolean ( this , false , ( int ) float , ( int ) float , ( int ) float ) ) { float = float ; float = float ; boolean = true ; return false ; } if ( float > int && float * NUMBER > float ) { if ( boolean ) Log . v ( java.lang.String , STRING ) ; boolean = true ; void ( true ) ; void ( int ) ; float = float > NUMBER ? float + int : float - int ; float = float ; void ( true ) ; } else if ( float > int ) { if ( boolean ) Log . v ( java.lang.String , STRING ) ; boolean = true ; } if ( boolean ) { if ( boolean ( float ) ) { ViewCompat . postInvalidateOnAnimation ( this ) ; } } break; } case MotionEvent . ACTION_DOWN : { float = float = com.daimajia.slider.library.Tricks.MotionEvent . getX ( ) ; float = float = com.daimajia.slider.library.Tricks.MotionEvent . getY ( ) ; int = MotionEventCompat . getPointerId ( com.daimajia.slider.library.Tricks.MotionEvent , NUMBER ) ; boolean = false ; com.daimajia.slider.library.Tricks.Scroller . computeScrollOffset ( ) ; if ( int == int && java.lang.Math . int ( com.daimajia.slider.library.Tricks.Scroller . getFinalX ( ) - com.daimajia.slider.library.Tricks.Scroller . getCurrX ( ) ) > int ) { com.daimajia.slider.library.Tricks.Scroller . abortAnimation ( ) ; boolean = false ; void ( ) ; boolean = true ; void ( true ) ; void ( int ) ; } else { void ( false ) ; boolean = false ; } if ( boolean ) Log . v ( java.lang.String , STRING + float + STRING + float + STRING + boolean + STRING + boolean ) ; break; } case MotionEventCompat . ACTION_POINTER_UP : void ( com.daimajia.slider.library.Tricks.MotionEvent ) ; break; } if ( com.daimajia.slider.library.Tricks.VelocityTracker == null ) { com.daimajia.slider.library.Tricks.VelocityTracker = VelocityTracker . obtain ( ) ; } com.daimajia.slider.library.Tricks.VelocityTracker . addMovement ( com.daimajia.slider.library.Tricks.MotionEvent ) ; return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MotionEvent com.daimajia.slider.library.Tricks.MotionEvent ) { if ( boolean ) { return true ; } if ( com.daimajia.slider.library.Tricks.MotionEvent . getAction ( ) == MotionEvent . ACTION_DOWN && com.daimajia.slider.library.Tricks.MotionEvent . getEdgeFlags ( ) != NUMBER ) { return false ; } if ( com.daimajia.slider.library.Tricks.PagerAdapter == null || com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) == NUMBER ) { return false ; } if ( com.daimajia.slider.library.Tricks.VelocityTracker == null ) { com.daimajia.slider.library.Tricks.VelocityTracker = VelocityTracker . obtain ( ) ; } com.daimajia.slider.library.Tricks.VelocityTracker . addMovement ( com.daimajia.slider.library.Tricks.MotionEvent ) ; final int int = com.daimajia.slider.library.Tricks.MotionEvent . getAction ( ) ; boolean boolean = false ; switch ( int & MotionEventCompat . ACTION_MASK ) { case MotionEvent . ACTION_DOWN : { com.daimajia.slider.library.Tricks.Scroller . abortAnimation ( ) ; boolean = false ; void ( ) ; float = float = com.daimajia.slider.library.Tricks.MotionEvent . getX ( ) ; float = float = com.daimajia.slider.library.Tricks.MotionEvent . getY ( ) ; int = MotionEventCompat . getPointerId ( com.daimajia.slider.library.Tricks.MotionEvent , NUMBER ) ; break; } case MotionEvent . ACTION_MOVE : if ( ! boolean ) { final int int = MotionEventCompat . findPointerIndex ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final float float = MotionEventCompat . getX ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final float float = java.lang.Math . float ( float - float ) ; final float float = MotionEventCompat . getY ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final float float = java.lang.Math . float ( float - float ) ; if ( boolean ) Log . v ( java.lang.String , STRING + float + STRING + float + STRING + float + STRING + float ) ; if ( float > int && float > float ) { if ( boolean ) Log . v ( java.lang.String , STRING ) ; boolean = true ; void ( true ) ; float = float - float > NUMBER ? float + int : float - int ; float = float ; void ( int ) ; void ( true ) ; ViewParent com.daimajia.slider.library.Tricks.ViewParent = getParent ( ) ; if ( com.daimajia.slider.library.Tricks.ViewParent != null ) { com.daimajia.slider.library.Tricks.ViewParent . requestDisallowInterceptTouchEvent ( true ) ; } } } if ( boolean ) { final int int = MotionEventCompat . findPointerIndex ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final float float = MotionEventCompat . getX ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; boolean |= boolean ( float ) ; } break; case MotionEvent . ACTION_UP : if ( boolean ) { final VelocityTracker com.daimajia.slider.library.Tricks.VelocityTracker = com.daimajia.slider.library.Tricks.VelocityTracker ; com.daimajia.slider.library.Tricks.VelocityTracker . computeCurrentVelocity ( NUMBER , int ) ; int int = ( int ) VelocityTrackerCompat . getXVelocity ( com.daimajia.slider.library.Tricks.VelocityTracker , int ) ; boolean = true ; final int int = int ( ) ; final int int = getScrollX ( ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( ) ; final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ; final float float = ( ( ( float ) int / int ) - com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ) / com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; final int int = MotionEventCompat . findPointerIndex ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final float float = MotionEventCompat . getX ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; final int int = ( int ) ( float - float ) ; int int = int ( int , float , int , int ) ; void ( int , true , true , int ) ; int = int ; void ( ) ; boolean = com.daimajia.slider.library.Tricks.EdgeEffectCompat . onRelease ( ) | com.daimajia.slider.library.Tricks.EdgeEffectCompat . onRelease ( ) ; } break; case MotionEvent . ACTION_CANCEL : if ( boolean ) { void ( int , true , NUMBER , false ) ; int = int ; void ( ) ; boolean = com.daimajia.slider.library.Tricks.EdgeEffectCompat . onRelease ( ) | com.daimajia.slider.library.Tricks.EdgeEffectCompat . onRelease ( ) ; } break; case MotionEventCompat . ACTION_POINTER_DOWN : { final int int = MotionEventCompat . getActionIndex ( com.daimajia.slider.library.Tricks.MotionEvent ) ; final float float = MotionEventCompat . getX ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; float = float ; int = MotionEventCompat . getPointerId ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; break; } case MotionEventCompat . ACTION_POINTER_UP : void ( com.daimajia.slider.library.Tricks.MotionEvent ) ; float = MotionEventCompat . getX ( com.daimajia.slider.library.Tricks.MotionEvent , MotionEventCompat . findPointerIndex ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ) ; break; } if ( boolean ) { ViewCompat . postInvalidateOnAnimation ( this ) ; } return true ; }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { final ViewParent com.daimajia.slider.library.Tricks.ViewParent = getParent ( ) ; if ( com.daimajia.slider.library.Tricks.ViewParent != null ) { com.daimajia.slider.library.Tricks.ViewParent . requestDisallowInterceptTouchEvent ( boolean ) ; } }  <METHOD_END>
<METHOD_START> private boolean boolean ( float float ) { boolean boolean = false ; final float float = float - float ; float = float ; float float = getScrollX ( ) ; float float = float + float ; final int int = int ( ) ; float float = int * float ; float float = int * float ; boolean boolean = true ; boolean boolean = true ; final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( NUMBER ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) - NUMBER ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int != NUMBER ) { boolean = false ; float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float * int ; } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int != com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) - NUMBER ) { boolean = false ; float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float * int ; } if ( float < float ) { if ( boolean ) { float float = float - float ; boolean = com.daimajia.slider.library.Tricks.EdgeEffectCompat . onPull ( java.lang.Math . float ( float ) / int ) ; } float = float ; } else if ( float > float ) { if ( boolean ) { float float = float - float ; boolean = com.daimajia.slider.library.Tricks.EdgeEffectCompat . onPull ( java.lang.Math . float ( float ) / int ) ; } float = float ; } float += float - ( int ) float ; scrollTo ( ( int ) float , getScrollY ( ) ) ; boolean ( ( int ) float ) ; return boolean ; }  <METHOD_END>
<METHOD_START> private com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( ) { final int int = int ( ) ; final float float = int > NUMBER ? ( float ) getScrollX ( ) / int : NUMBER ; final float float = int > NUMBER ? ( float ) int / int : NUMBER ; int int = - NUMBER ; float float = NUMBER ; float float = NUMBER ; boolean boolean = true ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = null ; for ( int int = NUMBER ; int < java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; int ++ ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int ) ; float float ; if ( ! boolean && com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int != int + NUMBER ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float = float + float + float ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int = int + NUMBER ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float = com.daimajia.slider.library.Tricks.PagerAdapter . getPageWidth ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) ; int -- ; } float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; final float float = float ; final float float = float + com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ; if ( boolean || float >= float ) { if ( float < float || int == java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) - NUMBER ) { return com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; } } else { return com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; } boolean = false ; int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ; float = float ; float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; } return com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ; }  <METHOD_END>
<METHOD_START> private int int ( int int , float float , int int , int int ) { int int ; if ( java.lang.Math . int ( int ) > int && java.lang.Math . int ( int ) > int ) { int = int > NUMBER ? int : int + NUMBER ; } else { final float float = int >= int ? NUMBER : NUMBER ; int = ( int ) ( int + float + float ) ; } if ( java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) > NUMBER ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( NUMBER ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) - NUMBER ) ; int = java.lang.Math . int ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int , java.lang.Math . int ( int , com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) ) ; } return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Canvas com.daimajia.slider.library.Tricks.Canvas ) { super. draw ( com.daimajia.slider.library.Tricks.Canvas ) ; boolean boolean = false ; final int int = ViewCompat . getOverScrollMode ( this ) ; if ( int == ViewCompat . OVER_SCROLL_ALWAYS || ( int == ViewCompat . OVER_SCROLL_IF_CONTENT_SCROLLS && com.daimajia.slider.library.Tricks.PagerAdapter != null && com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) > NUMBER ) ) { if ( ! com.daimajia.slider.library.Tricks.EdgeEffectCompat . isFinished ( ) ) { final int int = com.daimajia.slider.library.Tricks.Canvas . save ( ) ; final int int = getHeight ( ) - getPaddingTop ( ) - getPaddingBottom ( ) ; final int int = getWidth ( ) ; com.daimajia.slider.library.Tricks.Canvas . rotate ( NUMBER ) ; com.daimajia.slider.library.Tricks.Canvas . translate ( - int + getPaddingTop ( ) , float * int ) ; com.daimajia.slider.library.Tricks.EdgeEffectCompat . setSize ( int , int ) ; boolean |= com.daimajia.slider.library.Tricks.EdgeEffectCompat . draw ( com.daimajia.slider.library.Tricks.Canvas ) ; com.daimajia.slider.library.Tricks.Canvas . restoreToCount ( int ) ; } if ( ! com.daimajia.slider.library.Tricks.EdgeEffectCompat . isFinished ( ) ) { final int int = com.daimajia.slider.library.Tricks.Canvas . save ( ) ; final int int = getWidth ( ) ; final int int = getHeight ( ) - getPaddingTop ( ) - getPaddingBottom ( ) ; com.daimajia.slider.library.Tricks.Canvas . rotate ( NUMBER ) ; com.daimajia.slider.library.Tricks.Canvas . translate ( - getPaddingTop ( ) , - ( float + NUMBER ) * int ) ; com.daimajia.slider.library.Tricks.EdgeEffectCompat . setSize ( int , int ) ; boolean |= com.daimajia.slider.library.Tricks.EdgeEffectCompat . draw ( com.daimajia.slider.library.Tricks.Canvas ) ; com.daimajia.slider.library.Tricks.Canvas . restoreToCount ( int ) ; } } else { com.daimajia.slider.library.Tricks.EdgeEffectCompat . finish ( ) ; com.daimajia.slider.library.Tricks.EdgeEffectCompat . finish ( ) ; } if ( boolean ) { ViewCompat . postInvalidateOnAnimation ( this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Canvas com.daimajia.slider.library.Tricks.Canvas ) { super. onDraw ( com.daimajia.slider.library.Tricks.Canvas ) ; if ( int > NUMBER && com.daimajia.slider.library.Tricks.Drawable != null && java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) > NUMBER && com.daimajia.slider.library.Tricks.PagerAdapter != null ) { final int int = getScrollX ( ) ; final int int = getWidth ( ) ; final float float = ( float ) int / int ; int int = NUMBER ; com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( NUMBER ) ; float float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; final int int = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) ; final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ; final int int = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( int - NUMBER ) . int ; for ( int int = int ; int < int ; int ++ ) { while ( int > com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int && int < int ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( ++ int ) ; } float float ; if ( int == com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ) { float = ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ) * int ; float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float + float ; } else { float float = com.daimajia.slider.library.Tricks.PagerAdapter . getPageWidth ( int ) ; float = ( float + float ) * int ; float += float + float ; } if ( float + int > int ) { com.daimajia.slider.library.Tricks.Drawable . setBounds ( ( int ) float , int , ( int ) ( float + int + NUMBER ) , int ) ; com.daimajia.slider.library.Tricks.Drawable . draw ( com.daimajia.slider.library.Tricks.Canvas ) ; } if ( float > int + int ) { break; } } } }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { if ( boolean ) { return false ; } boolean = true ; void ( int ) ; float = float = NUMBER ; if ( com.daimajia.slider.library.Tricks.VelocityTracker == null ) { com.daimajia.slider.library.Tricks.VelocityTracker = VelocityTracker . obtain ( ) ; } else { com.daimajia.slider.library.Tricks.VelocityTracker . clear ( ) ; } final long long = SystemClock . uptimeMillis ( ) ; final MotionEvent com.daimajia.slider.library.Tricks.MotionEvent = MotionEvent . obtain ( long , long , MotionEvent . ACTION_DOWN , NUMBER , NUMBER , NUMBER ) ; com.daimajia.slider.library.Tricks.VelocityTracker . addMovement ( com.daimajia.slider.library.Tricks.MotionEvent ) ; com.daimajia.slider.library.Tricks.MotionEvent . recycle ( ) ; long = long ; return true ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } final VelocityTracker com.daimajia.slider.library.Tricks.VelocityTracker = com.daimajia.slider.library.Tricks.VelocityTracker ; com.daimajia.slider.library.Tricks.VelocityTracker . computeCurrentVelocity ( NUMBER , int ) ; int int = ( int ) VelocityTrackerCompat . getXVelocity ( com.daimajia.slider.library.Tricks.VelocityTracker , int ) ; boolean = true ; final int int = int ( ) ; final int int = getScrollX ( ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( ) ; final int int = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int ; final float float = ( ( ( float ) int / int ) - com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ) / com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float ; final int int = ( int ) ( float - float ) ; int int = int ( int , float , int , int ) ; void ( int , true , true , int ) ; void ( ) ; boolean = false ; }  <METHOD_END>
<METHOD_START> public void void ( float float ) { if ( ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } float += float ; float float = getScrollX ( ) ; float float = float - float ; final int int = int ( ) ; float float = int * float ; float float = int * float ; final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( NUMBER ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( java.util.ArrayList<com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo> . int ( ) - NUMBER ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int != NUMBER ) { float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float * int ; } if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int != com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) - NUMBER ) { float = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . float * int ; } if ( float < float ) { float = float ; } else if ( float > float ) { float = float ; } float += float - ( int ) float ; scrollTo ( ( int ) float , getScrollY ( ) ) ; boolean ( ( int ) float ) ; final long long = SystemClock . uptimeMillis ( ) ; final MotionEvent com.daimajia.slider.library.Tricks.MotionEvent = MotionEvent . obtain ( long , long , MotionEvent . ACTION_MOVE , float , NUMBER , NUMBER ) ; com.daimajia.slider.library.Tricks.VelocityTracker . addMovement ( com.daimajia.slider.library.Tricks.MotionEvent ) ; com.daimajia.slider.library.Tricks.MotionEvent . recycle ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> private void void ( MotionEvent com.daimajia.slider.library.Tricks.MotionEvent ) { final int int = MotionEventCompat . getActionIndex ( com.daimajia.slider.library.Tricks.MotionEvent ) ; final int int = MotionEventCompat . getPointerId ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; if ( int == int ) { final int int = int == NUMBER ? NUMBER : NUMBER ; float = MotionEventCompat . getX ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; int = MotionEventCompat . getPointerId ( com.daimajia.slider.library.Tricks.MotionEvent , int ) ; if ( com.daimajia.slider.library.Tricks.VelocityTracker != null ) { com.daimajia.slider.library.Tricks.VelocityTracker . clear ( ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { boolean = false ; boolean = false ; if ( com.daimajia.slider.library.Tricks.VelocityTracker != null ) { com.daimajia.slider.library.Tricks.VelocityTracker . recycle ( ) ; com.daimajia.slider.library.Tricks.VelocityTracker = null ; } }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { if ( boolean != boolean ) { boolean = boolean ; if ( boolean ) { final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; ++ int ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) != GONE ) { com.daimajia.slider.library.Tricks.View . setDrawingCacheEnabled ( boolean ) ; } } } } }  <METHOD_END>
<METHOD_START> public boolean boolean ( int int ) { if ( com.daimajia.slider.library.Tricks.PagerAdapter == null ) { return false ; } final int int = int ( ) ; final int int = getScrollX ( ) ; if ( int < NUMBER ) { return ( int > ( int ) ( int * float ) ) ; } else if ( int > NUMBER ) { return ( int < ( int ) ( int * float ) ) ; } else { return false ; } }  <METHOD_END>
<METHOD_START> protected boolean boolean ( View com.daimajia.slider.library.Tricks.View , boolean boolean , int int , int int , int int ) { if ( com.daimajia.slider.library.Tricks.View instanceof ViewGroup ) { final ViewGroup com.daimajia.slider.library.Tricks.ViewGroup = ( ViewGroup ) com.daimajia.slider.library.Tricks.View ; final int int = com.daimajia.slider.library.Tricks.View . getScrollX ( ) ; final int int = com.daimajia.slider.library.Tricks.View . getScrollY ( ) ; final int int = com.daimajia.slider.library.Tricks.ViewGroup . getChildCount ( ) ; for ( int int = int - NUMBER ; int >= NUMBER ; int -- ) { final View com.daimajia.slider.library.Tricks.View = com.daimajia.slider.library.Tricks.ViewGroup . getChildAt ( int ) ; if ( int + int >= com.daimajia.slider.library.Tricks.View . getLeft ( ) && int + int < com.daimajia.slider.library.Tricks.View . getRight ( ) && int + int >= com.daimajia.slider.library.Tricks.View . getTop ( ) && int + int < com.daimajia.slider.library.Tricks.View . getBottom ( ) && boolean ( com.daimajia.slider.library.Tricks.View , true , int , int + int - com.daimajia.slider.library.Tricks.View . getLeft ( ) , int + int - com.daimajia.slider.library.Tricks.View . getTop ( ) ) ) { return true ; } } } return boolean && ViewCompat . canScrollHorizontally ( com.daimajia.slider.library.Tricks.View , - int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( KeyEvent com.daimajia.slider.library.Tricks.KeyEvent ) { return super. dispatchKeyEvent ( com.daimajia.slider.library.Tricks.KeyEvent ) || boolean ( com.daimajia.slider.library.Tricks.KeyEvent ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( KeyEvent com.daimajia.slider.library.Tricks.KeyEvent ) { boolean boolean = false ; if ( com.daimajia.slider.library.Tricks.KeyEvent . getAction ( ) == KeyEvent . ACTION_DOWN ) { switch ( com.daimajia.slider.library.Tricks.KeyEvent . getKeyCode ( ) ) { case KeyEvent . KEYCODE_DPAD_LEFT : boolean = boolean ( FOCUS_LEFT ) ; break; case KeyEvent . KEYCODE_DPAD_RIGHT : boolean = boolean ( FOCUS_RIGHT ) ; break; case KeyEvent . KEYCODE_TAB : if ( Build . VERSION . SDK_INT >= NUMBER ) { if ( KeyEventCompat . hasNoModifiers ( com.daimajia.slider.library.Tricks.KeyEvent ) ) { boolean = boolean ( FOCUS_FORWARD ) ; } else if ( KeyEventCompat . hasModifiers ( com.daimajia.slider.library.Tricks.KeyEvent , KeyEvent . META_SHIFT_ON ) ) { boolean = boolean ( FOCUS_BACKWARD ) ; } } break; } } return boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( int int ) { View com.daimajia.slider.library.Tricks.View = findFocus ( ) ; if ( com.daimajia.slider.library.Tricks.View == this ) { com.daimajia.slider.library.Tricks.View = null ; } else if ( com.daimajia.slider.library.Tricks.View != null ) { boolean boolean = false ; for ( ViewParent com.daimajia.slider.library.Tricks.ViewParent = com.daimajia.slider.library.Tricks.View . getParent ( ) ; com.daimajia.slider.library.Tricks.ViewParent instanceof ViewGroup ; com.daimajia.slider.library.Tricks.ViewParent = com.daimajia.slider.library.Tricks.ViewParent . getParent ( ) ) { if ( com.daimajia.slider.library.Tricks.ViewParent == this ) { boolean = true ; break; } } if ( ! boolean ) { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( com.daimajia.slider.library.Tricks.View . getClass ( ) . getSimpleName ( ) ) ; for ( ViewParent com.daimajia.slider.library.Tricks.ViewParent = com.daimajia.slider.library.Tricks.View . getParent ( ) ; com.daimajia.slider.library.Tricks.ViewParent instanceof ViewGroup ; com.daimajia.slider.library.Tricks.ViewParent = com.daimajia.slider.library.Tricks.ViewParent . getParent ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( com.daimajia.slider.library.Tricks.ViewParent . getClass ( ) . getSimpleName ( ) ) ; } Log . e ( java.lang.String , STRING + STRING + java.lang.StringBuilder . java.lang.String ( ) ) ; com.daimajia.slider.library.Tricks.View = null ; } } boolean boolean = false ; View com.daimajia.slider.library.Tricks.View = FocusFinder . getInstance ( ) . findNextFocus ( this , com.daimajia.slider.library.Tricks.View , int ) ; if ( com.daimajia.slider.library.Tricks.View != null && com.daimajia.slider.library.Tricks.View != com.daimajia.slider.library.Tricks.View ) { if ( int == View . FOCUS_LEFT ) { final int int = com.daimajia.slider.library.Tricks.Rect ( com.daimajia.slider.library.Tricks.Rect , com.daimajia.slider.library.Tricks.View ) . left ; final int int = com.daimajia.slider.library.Tricks.Rect ( com.daimajia.slider.library.Tricks.Rect , com.daimajia.slider.library.Tricks.View ) . left ; if ( com.daimajia.slider.library.Tricks.View != null && int >= int ) { boolean = boolean ( ) ; } else { boolean = com.daimajia.slider.library.Tricks.View . requestFocus ( ) ; } } else if ( int == View . FOCUS_RIGHT ) { final int int = com.daimajia.slider.library.Tricks.Rect ( com.daimajia.slider.library.Tricks.Rect , com.daimajia.slider.library.Tricks.View ) . left ; final int int = com.daimajia.slider.library.Tricks.Rect ( com.daimajia.slider.library.Tricks.Rect , com.daimajia.slider.library.Tricks.View ) . left ; if ( com.daimajia.slider.library.Tricks.View != null && int <= int ) { boolean = boolean ( ) ; } else { boolean = com.daimajia.slider.library.Tricks.View . requestFocus ( ) ; } } } else if ( int == FOCUS_LEFT || int == FOCUS_BACKWARD ) { boolean = boolean ( ) ; } else if ( int == FOCUS_RIGHT || int == FOCUS_FORWARD ) { boolean = boolean ( ) ; } if ( boolean ) { playSoundEffect ( SoundEffectConstants . getContantForFocusDirection ( int ) ) ; } return boolean ; }  <METHOD_END>
<METHOD_START> private com.daimajia.slider.library.Tricks.Rect com.daimajia.slider.library.Tricks.Rect ( Rect com.daimajia.slider.library.Tricks.Rect , View com.daimajia.slider.library.Tricks.View ) { if ( com.daimajia.slider.library.Tricks.Rect == null ) { com.daimajia.slider.library.Tricks.Rect = new Rect ( ) ; } if ( com.daimajia.slider.library.Tricks.View == null ) { com.daimajia.slider.library.Tricks.Rect . set ( NUMBER , NUMBER , NUMBER , NUMBER ) ; return com.daimajia.slider.library.Tricks.Rect ; } outRect . left = com.daimajia.slider.library.Tricks.View . getLeft ( ) ; outRect . right = com.daimajia.slider.library.Tricks.View . getRight ( ) ; outRect . top = com.daimajia.slider.library.Tricks.View . getTop ( ) ; outRect . bottom = com.daimajia.slider.library.Tricks.View . getBottom ( ) ; ViewParent com.daimajia.slider.library.Tricks.ViewParent = com.daimajia.slider.library.Tricks.View . getParent ( ) ; while ( com.daimajia.slider.library.Tricks.ViewParent instanceof ViewGroup && com.daimajia.slider.library.Tricks.ViewParent != this ) { final ViewGroup com.daimajia.slider.library.Tricks.ViewGroup = ( ViewGroup ) com.daimajia.slider.library.Tricks.ViewParent ; outRect . left += com.daimajia.slider.library.Tricks.ViewGroup . getLeft ( ) ; outRect . right += com.daimajia.slider.library.Tricks.ViewGroup . getRight ( ) ; outRect . top += com.daimajia.slider.library.Tricks.ViewGroup . getTop ( ) ; outRect . bottom += com.daimajia.slider.library.Tricks.ViewGroup . getBottom ( ) ; com.daimajia.slider.library.Tricks.ViewParent = com.daimajia.slider.library.Tricks.ViewGroup . getParent ( ) ; } return com.daimajia.slider.library.Tricks.Rect ; }  <METHOD_END>
<METHOD_START> boolean boolean ( ) { if ( int > NUMBER ) { void ( int - NUMBER , true ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> boolean boolean ( ) { if ( com.daimajia.slider.library.Tricks.PagerAdapter != null && int < ( com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) - NUMBER ) ) { void ( int + NUMBER , true ) ; return true ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.ArrayList<com.daimajia.slider.library.Tricks.View> < View > java.util.ArrayList<com.daimajia.slider.library.Tricks.View> , int int , int int ) { final int int = java.util.ArrayList<com.daimajia.slider.library.Tricks.View> . size ( ) ; final int int = getDescendantFocusability ( ) ; if ( int != FOCUS_BLOCK_DESCENDANTS ) { for ( int int = NUMBER ; int < getChildCount ( ) ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) == VISIBLE ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null && com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int ) { com.daimajia.slider.library.Tricks.View . addFocusables ( java.util.ArrayList<com.daimajia.slider.library.Tricks.View> , int , int ) ; } } } } if ( int != FOCUS_AFTER_DESCENDANTS || ( int == java.util.ArrayList<com.daimajia.slider.library.Tricks.View> . size ( ) ) ) { if ( ! isFocusable ( ) ) { return; } if ( ( int & FOCUSABLES_TOUCH_MODE ) == FOCUSABLES_TOUCH_MODE && isInTouchMode ( ) && ! isFocusableInTouchMode ( ) ) { return; } if ( java.util.ArrayList<com.daimajia.slider.library.Tricks.View> != null ) { java.util.ArrayList<com.daimajia.slider.library.Tricks.View> . add ( this ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.util.ArrayList<com.daimajia.slider.library.Tricks.View> < View > java.util.ArrayList<com.daimajia.slider.library.Tricks.View> ) { for ( int int = NUMBER ; int < getChildCount ( ) ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) == VISIBLE ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null && com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int ) { com.daimajia.slider.library.Tricks.View . addTouchables ( java.util.ArrayList<com.daimajia.slider.library.Tricks.View> ) ; } } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( int int , Rect com.daimajia.slider.library.Tricks.Rect ) { int int ; int int ; int int ; int int = getChildCount ( ) ; if ( ( int & FOCUS_FORWARD ) != NUMBER ) { int = NUMBER ; int = NUMBER ; int = int ; } else { int = int - NUMBER ; int = - NUMBER ; int = - NUMBER ; } for ( int int = int ; int != int ; int += int ) { View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) == VISIBLE ) { com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null && com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int ) { if ( com.daimajia.slider.library.Tricks.View . requestFocus ( int , com.daimajia.slider.library.Tricks.Rect ) ) { return true ; } } } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( AccessibilityEvent com.daimajia.slider.library.Tricks.AccessibilityEvent ) { if ( com.daimajia.slider.library.Tricks.AccessibilityEvent . getEventType ( ) == AccessibilityEventCompat . TYPE_VIEW_SCROLLED ) { return super. dispatchPopulateAccessibilityEvent ( com.daimajia.slider.library.Tricks.AccessibilityEvent ) ; } final int int = getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.daimajia.slider.library.Tricks.View = getChildAt ( int ) ; if ( com.daimajia.slider.library.Tricks.View . getVisibility ( ) == VISIBLE ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo = com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo ( com.daimajia.slider.library.Tricks.View ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo != null && com.daimajia.slider.library.Tricks.ViewPagerEx.ItemInfo . int == int && com.daimajia.slider.library.Tricks.View . dispatchPopulateAccessibilityEvent ( com.daimajia.slider.library.Tricks.AccessibilityEvent ) ) { return true ; } } } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected ViewGroup . ViewGroup.LayoutParams ViewGroup.LayoutParams ( ) { return new com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected ViewGroup . ViewGroup.LayoutParams ViewGroup.LayoutParams ( ViewGroup . ViewGroup ViewGroup.LayoutParams ) { return ViewGroup.LayoutParams ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ViewGroup . ViewGroup ViewGroup.LayoutParams ) { return ViewGroup.LayoutParams instanceof com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams && super. checkLayoutParams ( ViewGroup.LayoutParams ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public ViewGroup . ViewGroup.LayoutParams ViewGroup.LayoutParams ( AttributeSet com.daimajia.slider.library.Tricks.AttributeSet ) { return new com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ( getContext ( ) , com.daimajia.slider.library.Tricks.AttributeSet ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Tricks.View , AccessibilityEvent com.daimajia.slider.library.Tricks.AccessibilityEvent ) { super. onInitializeAccessibilityEvent ( com.daimajia.slider.library.Tricks.View , com.daimajia.slider.library.Tricks.AccessibilityEvent ) ; com.daimajia.slider.library.Tricks.AccessibilityEvent . setClassName ( com.daimajia.slider.library.Tricks.ViewPagerEx .class . java.lang.String ( ) ) ; final AccessibilityRecordCompat com.daimajia.slider.library.Tricks.AccessibilityRecordCompat = AccessibilityRecordCompat . obtain ( ) ; com.daimajia.slider.library.Tricks.AccessibilityRecordCompat . setScrollable ( boolean ( ) ) ; if ( com.daimajia.slider.library.Tricks.AccessibilityEvent . getEventType ( ) == AccessibilityEventCompat . TYPE_VIEW_SCROLLED && com.daimajia.slider.library.Tricks.PagerAdapter != null ) { com.daimajia.slider.library.Tricks.AccessibilityRecordCompat . setItemCount ( com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) ) ; com.daimajia.slider.library.Tricks.AccessibilityRecordCompat . setFromIndex ( int ) ; com.daimajia.slider.library.Tricks.AccessibilityRecordCompat . setToIndex ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.daimajia.slider.library.Tricks.View , AccessibilityNodeInfoCompat com.daimajia.slider.library.Tricks.AccessibilityNodeInfoCompat ) { super. onInitializeAccessibilityNodeInfo ( com.daimajia.slider.library.Tricks.View , com.daimajia.slider.library.Tricks.AccessibilityNodeInfoCompat ) ; com.daimajia.slider.library.Tricks.AccessibilityNodeInfoCompat . setClassName ( com.daimajia.slider.library.Tricks.ViewPagerEx .class . java.lang.String ( ) ) ; com.daimajia.slider.library.Tricks.AccessibilityNodeInfoCompat . setScrollable ( boolean ( ) ) ; if ( boolean ( NUMBER ) ) { com.daimajia.slider.library.Tricks.AccessibilityNodeInfoCompat . addAction ( AccessibilityNodeInfoCompat . ACTION_SCROLL_FORWARD ) ; } if ( boolean ( - NUMBER ) ) { com.daimajia.slider.library.Tricks.AccessibilityNodeInfoCompat . addAction ( AccessibilityNodeInfoCompat . ACTION_SCROLL_BACKWARD ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( View com.daimajia.slider.library.Tricks.View , int int , Bundle com.daimajia.slider.library.Tricks.Bundle ) { if ( super. performAccessibilityAction ( com.daimajia.slider.library.Tricks.View , int , com.daimajia.slider.library.Tricks.Bundle ) ) { return true ; } switch ( int ) { case AccessibilityNodeInfoCompat . ACTION_SCROLL_FORWARD : { if ( boolean ( NUMBER ) ) { void ( int + NUMBER ) ; return true ; } } return false ; case AccessibilityNodeInfoCompat . ACTION_SCROLL_BACKWARD : { if ( boolean ( - NUMBER ) ) { void ( int - NUMBER ) ; return true ; } } return false ; } return false ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { return ( com.daimajia.slider.library.Tricks.PagerAdapter != null ) && ( com.daimajia.slider.library.Tricks.PagerAdapter . getCount ( ) > NUMBER ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( FILL_PARENT , FILL_PARENT ); }  <METHOD_END>
<METHOD_START> public void ( Context com.daimajia.slider.library.Tricks.Context , AttributeSet com.daimajia.slider.library.Tricks.AttributeSet ) { super( com.daimajia.slider.library.Tricks.Context , com.daimajia.slider.library.Tricks.AttributeSet ); final TypedArray com.daimajia.slider.library.Tricks.TypedArray = com.daimajia.slider.library.Tricks.Context . obtainStyledAttributes ( com.daimajia.slider.library.Tricks.AttributeSet , int[] ) ; int = com.daimajia.slider.library.Tricks.TypedArray . getInteger ( NUMBER , Gravity . TOP ) ; com.daimajia.slider.library.Tricks.TypedArray . recycle ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( View com.daimajia.slider.library.Tricks.View , View com.daimajia.slider.library.Tricks.View ) { final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; final com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams = ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams ) com.daimajia.slider.library.Tricks.View . getLayoutParams ( ) ; if ( com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean != com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ) { return com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . boolean ? NUMBER : - NUMBER ; } return com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int - com.daimajia.slider.library.Tricks.ViewPagerEx.LayoutParams . int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Bundle ) { super. onCreate ( com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Bundle ) ; setContentView ( R . layout . activity_main ) ; ContentValues com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues = new ContentValues ( ) ; com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues . clear ( ) ; com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues . put ( AccountContract . NAME , STRING ) ; getContentResolver ( ) . insert ( AccountContract . CONTENT_URI , com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues ) ; ContentValues [] com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues[] = new ContentValues [ int ] ; for ( int int = NUMBER ; int < int ; int ++ ) { com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues = new ContentValues ( ) ; com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues . clear ( ) ; com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues . put ( AccountContract . NAME , STRING + int ) ; com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues[] [ int ] = com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues ; } getContentResolver ( ) . bulkInsert ( AccountContract . CONTENT_URI , com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentValues[] ) ; Cursor com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor = getContentResolver ( ) . query ( AccountContract . CONTENT_URI , null , null , null , null ) ; com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . moveToFirst ( ) ; do { for ( int int = NUMBER ; int < com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . getColumnCount ( ) ; int ++ ) { Log . d ( java.lang.Class<? extends com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.MainActivity> ( ) . java.lang.String ( ) , com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . getColumnName ( int ) + STRING + com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . getString ( int ) ) ; } } while ( com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . moveToNext ( ) ); com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . close ( ) ; java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderOperation> = new java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderOperation> < ContentProviderOperation > ( ) ; java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( AccountContract . CONTENT_URI ) . withValue ( AccountContract . NAME , STRING ) . build ( ) ) ; java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( AccountContract . CONTENT_URI ) . withValue ( AccountContract . NAME , STRING ) . build ( ) ) ; try { getContentResolver ( ) . applyBatch ( AccountContract . AUTHORITY , java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderOperation> ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } ContentProviderClient com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderClient = getContentResolver ( ) . acquireContentProviderClient ( AccountContract . CONTENT_URI ) ; Cursor com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor = null ; try { com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor = com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderClient . query ( AccountContract . CONTENT_URI , null , null , null , null ) ; com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . moveToFirst ( ) ; do { for ( int int = NUMBER ; int < com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . getColumnCount ( ) ; int ++ ) { Log . d ( java.lang.Class<? extends com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.MainActivity> ( ) . java.lang.String ( ) , com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . getColumnName ( int ) + STRING + com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . getString ( int ) ) ; } } while ( com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . moveToNext ( ) ); } catch ( RemoteException com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.RemoteException ) { com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.RemoteException . printStackTrace ( ) ; } finally { if ( com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor != null ) { com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Cursor . close ( ) ; } } com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.ContentProviderClient . release ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Menu com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Menu ) { getMenuInflater ( ) . inflate ( R . menu . activity_main , com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.Menu ) ; return true ; }  <METHOD_END>
<METHOD_START> public void ( ) { }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . int = NUMBER ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.SampleHelper> < SampleHelper > java.lang.Class<com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.SampleHelper> ( ) { return SampleHelper .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { setMatcherController ( new MatcherController ( ) . add ( Account .class , SubType . DIRECTORY , STRING , AccountContract . CONTENT_URI_PATTERN_MANY ) . add ( Account .class , SubType . ITEM , STRING , AccountContract . CONTENT_URI_PATTERN_ONE ) ) ; return true ; }  <METHOD_END>
<METHOD_START> public void ( Context com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.Context ) { super( com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.Context , STRING , null , NUMBER ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.SQLiteDatabase , ConnectionSource com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.ConnectionSource ) { try { TableUtils . createTableIfNotExists ( com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.ConnectionSource , Account .class ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { java.sql.SQLException . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.SQLiteDatabase , ConnectionSource com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.ConnectionSource , int int , int int ) { try { TableUtils . dropTable ( com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.ConnectionSource , Account .class , true ) ; TableUtils . createTable ( com.tojc.ormlite.android.ormlitecontentprovider.compiler.sample.provider.ConnectionSource , Account .class ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { java.sql.SQLException . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public javax.lang.model.SourceVersion javax.lang.model.SourceVersion ( ) { return javax.lang.model.SourceVersion . javax.lang.model.SourceVersion ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( final java.util.Set<? extends javax.lang.model.element.TypeElement> < ? extends javax.lang.model.element.TypeElement > java.util.Set<? extends javax.lang.model.element.TypeElement> , final javax.annotation.processing.RoundEnvironment javax.annotation.processing.RoundEnvironment ) { final java.util.Set<? extends javax.lang.model.element.Element> < ? extends javax.lang.model.element.Element > java.util.Set<? extends javax.lang.model.element.Element> = javax.annotation.processing.RoundEnvironment . java.util.Set<? extends javax.lang.model.element.Element> ( Contract .class ) ; final java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> < java.lang.String , java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > > java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> = java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> ( java.util.Set<> ) ; for ( final java.util.Map . java.util.Map.Entry<java.lang.String,java.util.Set<javax.lang.model.element.Element>> < java.lang.String , java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > > java.util.Map.Entry<java.lang.String,java.util.Set<javax.lang.model.element.Element>> : java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> . java.util.Set<java.util.Map.Entry<java.lang.String,java.util.Set<javax.lang.model.element.Element>>> ( ) ) { final java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.util.Set<javax.lang.model.element.Element>> . java.lang.String ( ) ; final java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.Set<javax.lang.model.element.Element> = java.util.Map.Entry<java.lang.String,java.util.Set<javax.lang.model.element.Element>> . java.util.Set<javax.lang.model.element.Element> ( ) ; final boolean boolean = java.util.Set<javax.lang.model.element.Element> . int ( ) > NUMBER ; final java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( '.' ) ) ; java.io.Writer java.io.Writer = null ; try { final javax.tools.JavaFileObject javax.tools.JavaFileObject = javax.annotation.processing.ProcessingEnvironment . javax.annotation.processing.Filer ( ) . javax.tools.JavaFileObject ( java.lang.String , ( javax.lang.model.element.Element [] ) null ) ; java.io.Writer = javax.tools.JavaFileObject . java.io.Writer ( ) ; final JavaWriter com.tojc.ormlite.android.compiler.JavaWriter = new JavaWriter ( java.io.Writer ) ; com.tojc.ormlite.android.compiler.JavaWriter . emitPackage ( java.lang.String ) . emitImports ( STRING ) . emitImports ( STRING ) . emitImports ( STRING ) . emitEmptyLine ( ) ; final java.lang.String java.lang.String = java.lang.String ; final java.lang.String java.lang.String = java.lang.String + STRING + java.lang.String ; if ( boolean ) { com.tojc.ormlite.android.compiler.JavaWriter . beginType ( java.lang.String , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) ) . emitField ( STRING , java.lang.String , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , JavaWriter . stringLiteral ( java.lang.String ) ) . emitField ( STRING , java.lang.String , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , JavaWriter . stringLiteral ( java.lang.String ) ) . emitEmptyLine ( ) . beginMethod ( null , java.lang.String , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier ) ) . endMethod ( ) . emitEmptyLine ( ) ; } final java.util.Iterator<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.Iterator<javax.lang.model.element.Element> = java.util.Set<javax.lang.model.element.Element> . java.util.Iterator<javax.lang.model.element.Element> ( ) ; while ( java.util.Iterator<javax.lang.model.element.Element> . boolean ( ) ) { final javax.lang.model.element.Element javax.lang.model.element.Element = java.util.Iterator<javax.lang.model.element.Element> . javax.lang.model.element.Element ( ) ; void ( com.tojc.ormlite.android.compiler.JavaWriter , javax.lang.model.element.Element , boolean , java.lang.String , java.lang.String , java.lang.String ) ; if ( java.util.Iterator<javax.lang.model.element.Element> . boolean ( ) ) { com.tojc.ormlite.android.compiler.JavaWriter . emitEmptyLine ( ) ; } } if ( boolean ) { com.tojc.ormlite.android.compiler.JavaWriter . endType ( ) ; } com.tojc.ormlite.android.compiler.JavaWriter . emitEmptyLine ( ) ; com.tojc.ormlite.android.compiler.JavaWriter . close ( ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; for ( final javax.lang.model.element.Element javax.lang.model.element.Element : java.util.Set<javax.lang.model.element.Element> ) { javax.annotation.processing.ProcessingEnvironment . javax.annotation.processing.Messager ( ) . void ( javax.tools.Diagnostic.Kind . javax.tools.Diagnostic.Kind , STRING + java.lang.String , javax.lang.model.element.Element ) ; } } finally { if ( java.io.Writer != null ) { try { java.io.Writer . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } } } } return true ; }  <METHOD_END>
<METHOD_START> private void void ( JavaWriter com.tojc.ormlite.android.compiler.JavaWriter , javax.lang.model.element.Element javax.lang.model.element.Element , boolean boolean , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) throws java.io.IOException { java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; final DatabaseTable com.tojc.ormlite.android.compiler.DatabaseTable = javax.lang.model.element.Element . A ( DatabaseTable .class ) ; if ( com.tojc.ormlite.android.compiler.DatabaseTable != null ) { java.lang.String = com.tojc.ormlite.android.compiler.DatabaseTable . tableName ( ) ; } if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = javax.lang.model.element.Element . javax.lang.model.element.Name ( ) . java.lang.String ( ) ; } java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; java.lang.String java.lang.String = STRING ; java.util.EnumSet<javax.lang.model.element.Modifier> < javax.lang.model.element.Modifier > java.util.EnumSet<javax.lang.model.element.Modifier> = null ; if ( boolean ) { java.lang.String = javax.lang.model.element.Element . javax.lang.model.element.Name ( ) . java.lang.String ( ) ; java.util.EnumSet<javax.lang.model.element.Modifier> = java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) ; } else { java.lang.String = java.lang.String . java.lang.String ( java.lang.String . int ( '.' ) + NUMBER , java.lang.String . int ( ) ) ; java.util.EnumSet<javax.lang.model.element.Modifier> = java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) ; } java.lang.String java.lang.String = STRING ; final DefaultContentUri com.tojc.ormlite.android.compiler.DefaultContentUri = javax.lang.model.element.Element . A ( DefaultContentUri .class ) ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; if ( com.tojc.ormlite.android.compiler.DefaultContentUri != null ) { java.lang.String = com.tojc.ormlite.android.compiler.DefaultContentUri . path ( ) ; java.lang.String = com.tojc.ormlite.android.compiler.DefaultContentUri . authority ( ) ; } else { java.lang.String = java.lang.String . java.lang.String ( ) ; java.lang.String = java.lang.String ; } java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; java.lang.String java.lang.String = STRING ; if ( boolean ) { if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = java.lang.String ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String ; } else { java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; } } else { if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; } else { java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; } } java.lang.String java.lang.String = STRING ; final DefaultContentMimeTypeVnd com.tojc.ormlite.android.compiler.DefaultContentMimeTypeVnd = javax.lang.model.element.Element . A ( DefaultContentMimeTypeVnd .class ) ; java.lang.String java.lang.String = STRING ; java.lang.String java.lang.String = STRING ; if ( com.tojc.ormlite.android.compiler.DefaultContentMimeTypeVnd != null ) { java.lang.String = com.tojc.ormlite.android.compiler.DefaultContentMimeTypeVnd . name ( ) ; java.lang.String = com.tojc.ormlite.android.compiler.DefaultContentMimeTypeVnd . type ( ) ; } if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = java.lang.String ; } if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( ) ; } java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; java.lang.String java.lang.String = STRING ; if ( boolean ) { if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = java.lang.String ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String ; } else { java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; } } else { if ( java.lang.String == null || java.lang.String . int ( ) == NUMBER ) { java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; } else { java.lang.String = JavaWriter . stringLiteral ( java.lang.String ) ; } } com.tojc.ormlite.android.compiler.JavaWriter . beginType ( java.lang.String , STRING , java.util.EnumSet<javax.lang.model.element.Modifier> , null , STRING ) . emitField ( STRING , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , java.lang.String ) . emitEmptyLine ( ) . emitField ( STRING , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , java.lang.String ) . emitField ( STRING , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , java.lang.String ) . emitEmptyLine ( ) . emitField ( STRING , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , java.lang.String ) . emitField ( STRING , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , java.lang.String ) . emitEmptyLine ( ) . emitField ( STRING , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , java.lang.String . java.lang.String ( int ++ ) ) . emitField ( STRING , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , java.lang.String . java.lang.String ( int ++ ) ) . emitEmptyLine ( ) . emitField ( STRING , STRING , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , java.lang.String ) . emitEmptyLine ( ) . beginMethod ( null , java.lang.String , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier ) ) . endMethod ( ) . emitEmptyLine ( ) ; final java.util.List<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.List<javax.lang.model.element.Element> = java.util.List<javax.lang.model.element.Element> ( DatabaseField .class , javax.lang.model.element.Element ) ; for ( final javax.lang.model.element.Element javax.lang.model.element.Element : java.util.List<javax.lang.model.element.Element> ) { final java.lang.String java.lang.String = javax.lang.model.element.Element . javax.lang.model.element.Name ( ) . java.lang.String ( ) ; if ( ! ( STRING . boolean ( java.lang.String ) || STRING . boolean ( javax.lang.model.element.Element . A ( DatabaseField .class ) . columnName ( ) ) ) ) { com.tojc.ormlite.android.compiler.JavaWriter . emitField ( STRING , java.lang.String . java.lang.String ( ) , java.util.EnumSet . java.util.EnumSet<javax.lang.model.element.Modifier> ( javax.lang.model.element.Modifier , javax.lang.model.element.Modifier , javax.lang.model.element.Modifier ) , JavaWriter . stringLiteral ( java.lang.String ) ) ; } } com.tojc.ormlite.android.compiler.JavaWriter . endType ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( final javax.lang.model.element.Element javax.lang.model.element.Element , final javax.lang.model.element.Element javax.lang.model.element.Element ) { if ( javax.lang.model.element.Element != null ) { final java.lang.String java.lang.String = javax.lang.model.element.Element . javax.lang.model.element.Name ( ) . java.lang.String ( ) ; final java.lang.String java.lang.String = javax.lang.model.element.Element . javax.lang.model.element.Name ( ) . java.lang.String ( ) ; return java.lang.String . int ( java.lang.String ) ; } else { if ( javax.lang.model.element.Element == null ) { return NUMBER ; } else { return - NUMBER ; } } }  <METHOD_END>
<METHOD_START> public javax.lang.model.element.PackageElement javax.lang.model.element.PackageElement ( javax.lang.model.element.Element javax.lang.model.element.Element ) { while ( javax.lang.model.element.Element . javax.lang.model.element.ElementKind ( ) != javax.lang.model.element.ElementKind . javax.lang.model.element.ElementKind ) { javax.lang.model.element.Element = javax.lang.model.element.Element . javax.lang.model.element.Element ( ) ; } return ( javax.lang.model.element.PackageElement ) javax.lang.model.element.Element ; }  <METHOD_END>
<METHOD_START> public java.util.List<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.List<javax.lang.model.element.Element> ( final java.lang.Class<? extends java.lang.annotation.Annotation> < ? extends java.lang.annotation.Annotation > java.lang.Class<? extends java.lang.annotation.Annotation> , final javax.lang.model.element.Element javax.lang.model.element.Element ) { final java.util.List<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.List<javax.lang.model.element.Element> = java.util.List<javax.lang.model.element.Element> ( javax.lang.model.element.Element , javax.lang.model.element.ElementKind . javax.lang.model.element.ElementKind ) ; final java.util.List<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.List<javax.lang.model.element.Element> = new java.util.ArrayList<javax.lang.model.element.Element> < javax.lang.model.element.Element > ( java.util.List<javax.lang.model.element.Element> . int ( ) ) ; for ( final javax.lang.model.element.Element javax.lang.model.element.Element : java.util.List<javax.lang.model.element.Element> ) { if ( javax.lang.model.element.Element . getAnnotation ( java.lang.Class<> ) != null ) { java.util.List<javax.lang.model.element.Element> . boolean ( javax.lang.model.element.Element ) ; } } return java.util.List<javax.lang.model.element.Element> ; }  <METHOD_END>
<METHOD_START> public java.util.List<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.List<javax.lang.model.element.Element> ( final javax.lang.model.element.Element javax.lang.model.element.Element , final javax.lang.model.element.ElementKind javax.lang.model.element.ElementKind ) { final java.util.List<? extends javax.lang.model.element.Element> < ? extends javax.lang.model.element.Element > java.util.List<? extends javax.lang.model.element.Element> = javax.lang.model.element.Element . java.util.List<? extends javax.lang.model.element.Element> ( ) ; final java.util.List<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.List<javax.lang.model.element.Element> = new java.util.ArrayList<javax.lang.model.element.Element> < javax.lang.model.element.Element > ( java.util.List<> . int ( ) ) ; for ( final javax.lang.model.element.Element javax.lang.model.element.Element : java.util.List<> ) { if ( javax.lang.model.element.Element . javax.lang.model.element.ElementKind ( ) == javax.lang.model.element.ElementKind ) { java.util.List<javax.lang.model.element.Element> . boolean ( javax.lang.model.element.Element ) ; } } return java.util.List<javax.lang.model.element.Element> ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> < java.lang.String , java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > > java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> ( final java.util.Collection<? extends javax.lang.model.element.Element> < ? extends javax.lang.model.element.Element > java.util.Collection<? extends javax.lang.model.element.Element> ) { final java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> < java.lang.String , java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > > java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> = new java.util.HashMap<java.lang.String,java.util.Set<javax.lang.model.element.Element>> < java.lang.String , java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > > ( ) ; for ( final javax.lang.model.element.Element javax.lang.model.element.Element : java.util.Collection<> ) { final Contract com.tojc.ormlite.android.compiler.Contract = javax.lang.model.element.Element . A ( Contract .class ) ; final java.lang.String java.lang.String = com.tojc.ormlite.android.compiler.Contract . contractClassName ( ) ; final java.lang.String java.lang.String ; if ( java.lang.String == null || java.lang.String . boolean ( ) ) { final javax.lang.model.element.PackageElement javax.lang.model.element.PackageElement = javax.lang.model.element.PackageElement ( javax.lang.model.element.Element ) ; java.lang.String = javax.lang.model.element.PackageElement . javax.lang.model.element.Name ( ) . java.lang.String ( ) + '.' + javax.lang.model.element.Element . javax.lang.model.element.Name ( ) + java.lang.String ; } else { java.lang.String = java.lang.String ; } if ( java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> . boolean ( java.lang.String ) ) { java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> . java.util.Set<javax.lang.model.element.Element> ( java.lang.String ) . boolean ( javax.lang.model.element.Element ) ; } else { final java.util.Set<javax.lang.model.element.Element> < javax.lang.model.element.Element > java.util.Set<javax.lang.model.element.Element> = new java.util.TreeSet<javax.lang.model.element.Element> < javax.lang.model.element.Element > ( java.util.Comparator<javax.lang.model.element.Element> ) ; java.util.Set<javax.lang.model.element.Element> . boolean ( javax.lang.model.element.Element ) ; java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> . java.util.Set<javax.lang.model.element.Element> ( java.lang.String , java.util.Set<javax.lang.model.element.Element> ) ; } } return java.util.Map<java.lang.String,java.util.Set<javax.lang.model.element.Element>> ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String [] java.lang.String[] ( java.lang.String java.lang.String ) { if ( java.lang.String != null ) { java.lang.String [] java.lang.String[] = new java.lang.String [ NUMBER ] ; int int = java.lang.String . int ( java.lang.String ) ; java.lang.String[] [ NUMBER ] = java.lang.String . java.lang.String ( NUMBER , int ) . java.lang.String ( ) ; java.lang.String[] [ NUMBER ] = java.lang.String ; return java.lang.String[] ; } return new java.lang.String [] { java.lang.String ( ) } ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected abstract java.util.Collection<javax.annotation.processing.Processor> < javax.annotation.processing.Processor > java.util.Collection<javax.annotation.processing.Processor> ( )  <METHOD_END>
<METHOD_START> protected java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> < javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> < ? extends javax.tools.JavaFileObject > > java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ( java.lang.Class<?> < ? > ... java.lang.Class<?>[] ) { assert java.lang.Class<?>[] != null ; java.lang.String [] java.lang.String[] = new java.lang.String [ java.lang.Class<?>[] . int ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { assert java.lang.Class<?>[] [ int ] != null ; java.lang.String[] [ int ] = java.lang.String ( java.lang.Class<?>[] [ int ] ) ; } return java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ( java.lang.String[] ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return ClassUtils . convertClassNameToResourcePath ( java.lang.Class<> . java.lang.String ( ) ) + java.lang.String ; }  <METHOD_END>
<METHOD_START> protected java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> < javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> < ? extends javax.tools.JavaFileObject > > java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ( java.lang.String ... java.lang.String[] ) { assert java.lang.String[] != null ; java.util.Collection<java.io.File> < java.io.File > java.util.Collection<java.io.File> ; try { java.util.Collection<java.io.File> = java.util.Collection<java.io.File> ( java.lang.String[] ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.IllegalArgumentException ( STRING + java.util.Arrays . java.lang.String ( java.lang.String[] ) + STRING + java.io.IOException . java.lang.String ( ) , java.io.IOException ) ; } javax.tools.DiagnosticCollector<javax.tools.JavaFileObject> < javax.tools.JavaFileObject > javax.tools.DiagnosticCollector<javax.tools.JavaFileObject> = new javax.tools.DiagnosticCollector<javax.tools.JavaFileObject> < javax.tools.JavaFileObject > ( ) ; javax.tools.StandardJavaFileManager javax.tools.StandardJavaFileManager = javax.tools.JavaCompiler . javax.tools.StandardJavaFileManager ( javax.tools.DiagnosticCollector<javax.tools.JavaFileObject> , null , null ) ; javax.tools.JavaCompiler.CompilationTask javax.tools.JavaCompiler.CompilationTask = javax.tools.JavaCompiler . javax.tools.JavaCompiler.CompilationTask ( null , javax.tools.StandardJavaFileManager , javax.tools.DiagnosticCollector<javax.tools.JavaFileObject> , java.util.List<java.lang.String> ( java.util.Arrays . java.util.List<java.lang.String> ( STRING ) ) , null , javax.tools.StandardJavaFileManager . java.lang.Iterable<? extends javax.tools.JavaFileObject> ( java.util.Collection<java.io.File> ) ) ; javax.tools.JavaCompiler.CompilationTask . void ( java.util.Collection<javax.annotation.processing.Processor> ( ) ) ; javax.tools.JavaCompiler.CompilationTask . java.lang.Boolean ( ) ; try { javax.tools.StandardJavaFileManager . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } return javax.tools.DiagnosticCollector<javax.tools.JavaFileObject> . java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ( ) ; }  <METHOD_END>
<METHOD_START> private static java.util.Collection<java.io.File> < java.io.File > java.util.Collection<java.io.File> ( java.lang.String [] java.lang.String[] ) throws java.io.IOException { java.util.Collection<java.io.File> < java.io.File > java.util.Collection<java.io.File> = new java.util.ArrayList<java.io.File> < java.io.File > ( java.lang.String[] . int ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.util.Collection<java.io.File> . boolean ( new ClassPathResource ( java.lang.String ) . getFile ( ) ) ; } return java.util.Collection<java.io.File> ; }  <METHOD_END>
<METHOD_START> protected static void void ( java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> < javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> < ? extends javax.tools.JavaFileObject > > java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ) { assert java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> != null ; for ( javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> < ? extends javax.tools.JavaFileObject > javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> : java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ) { assertFalse ( STRING , javax.tools.Diagnostic<> . javax.tools.Diagnostic.Kind ( ) . boolean ( javax.tools.Diagnostic.Kind . javax.tools.Diagnostic.Kind ) ) ; } }  <METHOD_END>
<METHOD_START> protected static void void ( javax.tools.Diagnostic.Kind [] javax.tools.Diagnostic.Kind[] , long [] long[] , java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> < javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> < ? extends javax.tools.JavaFileObject > > java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ) { assert javax.tools.Diagnostic.Kind[] != null && long[] != null && javax.tools.Diagnostic.Kind[] . int == long[] . int ; for ( int int = NUMBER ; int < javax.tools.Diagnostic.Kind[] . int ; int ++ ) { void ( javax.tools.Diagnostic.Kind[] [ int ] , long[] [ int ] , java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ) ; } }  <METHOD_END>
<METHOD_START> protected static void void ( javax.tools.Diagnostic.Kind javax.tools.Diagnostic.Kind , long long , java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> < javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> < ? extends javax.tools.JavaFileObject > > java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ) { assert javax.tools.Diagnostic.Kind != null && java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> != null ; boolean boolean = false ; for ( javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> < ? extends javax.tools.JavaFileObject > javax.tools.Diagnostic<? extends javax.tools.JavaFileObject> : java.util.List<javax.tools.Diagnostic<? extends javax.tools.JavaFileObject>> ) { if ( javax.tools.Diagnostic<> . javax.tools.Diagnostic.Kind ( ) . boolean ( javax.tools.Diagnostic.Kind ) && javax.tools.Diagnostic<> . long ( ) == long ) { boolean = true ; } } assertTrue ( STRING + javax.tools.Diagnostic.Kind + STRING + long , boolean ) ; }  <METHOD_END>
<METHOD_START> private java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { if ( java.util.List<java.lang.String> == null ) { return java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ( ) ) ; } java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } for ( java.lang.String java.lang.String : java.lang.String[] ( ) ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> protected java.lang.String [] java.lang.String[] ( ) { return com.tojc.ormlite.android.compiler.AbstractAnnotationProcessorTest.CompilerOptions . com.tojc.ormlite.android.compiler.AbstractAnnotationProcessorTest.CompilerOptions . java.lang.String[] ( java.io.File ( ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.io.File java.io.File ( ) { java.io.File java.io.File = new java.io.File ( java.lang.String ) ; if ( ! java.io.File . boolean ( ) ) { java.io.File . boolean ( ) ; } return java.io.File ; }  <METHOD_END>
<METHOD_START> protected static void void ( java.io.File java.io.File , java.io.File java.io.File ) throws java.io.IOException { java.lang.String [] java.lang.String[] = java.lang.String[] ( java.io.File ) ; java.lang.String [] java.lang.String[] = java.lang.String[] ( java.io.File ) ; assertEquals ( java.lang.String[] . int , java.lang.String[] . int ) ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { assertEquals ( java.lang.String[] [ int ] . java.lang.String ( ) , java.lang.String[] [ int ] . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String [] java.lang.String[] ( java.io.File java.io.File ) throws java.io.IOException { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( ) ; java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader ( new java.io.FileReader ( java.io.File ) ) ; try { java.lang.String java.lang.String = null ; while ( ( java.lang.String = java.io.BufferedReader . java.lang.String ( ) ) != null ) { java.util.List<java.lang.String> . boolean ( java.lang.String ) ; } } finally { java.io.BufferedReader . void ( ) ; } return java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [] {} ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.Package java.lang.Package ) { return java.lang.String ( java.lang.Package . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String . java.lang.String ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> protected java.io.File java.io.File ( java.lang.Class<?> < ? > java.lang.Class<?> ) { return new java.io.File ( java.lang.Class<? extends com.tojc.ormlite.android.compiler.AbstractAnnotationProcessorTest> ( ) . java.net.URL ( STRING + java.lang.String ( java.lang.Class<> . java.lang.Package ( ) ) + STRING + java.lang.Class<> . java.lang.String ( ) + java.lang.String ) . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> protected java.io.File java.io.File ( java.lang.String java.lang.String ) { return new java.io.File ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.Collection<javax.annotation.processing.Processor> < javax.annotation.processing.Processor > java.util.Collection<javax.annotation.processing.Processor> ( ) { return java.util.Arrays .< javax.annotation.processing.Processor > java.util.List<javax.annotation.processing.Processor> ( new ContractAnnotationProcessor ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertCompilationSuccessful ( compileTestCase ( Pojo .class ) ) ; final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertOutput ( new java.io.File ( java.lang.String ) , new java.io.File ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertCompilationSuccessful ( compileTestCase ( Pojo2 .class ) ) ; final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertOutput ( new java.io.File ( java.lang.String ) , new java.io.File ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertCompilationSuccessful ( compileTestCase ( Pojo3 .class ) ) ; final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertOutput ( new java.io.File ( java.lang.String ) , new java.io.File ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertCompilationSuccessful ( compileTestCase ( Pojo4 .class ) ) ; final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertOutput ( new java.io.File ( java.lang.String ) , new java.io.File ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertCompilationSuccessful ( compileTestCase ( PojoWithFields1 .class ) ) ; final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertOutput ( new java.io.File ( java.lang.String ) , new java.io.File ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertCompilationSuccessful ( compileTestCase ( CombinedPojo1 .class , CombinedPojo2 .class ) ) ; final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertOutput ( new java.io.File ( java.lang.String ) , new java.io.File ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertCompilationSuccessful ( compileTestCase ( CombinedPojo3 .class , CombinedPojo4 .class ) ) ; final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertOutput ( new java.io.File ( java.lang.String ) , new java.io.File ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.io.IOException { assertCompilationSuccessful ( compileTestCase ( CombinedPojo5 .class , CombinedPojo6 .class ) ) ; final java.lang.String java.lang.String = STRING ; final java.lang.String java.lang.String = STRING ; assertOutput ( new java.io.File ( java.lang.String ) , new java.io.File ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public void ( ) { void ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . boolean = false ; }  <METHOD_END>
<METHOD_START> protected abstract boolean boolean ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return this . boolean && boolean ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( boolean boolean ) { boolean boolean = this . boolean ( ) ; java.lang.String java.lang.String = this . java.lang.Class<? extends com.tojc.ormlite.android.annotation.info.AnnotationInfoBase> ( ) . java.lang.String ( ) + STRING ; void ( boolean && ! boolean , java.lang.String ) ; return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + boolean + STRING + super. java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> protected final void void ( boolean boolean , java.lang.String java.lang.String ) { if ( boolean ) { throw new java.lang.IllegalStateException ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { DefaultContentMimeTypeVnd com.tojc.ormlite.android.annotation.info.DefaultContentMimeTypeVnd = java.lang.reflect.AnnotatedElement . T ( DefaultContentMimeTypeVnd .class ) ; java.lang.String java.lang.String = null ; java.lang.String java.lang.String = null ; if ( com.tojc.ormlite.android.annotation.info.DefaultContentMimeTypeVnd != null ) { java.lang.String = com.tojc.ormlite.android.annotation.info.DefaultContentMimeTypeVnd . name ( ) ; java.lang.String = com.tojc.ormlite.android.annotation.info.DefaultContentMimeTypeVnd . type ( ) ; } if ( java.lang.reflect.AnnotatedElement instanceof java.lang.Class<?> < ? > ) { java.lang.Class<?> < ? > java.lang.Class<?> = ( java.lang.Class<?> < ? > ) java.lang.reflect.AnnotatedElement ; if ( TextUtils . isEmpty ( java.lang.String ) ) { java.lang.String = java.lang.Class<> . java.lang.Package ( ) . java.lang.String ( ) + java.lang.String ; } if ( TextUtils . isEmpty ( java.lang.String ) ) { java.lang.String = java.lang.Class<> . java.lang.String ( ) . java.lang.String ( ) ; } } void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String + java.lang.String + this . java.lang.String + java.lang.String + this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return ! TextUtils . isEmpty ( this . java.lang.String ) && ! TextUtils . isEmpty ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; validFlagOn ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + java.lang.String + '\'' + STRING + java.lang.String + '\'' + STRING + super. java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { DefaultContentUri com.tojc.ormlite.android.annotation.info.DefaultContentUri = java.lang.reflect.AnnotatedElement . T ( DefaultContentUri .class ) ; java.lang.String java.lang.String = null ; java.lang.String java.lang.String = null ; if ( com.tojc.ormlite.android.annotation.info.DefaultContentUri != null ) { java.lang.String = com.tojc.ormlite.android.annotation.info.DefaultContentUri . authority ( ) ; java.lang.String = com.tojc.ormlite.android.annotation.info.DefaultContentUri . path ( ) ; } if ( java.lang.reflect.AnnotatedElement instanceof java.lang.Class<?> < ? > ) { java.lang.Class<?> < ? > java.lang.Class<?> = ( java.lang.Class<?> < ? > ) java.lang.reflect.AnnotatedElement ; if ( TextUtils . isEmpty ( java.lang.String ) ) { java.lang.String = java.lang.Class<> . java.lang.Package ( ) . java.lang.String ( ) ; } if ( TextUtils . isEmpty ( java.lang.String ) ) { java.lang.String = java.lang.Class<> . java.lang.String ( ) . java.lang.String ( ) ; } } void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { void ( java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.annotation.info.Uri com.tojc.ormlite.android.annotation.info.Uri ( ) { return new Uri . Uri ( ) . scheme ( ContentResolver . SCHEME_CONTENT ) . authority ( this . java.lang.String ) . appendPath ( this . java.lang.String ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return ! TextUtils . isEmpty ( this . java.lang.String ) && ! TextUtils . isEmpty ( this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; validFlagOn ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + java.lang.String + '\'' + STRING + java.lang.String + '\'' + STRING + super. java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { ProjectionMap com.tojc.ormlite.android.annotation.info.ProjectionMap = java.lang.reflect.AnnotatedElement . T ( ProjectionMap .class ) ; if ( com.tojc.ormlite.android.annotation.info.ProjectionMap != null ) { this . java.lang.String = com.tojc.ormlite.android.annotation.info.ProjectionMap . value ( ) ; validFlagOn ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; validFlagOn ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return ! TextUtils . isEmpty ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + java.lang.String + '\'' + STRING + super. java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { DefaultSortOrder com.tojc.ormlite.android.annotation.info.DefaultSortOrder = java.lang.reflect.AnnotatedElement . T ( DefaultSortOrder .class ) ; if ( com.tojc.ormlite.android.annotation.info.DefaultSortOrder != null ) { this . com.tojc.ormlite.android.annotation.info.SortOrder = com.tojc.ormlite.android.annotation.info.DefaultSortOrder . order ( ) ; this . int = com.tojc.ormlite.android.annotation.info.DefaultSortOrder . weight ( ) ; validFlagOn ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( SortOrder com.tojc.ormlite.android.annotation.info.SortOrder , int int ) { this . com.tojc.ormlite.android.annotation.info.SortOrder = com.tojc.ormlite.android.annotation.info.SortOrder ; this . int = int ; validFlagOn ( ) ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.annotation.info.SortOrder com.tojc.ormlite.android.annotation.info.SortOrder ( ) { return this . com.tojc.ormlite.android.annotation.info.SortOrder ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( this . com.tojc.ormlite.android.annotation.info.SortOrder . toString ( ) ) ; return java.lang.StringBuilder . java.lang.String ( ) . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + com.tojc.ormlite.android.annotation.info.SortOrder + STRING + int + STRING + super. java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { java.lang.String java.lang.String = STRING ; java.lang.String = DatabaseTableConfig . extractTableName ( ( java.lang.Class<?> < ? > ) java.lang.reflect.AnnotatedElement ) ; return java.lang.String ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.reflect.AnnotatedElement java.lang.reflect.AnnotatedElement ) { java.lang.String java.lang.String = STRING ; DatabaseField com.tojc.ormlite.android.annotation.DatabaseField = java.lang.reflect.AnnotatedElement . T ( DatabaseField .class ) ; if ( com.tojc.ormlite.android.annotation.DatabaseField != null ) { java.lang.String = com.tojc.ormlite.android.annotation.DatabaseField . columnName ( ) ; if ( TextUtils . isEmpty ( java.lang.String ) ) { java.lang.String = ( ( java.lang.reflect.Field ) java.lang.reflect.AnnotatedElement ) . java.lang.String ( ) ; } } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.reflect.Field java.lang.reflect.Field ) { if ( ! java.lang.reflect.Field . boolean ( DatabaseField .class ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.lang.reflect.Field = java.lang.reflect.Field ; this . java.lang.String = OrmLiteAnnotationAccessor . getAnnotationColumnName ( java.lang.reflect.Field ) ; this . com.tojc.ormlite.android.framework.SortOrderInfo = new SortOrderInfo ( java.lang.reflect.Field ) ; this . com.tojc.ormlite.android.framework.ProjectionMapInfo = new ProjectionMapInfo ( java.lang.reflect.Field ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( boolean boolean ) { boolean boolean = true ; return boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.reflect.Field java.lang.reflect.Field ( ) { return this . java.lang.reflect.Field ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { java.lang.String java.lang.String = this . java.lang.String ; if ( this . com.tojc.ormlite.android.framework.ProjectionMapInfo . isValid ( ) ) { java.lang.String = this . com.tojc.ormlite.android.framework.ProjectionMapInfo . getName ( ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.SortOrderInfo com.tojc.ormlite.android.framework.SortOrderInfo ( ) { return this . com.tojc.ormlite.android.framework.SortOrderInfo ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.ProjectionMapInfo com.tojc.ormlite.android.framework.ProjectionMapInfo ( ) { return this . com.tojc.ormlite.android.framework.ProjectionMapInfo ; }  <METHOD_END>
<METHOD_START> public void ( ) { this . com.tojc.ormlite.android.framework.UriMatcher = new UriMatcher ( UriMatcher . NO_MATCH ) ; this . java.util.Map<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> = new java.util.HashMap<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> < java.lang.Class<?> < ? > , TableInfo > ( ) ; this . java.util.List<com.tojc.ormlite.android.framework.MatcherPattern> = new java.util.ArrayList<com.tojc.ormlite.android.framework.MatcherPattern> < MatcherPattern > ( ) ; this . com.tojc.ormlite.android.framework.TableInfo = null ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherController com.tojc.ormlite.android.framework.MatcherController ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . com.tojc.ormlite.android.framework.TableInfo ( java.lang.Class<> ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherController com.tojc.ormlite.android.framework.MatcherController ( java.lang.Class<?> < ? > java.lang.Class<?> , SubType com.tojc.ormlite.android.framework.SubType , java.lang.String java.lang.String , int int ) { this . com.tojc.ormlite.android.framework.TableInfo ( java.lang.Class<> ) ; this . com.tojc.ormlite.android.framework.MatcherPattern ( com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherController com.tojc.ormlite.android.framework.MatcherController ( SubType com.tojc.ormlite.android.framework.SubType , java.lang.String java.lang.String , int int ) { this . com.tojc.ormlite.android.framework.MatcherPattern ( com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherController com.tojc.ormlite.android.framework.MatcherController ( MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern ) { int int = com.tojc.ormlite.android.framework.MatcherPattern . getPatternCode ( ) ; if ( this . com.tojc.ormlite.android.framework.TableInfo == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } if ( com.tojc.ormlite.android.framework.MatcherPattern ( int ) != null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.util.List<com.tojc.ormlite.android.framework.MatcherPattern> . add ( com.tojc.ormlite.android.framework.MatcherPattern ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherController com.tojc.ormlite.android.framework.MatcherController ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( this . com.tojc.ormlite.android.framework.TableInfo == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . com.tojc.ormlite.android.framework.TableInfo . setDefaultContentUriInfo ( new ContentUriInfo ( java.lang.String , java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherController com.tojc.ormlite.android.framework.MatcherController ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { if ( this . com.tojc.ormlite.android.framework.TableInfo == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . com.tojc.ormlite.android.framework.TableInfo . setDefaultContentMimeTypeVndInfo ( new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherController com.tojc.ormlite.android.framework.MatcherController ( ) { this . com.tojc.ormlite.android.framework.TableInfo = null ; for ( java.util.Map . java.util.Map.Entry<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> < java.lang.Class<?> < ? > , TableInfo > java.util.Map.Entry<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> : this . java.util.Map<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> . entrySet ( ) ) { java.util.Map.Entry<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> . getValue ( ) . isValid ( true ) ; } for ( MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern : java.util.List<com.tojc.ormlite.android.framework.MatcherPattern> ) { com.tojc.ormlite.android.framework.MatcherPattern . isValid ( true ) ; this . com.tojc.ormlite.android.framework.UriMatcher . addURI ( com.tojc.ormlite.android.framework.MatcherPattern . getTableInfo ( ) . getDefaultContentUriInfo ( ) . getAuthority ( ) , com.tojc.ormlite.android.framework.MatcherPattern . getPathAndPatternString ( ) , com.tojc.ormlite.android.framework.MatcherPattern . getPatternCode ( ) ) ; com.tojc.ormlite.android.framework.MatcherPattern . initialize ( ) ; } this . boolean = true ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern ( int int ) { MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern = null ; for ( MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern : this . java.util.List<com.tojc.ormlite.android.framework.MatcherPattern> ) { if ( com.tojc.ormlite.android.framework.MatcherPattern . getPatternCode ( ) == int ) { com.tojc.ormlite.android.framework.MatcherPattern = com.tojc.ormlite.android.framework.MatcherPattern ; break; } } return com.tojc.ormlite.android.framework.MatcherPattern ; }  <METHOD_END>
<METHOD_START> private com.tojc.ormlite.android.framework.TableInfo com.tojc.ormlite.android.framework.TableInfo ( java.lang.Class<?> < ? > java.lang.Class<?> ) { TableInfo com.tojc.ormlite.android.framework.TableInfo = null ; if ( this . java.util.Map<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> . containsKey ( java.lang.Class<> ) ) { com.tojc.ormlite.android.framework.TableInfo = this . java.util.Map<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> . get ( java.lang.Class<> ) ; } else { com.tojc.ormlite.android.framework.TableInfo = new TableInfo ( java.lang.Class<> ) ; this . java.util.Map<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> . put ( java.lang.Class<> , com.tojc.ormlite.android.framework.TableInfo ) ; } this . com.tojc.ormlite.android.framework.TableInfo = com.tojc.ormlite.android.framework.TableInfo ; return com.tojc.ormlite.android.framework.TableInfo ; }  <METHOD_END>
<METHOD_START> private com.tojc.ormlite.android.framework.MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern ( SubType com.tojc.ormlite.android.framework.SubType , java.lang.String java.lang.String , int int ) { MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern = null ; if ( this . com.tojc.ormlite.android.framework.TableInfo == null ) { throw new java.lang.IllegalStateException ( STRING ) ; } if ( com.tojc.ormlite.android.framework.MatcherPattern ( int ) != null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( this . com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; this . java.util.List<com.tojc.ormlite.android.framework.MatcherPattern> . add ( com.tojc.ormlite.android.framework.MatcherPattern ) ; return com.tojc.ormlite.android.framework.MatcherPattern ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return this . boolean ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.UriMatcher com.tojc.ormlite.android.framework.UriMatcher ( ) { if ( ! this . boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } return this . com.tojc.ormlite.android.framework.UriMatcher ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> < java.lang.Class<?> < ? > , TableInfo > java.util.Map<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> ( ) { if ( ! this . boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } return this . java.util.Map<java.lang.Class<?>,com.tojc.ormlite.android.framework.TableInfo> ; }  <METHOD_END>
<METHOD_START> public java.util.List<com.tojc.ormlite.android.framework.MatcherPattern> < MatcherPattern > java.util.List<com.tojc.ormlite.android.framework.MatcherPattern> ( ) { if ( ! this . boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } return this . java.util.List<com.tojc.ormlite.android.framework.MatcherPattern> ; }  <METHOD_END>
<METHOD_START> public void ( TableInfo com.tojc.ormlite.android.framework.TableInfo , SubType com.tojc.ormlite.android.framework.SubType , java.lang.String java.lang.String , int int ) { this . com.tojc.ormlite.android.framework.TableInfo = com.tojc.ormlite.android.framework.TableInfo ; this . com.tojc.ormlite.android.framework.SubType = com.tojc.ormlite.android.framework.SubType ; this . java.lang.String = java.lang.String ; this . int = int ; if ( this . com.tojc.ormlite.android.framework.TableInfo . getDefaultContentUriInfo ( ) . isValid ( ) ) { this . com.tojc.ormlite.android.framework.ContentUriInfo = this . com.tojc.ormlite.android.framework.TableInfo . getDefaultContentUriInfo ( ) ; } else { this . com.tojc.ormlite.android.framework.ContentUriInfo = null ; } if ( this . com.tojc.ormlite.android.framework.TableInfo . getDefaultContentMimeTypeVndInfo ( ) . isValid ( ) ) { this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo = this . com.tojc.ormlite.android.framework.TableInfo . getDefaultContentMimeTypeVndInfo ( ) ; } else { this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo = null ; } if ( this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo != null ) { this . com.tojc.ormlite.android.framework.MimeTypeVnd = new MimeTypeVnd ( this . com.tojc.ormlite.android.framework.SubType , this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ) ; } else { this . com.tojc.ormlite.android.framework.MimeTypeVnd = null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( boolean boolean ) { boolean boolean = true ; if ( this . com.tojc.ormlite.android.framework.TableInfo == null ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( this . com.tojc.ormlite.android.framework.SubType == null ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( java.lang.String == null ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( this . int <= NUMBER ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( this . com.tojc.ormlite.android.framework.ContentUriInfo == null || ! this . com.tojc.ormlite.android.framework.ContentUriInfo . isValid ( ) ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo == null || ! this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo . isValid ( ) ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( this . com.tojc.ormlite.android.framework.MimeTypeVnd == null || ! this . com.tojc.ormlite.android.framework.MimeTypeVnd . isValid ( ) ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } return boolean ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . boolean = true ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern ( ContentUriInfo com.tojc.ormlite.android.framework.ContentUriInfo ) { if ( this . boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . com.tojc.ormlite.android.framework.ContentUriInfo = com.tojc.ormlite.android.framework.ContentUriInfo ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return this . com.tojc.ormlite.android.framework.MatcherPattern ( new ContentUriInfo ( java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern ( ContentMimeTypeVndInfo com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ) { if ( this . boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo = com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ; this . com.tojc.ormlite.android.framework.MimeTypeVnd = new MimeTypeVnd ( this . com.tojc.ormlite.android.framework.SubType , this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MatcherPattern com.tojc.ormlite.android.framework.MatcherPattern ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { return this . com.tojc.ormlite.android.framework.MatcherPattern ( new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.TableInfo com.tojc.ormlite.android.framework.TableInfo ( ) { return this . com.tojc.ormlite.android.framework.TableInfo ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.SubType com.tojc.ormlite.android.framework.SubType ( ) { return this . com.tojc.ormlite.android.framework.SubType ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return this . int ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.ContentUriInfo com.tojc.ormlite.android.framework.ContentUriInfo ( ) { return this . com.tojc.ormlite.android.framework.ContentUriInfo ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MimeTypeVnd com.tojc.ormlite.android.framework.MimeTypeVnd ( ) { return this . com.tojc.ormlite.android.framework.MimeTypeVnd ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . com.tojc.ormlite.android.framework.ContentUriInfo . getPath ( ) + STRING + this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.Uri com.tojc.ormlite.android.framework.Uri ( ) { return Uri . parse ( this . com.tojc.ormlite.android.framework.ContentUriInfo . getContentUri ( ) + STRING + this . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . com.tojc.ormlite.android.framework.MimeTypeVnd . getMimeTypeString ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return com.tojc.ormlite.android.framework.Uri ( ) . toString ( ) ; }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( com.tojc.ormlite.android.framework.MimeTypeVnd.SubType com.tojc.ormlite.android.framework.MimeTypeVnd.SubType , ContentMimeTypeVndInfo com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ) { this . com.tojc.ormlite.android.framework.MimeTypeVnd.SubType = com.tojc.ormlite.android.framework.MimeTypeVnd.SubType ; this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo = com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( boolean boolean ) { boolean boolean = true ; if ( this . com.tojc.ormlite.android.framework.MimeTypeVnd.SubType == null ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( ! this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo . isValid ( ) ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } return boolean ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.MimeTypeVnd.SubType com.tojc.ormlite.android.framework.MimeTypeVnd.SubType ( ) { return this . com.tojc.ormlite.android.framework.MimeTypeVnd.SubType ; }  <METHOD_END>
<METHOD_START> public void void ( com.tojc.ormlite.android.framework.MimeTypeVnd.SubType com.tojc.ormlite.android.framework.MimeTypeVnd.SubType ) { this . com.tojc.ormlite.android.framework.MimeTypeVnd.SubType = com.tojc.ormlite.android.framework.MimeTypeVnd.SubType ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ( ) { return this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ; }  <METHOD_END>
<METHOD_START> public void void ( ContentMimeTypeVndInfo com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ) { this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo = com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . com.tojc.ormlite.android.framework.MimeTypeVnd.SubType . java.lang.String ( ) + java.io.File . java.lang.String + this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo . getVndProviderSpecificString ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> com.tojc.ormlite.android.framework.Uri com.tojc.ormlite.android.framework.Uri ( )  <METHOD_END>
<METHOD_START> java.lang.String [] java.lang.String[] ( )  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> java.lang.String [] java.lang.String[] ( )  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> com.tojc.ormlite.android.framework.ContentValues com.tojc.ormlite.android.framework.ContentValues ( )  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> java.lang.String [] java.lang.String[] ( )  <METHOD_END>
<METHOD_START> com.tojc.ormlite.android.framework.ContentValues com.tojc.ormlite.android.framework.ContentValues ( )  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> java.lang.String [] java.lang.String[] ( )  <METHOD_END>
<METHOD_START> public void ( ) { this . void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . com.tojc.ormlite.android.framework.Uri = null ; this . java.lang.String[] = null ; this . java.lang.String = null ; this . java.lang.String[] = null ; this . java.lang.String = null ; this . com.tojc.ormlite.android.framework.ContentValues = null ; }  <METHOD_END>
<METHOD_START> public void ( Uri com.tojc.ormlite.android.framework.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) { this . void ( ) ; this . com.tojc.ormlite.android.framework.Uri = com.tojc.ormlite.android.framework.Uri ; if ( java.lang.String[] != null ) { this . java.lang.String[] = java.lang.String[] . java.lang.Object ( ) ; } this . java.lang.String = java.lang.String ; if ( java.lang.String[] != null ) { this . java.lang.String[] = java.lang.String[] . java.lang.Object ( ) ; } this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( Uri com.tojc.ormlite.android.framework.Uri , ContentValues com.tojc.ormlite.android.framework.ContentValues ) { this . void ( ) ; this . com.tojc.ormlite.android.framework.Uri = com.tojc.ormlite.android.framework.Uri ; this . com.tojc.ormlite.android.framework.ContentValues = com.tojc.ormlite.android.framework.ContentValues ; }  <METHOD_END>
<METHOD_START> public void ( Uri com.tojc.ormlite.android.framework.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { this . void ( ) ; this . com.tojc.ormlite.android.framework.Uri = com.tojc.ormlite.android.framework.Uri ; this . java.lang.String = java.lang.String ; if ( java.lang.String[] != null ) { this . java.lang.String[] = java.lang.String[] . java.lang.Object ( ) ; } }  <METHOD_END>
<METHOD_START> public void ( Uri com.tojc.ormlite.android.framework.Uri , ContentValues com.tojc.ormlite.android.framework.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { this . void ( ) ; this . com.tojc.ormlite.android.framework.Uri = com.tojc.ormlite.android.framework.Uri ; this . com.tojc.ormlite.android.framework.ContentValues = com.tojc.ormlite.android.framework.ContentValues ; this . java.lang.String = java.lang.String ; if ( java.lang.String[] != null ) { this . java.lang.String[] = java.lang.String[] . java.lang.Object ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.tojc.ormlite.android.framework.Uri com.tojc.ormlite.android.framework.Uri ( ) { return this . com.tojc.ormlite.android.framework.Uri ; }  <METHOD_END>
<METHOD_START> public void void ( Uri com.tojc.ormlite.android.framework.Uri ) { this . com.tojc.ormlite.android.framework.Uri = com.tojc.ormlite.android.framework.Uri ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { if ( java.lang.String[] == null ) { return null ; } return this . java.lang.String[] . java.lang.Object ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String [] java.lang.String[] ) { if ( java.lang.String[] == null ) { this . java.lang.String[] = null ; } else { this . java.lang.String[] = java.lang.String[] . java.lang.Object ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String [] java.lang.String[] ( ) { if ( this . java.lang.String[] != null ) { return this . java.lang.String[] . java.lang.Object ( ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String [] java.lang.String[] ) { if ( java.lang.String[] == null ) { this . java.lang.String[] = null ; } else { this . java.lang.String[] = java.lang.String[] . java.lang.Object ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.tojc.ormlite.android.framework.ContentValues com.tojc.ormlite.android.framework.ContentValues ( ) { return this . com.tojc.ormlite.android.framework.ContentValues ; }  <METHOD_END>
<METHOD_START> public void void ( ContentValues com.tojc.ormlite.android.framework.ContentValues ) { this . com.tojc.ormlite.android.framework.ContentValues = com.tojc.ormlite.android.framework.ContentValues ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.Class<?> < ? > java.lang.Class<?> ) { this . java.lang.Class<?> = java.lang.Class<> ; this . java.lang.String = OrmLiteAnnotationAccessor . getAnnotationTableName ( java.lang.Class<> ) ; this . com.tojc.ormlite.android.framework.ContentUriInfo = new ContentUriInfo ( java.lang.Class<> ) ; this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( java.lang.Class<> ) ; this . java.util.Map<java.lang.String,com.tojc.ormlite.android.framework.ColumnInfo> = new java.util.HashMap<java.lang.String,com.tojc.ormlite.android.framework.ColumnInfo> < java.lang.String , ColumnInfo > ( ) ; this . java.util.Map<java.lang.String,java.lang.String> = new java.util.HashMap<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ( ) ; java.util.SortedMap<java.lang.Integer,java.lang.String> < java.lang.Integer , java.lang.String > java.util.SortedMap<java.lang.Integer,java.lang.String> = new java.util.TreeMap<java.lang.Integer,java.lang.String> < java.lang.Integer , java.lang.String > ( ) ; this . com.tojc.ormlite.android.framework.ColumnInfo = null ; for ( java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<> . java.lang.reflect.Field[] ( ) ) { if ( java.lang.reflect.Field . boolean ( DatabaseField .class ) ) { java.lang.reflect.Field . void ( true ) ; ColumnInfo com.tojc.ormlite.android.framework.ColumnInfo = new ColumnInfo ( java.lang.reflect.Field ) ; this . java.util.Map<java.lang.String,com.tojc.ormlite.android.framework.ColumnInfo> . put ( com.tojc.ormlite.android.framework.ColumnInfo . getColumnName ( ) , com.tojc.ormlite.android.framework.ColumnInfo ) ; if ( com.tojc.ormlite.android.framework.ColumnInfo . getColumnName ( ) . equals ( BaseColumns . _ID ) ) { DatabaseField com.tojc.ormlite.android.framework.DatabaseField = java.lang.reflect.Field . T ( DatabaseField .class ) ; if ( com.tojc.ormlite.android.framework.DatabaseField != null ) { if ( com.tojc.ormlite.android.framework.DatabaseField . persisted ( ) ) { boolean boolean = com.tojc.ormlite.android.framework.DatabaseField . generatedId ( ) ; boolean boolean = com.tojc.ormlite.android.framework.DatabaseField . id ( ) ; if ( boolean || boolean ) { this . com.tojc.ormlite.android.framework.ColumnInfo = com.tojc.ormlite.android.framework.ColumnInfo ; } } } } SortOrderInfo com.tojc.ormlite.android.framework.SortOrderInfo = com.tojc.ormlite.android.framework.ColumnInfo . getDefaultSortOrderInfo ( ) ; if ( com.tojc.ormlite.android.framework.SortOrderInfo . isValid ( ) ) { java.util.SortedMap<java.lang.Integer,java.lang.String> . java.lang.String ( com.tojc.ormlite.android.framework.SortOrderInfo . getWeight ( ) , com.tojc.ormlite.android.framework.SortOrderInfo . makeSqlOrderString ( com.tojc.ormlite.android.framework.ColumnInfo . getColumnName ( ) ) ) ; } this . java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( com.tojc.ormlite.android.framework.ColumnInfo . getProjectionColumnName ( ) , com.tojc.ormlite.android.framework.ColumnInfo . getColumnName ( ) ) ; } } if ( this . com.tojc.ormlite.android.framework.ColumnInfo == null ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } if ( java.util.SortedMap<java.lang.Integer,java.lang.String> . int ( ) >= NUMBER ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.String java.lang.String = STRING ; for ( java.util.Map . java.util.Map.Entry<java.lang.Integer,java.lang.String> < java.lang.Integer , java.lang.String > java.util.Map.Entry<java.lang.Integer,java.lang.String> : java.util.SortedMap<java.lang.Integer,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.Integer,java.lang.String>> ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; java.lang.StringBuilder . java.lang.StringBuilder ( java.util.Map.Entry<java.lang.Integer,java.lang.String> . java.lang.String ( ) ) ; java.lang.String = STRING ; } this . java.lang.String = java.lang.StringBuilder . java.lang.String ( ) ; } else { this . java.lang.String = STRING ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return boolean ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( boolean boolean ) { boolean boolean = true ; if ( this . java.lang.Class<> == null ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( TextUtils . isEmpty ( java.lang.String ) ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( this . java.util.Map<java.lang.String,com.tojc.ormlite.android.framework.ColumnInfo> . isEmpty ( ) ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } else if ( this . java.util.Map<java.lang.String,com.tojc.ormlite.android.framework.ColumnInfo> . size ( ) != this . java.util.Map<java.lang.String,java.lang.String> . int ( ) ) { boolean = false ; if ( boolean && ! boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } } return boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.Class<?> < ? > java.lang.Class<?> ( ) { return this . java.lang.Class<> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.ContentUriInfo com.tojc.ormlite.android.framework.ContentUriInfo ( ) { return this . com.tojc.ormlite.android.framework.ContentUriInfo ; }  <METHOD_END>
<METHOD_START> public void void ( ContentUriInfo com.tojc.ormlite.android.framework.ContentUriInfo ) { this . com.tojc.ormlite.android.framework.ContentUriInfo = com.tojc.ormlite.android.framework.ContentUriInfo ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ( ) { return this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ; }  <METHOD_END>
<METHOD_START> public void void ( ContentMimeTypeVndInfo com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ) { this . com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo = com.tojc.ormlite.android.framework.ContentMimeTypeVndInfo ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.framework.ColumnInfo com.tojc.ormlite.android.framework.ColumnInfo ( ) { return this . com.tojc.ormlite.android.framework.ColumnInfo ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( ) { return this . java.util.Map<java.lang.String,java.lang.String> ; }  <METHOD_END>
<METHOD_START> boolean boolean ( )  <METHOD_END>
<METHOD_START> boolean boolean ( boolean boolean );  <METHOD_END>
<METHOD_START> protected abstract java.lang.Class<T> < T > java.lang.Class<T> ( )  <METHOD_END>
<METHOD_START> public T T ( ) { if ( this . T == null ) { if ( this . boolean ) { throw new java.lang.IllegalStateException ( STRING ) ; } this . T = this . T ( ) ; com.tojc.ormlite.android.Logger . trace ( STRING , this , this . T ) ; } return this . T ; }  <METHOD_END>
<METHOD_START> protected T T ( ) { return OpenHelperManager . getHelper ( this . getContext ( ) , this . java.lang.Class<T> ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { OpenHelperManager . releaseHelper ( ) ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.ConnectionSource com.tojc.ormlite.android.ConnectionSource ( ) { return T ( ) . getConnectionSource ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. shutdown ( ) ; if ( this . T != null ) { this . T . close ( ) ; this . T = null ; this . void ( ) ; com.tojc.ormlite.android.Logger . trace ( STRING , this , this . T ) ; this . boolean = true ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.Class<? extends com.tojc.ormlite.android.OrmLiteBaseContentProvider> ( ) . java.lang.String ( ) + STRING + java.lang.Integer . java.lang.String ( super. int ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( MatcherController com.tojc.ormlite.android.MatcherController ) { this . com.tojc.ormlite.android.MatcherController = com.tojc.ormlite.android.MatcherController ; com.tojc.ormlite.android.MatcherController . initialize ( ) ; }  <METHOD_END>
<METHOD_START> public abstract com.tojc.ormlite.android.Cursor com.tojc.ormlite.android.Cursor ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , QueryParameters com.tojc.ormlite.android.QueryParameters );  <METHOD_END>
<METHOD_START> public abstract com.tojc.ormlite.android.Uri com.tojc.ormlite.android.Uri ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , InsertParameters com.tojc.ormlite.android.InsertParameters );  <METHOD_END>
<METHOD_START> public abstract int int ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , DeleteParameters com.tojc.ormlite.android.DeleteParameters );  <METHOD_END>
<METHOD_START> public abstract int int ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , UpdateParameters com.tojc.ormlite.android.UpdateParameters );  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( Uri com.tojc.ormlite.android.Uri ) { if ( ! com.tojc.ormlite.android.MatcherController . hasPreinitialized ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } int int = com.tojc.ormlite.android.MatcherController . getUriMatcher ( ) . match ( com.tojc.ormlite.android.Uri ) ; MatcherPattern com.tojc.ormlite.android.MatcherPattern = com.tojc.ormlite.android.MatcherController . findMatcherPattern ( int ) ; if ( com.tojc.ormlite.android.MatcherPattern == null ) { throw new java.lang.IllegalArgumentException ( STRING + com.tojc.ormlite.android.Uri . toString ( ) ) ; } return com.tojc.ormlite.android.MatcherPattern . getMimeTypeVndString ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.tojc.ormlite.android.Cursor com.tojc.ormlite.android.Cursor ( Uri com.tojc.ormlite.android.Uri , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] , java.lang.String java.lang.String ) { Cursor com.tojc.ormlite.android.Cursor = null ; if ( ! com.tojc.ormlite.android.MatcherController . hasPreinitialized ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } int int = com.tojc.ormlite.android.MatcherController . getUriMatcher ( ) . match ( com.tojc.ormlite.android.Uri ) ; MatcherPattern com.tojc.ormlite.android.MatcherPattern = com.tojc.ormlite.android.MatcherController . findMatcherPattern ( int ) ; if ( com.tojc.ormlite.android.MatcherPattern == null ) { throw new java.lang.IllegalArgumentException ( STRING + com.tojc.ormlite.android.Uri . toString ( ) ) ; } Parameter com.tojc.ormlite.android.Parameter = new Parameter ( com.tojc.ormlite.android.Uri , java.lang.String[] , java.lang.String , java.lang.String[] , java.lang.String ) ; SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase = this . getHelper ( ) . getReadableDatabase ( ) ; com.tojc.ormlite.android.Cursor = com.tojc.ormlite.android.Cursor ( this . getHelper ( ) , com.tojc.ormlite.android.SQLiteDatabase , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; if ( com.tojc.ormlite.android.Cursor != null ) { this . void ( com.tojc.ormlite.android.Cursor , com.tojc.ormlite.android.Uri , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; } return com.tojc.ormlite.android.Cursor ; }  <METHOD_END>
<METHOD_START> protected void void ( Cursor com.tojc.ormlite.android.Cursor , Uri com.tojc.ormlite.android.Uri , MatcherPattern com.tojc.ormlite.android.MatcherPattern , QueryParameters com.tojc.ormlite.android.QueryParameters ) { com.tojc.ormlite.android.Cursor . setNotificationUri ( this . getContext ( ) . getContentResolver ( ) , com.tojc.ormlite.android.Uri ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.tojc.ormlite.android.Uri com.tojc.ormlite.android.Uri ( Uri com.tojc.ormlite.android.Uri , ContentValues com.tojc.ormlite.android.ContentValues ) { Uri com.tojc.ormlite.android.Uri = null ; if ( ! com.tojc.ormlite.android.MatcherController . hasPreinitialized ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } int int = com.tojc.ormlite.android.MatcherController . getUriMatcher ( ) . match ( com.tojc.ormlite.android.Uri ) ; MatcherPattern com.tojc.ormlite.android.MatcherPattern = com.tojc.ormlite.android.MatcherController . findMatcherPattern ( int ) ; if ( com.tojc.ormlite.android.MatcherPattern == null ) { throw new java.lang.IllegalArgumentException ( STRING + com.tojc.ormlite.android.Uri . toString ( ) ) ; } Parameter com.tojc.ormlite.android.Parameter = new Parameter ( com.tojc.ormlite.android.Uri , com.tojc.ormlite.android.ContentValues ) ; SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase = this . getHelper ( ) . getWritableDatabase ( ) ; com.tojc.ormlite.android.Uri = com.tojc.ormlite.android.Uri ( this . getHelper ( ) , com.tojc.ormlite.android.SQLiteDatabase , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; if ( com.tojc.ormlite.android.Uri != null ) { this . void ( com.tojc.ormlite.android.Uri , com.tojc.ormlite.android.Uri , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; } return com.tojc.ormlite.android.Uri ; }  <METHOD_END>
<METHOD_START> protected void void ( Uri com.tojc.ormlite.android.Uri , Uri com.tojc.ormlite.android.Uri , MatcherPattern com.tojc.ormlite.android.MatcherPattern , InsertParameters com.tojc.ormlite.android.InsertParameters ) { this . getContext ( ) . getContentResolver ( ) . notifyChange ( com.tojc.ormlite.android.Uri , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.tojc.ormlite.android.Uri , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { int int = - NUMBER ; if ( ! com.tojc.ormlite.android.MatcherController . hasPreinitialized ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } int int = com.tojc.ormlite.android.MatcherController . getUriMatcher ( ) . match ( com.tojc.ormlite.android.Uri ) ; MatcherPattern com.tojc.ormlite.android.MatcherPattern = com.tojc.ormlite.android.MatcherController . findMatcherPattern ( int ) ; if ( com.tojc.ormlite.android.MatcherPattern == null ) { throw new java.lang.IllegalArgumentException ( STRING + com.tojc.ormlite.android.Uri . toString ( ) ) ; } Parameter com.tojc.ormlite.android.Parameter = new Parameter ( com.tojc.ormlite.android.Uri , java.lang.String , java.lang.String[] ) ; SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase = this . getHelper ( ) . getWritableDatabase ( ) ; int = int ( this . getHelper ( ) , com.tojc.ormlite.android.SQLiteDatabase , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; if ( int >= NUMBER ) { this . void ( int , com.tojc.ormlite.android.Uri , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; } return int ; }  <METHOD_END>
<METHOD_START> protected void void ( int int , Uri com.tojc.ormlite.android.Uri , MatcherPattern com.tojc.ormlite.android.MatcherPattern , DeleteParameters com.tojc.ormlite.android.DeleteParameters ) { this . getContext ( ) . getContentResolver ( ) . notifyChange ( com.tojc.ormlite.android.Uri , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.tojc.ormlite.android.Uri , ContentValues com.tojc.ormlite.android.ContentValues , java.lang.String java.lang.String , java.lang.String [] java.lang.String[] ) { int int = - NUMBER ; if ( ! com.tojc.ormlite.android.MatcherController . hasPreinitialized ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } int int = com.tojc.ormlite.android.MatcherController . getUriMatcher ( ) . match ( com.tojc.ormlite.android.Uri ) ; MatcherPattern com.tojc.ormlite.android.MatcherPattern = com.tojc.ormlite.android.MatcherController . findMatcherPattern ( int ) ; if ( com.tojc.ormlite.android.MatcherPattern == null ) { throw new java.lang.IllegalArgumentException ( STRING + com.tojc.ormlite.android.Uri . toString ( ) ) ; } Parameter com.tojc.ormlite.android.Parameter = new Parameter ( com.tojc.ormlite.android.Uri , com.tojc.ormlite.android.ContentValues , java.lang.String , java.lang.String[] ) ; SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase = this . getHelper ( ) . getWritableDatabase ( ) ; int = int ( this . getHelper ( ) , com.tojc.ormlite.android.SQLiteDatabase , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; if ( int >= NUMBER ) { this . void ( int , com.tojc.ormlite.android.Uri , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; } return int ; }  <METHOD_END>
<METHOD_START> protected void void ( int int , Uri com.tojc.ormlite.android.Uri , MatcherPattern com.tojc.ormlite.android.MatcherPattern , UpdateParameters com.tojc.ormlite.android.UpdateParameters ) { this . getContext ( ) . getContentResolver ( ) . notifyChange ( com.tojc.ormlite.android.Uri , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Uri com.tojc.ormlite.android.Uri , ContentValues [] com.tojc.ormlite.android.ContentValues[] ) { int int = NUMBER ; if ( ! com.tojc.ormlite.android.MatcherController . hasPreinitialized ( ) ) { throw new java.lang.IllegalStateException ( STRING ) ; } int int = com.tojc.ormlite.android.MatcherController . getUriMatcher ( ) . match ( com.tojc.ormlite.android.Uri ) ; MatcherPattern com.tojc.ormlite.android.MatcherPattern = com.tojc.ormlite.android.MatcherController . findMatcherPattern ( int ) ; if ( com.tojc.ormlite.android.MatcherPattern == null ) { throw new java.lang.IllegalArgumentException ( STRING + com.tojc.ormlite.android.Uri . toString ( ) ) ; } SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase = this . getHelper ( ) . getWritableDatabase ( ) ; com.tojc.ormlite.android.SQLiteDatabase . beginTransaction ( ) ; try { for ( ContentValues com.tojc.ormlite.android.ContentValues : com.tojc.ormlite.android.ContentValues[] ) { Parameter com.tojc.ormlite.android.Parameter = new Parameter ( com.tojc.ormlite.android.Uri , com.tojc.ormlite.android.ContentValues ) ; Uri com.tojc.ormlite.android.Uri = this . com.tojc.ormlite.android.Uri ( this . getHelper ( ) , com.tojc.ormlite.android.SQLiteDatabase , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.Parameter ) ; if ( com.tojc.ormlite.android.Uri != null ) { int ++ ; } } com.tojc.ormlite.android.SQLiteDatabase . setTransactionSuccessful ( ) ; if ( int >= NUMBER ) { this . void ( int , com.tojc.ormlite.android.Uri ) ; } } finally { com.tojc.ormlite.android.SQLiteDatabase . endTransaction ( ) ; } return int ; }  <METHOD_END>
<METHOD_START> public com.tojc.ormlite.android.Uri com.tojc.ormlite.android.Uri ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , InsertParameters com.tojc.ormlite.android.InsertParameters ) { return com.tojc.ormlite.android.Uri ( T , com.tojc.ormlite.android.SQLiteDatabase , com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.InsertParameters ) ; }  <METHOD_END>
<METHOD_START> protected void void ( int int , Uri com.tojc.ormlite.android.Uri ) { this . getContext ( ) . getContentResolver ( ) . notifyChange ( com.tojc.ormlite.android.Uri , null ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.tojc.ormlite.android.ContentProviderResult [] com.tojc.ormlite.android.ContentProviderResult[] ( java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> ) throws com.tojc.ormlite.android.OperationApplicationException { ContentProviderResult [] com.tojc.ormlite.android.ContentProviderResult[] = null ; SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase = this . getHelper ( ) . getWritableDatabase ( ) ; com.tojc.ormlite.android.SQLiteDatabase . beginTransaction ( ) ; try { com.tojc.ormlite.android.ContentProviderResult[] = super. applyBatch ( java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> ) ; com.tojc.ormlite.android.SQLiteDatabase . setTransactionSuccessful ( ) ; } finally { com.tojc.ormlite.android.SQLiteDatabase . endTransaction ( ) ; } return com.tojc.ormlite.android.ContentProviderResult[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.tojc.ormlite.android.Cursor com.tojc.ormlite.android.Cursor ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , QueryParameters com.tojc.ormlite.android.QueryParameters ) { Cursor com.tojc.ormlite.android.Cursor = null ; SQLiteQueryBuilder com.tojc.ormlite.android.SQLiteQueryBuilder = new SQLiteQueryBuilder ( ) ; com.tojc.ormlite.android.SQLiteQueryBuilder . setTables ( com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getName ( ) ) ; com.tojc.ormlite.android.SQLiteQueryBuilder . setProjectionMap ( com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getProjectionMap ( ) ) ; switch ( com.tojc.ormlite.android.MatcherPattern . getMimeTypeVnd ( ) . getSubType ( ) ) { case ITEM : com.tojc.ormlite.android.SQLiteQueryBuilder . appendWhere ( com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getIdColumnInfo ( ) . getColumnName ( ) ) ; com.tojc.ormlite.android.SQLiteQueryBuilder . appendWhere ( STRING ) ; com.tojc.ormlite.android.SQLiteQueryBuilder . appendWhere ( com.tojc.ormlite.android.QueryParameters . getUri ( ) . getPathSegments ( ) . get ( NUMBER ) ) ; break; case DIRECTORY : default: break; } java.lang.String java.lang.String = java.lang.String ( com.tojc.ormlite.android.MatcherPattern , com.tojc.ormlite.android.QueryParameters ) ; com.tojc.ormlite.android.Cursor = com.tojc.ormlite.android.SQLiteQueryBuilder . query ( com.tojc.ormlite.android.SQLiteDatabase , com.tojc.ormlite.android.QueryParameters . getProjection ( ) , com.tojc.ormlite.android.QueryParameters . getSelection ( ) , com.tojc.ormlite.android.QueryParameters . getSelectionArgs ( ) , null , null , java.lang.String ) ; return com.tojc.ormlite.android.Cursor ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.tojc.ormlite.android.Uri com.tojc.ormlite.android.Uri ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , InsertParameters com.tojc.ormlite.android.InsertParameters ) { Uri com.tojc.ormlite.android.Uri = null ; long long = com.tojc.ormlite.android.SQLiteDatabase . insert ( com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getName ( ) , null , com.tojc.ormlite.android.InsertParameters . getValues ( ) ) ; if ( long >= NUMBER ) { com.tojc.ormlite.android.Uri = ContentUris . withAppendedId ( com.tojc.ormlite.android.MatcherPattern . getContentUriPattern ( ) , long ) ; } else { throw new SQLException ( STRING + com.tojc.ormlite.android.InsertParameters . getUri ( ) . toString ( ) ) ; } return com.tojc.ormlite.android.Uri ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , DeleteParameters com.tojc.ormlite.android.DeleteParameters ) { int int = - NUMBER ; switch ( com.tojc.ormlite.android.MatcherPattern . getMimeTypeVnd ( ) . getSubType ( ) ) { case DIRECTORY : int = com.tojc.ormlite.android.SQLiteDatabase . delete ( com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getName ( ) , com.tojc.ormlite.android.DeleteParameters . getSelection ( ) , com.tojc.ormlite.android.DeleteParameters . getSelectionArgs ( ) ) ; break; case ITEM : java.lang.String java.lang.String = com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getIdColumnInfo ( ) . getColumnName ( ) + STRING + com.tojc.ormlite.android.DeleteParameters . getUri ( ) . getPathSegments ( ) . get ( NUMBER ) ; if ( com.tojc.ormlite.android.DeleteParameters . getSelection ( ) != null && com.tojc.ormlite.android.DeleteParameters . getSelection ( ) . length ( ) >= NUMBER ) { java.lang.String += STRING + com.tojc.ormlite.android.DeleteParameters . getSelection ( ) + STRING ; } int = com.tojc.ormlite.android.SQLiteDatabase . delete ( com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getName ( ) , java.lang.String , com.tojc.ormlite.android.DeleteParameters . getSelectionArgs ( ) ) ; break; default: break; } return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( T T , SQLiteDatabase com.tojc.ormlite.android.SQLiteDatabase , MatcherPattern com.tojc.ormlite.android.MatcherPattern , UpdateParameters com.tojc.ormlite.android.UpdateParameters ) { int int = - NUMBER ; switch ( com.tojc.ormlite.android.MatcherPattern . getMimeTypeVnd ( ) . getSubType ( ) ) { case DIRECTORY : int = com.tojc.ormlite.android.SQLiteDatabase . update ( com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getName ( ) , com.tojc.ormlite.android.UpdateParameters . getValues ( ) , com.tojc.ormlite.android.UpdateParameters . getSelection ( ) , com.tojc.ormlite.android.UpdateParameters . getSelectionArgs ( ) ) ; break; case ITEM : java.lang.String java.lang.String = com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getIdColumnInfo ( ) . getColumnName ( ) + STRING + com.tojc.ormlite.android.UpdateParameters . getUri ( ) . getPathSegments ( ) . get ( NUMBER ) ; if ( com.tojc.ormlite.android.UpdateParameters . getSelection ( ) != null && com.tojc.ormlite.android.UpdateParameters . getSelection ( ) . length ( ) >= NUMBER ) { java.lang.String += STRING + com.tojc.ormlite.android.UpdateParameters . getSelection ( ) + STRING ; } int = com.tojc.ormlite.android.SQLiteDatabase . update ( com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getName ( ) , com.tojc.ormlite.android.UpdateParameters . getValues ( ) , java.lang.String , com.tojc.ormlite.android.UpdateParameters . getSelectionArgs ( ) ) ; break; default: break; } return int ; }  <METHOD_END>
<METHOD_START> protected java.lang.String java.lang.String ( MatcherPattern com.tojc.ormlite.android.MatcherPattern , QueryParameters com.tojc.ormlite.android.QueryParameters ) { java.lang.String java.lang.String = STRING ; if ( com.tojc.ormlite.android.QueryParameters . getSortOrder ( ) != null && com.tojc.ormlite.android.QueryParameters . getSortOrder ( ) . length ( ) >= NUMBER ) { java.lang.String = com.tojc.ormlite.android.QueryParameters . getSortOrder ( ) ; } else { java.lang.String = com.tojc.ormlite.android.MatcherPattern . getTableInfo ( ) . getDefaultSortOrderString ( ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase = new com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase ( true ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase . isValid ( ) ) ; com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase . void ( ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase = new com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase ( true ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase . isValid ( false ) ) ; try { com.tojc.ormlite.android.annotation.info.AnnotationInfoBaseTest.DummyAnnotationInfoBase . isValid ( true ) ; fail ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { assertTrue ( true ) ; } }  <METHOD_END>
<METHOD_START> public void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public void void ( ) { validFlagOn ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + STRING + boolean + STRING + super. java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( null , null ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( null , java.lang.String ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( java.lang.String , null ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getType ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ; assertEquals ( ContentMimeTypeVndInfo . VND + STRING + java.lang.String + STRING + java.lang.String , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getVndProviderSpecificString ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfoTest.AnnotatedClassUnderTestNoParams .class ) ; assertEquals ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfoTest.AnnotatedClassUnderTestNoParams .class . java.lang.Package ( ) . java.lang.String ( ) + ContentMimeTypeVndInfo . PROVIDER_SUFFIX , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getName ( ) ) ; assertEquals ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfoTest.AnnotatedClassUnderTestNoParams .class . java.lang.String ( ) . java.lang.String ( java.util.Locale . java.util.Locale ) , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getType ( ) ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfoTest.AnnotatedClassUnderTestWithParams .class ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getName ( ) ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getType ( ) ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo = new ContentMimeTypeVndInfo ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfoTest.NonAnnotatedClassUnderTest .class ) ; assertEquals ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfoTest.NonAnnotatedClassUnderTest .class . java.lang.Package ( ) . java.lang.String ( ) + ContentMimeTypeVndInfo . PROVIDER_SUFFIX , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getName ( ) ) ; assertEquals ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfoTest.NonAnnotatedClassUnderTest .class . java.lang.String ( ) . java.lang.String ( java.util.Locale . java.util.Locale ) , com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . getType ( ) ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.ContentMimeTypeVndInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( null , null ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( null , java.lang.String ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( java.lang.String , null ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( java.lang.String , java.lang.String ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( java.lang.String , java.lang.String ) ; assertFalse ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( java.lang.String , java.lang.String ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( java.lang.String , java.lang.String ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.annotation.info.ContentUriInfo . getAuthority ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( java.lang.String , java.lang.String ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.annotation.info.ContentUriInfo . getPath ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( com.tojc.ormlite.android.annotation.info.ContentUriInfoTest.AnnotatedClassUnderTestNoParams .class ) ; assertEquals ( com.tojc.ormlite.android.annotation.info.ContentUriInfoTest.AnnotatedClassUnderTestNoParams .class . java.lang.Package ( ) . java.lang.String ( ) , com.tojc.ormlite.android.annotation.info.ContentUriInfo . getAuthority ( ) ) ; assertEquals ( com.tojc.ormlite.android.annotation.info.ContentUriInfoTest.AnnotatedClassUnderTestNoParams .class . java.lang.String ( ) . java.lang.String ( java.util.Locale . java.util.Locale ) , com.tojc.ormlite.android.annotation.info.ContentUriInfo . getPath ( ) ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( com.tojc.ormlite.android.annotation.info.ContentUriInfoTest.AnnotatedClassUnderTestWithParams .class ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.annotation.info.ContentUriInfo . getAuthority ( ) ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.annotation.info.ContentUriInfo . getPath ( ) ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.annotation.info.ContentUriInfo = new ContentUriInfo ( com.tojc.ormlite.android.annotation.info.ContentUriInfoTest.NonAnnotatedClassUnderTest .class ) ; assertEquals ( com.tojc.ormlite.android.annotation.info.ContentUriInfoTest.NonAnnotatedClassUnderTest .class . java.lang.Package ( ) . java.lang.String ( ) , com.tojc.ormlite.android.annotation.info.ContentUriInfo . getAuthority ( ) ) ; assertEquals ( com.tojc.ormlite.android.annotation.info.ContentUriInfoTest.NonAnnotatedClassUnderTest .class . java.lang.String ( ) . java.lang.String ( java.util.Locale . java.util.Locale ) , com.tojc.ormlite.android.annotation.info.ContentUriInfo . getPath ( ) ) ; assertTrue ( com.tojc.ormlite.android.annotation.info.ContentUriInfo . isValidValue ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.NoSuchFieldException { java.lang.reflect.Field java.lang.reflect.Field = com.tojc.ormlite.android.framework.ColumnInfoTest.ClassUnderTest .class . java.lang.reflect.Field ( STRING ) ; com.tojc.ormlite.android.framework.ColumnInfo = new ColumnInfo ( java.lang.reflect.Field ) ; assertTrue ( com.tojc.ormlite.android.framework.ColumnInfo . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.NoSuchFieldException { java.lang.reflect.Field java.lang.reflect.Field = com.tojc.ormlite.android.framework.ColumnInfoTest.ClassUnderTest .class . java.lang.reflect.Field ( STRING ) ; com.tojc.ormlite.android.framework.ColumnInfo = new ColumnInfo ( java.lang.reflect.Field ) ; assertTrue ( com.tojc.ormlite.android.framework.ColumnInfo . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.NoSuchFieldException { java.lang.reflect.Field java.lang.reflect.Field = com.tojc.ormlite.android.framework.ColumnInfoTest.ClassUnderTest .class . java.lang.reflect.Field ( STRING ) ; com.tojc.ormlite.android.framework.ColumnInfo = new ColumnInfo ( java.lang.reflect.Field ) ; assertTrue ( com.tojc.ormlite.android.framework.ColumnInfo . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.NoSuchFieldException { java.lang.reflect.Field java.lang.reflect.Field = com.tojc.ormlite.android.framework.ColumnInfoTest.ClassUnderTest .class . java.lang.reflect.Field ( STRING ) ; try { com.tojc.ormlite.android.framework.ColumnInfo = new ColumnInfo ( java.lang.reflect.Field ) ; fail ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { assertTrue ( true ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.NoSuchFieldException { java.lang.reflect.Field java.lang.reflect.Field = com.tojc.ormlite.android.framework.ColumnInfoTest.ClassUnderTest .class . java.lang.reflect.Field ( java.lang.String ) ; com.tojc.ormlite.android.framework.ColumnInfo = new ColumnInfo ( java.lang.reflect.Field ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.framework.ColumnInfo . getColumnName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.NoSuchFieldException { java.lang.reflect.Field java.lang.reflect.Field = com.tojc.ormlite.android.framework.ColumnInfoTest.ClassUnderTest .class . java.lang.reflect.Field ( java.lang.String ) ; com.tojc.ormlite.android.framework.ColumnInfo = new ColumnInfo ( java.lang.reflect.Field ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.framework.ColumnInfo . getColumnName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.NoSuchFieldException { final java.lang.String java.lang.String = STRING ; java.lang.reflect.Field java.lang.reflect.Field = com.tojc.ormlite.android.framework.ColumnInfoTest.ClassUnderTest .class . java.lang.reflect.Field ( java.lang.String ) ; com.tojc.ormlite.android.framework.ColumnInfo = new ColumnInfo ( java.lang.reflect.Field ) ; assertEquals ( java.lang.String , com.tojc.ormlite.android.framework.ColumnInfo . getColumnName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { TableInfo com.tojc.ormlite.android.framework.TableInfo = new TableInfo ( com.tojc.ormlite.android.framework.MatcherPatternTest.ClassUnderTestWithAnnotations .class ) ; SubType com.tojc.ormlite.android.framework.SubType = null ; java.lang.String java.lang.String = java.lang.String ; int int = NUMBER ; com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; assertFalse ( com.tojc.ormlite.android.framework.MatcherPattern . isValid ( boolean ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { TableInfo com.tojc.ormlite.android.framework.TableInfo = new TableInfo ( com.tojc.ormlite.android.framework.MatcherPatternTest.ClassUnderTestWithAnnotations .class ) ; SubType com.tojc.ormlite.android.framework.SubType = SubType . ITEM ; java.lang.String java.lang.String = null ; int int = NUMBER ; com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; assertFalse ( com.tojc.ormlite.android.framework.MatcherPattern . isValid ( boolean ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { TableInfo com.tojc.ormlite.android.framework.TableInfo = new TableInfo ( com.tojc.ormlite.android.framework.MatcherPatternTest.ClassUnderTestWithAnnotations .class ) ; SubType com.tojc.ormlite.android.framework.SubType = SubType . ITEM ; java.lang.String java.lang.String = java.lang.String ; int int = NUMBER ; com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; assertTrue ( com.tojc.ormlite.android.framework.MatcherPattern . isValid ( boolean ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { TableInfo com.tojc.ormlite.android.framework.TableInfo = new TableInfo ( com.tojc.ormlite.android.framework.MatcherPatternTest.ClassUnderTestWithAnnotations .class ) ; SubType com.tojc.ormlite.android.framework.SubType = SubType . ITEM ; java.lang.String java.lang.String = java.lang.String ; int int = NUMBER ; com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; assertFalse ( com.tojc.ormlite.android.framework.MatcherPattern . isValid ( boolean ) ) ; int = - NUMBER ; com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; assertFalse ( com.tojc.ormlite.android.framework.MatcherPattern . isValid ( boolean ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { TableInfo com.tojc.ormlite.android.framework.TableInfo = new TableInfo ( com.tojc.ormlite.android.framework.MatcherPatternTest.ClassUnderTestWithAnnotations .class ) ; SubType com.tojc.ormlite.android.framework.SubType = SubType . ITEM ; java.lang.String java.lang.String = java.lang.String ; int int = NUMBER ; com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; assertTrue ( com.tojc.ormlite.android.framework.MatcherPattern . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { TableInfo com.tojc.ormlite.android.framework.TableInfo = new TableInfo ( com.tojc.ormlite.android.framework.MatcherPatternTest.ClassUnderTestWithoutAnnotations .class ) ; SubType com.tojc.ormlite.android.framework.SubType = SubType . ITEM ; java.lang.String java.lang.String = java.lang.String ; int int = NUMBER ; com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; assertTrue ( com.tojc.ormlite.android.framework.MatcherPattern . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { TableInfo com.tojc.ormlite.android.framework.TableInfo = new TableInfo ( com.tojc.ormlite.android.framework.MatcherPatternTest.ClassUnderTestWithAnnotationsWithParams .class ) ; SubType com.tojc.ormlite.android.framework.SubType = SubType . ITEM ; java.lang.String java.lang.String = java.lang.String ; int int = NUMBER ; com.tojc.ormlite.android.framework.MatcherPattern = new MatcherPattern ( com.tojc.ormlite.android.framework.TableInfo , com.tojc.ormlite.android.framework.SubType , java.lang.String , int ) ; assertTrue ( com.tojc.ormlite.android.framework.MatcherPattern . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.framework.MimeTypeVnd = new MimeTypeVnd ( null , new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ) ; assertFalse ( com.tojc.ormlite.android.framework.MimeTypeVnd . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.framework.MimeTypeVnd = new MimeTypeVnd ( SubType . ITEM , new ContentMimeTypeVndInfo ( null , java.lang.String ) ) ; assertFalse ( com.tojc.ormlite.android.framework.MimeTypeVnd . isValid ( ) ) ; com.tojc.ormlite.android.framework.MimeTypeVnd = new MimeTypeVnd ( SubType . ITEM , new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ) ; assertFalse ( com.tojc.ormlite.android.framework.MimeTypeVnd . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.framework.MimeTypeVnd = new MimeTypeVnd ( SubType . ITEM , new ContentMimeTypeVndInfo ( java.lang.String , null ) ) ; assertFalse ( com.tojc.ormlite.android.framework.MimeTypeVnd . isValid ( ) ) ; com.tojc.ormlite.android.framework.MimeTypeVnd = new MimeTypeVnd ( SubType . ITEM , new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ) ; assertFalse ( com.tojc.ormlite.android.framework.MimeTypeVnd . isValid ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.tojc.ormlite.android.framework.MimeTypeVnd = new MimeTypeVnd ( SubType . ITEM , new ContentMimeTypeVndInfo ( java.lang.String , java.lang.String ) ) ; final java.lang.String java.lang.String = SubType . ITEM . toString ( ) + java.io.File . java.lang.String + ContentMimeTypeVndInfo . VND + ContentMimeTypeVndInfo . VND_SEPARATOR + java.lang.String + ContentMimeTypeVndInfo . VND_SEPARATOR + java.lang.String ; assertEquals ( java.lang.String , com.tojc.ormlite.android.framework.MimeTypeVnd . getMimeTypeString ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . int = NUMBER ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( ) { }  <METHOD_END>
<METHOD_START> public void ( int int ) { this . int = NUMBER ; this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; com.tojc.ormlite.android.SampleHelper ( ) . resetAllTables ( ) ; UnderTestSampleProvider com.tojc.ormlite.android.UnderTestSampleProvider = new UnderTestSampleProvider ( ) ; com.tojc.ormlite.android.UnderTestSampleProvider . attachInfo ( getInstrumentation ( ) . getContext ( ) , null ) ; this . com.tojc.ormlite.android.MockContentResolver = new MockContentResolver ( ) ; this . com.tojc.ormlite.android.MockContentResolver . addProvider ( AccountContract . AUTHORITY , com.tojc.ormlite.android.UnderTestSampleProvider ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { ContentValues com.tojc.ormlite.android.ContentValues = new ContentValues ( ) ; com.tojc.ormlite.android.ContentValues . clear ( ) ; com.tojc.ormlite.android.ContentValues . put ( AccountContract . NAME , java.lang.String ) ; this . com.tojc.ormlite.android.MockContentResolver . insert ( AccountContract . CONTENT_URI , com.tojc.ormlite.android.ContentValues ) ; RuntimeExceptionDao < Account , java.lang.Integer > com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> = com.tojc.ormlite.android.SampleHelper ( ) . getRuntimeExceptionDao ( Account .class ) ; java.util.List<com.tojc.ormlite.android.Account> < Account > java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Account com.tojc.ormlite.android.Account = new Account ( java.lang.String ) ; RuntimeExceptionDao < Account , java.lang.Integer > com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> = com.tojc.ormlite.android.SampleHelper ( ) . getRuntimeExceptionDao ( Account .class ) ; com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . create ( com.tojc.ormlite.android.Account ) ; java.util.List<com.tojc.ormlite.android.Account> < Account > java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; this . com.tojc.ormlite.android.MockContentResolver . delete ( AccountContract . CONTENT_URI , BaseColumns . _ID + STRING + com.tojc.ormlite.android.Account . getId ( ) , null ) ; java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Account com.tojc.ormlite.android.Account = new Account ( java.lang.String ) ; RuntimeExceptionDao < Account , java.lang.Integer > com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> = com.tojc.ormlite.android.SampleHelper ( ) . getRuntimeExceptionDao ( Account .class ) ; com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . create ( com.tojc.ormlite.android.Account ) ; java.util.List<com.tojc.ormlite.android.Account> < Account > java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; ContentValues com.tojc.ormlite.android.ContentValues = new ContentValues ( ) ; com.tojc.ormlite.android.ContentValues . clear ( ) ; com.tojc.ormlite.android.ContentValues . put ( AccountContract . NAME , java.lang.String ) ; this . com.tojc.ormlite.android.MockContentResolver . update ( AccountContract . CONTENT_URI , com.tojc.ormlite.android.ContentValues , BaseColumns . _ID + STRING + com.tojc.ormlite.android.Account . getId ( ) , null ) ; java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Account com.tojc.ormlite.android.Account = new Account ( java.lang.String ) ; Account com.tojc.ormlite.android.Account = new Account ( java.lang.String ) ; RuntimeExceptionDao < Account , java.lang.Integer > com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> = com.tojc.ormlite.android.SampleHelper ( ) . getRuntimeExceptionDao ( Account .class ) ; com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . create ( com.tojc.ormlite.android.Account ) ; com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . create ( com.tojc.ormlite.android.Account ) ; java.util.List<com.tojc.ormlite.android.Account> < Account > java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; Cursor com.tojc.ormlite.android.Cursor = this . com.tojc.ormlite.android.MockContentResolver . query ( AccountContract . CONTENT_URI , new java.lang.String [] { BaseColumns . _ID , AccountContract . NAME } , null , null , null ) ; java.util.List<com.tojc.ormlite.android.Account> = new java.util.ArrayList<com.tojc.ormlite.android.Account> < Account > ( ) ; while ( com.tojc.ormlite.android.Cursor . moveToNext ( ) ) { Account com.tojc.ormlite.android.Account = new Account ( com.tojc.ormlite.android.Cursor . getString ( NUMBER ) ) ; java.util.List<com.tojc.ormlite.android.Account> . add ( com.tojc.ormlite.android.Account ) ; } com.tojc.ormlite.android.Cursor . close ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Account com.tojc.ormlite.android.Account = new Account ( java.lang.String ) ; Account com.tojc.ormlite.android.Account = new Account ( java.lang.String ) ; RuntimeExceptionDao < Account , java.lang.Integer > com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> = com.tojc.ormlite.android.SampleHelper ( ) . getRuntimeExceptionDao ( Account .class ) ; com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . create ( com.tojc.ormlite.android.Account ) ; com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . create ( com.tojc.ormlite.android.Account ) ; java.util.List<com.tojc.ormlite.android.Account> < Account > java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; java.lang.String java.lang.String = BaseColumns . _ID + STRING ; Cursor com.tojc.ormlite.android.Cursor = this . com.tojc.ormlite.android.MockContentResolver . query ( AccountContract . CONTENT_URI , new java.lang.String [] { BaseColumns . _ID , AccountContract . NAME } , null , null , java.lang.String ) ; java.util.List<com.tojc.ormlite.android.Account> = new java.util.ArrayList<com.tojc.ormlite.android.Account> < Account > ( ) ; while ( com.tojc.ormlite.android.Cursor . moveToNext ( ) ) { Account com.tojc.ormlite.android.Account = new Account ( com.tojc.ormlite.android.Cursor . getString ( NUMBER ) ) ; java.util.List<com.tojc.ormlite.android.Account> . add ( com.tojc.ormlite.android.Account ) ; } com.tojc.ormlite.android.Cursor . close ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) com.tojc.ormlite.android.RemoteException { Account com.tojc.ormlite.android.Account = new Account ( java.lang.String ) ; Account com.tojc.ormlite.android.Account = new Account ( java.lang.String ) ; RuntimeExceptionDao < Account , java.lang.Integer > com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> = com.tojc.ormlite.android.SampleHelper ( ) . getRuntimeExceptionDao ( Account .class ) ; com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . create ( com.tojc.ormlite.android.Account ) ; com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . create ( com.tojc.ormlite.android.Account ) ; java.util.List<com.tojc.ormlite.android.Account> < Account > java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; ContentProviderClient com.tojc.ormlite.android.ContentProviderClient = this . com.tojc.ormlite.android.MockContentResolver . acquireContentProviderClient ( AccountContract . CONTENT_URI ) ; Cursor com.tojc.ormlite.android.Cursor = com.tojc.ormlite.android.ContentProviderClient . query ( AccountContract . CONTENT_URI , null , null , null , null ) ; java.util.List<com.tojc.ormlite.android.Account> = new java.util.ArrayList<com.tojc.ormlite.android.Account> < Account > ( ) ; while ( com.tojc.ormlite.android.Cursor . moveToNext ( ) ) { Account com.tojc.ormlite.android.Account = new Account ( com.tojc.ormlite.android.Cursor . getString ( NUMBER ) ) ; java.util.List<com.tojc.ormlite.android.Account> . add ( com.tojc.ormlite.android.Account ) ; } com.tojc.ormlite.android.Cursor . close ( ) ; com.tojc.ormlite.android.ContentProviderClient . release ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final int int = NUMBER ; ContentValues [] com.tojc.ormlite.android.ContentValues[] = new ContentValues [ int ] ; for ( int int = NUMBER ; int < int ; int ++ ) { ContentValues com.tojc.ormlite.android.ContentValues = new ContentValues ( ) ; com.tojc.ormlite.android.ContentValues . clear ( ) ; com.tojc.ormlite.android.ContentValues . put ( AccountContract . NAME , java.lang.String + int ) ; com.tojc.ormlite.android.ContentValues[] [ int ] = com.tojc.ormlite.android.ContentValues ; } this . com.tojc.ormlite.android.MockContentResolver . bulkInsert ( AccountContract . CONTENT_URI , com.tojc.ormlite.android.ContentValues[] ) ; RuntimeExceptionDao < Account , java.lang.Integer > com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> = com.tojc.ormlite.android.SampleHelper ( ) . getRuntimeExceptionDao ( Account .class ) ; java.util.List<com.tojc.ormlite.android.Account> < Account > java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( int , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; int int = NUMBER ; for ( Account com.tojc.ormlite.android.Account : java.util.List<com.tojc.ormlite.android.Account> ) { assertEquals ( java.lang.String + int ++ , com.tojc.ormlite.android.Account . getName ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) com.tojc.ormlite.android.RemoteException , com.tojc.ormlite.android.OperationApplicationException { java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> = new java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> < ContentProviderOperation > ( ) ; java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( AccountContract . CONTENT_URI ) . withValue ( AccountContract . NAME , java.lang.String ) . build ( ) ) ; java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( AccountContract . CONTENT_URI ) . withValue ( AccountContract . NAME , java.lang.String ) . build ( ) ) ; this . com.tojc.ormlite.android.MockContentResolver . applyBatch ( AccountContract . AUTHORITY , java.util.ArrayList<com.tojc.ormlite.android.ContentProviderOperation> ) ; RuntimeExceptionDao < Account , java.lang.Integer > com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> = com.tojc.ormlite.android.SampleHelper ( ) . getRuntimeExceptionDao ( Account .class ) ; java.util.List<com.tojc.ormlite.android.Account> < Account > java.util.List<com.tojc.ormlite.android.Account> = com.tojc.ormlite.android.RuntimeExceptionDao<com.tojc.ormlite.android.Account,java.lang.Integer> . queryForAll ( ) ; assertEquals ( NUMBER , java.util.List<com.tojc.ormlite.android.Account> . size ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; assertEquals ( java.lang.String , java.util.List<com.tojc.ormlite.android.Account> . get ( NUMBER ) . getName ( ) ) ; }  <METHOD_END>
<METHOD_START> private com.tojc.ormlite.android.SampleHelper com.tojc.ormlite.android.SampleHelper ( ) { return new SampleHelper ( getInstrumentation ( ) . getTargetContext ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( ) { }  <METHOD_END>
<METHOD_START> private void ( ) { }  <METHOD_END>
<METHOD_START> public void ( Context com.tojc.ormlite.android.test.provider.Context ) { super( com.tojc.ormlite.android.test.provider.Context , STRING , null , NUMBER ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.tojc.ormlite.android.test.provider.SQLiteDatabase , ConnectionSource com.tojc.ormlite.android.test.provider.ConnectionSource ) { try { void ( ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { java.sql.SQLException . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.tojc.ormlite.android.test.provider.SQLiteDatabase , ConnectionSource com.tojc.ormlite.android.test.provider.ConnectionSource , int int , int int ) { try { void ( ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { java.sql.SQLException . void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) java.sql.SQLException { for ( java.lang.Class<?> < ? > java.lang.Class<?> : java.lang.Class<?>[] ) { TableUtils . dropTable ( connectionSource , java.lang.Class<> , true ) ; TableUtils . createTable ( connectionSource , java.lang.Class<> ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<com.tojc.ormlite.android.test.provider.SampleHelper> < SampleHelper > java.lang.Class<com.tojc.ormlite.android.test.provider.SampleHelper> ( ) { return SampleHelper .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { int int = NUMBER ; setMatcherController ( new MatcherController ( ) . add ( Account .class , SubType . DIRECTORY , STRING , int ++ ) . add ( Account .class , SubType . ITEM , STRING , int ++ ) . add ( Membership .class , SubType . DIRECTORY , STRING , int ++ ) . add ( Membership .class , SubType . ITEM , STRING , int ++ ) ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.tojc.ormlite.android.ormlitecontentprovider.sample.Bundle ) { super. onCreate ( com.tojc.ormlite.android.ormlitecontentprovider.sample.Bundle ) ; setContentView ( R . layout . activity_main ) ; ContentValues com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues = new ContentValues ( ) ; com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues . clear ( ) ; com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues . put ( AccountContract . NAME , STRING ) ; getContentResolver ( ) . insert ( AccountContract . CONTENT_URI , com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues ) ; ContentValues [] com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues[] = new ContentValues [ int ] ; for ( int int = NUMBER ; int < int ; int ++ ) { com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues = new ContentValues ( ) ; com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues . clear ( ) ; com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues . put ( AccountContract . NAME , STRING + int ) ; com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues[] [ int ] = com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues ; } getContentResolver ( ) . bulkInsert ( AccountContract . CONTENT_URI , com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentValues[] ) ; Cursor com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor = getContentResolver ( ) . query ( AccountContract . CONTENT_URI , null , null , null , null ) ; com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . moveToFirst ( ) ; do { for ( int int = NUMBER ; int < com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . getColumnCount ( ) ; int ++ ) { Log . d ( java.lang.Class<? extends com.tojc.ormlite.android.ormlitecontentprovider.sample.MainActivity> ( ) . java.lang.String ( ) , com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . getColumnName ( int ) + STRING + com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . getString ( int ) ) ; } } while ( com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . moveToNext ( ) ); com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . close ( ) ; java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderOperation> < ContentProviderOperation > java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderOperation> = new java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderOperation> < ContentProviderOperation > ( ) ; java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( AccountContract . CONTENT_URI ) . withValue ( AccountContract . NAME , STRING ) . build ( ) ) ; java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderOperation> . add ( ContentProviderOperation . newInsert ( AccountContract . CONTENT_URI ) . withValue ( AccountContract . NAME , STRING ) . build ( ) ) ; try { getContentResolver ( ) . applyBatch ( AccountContract . AUTHORITY , java.util.ArrayList<com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderOperation> ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } ContentProviderClient com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderClient = getContentResolver ( ) . acquireContentProviderClient ( AccountContract . CONTENT_URI ) ; Cursor com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor = null ; try { com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor = com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderClient . query ( AccountContract . CONTENT_URI , null , null , null , null ) ; com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . moveToFirst ( ) ; do { for ( int int = NUMBER ; int < com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . getColumnCount ( ) ; int ++ ) { Log . d ( java.lang.Class<? extends com.tojc.ormlite.android.ormlitecontentprovider.sample.MainActivity> ( ) . java.lang.String ( ) , com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . getColumnName ( int ) + STRING + com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . getString ( int ) ) ; } } while ( com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . moveToNext ( ) ); } catch ( RemoteException com.tojc.ormlite.android.ormlitecontentprovider.sample.RemoteException ) { com.tojc.ormlite.android.ormlitecontentprovider.sample.RemoteException . printStackTrace ( ) ; } finally { if ( com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor != null ) { com.tojc.ormlite.android.ormlitecontentprovider.sample.Cursor . close ( ) ; } } com.tojc.ormlite.android.ormlitecontentprovider.sample.ContentProviderClient . release ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Menu com.tojc.ormlite.android.ormlitecontentprovider.sample.Menu ) { getMenuInflater ( ) . inflate ( R . menu . activity_main , com.tojc.ormlite.android.ormlitecontentprovider.sample.Menu ) ; return true ; }  <METHOD_END>
<METHOD_START> public void ( ) { }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { this . int = NUMBER ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void ( ) { }  <METHOD_END>
<METHOD_START> public void ( Context com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.Context ) { super( com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.Context , STRING , null , NUMBER ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.SQLiteDatabase , ConnectionSource com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.ConnectionSource ) { try { TableUtils . createTableIfNotExists ( com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.ConnectionSource , Account .class ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { java.sql.SQLException . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.SQLiteDatabase , ConnectionSource com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.ConnectionSource , int int , int int ) { try { TableUtils . dropTable ( com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.ConnectionSource , Account .class , true ) ; TableUtils . createTable ( com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.ConnectionSource , Account .class ) ; } catch ( java.sql.SQLException java.sql.SQLException ) { java.sql.SQLException . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Class<com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.SampleHelper> < SampleHelper > java.lang.Class<com.tojc.ormlite.android.ormlitecontentprovider.sample.provider.SampleHelper> ( ) { return SampleHelper .class ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { setMatcherController ( new MatcherController ( ) . add ( Account .class , SubType . DIRECTORY , STRING , AccountContract . CONTENT_URI_PATTERN_MANY ) . add ( Account .class , SubType . ITEM , STRING , AccountContract . CONTENT_URI_PATTERN_ONE ) ) ; return true ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( GitActivity .class ); }  <METHOD_END>
<METHOD_START> protected void void ( ) java.lang.Exception { super. setUp ( ) ; com.zeapo.pwdstore.Instrumentation = getInstrumentation ( ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_CLONE ) ; setActivityIntent ( com.zeapo.pwdstore.Intent ) ; com.zeapo.pwdstore.Activity = getActivity ( ) ; assertNotNull ( com.zeapo.pwdstore.Activity ) ; com.zeapo.pwdstore.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( com.zeapo.pwdstore.Activity . getApplicationContext ( ) ) ; com.zeapo.pwdstore.EditText = ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . clone_uri ) ; com.zeapo.pwdstore.EditText = ( ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . server_url ) ) ; com.zeapo.pwdstore.EditText = ( ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . server_port ) ) ; com.zeapo.pwdstore.EditText = ( ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . server_path ) ) ; com.zeapo.pwdstore.EditText = ( ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . server_user ) ) ; com.zeapo.pwdstore.Spinner = ( Spinner ) com.zeapo.pwdstore.Activity . findViewById ( R . id . clone_protocol ) ; com.zeapo.pwdstore.Spinner = ( Spinner ) com.zeapo.pwdstore.Activity . findViewById ( R . id . connection_mode ) ; assertNotNull ( com.zeapo.pwdstore.EditText ) ; assertNotNull ( com.zeapo.pwdstore.EditText ) ; assertNotNull ( com.zeapo.pwdstore.EditText ) ; assertNotNull ( com.zeapo.pwdstore.EditText ) ; assertNotNull ( com.zeapo.pwdstore.EditText ) ; assertNotNull ( com.zeapo.pwdstore.Spinner ) ; assertNotNull ( com.zeapo.pwdstore.Spinner ) ; assertEquals ( com.zeapo.pwdstore.Spinner . getSelectedItem ( ) , com.zeapo.pwdstore.SharedPreferences . getString ( STRING , STRING ) ) ; assertEquals ( com.zeapo.pwdstore.Spinner . getSelectedItem ( ) , com.zeapo.pwdstore.SharedPreferences . getString ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { final Solo com.zeapo.pwdstore.Solo = new Solo ( getInstrumentation ( ) , getActivity ( ) ) ; FileUtils . deleteDirectory ( new java.io.File ( com.zeapo.pwdstore.Activity . getFilesDir ( ) + com.zeapo.pwdstore.Activity . getResources ( ) . getString ( R . string . store_git ) ) ) ; PasswordRepository . getRepository ( new java.io.File ( com.zeapo.pwdstore.Activity . getFilesDir ( ) + com.zeapo.pwdstore.Activity . getResources ( ) . getString ( R . string . store_git ) ) ) ; com.zeapo.pwdstore.Activity . runOnUiThread ( new java.lang.Runnable ( ) { public void void ( ) { com.zeapo.pwdstore.Spinner . setSelection ( NUMBER ) ; } } ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.zeapo.pwdstore.Spinner . setSelection ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( GitActivity .class ); }  <METHOD_END>
<METHOD_START> protected void void ( ) java.lang.Exception { super. setUp ( ) ; com.zeapo.pwdstore.Instrumentation = getInstrumentation ( ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . EDIT_SERVER ) ; setActivityIntent ( com.zeapo.pwdstore.Intent ) ; com.zeapo.pwdstore.Activity = getActivity ( ) ; assertNotNull ( com.zeapo.pwdstore.Activity ) ; com.zeapo.pwdstore.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( com.zeapo.pwdstore.Activity . getApplicationContext ( ) ) ; com.zeapo.pwdstore.EditText = ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . clone_uri ) ; com.zeapo.pwdstore.EditText = ( ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . server_url ) ) ; com.zeapo.pwdstore.EditText = ( ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . server_port ) ) ; com.zeapo.pwdstore.EditText = ( ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . server_path ) ) ; com.zeapo.pwdstore.EditText = ( ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . server_user ) ) ; com.zeapo.pwdstore.Spinner = ( Spinner ) com.zeapo.pwdstore.Activity . findViewById ( R . id . clone_protocol ) ; com.zeapo.pwdstore.Spinner = ( Spinner ) com.zeapo.pwdstore.Activity . findViewById ( R . id . connection_mode ) ; assertEquals ( com.zeapo.pwdstore.Spinner . getSelectedItem ( ) , com.zeapo.pwdstore.SharedPreferences . getString ( STRING , STRING ) ) ; assertEquals ( com.zeapo.pwdstore.Spinner . getSelectedItem ( ) , com.zeapo.pwdstore.SharedPreferences . getString ( STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { com.zeapo.pwdstore.Activity . runOnUiThread ( new java.lang.Runnable ( ) { public void void ( ) { com.zeapo.pwdstore.Spinner . requestFocus ( ) ; com.zeapo.pwdstore.Spinner . setSelection ( NUMBER ) ; } } ) ; com.zeapo.pwdstore.Instrumentation . waitForIdleSync ( ) ; assertEquals ( com.zeapo.pwdstore.Spinner . getSelectedItem ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.zeapo.pwdstore.Spinner . requestFocus ( ) ; com.zeapo.pwdstore.Spinner . setSelection ( NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( PasswordStore .class ); }  <METHOD_END>
<METHOD_START> protected void void ( ) java.lang.Exception { super. setUp ( ) ; com.zeapo.pwdstore.Instrumentation = getInstrumentation ( ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( ) ; setActivityIntent ( com.zeapo.pwdstore.Intent ) ; com.zeapo.pwdstore.Activity = getActivity ( ) ; assertNotNull ( com.zeapo.pwdstore.Activity ) ; com.zeapo.pwdstore.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( com.zeapo.pwdstore.Activity . getApplicationContext ( ) ) ; com.zeapo.pwdstore.SharedPreferences . edit ( ) . clear ( ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.zeapo.pwdstore.autofill.Bundle ) { super. onCreate ( com.zeapo.pwdstore.autofill.Bundle ) ; Bundle com.zeapo.pwdstore.autofill.Bundle = getIntent ( ) . getExtras ( ) ; if ( com.zeapo.pwdstore.autofill.Bundle != null && com.zeapo.pwdstore.autofill.Bundle . containsKey ( STRING ) ) { try { PendingIntent com.zeapo.pwdstore.autofill.PendingIntent = com.zeapo.pwdstore.autofill.Bundle . getParcelable ( STRING ) ; if ( com.zeapo.pwdstore.autofill.PendingIntent == null ) { return; } startIntentSenderForResult ( com.zeapo.pwdstore.autofill.PendingIntent . getIntentSender ( ) , int , null , NUMBER , NUMBER , NUMBER ) ; } catch ( IntentSender . IntentSender IntentSender.SendIntentException ) { Log . e ( AutofillService . Constants . TAG , STRING , IntentSender.SendIntentException ) ; } } else if ( com.zeapo.pwdstore.autofill.Bundle != null && com.zeapo.pwdstore.autofill.Bundle . containsKey ( STRING ) ) { Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( getApplicationContext ( ) , PasswordStore .class ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , true ) ; startActivityForResult ( com.zeapo.pwdstore.autofill.Intent , int ) ; } else if ( com.zeapo.pwdstore.autofill.Bundle != null && com.zeapo.pwdstore.autofill.Bundle . containsKey ( STRING ) ) { Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( getApplicationContext ( ) , PasswordStore .class ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , true ) ; startActivityForResult ( com.zeapo.pwdstore.autofill.Intent , int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int , Intent com.zeapo.pwdstore.autofill.Intent ) { finish ( ) ; switch ( int ) { case int : if ( int == RESULT_OK ) { AutofillService . getInstance ( ) . setResultData ( com.zeapo.pwdstore.autofill.Intent ) ; } break; case int : if ( int == RESULT_OK ) { AutofillService . getInstance ( ) . setPickedPassword ( com.zeapo.pwdstore.autofill.Intent . getStringExtra ( STRING ) ) ; } break; case int : if ( int == RESULT_OK ) { Bundle com.zeapo.pwdstore.autofill.Bundle = getIntent ( ) . getExtras ( ) ; java.lang.String java.lang.String = com.zeapo.pwdstore.autofill.Bundle . getString ( STRING ) ; boolean boolean = com.zeapo.pwdstore.autofill.Bundle . getBoolean ( STRING ) ; java.lang.String java.lang.String = com.zeapo.pwdstore.autofill.Intent . getStringExtra ( STRING ) ; AutofillService . getInstance ( ) . setPickedPassword ( com.zeapo.pwdstore.autofill.Intent . getStringExtra ( STRING ) ) ; SharedPreferences com.zeapo.pwdstore.autofill.SharedPreferences ; if ( ! boolean ) { com.zeapo.pwdstore.autofill.SharedPreferences = getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } else { com.zeapo.pwdstore.autofill.SharedPreferences = getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } SharedPreferences . SharedPreferences SharedPreferences.Editor = com.zeapo.pwdstore.autofill.SharedPreferences . edit ( ) ; java.lang.String java.lang.String = com.zeapo.pwdstore.autofill.SharedPreferences . getString ( java.lang.String , STRING ) ; switch ( java.lang.String ) { case STRING : case STRING : case STRING : SharedPreferences.Editor . putString ( java.lang.String , java.lang.String ) ; break; default: java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String . java.lang.String ( ) . java.lang.String[] ( STRING ) ) ) ; java.util.List<java.lang.String> . boolean ( java.lang.String ) ; java.lang.String java.lang.String = StringUtils . join ( java.util.List<java.lang.String> , STRING ) ; SharedPreferences.Editor . putString ( java.lang.String , java.lang.String ) ; } SharedPreferences.Editor . apply ( ) ; } break; } }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.autofill.Dialog com.zeapo.pwdstore.autofill.Dialog ( Bundle com.zeapo.pwdstore.autofill.Bundle ) { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) ; final AutofillPreferenceActivity com.zeapo.pwdstore.autofill.AutofillPreferenceActivity = ( AutofillPreferenceActivity ) getActivity ( ) ; LayoutInflater com.zeapo.pwdstore.autofill.LayoutInflater = com.zeapo.pwdstore.autofill.AutofillPreferenceActivity . getLayoutInflater ( ) ; final View com.zeapo.pwdstore.autofill.View = com.zeapo.pwdstore.autofill.LayoutInflater . inflate ( R . layout . fragment_autofill , null ) ; AlertDialog.Builder . setView ( com.zeapo.pwdstore.autofill.View ) ; final java.lang.String java.lang.String = getArguments ( ) . getString ( STRING ) ; final java.lang.String java.lang.String = getArguments ( ) . getString ( STRING ) ; boolean = getArguments ( ) . getBoolean ( STRING ) ; java.lang.String java.lang.String ; if ( ! boolean ) { java.lang.String = java.lang.String ; AlertDialog.Builder . setTitle ( java.lang.String ) ; com.zeapo.pwdstore.autofill.View . findViewById ( R . id . webURL ) . setVisibility ( View . GONE ) ; } else { java.lang.String = STRING ; AlertDialog.Builder . setTitle ( STRING ) ; ( ( EditText ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . webURL ) ) . setText ( java.lang.String ) ; } try { AlertDialog.Builder . setIcon ( com.zeapo.pwdstore.autofill.AutofillPreferenceActivity . getPackageManager ( ) . getApplicationIcon ( java.lang.String ) ) ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { PackageManager.NameNotFoundException . printStackTrace ( ) ; } com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> = new ArrayAdapter < java.lang.String > ( getActivity ( ) . getApplicationContext ( ) , android . R . layout . simple_list_item_1 , android . R . id . text1 ) { @ java.lang.Override public com.zeapo.pwdstore.autofill.View com.zeapo.pwdstore.autofill.View ( int int , View com.zeapo.pwdstore.autofill.View , ViewGroup com.zeapo.pwdstore.autofill.ViewGroup ) { TextView com.zeapo.pwdstore.autofill.TextView = ( TextView ) super. getView ( int , com.zeapo.pwdstore.autofill.View , com.zeapo.pwdstore.autofill.ViewGroup ) ; com.zeapo.pwdstore.autofill.TextView . setTextColor ( ContextCompat . getColor ( getContext ( ) , R . color . grey_black_1000 ) ) ; return com.zeapo.pwdstore.autofill.TextView ; } } ; ( ( ListView ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . matched ) ) . setAdapter ( com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> ) ; ( ( ListView ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . matched ) ) . setOnItemClickListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.autofill.AdapterView<?> , View com.zeapo.pwdstore.autofill.View , int int , long long ) { com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . remove ( com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . getItem ( int ) ) ; } } ) ; SharedPreferences com.zeapo.pwdstore.autofill.SharedPreferences ; if ( ! boolean ) { com.zeapo.pwdstore.autofill.SharedPreferences = getActivity ( ) . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } else { com.zeapo.pwdstore.autofill.SharedPreferences = getActivity ( ) . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } java.lang.String java.lang.String = com.zeapo.pwdstore.autofill.SharedPreferences . getString ( java.lang.String , STRING ) ; switch ( java.lang.String ) { case STRING : ( ( RadioButton ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . use_default ) ) . toggle ( ) ; break; case STRING : ( ( RadioButton ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . first ) ) . toggle ( ) ; break; case STRING : ( ( RadioButton ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . never ) ) . toggle ( ) ; break; default: ( ( RadioButton ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . match ) ) . toggle ( ) ; com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . addAll ( java.lang.String . java.lang.String ( ) . java.lang.String[] ( STRING ) ) ; } View . View View.OnClickListener = new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.autofill.View ) { ( ( RadioButton ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . match ) ) . toggle ( ) ; Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( getActivity ( ) , PasswordStore .class ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , true ) ; startActivityForResult ( com.zeapo.pwdstore.autofill.Intent , int ) ; } } ; com.zeapo.pwdstore.autofill.View . findViewById ( R . id . matchButton ) . setOnClickListener ( View.OnClickListener ) ; AlertDialog.Builder . setPositiveButton ( R . string . dialog_ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) {            } } ) ; AlertDialog.Builder . setNegativeButton ( R . string . dialog_cancel , null ) ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = com.zeapo.pwdstore.autofill.SharedPreferences . edit ( ) ; if ( boolean ) { AlertDialog.Builder . setNeutralButton ( R . string . autofill_apps_delete , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) { if ( callingActivity . recyclerAdapter != null && java.lang.String != null && ! java.lang.String . boolean ( STRING ) ) { SharedPreferences.Editor . remove ( java.lang.String ) ; callingActivity . recyclerAdapter . removeWebsite ( java.lang.String ) ; SharedPreferences.Editor . apply ( ) ; } } } ) ; } return AlertDialog.Builder . create ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.autofill.View com.zeapo.pwdstore.autofill.View ( int int , View com.zeapo.pwdstore.autofill.View , ViewGroup com.zeapo.pwdstore.autofill.ViewGroup ) { TextView com.zeapo.pwdstore.autofill.TextView = ( TextView ) super. getView ( int , com.zeapo.pwdstore.autofill.View , com.zeapo.pwdstore.autofill.ViewGroup ) ; com.zeapo.pwdstore.autofill.TextView . setTextColor ( ContextCompat . getColor ( getContext ( ) , R . color . grey_black_1000 ) ) ; return com.zeapo.pwdstore.autofill.TextView ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.autofill.AdapterView<?> , View com.zeapo.pwdstore.autofill.View , int int , long long ) { com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . remove ( com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . getItem ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.autofill.View ) { ( ( RadioButton ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . match ) ) . toggle ( ) ; Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( getActivity ( ) , PasswordStore .class ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , true ) ; startActivityForResult ( com.zeapo.pwdstore.autofill.Intent , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) {            }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) { if ( callingActivity . recyclerAdapter != null && java.lang.String != null && ! java.lang.String . boolean ( STRING ) ) { SharedPreferences.Editor . remove ( java.lang.String ) ; callingActivity . recyclerAdapter . removeWebsite ( java.lang.String ) ; SharedPreferences.Editor . apply ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; AlertDialog com.zeapo.pwdstore.autofill.AlertDialog = ( AlertDialog ) getDialog ( ) ; if( com.zeapo.pwdstore.autofill.AlertDialog != null ) { Button com.zeapo.pwdstore.autofill.Button = com.zeapo.pwdstore.autofill.AlertDialog . getButton ( Dialog . BUTTON_POSITIVE ) ; com.zeapo.pwdstore.autofill.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.autofill.View ) { AutofillPreferenceActivity com.zeapo.pwdstore.autofill.AutofillPreferenceActivity = ( AutofillPreferenceActivity ) getActivity ( ) ; Dialog com.zeapo.pwdstore.autofill.Dialog = getDialog ( ) ; SharedPreferences com.zeapo.pwdstore.autofill.SharedPreferences ; if ( ! boolean ) { com.zeapo.pwdstore.autofill.SharedPreferences = getActivity ( ) . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } else { com.zeapo.pwdstore.autofill.SharedPreferences = getActivity ( ) . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } SharedPreferences . SharedPreferences SharedPreferences.Editor = com.zeapo.pwdstore.autofill.SharedPreferences . edit ( ) ; java.lang.String java.lang.String = getArguments ( ) . getString ( STRING , STRING ) ; if ( boolean ) { java.lang.String = ( ( EditText ) com.zeapo.pwdstore.autofill.Dialog . findViewById ( R . id . webURL ) ) . getText ( ) . toString ( ) ; EditText com.zeapo.pwdstore.autofill.EditText = ( EditText ) com.zeapo.pwdstore.autofill.Dialog . findViewById ( R . id . webURL ) ; if ( java.lang.String . boolean ( STRING ) ) { com.zeapo.pwdstore.autofill.EditText . setError ( STRING ) ; return; } java.lang.String java.lang.String = getArguments ( ) . getString ( STRING , STRING ) ; if ( ! java.lang.String . boolean ( java.lang.String ) && com.zeapo.pwdstore.autofill.SharedPreferences . getAll ( ) . containsKey ( java.lang.String ) ) { com.zeapo.pwdstore.autofill.EditText . setError ( STRING ) ; return; } } RadioGroup com.zeapo.pwdstore.autofill.RadioGroup = ( RadioGroup ) com.zeapo.pwdstore.autofill.Dialog . findViewById ( R . id . autofill_radiogroup ) ; switch ( com.zeapo.pwdstore.autofill.RadioGroup . getCheckedRadioButtonId ( ) ) { case R . id . use_default : if ( ! boolean ) { SharedPreferences.Editor . remove ( java.lang.String ) ; } else { SharedPreferences.Editor . putString ( java.lang.String , STRING ) ; } break; case R . id . first : SharedPreferences.Editor . putString ( java.lang.String , STRING ) ; break; case R . id . never : SharedPreferences.Editor . putString ( java.lang.String , STRING ) ; break; default: java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( int int = NUMBER ; int < com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . getCount ( ) ; int ++ ) { java.lang.StringBuilder . java.lang.StringBuilder ( com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . getItem ( int ) ) ; if ( int != com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . getCount ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } } SharedPreferences.Editor . putString ( java.lang.String , java.lang.StringBuilder . java.lang.String ( ) ) ; } SharedPreferences.Editor . apply ( ) ; if ( callingActivity . recyclerAdapter != null ) { int int ; if ( ! boolean ) { java.lang.String java.lang.String = getArguments ( ) . getString ( STRING , STRING ) ; int = callingActivity . recyclerAdapter . getPosition ( java.lang.String ) ; callingActivity . recyclerAdapter . notifyItemChanged ( int ) ; } else { int = callingActivity . recyclerAdapter . getPosition ( java.lang.String ) ; java.lang.String java.lang.String = getArguments ( ) . getString ( STRING , STRING ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { callingActivity . recyclerAdapter . notifyItemChanged ( int ) ; } else if ( java.lang.String . boolean ( STRING ) ) { callingActivity . recyclerAdapter . addWebsite ( java.lang.String ) ; } else { SharedPreferences.Editor . remove ( java.lang.String ) ; callingActivity . recyclerAdapter . updateWebsite ( java.lang.String , java.lang.String ) ; } } } dismiss ( ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.autofill.View ) { AutofillPreferenceActivity com.zeapo.pwdstore.autofill.AutofillPreferenceActivity = ( AutofillPreferenceActivity ) getActivity ( ) ; Dialog com.zeapo.pwdstore.autofill.Dialog = getDialog ( ) ; SharedPreferences com.zeapo.pwdstore.autofill.SharedPreferences ; if ( ! boolean ) { com.zeapo.pwdstore.autofill.SharedPreferences = getActivity ( ) . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } else { com.zeapo.pwdstore.autofill.SharedPreferences = getActivity ( ) . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } SharedPreferences . SharedPreferences SharedPreferences.Editor = com.zeapo.pwdstore.autofill.SharedPreferences . edit ( ) ; java.lang.String java.lang.String = getArguments ( ) . getString ( STRING , STRING ) ; if ( boolean ) { java.lang.String = ( ( EditText ) com.zeapo.pwdstore.autofill.Dialog . findViewById ( R . id . webURL ) ) . getText ( ) . toString ( ) ; EditText com.zeapo.pwdstore.autofill.EditText = ( EditText ) com.zeapo.pwdstore.autofill.Dialog . findViewById ( R . id . webURL ) ; if ( java.lang.String . boolean ( STRING ) ) { com.zeapo.pwdstore.autofill.EditText . setError ( STRING ) ; return; } java.lang.String java.lang.String = getArguments ( ) . getString ( STRING , STRING ) ; if ( ! java.lang.String . boolean ( java.lang.String ) && com.zeapo.pwdstore.autofill.SharedPreferences . getAll ( ) . containsKey ( java.lang.String ) ) { com.zeapo.pwdstore.autofill.EditText . setError ( STRING ) ; return; } } RadioGroup com.zeapo.pwdstore.autofill.RadioGroup = ( RadioGroup ) com.zeapo.pwdstore.autofill.Dialog . findViewById ( R . id . autofill_radiogroup ) ; switch ( com.zeapo.pwdstore.autofill.RadioGroup . getCheckedRadioButtonId ( ) ) { case R . id . use_default : if ( ! boolean ) { SharedPreferences.Editor . remove ( java.lang.String ) ; } else { SharedPreferences.Editor . putString ( java.lang.String , STRING ) ; } break; case R . id . first : SharedPreferences.Editor . putString ( java.lang.String , STRING ) ; break; case R . id . never : SharedPreferences.Editor . putString ( java.lang.String , STRING ) ; break; default: java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( int int = NUMBER ; int < com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . getCount ( ) ; int ++ ) { java.lang.StringBuilder . java.lang.StringBuilder ( com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . getItem ( int ) ) ; if ( int != com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . getCount ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } } SharedPreferences.Editor . putString ( java.lang.String , java.lang.StringBuilder . java.lang.String ( ) ) ; } SharedPreferences.Editor . apply ( ) ; if ( callingActivity . recyclerAdapter != null ) { int int ; if ( ! boolean ) { java.lang.String java.lang.String = getArguments ( ) . getString ( STRING , STRING ) ; int = callingActivity . recyclerAdapter . getPosition ( java.lang.String ) ; callingActivity . recyclerAdapter . notifyItemChanged ( int ) ; } else { int = callingActivity . recyclerAdapter . getPosition ( java.lang.String ) ; java.lang.String java.lang.String = getArguments ( ) . getString ( STRING , STRING ) ; if ( java.lang.String . boolean ( java.lang.String ) ) { callingActivity . recyclerAdapter . notifyItemChanged ( int ) ; } else if ( java.lang.String . boolean ( STRING ) ) { callingActivity . recyclerAdapter . addWebsite ( java.lang.String ) ; } else { SharedPreferences.Editor . remove ( java.lang.String ) ; callingActivity . recyclerAdapter . updateWebsite ( java.lang.String , java.lang.String ) ; } } } dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , int int , Intent com.zeapo.pwdstore.autofill.Intent ) { if ( int == Activity . RESULT_OK ) { com.zeapo.pwdstore.autofill.ArrayAdapter<java.lang.String> . add ( com.zeapo.pwdstore.autofill.Intent . getStringExtra ( STRING ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.zeapo.pwdstore.autofill.Bundle ) { super. onCreate ( com.zeapo.pwdstore.autofill.Bundle ) ; setContentView ( R . layout . autofill_recycler_view ) ; com.zeapo.pwdstore.autofill.RecyclerView = ( RecyclerView ) findViewById ( R . id . autofill_recycler ) ; RecyclerView.LayoutManager = new LinearLayoutManager ( this ) ; com.zeapo.pwdstore.autofill.RecyclerView . setLayoutManager ( RecyclerView.LayoutManager ) ; com.zeapo.pwdstore.autofill.RecyclerView . addItemDecoration ( new DividerItemDecoration ( this , DividerItemDecoration . VERTICAL_LIST ) ) ; com.zeapo.pwdstore.autofill.PackageManager = getPackageManager ( ) ; new com.zeapo.pwdstore.autofill.AutofillPreferenceActivity.populateTask ( ) . execute ( ) ; boolean = false ; Bundle com.zeapo.pwdstore.autofill.Bundle = getIntent ( ) . getExtras ( ) ; if ( com.zeapo.pwdstore.autofill.Bundle != null ) { boolean = true ; void ( com.zeapo.pwdstore.autofill.Bundle . getString ( STRING ) , com.zeapo.pwdstore.autofill.Bundle . getString ( STRING ) , com.zeapo.pwdstore.autofill.Bundle . getBoolean ( STRING ) ) ; } setTitle ( STRING ) ; final FloatingActionButton com.zeapo.pwdstore.autofill.FloatingActionButton = ( FloatingActionButton ) findViewById ( R . id . fab ) ; com.zeapo.pwdstore.autofill.FloatingActionButton . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.autofill.View ) { void ( STRING , STRING , true ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.autofill.View ) { void ( STRING , STRING , true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { runOnUiThread ( new java.lang.Runnable ( ) { public void void ( ) { findViewById ( R . id . progress_bar ) . setVisibility ( View . VISIBLE ) ; } } ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { findViewById ( R . id . progress_bar ) . setVisibility ( View . VISIBLE ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( Intent . ACTION_MAIN ) ; com.zeapo.pwdstore.autofill.Intent . addCategory ( Intent . CATEGORY_LAUNCHER ) ; java.util.List<com.zeapo.pwdstore.autofill.ResolveInfo> < ResolveInfo > java.util.List<com.zeapo.pwdstore.autofill.ResolveInfo> = com.zeapo.pwdstore.autofill.PackageManager . queryIntentActivities ( com.zeapo.pwdstore.autofill.Intent , NUMBER ) ; java.util.List<AutofillRecyclerAdapter.AppInfo> < AutofillRecyclerAdapter . AutofillRecyclerAdapter > java.util.List<AutofillRecyclerAdapter.AppInfo> = new java.util.ArrayList<AutofillRecyclerAdapter.AppInfo> <> ( ) ; for ( ResolveInfo com.zeapo.pwdstore.autofill.ResolveInfo : java.util.List<com.zeapo.pwdstore.autofill.ResolveInfo> ) { java.util.List<AutofillRecyclerAdapter.AppInfo> . add ( new AutofillRecyclerAdapter . AutofillRecyclerAdapter ( app . activityInfo . packageName , com.zeapo.pwdstore.autofill.ResolveInfo . loadLabel ( com.zeapo.pwdstore.autofill.PackageManager ) . toString ( ) , false , com.zeapo.pwdstore.autofill.ResolveInfo . loadIcon ( com.zeapo.pwdstore.autofill.PackageManager ) ) ) ; } SharedPreferences com.zeapo.pwdstore.autofill.SharedPreferences = getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = com.zeapo.pwdstore.autofill.SharedPreferences . getAll ( ) ; for ( java.lang.String java.lang.String : java.util.Map<java.lang.String,> . java.util.Set<java.lang.String> ( ) ) { try { java.util.List<AutofillRecyclerAdapter.AppInfo> . add ( new AutofillRecyclerAdapter . AutofillRecyclerAdapter ( java.lang.String , java.lang.String , true , com.zeapo.pwdstore.autofill.PackageManager . getApplicationIcon ( STRING ) ) ) ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { java.util.List<AutofillRecyclerAdapter.AppInfo> . add ( new AutofillRecyclerAdapter . AutofillRecyclerAdapter ( java.lang.String , java.lang.String , true , null ) ) ; } } com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter = new AutofillRecyclerAdapter ( java.util.List<AutofillRecyclerAdapter.AppInfo> , com.zeapo.pwdstore.autofill.PackageManager , com.zeapo.pwdstore.autofill.AutofillPreferenceActivity .this ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { runOnUiThread ( new java.lang.Runnable ( ) { public void void ( ) { findViewById ( R . id . progress_bar ) . setVisibility ( View . GONE ) ; com.zeapo.pwdstore.autofill.RecyclerView . setAdapter ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter ) ; Bundle com.zeapo.pwdstore.autofill.Bundle = getIntent ( ) . getExtras ( ) ; if ( com.zeapo.pwdstore.autofill.Bundle != null ) { com.zeapo.pwdstore.autofill.RecyclerView . scrollToPosition ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter . getPosition ( com.zeapo.pwdstore.autofill.Bundle . getString ( STRING ) ) ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { findViewById ( R . id . progress_bar ) . setVisibility ( View . GONE ) ; com.zeapo.pwdstore.autofill.RecyclerView . setAdapter ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter ) ; Bundle com.zeapo.pwdstore.autofill.Bundle = getIntent ( ) . getExtras ( ) ; if ( com.zeapo.pwdstore.autofill.Bundle != null ) { com.zeapo.pwdstore.autofill.RecyclerView . scrollToPosition ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter . getPosition ( com.zeapo.pwdstore.autofill.Bundle . getString ( STRING ) ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Menu com.zeapo.pwdstore.autofill.Menu ) { getMenuInflater ( ) . inflate ( R . menu . autofill_preference , com.zeapo.pwdstore.autofill.Menu ) ; MenuItem com.zeapo.pwdstore.autofill.MenuItem = com.zeapo.pwdstore.autofill.Menu . findItem ( R . id . action_search ) ; SearchView com.zeapo.pwdstore.autofill.SearchView = ( SearchView ) MenuItemCompat . getActionView ( com.zeapo.pwdstore.autofill.MenuItem ) ; com.zeapo.pwdstore.autofill.SearchView . setOnQueryTextListener ( new SearchView . SearchView ( ) { @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return false ; } @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { if ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter != null ) { com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter . filter ( java.lang.String ) ; } return true ; } } ) ; return super. onCreateOptionsMenu ( com.zeapo.pwdstore.autofill.Menu ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { if ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter != null ) { com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter . filter ( java.lang.String ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.autofill.MenuItem ) { switch ( com.zeapo.pwdstore.autofill.MenuItem . getItemId ( ) ) { case android . R . id . home : Intent com.zeapo.pwdstore.autofill.Intent = NavUtils . getParentActivityIntent ( this ) ; if ( boolean ) { TaskStackBuilder . create ( this ) . addNextIntentWithParentStack ( com.zeapo.pwdstore.autofill.Intent ) . startActivities ( ) ; } else { NavUtils . navigateUpTo ( this , com.zeapo.pwdstore.autofill.Intent ) ; } return true ; } return super. onOptionsItemSelected ( com.zeapo.pwdstore.autofill.MenuItem ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean ) { DialogFragment com.zeapo.pwdstore.autofill.DialogFragment = new AutofillFragment ( ) ; Bundle com.zeapo.pwdstore.autofill.Bundle = new Bundle ( ) ; com.zeapo.pwdstore.autofill.Bundle . putString ( STRING , java.lang.String ) ; com.zeapo.pwdstore.autofill.Bundle . putString ( STRING , java.lang.String ) ; com.zeapo.pwdstore.autofill.Bundle . putBoolean ( STRING , boolean ) ; com.zeapo.pwdstore.autofill.DialogFragment . setArguments ( com.zeapo.pwdstore.autofill.Bundle ) ; com.zeapo.pwdstore.autofill.DialogFragment . show ( getFragmentManager ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> public void ( View com.zeapo.pwdstore.autofill.View ) { super( com.zeapo.pwdstore.autofill.View ); this . com.zeapo.pwdstore.autofill.View = com.zeapo.pwdstore.autofill.View ; com.zeapo.pwdstore.autofill.TextView = ( TextView ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . app_name ) ; com.zeapo.pwdstore.autofill.TextView = ( TextView ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . secondary_text ) ; com.zeapo.pwdstore.autofill.ImageView = ( ImageView ) com.zeapo.pwdstore.autofill.View . findViewById ( R . id . app_icon ) ; com.zeapo.pwdstore.autofill.View . setOnClickListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.autofill.View ) { com.zeapo.pwdstore.autofill.AutofillPreferenceActivity . showDialog ( java.lang.String , java.lang.String , java.lang.Boolean ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , boolean boolean , Drawable com.zeapo.pwdstore.autofill.Drawable ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . boolean = boolean ; this . com.zeapo.pwdstore.autofill.Drawable = com.zeapo.pwdstore.autofill.Drawable ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { return java.lang.Object != null && java.lang.Object instanceof com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo && this . java.lang.String . boolean ( ( ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) java.lang.Object ) . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public void ( java.util.List<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> < com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo > java.util.List<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> , final PackageManager com.zeapo.pwdstore.autofill.PackageManager , AutofillPreferenceActivity com.zeapo.pwdstore.autofill.AutofillPreferenceActivity ) { SortedList . SortedList < com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo > callback = new SortedListAdapterCallback < com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo > ( this ) { @ java.lang.Override public int int ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo , com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) { return com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . java.lang.String ( ) . int ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . java.lang.String ( ) ) ; } @ java.lang.Override public boolean boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo , com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) { return com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String ) ; } @ java.lang.Override public boolean boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo , com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) { return com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String ) ; } } ; this . com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> = new SortedList <> ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo .class , callback ) ; this . com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . addAll ( java.util.List<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> ) ; this . java.util.ArrayList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> = new java.util.ArrayList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> <> ( java.util.List<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> ) ; this . com.zeapo.pwdstore.autofill.PackageManager = com.zeapo.pwdstore.autofill.PackageManager ; this . com.zeapo.pwdstore.autofill.AutofillPreferenceActivity = com.zeapo.pwdstore.autofill.AutofillPreferenceActivity ; try { com.zeapo.pwdstore.autofill.Drawable = com.zeapo.pwdstore.autofill.AutofillPreferenceActivity . getPackageManager ( ) . getApplicationIcon ( STRING ) ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { PackageManager.NameNotFoundException . printStackTrace ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo , com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) { return com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . java.lang.String ( ) . int ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo , com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) { return com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo , com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) { return com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter . com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder ( ViewGroup com.zeapo.pwdstore.autofill.ViewGroup , int int ) { View com.zeapo.pwdstore.autofill.View = LayoutInflater . from ( com.zeapo.pwdstore.autofill.ViewGroup . getContext ( ) ) . inflate ( R . layout . autofill_row_layout , com.zeapo.pwdstore.autofill.ViewGroup , false ) ; return new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder ( com.zeapo.pwdstore.autofill.View ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter . com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder , int int ) { com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo = com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . get ( int ) ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . java.lang.String = com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . java.lang.String = com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . java.lang.Boolean = com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . boolean ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.ImageView . setImageDrawable ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . com.zeapo.pwdstore.autofill.Drawable ) ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.TextView . setText ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String ) ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.TextView . setVisibility ( View . VISIBLE ) ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.View . setBackgroundResource ( R . color . grey_white_1000 ) ; SharedPreferences com.zeapo.pwdstore.autofill.SharedPreferences ; if ( ! com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . boolean ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String ) ) { com.zeapo.pwdstore.autofill.SharedPreferences = com.zeapo.pwdstore.autofill.AutofillPreferenceActivity . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } else { com.zeapo.pwdstore.autofill.SharedPreferences = com.zeapo.pwdstore.autofill.AutofillPreferenceActivity . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; } java.lang.String java.lang.String = com.zeapo.pwdstore.autofill.SharedPreferences . getString ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . java.lang.String , STRING ) ; switch ( java.lang.String ) { case STRING : com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.TextView . setVisibility ( View . GONE ) ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.View . setBackgroundResource ( NUMBER ) ; break; case STRING : com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.TextView . setText ( R . string . autofill_apps_first ) ; break; case STRING : com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.TextView . setText ( R . string . autofill_apps_never ) ; break; default: com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.TextView . setText ( R . string . autofill_apps_match ) ; com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.TextView . append ( STRING + java.lang.String . java.lang.String[] ( STRING ) [ NUMBER ] ) ; if ( ( java.lang.String . java.lang.String ( ) . java.lang.String[] ( STRING ) . int - NUMBER ) > NUMBER ) { com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.autofill.TextView . append ( STRING + ( java.lang.String . java.lang.String ( ) . java.lang.String[] ( STRING ) . int - NUMBER ) + STRING ) ; } break; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . size ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( java.lang.String java.lang.String ) { return com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . indexOf ( new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ( null , java.lang.String , false , null ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . add ( new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ( java.lang.String , java.lang.String , true , com.zeapo.pwdstore.autofill.Drawable ) ) ; java.util.ArrayList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . boolean ( new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ( java.lang.String , java.lang.String , true , com.zeapo.pwdstore.autofill.Drawable ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . remove ( new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ( null , java.lang.String , false , null ) ) ; java.util.ArrayList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . boolean ( new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ( null , java.lang.String , false , null ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . updateItemAt ( int ( java.lang.String ) , new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ( java.lang.String , java.lang.String , true , com.zeapo.pwdstore.autofill.Drawable ) ) ; java.util.ArrayList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . boolean ( new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ( null , java.lang.String , false , null ) ) ; java.util.ArrayList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . boolean ( new com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ( null , java.lang.String , false , null ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( ) ) { com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . addAll ( java.util.ArrayList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> ) ; return; } com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . beginBatchedUpdates ( ) ; for ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo : java.util.ArrayList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> ) { if ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo . java.lang.String . java.lang.String ( ) . boolean ( java.lang.String . java.lang.String ( ) ) ) { com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . add ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) ; } else { com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . remove ( com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo ) ; } } com.zeapo.pwdstore.autofill.SortedList<com.zeapo.pwdstore.autofill.AutofillRecyclerAdapter.AppInfo> . endBatchedUpdates ( ) ; }  <METHOD_END>
<METHOD_START> public static com.zeapo.pwdstore.autofill.AutofillService com.zeapo.pwdstore.autofill.AutofillService ( ) { return com.zeapo.pwdstore.autofill.AutofillService ; }  <METHOD_END>
<METHOD_START> public void void ( Intent com.zeapo.pwdstore.autofill.Intent ) { com.zeapo.pwdstore.autofill.Intent = com.zeapo.pwdstore.autofill.Intent ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { java.util.ArrayList<java.io.File> . boolean ( new java.io.File ( PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) + STRING + java.lang.String + STRING ) ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onCreate ( ) ; com.zeapo.pwdstore.autofill.AutofillService = this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onServiceConnected ( ) ; com.zeapo.pwdstore.autofill.OpenPgpServiceConnection = new OpenPgpServiceConnection ( com.zeapo.pwdstore.autofill.AutofillService .this , STRING ) ; com.zeapo.pwdstore.autofill.OpenPgpServiceConnection . bindToService ( ) ; com.zeapo.pwdstore.autofill.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AccessibilityEvent com.zeapo.pwdstore.autofill.AccessibilityEvent ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . JELLY_BEAN_MR2 ) { return; } if ( com.zeapo.pwdstore.autofill.AccessibilityEvent . getEventType ( ) == AccessibilityEvent . TYPE_WINDOW_STATE_CHANGED && com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) != null && com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) . equals ( java.lang.CharSequence ) && com.zeapo.pwdstore.autofill.Intent != null ) { void ( ) ; } if ( com.zeapo.pwdstore.autofill.AccessibilityEvent . getEventType ( ) == AccessibilityEvent . TYPE_WINDOW_STATE_CHANGED || ( com.zeapo.pwdstore.autofill.AccessibilityEvent . getEventType ( ) == AccessibilityEvent . TYPE_WINDOW_CONTENT_CHANGED && com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) != null && ( com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) . equals ( STRING ) || com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) . equals ( STRING ) ) ) ) { AccessibilityNodeInfo com.zeapo.pwdstore.autofill.AccessibilityNodeInfo = getRootInActiveWindow ( ) ; java.lang.String = java.lang.String ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo ) ; java.lang.String = null ; if ( java.lang.String != null ) { java.util.List<com.zeapo.pwdstore.autofill.AccessibilityNodeInfo> < AccessibilityNodeInfo > java.util.List<com.zeapo.pwdstore.autofill.AccessibilityNodeInfo> = com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . findAccessibilityNodeInfosByViewId ( STRING ) ; if ( java.util.List<com.zeapo.pwdstore.autofill.AccessibilityNodeInfo> . isEmpty ( ) ) { java.util.List<com.zeapo.pwdstore.autofill.AccessibilityNodeInfo> = com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . findAccessibilityNodeInfosByViewId ( STRING ) ; } for ( AccessibilityNodeInfo com.zeapo.pwdstore.autofill.AccessibilityNodeInfo : java.util.List<com.zeapo.pwdstore.autofill.AccessibilityNodeInfo> ) if ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getText ( ) != null ) { try { java.lang.String = new java.net.URL ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getText ( ) . toString ( ) ) . java.lang.String ( ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { if ( java.net.MalformedURLException . java.lang.String ( ) . boolean ( STRING ) ) { try { java.lang.String = new java.net.URL ( STRING + com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getText ( ) . toString ( ) ) . java.lang.String ( ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) {                                } } } } } } if ( ! com.zeapo.pwdstore.autofill.AccessibilityEvent . isPassword ( ) || com.zeapo.pwdstore.autofill.AccessibilityEvent . getEventType ( ) == AccessibilityEvent . TYPE_WINDOW_CONTENT_CHANGED || com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) != null && com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) . equals ( STRING ) || com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) != null && com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) . equals ( STRING ) ) { void ( com.zeapo.pwdstore.autofill.AccessibilityEvent ) ; return; } if ( com.zeapo.pwdstore.autofill.AlertDialog != null && com.zeapo.pwdstore.autofill.AlertDialog . isShowing ( ) ) { if ( com.zeapo.pwdstore.autofill.AccessibilityEvent . getEventType ( ) == AccessibilityEvent . TYPE_VIEW_CLICKED ) { return; } com.zeapo.pwdstore.autofill.AlertDialog . dismiss ( ) ; com.zeapo.pwdstore.autofill.AlertDialog = null ; } if ( boolean ) { boolean = false ; return; } if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M && ! Settings . canDrawOverlays ( this ) ) { Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( Settings . ACTION_MANAGE_OVERLAY_PERMISSION , Uri . parse ( STRING + getPackageName ( ) ) ) ; com.zeapo.pwdstore.autofill.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( com.zeapo.pwdstore.autofill.Intent ) ; return; } com.zeapo.pwdstore.autofill.AccessibilityNodeInfo = com.zeapo.pwdstore.autofill.AccessibilityEvent . getSource ( ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { com.zeapo.pwdstore.autofill.AccessibilityWindowInfo = com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getWindow ( ) ; } java.lang.String java.lang.String ; java.lang.String java.lang.String ; boolean boolean ; if ( java.lang.String == null || ( java.lang.String . boolean ( STRING ) && java.lang.String == null ) ) { java.lang.String = com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getPackageName ( ) . toString ( ) ; PackageManager com.zeapo.pwdstore.autofill.PackageManager = getPackageManager ( ) ; ApplicationInfo com.zeapo.pwdstore.autofill.ApplicationInfo ; try { com.zeapo.pwdstore.autofill.ApplicationInfo = com.zeapo.pwdstore.autofill.PackageManager . getApplicationInfo ( com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) . toString ( ) , NUMBER ) ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { com.zeapo.pwdstore.autofill.ApplicationInfo = null ; } java.lang.String = ( com.zeapo.pwdstore.autofill.ApplicationInfo != null ? com.zeapo.pwdstore.autofill.PackageManager . getApplicationLabel ( com.zeapo.pwdstore.autofill.ApplicationInfo ) : STRING ) . toString ( ) ; boolean = false ; void ( java.lang.String , java.lang.String ) ; } else { java.lang.String = java.lang.String ( java.lang.String , java.lang.String ) ; java.lang.String = java.lang.String ; boolean = true ; } if ( java.util.ArrayList<java.io.File> . boolean ( ) && ! com.zeapo.pwdstore.autofill.SharedPreferences . getBoolean ( STRING , false ) ) { return; } void ( java.lang.String , java.lang.String , boolean ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( AccessibilityNodeInfo com.zeapo.pwdstore.autofill.AccessibilityNodeInfo ) { if ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo == null ) { return null ; } for ( int int = NUMBER ; int < com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getChildCount ( ) ; int ++ ) { AccessibilityNodeInfo com.zeapo.pwdstore.autofill.AccessibilityNodeInfo = com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getChild ( int ) ; if ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo == null ) { continue; } if ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getClassName ( ) != null && com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getClassName ( ) . equals ( STRING ) ) { if ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getContentDescription ( ) != null ) { return com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getContentDescription ( ) . toString ( ) ; } return STRING ; } if ( java.lang.String ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo ) != null ) { return java.lang.String ( com.zeapo.pwdstore.autofill.AccessibilityNodeInfo ) ; } com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . recycle ( ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void void ( AccessibilityEvent com.zeapo.pwdstore.autofill.AccessibilityEvent ) { boolean boolean ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { boolean = ! getWindows ( ) . contains ( com.zeapo.pwdstore.autofill.AccessibilityWindowInfo ) ; } else { boolean = ! ( com.zeapo.pwdstore.autofill.AccessibilityEvent . getEventType ( ) == AccessibilityEvent . TYPE_WINDOW_STATE_CHANGED && com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) != null && com.zeapo.pwdstore.autofill.AccessibilityEvent . getPackageName ( ) . toString ( ) . contains ( STRING ) ) ; } if ( boolean && com.zeapo.pwdstore.autofill.AlertDialog != null && com.zeapo.pwdstore.autofill.AlertDialog . isShowing ( ) ) { com.zeapo.pwdstore.autofill.AlertDialog . dismiss ( ) ; com.zeapo.pwdstore.autofill.AlertDialog = null ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = java.lang.String ; java.lang.String java.lang.String = com.zeapo.pwdstore.autofill.SharedPreferences . getBoolean ( STRING , true ) ? STRING : STRING ; SharedPreferences com.zeapo.pwdstore.autofill.SharedPreferences ; java.lang.String java.lang.String ; com.zeapo.pwdstore.autofill.SharedPreferences = getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; java.lang.String = java.lang.String ; if ( java.lang.String != null ) { java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> = com.zeapo.pwdstore.autofill.SharedPreferences . getAll ( ) ; for ( java.lang.String java.lang.String : java.util.Map<java.lang.String,> . java.util.Set<java.lang.String> ( ) ) { if ( ( java.lang.String . java.lang.String ( ) . boolean ( java.lang.String . java.lang.String ( ) ) || java.lang.String . java.lang.String ( ) . boolean ( java.lang.String . java.lang.String ( ) ) ) && ! com.zeapo.pwdstore.autofill.SharedPreferences . getString ( java.lang.String , null ) . equals ( STRING ) ) { java.lang.String = com.zeapo.pwdstore.autofill.SharedPreferences . getString ( java.lang.String , null ) ; java.lang.String = java.lang.String ; } } } switch ( java.lang.String ) { case STRING : if ( ! PasswordRepository . isInitialized ( ) ) { PasswordRepository . initialize ( this ) ; } java.util.ArrayList<java.io.File> = java.util.ArrayList<java.io.File> ( PasswordRepository . getRepositoryDirectory ( this ) , java.lang.String ) ; break; case STRING : java.util.ArrayList<java.io.File> = new java.util.ArrayList<java.io.File> <> ( ) ; break; default: void ( java.lang.String ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.lang.String java.lang.String = com.zeapo.pwdstore.autofill.SharedPreferences . getBoolean ( STRING , true ) ? STRING : STRING ; SharedPreferences com.zeapo.pwdstore.autofill.SharedPreferences ; java.lang.String java.lang.String ; com.zeapo.pwdstore.autofill.SharedPreferences = getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; java.lang.String = com.zeapo.pwdstore.autofill.SharedPreferences . getString ( java.lang.String , java.lang.String ) ; switch ( java.lang.String ) { case STRING : if ( ! PasswordRepository . isInitialized ( ) ) { PasswordRepository . initialize ( this ) ; } java.util.ArrayList<java.io.File> = java.util.ArrayList<java.io.File> ( PasswordRepository . getRepositoryDirectory ( this ) , java.lang.String ) ; break; case STRING : java.util.ArrayList<java.io.File> = new java.util.ArrayList<java.io.File> <> ( ) ; break; default: void ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { if ( ! PasswordRepository . isInitialized ( ) ) { PasswordRepository . initialize ( this ) ; } java.lang.String java.lang.String[] [] = java.lang.String . java.lang.String[] ( STRING ) ; java.util.ArrayList<java.io.File> = new java.util.ArrayList<java.io.File> <> ( ) ; for ( java.lang.String java.lang.String : java.lang.String[] ) { java.lang.String java.lang.String = PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) + STRING + java.lang.String + STRING ; if ( new java.io.File ( java.lang.String ) . boolean ( ) ) { java.util.ArrayList<java.io.File> . boolean ( new java.io.File ( java.lang.String ) ) ; } } }  <METHOD_END>
<METHOD_START> private java.util.ArrayList<java.io.File> < java.io.File > java.util.ArrayList<java.io.File> ( java.io.File java.io.File , java.lang.String java.lang.String ) { java.util.ArrayList<java.io.File> < java.io.File > java.util.ArrayList<java.io.File> = PasswordRepository . getFilesList ( java.io.File ) ; if ( java.util.ArrayList<java.io.File> . int ( ) == NUMBER ) return new java.util.ArrayList<java.io.File> <> ( ) ; java.util.ArrayList<java.io.File> < java.io.File > java.util.ArrayList<java.io.File> = new java.util.ArrayList<java.io.File> <> ( ) ; for ( java.io.File java.io.File : java.util.ArrayList<java.io.File> ) { if ( java.io.File . boolean ( ) ) { if ( java.lang.String . java.lang.String ( ) . boolean ( java.io.File . java.lang.String ( ) . java.lang.String ( ) . java.lang.String ( STRING , STRING ) ) ) { java.util.ArrayList<java.io.File> . boolean ( java.io.File ) ; } } else { if ( java.io.File . java.lang.String ( ) . boolean ( STRING ) ) continue; java.util.ArrayList<java.io.File> . boolean ( java.util.ArrayList<java.io.File> ( java.io.File , java.lang.String ) ) ; } } return java.util.ArrayList<java.io.File> ; }  <METHOD_END>
<METHOD_START> private void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , final boolean boolean ) { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( this , R . style . Theme_AppCompat_Dialog ) ; AlertDialog.Builder . setNegativeButton ( R . string . dialog_cancel , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) { com.zeapo.pwdstore.autofill.AlertDialog . dismiss ( ) ; com.zeapo.pwdstore.autofill.AlertDialog = null ; } } ) ; AlertDialog.Builder . setNeutralButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) { Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( com.zeapo.pwdstore.autofill.AutofillService .this , AutofillPreferenceActivity .class ) ; com.zeapo.pwdstore.autofill.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , java.lang.String ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , java.lang.String ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , boolean ) ; startActivity ( com.zeapo.pwdstore.autofill.Intent ) ; } } ) ; java.lang.CharSequence java.lang.CharSequence[] [] = new java.lang.CharSequence [ java.util.ArrayList<java.io.File> . int ( ) + NUMBER ] ; for ( int int = NUMBER ; int < java.util.ArrayList<java.io.File> . int ( ) ; int ++ ) { java.lang.CharSequence[] [ int ] = java.util.ArrayList<java.io.File> . java.io.File ( int ) . java.lang.String ( ) . java.lang.String ( STRING , STRING ) ; } java.lang.CharSequence[] [ java.util.ArrayList<java.io.File> . int ( ) ] = STRING ; java.lang.CharSequence[] [ java.util.ArrayList<java.io.File> . int ( ) + NUMBER ] = STRING ; AlertDialog.Builder . setItems ( java.lang.CharSequence[] , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) { int = int ; if ( int < java.util.ArrayList<java.io.File> . int ( ) ) { void ( ) ; } else if ( int == java.util.ArrayList<java.io.File> . int ( ) ) { Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( com.zeapo.pwdstore.autofill.AutofillService .this , AutofillActivity .class ) ; com.zeapo.pwdstore.autofill.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , true ) ; startActivity ( com.zeapo.pwdstore.autofill.Intent ) ; } else { int -- ; Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( com.zeapo.pwdstore.autofill.AutofillService .this , AutofillActivity .class ) ; com.zeapo.pwdstore.autofill.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , true ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , java.lang.String ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , boolean ) ; startActivity ( com.zeapo.pwdstore.autofill.Intent ) ; } } } ) ; com.zeapo.pwdstore.autofill.AlertDialog = AlertDialog.Builder . create ( ) ; com.zeapo.pwdstore.autofill.AlertDialog . getWindow ( ) . setType ( WindowManager . LayoutParams . TYPE_SYSTEM_ALERT ) ; com.zeapo.pwdstore.autofill.AlertDialog . getWindow ( ) . addFlags ( WindowManager . LayoutParams . FLAG_NOT_FOCUSABLE ) ; com.zeapo.pwdstore.autofill.AlertDialog . getWindow ( ) . clearFlags ( WindowManager . LayoutParams . FLAG_DIM_BEHIND ) ; int int = NUMBER ; if ( java.lang.CharSequence[] . int > NUMBER ) { int += NUMBER ; } com.zeapo.pwdstore.autofill.AlertDialog . getWindow ( ) . setLayout ( ( int ) ( NUMBER * getApplicationContext ( ) . getResources ( ) . getDisplayMetrics ( ) . density ) , ( int ) ( int * getApplicationContext ( ) . getResources ( ) . getDisplayMetrics ( ) . density ) ) ; com.zeapo.pwdstore.autofill.AlertDialog . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) { com.zeapo.pwdstore.autofill.AlertDialog . dismiss ( ) ; com.zeapo.pwdstore.autofill.AlertDialog = null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) { Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( com.zeapo.pwdstore.autofill.AutofillService .this , AutofillPreferenceActivity .class ) ; com.zeapo.pwdstore.autofill.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , java.lang.String ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , java.lang.String ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , boolean ) ; startActivity ( com.zeapo.pwdstore.autofill.Intent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.autofill.DialogInterface , int int ) { int = int ; if ( int < java.util.ArrayList<java.io.File> . int ( ) ) { void ( ) ; } else if ( int == java.util.ArrayList<java.io.File> . int ( ) ) { Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( com.zeapo.pwdstore.autofill.AutofillService .this , AutofillActivity .class ) ; com.zeapo.pwdstore.autofill.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , true ) ; startActivity ( com.zeapo.pwdstore.autofill.Intent ) ; } else { int -- ; Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( com.zeapo.pwdstore.autofill.AutofillService .this , AutofillActivity .class ) ; com.zeapo.pwdstore.autofill.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , true ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , java.lang.String ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , boolean ) ; startActivity ( com.zeapo.pwdstore.autofill.Intent ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( IOpenPgpService2 com.zeapo.pwdstore.autofill.IOpenPgpService2 ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( com.zeapo.pwdstore.autofill.OpenPgpServiceConnection . getService ( ) == null ) { com.zeapo.pwdstore.autofill.OpenPgpServiceConnection = new OpenPgpServiceConnection ( com.zeapo.pwdstore.autofill.AutofillService .this , STRING , new com.zeapo.pwdstore.autofill.AutofillService.onBoundListener ( ) ) ; com.zeapo.pwdstore.autofill.OpenPgpServiceConnection . bindToService ( ) ; } else { void ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.CharSequence = com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . getPackageName ( ) ; Intent com.zeapo.pwdstore.autofill.Intent ; if ( com.zeapo.pwdstore.autofill.Intent == null ) { com.zeapo.pwdstore.autofill.Intent = new Intent ( ) ; com.zeapo.pwdstore.autofill.Intent . setAction ( OpenPgpApi . ACTION_DECRYPT_VERIFY ) ; } else { com.zeapo.pwdstore.autofill.Intent = com.zeapo.pwdstore.autofill.Intent ; com.zeapo.pwdstore.autofill.Intent = null ; } java.io.InputStream java.io.InputStream = null ; try { java.io.InputStream = FileUtils . openInputStream ( java.util.ArrayList<java.io.File> . java.io.File ( int ) ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; OpenPgpApi com.zeapo.pwdstore.autofill.OpenPgpApi = new OpenPgpApi ( com.zeapo.pwdstore.autofill.AutofillService .this , com.zeapo.pwdstore.autofill.OpenPgpServiceConnection . getService ( ) ) ; Intent com.zeapo.pwdstore.autofill.Intent = com.zeapo.pwdstore.autofill.OpenPgpApi . executeApi ( com.zeapo.pwdstore.autofill.Intent , java.io.InputStream , java.io.ByteArrayOutputStream ) ; switch ( com.zeapo.pwdstore.autofill.Intent . getIntExtra ( OpenPgpApi . RESULT_CODE , OpenPgpApi . RESULT_CODE_ERROR ) ) { case OpenPgpApi . RESULT_CODE_SUCCESS : { try { java.lang.String [] java.lang.String[] = java.io.ByteArrayOutputStream . java.lang.String ( STRING ) . java.lang.String[] ( STRING ) ; boolean = com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . performAction ( AccessibilityNodeInfo . ACTION_FOCUS ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { Bundle com.zeapo.pwdstore.autofill.Bundle = new Bundle ( ) ; com.zeapo.pwdstore.autofill.Bundle . putCharSequence ( AccessibilityNodeInfo . ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE , java.lang.String[] [ NUMBER ] ) ; com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . performAction ( AccessibilityNodeInfo . ACTION_SET_TEXT , com.zeapo.pwdstore.autofill.Bundle ) ; } else { ClipboardManager com.zeapo.pwdstore.autofill.ClipboardManager = ( ClipboardManager ) getSystemService ( Context . CLIPBOARD_SERVICE ) ; ClipData com.zeapo.pwdstore.autofill.ClipData = ClipData . newPlainText ( STRING , java.lang.String[] [ NUMBER ] ) ; com.zeapo.pwdstore.autofill.ClipboardManager . setPrimaryClip ( com.zeapo.pwdstore.autofill.ClipData ) ; com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . performAction ( AccessibilityNodeInfo . ACTION_PASTE ) ; com.zeapo.pwdstore.autofill.ClipData = ClipData . newPlainText ( STRING , STRING ) ; com.zeapo.pwdstore.autofill.ClipboardManager . setPrimaryClip ( com.zeapo.pwdstore.autofill.ClipData ) ; if ( com.zeapo.pwdstore.autofill.SharedPreferences . getBoolean ( STRING , false ) ) { for ( int int = NUMBER ; int < NUMBER ; int ++ ) { com.zeapo.pwdstore.autofill.ClipData = ClipData . newPlainText ( java.lang.String . java.lang.String ( int ) , java.lang.String . java.lang.String ( int ) ) ; com.zeapo.pwdstore.autofill.ClipboardManager . setPrimaryClip ( com.zeapo.pwdstore.autofill.ClipData ) ; } } } com.zeapo.pwdstore.autofill.AccessibilityNodeInfo . recycle ( ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { Log . e ( com.zeapo.pwdstore.autofill.AutofillService.Constants . java.lang.String , STRING , java.io.UnsupportedEncodingException ) ; } break; } case OpenPgpApi . RESULT_CODE_USER_INTERACTION_REQUIRED : { Log . i ( STRING , STRING ) ; PendingIntent com.zeapo.pwdstore.autofill.PendingIntent = com.zeapo.pwdstore.autofill.Intent . getParcelableExtra ( OpenPgpApi . RESULT_INTENT ) ; Intent com.zeapo.pwdstore.autofill.Intent = new Intent ( com.zeapo.pwdstore.autofill.AutofillService .this , AutofillActivity .class ) ; com.zeapo.pwdstore.autofill.Intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; com.zeapo.pwdstore.autofill.Intent . putExtra ( STRING , com.zeapo.pwdstore.autofill.PendingIntent ) ; startActivity ( com.zeapo.pwdstore.autofill.Intent ) ; break; } case OpenPgpApi . RESULT_CODE_ERROR : { OpenPgpError com.zeapo.pwdstore.autofill.OpenPgpError = com.zeapo.pwdstore.autofill.Intent . getParcelableExtra ( OpenPgpApi . RESULT_ERROR ) ; Toast . makeText ( com.zeapo.pwdstore.autofill.AutofillService .this , STRING + com.zeapo.pwdstore.autofill.OpenPgpError . getMessage ( ) , Toast . LENGTH_LONG ) . show ( ) ; Log . e ( com.zeapo.pwdstore.autofill.AutofillService.Constants . java.lang.String , STRING + com.zeapo.pwdstore.autofill.OpenPgpError . getErrorId ( ) ) ; Log . e ( com.zeapo.pwdstore.autofill.AutofillService.Constants . java.lang.String , STRING + com.zeapo.pwdstore.autofill.OpenPgpError . getMessage ( ) ) ; break; } } }  <METHOD_END>
<METHOD_START> public void ( Context com.zeapo.pwdstore.autofill.Context , int int ) { final TypedArray com.zeapo.pwdstore.autofill.TypedArray = com.zeapo.pwdstore.autofill.Context . obtainStyledAttributes ( int[] ) ; com.zeapo.pwdstore.autofill.Drawable = com.zeapo.pwdstore.autofill.TypedArray . getDrawable ( NUMBER ) ; com.zeapo.pwdstore.autofill.TypedArray . recycle ( ) ; void ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if ( int != int && int != int ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Canvas com.zeapo.pwdstore.autofill.Canvas , RecyclerView com.zeapo.pwdstore.autofill.RecyclerView , RecyclerView . RecyclerView RecyclerView.State ) { if ( int == int ) { void ( com.zeapo.pwdstore.autofill.Canvas , com.zeapo.pwdstore.autofill.RecyclerView ) ; } else { void ( com.zeapo.pwdstore.autofill.Canvas , com.zeapo.pwdstore.autofill.RecyclerView ) ; } }  <METHOD_END>
<METHOD_START> public void void ( Canvas com.zeapo.pwdstore.autofill.Canvas , RecyclerView com.zeapo.pwdstore.autofill.RecyclerView ) { final int int = com.zeapo.pwdstore.autofill.RecyclerView . getPaddingLeft ( ) ; final int int = com.zeapo.pwdstore.autofill.RecyclerView . getWidth ( ) - com.zeapo.pwdstore.autofill.RecyclerView . getPaddingRight ( ) ; final int int = com.zeapo.pwdstore.autofill.RecyclerView . getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.zeapo.pwdstore.autofill.View = com.zeapo.pwdstore.autofill.RecyclerView . getChildAt ( int ) ; final RecyclerView . RecyclerView RecyclerView.LayoutParams = ( RecyclerView . RecyclerView ) com.zeapo.pwdstore.autofill.View . getLayoutParams ( ) ; final int int = com.zeapo.pwdstore.autofill.View . getBottom ( ) + params . bottomMargin ; final int int = int + com.zeapo.pwdstore.autofill.Drawable . getIntrinsicHeight ( ) ; com.zeapo.pwdstore.autofill.Drawable . setBounds ( int , int , int , int ) ; com.zeapo.pwdstore.autofill.Drawable . draw ( com.zeapo.pwdstore.autofill.Canvas ) ; } }  <METHOD_END>
<METHOD_START> public void void ( Canvas com.zeapo.pwdstore.autofill.Canvas , RecyclerView com.zeapo.pwdstore.autofill.RecyclerView ) { final int int = com.zeapo.pwdstore.autofill.RecyclerView . getPaddingTop ( ) ; final int int = com.zeapo.pwdstore.autofill.RecyclerView . getHeight ( ) - com.zeapo.pwdstore.autofill.RecyclerView . getPaddingBottom ( ) ; final int int = com.zeapo.pwdstore.autofill.RecyclerView . getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { final View com.zeapo.pwdstore.autofill.View = com.zeapo.pwdstore.autofill.RecyclerView . getChildAt ( int ) ; final RecyclerView . RecyclerView RecyclerView.LayoutParams = ( RecyclerView . RecyclerView ) com.zeapo.pwdstore.autofill.View . getLayoutParams ( ) ; final int int = com.zeapo.pwdstore.autofill.View . getRight ( ) + params . rightMargin ; final int int = int + com.zeapo.pwdstore.autofill.Drawable . getIntrinsicHeight ( ) ; com.zeapo.pwdstore.autofill.Drawable . setBounds ( int , int , int , int ) ; com.zeapo.pwdstore.autofill.Drawable . draw ( com.zeapo.pwdstore.autofill.Canvas ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Rect com.zeapo.pwdstore.autofill.Rect , View com.zeapo.pwdstore.autofill.View , RecyclerView com.zeapo.pwdstore.autofill.RecyclerView , RecyclerView . RecyclerView RecyclerView.State ) { if ( int == int ) { com.zeapo.pwdstore.autofill.Rect . set ( NUMBER , NUMBER , NUMBER , com.zeapo.pwdstore.autofill.Drawable . getIntrinsicHeight ( ) ) ; } else { com.zeapo.pwdstore.autofill.Rect . set ( NUMBER , NUMBER , com.zeapo.pwdstore.autofill.Drawable . getIntrinsicWidth ( ) , NUMBER ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.zeapo.pwdstore.crypto.Bundle ) { super. onCreate ( com.zeapo.pwdstore.crypto.Bundle ) ; getWindow ( ) . setFlags ( WindowManager . LayoutParams . FLAG_SECURE , WindowManager . LayoutParams . FLAG_SECURE ) ; this . com.zeapo.pwdstore.crypto.Activity = this ; this . com.zeapo.pwdstore.crypto.ClipboardManager = ( ClipboardManager ) getSystemService ( CLIPBOARD_SERVICE ) ; if ( getIntent ( ) . getStringExtra ( STRING ) . equals ( STRING ) ) { setTitle ( STRING ) ; } com.zeapo.pwdstore.crypto.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( this ) ; java.lang.String java.lang.String = com.zeapo.pwdstore.crypto.SharedPreferences . getString ( STRING , STRING ) ; java.util.Set<java.lang.String> = com.zeapo.pwdstore.crypto.SharedPreferences . getStringSet ( STRING , new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ) ; boolean = false ; if ( TextUtils . isEmpty ( java.lang.String ) ) { Toast . makeText ( this , this . getResources ( ) . getString ( R . string . provider_toast_text ) , Toast . LENGTH_LONG ) . show ( ) ; Intent com.zeapo.pwdstore.crypto.Intent = new Intent ( this , UserPreference .class ) ; startActivity ( com.zeapo.pwdstore.crypto.Intent ) ; setResult ( RESULT_CANCELED ) ; finish ( ) ; } else { com.zeapo.pwdstore.crypto.OpenPgpServiceConnection = new OpenPgpServiceConnection ( com.zeapo.pwdstore.crypto.PgpHandler .this , java.lang.String , this ) ; com.zeapo.pwdstore.crypto.OpenPgpServiceConnection . bindToService ( ) ; boolean = true ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStop ( ) ; if ( this . boolean && this . com.zeapo.pwdstore.crypto.OpenPgpServiceConnection . isBound ( ) ) try { this . com.zeapo.pwdstore.crypto.OpenPgpServiceConnection . unbindFromService ( ) ; } catch ( java.lang.Exception java.lang.Exception ) {            } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Menu com.zeapo.pwdstore.crypto.Menu ) { switch ( getIntent ( ) . getStringExtra ( STRING ) ){ case STRING : getMenuInflater ( ) . inflate ( R . menu . pgp_handler_new_password , com.zeapo.pwdstore.crypto.Menu ) ; break; case STRING : getMenuInflater ( ) . inflate ( R . menu . pgp_handler_select_folder , com.zeapo.pwdstore.crypto.Menu ) ; break; default: getMenuInflater ( ) . inflate ( R . menu . pgp_handler , com.zeapo.pwdstore.crypto.Menu ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.crypto.MenuItem ) { int int = com.zeapo.pwdstore.crypto.MenuItem . getItemId ( ) ; switch ( int ) { case android . R . id . home : setResult ( RESULT_CANCELED ) ; finish ( ) ; return true ; case R . id . copy_password : void ( ) ; break; case R . id . share_password_as_plaintext : void ( ) ; break; case R . id . edit_password : void ( ) ; break; case R . id . crypto_confirm_add : void ( new Intent ( ) ) ; break; case R . id . crypto_cancel_add : setResult ( RESULT_CANCELED ) ; finish ( ) ; return true ; case R . id . crypto_select : void ( ) ; break; } return super. onOptionsItemSelected ( com.zeapo.pwdstore.crypto.MenuItem ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( com.zeapo.pwdstore.crypto.Intent == null || com.zeapo.pwdstore.crypto.SelectFolderFragment == null ) { Log . wtf ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING ) ; } com.zeapo.pwdstore.crypto.Intent . putExtra ( STRING , com.zeapo.pwdstore.crypto.SelectFolderFragment . getCurrentDir ( ) . getAbsolutePath ( ) ) ; setResult ( RESULT_OK , com.zeapo.pwdstore.crypto.Intent ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( findViewById ( R . id . crypto_password_show ) == null || findViewById ( R . id . crypto_container ) . getVisibility ( ) != View . VISIBLE ) return; java.lang.CharSequence java.lang.CharSequence = ( ( TextView ) findViewById ( R . id . crypto_password_category ) ) . getText ( ) ; java.lang.CharSequence java.lang.CharSequence = ( ( TextView ) findViewById ( R . id . crypto_password_file ) ) . getText ( ) ; java.lang.CharSequence java.lang.CharSequence = ( ( TextView ) findViewById ( R . id . crypto_password_show ) ) . getText ( ) ; java.lang.CharSequence java.lang.CharSequence = ( ( TextView ) findViewById ( R . id . crypto_extra_show ) ) . getText ( ) ; setContentView ( R . layout . encrypt_layout ) ; Typeface com.zeapo.pwdstore.crypto.Typeface = Typeface . createFromAsset ( getAssets ( ) , STRING ) ; ( ( EditText ) findViewById ( R . id . crypto_password_edit ) ) . setTypeface ( com.zeapo.pwdstore.crypto.Typeface ) ; ( ( EditText ) findViewById ( R . id . crypto_extra_edit ) ) . setTypeface ( com.zeapo.pwdstore.crypto.Typeface ) ; ( ( TextView ) findViewById ( R . id . crypto_password_category ) ) . setText ( java.lang.CharSequence ) ; ( ( EditText ) findViewById ( R . id . crypto_password_file_edit ) ) . setText ( java.lang.CharSequence ) ; ( ( EditText ) findViewById ( R . id . crypto_password_edit ) ) . setText ( java.lang.CharSequence ) ; ( ( EditText ) findViewById ( R . id . crypto_extra_edit ) ) . setText ( java.lang.CharSequence ) ; findViewById ( R . id . crypto_password_file_edit ) . setEnabled ( false ) ; java.lang.String java.lang.String = getIntent ( ) . getExtras ( ) . getString ( STRING ) ; java.lang.String java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( java.io.File . java.lang.String ) ) ; Intent com.zeapo.pwdstore.crypto.Intent = new Intent ( this , com.zeapo.pwdstore.crypto.PgpHandler .class ) ; com.zeapo.pwdstore.crypto.Intent . putExtra ( STRING , java.lang.String ) ; com.zeapo.pwdstore.crypto.Intent . putExtra ( STRING , STRING ) ; com.zeapo.pwdstore.crypto.Intent . putExtra ( STRING , true ) ; setIntent ( com.zeapo.pwdstore.crypto.Intent ) ; invalidateOptionsMenu ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( findViewById ( R . id . share_password_as_plaintext ) == null ) return; Intent com.zeapo.pwdstore.crypto.Intent = new Intent ( ) ; com.zeapo.pwdstore.crypto.Intent . setAction ( Intent . ACTION_SEND ) ; com.zeapo.pwdstore.crypto.Intent . putExtra ( Intent . EXTRA_TEXT , java.lang.String ) ; com.zeapo.pwdstore.crypto.Intent . setType ( STRING ) ; startActivity ( Intent . createChooser ( com.zeapo.pwdstore.crypto.Intent , getResources ( ) . getText ( R . string . send_plaintext_password_to ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( findViewById ( R . id . crypto_password_show ) == null ) return; void ( ) ; ClipData com.zeapo.pwdstore.crypto.ClipData = ClipData . newPlainText ( STRING , java.lang.String ) ; com.zeapo.pwdstore.crypto.ClipboardManager . setPrimaryClip ( com.zeapo.pwdstore.crypto.ClipData ) ; try { void ( this . getResources ( ) . getString ( R . string . clipboard_beginning_toast_text ) + STRING + java.lang.Integer . int ( com.zeapo.pwdstore.crypto.SharedPreferences . getString ( STRING , STRING ) ) + STRING + this . getResources ( ) . getString ( R . string . clipboard_ending_toast_text ) ) ; } catch ( java.lang.NumberFormatException java.lang.NumberFormatException ) { void ( this . getResources ( ) . getString ( R . string . clipboard_beginning_toast_text ) + STRING + this . getResources ( ) . getString ( R . string . clipboard_ending_toast_text ) ) ; } }  <METHOD_END>
<METHOD_START> public void void ( View com.zeapo.pwdstore.crypto.View ) { switch ( com.zeapo.pwdstore.crypto.View . getId ( ) ) { case R . id . crypto_show_button : void ( new Intent ( ) ) ; break; case R . id . crypto_delete_button : break; case R . id . crypto_get_key_ids : void ( new Intent ( ) ) ; break; case R . id . generate_password : DialogFragment com.zeapo.pwdstore.crypto.DialogFragment = new pwgenDialogFragment ( ) ; com.zeapo.pwdstore.crypto.DialogFragment . show ( getFragmentManager ( ) , STRING ) ; default: Log . wtf ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING ) ; } }  <METHOD_END>
<METHOD_START> private void void ( final OpenPgpError com.zeapo.pwdstore.crypto.OpenPgpError ) { runOnUiThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Toast . makeText ( com.zeapo.pwdstore.crypto.PgpHandler .this , STRING + com.zeapo.pwdstore.crypto.OpenPgpError . getMessage ( ) , Toast . LENGTH_LONG ) . show ( ) ; Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING + com.zeapo.pwdstore.crypto.OpenPgpError . getErrorId ( ) ) ; Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING + com.zeapo.pwdstore.crypto.OpenPgpError . getMessage ( ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Toast . makeText ( com.zeapo.pwdstore.crypto.PgpHandler .this , STRING + com.zeapo.pwdstore.crypto.OpenPgpError . getMessage ( ) , Toast . LENGTH_LONG ) . show ( ) ; Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING + com.zeapo.pwdstore.crypto.OpenPgpError . getErrorId ( ) ) ; Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING + com.zeapo.pwdstore.crypto.OpenPgpError . getMessage ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( final java.lang.String java.lang.String ) { runOnUiThread ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { Toast . makeText ( com.zeapo.pwdstore.crypto.PgpHandler .this , java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Toast . makeText ( com.zeapo.pwdstore.crypto.PgpHandler .this , java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { try { int = java.lang.Integer . int ( com.zeapo.pwdstore.crypto.SharedPreferences . getString ( STRING , STRING ) ) ; } catch ( java.lang.NumberFormatException java.lang.NumberFormatException ) { int = NUMBER ; } int = NUMBER ; LinearLayout com.zeapo.pwdstore.crypto.LinearLayout = ( LinearLayout ) findViewById ( R . id . crypto_container ) ; com.zeapo.pwdstore.crypto.LinearLayout . setVisibility ( View . VISIBLE ) ; TextView com.zeapo.pwdstore.crypto.TextView = ( TextView ) findViewById ( R . id . crypto_extra_show ) ; if ( com.zeapo.pwdstore.crypto.TextView . getText ( ) . length ( ) != NUMBER ) findViewById ( R . id . crypto_extra_show_layout ) . setVisibility ( View . VISIBLE ) ; if ( int == NUMBER ) { cancel ( true ) ; } else { this . com.zeapo.pwdstore.crypto.ProgressBar = ( ProgressBar ) findViewById ( R . id . pbLoading ) ; this . com.zeapo.pwdstore.crypto.ProgressBar . setMax ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Boolean java.lang.Boolean ( java.lang.Void ... java.lang.Void[] ) { while ( int < int ) { SystemClock . sleep ( NUMBER ) ; int ++ ; publishProgress ( int ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Boolean java.lang.Boolean ) { if ( com.zeapo.pwdstore.crypto.SharedPreferences . getBoolean ( STRING , true ) && boolean ) { Log . d ( STRING , STRING ) ; ClipData com.zeapo.pwdstore.crypto.ClipData = ClipData . newPlainText ( STRING , STRING ) ; com.zeapo.pwdstore.crypto.ClipboardManager . setPrimaryClip ( com.zeapo.pwdstore.crypto.ClipData ) ; if ( com.zeapo.pwdstore.crypto.SharedPreferences . getBoolean ( STRING , false ) ) { Handler com.zeapo.pwdstore.crypto.Handler = new Handler ( ) ; for ( int int = NUMBER ; int < NUMBER ; int ++ ) { final java.lang.String java.lang.String = java.lang.String . java.lang.String ( int ) ; com.zeapo.pwdstore.crypto.Handler . postDelayed ( new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { com.zeapo.pwdstore.crypto.ClipboardManager . setPrimaryClip ( ClipData . newPlainText ( java.lang.String , java.lang.String ) ) ; } } , int * NUMBER ) ; } } } java.lang.String = STRING ; if ( findViewById ( R . id . crypto_password_show ) != null ) { ( ( TextView ) findViewById ( R . id . crypto_password_show ) ) . setText ( STRING ) ; ( ( TextView ) findViewById ( R . id . crypto_extra_show ) ) . setText ( STRING ) ; findViewById ( R . id . crypto_extra_show_layout ) . setVisibility ( View . INVISIBLE ) ; findViewById ( R . id . crypto_container ) . setVisibility ( View . INVISIBLE ) ; com.zeapo.pwdstore.crypto.Activity . setResult ( RESULT_CANCELED ) ; com.zeapo.pwdstore.crypto.Activity . finish ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { com.zeapo.pwdstore.crypto.ClipboardManager . setPrimaryClip ( ClipData . newPlainText ( java.lang.String , java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Integer ... java.lang.Integer[] ) { this . com.zeapo.pwdstore.crypto.ProgressBar . setProgress ( java.lang.Integer[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int , Intent com.zeapo.pwdstore.crypto.Intent ) { super. onActivityResult ( int , int , com.zeapo.pwdstore.crypto.Intent ) ; Log . d ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING + int ) ; if ( int == RESULT_OK ) { switch ( int ) { case int : { void ( com.zeapo.pwdstore.crypto.Intent ) ; break; } case int : { findViewById ( R . id . progress_bar_label ) . setVisibility ( View . GONE ) ; void ( com.zeapo.pwdstore.crypto.Intent ) ; break; } case int : void ( com.zeapo.pwdstore.crypto.Intent ) ; break; case int : { void ( com.zeapo.pwdstore.crypto.Intent ) ; break; } } } else if ( int == RESULT_CANCELED ) { setResult ( RESULT_CANCELED , com.zeapo.pwdstore.crypto.Intent ) ; finish ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( Intent com.zeapo.pwdstore.crypto.Intent ) { if ( com.zeapo.pwdstore.crypto.Intent . getStringExtra ( STRING ) == null || ! com.zeapo.pwdstore.crypto.Intent . getStringExtra ( STRING ) . equals ( STRING ) ) { Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING ) ; if ( BuildConfig . DEBUG ) { throw new java.lang.UnsupportedOperationException ( STRING ) ; } return; } Log . d ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING ) ; FragmentManager com.zeapo.pwdstore.crypto.FragmentManager = getSupportFragmentManager ( ) ; FragmentTransaction com.zeapo.pwdstore.crypto.FragmentTransaction = com.zeapo.pwdstore.crypto.FragmentManager . beginTransaction ( ) ; com.zeapo.pwdstore.crypto.SelectFolderFragment = new SelectFolderFragment ( ) ; Bundle com.zeapo.pwdstore.crypto.Bundle = new Bundle ( ) ; com.zeapo.pwdstore.crypto.Bundle . putString ( STRING , PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) . getAbsolutePath ( ) ) ; com.zeapo.pwdstore.crypto.SelectFolderFragment . setArguments ( com.zeapo.pwdstore.crypto.Bundle ) ; getSupportActionBar ( ) . show ( ) ; com.zeapo.pwdstore.crypto.FragmentManager . popBackStack ( null , FragmentManager . POP_BACK_STACK_INCLUSIVE ) ; com.zeapo.pwdstore.crypto.FragmentTransaction . replace ( R . id . pgp_handler_linearlayout , com.zeapo.pwdstore.crypto.SelectFolderFragment , STRING ) ; com.zeapo.pwdstore.crypto.FragmentTransaction . commit ( ) ; this . com.zeapo.pwdstore.crypto.Intent = com.zeapo.pwdstore.crypto.Intent ; }  <METHOD_END>
<METHOD_START> private void ( boolean boolean , java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream , int int ) { this . boolean = boolean ; this . java.io.ByteArrayOutputStream = java.io.ByteArrayOutputStream ; this . int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Intent com.zeapo.pwdstore.crypto.Intent ) { switch ( com.zeapo.pwdstore.crypto.Intent . getIntExtra ( OpenPgpApi . RESULT_CODE , OpenPgpApi . RESULT_CODE_ERROR ) ) { case OpenPgpApi . RESULT_CODE_SUCCESS : { final TextView com.zeapo.pwdstore.crypto.TextView = ( TextView ) findViewById ( R . id . crypto_password_show ) ; if ( int == int && java.io.ByteArrayOutputStream != null ) { try { if ( boolean ) { findViewById ( R . id . progress_bar ) . setVisibility ( View . GONE ) ; findViewById ( R . id . progress_bar_label ) . setVisibility ( View . GONE ) ; boolean boolean = com.zeapo.pwdstore.crypto.SharedPreferences . getBoolean ( STRING , true ) ; findViewById ( R . id . crypto_container ) . setVisibility ( View . VISIBLE ) ; Typeface com.zeapo.pwdstore.crypto.Typeface = Typeface . createFromAsset ( getAssets ( ) , STRING ) ; final java.lang.String [] java.lang.String[] = java.io.ByteArrayOutputStream . java.lang.String ( STRING ) . java.lang.String[] ( STRING ) ; com.zeapo.pwdstore.crypto.TextView . setTypeface ( com.zeapo.pwdstore.crypto.Typeface ) ; com.zeapo.pwdstore.crypto.TextView . setText ( java.lang.String[] [ NUMBER ] ) ; Button com.zeapo.pwdstore.crypto.Button = ( Button ) findViewById ( R . id . crypto_password_toggle_show ) ; com.zeapo.pwdstore.crypto.Button . setVisibility ( boolean ? View . GONE : View . VISIBLE ) ; com.zeapo.pwdstore.crypto.TextView . setTransformationMethod ( boolean ? null : new com.zeapo.pwdstore.crypto.PgpHandler.HoldToShowPasswordTransformation ( com.zeapo.pwdstore.crypto.Button , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { com.zeapo.pwdstore.crypto.TextView . setText ( java.lang.String[] [ NUMBER ] ) ; } } ) ) ; java.lang.String = java.lang.String[] [ NUMBER ] ; java.lang.String java.lang.String = java.io.ByteArrayOutputStream . java.lang.String ( STRING ) . java.lang.String ( STRING , STRING ) ; if ( java.lang.String . int ( ) != NUMBER ) { ( ( TextView ) findViewById ( R . id . crypto_extra_show ) ) . setTypeface ( com.zeapo.pwdstore.crypto.Typeface ) ; ( ( TextView ) findViewById ( R . id . crypto_extra_show ) ) . setText ( java.lang.String ) ; } if ( com.zeapo.pwdstore.crypto.SharedPreferences . getBoolean ( STRING , true ) ) { void ( ) ; } } else { Log . d ( STRING , STRING + java.io.ByteArrayOutputStream . java.lang.String ( ) ) ; } } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING , java.io.UnsupportedEncodingException ) ; } } if ( int == int && java.io.ByteArrayOutputStream != null ) { try { java.lang.String java.lang.String = getIntent ( ) . getExtras ( ) . getString ( STRING ) + STRING + ( ( EditText ) findViewById ( R . id . crypto_password_file_edit ) ) . getText ( ) . toString ( ) + STRING ; java.io.OutputStream java.io.OutputStream = FileUtils . openOutputStream ( new java.io.File ( java.lang.String ) ) ; java.io.OutputStream . void ( java.io.ByteArrayOutputStream . byte[] ( ) ) ; java.io.OutputStream . void ( ) ; Intent com.zeapo.pwdstore.crypto.Intent = new Intent ( ) ; com.zeapo.pwdstore.crypto.Intent . putExtra ( STRING , java.lang.String ) ; com.zeapo.pwdstore.crypto.Intent . putExtra ( STRING , ( ( EditText ) findViewById ( R . id . crypto_password_file_edit ) ) . getText ( ) . toString ( ) ) ; if ( getIntent ( ) . getBooleanExtra ( STRING , false ) ) { com.zeapo.pwdstore.crypto.Intent . putExtra ( STRING , true ) ; } setResult ( RESULT_OK , com.zeapo.pwdstore.crypto.Intent ) ; finish ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING , java.lang.Exception ) ; } } if ( com.zeapo.pwdstore.crypto.Intent . hasExtra ( OpenPgpApi . RESULT_KEY_IDS ) ) { long [] long[] = com.zeapo.pwdstore.crypto.Intent . getLongArrayExtra ( OpenPgpApi . RESULT_KEY_IDS ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ; for ( long long : long[] ) java.util.Set<java.lang.String> . boolean ( java.lang.String . java.lang.String ( long ) ) ; com.zeapo.pwdstore.crypto.SharedPreferences . edit ( ) . putStringSet ( STRING , java.util.Set<java.lang.String> ) . apply ( ) ; void ( STRING ) ; setResult ( RESULT_OK ) ; finish ( ) ; } if ( int == int && java.io.ByteArrayOutputStream != null ) { try { if ( boolean ) { findViewById ( R . id . progress_bar ) . setVisibility ( View . GONE ) ; findViewById ( R . id . progress_bar_label ) . setVisibility ( View . GONE ) ; findViewById ( R . id . crypto_container ) . setVisibility ( View . VISIBLE ) ; Typeface com.zeapo.pwdstore.crypto.Typeface = Typeface . createFromAsset ( getAssets ( ) , STRING ) ; java.lang.String [] java.lang.String[] = java.io.ByteArrayOutputStream . java.lang.String ( STRING ) . java.lang.String[] ( STRING ) ; com.zeapo.pwdstore.crypto.TextView . setTypeface ( com.zeapo.pwdstore.crypto.Typeface ) ; com.zeapo.pwdstore.crypto.TextView . setText ( java.lang.String[] [ NUMBER ] ) ; java.lang.String = java.lang.String[] [ NUMBER ] ; java.lang.String java.lang.String = java.io.ByteArrayOutputStream . java.lang.String ( STRING ) . java.lang.String ( STRING , STRING ) ; if ( java.lang.String . int ( ) != NUMBER ) { ( ( TextView ) findViewById ( R . id . crypto_extra_show ) ) . setTypeface ( com.zeapo.pwdstore.crypto.Typeface ) ; ( ( TextView ) findViewById ( R . id . crypto_extra_show ) ) . setText ( java.lang.String ) ; } void ( ) ; } else { Log . d ( STRING , STRING + java.io.ByteArrayOutputStream . java.lang.String ( ) ) ; } } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING , java.io.UnsupportedEncodingException ) ; } } break; } case OpenPgpApi . RESULT_CODE_USER_INTERACTION_REQUIRED : { Log . i ( STRING , STRING ) ; View com.zeapo.pwdstore.crypto.View = findViewById ( R . id . progress_bar_label ) ; if ( com.zeapo.pwdstore.crypto.View != null ) { com.zeapo.pwdstore.crypto.View . setVisibility ( View . VISIBLE ) ; } PendingIntent com.zeapo.pwdstore.crypto.PendingIntent = com.zeapo.pwdstore.crypto.Intent . getParcelableExtra ( OpenPgpApi . RESULT_INTENT ) ; try { com.zeapo.pwdstore.crypto.PgpHandler .this . startIntentSenderForResult ( com.zeapo.pwdstore.crypto.PendingIntent . getIntentSender ( ) , int , null , NUMBER , NUMBER , NUMBER ) ; } catch ( IntentSender . IntentSender IntentSender.SendIntentException ) { Log . e ( com.zeapo.pwdstore.crypto.PgpHandler.Constants . java.lang.String , STRING , IntentSender.SendIntentException ) ; } break; } case OpenPgpApi . RESULT_CODE_ERROR : { OpenPgpError com.zeapo.pwdstore.crypto.OpenPgpError = com.zeapo.pwdstore.crypto.Intent . getParcelableExtra ( OpenPgpApi . RESULT_ERROR ) ; void ( com.zeapo.pwdstore.crypto.OpenPgpError ) ; break; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { com.zeapo.pwdstore.crypto.TextView . setText ( java.lang.String[] [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> public void void ( Intent com.zeapo.pwdstore.crypto.Intent ) { com.zeapo.pwdstore.crypto.Intent . setAction ( OpenPgpApi . ACTION_GET_KEY_IDS ) ; OpenPgpApi com.zeapo.pwdstore.crypto.OpenPgpApi = new OpenPgpApi ( this , com.zeapo.pwdstore.crypto.OpenPgpServiceConnection . getService ( ) ) ; com.zeapo.pwdstore.crypto.OpenPgpApi . executeApiAsync ( com.zeapo.pwdstore.crypto.Intent , null , null , new com.zeapo.pwdstore.crypto.PgpHandler.PgpCallback ( false , null , com.zeapo.pwdstore.crypto.PgpHandler . int ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( Intent com.zeapo.pwdstore.crypto.Intent ) { com.zeapo.pwdstore.crypto.Intent . setAction ( OpenPgpApi . ACTION_DECRYPT_VERIFY ) ; findViewById ( R . id . progress_bar ) . setVisibility ( View . VISIBLE ) ; try { java.io.InputStream java.io.InputStream = FileUtils . openInputStream ( new java.io.File ( getIntent ( ) . getExtras ( ) . getString ( STRING ) ) ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; OpenPgpApi com.zeapo.pwdstore.crypto.OpenPgpApi = new OpenPgpApi ( this , com.zeapo.pwdstore.crypto.OpenPgpServiceConnection . getService ( ) ) ; com.zeapo.pwdstore.crypto.OpenPgpApi . executeApiAsync ( com.zeapo.pwdstore.crypto.Intent , java.io.InputStream , java.io.ByteArrayOutputStream , new com.zeapo.pwdstore.crypto.PgpHandler.PgpCallback ( true , java.io.ByteArrayOutputStream , int ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( Intent com.zeapo.pwdstore.crypto.Intent ) { com.zeapo.pwdstore.crypto.Intent . setAction ( OpenPgpApi . ACTION_ENCRYPT ) ; java.util.ArrayList<java.lang.Long> < java.lang.Long > java.util.ArrayList<java.lang.Long> = new java.util.ArrayList<java.lang.Long> <> ( ) ; for ( java.lang.String java.lang.String : java.util.Set<java.lang.String> ) java.util.ArrayList<java.lang.Long> . boolean ( java.lang.Long . java.lang.Long ( java.lang.String ) ) ; com.zeapo.pwdstore.crypto.Intent . putExtra ( OpenPgpApi . EXTRA_KEY_IDS , Longs . toArray ( java.util.ArrayList<java.lang.Long> ) ) ; com.zeapo.pwdstore.crypto.Intent . putExtra ( OpenPgpApi . EXTRA_REQUEST_ASCII_ARMOR , true ) ; java.lang.String java.lang.String = ( ( EditText ) findViewById ( R . id . crypto_password_file_edit ) ) . getText ( ) . toString ( ) ; java.lang.String java.lang.String = ( ( EditText ) findViewById ( R . id . crypto_password_edit ) ) . getText ( ) . toString ( ) ; java.lang.String java.lang.String = ( ( EditText ) findViewById ( R . id . crypto_extra_edit ) ) . getText ( ) . toString ( ) ; if ( java.lang.String . boolean ( ) ) { void ( this . getResources ( ) . getString ( R . string . file_toast_text ) ) ; return; } if ( java.lang.String . boolean ( ) && java.lang.String . boolean ( ) ) { void ( this . getResources ( ) . getString ( R . string . empty_toast_text ) ) ; return; } java.io.ByteArrayInputStream java.io.ByteArrayInputStream ; try { java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream ( ( java.lang.String + STRING + java.lang.String ) . byte[] ( STRING ) ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; OpenPgpApi com.zeapo.pwdstore.crypto.OpenPgpApi = new OpenPgpApi ( this , com.zeapo.pwdstore.crypto.OpenPgpServiceConnection . getService ( ) ) ; com.zeapo.pwdstore.crypto.OpenPgpApi . executeApiAsync ( com.zeapo.pwdstore.crypto.Intent , java.io.ByteArrayInputStream , java.io.ByteArrayOutputStream , new com.zeapo.pwdstore.crypto.PgpHandler.PgpCallback ( true , java.io.ByteArrayOutputStream , int ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( Intent com.zeapo.pwdstore.crypto.Intent ) { com.zeapo.pwdstore.crypto.Intent . setAction ( OpenPgpApi . ACTION_DECRYPT_VERIFY ) ; findViewById ( R . id . progress_bar ) . setVisibility ( View . VISIBLE ) ; try { java.io.InputStream java.io.InputStream = FileUtils . openInputStream ( new java.io.File ( getIntent ( ) . getExtras ( ) . getString ( STRING ) ) ) ; java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; OpenPgpApi com.zeapo.pwdstore.crypto.OpenPgpApi = new OpenPgpApi ( this , com.zeapo.pwdstore.crypto.OpenPgpServiceConnection . getService ( ) ) ; com.zeapo.pwdstore.crypto.OpenPgpApi . executeApiAsync ( com.zeapo.pwdstore.crypto.Intent , java.io.InputStream , java.io.ByteArrayOutputStream , new com.zeapo.pwdstore.crypto.PgpHandler.PgpCallback ( true , java.io.ByteArrayOutputStream , int ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( IOpenPgpService2 com.zeapo.pwdstore.crypto.IOpenPgpService2 ) { Log . i ( STRING , STRING ) ; Bundle com.zeapo.pwdstore.crypto.Bundle = getIntent ( ) . getExtras ( ) ; final java.lang.String java.lang.String = com.zeapo.pwdstore.crypto.Bundle . getString ( STRING ) ; if ( java.lang.String == null ) { return; } if ( java.lang.String . boolean ( STRING ) ) { setContentView ( R . layout . decrypt_layout ) ; ( ( TextView ) findViewById ( R . id . crypto_password_file ) ) . setText ( com.zeapo.pwdstore.crypto.Bundle . getString ( STRING ) ) ; java.lang.String java.lang.String = com.zeapo.pwdstore.crypto.Bundle . getString ( STRING ) . replace ( PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) . getAbsolutePath ( ) , STRING ) ; java.lang.String java.lang.String = new java.io.File ( java.lang.String ) . java.io.File ( ) . java.lang.String ( ) ; ( ( TextView ) findViewById ( R . id . crypto_password_category ) ) . setText ( java.lang.String + STRING ) ; void ( new Intent ( ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { setContentView ( R . layout . encrypt_layout ) ; Typeface com.zeapo.pwdstore.crypto.Typeface = Typeface . createFromAsset ( getAssets ( ) , STRING ) ; ( ( EditText ) findViewById ( R . id . crypto_password_edit ) ) . setTypeface ( com.zeapo.pwdstore.crypto.Typeface ) ; ( ( EditText ) findViewById ( R . id . crypto_extra_edit ) ) . setTypeface ( com.zeapo.pwdstore.crypto.Typeface ) ; java.lang.String java.lang.String = com.zeapo.pwdstore.crypto.Bundle . getString ( STRING ) ; java.lang.String = java.lang.String . java.lang.String ( PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) . getAbsolutePath ( ) , STRING ) ; java.lang.String = java.lang.String + STRING ; ( ( TextView ) findViewById ( R . id . crypto_password_category ) ) . setText ( java.lang.String ) ; } else if ( java.lang.String . boolean ( STRING ) ) { void ( new Intent ( ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { setContentView ( R . layout . decrypt_layout ) ; ( ( TextView ) findViewById ( R . id . crypto_password_file ) ) . setText ( com.zeapo.pwdstore.crypto.Bundle . getString ( STRING ) ) ; java.lang.String java.lang.String = new java.io.File ( com.zeapo.pwdstore.crypto.Bundle . getString ( STRING ) . replace ( PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) . getAbsolutePath ( ) , STRING ) ) . java.io.File ( ) . java.lang.String ( ) ; ( ( TextView ) findViewById ( R . id . crypto_password_category ) ) . setText ( java.lang.String + STRING ) ; void ( new Intent ( ) ) ; } else if ( java.lang.String . boolean ( STRING ) ) { setContentView ( R . layout . select_folder_layout ) ; void ( getIntent ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.Exception java.lang.Exception ) {    }  <METHOD_END>
<METHOD_START> private void ( Button com.zeapo.pwdstore.crypto.Button , java.lang.Runnable java.lang.Runnable ) { this . java.lang.Runnable = java.lang.Runnable ; com.zeapo.pwdstore.crypto.Button . setOnTouchListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.CharSequence java.lang.CharSequence ( java.lang.CharSequence java.lang.CharSequence , View com.zeapo.pwdstore.crypto.View ) { return boolean ? java.lang.CharSequence : super. getTransformation ( STRING , com.zeapo.pwdstore.crypto.View ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( View com.zeapo.pwdstore.crypto.View , MotionEvent com.zeapo.pwdstore.crypto.MotionEvent ) { switch ( com.zeapo.pwdstore.crypto.MotionEvent . getAction ( ) ) { case MotionEvent . ACTION_DOWN : boolean = true ; java.lang.Runnable . void ( ) ; break; case MotionEvent . ACTION_UP : boolean = false ; java.lang.Runnable . void ( ) ; break; } return false ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( com.zeapo.pwdstore.crypto.PgpHandler.DelayShow != null ) { com.zeapo.pwdstore.crypto.PgpHandler.DelayShow . void ( false ) ; } com.zeapo.pwdstore.crypto.PgpHandler.DelayShow = new com.zeapo.pwdstore.crypto.PgpHandler.DelayShow ( ) ; com.zeapo.pwdstore.crypto.PgpHandler.DelayShow . executeOnExecutor ( AsyncTask . THREAD_POOL_EXECUTOR ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.zeapo.pwdstore.Context ) { final TypedArray com.zeapo.pwdstore.TypedArray = com.zeapo.pwdstore.Context . obtainStyledAttributes ( int[] ) ; com.zeapo.pwdstore.Drawable = com.zeapo.pwdstore.TypedArray . getDrawable ( NUMBER ) ; com.zeapo.pwdstore.TypedArray . recycle ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.zeapo.pwdstore.Context , int int ) { com.zeapo.pwdstore.Drawable = ContextCompat . getDrawable ( com.zeapo.pwdstore.Context , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Canvas com.zeapo.pwdstore.Canvas , RecyclerView com.zeapo.pwdstore.RecyclerView , RecyclerView . RecyclerView RecyclerView.State ) { int int = com.zeapo.pwdstore.RecyclerView . getPaddingLeft ( ) ; int int = com.zeapo.pwdstore.RecyclerView . getWidth ( ) - com.zeapo.pwdstore.RecyclerView . getPaddingRight ( ) ; int int = com.zeapo.pwdstore.RecyclerView . getChildCount ( ) ; for ( int int = NUMBER ; int < int ; int ++ ) { View com.zeapo.pwdstore.View = com.zeapo.pwdstore.RecyclerView . getChildAt ( int ) ; RecyclerView . RecyclerView RecyclerView.LayoutParams = ( RecyclerView . RecyclerView ) com.zeapo.pwdstore.View . getLayoutParams ( ) ; int int = com.zeapo.pwdstore.View . getBottom ( ) + params . bottomMargin ; int int = int + com.zeapo.pwdstore.Drawable . getIntrinsicHeight ( ) ; com.zeapo.pwdstore.Drawable . setBounds ( int , int , int , int ) ; com.zeapo.pwdstore.Drawable . draw ( com.zeapo.pwdstore.Canvas ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.io.File java.io.File , Activity com.zeapo.pwdstore.git.Activity ) { super( java.io.File , com.zeapo.pwdstore.git.Activity ); }  <METHOD_END>
<METHOD_START> public com.zeapo.pwdstore.git.CloneOperation com.zeapo.pwdstore.git.CloneOperation ( java.lang.String java.lang.String ) { this . command = Git . cloneRepository ( ) . setCloneAllBranches ( true ) . setDirectory ( repository . getWorkTree ( ) ) . setURI ( java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.git.CloneOperation com.zeapo.pwdstore.git.CloneOperation ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { super. setAuthentication ( java.lang.String , java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.git.CloneOperation com.zeapo.pwdstore.git.CloneOperation ( java.io.File java.io.File , java.lang.String java.lang.String , java.lang.String java.lang.String ) { super. setAuthentication ( java.io.File , java.lang.String , java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . provider != null ) { ( ( CloneCommand ) this . command ) . setCredentialsProvider ( this . provider ) ; } new GitAsyncTask ( callingActivity , true , false , this ) . execute ( this . command ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { new AlertDialog . AlertDialog ( callingActivity ) . setTitle ( callingActivity . getResources ( ) . getString ( R . string . jgit_error_dialog_title ) ) . setMessage ( STRING + callingActivity . getResources ( ) . getString ( R . string . jgit_error_dialog_text ) + java.lang.String + STRING ) . setPositiveButton ( callingActivity . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) {                    } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) {                    }  <METHOD_END>
<METHOD_START> protected void void ( OpenSshConfig . OpenSshConfig OpenSshConfig.Host , Session com.zeapo.pwdstore.git.config.Session ) { com.zeapo.pwdstore.git.config.Session . setConfig ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.zeapo.pwdstore.git.config.JSch com.zeapo.pwdstore.git.config.JSch ( final OpenSshConfig . OpenSshConfig OpenSshConfig.Host , FS com.zeapo.pwdstore.git.config.FS ) throws com.zeapo.pwdstore.git.config.JSchException { JSch com.zeapo.pwdstore.git.config.JSch = super. getJSch ( OpenSshConfig.Host , com.zeapo.pwdstore.git.config.FS ) ; com.zeapo.pwdstore.git.config.JSch . removeAllIdentity ( ) ; return com.zeapo.pwdstore.git.config.JSch ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.zeapo.pwdstore.git.config.JSch com.zeapo.pwdstore.git.config.JSch ( final OpenSshConfig . OpenSshConfig OpenSshConfig.Host , FS com.zeapo.pwdstore.git.config.FS ) throws com.zeapo.pwdstore.git.config.JSchException { JSch com.zeapo.pwdstore.git.config.JSch = super. getJSch ( OpenSshConfig.Host , com.zeapo.pwdstore.git.config.FS ) ; com.zeapo.pwdstore.git.config.JSch . removeAllIdentity ( ) ; com.zeapo.pwdstore.git.config.JSch . addIdentity ( java.lang.String ) ; return com.zeapo.pwdstore.git.config.JSch ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( OpenSshConfig . OpenSshConfig OpenSshConfig.Host , Session com.zeapo.pwdstore.git.config.Session ) { com.zeapo.pwdstore.git.config.Session . setConfig ( STRING , STRING ) ; com.zeapo.pwdstore.git.config.Session . setConfig ( STRING , STRING ) ; CredentialsProvider com.zeapo.pwdstore.git.config.CredentialsProvider = new CredentialsProvider ( ) { @ java.lang.Override public boolean boolean ( ) { return false ; } @ java.lang.Override public boolean boolean ( CredentialItem ... com.zeapo.pwdstore.git.config.CredentialItem[] ) { return true ; } @ java.lang.Override public boolean boolean ( URIish com.zeapo.pwdstore.git.config.URIish , CredentialItem ... com.zeapo.pwdstore.git.config.CredentialItem[] ) throws com.zeapo.pwdstore.git.config.UnsupportedCredentialItem { for ( CredentialItem com.zeapo.pwdstore.git.config.CredentialItem : com.zeapo.pwdstore.git.config.CredentialItem[] ) { if ( com.zeapo.pwdstore.git.config.CredentialItem instanceof CredentialItem . CredentialItem ) { ( ( CredentialItem . CredentialItem ) com.zeapo.pwdstore.git.config.CredentialItem ) . setValue ( java.lang.String ) ; continue; } if ( com.zeapo.pwdstore.git.config.CredentialItem instanceof CredentialItem . CredentialItem ) { ( ( CredentialItem . CredentialItem ) com.zeapo.pwdstore.git.config.CredentialItem ) . setValue ( java.lang.String ) ; } } return true ; } } ; UserInfo com.zeapo.pwdstore.git.config.UserInfo = new CredentialsProviderUserInfo ( com.zeapo.pwdstore.git.config.Session , com.zeapo.pwdstore.git.config.CredentialsProvider ) ; com.zeapo.pwdstore.git.config.Session . setUserInfo ( com.zeapo.pwdstore.git.config.UserInfo ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( CredentialItem ... com.zeapo.pwdstore.git.config.CredentialItem[] ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( URIish com.zeapo.pwdstore.git.config.URIish , CredentialItem ... com.zeapo.pwdstore.git.config.CredentialItem[] ) throws com.zeapo.pwdstore.git.config.UnsupportedCredentialItem { for ( CredentialItem com.zeapo.pwdstore.git.config.CredentialItem : com.zeapo.pwdstore.git.config.CredentialItem[] ) { if ( com.zeapo.pwdstore.git.config.CredentialItem instanceof CredentialItem . CredentialItem ) { ( ( CredentialItem . CredentialItem ) com.zeapo.pwdstore.git.config.CredentialItem ) . setValue ( java.lang.String ) ; continue; } if ( com.zeapo.pwdstore.git.config.CredentialItem instanceof CredentialItem . CredentialItem ) { ( ( CredentialItem . CredentialItem ) com.zeapo.pwdstore.git.config.CredentialItem ) . setValue ( java.lang.String ) ; } } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.zeapo.pwdstore.git.Bundle ) { super. onCreate ( com.zeapo.pwdstore.git.Bundle ) ; com.zeapo.pwdstore.git.Context = getApplicationContext ( ) ; com.zeapo.pwdstore.git.Activity = this ; com.zeapo.pwdstore.git.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( this . com.zeapo.pwdstore.git.Context ) ; java.lang.String = com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) ; java.lang.String = com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) ; int int = getIntent ( ) . getExtras ( ) . getInt ( STRING ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; switch ( int ) { case int : case int : setContentView ( R . layout . activity_git_clone ) ; setTitle ( R . string . title_activity_git_clone ) ; final Spinner com.zeapo.pwdstore.git.Spinner = ( Spinner ) findViewById ( R . id . clone_protocol ) ; final Spinner com.zeapo.pwdstore.git.Spinner = ( Spinner ) findViewById ( R . id . connection_mode ) ; final ArrayAdapter < java.lang.CharSequence > com.zeapo.pwdstore.git.ArrayAdapter<java.lang.CharSequence> = ArrayAdapter . createFromResource ( this , R . array . connection_modes , android . R . layout . simple_spinner_item ) ; com.zeapo.pwdstore.git.ArrayAdapter<java.lang.CharSequence> . setDropDownViewResource ( android . R . layout . simple_spinner_dropdown_item ) ; com.zeapo.pwdstore.git.Spinner . setAdapter ( com.zeapo.pwdstore.git.ArrayAdapter<java.lang.CharSequence> ) ; com.zeapo.pwdstore.git.Spinner . setOnItemSelectedListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.git.AdapterView<?> , View com.zeapo.pwdstore.git.View , int int , long long ) { java.lang.String java.lang.String = ( ( Spinner ) findViewById ( R . id . connection_mode ) ) . getSelectedItem ( ) . toString ( ) ; java.lang.String = java.lang.String ; com.zeapo.pwdstore.git.SharedPreferences . edit ( ) . putString ( STRING , java.lang.String ) . apply ( ) ; } @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.git.AdapterView<?> ) {                    } } ) ; ArrayAdapter < java.lang.CharSequence > com.zeapo.pwdstore.git.ArrayAdapter<java.lang.CharSequence> = ArrayAdapter . createFromResource ( this , R . array . clone_protocols , android . R . layout . simple_spinner_item ) ; com.zeapo.pwdstore.git.ArrayAdapter<java.lang.CharSequence> . setDropDownViewResource ( android . R . layout . simple_spinner_dropdown_item ) ; com.zeapo.pwdstore.git.Spinner . setAdapter ( com.zeapo.pwdstore.git.ArrayAdapter<java.lang.CharSequence> ) ; com.zeapo.pwdstore.git.Spinner . setOnItemSelectedListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.git.AdapterView<?> , View com.zeapo.pwdstore.git.View , int int , long long ) { java.lang.String = ( ( Spinner ) findViewById ( R . id . clone_protocol ) ) . getSelectedItem ( ) . toString ( ) ; if ( java.lang.String . boolean ( STRING ) ) { ( ( EditText ) findViewById ( R . id . clone_uri ) ) . setHint ( STRING ) ; ( ( EditText ) findViewById ( R . id . server_port ) ) . setHint ( R . string . default_ssh_port ) ; com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; com.zeapo.pwdstore.git.Spinner . setEnabled ( true ) ; if ( java.lang.String . boolean ( STRING ) ) { com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; } else { com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; } } else { ( ( EditText ) findViewById ( R . id . clone_uri ) ) . setHint ( STRING ) ; ( ( EditText ) findViewById ( R . id . server_port ) ) . setHint ( R . string . default_https_port ) ; com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; com.zeapo.pwdstore.git.Spinner . setEnabled ( false ) ; } } @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.git.AdapterView<?> ) {                            } } ) ; if ( java.lang.String . boolean ( STRING ) ) { com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; } else { com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; } final EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_url ) ) ; final EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_port ) ) ; final EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_path ) ) ; final EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_user ) ) ; final EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . clone_uri ) ) ; View . View View.OnFocusChangeListener = new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.git.View , boolean boolean ) { void ( ) ; } } ; com.zeapo.pwdstore.git.EditText . setText ( com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) ) ; com.zeapo.pwdstore.git.EditText . setText ( com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) ) ; com.zeapo.pwdstore.git.EditText . setText ( com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) ) ; com.zeapo.pwdstore.git.EditText . setText ( com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) ) ; com.zeapo.pwdstore.git.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    } @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; } @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    } } ) ; com.zeapo.pwdstore.git.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    } @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; } @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    } } ) ; com.zeapo.pwdstore.git.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    } @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; } @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    } } ) ; com.zeapo.pwdstore.git.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    } @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; } @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    } } ) ; com.zeapo.pwdstore.git.EditText . addTextChangedListener ( new TextWatcher ( ) { @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    } @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; } @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    } } ) ; if ( int == int ) { findViewById ( R . id . clone_button ) . setVisibility ( View . INVISIBLE ) ; findViewById ( R . id . save_button ) . setVisibility ( View . VISIBLE ) ; } else { findViewById ( R . id . clone_button ) . setVisibility ( View . VISIBLE ) ; findViewById ( R . id . save_button ) . setVisibility ( View . INVISIBLE ) ; } void ( ) ; break; case int : void ( int ) ; break; case int : void ( int ) ; break; case int : void ( int ) ; break; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.git.AdapterView<?> , View com.zeapo.pwdstore.git.View , int int , long long ) { java.lang.String java.lang.String = ( ( Spinner ) findViewById ( R . id . connection_mode ) ) . getSelectedItem ( ) . toString ( ) ; java.lang.String = java.lang.String ; com.zeapo.pwdstore.git.SharedPreferences . edit ( ) . putString ( STRING , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.git.AdapterView<?> ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.git.AdapterView<?> , View com.zeapo.pwdstore.git.View , int int , long long ) { java.lang.String = ( ( Spinner ) findViewById ( R . id . clone_protocol ) ) . getSelectedItem ( ) . toString ( ) ; if ( java.lang.String . boolean ( STRING ) ) { ( ( EditText ) findViewById ( R . id . clone_uri ) ) . setHint ( STRING ) ; ( ( EditText ) findViewById ( R . id . server_port ) ) . setHint ( R . string . default_ssh_port ) ; com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; com.zeapo.pwdstore.git.Spinner . setEnabled ( true ) ; if ( java.lang.String . boolean ( STRING ) ) { com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; } else { com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; } } else { ( ( EditText ) findViewById ( R . id . clone_uri ) ) . setHint ( STRING ) ; ( ( EditText ) findViewById ( R . id . server_port ) ) . setHint ( R . string . default_https_port ) ; com.zeapo.pwdstore.git.Spinner . setSelection ( NUMBER ) ; com.zeapo.pwdstore.git.Spinner . setEnabled ( false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > com.zeapo.pwdstore.git.AdapterView<?> ) {                            }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.git.View , boolean boolean ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) {                    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.CharSequence java.lang.CharSequence , int int , int int , int int ) { if ( com.zeapo.pwdstore.git.EditText . isFocused ( ) ) void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Editable com.zeapo.pwdstore.git.Editable ) {                    }  <METHOD_END>
<METHOD_START> private void void ( ) { EditText com.zeapo.pwdstore.git.EditText = ( EditText ) findViewById ( R . id . clone_uri ) ; EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_url ) ) ; EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_port ) ) ; EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_path ) ) ; EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_user ) ) ; if ( com.zeapo.pwdstore.git.EditText != null ) { switch ( java.lang.String ) { case STRING : { java.lang.String java.lang.String = com.zeapo.pwdstore.git.EditText . getText ( ) + STRING + com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) . trim ( ) + STRING ; if ( com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) . equals ( STRING ) ) { java.lang.String += com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ; ( ( TextView ) findViewById ( R . id . warn_url ) ) . setVisibility ( View . GONE ) ; } else { TextView com.zeapo.pwdstore.git.TextView = ( TextView ) findViewById ( R . id . warn_url ) ; if ( ! com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) . matches ( STRING ) && ! com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) . isEmpty ( ) ) { com.zeapo.pwdstore.git.TextView . setText ( R . string . warn_malformed_url_port ) ; com.zeapo.pwdstore.git.TextView . setVisibility ( View . VISIBLE ) ; } else { com.zeapo.pwdstore.git.TextView . setVisibility ( View . GONE ) ; } java.lang.String += com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) + com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ; } if ( ! java.lang.String . boolean ( STRING ) ) com.zeapo.pwdstore.git.EditText . setText ( java.lang.String ) ; } break; case STRING : { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) . trim ( ) ) ; if ( com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) . equals ( STRING ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) ; ( ( TextView ) findViewById ( R . id . warn_url ) ) . setVisibility ( View . GONE ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; java.lang.StringBuilder . java.lang.StringBuilder ( com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) . append ( com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) ; } if ( ! java.lang.StringBuilder . java.lang.String ( ) . boolean ( STRING ) ) com.zeapo.pwdstore.git.EditText . setText ( java.lang.StringBuilder ) ; } break; default: break; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { EditText com.zeapo.pwdstore.git.EditText = ( EditText ) findViewById ( R . id . clone_uri ) ; EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_url ) ) ; EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_port ) ) ; EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_path ) ) ; EditText com.zeapo.pwdstore.git.EditText = ( ( EditText ) findViewById ( R . id . server_user ) ) ; java.lang.String java.lang.String = com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ; java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern . java.util.regex.Pattern ( STRING ) ; java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern . java.util.regex.Matcher ( java.lang.String ) ; if ( java.util.regex.Matcher . boolean ( ) ) { int int = java.util.regex.Matcher . int ( ) ; if ( int > NUMBER ) { com.zeapo.pwdstore.git.EditText . setText ( java.util.regex.Matcher . java.lang.String ( NUMBER ) ) ; com.zeapo.pwdstore.git.EditText . setText ( java.util.regex.Matcher . java.lang.String ( NUMBER ) ) ; } if ( int == NUMBER ) { com.zeapo.pwdstore.git.EditText . setText ( java.util.regex.Matcher . java.lang.String ( NUMBER ) ) ; com.zeapo.pwdstore.git.EditText . setText ( java.util.regex.Matcher . java.lang.String ( NUMBER ) ) ; TextView com.zeapo.pwdstore.git.TextView = ( TextView ) findViewById ( R . id . warn_url ) ; if ( ! com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) . matches ( STRING ) && ! com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) . isEmpty ( ) ) { com.zeapo.pwdstore.git.TextView . setText ( R . string . warn_malformed_url_port ) ; com.zeapo.pwdstore.git.TextView . setVisibility ( View . VISIBLE ) ; } else { com.zeapo.pwdstore.git.TextView . setVisibility ( View . GONE ) ; } } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Menu com.zeapo.pwdstore.git.Menu ) { getMenuInflater ( ) . inflate ( R . menu . git_clone , com.zeapo.pwdstore.git.Menu ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.git.MenuItem ) { int int = com.zeapo.pwdstore.git.MenuItem . getItemId ( ) ; switch ( int ) { case R . id . user_pref : try { Intent com.zeapo.pwdstore.git.Intent = new Intent ( this , UserPreference .class ) ; startActivity ( com.zeapo.pwdstore.git.Intent ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; } return true ; } return super. onOptionsItemSelected ( com.zeapo.pwdstore.git.MenuItem ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { SharedPreferences . SharedPreferences SharedPreferences.Editor = com.zeapo.pwdstore.git.SharedPreferences . edit ( ) ; SharedPreferences.Editor . putString ( STRING , ( ( EditText ) findViewById ( R . id . server_url ) ) . getText ( ) . toString ( ) ) ; SharedPreferences.Editor . putString ( STRING , ( ( EditText ) findViewById ( R . id . server_path ) ) . getText ( ) . toString ( ) ) ; SharedPreferences.Editor . putString ( STRING , ( ( EditText ) findViewById ( R . id . server_user ) ) . getText ( ) . toString ( ) ) ; SharedPreferences.Editor . putString ( STRING , java.lang.String ) ; SharedPreferences.Editor . putString ( STRING , java.lang.String ) ; SharedPreferences.Editor . putString ( STRING , ( ( EditText ) findViewById ( R . id . server_port ) ) . getText ( ) . toString ( ) ) ; SharedPreferences.Editor . putString ( STRING , ( ( EditText ) findViewById ( R . id . clone_uri ) ) . getText ( ) . toString ( ) ) ; java.lang.String = ( ( EditText ) findViewById ( R . id . clone_uri ) ) . getText ( ) . toString ( ) ; java.lang.String = ( ( EditText ) findViewById ( R . id . server_port ) ) . getText ( ) . toString ( ) ; java.lang.String = java.lang.String . java.lang.String ( STRING , STRING ) ; ( ( TextView ) findViewById ( R . id . clone_uri ) ) . setText ( java.lang.String ) ; if ( ! java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String + java.lang.String ; } else { if ( ! java.lang.String . boolean ( ) && ! java.lang.String . boolean ( STRING ) ) java.lang.String = java.lang.String + java.lang.String ; if ( ! java.lang.String . boolean ( STRING ) ) { new AlertDialog . AlertDialog ( this ) . setMessage ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . forget_username_dialog_text ) ) . setPositiveButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_oops ) , null ) . show ( ) ; return false ; } } if ( PasswordRepository . isInitialized ( ) ) { PasswordRepository . addRemote ( STRING , java.lang.String , true ) ; } SharedPreferences.Editor . apply ( ) ; return true ; }  <METHOD_END>
<METHOD_START> public void void ( View com.zeapo.pwdstore.git.View ) { if ( ! boolean ( ) ) return; finish ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( View com.zeapo.pwdstore.git.View ) { if ( PasswordRepository . getRepository ( null ) == null ) { PasswordRepository . initialize ( this ) ; } java.io.File = PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.git.Context ) ; if ( ! boolean ( ) ) return; if ( java.io.File . boolean ( ) && java.io.File . java.io.File[] ( ) . int != NUMBER && ! ( java.io.File . java.io.File[] ( ) . int == NUMBER && java.io.File . java.io.File[] ( ) [ NUMBER ] . java.lang.String ( ) . boolean ( STRING ) ) ) { new AlertDialog . AlertDialog ( this ) . setTitle ( R . string . dialog_delete_title ) . setMessage ( getResources ( ) . getString ( R . string . dialog_delete_msg ) + STRING + java.io.File . java.lang.String ( ) ) . setCancelable ( false ) . setPositiveButton ( R . string . dialog_delete , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { try { FileUtils . deleteDirectory ( java.io.File ) ; try { new CloneOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommand ( java.lang.String ) . executeAfterAuthentication ( java.lang.String , com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) , new java.io.File ( getFilesDir ( ) + STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.GitActivity .this ) . setMessage ( java.lang.Exception . java.lang.String ( ) ) . show ( ) ; } } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.GitActivity .this ) . setMessage ( java.io.IOException . java.lang.String ( ) ) . show ( ) ; } com.zeapo.pwdstore.git.DialogInterface . cancel ( ) ; } } ) . setNegativeButton ( R . string . dialog_do_not_delete , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { com.zeapo.pwdstore.git.DialogInterface . cancel ( ) ; } } ) . show ( ) ; } else { try { if ( java.io.File . java.io.File[] ( ) . int == NUMBER && java.io.File . java.io.File[] ( ) [ NUMBER ] . java.lang.String ( ) . boolean ( STRING ) ) { try { FileUtils . deleteDirectory ( java.io.File ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.GitActivity .this ) . setMessage ( java.io.IOException . java.lang.String ( ) ) . show ( ) ; } } new CloneOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommand ( java.lang.String ) . executeAfterAuthentication ( java.lang.String , com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) , new java.io.File ( getFilesDir ( ) + STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; new AlertDialog . AlertDialog ( this ) . setMessage ( java.lang.Exception . java.lang.String ( ) ) . show ( ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { try { FileUtils . deleteDirectory ( java.io.File ) ; try { new CloneOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommand ( java.lang.String ) . executeAfterAuthentication ( java.lang.String , com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) , new java.io.File ( getFilesDir ( ) + STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.GitActivity .this ) . setMessage ( java.lang.Exception . java.lang.String ( ) ) . show ( ) ; } } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.GitActivity .this ) . setMessage ( java.io.IOException . java.lang.String ( ) ) . show ( ) ; } com.zeapo.pwdstore.git.DialogInterface . cancel ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { com.zeapo.pwdstore.git.DialogInterface . cancel ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { if ( com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) . isEmpty ( ) || com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) . isEmpty ( ) || com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) . isEmpty ( ) ) new AlertDialog . AlertDialog ( this ) . setMessage ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . set_information_dialog_text ) ) . setPositiveButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_positive ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { Intent com.zeapo.pwdstore.git.Intent = new Intent ( com.zeapo.pwdstore.git.Activity , UserPreference .class ) ; startActivityForResult ( com.zeapo.pwdstore.git.Intent , int ) ; } } ) . setNegativeButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_negative ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { setResult ( RESULT_OK ) ; finish ( ) ; } } ) . show ( ) ; else { PasswordRepository . addRemote ( STRING , java.lang.String , false ) ; GitOperation com.zeapo.pwdstore.git.GitOperation ; switch ( int ) { case int : com.zeapo.pwdstore.git.GitOperation = new PullOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommand ( ) ; break; case int : com.zeapo.pwdstore.git.GitOperation = new PushOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommand ( ) ; break; case int : com.zeapo.pwdstore.git.GitOperation = new SyncOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommands ( ) ; break; default: Log . e ( java.lang.String , STRING + int ) ; return; } try { com.zeapo.pwdstore.git.GitOperation . executeAfterAuthentication ( java.lang.String , com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) , new java.io.File ( getFilesDir ( ) + STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { Intent com.zeapo.pwdstore.git.Intent = new Intent ( com.zeapo.pwdstore.git.Activity , UserPreference .class ) ; startActivityForResult ( com.zeapo.pwdstore.git.Intent , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { setResult ( RESULT_OK ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( int int , int int , Intent com.zeapo.pwdstore.git.Intent ) { if ( int == RESULT_CANCELED ) { setResult ( RESULT_CANCELED ) ; finish ( ) ; return; } if ( int == RESULT_OK ) { GitOperation com.zeapo.pwdstore.git.GitOperation ; switch ( int ) { case int : setResult ( RESULT_OK ) ; finish ( ) ; return; case int : com.zeapo.pwdstore.git.GitOperation = new PullOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommand ( ) ; break; case int : com.zeapo.pwdstore.git.GitOperation = new PushOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommand ( ) ; break; case GitOperation . GET_SSH_KEY_FROM_CLONE : com.zeapo.pwdstore.git.GitOperation = new CloneOperation ( java.io.File , com.zeapo.pwdstore.git.Activity ) . setCommand ( java.lang.String ) ; break; default: Log . e ( java.lang.String , STRING + int ) ; setResult ( RESULT_CANCELED ) ; finish ( ) ; return; } try { com.zeapo.pwdstore.git.GitOperation . executeAfterAuthentication ( java.lang.String , com.zeapo.pwdstore.git.SharedPreferences . getString ( STRING , STRING ) , new java.io.File ( getFilesDir ( ) + STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } } }  <METHOD_END>
<METHOD_START> public void ( Activity com.zeapo.pwdstore.git.Activity , boolean boolean , boolean boolean , GitOperation com.zeapo.pwdstore.git.GitOperation ) { this . com.zeapo.pwdstore.git.Activity = com.zeapo.pwdstore.git.Activity ; this . boolean = boolean ; this . boolean = boolean ; this . com.zeapo.pwdstore.git.GitOperation = com.zeapo.pwdstore.git.GitOperation ; com.zeapo.pwdstore.git.ProgressDialog = new ProgressDialog ( this . com.zeapo.pwdstore.git.Activity ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) { this . com.zeapo.pwdstore.git.ProgressDialog . setMessage ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . running_dialog_text ) ) ; this . com.zeapo.pwdstore.git.ProgressDialog . setCancelable ( false ) ; this . com.zeapo.pwdstore.git.ProgressDialog . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( GitCommand ... com.zeapo.pwdstore.git.GitCommand[] ) { java.lang.Integer java.lang.Integer = null ; for ( GitCommand com.zeapo.pwdstore.git.GitCommand : com.zeapo.pwdstore.git.GitCommand[] ) { try { if ( com.zeapo.pwdstore.git.GitCommand instanceof StatusCommand ) { java.lang.Integer = ( ( StatusCommand ) com.zeapo.pwdstore.git.GitCommand ) . call ( ) . getChanged ( ) . size ( ) ; } else if ( com.zeapo.pwdstore.git.GitCommand instanceof CommitCommand ) { if ( java.lang.Integer == null || java.lang.Integer > NUMBER ) com.zeapo.pwdstore.git.GitCommand . call ( ) ; } else { com.zeapo.pwdstore.git.GitCommand . call ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; return java.lang.Exception . java.lang.String ( ) + STRING + java.lang.Exception . java.lang.Throwable ( ) ; } } return STRING ; }  <METHOD_END>
<METHOD_START> protected void void ( java.lang.String java.lang.String ) { if ( this . com.zeapo.pwdstore.git.ProgressDialog != null ) try { this . com.zeapo.pwdstore.git.ProgressDialog . dismiss ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { } if ( java.lang.String == null ) java.lang.String = STRING ; if ( ! java.lang.String . boolean ( ) ) { this . com.zeapo.pwdstore.git.GitOperation . onTaskEnded ( java.lang.String ) ; } else { if ( boolean ) { this . com.zeapo.pwdstore.git.Activity . setResult ( Activity . RESULT_OK ) ; this . com.zeapo.pwdstore.git.Activity . finish ( ) ; } if ( boolean ) { try { ( ( PasswordStore ) this . com.zeapo.pwdstore.git.Activity ) . updateListAdapter ( ) ; } catch ( java.lang.ClassCastException java.lang.ClassCastException ) { } } } }  <METHOD_END>
<METHOD_START> public void ( java.io.File java.io.File , Activity com.zeapo.pwdstore.git.Activity ) { this . com.zeapo.pwdstore.git.Repository = PasswordRepository . getRepository ( java.io.File ) ; this . com.zeapo.pwdstore.git.Activity = com.zeapo.pwdstore.git.Activity ; }  <METHOD_END>
<METHOD_START> public com.zeapo.pwdstore.git.GitOperation com.zeapo.pwdstore.git.GitOperation ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { SshSessionFactory . setInstance ( new GitConfigSessionFactory ( ) ) ; this . com.zeapo.pwdstore.git.UsernamePasswordCredentialsProvider = new UsernamePasswordCredentialsProvider ( java.lang.String , java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.zeapo.pwdstore.git.GitOperation com.zeapo.pwdstore.git.GitOperation ( java.io.File java.io.File , java.lang.String java.lang.String , java.lang.String java.lang.String ) { JschConfigSessionFactory com.zeapo.pwdstore.git.JschConfigSessionFactory = new SshConfigSessionFactory ( java.io.File . java.lang.String ( ) , java.lang.String , java.lang.String ) ; SshSessionFactory . setInstance ( com.zeapo.pwdstore.git.JschConfigSessionFactory ) ; this . com.zeapo.pwdstore.git.UsernamePasswordCredentialsProvider = null ; return this ; }  <METHOD_END>
<METHOD_START> public abstract void void ( )  <METHOD_END>
<METHOD_START> public void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , @ Nullable final java.io.File java.io.File ) { void ( java.lang.String , java.lang.String , java.io.File , false ) ; }  <METHOD_END>
<METHOD_START> private void void ( final java.lang.String java.lang.String , final java.lang.String java.lang.String , @ Nullable final java.io.File java.io.File , final boolean boolean ) { if ( java.lang.String . boolean ( STRING ) ) { if ( java.io.File == null || ! java.io.File . boolean ( ) ) { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.Activity ) . setMessage ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . ssh_preferences_dialog_text ) ) . setTitle ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . ssh_preferences_dialog_title ) ) . setPositiveButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . ssh_preferences_dialog_import ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { try { Intent com.zeapo.pwdstore.git.Intent = new Intent ( com.zeapo.pwdstore.git.Activity . getApplicationContext ( ) , UserPreference .class ) ; com.zeapo.pwdstore.git.Intent . putExtra ( STRING , STRING ) ; com.zeapo.pwdstore.git.Activity . startActivityForResult ( com.zeapo.pwdstore.git.Intent , int ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; } } } ) . setNegativeButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . ssh_preferences_dialog_generate ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { try { Intent com.zeapo.pwdstore.git.Intent = new Intent ( com.zeapo.pwdstore.git.Activity . getApplicationContext ( ) , UserPreference .class ) ; com.zeapo.pwdstore.git.Intent . putExtra ( STRING , STRING ) ; com.zeapo.pwdstore.git.Activity . startActivityForResult ( com.zeapo.pwdstore.git.Intent , int ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; } } } ) . setNeutralButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_cancel ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { com.zeapo.pwdstore.git.Activity . finish ( ) ; } } ) . show ( ) ; } else { final EditText com.zeapo.pwdstore.git.EditText = new EditText ( com.zeapo.pwdstore.git.Activity ) ; com.zeapo.pwdstore.git.EditText . setHint ( STRING ) ; com.zeapo.pwdstore.git.EditText . setWidth ( LinearLayout . LayoutParams . MATCH_PARENT ) ; com.zeapo.pwdstore.git.EditText . setInputType ( InputType . TYPE_CLASS_TEXT | InputType . TYPE_TEXT_VARIATION_PASSWORD ) ; if ( boolean ) { com.zeapo.pwdstore.git.EditText . setError ( STRING ) ; } JSch com.zeapo.pwdstore.git.JSch = new JSch ( ) ; try { final KeyPair com.zeapo.pwdstore.git.KeyPair = KeyPair . load ( com.zeapo.pwdstore.git.JSch , com.zeapo.pwdstore.git.Activity . getFilesDir ( ) + STRING ) ; if ( com.zeapo.pwdstore.git.KeyPair . isEncrypted ( ) ) { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.Activity ) . setTitle ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . passphrase_dialog_title ) ) . setMessage ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . passphrase_dialog_text ) ) . setView ( com.zeapo.pwdstore.git.EditText ) . setPositiveButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { if ( com.zeapo.pwdstore.git.KeyPair . decrypt ( com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) ) { com.zeapo.pwdstore.git.GitOperation ( java.io.File , java.lang.String , com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) . execute ( ) ; } else { void ( java.lang.String , java.lang.String , java.io.File , true ) ; } } } ) . setNegativeButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_cancel ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { } } ) . show ( ) ; } else { com.zeapo.pwdstore.git.GitOperation ( java.io.File , java.lang.String , STRING ) . void ( ) ; } } catch ( JSchException com.zeapo.pwdstore.git.JSchException ) { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.Activity ) . setTitle ( STRING ) . setMessage ( STRING ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) {                                } } ) . show ( ) ; } } } else { final EditText com.zeapo.pwdstore.git.EditText = new EditText ( com.zeapo.pwdstore.git.Activity ) ; com.zeapo.pwdstore.git.EditText . setHint ( STRING ) ; com.zeapo.pwdstore.git.EditText . setWidth ( LinearLayout . LayoutParams . MATCH_PARENT ) ; com.zeapo.pwdstore.git.EditText . setInputType ( InputType . TYPE_CLASS_TEXT | InputType . TYPE_TEXT_VARIATION_PASSWORD ) ; new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.Activity ) . setTitle ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . passphrase_dialog_title ) ) . setMessage ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . password_dialog_text ) ) . setView ( com.zeapo.pwdstore.git.EditText ) . setPositiveButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { com.zeapo.pwdstore.git.GitOperation ( java.lang.String , com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) . execute ( ) ; } } ) . setNegativeButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_cancel ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { } } ) . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { try { Intent com.zeapo.pwdstore.git.Intent = new Intent ( com.zeapo.pwdstore.git.Activity . getApplicationContext ( ) , UserPreference .class ) ; com.zeapo.pwdstore.git.Intent . putExtra ( STRING , STRING ) ; com.zeapo.pwdstore.git.Activity . startActivityForResult ( com.zeapo.pwdstore.git.Intent , int ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { try { Intent com.zeapo.pwdstore.git.Intent = new Intent ( com.zeapo.pwdstore.git.Activity . getApplicationContext ( ) , UserPreference .class ) ; com.zeapo.pwdstore.git.Intent . putExtra ( STRING , STRING ) ; com.zeapo.pwdstore.git.Activity . startActivityForResult ( com.zeapo.pwdstore.git.Intent , int ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { com.zeapo.pwdstore.git.Activity . finish ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { if ( com.zeapo.pwdstore.git.KeyPair . decrypt ( com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) ) { com.zeapo.pwdstore.git.GitOperation ( java.io.File , java.lang.String , com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) . execute ( ) ; } else { void ( java.lang.String , java.lang.String , java.io.File , true ) ; } }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) {                                }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { com.zeapo.pwdstore.git.GitOperation ( java.lang.String , com.zeapo.pwdstore.git.EditText . getText ( ) . toString ( ) ) . execute ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.git.Activity ) . setTitle ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . jgit_error_dialog_title ) ) . setMessage ( STRING + com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . jgit_error_dialog_text ) + java.lang.String + STRING ) . setPositiveButton ( com.zeapo.pwdstore.git.Activity . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { com.zeapo.pwdstore.git.Activity . setResult ( Activity . RESULT_CANCELED ) ; com.zeapo.pwdstore.git.Activity . finish ( ) ; } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { com.zeapo.pwdstore.git.Activity . setResult ( Activity . RESULT_CANCELED ) ; com.zeapo.pwdstore.git.Activity . finish ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.io.File java.io.File , Activity com.zeapo.pwdstore.git.Activity ) { super( java.io.File , com.zeapo.pwdstore.git.Activity ); }  <METHOD_END>
<METHOD_START> public com.zeapo.pwdstore.git.PullOperation com.zeapo.pwdstore.git.PullOperation ( ) { this . command = new Git ( repository ) . pull ( ) . setRebase ( true ) . setRemote ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . provider != null ) { ( ( PullCommand ) this . command ) . setCredentialsProvider ( this . provider ) ; } new GitAsyncTask ( callingActivity , true , false , this ) . execute ( this . command ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { new AlertDialog . AlertDialog ( callingActivity ) . setTitle ( callingActivity . getResources ( ) . getString ( R . string . jgit_error_dialog_title ) ) . setMessage ( STRING + callingActivity . getResources ( ) . getString ( R . string . jgit_error_dialog_text ) + java.lang.String + STRING ) . setPositiveButton ( callingActivity . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { callingActivity . finish ( ) ; } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { callingActivity . finish ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.io.File java.io.File , Activity com.zeapo.pwdstore.git.Activity ) { super( java.io.File , com.zeapo.pwdstore.git.Activity ); }  <METHOD_END>
<METHOD_START> public com.zeapo.pwdstore.git.PushOperation com.zeapo.pwdstore.git.PushOperation ( ) { this . command = new Git ( repository ) . push ( ) . setPushAll ( ) . setRemote ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . provider != null ) { ( ( PushCommand ) this . command ) . setCredentialsProvider ( this . provider ) ; } new GitAsyncTask ( callingActivity , true , false , this ) . execute ( this . command ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { new AlertDialog . AlertDialog ( callingActivity ) . setTitle ( callingActivity . getResources ( ) . getString ( R . string . jgit_error_dialog_title ) ) . setMessage ( STRING + callingActivity . getResources ( ) . getString ( R . string . jgit_error_dialog_text ) + java.lang.String + STRING ) . setPositiveButton ( callingActivity . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { callingActivity . finish ( ) ; } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { callingActivity . finish ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.io.File java.io.File , Activity com.zeapo.pwdstore.git.Activity ) { super( java.io.File , com.zeapo.pwdstore.git.Activity ); }  <METHOD_END>
<METHOD_START> public com.zeapo.pwdstore.git.SyncOperation com.zeapo.pwdstore.git.SyncOperation ( ) { Git com.zeapo.pwdstore.git.Git = new Git ( repository ) ; this . com.zeapo.pwdstore.git.AddCommand = com.zeapo.pwdstore.git.Git . add ( ) . setUpdate ( true ) . addFilepattern ( STRING ) ; this . com.zeapo.pwdstore.git.StatusCommand = com.zeapo.pwdstore.git.Git . status ( ) ; this . com.zeapo.pwdstore.git.CommitCommand = com.zeapo.pwdstore.git.Git . commit ( ) . setMessage ( STRING ) ; this . com.zeapo.pwdstore.git.PullCommand = com.zeapo.pwdstore.git.Git . pull ( ) . setRebase ( true ) . setRemote ( STRING ) ; this . com.zeapo.pwdstore.git.PushCommand = com.zeapo.pwdstore.git.Git . push ( ) . setPushAll ( ) . setRemote ( STRING ) ; return this ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( this . provider != null ) { this . com.zeapo.pwdstore.git.PullCommand . setCredentialsProvider ( this . provider ) ; this . com.zeapo.pwdstore.git.PushCommand . setCredentialsProvider ( this . provider ) ; } new GitAsyncTask ( callingActivity , true , false , this ) . execute ( this . com.zeapo.pwdstore.git.AddCommand , this . com.zeapo.pwdstore.git.StatusCommand , this . com.zeapo.pwdstore.git.CommitCommand , this . com.zeapo.pwdstore.git.PullCommand , this . com.zeapo.pwdstore.git.PushCommand ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String ) { new AlertDialog . AlertDialog ( callingActivity ) . setTitle ( callingActivity . getResources ( ) . getString ( R . string . jgit_error_dialog_title ) ) . setMessage ( STRING + callingActivity . getResources ( ) . getString ( R . string . jgit_error_dialog_text ) + java.lang.String + STRING ) . setPositiveButton ( callingActivity . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { callingActivity . finish ( ) ; } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.git.DialogInterface , int int ) { callingActivity . finish ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem );  <METHOD_END>
<METHOD_START> public void ( ) {   }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.zeapo.pwdstore.Bundle ) { super. onCreate ( com.zeapo.pwdstore.Bundle ) ; java.lang.String java.lang.String = getArguments ( ) . getString ( STRING ) ; com.zeapo.pwdstore.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( getActivity ( ) ) ; java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> = new java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> < java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> < PasswordItem > > ( ) ; java.util.Stack<java.lang.Integer> = new java.util.Stack<java.lang.Integer> < java.lang.Integer > ( ) ; java.util.Stack<java.io.File> = new java.util.Stack<java.io.File> < java.io.File > ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter = new PasswordRecyclerAdapter ( ( PasswordStore ) getActivity ( ) , com.zeapo.pwdstore.PasswordFragment.OnFragmentInteractionListener , PasswordRepository . getPasswords ( new java.io.File ( java.lang.String ) , PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.View com.zeapo.pwdstore.View ( LayoutInflater com.zeapo.pwdstore.LayoutInflater , ViewGroup com.zeapo.pwdstore.ViewGroup , Bundle com.zeapo.pwdstore.Bundle ) { View com.zeapo.pwdstore.View = com.zeapo.pwdstore.LayoutInflater . inflate ( R . layout . password_recycler_view , com.zeapo.pwdstore.ViewGroup , false ) ; RecyclerView.LayoutManager = new LinearLayoutManager ( getActivity ( ) ) ; com.zeapo.pwdstore.RecyclerView = ( RecyclerView ) com.zeapo.pwdstore.View . findViewById ( R . id . pass_recycler ) ; com.zeapo.pwdstore.RecyclerView . setLayoutManager ( RecyclerView.LayoutManager ) ; com.zeapo.pwdstore.RecyclerView . addItemDecoration ( new DividerItemDecoration ( getActivity ( ) , R . drawable . divider ) ) ; com.zeapo.pwdstore.RecyclerView . setAdapter ( com.zeapo.pwdstore.PasswordRecyclerAdapter ) ; final FloatingActionButton com.zeapo.pwdstore.FloatingActionButton = ( FloatingActionButton ) com.zeapo.pwdstore.View . findViewById ( R . id . fab ) ; com.zeapo.pwdstore.FloatingActionButton . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ( ( PasswordStore ) getActivity ( ) ) . createPassword ( ) ; } } ) ; registerForContextMenu ( com.zeapo.pwdstore.RecyclerView ) ; return com.zeapo.pwdstore.View ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ( ( PasswordStore ) getActivity ( ) ) . createPassword ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Context com.zeapo.pwdstore.Context ) { super. onAttach ( com.zeapo.pwdstore.Context ) ; try { com.zeapo.pwdstore.PasswordFragment.OnFragmentInteractionListener = new com.zeapo.pwdstore.PasswordFragment.OnFragmentInteractionListener ( ) { public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem ) { if ( com.zeapo.pwdstore.PasswordItem . getType ( ) == PasswordItem . TYPE_CATEGORY ) { java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . push ( java.util.Stack<java.io.File> . boolean ( ) ? PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) : PasswordRepository . getPasswords ( java.util.Stack<java.io.File> . java.io.File ( ) , PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) ) ; java.util.Stack<java.io.File> . java.io.File ( com.zeapo.pwdstore.PasswordItem . getFile ( ) ) ; java.util.Stack<java.lang.Integer> . java.lang.Integer ( com.zeapo.pwdstore.RecyclerView . getVerticalScrollbarPosition ( ) ) ; com.zeapo.pwdstore.RecyclerView . scrollToPosition ( NUMBER ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . addAll ( PasswordRepository . getPasswords ( com.zeapo.pwdstore.PasswordItem . getFile ( ) , PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; } else { if ( getArguments ( ) . getBoolean ( STRING , false ) ) { ( ( PasswordStore ) getActivity ( ) ) . matchPasswordWithApp ( com.zeapo.pwdstore.PasswordItem ) ; } else { ( ( PasswordStore ) getActivity ( ) ) . decryptPassword ( com.zeapo.pwdstore.PasswordItem ) ; } } } public void void ( java.lang.Integer java.lang.Integer ) {                } } ; } catch ( java.lang.ClassCastException java.lang.ClassCastException ) { throw new java.lang.ClassCastException ( com.zeapo.pwdstore.Context . toString ( ) + STRING ) ; } }  <METHOD_END>
<METHOD_START> public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem ) { if ( com.zeapo.pwdstore.PasswordItem . getType ( ) == PasswordItem . TYPE_CATEGORY ) { java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . push ( java.util.Stack<java.io.File> . boolean ( ) ? PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) : PasswordRepository . getPasswords ( java.util.Stack<java.io.File> . java.io.File ( ) , PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) ) ; java.util.Stack<java.io.File> . java.io.File ( com.zeapo.pwdstore.PasswordItem . getFile ( ) ) ; java.util.Stack<java.lang.Integer> . java.lang.Integer ( com.zeapo.pwdstore.RecyclerView . getVerticalScrollbarPosition ( ) ) ; com.zeapo.pwdstore.RecyclerView . scrollToPosition ( NUMBER ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . addAll ( PasswordRepository . getPasswords ( com.zeapo.pwdstore.PasswordItem . getFile ( ) , PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; } else { if ( getArguments ( ) . getBoolean ( STRING , false ) ) { ( ( PasswordStore ) getActivity ( ) ) . matchPasswordWithApp ( com.zeapo.pwdstore.PasswordItem ) ; } else { ( ( PasswordStore ) getActivity ( ) ) . decryptPassword ( com.zeapo.pwdstore.PasswordItem ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) {                }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . clear ( ) ; java.util.Stack<java.io.File> . void ( ) ; java.util.Stack<java.lang.Integer> . void ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . addAll ( PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( false ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.zeapo.pwdstore.PasswordRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . addAll ( java.util.Stack<java.io.File> . boolean ( ) ? PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) : PasswordRepository . getPasswords ( java.util.Stack<java.io.File> . java.io.File ( ) , PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Log . d ( STRING , STRING + java.lang.String ) ; if ( java.lang.String . boolean ( ) ) { void ( ) ; } else { void ( java.lang.String , java.util.Stack<java.io.File> . boolean ( ) ? null : java.util.Stack<java.io.File> . java.io.File ( ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.io.File java.io.File ) { java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> = java.io.File == null ? PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) : PasswordRepository . getPasswords ( java.io.File , PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) ; boolean boolean = com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , true ) ; for ( PasswordItem com.zeapo.pwdstore.PasswordItem : java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> ) { if ( com.zeapo.pwdstore.PasswordItem . getType ( ) == PasswordItem . TYPE_CATEGORY && boolean ) { void ( java.lang.String , com.zeapo.pwdstore.PasswordItem . getFile ( ) ) ; } boolean boolean = com.zeapo.pwdstore.PasswordItem . toString ( ) . toLowerCase ( ) . contains ( java.lang.String . java.lang.String ( ) ) ; boolean boolean = com.zeapo.pwdstore.PasswordRecyclerAdapter . getValues ( ) . contains ( com.zeapo.pwdstore.PasswordItem ) ; if ( boolean && ! boolean ) { com.zeapo.pwdstore.PasswordRecyclerAdapter . add ( com.zeapo.pwdstore.PasswordItem ) ; } else if ( ! boolean && boolean ) { com.zeapo.pwdstore.PasswordRecyclerAdapter . remove ( com.zeapo.pwdstore.PasswordRecyclerAdapter . getValues ( ) . indexOf ( com.zeapo.pwdstore.PasswordItem ) ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . isEmpty ( ) ) return; com.zeapo.pwdstore.RecyclerView . scrollToPosition ( java.util.Stack<java.lang.Integer> . java.lang.Integer ( ) ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . addAll ( java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . pop ( ) ) ; java.util.Stack<java.io.File> . java.io.File ( ) ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { if ( java.util.Stack<java.io.File> . boolean ( ) ) return PasswordRepository . getRepositoryDirectory ( getActivity ( ) . getApplicationContext ( ) ) ; else return java.util.Stack<java.io.File> . java.io.File ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.zeapo.pwdstore.Bundle ) { com.zeapo.pwdstore.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( this . getApplicationContext ( ) ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . N_MR1 ) com.zeapo.pwdstore.ShortcutManager = getSystemService ( ShortcutManager .class ) ; com.zeapo.pwdstore.Activity = this ; PRNGFixes . apply ( ) ; if ( com.zeapo.pwdstore.Bundle != null && ( ! com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) || ContextCompat . checkSelfPermission ( com.zeapo.pwdstore.Activity , Manifest . permission . READ_EXTERNAL_STORAGE ) != PackageManager . PERMISSION_GRANTED ) ) { com.zeapo.pwdstore.Bundle = null ; } super. onCreate ( com.zeapo.pwdstore.Bundle ) ; setContentView ( R . layout . activity_pwdstore ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; if ( com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) { if ( ContextCompat . checkSelfPermission ( com.zeapo.pwdstore.Activity , Manifest . permission . READ_EXTERNAL_STORAGE ) != PackageManager . PERMISSION_GRANTED ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( com.zeapo.pwdstore.Activity , Manifest . permission . READ_EXTERNAL_STORAGE ) ) { Snackbar com.zeapo.pwdstore.Snackbar = Snackbar . make ( findViewById ( R . id . main_layout ) , STRING , Snackbar . LENGTH_INDEFINITE ) . setAction ( R . string . dialog_ok , new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . READ_EXTERNAL_STORAGE } , int ) ; } } ) ; com.zeapo.pwdstore.Snackbar . show ( ) ; View com.zeapo.pwdstore.View = com.zeapo.pwdstore.Snackbar . getView ( ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( android . support . design . R . id . snackbar_text ) ; com.zeapo.pwdstore.TextView . setTextColor ( Color . WHITE ) ; com.zeapo.pwdstore.TextView . setMaxLines ( NUMBER ) ; } else { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . READ_EXTERNAL_STORAGE } , int ) ; } } else { void ( ) ; } } else { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . READ_EXTERNAL_STORAGE } , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , java.lang.String java.lang.String[] [] , int [] int[] ) { switch ( int ) { case int : { if ( int[] . int > NUMBER && int[] [ NUMBER ] == PackageManager . PERMISSION_GRANTED ) { void ( ) ; } } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Menu com.zeapo.pwdstore.Menu ) { getMenuInflater ( ) . inflate ( R . menu . main_menu , com.zeapo.pwdstore.Menu ) ; MenuItem com.zeapo.pwdstore.MenuItem = com.zeapo.pwdstore.Menu . findItem ( R . id . action_search ) ; SearchView com.zeapo.pwdstore.SearchView = ( SearchView ) MenuItemCompat . getActionView ( com.zeapo.pwdstore.MenuItem ) ; com.zeapo.pwdstore.SearchView . setOnQueryTextListener ( new SearchView . SearchView ( ) { @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return true ; } @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; return true ; } } ) ; MenuItemCompat . setOnActionExpandListener ( com.zeapo.pwdstore.MenuItem , new MenuItemCompat . MenuItemCompat ( ) { @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.MenuItem ) { void ( ) ; return true ; } @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.MenuItem ) { return true ; } } ) ; return super. onCreateOptionsMenu ( com.zeapo.pwdstore.Menu ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.MenuItem ) { void ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.MenuItem ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.MenuItem ) { int int = com.zeapo.pwdstore.MenuItem . getItemId ( ) ; Intent com.zeapo.pwdstore.Intent ; Log . d ( STRING , STRING + int + STRING ) ; AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( this ) . setMessage ( this . getResources ( ) . getString ( R . string . creation_dialog_text ) ) . setPositiveButton ( this . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) {                    } } ) ; switch ( int ) { case R . id . user_pref : try { com.zeapo.pwdstore.Intent = new Intent ( this , UserPreference .class ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; } return true ; case R . id . git_push : if ( ! PasswordRepository . isInitialized ( ) ) { AlertDialog.Builder . show ( ) ; break; } com.zeapo.pwdstore.Intent = new Intent ( this , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_PUSH ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_PUSH ) ; return true ; case R . id . git_pull : if ( ! PasswordRepository . isInitialized ( ) ) { AlertDialog.Builder . show ( ) ; break; } com.zeapo.pwdstore.Intent = new Intent ( this , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_PULL ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_PULL ) ; return true ; case R . id . git_sync : if ( ! PasswordRepository . isInitialized ( ) ) { AlertDialog.Builder . show ( ) ; break; } com.zeapo.pwdstore.Intent = new Intent ( this , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_SYNC ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_SYNC ) ; return true ; case R . id . refresh : void ( ) ; return true ; case android . R . id . home : Log . d ( STRING , STRING ) ; this . void ( ) ; break; default: break; } return super. onOptionsItemSelected ( com.zeapo.pwdstore.MenuItem ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) {                    }  <METHOD_END>
<METHOD_START> public void void ( View com.zeapo.pwdstore.View ) { Intent com.zeapo.pwdstore.Intent ; try { com.zeapo.pwdstore.Intent = new Intent ( this , UserPreference .class ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( View com.zeapo.pwdstore.View ) { void ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( View com.zeapo.pwdstore.View ) { void ( int ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( ! PasswordRepository . isInitialized ( ) ) { PasswordRepository . initialize ( this ) ; } java.io.File java.io.File = PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) ; java.io.File . boolean ( ) ; try { PasswordRepository . createRepository ( java.io.File ) ; new java.io.File ( java.io.File . java.lang.String ( ) + STRING ) . boolean ( ) ; com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , true ) . apply ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; java.io.File . boolean ( ) ; return; } void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) && com.zeapo.pwdstore.SharedPreferences . getString ( STRING , null ) != null ) { java.io.File java.io.File = new java.io.File ( com.zeapo.pwdstore.SharedPreferences . getString ( STRING , null ) ) ; if ( java.io.File . boolean ( ) && java.io.File . boolean ( ) && ! FileUtils . listFiles ( java.io.File , null , true ) . isEmpty ( ) && ! PasswordRepository . getPasswords ( java.io.File , PasswordRepository . getRepositoryDirectory ( this ) ) . isEmpty ( ) ) { PasswordRepository . closeRepository ( ) ; void ( ) ; return; } } final java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = com.zeapo.pwdstore.SharedPreferences . getStringSet ( STRING , new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ) ; if ( java.util.Set<java.lang.String> . boolean ( ) ) new AlertDialog . AlertDialog ( this ) . setMessage ( this . getResources ( ) . getString ( R . string . key_dialog_text ) ) . setPositiveButton ( this . getResources ( ) . getString ( R . string . dialog_positive ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_INIT ) ; } } ) . setNegativeButton ( this . getResources ( ) . getString ( R . string . dialog_negative ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { } } ) . show ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_INIT ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { }  <METHOD_END>
<METHOD_START> private void void ( ) { Repository com.zeapo.pwdstore.Repository = PasswordRepository . initialize ( this ) ; if ( com.zeapo.pwdstore.Repository == null ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; } else { void ( PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.io.File java.io.File ) { FragmentManager com.zeapo.pwdstore.FragmentManager = getSupportFragmentManager ( ) ; FragmentTransaction com.zeapo.pwdstore.FragmentTransaction = com.zeapo.pwdstore.FragmentManager . beginTransaction ( ) ; if ( java.io.File != null && com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) { Log . d ( STRING , STRING + java.io.File . java.lang.String ( ) ) ; if ( com.zeapo.pwdstore.FragmentManager . findFragmentByTag ( STRING ) == null || com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) { com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , false ) . apply ( ) ; com.zeapo.pwdstore.PasswordFragment = new PasswordFragment ( ) ; Bundle com.zeapo.pwdstore.Bundle = new Bundle ( ) ; com.zeapo.pwdstore.Bundle . putString ( STRING , PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) . getAbsolutePath ( ) ) ; if ( getIntent ( ) . getBooleanExtra ( STRING , false ) ) { com.zeapo.pwdstore.Bundle . putBoolean ( STRING , true ) ; } com.zeapo.pwdstore.PasswordFragment . setArguments ( com.zeapo.pwdstore.Bundle ) ; getSupportActionBar ( ) . show ( ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( false ) ; com.zeapo.pwdstore.FragmentManager . popBackStack ( null , FragmentManager . POP_BACK_STACK_INCLUSIVE ) ; com.zeapo.pwdstore.FragmentTransaction . replace ( R . id . main_layout , com.zeapo.pwdstore.PasswordFragment , STRING ) ; com.zeapo.pwdstore.FragmentTransaction . commit ( ) ; } } else { getSupportActionBar ( ) . hide ( ) ; com.zeapo.pwdstore.FragmentManager . popBackStack ( null , FragmentManager . POP_BACK_STACK_INCLUSIVE ) ; ToCloneOrNot com.zeapo.pwdstore.ToCloneOrNot = new ToCloneOrNot ( ) ; com.zeapo.pwdstore.FragmentTransaction . replace ( R . id . main_layout , com.zeapo.pwdstore.ToCloneOrNot , STRING ) ; com.zeapo.pwdstore.FragmentTransaction . commit ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { if ( ( null != com.zeapo.pwdstore.PasswordFragment ) && com.zeapo.pwdstore.PasswordFragment . isNotEmpty ( ) ) { com.zeapo.pwdstore.PasswordFragment . popBack ( ) ; } else { super. onBackPressed ( ) ; } if ( null != com.zeapo.pwdstore.PasswordFragment && ! com.zeapo.pwdstore.PasswordFragment . isNotEmpty ( ) ) { getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( false ) ; } }  <METHOD_END>
<METHOD_START> public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem ) { Intent com.zeapo.pwdstore.Intent = new Intent ( this , PgpHandler .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , com.zeapo.pwdstore.PasswordItem . toString ( ) ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , com.zeapo.pwdstore.PasswordItem . getFile ( ) . getAbsolutePath ( ) ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . N_MR1 ) { ShortcutInfo com.zeapo.pwdstore.ShortcutInfo = new ShortcutInfo . ShortcutInfo ( this , com.zeapo.pwdstore.PasswordItem . getFullPathToParent ( ) ) . setShortLabel ( com.zeapo.pwdstore.PasswordItem . toString ( ) ) . setLongLabel ( com.zeapo.pwdstore.PasswordItem . getFullPathToParent ( ) + com.zeapo.pwdstore.PasswordItem . toString ( ) ) . setIcon ( Icon . createWithResource ( this , R . drawable . ic_launcher ) ) . setIntent ( com.zeapo.pwdstore.Intent . setAction ( STRING ) ) . build ( ) ; com.zeapo.pwdstore.ShortcutManager . addDynamicShortcuts ( java.util.Arrays . java.util.List ( com.zeapo.pwdstore.ShortcutInfo ) ) ; } startActivityForResult ( com.zeapo.pwdstore.Intent , PgpHandler . REQUEST_CODE_DECRYPT_AND_VERIFY ) ; }  <METHOD_END>
<METHOD_START> public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem ) { Intent com.zeapo.pwdstore.Intent = new Intent ( this , PgpHandler .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , com.zeapo.pwdstore.PasswordItem . toString ( ) ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , com.zeapo.pwdstore.PasswordItem . getFile ( ) . getAbsolutePath ( ) ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , PgpHandler . REQUEST_CODE_EDIT ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( ! PasswordRepository . isInitialized ( ) ) { new AlertDialog . AlertDialog ( this ) . setMessage ( this . getResources ( ) . getString ( R . string . creation_dialog_text ) ) . setPositiveButton ( this . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) {                        } } ) . show ( ) ; return; } if ( com.zeapo.pwdstore.SharedPreferences . getStringSet ( STRING , new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ) . isEmpty ( ) ) { new AlertDialog . AlertDialog ( this ) . setTitle ( STRING ) . setMessage ( STRING ) . setPositiveButton ( this . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; } } ) . show ( ) ; return; } this . java.io.File = java.io.File ( ) ; Log . i ( STRING , STRING + this . java.io.File . java.lang.String ( ) ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( this , PgpHandler .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , java.io.File ( ) . java.lang.String ( ) ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , PgpHandler . REQUEST_CODE_ENCRYPT ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) {                        }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; }  <METHOD_END>
<METHOD_START> public void void ( final PasswordRecyclerAdapter com.zeapo.pwdstore.PasswordRecyclerAdapter , final java.util.Set<java.lang.Integer> < java.lang.Integer > java.util.Set<java.lang.Integer> ) { final java.util.Iterator java.util.Iterator = java.util.Set<java.lang.Integer> . java.util.Iterator<java.lang.Integer> ( ) ; if ( ! java.util.Iterator . boolean ( ) ) { return; } final int int = ( int ) java.util.Iterator . java.lang.Object ( ) ; final PasswordItem com.zeapo.pwdstore.PasswordItem = com.zeapo.pwdstore.PasswordRecyclerAdapter . getValues ( ) . get ( int ) ; new AlertDialog . AlertDialog ( this ) . setMessage ( this . getResources ( ) . getString ( R . string . delete_dialog_text ) + com.zeapo.pwdstore.PasswordItem + STRING ) . setPositiveButton ( this . getResources ( ) . getString ( R . string . dialog_yes ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { com.zeapo.pwdstore.PasswordItem . getFile ( ) . delete ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . remove ( int ) ; java.util.Iterator . void ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . updateSelectedItems ( int , java.util.Set<java.lang.Integer> ) ; void ( STRING + com.zeapo.pwdstore.PasswordItem + STRING ) ; void ( com.zeapo.pwdstore.PasswordRecyclerAdapter , java.util.Set<java.lang.Integer> ) ; } } ) . setNegativeButton ( this . getResources ( ) . getString ( R . string . dialog_no ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { java.util.Iterator . void ( ) ; void ( com.zeapo.pwdstore.PasswordRecyclerAdapter , java.util.Set<java.lang.Integer> ) ; } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { com.zeapo.pwdstore.PasswordItem . getFile ( ) . delete ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . remove ( int ) ; java.util.Iterator . void ( ) ; com.zeapo.pwdstore.PasswordRecyclerAdapter . updateSelectedItems ( int , java.util.Set<java.lang.Integer> ) ; void ( STRING + com.zeapo.pwdstore.PasswordItem + STRING ) ; void ( com.zeapo.pwdstore.PasswordRecyclerAdapter , java.util.Set<java.lang.Integer> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { java.util.Iterator . void ( ) ; void ( com.zeapo.pwdstore.PasswordRecyclerAdapter , java.util.Set<java.lang.Integer> ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> ) { Intent com.zeapo.pwdstore.Intent = new Intent ( this , PgpHandler .class ) ; java.util.ArrayList<java.lang.String> < java.lang.String > java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; for ( PasswordItem com.zeapo.pwdstore.PasswordItem : java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> ) { java.util.ArrayList<java.lang.String> . boolean ( com.zeapo.pwdstore.PasswordItem . getFile ( ) . getAbsolutePath ( ) ) ; } com.zeapo.pwdstore.Intent . putExtra ( STRING , java.util.ArrayList<java.lang.String> ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , PgpHandler . REQUEST_CODE_SELECT_FOLDER ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( ( null != com.zeapo.pwdstore.PasswordFragment ) ) { com.zeapo.pwdstore.PasswordFragment . updateAdapter ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( ( null != com.zeapo.pwdstore.PasswordFragment ) ) { com.zeapo.pwdstore.PasswordFragment . refreshAdapter ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { if ( ( null != com.zeapo.pwdstore.PasswordFragment ) ) { com.zeapo.pwdstore.PasswordFragment . filterAdapter ( java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private java.io.File java.io.File ( ) { if ( ( null != com.zeapo.pwdstore.PasswordFragment ) ) { return com.zeapo.pwdstore.PasswordFragment . getCurrentDir ( ) ; } return PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( final java.lang.String java.lang.String ) { new GitOperation ( PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Activity ) , com.zeapo.pwdstore.Activity ) { @ java.lang.Override public void void ( ) { Log . d ( java.lang.String , STRING + java.lang.String ) ; Git com.zeapo.pwdstore.Git = new Git ( this . repository ) ; GitAsyncTask com.zeapo.pwdstore.GitAsyncTask = new GitAsyncTask ( com.zeapo.pwdstore.Activity , false , true , this ) ; com.zeapo.pwdstore.GitAsyncTask . execute ( com.zeapo.pwdstore.Git . add ( ) . setUpdate ( true ) . addFilepattern ( STRING ) , com.zeapo.pwdstore.Git . commit ( ) . setMessage ( java.lang.String ) ) ; } } . void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Log . d ( java.lang.String , STRING + java.lang.String ) ; Git com.zeapo.pwdstore.Git = new Git ( this . repository ) ; GitAsyncTask com.zeapo.pwdstore.GitAsyncTask = new GitAsyncTask ( com.zeapo.pwdstore.Activity , false , true , this ) ; com.zeapo.pwdstore.GitAsyncTask . execute ( com.zeapo.pwdstore.Git . add ( ) . setUpdate ( true ) . addFilepattern ( STRING ) , com.zeapo.pwdstore.Git . commit ( ) . setMessage ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> protected void void ( int int , int int , Intent com.zeapo.pwdstore.Intent ) { if ( int == RESULT_OK ) { switch ( int ) { case GitActivity . REQUEST_CLONE : com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , true ) . apply ( ) ; break; case PgpHandler . REQUEST_CODE_DECRYPT_AND_VERIFY : if ( com.zeapo.pwdstore.Intent . getBooleanExtra ( STRING , false ) ) { void ( this . getResources ( ) . getString ( R . string . edit_commit_text ) + com.zeapo.pwdstore.Intent . getExtras ( ) . getString ( STRING ) ) ; void ( ) ; } break; case PgpHandler . REQUEST_CODE_ENCRYPT : void ( this . getResources ( ) . getString ( R . string . add_commit_text ) + com.zeapo.pwdstore.Intent . getExtras ( ) . getString ( STRING ) + this . getResources ( ) . getString ( R . string . from_store ) ) ; void ( ) ; break; case PgpHandler . REQUEST_CODE_EDIT : void ( this . getResources ( ) . getString ( R . string . edit_commit_text ) + com.zeapo.pwdstore.Intent . getExtras ( ) . getString ( STRING ) ) ; void ( ) ; break; case GitActivity . REQUEST_INIT : void ( ) ; break; case GitActivity . REQUEST_SYNC : case GitActivity . REQUEST_PULL : void ( ) ; break; case int : void ( ) ; break; case int : void ( ) ; break; case int : if ( com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) && com.zeapo.pwdstore.SharedPreferences . getString ( STRING , null ) != null ) { java.lang.String java.lang.String = com.zeapo.pwdstore.SharedPreferences . getString ( STRING , null ) ; java.io.File java.io.File = java.lang.String != null ? new java.io.File ( java.lang.String ) : null ; if ( java.io.File != null && java.io.File . boolean ( ) && java.io.File . boolean ( ) && ! FileUtils . listFiles ( java.io.File , null , true ) . isEmpty ( ) && ! PasswordRepository . getPasswords ( java.io.File , PasswordRepository . getRepositoryDirectory ( this ) ) . isEmpty ( ) ) { PasswordRepository . closeRepository ( ) ; void ( ) ; return; } } Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_CLONE ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_CLONE ) ; break; case PgpHandler . REQUEST_CODE_SELECT_FOLDER : Log . d ( STRING , STRING + com.zeapo.pwdstore.Intent . getStringExtra ( STRING ) ) ; Log . d ( STRING , TextUtils . join ( STRING , com.zeapo.pwdstore.Intent . getStringArrayListExtra ( STRING ) ) ) ; java.io.File java.io.File = new java.io.File ( com.zeapo.pwdstore.Intent . getStringExtra ( STRING ) ) ; if ( ! java.io.File . boolean ( ) ) { Log . e ( STRING , STRING ) ; break; } for ( java.lang.String java.lang.String : com.zeapo.pwdstore.Intent . getStringArrayListExtra ( STRING ) ) { java.io.File java.io.File = new java.io.File ( java.lang.String ) ; if ( ! java.io.File . boolean ( ) ) { Log . e ( STRING , STRING ) ; continue; } if ( ! java.io.File . boolean ( new java.io.File ( java.io.File . java.lang.String ( ) + STRING + java.io.File . java.lang.String ( ) ) ) ) { Log . e ( STRING , STRING ) ; } else { void ( STRING + java.lang.String . java.lang.String ( PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) + STRING , STRING ) + STRING + java.io.File . java.lang.String ( ) . java.lang.String ( PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) + STRING , STRING ) + java.io.File . java.lang.String ( ) + STRING + java.io.File . java.lang.String ( ) + STRING ) ; } } void ( ) ; break; } } }  <METHOD_END>
<METHOD_START> protected void void ( final int int ) { PasswordRepository . closeRepository ( ) ; new AlertDialog . AlertDialog ( this ) . setTitle ( STRING ) . setMessage ( STRING ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , false ) . apply ( ) ; switch ( int ) { case int : void ( ) ; break; case int : PasswordRepository . initialize ( com.zeapo.pwdstore.PasswordStore .this ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_CLONE ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_CLONE ) ; break; } } } ) . setNegativeButton ( STRING , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , true ) . apply ( ) ; if ( com.zeapo.pwdstore.SharedPreferences . getString ( STRING , null ) == null ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; } else { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.Activity ) . setTitle ( STRING ) . setMessage ( STRING + com.zeapo.pwdstore.SharedPreferences . getString ( STRING , null ) + STRING ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { switch ( int ) { case int : void ( ) ; break; case int : PasswordRepository . initialize ( com.zeapo.pwdstore.PasswordStore .this ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_CLONE ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_CLONE ) ; break; } } } ) . setNegativeButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; } } ) . show ( ) ; } } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , false ) . apply ( ) ; switch ( int ) { case int : void ( ) ; break; case int : PasswordRepository . initialize ( com.zeapo.pwdstore.PasswordStore .this ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_CLONE ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_CLONE ) ; break; } }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , true ) . apply ( ) ; if ( com.zeapo.pwdstore.SharedPreferences . getString ( STRING , null ) == null ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; } else { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.Activity ) . setTitle ( STRING ) . setMessage ( STRING + com.zeapo.pwdstore.SharedPreferences . getString ( STRING , null ) + STRING ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { switch ( int ) { case int : void ( ) ; break; case int : PasswordRepository . initialize ( com.zeapo.pwdstore.PasswordStore .this ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_CLONE ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_CLONE ) ; break; } } } ) . setNegativeButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; } } ) . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { switch ( int ) { case int : void ( ) ; break; case int : PasswordRepository . initialize ( com.zeapo.pwdstore.PasswordStore .this ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . REQUEST_CLONE ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , GitActivity . REQUEST_CLONE ) ; break; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity , UserPreference .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; }  <METHOD_END>
<METHOD_START> public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem ) { java.lang.String java.lang.String = com.zeapo.pwdstore.PasswordItem . getFile ( ) . getAbsolutePath ( ) ; java.lang.String = java.lang.String . java.lang.String ( PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) + STRING , STRING ) . replace ( STRING , STRING ) ; Intent com.zeapo.pwdstore.Intent = new Intent ( ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , java.lang.String ) ; setResult ( RESULT_OK , com.zeapo.pwdstore.Intent ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.Dialog com.zeapo.pwdstore.Dialog ( Bundle com.zeapo.pwdstore.Bundle ) { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) ; final Activity com.zeapo.pwdstore.Activity = getActivity ( ) ; LayoutInflater com.zeapo.pwdstore.LayoutInflater = com.zeapo.pwdstore.Activity . getLayoutInflater ( ) ; final View com.zeapo.pwdstore.View = com.zeapo.pwdstore.LayoutInflater . inflate ( R . layout . fragment_pwgen , null ) ; Typeface com.zeapo.pwdstore.Typeface = Typeface . createFromAsset ( com.zeapo.pwdstore.Activity . getAssets ( ) , STRING ) ; AlertDialog.Builder . setView ( com.zeapo.pwdstore.View ) ; SharedPreferences com.zeapo.pwdstore.SharedPreferences = getActivity ( ) . getApplicationContext ( ) . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; CheckBox com.zeapo.pwdstore.CheckBox = ( CheckBox ) com.zeapo.pwdstore.View . findViewById ( R . id . numerals ) ; com.zeapo.pwdstore.CheckBox . setChecked ( ! com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) ; com.zeapo.pwdstore.CheckBox = ( CheckBox ) com.zeapo.pwdstore.View . findViewById ( R . id . symbols ) ; com.zeapo.pwdstore.CheckBox . setChecked ( com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) ; com.zeapo.pwdstore.CheckBox = ( CheckBox ) com.zeapo.pwdstore.View . findViewById ( R . id . uppercase ) ; com.zeapo.pwdstore.CheckBox . setChecked ( ! com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) ; com.zeapo.pwdstore.CheckBox = ( CheckBox ) com.zeapo.pwdstore.View . findViewById ( R . id . ambiguous ) ; com.zeapo.pwdstore.CheckBox . setChecked ( ! com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) ; com.zeapo.pwdstore.CheckBox = ( CheckBox ) com.zeapo.pwdstore.View . findViewById ( R . id . pronounceable ) ; com.zeapo.pwdstore.CheckBox . setChecked ( ! com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , true ) ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . lengthNumber ) ; com.zeapo.pwdstore.TextView . setText ( java.lang.Integer . java.lang.String ( com.zeapo.pwdstore.SharedPreferences . getInt ( STRING , NUMBER ) ) ) ; ( ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . passwordText ) ) . setTypeface ( com.zeapo.pwdstore.Typeface ) ; AlertDialog.Builder . setPositiveButton ( getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { EditText com.zeapo.pwdstore.EditText = ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . crypto_password_edit ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . passwordText ) ; com.zeapo.pwdstore.EditText . append ( com.zeapo.pwdstore.TextView . getText ( ) ) ; } } ) ; AlertDialog.Builder . setNegativeButton ( getResources ( ) . getString ( R . string . dialog_cancel ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) {            } } ) ; AlertDialog.Builder . setNeutralButton ( getResources ( ) . getString ( R . string . pwgen_generate ) , null ) ; final AlertDialog com.zeapo.pwdstore.AlertDialog = AlertDialog.Builder . setTitle ( STRING ) . create ( ) ; com.zeapo.pwdstore.AlertDialog . setOnShowListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface ) { boolean ( ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . passwordText ) ; com.zeapo.pwdstore.TextView . setText ( pwgen . generate ( getActivity ( ) . getApplicationContext ( ) ) . get ( NUMBER ) ) ; Button com.zeapo.pwdstore.Button = com.zeapo.pwdstore.AlertDialog . getButton ( AlertDialog . BUTTON_NEUTRAL ) ; com.zeapo.pwdstore.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { boolean ( ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . passwordText ) ; com.zeapo.pwdstore.TextView . setText ( pwgen . generate ( com.zeapo.pwdstore.Activity . getApplicationContext ( ) ) . get ( NUMBER ) ) ; } } ) ; } } ) ; return com.zeapo.pwdstore.AlertDialog ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { EditText com.zeapo.pwdstore.EditText = ( EditText ) com.zeapo.pwdstore.Activity . findViewById ( R . id . crypto_password_edit ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . passwordText ) ; com.zeapo.pwdstore.EditText . append ( com.zeapo.pwdstore.TextView . getText ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) {            }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface ) { boolean ( ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . passwordText ) ; com.zeapo.pwdstore.TextView . setText ( pwgen . generate ( getActivity ( ) . getApplicationContext ( ) ) . get ( NUMBER ) ) ; Button com.zeapo.pwdstore.Button = com.zeapo.pwdstore.AlertDialog . getButton ( AlertDialog . BUTTON_NEUTRAL ) ; com.zeapo.pwdstore.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { boolean ( ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . passwordText ) ; com.zeapo.pwdstore.TextView . setText ( pwgen . generate ( com.zeapo.pwdstore.Activity . getApplicationContext ( ) ) . get ( NUMBER ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { boolean ( ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . passwordText ) ; com.zeapo.pwdstore.TextView . setText ( pwgen . generate ( com.zeapo.pwdstore.Activity . getApplicationContext ( ) ) . get ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { java.util.ArrayList<java.lang.String> < java.lang.String > java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; if ( ! ( ( CheckBox ) getDialog ( ) . findViewById ( R . id . numerals ) ) . isChecked ( ) ) { java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; } if ( ( ( CheckBox ) getDialog ( ) . findViewById ( R . id . symbols ) ) . isChecked ( ) ) { java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; } if ( ! ( ( CheckBox ) getDialog ( ) . findViewById ( R . id . uppercase ) ) . isChecked ( ) ) { java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; } if ( ! ( ( CheckBox ) getDialog ( ) . findViewById ( R . id . ambiguous ) ) . isChecked ( ) ) { java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; } if ( ! ( ( CheckBox ) getDialog ( ) . findViewById ( R . id . pronounceable ) ) . isChecked ( ) ) { java.util.ArrayList<java.lang.String> . boolean ( STRING ) ; } EditText com.zeapo.pwdstore.EditText = ( EditText ) getDialog ( ) . findViewById ( R . id . lengthNumber ) ; try { int int = java.lang.Integer . java.lang.Integer ( com.zeapo.pwdstore.EditText . getText ( ) . toString ( ) ) ; return pwgen . setPrefs ( getActivity ( ) . getApplicationContext ( ) , java.util.ArrayList<java.lang.String> , int ) ; } catch( java.lang.NumberFormatException java.lang.NumberFormatException ) { return pwgen . setPrefs ( getActivity ( ) . getApplicationContext ( ) , java.util.ArrayList<java.lang.String> ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static void void ( ) { void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private static void void ( ) java.lang.SecurityException { if ( ( Build . VERSION . SDK_INT < int ) || ( Build . VERSION . SDK_INT > int ) ) { return; } try { java.lang.Class . java.lang.Class<?> ( STRING ) . java.lang.reflect.Method ( STRING , byte [] .class ) . java.lang.Object ( null , byte[] ( ) ) ; int int = ( java.lang.Integer ) java.lang.Class . java.lang.Class<?> ( STRING ) . java.lang.reflect.Method ( STRING , java.lang.String .class , long .class ) . java.lang.Object ( null , STRING , NUMBER ) ; if ( int != NUMBER ) { throw new java.io.IOException ( STRING + int ) ; } } catch ( java.lang.Exception java.lang.Exception ) { throw new java.lang.SecurityException ( STRING , java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private static void void ( ) java.lang.SecurityException { if ( Build . VERSION . SDK_INT > int ) { return; } java.security.Provider [] java.security.Provider[] = java.security.Security . java.security.Provider[] ( STRING ) ; if ( ( java.security.Provider[] == null ) || ( java.security.Provider[] . int < NUMBER ) || ( ! com.zeapo.pwdstore.pwgen.PRNGFixes.LinuxPRNGSecureRandomProvider .class . boolean ( java.security.Provider[] [ NUMBER ] . java.lang.Class<? extends java.security.Provider> ( ) ) ) ) { java.security.Security . int ( new com.zeapo.pwdstore.pwgen.PRNGFixes.LinuxPRNGSecureRandomProvider ( ) , NUMBER ) ; } java.security.SecureRandom java.security.SecureRandom = new java.security.SecureRandom ( ) ; if ( ! com.zeapo.pwdstore.pwgen.PRNGFixes.LinuxPRNGSecureRandomProvider .class . boolean ( java.security.SecureRandom . java.security.Provider ( ) . java.lang.Class<? extends java.security.Provider> ( ) ) ) { throw new java.lang.SecurityException ( STRING + java.security.SecureRandom . java.security.Provider ( ) . java.lang.Class<? extends java.security.Provider> ( ) ) ; } java.security.SecureRandom java.security.SecureRandom ; try { java.security.SecureRandom = java.security.SecureRandom . java.security.SecureRandom ( STRING ) ; } catch ( java.security.NoSuchAlgorithmException java.security.NoSuchAlgorithmException ) { throw new java.lang.SecurityException ( STRING , java.security.NoSuchAlgorithmException ) ; } if ( ! com.zeapo.pwdstore.pwgen.PRNGFixes.LinuxPRNGSecureRandomProvider .class . boolean ( java.security.SecureRandom . java.security.Provider ( ) . java.lang.Class<? extends java.security.Provider> ( ) ) ) { throw new java.lang.SecurityException ( STRING + STRING + java.security.SecureRandom . java.security.Provider ( ) . java.lang.Class<? extends java.security.Provider> ( ) ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) { super( STRING , NUMBER , STRING + STRING ); java.lang.Object ( STRING , com.zeapo.pwdstore.pwgen.PRNGFixes.LinuxPRNGSecureRandom .class . java.lang.String ( ) ) ; java.lang.Object ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( byte [] byte[] ) { try { java.io.OutputStream java.io.OutputStream ; synchronized ( java.lang.Object ) { java.io.OutputStream = java.io.OutputStream ( ) ; } java.io.OutputStream . void ( byte[] ) ; java.io.OutputStream . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { Log . w ( com.zeapo.pwdstore.pwgen.PRNGFixes .class . java.lang.String ( ) , STRING + java.io.File ) ; } finally { boolean = true ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( byte [] byte[] ) { if ( ! boolean ) { void ( byte[] ( ) ) ; } try { java.io.DataInputStream java.io.DataInputStream ; synchronized ( java.lang.Object ) { java.io.DataInputStream = java.io.DataInputStream ( ) ; } synchronized ( java.io.DataInputStream ) { java.io.DataInputStream . void ( byte[] ) ; } } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.SecurityException ( STRING + java.io.File , java.io.IOException ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected byte [] byte[] ( int int ) { byte [] byte[] = new byte [ int ] ; void ( byte[] ) ; return byte[] ; }  <METHOD_END>
<METHOD_START> private java.io.DataInputStream java.io.DataInputStream ( ) { synchronized ( java.lang.Object ) { if ( java.io.DataInputStream == null ) { try { java.io.DataInputStream = new java.io.DataInputStream ( new java.io.FileInputStream ( java.io.File ) ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.SecurityException ( STRING + java.io.File + STRING , java.io.IOException ) ; } } return java.io.DataInputStream ; } }  <METHOD_END>
<METHOD_START> private java.io.OutputStream java.io.OutputStream ( ) java.io.IOException { synchronized ( java.lang.Object ) { if ( java.io.OutputStream == null ) { java.io.OutputStream = new java.io.FileOutputStream ( java.io.File ) ; } return java.io.OutputStream ; } }  <METHOD_END>
<METHOD_START> private static byte [] byte[] ( ) { try { java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream ( ) ; java.io.DataOutputStream java.io.DataOutputStream = new java.io.DataOutputStream ( java.io.ByteArrayOutputStream ) ; java.io.DataOutputStream . void ( java.lang.System . long ( ) ) ; java.io.DataOutputStream . void ( java.lang.System . long ( ) ) ; java.io.DataOutputStream . void ( java.lang.Process . myPid ( ) ) ; java.io.DataOutputStream . void ( java.lang.Process . myUid ( ) ) ; java.io.DataOutputStream . void ( byte[] ) ; java.io.DataOutputStream . void ( ) ; return java.io.ByteArrayOutputStream . byte[] ( ) ; } catch ( java.io.IOException java.io.IOException ) { throw new java.lang.SecurityException ( STRING , java.io.IOException ) ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( ) { try { return ( java.lang.String ) Build .class . java.lang.reflect.Field ( STRING ) . java.lang.Object ( null ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> private static byte [] byte[] ( ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.String java.lang.String = Build . FINGERPRINT ; if ( java.lang.String != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; } java.lang.String java.lang.String = java.lang.String ( ) ; if ( java.lang.String != null ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; } try { return java.lang.StringBuilder . java.lang.String ( ) . byte[] ( STRING ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { throw new java.lang.RuntimeException ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.zeapo.pwdstore.pwgen.Context , java.util.ArrayList<java.lang.String> < java.lang.String > java.util.ArrayList<java.lang.String> , int ... int[] ) { SharedPreferences com.zeapo.pwdstore.pwgen.SharedPreferences = com.zeapo.pwdstore.pwgen.Context . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; SharedPreferences . SharedPreferences SharedPreferences.Editor = com.zeapo.pwdstore.pwgen.SharedPreferences . edit ( ) ; for ( char char : java.lang.String . char[] ( ) ) { if ( java.util.ArrayList<java.lang.String> . boolean ( java.lang.String . java.lang.String ( char ) ) ) { SharedPreferences.Editor . putBoolean ( java.lang.String . java.lang.String ( char ) , true ) ; java.util.ArrayList<java.lang.String> . boolean ( java.lang.String . java.lang.String ( char ) ) ; } else { SharedPreferences.Editor . putBoolean ( java.lang.String . java.lang.String ( char ) , false ) ; } } for ( int int = NUMBER ; int < int[] . int && int < NUMBER ; int ++ ) { if ( int[] [ int ] <= NUMBER ) { return false ; } java.lang.String java.lang.String = int == NUMBER ? STRING : STRING ; SharedPreferences.Editor . putInt ( java.lang.String , int[] [ int ] ) ; } SharedPreferences.Editor . apply ( ) ; return true ; }  <METHOD_END>
<METHOD_START> public static java.util.ArrayList<java.lang.String> < java.lang.String > java.util.ArrayList<java.lang.String> ( Context com.zeapo.pwdstore.pwgen.Context ) { SharedPreferences com.zeapo.pwdstore.pwgen.SharedPreferences = com.zeapo.pwdstore.pwgen.Context . getSharedPreferences ( STRING , Context . MODE_PRIVATE ) ; boolean boolean = true ; int int = int | int ; for ( char char : java.lang.String . char[] ( ) ) { if ( com.zeapo.pwdstore.pwgen.SharedPreferences . getBoolean ( java.lang.String . java.lang.String ( char ) , false ) ) { switch( char ) { case '0' : int &= ~ int ; break; case 'A' : int &= ~ int ; break; case 'B' : int |= int ; break; case 's' : boolean = false ; break; case 'y' : int |= int ; break; case 'v' : boolean = false ; int |= int ; break; } } } int int = com.zeapo.pwdstore.pwgen.SharedPreferences . getInt ( STRING , NUMBER ) ; if ( int < NUMBER ) { boolean = false ; } if ( int <= NUMBER ) { int &= ~ int ; } if ( int <= NUMBER ) { int &= ~ int ; } java.util.ArrayList<java.lang.String> < java.lang.String > java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String> <> ( ) ; int int = com.zeapo.pwdstore.pwgen.SharedPreferences . getInt ( STRING , NUMBER ) ; for ( int int = NUMBER ; int < int ; int ++ ) { if ( boolean ) { java.util.ArrayList<java.lang.String> . boolean ( pw_phonemes . phonemes ( int , int ) ) ; } else { java.util.ArrayList<java.lang.String> . boolean ( pw_rand . rand ( int , int ) ) ; } } return java.util.ArrayList<java.lang.String> ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , int int ) { this . java.lang.String = java.lang.String ; this . int = int ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( int int , int int ) { java.lang.String java.lang.String ; int int , int , int , int , int , int , int ; boolean boolean ; java.lang.String java.lang.String ; char char ; do { java.lang.String = STRING ; int = int ; int = NUMBER ; int = NUMBER ; boolean = true ; int = randnum . number ( NUMBER ) == NUMBER ? int : int ; while ( int < int ) { int = randnum . number ( int ) ; java.lang.String = com.zeapo.pwdstore.pwgen.pw_phonemes.element[] [ int ] . java.lang.String ; int = java.lang.String . int ( ) ; int = com.zeapo.pwdstore.pwgen.pw_phonemes.element[] [ int ] . int ; if ( ( int & int ) == NUMBER ) { continue; } if ( boolean && ( int & int ) > NUMBER ) { continue; } if ( ( int & int ) > NUMBER && ( int & int ) > NUMBER && ( int & int ) > NUMBER ) { continue; } if ( int > int - int ) { continue; } java.lang.String += java.lang.String ; if ( ( int & pwgen . UPPERS ) > NUMBER ) { if ( ( boolean || ( int & int ) > NUMBER ) && ( randnum . number ( NUMBER ) < NUMBER ) ) { int int = java.lang.String . int ( ) - int ; java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) + java.lang.String . java.lang.String ( ) ; int &= ~ pwgen . UPPERS ; } } if ( ( int & pwgen . AMBIGUOUS ) > NUMBER ) { for ( char char : pwgen . AMBIGUOUS_STR . toCharArray ( ) ) { if ( java.lang.String . boolean ( java.lang.String . java.lang.String ( char ) ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; break; } } if ( java.lang.String . int ( ) == int ) continue; } int += int ; if ( int >= int ) break; if ( ( int & pwgen . DIGITS ) > NUMBER ) { if ( ! boolean && ( randnum . number ( NUMBER ) < NUMBER ) ) { java.lang.String java.lang.String ; do { char = java.lang.Character . char ( randnum . number ( NUMBER ) , NUMBER ) ; java.lang.String = java.lang.String . java.lang.String ( char ) ; } while ( ( int & pwgen . AMBIGUOUS ) > NUMBER && pwgen . AMBIGUOUS_STR . contains ( java.lang.String ) ); java.lang.String += java.lang.String ; int ++ ; int &= ~ pwgen . DIGITS ; boolean = true ; int = NUMBER ; int = randnum . number ( NUMBER ) == NUMBER ? int : int ; continue; } } if ( ( int & pwgen . SYMBOLS ) > NUMBER ) { if ( ! boolean && ( randnum . number ( NUMBER ) < NUMBER ) ) { java.lang.String java.lang.String ; int int ; do { int = randnum . number ( pwgen . SYMBOLS_STR . length ( ) ) ; char = pwgen . SYMBOLS_STR . toCharArray ( ) [ int ] ; java.lang.String = java.lang.String . java.lang.String ( char ) ; } while ( ( int & pwgen . AMBIGUOUS ) > NUMBER && pwgen . AMBIGUOUS_STR . contains ( java.lang.String ) ); java.lang.String += java.lang.String ; int ++ ; int &= ~ pwgen . SYMBOLS ; } } if ( int == int ) { int = int ; } else { if ( ( int & int ) > NUMBER || ( int & int ) > NUMBER || ( randnum . number ( NUMBER ) > NUMBER ) ) { int = int ; } else { int = int ; } } int = int ; boolean = false ; } } while ( ( int & ( pwgen . UPPERS | pwgen . DIGITS | pwgen . SYMBOLS ) ) > NUMBER ); return java.lang.String ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( int int , int int ) { java.lang.String java.lang.String ; char char ; int int , int , int ; java.lang.String java.lang.String ; java.lang.String java.lang.String = STRING ; if ( ( int & pwgen . DIGITS ) > NUMBER ) { java.lang.String += pwgen . DIGITS_STR ; } if ( ( int & pwgen . UPPERS ) > NUMBER ) { java.lang.String += pwgen . UPPERS_STR ; } java.lang.String += pwgen . LOWERS_STR ; if ( ( int & pwgen . SYMBOLS ) > NUMBER ) { java.lang.String += pwgen . SYMBOLS_STR ; } do { java.lang.String = STRING ; int = int ; int = NUMBER ; while ( int < int ) { int = randnum . number ( java.lang.String . int ( ) ) ; char = java.lang.String . char[] ( ) [ int ] ; java.lang.String = java.lang.String . java.lang.String ( char ) ; if ( ( int & pwgen . AMBIGUOUS ) > NUMBER && pwgen . AMBIGUOUS_STR . contains ( java.lang.String ) ) { continue; } if ( ( int & pwgen . NO_VOWELS ) > NUMBER && pwgen . VOWELS_STR . contains ( java.lang.String ) ) { continue; } java.lang.String += java.lang.String ; int ++ ; if ( pwgen . DIGITS_STR . contains ( java.lang.String ) ) { int &= ~ pwgen . DIGITS ; } if ( pwgen . UPPERS_STR . contains ( java.lang.String ) ) { int &= ~ pwgen . UPPERS ; } if ( pwgen . SYMBOLS_STR . contains ( java.lang.String ) ) { int &= ~ pwgen . SYMBOLS ; } } } while ( ( int & ( pwgen . UPPERS | pwgen . DIGITS | pwgen . SYMBOLS ) ) > NUMBER ); return java.lang.String ; }  <METHOD_END>
<METHOD_START> public static int int ( int int ) { return java.security.SecureRandom . int ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem );  <METHOD_END>
<METHOD_START> public void ( ) {   }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.zeapo.pwdstore.Bundle ) { super. onCreate ( com.zeapo.pwdstore.Bundle ) ; java.lang.String java.lang.String = getArguments ( ) . getString ( STRING ) ; com.zeapo.pwdstore.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( getActivity ( ) ) ; java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> = new java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> < java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> < PasswordItem > > ( ) ; java.util.Stack<java.lang.Integer> = new java.util.Stack<java.lang.Integer> < java.lang.Integer > ( ) ; java.util.Stack<java.io.File> = new java.util.Stack<java.io.File> < java.io.File > ( ) ; com.zeapo.pwdstore.FolderRecyclerAdapter = new FolderRecyclerAdapter ( ( PgpHandler ) getActivity ( ) , com.zeapo.pwdstore.SelectFolderFragment.OnFragmentInteractionListener , PasswordRepository . getPasswords ( new java.io.File ( java.lang.String ) , PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.View com.zeapo.pwdstore.View ( LayoutInflater com.zeapo.pwdstore.LayoutInflater , ViewGroup com.zeapo.pwdstore.ViewGroup , Bundle com.zeapo.pwdstore.Bundle ) { View com.zeapo.pwdstore.View = com.zeapo.pwdstore.LayoutInflater . inflate ( R . layout . password_recycler_view , com.zeapo.pwdstore.ViewGroup , false ) ; RecyclerView.LayoutManager = new LinearLayoutManager ( getActivity ( ) ) ; com.zeapo.pwdstore.RecyclerView = ( RecyclerView ) com.zeapo.pwdstore.View . findViewById ( R . id . pass_recycler ) ; com.zeapo.pwdstore.RecyclerView . setLayoutManager ( RecyclerView.LayoutManager ) ; com.zeapo.pwdstore.RecyclerView . addItemDecoration ( new DividerItemDecoration ( getActivity ( ) , R . drawable . divider ) ) ; com.zeapo.pwdstore.RecyclerView . setAdapter ( com.zeapo.pwdstore.FolderRecyclerAdapter ) ; final FloatingActionButton com.zeapo.pwdstore.FloatingActionButton = ( FloatingActionButton ) com.zeapo.pwdstore.View . findViewById ( R . id . fab ) ; com.zeapo.pwdstore.FloatingActionButton . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ( ( PasswordStore ) getActivity ( ) ) . createPassword ( ) ; } } ) ; registerForContextMenu ( com.zeapo.pwdstore.RecyclerView ) ; return com.zeapo.pwdstore.View ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ( ( PasswordStore ) getActivity ( ) ) . createPassword ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Context com.zeapo.pwdstore.Context ) { super. onAttach ( com.zeapo.pwdstore.Context ) ; try { com.zeapo.pwdstore.SelectFolderFragment.OnFragmentInteractionListener = new com.zeapo.pwdstore.SelectFolderFragment.OnFragmentInteractionListener ( ) { public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem ) { if ( com.zeapo.pwdstore.PasswordItem . getType ( ) == PasswordItem . TYPE_CATEGORY ) { java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . push ( java.util.Stack<java.io.File> . boolean ( ) ? PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) : PasswordRepository . getPasswords ( java.util.Stack<java.io.File> . java.io.File ( ) , PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) ) ; java.util.Stack<java.io.File> . java.io.File ( com.zeapo.pwdstore.PasswordItem . getFile ( ) ) ; java.util.Stack<java.lang.Integer> . java.lang.Integer ( com.zeapo.pwdstore.RecyclerView . getVerticalScrollbarPosition ( ) ) ; com.zeapo.pwdstore.RecyclerView . scrollToPosition ( NUMBER ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . addAll ( PasswordRepository . getPasswords ( com.zeapo.pwdstore.PasswordItem . getFile ( ) , PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; } } public void void ( java.lang.Integer java.lang.Integer ) {                } } ; } catch ( java.lang.ClassCastException java.lang.ClassCastException ) { throw new java.lang.ClassCastException ( com.zeapo.pwdstore.Context . toString ( ) + STRING ) ; } }  <METHOD_END>
<METHOD_START> public void void ( PasswordItem com.zeapo.pwdstore.PasswordItem ) { if ( com.zeapo.pwdstore.PasswordItem . getType ( ) == PasswordItem . TYPE_CATEGORY ) { java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . push ( java.util.Stack<java.io.File> . boolean ( ) ? PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) : PasswordRepository . getPasswords ( java.util.Stack<java.io.File> . java.io.File ( ) , PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) ) ; java.util.Stack<java.io.File> . java.io.File ( com.zeapo.pwdstore.PasswordItem . getFile ( ) ) ; java.util.Stack<java.lang.Integer> . java.lang.Integer ( com.zeapo.pwdstore.RecyclerView . getVerticalScrollbarPosition ( ) ) ; com.zeapo.pwdstore.RecyclerView . scrollToPosition ( NUMBER ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . addAll ( PasswordRepository . getPasswords ( com.zeapo.pwdstore.PasswordItem . getFile ( ) , PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.Context ) ) ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) {                }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . clear ( ) ; java.util.Stack<java.io.File> . void ( ) ; java.util.Stack<java.lang.Integer> . void ( ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . addAll ( PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( false ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.zeapo.pwdstore.FolderRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . addAll ( java.util.Stack<java.io.File> . boolean ( ) ? PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) : PasswordRepository . getPasswords ( java.util.Stack<java.io.File> . java.io.File ( ) , PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { Log . d ( STRING , STRING + java.lang.String ) ; if ( java.lang.String . boolean ( ) ) { void ( ) ; } else { void ( java.lang.String , java.util.Stack<java.io.File> . boolean ( ) ? null : java.util.Stack<java.io.File> . java.io.File ( ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String , java.io.File java.io.File ) { java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> = java.io.File == null ? PasswordRepository . getPasswords ( PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) : PasswordRepository . getPasswords ( java.io.File , PasswordRepository . getRepositoryDirectory ( getActivity ( ) ) ) ; boolean boolean = com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , true ) ; for ( PasswordItem com.zeapo.pwdstore.PasswordItem : java.util.ArrayList<com.zeapo.pwdstore.PasswordItem> ) { if ( com.zeapo.pwdstore.PasswordItem . getType ( ) == PasswordItem . TYPE_CATEGORY && boolean ) { void ( java.lang.String , com.zeapo.pwdstore.PasswordItem . getFile ( ) ) ; } boolean boolean = com.zeapo.pwdstore.PasswordItem . toString ( ) . toLowerCase ( ) . contains ( java.lang.String . java.lang.String ( ) ) ; boolean boolean = com.zeapo.pwdstore.FolderRecyclerAdapter . getValues ( ) . contains ( com.zeapo.pwdstore.PasswordItem ) ; if ( boolean && ! boolean ) { com.zeapo.pwdstore.FolderRecyclerAdapter . add ( com.zeapo.pwdstore.PasswordItem ) ; } else if ( ! boolean && boolean ) { com.zeapo.pwdstore.FolderRecyclerAdapter . remove ( com.zeapo.pwdstore.FolderRecyclerAdapter . getValues ( ) . indexOf ( com.zeapo.pwdstore.PasswordItem ) ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . isEmpty ( ) ) return; com.zeapo.pwdstore.RecyclerView . scrollToPosition ( java.util.Stack<java.lang.Integer> . java.lang.Integer ( ) ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . clear ( ) ; com.zeapo.pwdstore.FolderRecyclerAdapter . addAll ( java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . pop ( ) ) ; java.util.Stack<java.io.File> . java.io.File ( ) ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { if ( java.util.Stack<java.io.File> . boolean ( ) ) return PasswordRepository . getRepositoryDirectory ( getActivity ( ) . getApplicationContext ( ) ) ; else return java.util.Stack<java.io.File> . java.io.File ( ) ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return ! java.util.Stack<java.util.ArrayList<com.zeapo.pwdstore.PasswordItem>> . isEmpty ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {        }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.View com.zeapo.pwdstore.View ( LayoutInflater com.zeapo.pwdstore.LayoutInflater , ViewGroup com.zeapo.pwdstore.ViewGroup , Bundle com.zeapo.pwdstore.Bundle ) { final View com.zeapo.pwdstore.View = com.zeapo.pwdstore.LayoutInflater . inflate ( R . layout . fragment_ssh_keygen , com.zeapo.pwdstore.ViewGroup , false ) ; Typeface com.zeapo.pwdstore.Typeface = Typeface . createFromAsset ( getActivity ( ) . getAssets ( ) , STRING ) ; Spinner com.zeapo.pwdstore.Spinner = ( Spinner ) com.zeapo.pwdstore.View . findViewById ( R . id . length ) ; java.lang.Integer [] java.lang.Integer[] = new java.lang.Integer [] { NUMBER , NUMBER } ; ArrayAdapter < java.lang.Integer > com.zeapo.pwdstore.ArrayAdapter<java.lang.Integer> = new ArrayAdapter <> ( getActivity ( ) , android . R . layout . simple_spinner_dropdown_item , java.lang.Integer[] ) ; com.zeapo.pwdstore.Spinner . setAdapter ( com.zeapo.pwdstore.ArrayAdapter<java.lang.Integer> ) ; ( ( EditText ) com.zeapo.pwdstore.View . findViewById ( R . id . passphrase ) ) . setTypeface ( com.zeapo.pwdstore.Typeface ) ; CheckBox com.zeapo.pwdstore.CheckBox = ( CheckBox ) com.zeapo.pwdstore.View . findViewById ( R . id . show_passphrase ) ; com.zeapo.pwdstore.CheckBox . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton com.zeapo.pwdstore.CompoundButton , boolean boolean ) { EditText com.zeapo.pwdstore.EditText = ( EditText ) com.zeapo.pwdstore.View . findViewById ( R . id . passphrase ) ; int int = com.zeapo.pwdstore.EditText . getSelectionEnd ( ) ; if ( boolean ) { com.zeapo.pwdstore.EditText . setInputType ( InputType . TYPE_CLASS_TEXT | InputType . TYPE_TEXT_VARIATION_VISIBLE_PASSWORD ) ; } else { com.zeapo.pwdstore.EditText . setInputType ( InputType . TYPE_CLASS_TEXT | InputType . TYPE_TEXT_VARIATION_PASSWORD ) ; } com.zeapo.pwdstore.EditText . setSelection ( int ) ; } } ) ; return com.zeapo.pwdstore.View ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( CompoundButton com.zeapo.pwdstore.CompoundButton , boolean boolean ) { EditText com.zeapo.pwdstore.EditText = ( EditText ) com.zeapo.pwdstore.View . findViewById ( R . id . passphrase ) ; int int = com.zeapo.pwdstore.EditText . getSelectionEnd ( ) ; if ( boolean ) { com.zeapo.pwdstore.EditText . setInputType ( InputType . TYPE_CLASS_TEXT | InputType . TYPE_TEXT_VARIATION_VISIBLE_PASSWORD ) ; } else { com.zeapo.pwdstore.EditText . setInputType ( InputType . TYPE_CLASS_TEXT | InputType . TYPE_TEXT_VARIATION_PASSWORD ) ; } com.zeapo.pwdstore.EditText . setSelection ( int ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {        }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.Dialog com.zeapo.pwdstore.Dialog ( Bundle com.zeapo.pwdstore.Bundle ) { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) ; LayoutInflater com.zeapo.pwdstore.LayoutInflater = getActivity ( ) . getLayoutInflater ( ) ; final View com.zeapo.pwdstore.View = com.zeapo.pwdstore.LayoutInflater . inflate ( R . layout . fragment_show_ssh_key , null ) ; AlertDialog.Builder . setView ( com.zeapo.pwdstore.View ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( R . id . public_key ) ; java.io.File java.io.File = new java.io.File ( getActivity ( ) . getFilesDir ( ) + STRING ) ; try { com.zeapo.pwdstore.TextView . setText ( FileUtils . readFileToString ( java.io.File ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; } AlertDialog.Builder . setPositiveButton ( getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { if ( getActivity ( ) instanceof com.zeapo.pwdstore.SshKeyGen ) getActivity ( ) . finish ( ) ; } } ) ; AlertDialog.Builder . setNegativeButton ( getResources ( ) . getString ( R . string . dialog_cancel ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) {                } } ) ; AlertDialog.Builder . setNeutralButton ( getResources ( ) . getString ( R . string . ssh_keygen_copy ) , null ) ; final AlertDialog com.zeapo.pwdstore.AlertDialog = AlertDialog.Builder . setTitle ( STRING ) . create ( ) ; com.zeapo.pwdstore.AlertDialog . setOnShowListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface ) { Button com.zeapo.pwdstore.Button = com.zeapo.pwdstore.AlertDialog . getButton ( AlertDialog . BUTTON_NEUTRAL ) ; com.zeapo.pwdstore.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { TextView com.zeapo.pwdstore.TextView = ( TextView ) getDialog ( ) . findViewById ( R . id . public_key ) ; ClipboardManager com.zeapo.pwdstore.ClipboardManager = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD_SERVICE ) ; ClipData com.zeapo.pwdstore.ClipData = ClipData . newPlainText ( STRING , com.zeapo.pwdstore.TextView . getText ( ) . toString ( ) ) ; com.zeapo.pwdstore.ClipboardManager . setPrimaryClip ( com.zeapo.pwdstore.ClipData ) ; } } ) ; } } ) ; return com.zeapo.pwdstore.AlertDialog ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { if ( getActivity ( ) instanceof com.zeapo.pwdstore.SshKeyGen ) getActivity ( ) . finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) {                }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface ) { Button com.zeapo.pwdstore.Button = com.zeapo.pwdstore.AlertDialog . getButton ( AlertDialog . BUTTON_NEUTRAL ) ; com.zeapo.pwdstore.Button . setOnClickListener ( new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { TextView com.zeapo.pwdstore.TextView = ( TextView ) getDialog ( ) . findViewById ( R . id . public_key ) ; ClipboardManager com.zeapo.pwdstore.ClipboardManager = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD_SERVICE ) ; ClipData com.zeapo.pwdstore.ClipData = ClipData . newPlainText ( STRING , com.zeapo.pwdstore.TextView . getText ( ) . toString ( ) ) ; com.zeapo.pwdstore.ClipboardManager . setPrimaryClip ( com.zeapo.pwdstore.ClipData ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { TextView com.zeapo.pwdstore.TextView = ( TextView ) getDialog ( ) . findViewById ( R . id . public_key ) ; ClipboardManager com.zeapo.pwdstore.ClipboardManager = ( ClipboardManager ) getActivity ( ) . getSystemService ( Context . CLIPBOARD_SERVICE ) ; ClipData com.zeapo.pwdstore.ClipData = ClipData . newPlainText ( STRING , com.zeapo.pwdstore.TextView . getText ( ) . toString ( ) ) ; com.zeapo.pwdstore.ClipboardManager . setPrimaryClip ( com.zeapo.pwdstore.ClipData ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.zeapo.pwdstore.Bundle ) { super. onCreate ( com.zeapo.pwdstore.Bundle ) ; if ( getSupportActionBar ( ) != null ) getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; setTitle ( STRING ) ; if ( com.zeapo.pwdstore.Bundle == null ) { getFragmentManager ( ) . beginTransaction ( ) . replace ( android . R . id . content , new com.zeapo.pwdstore.SshKeyGen.SshKeyGenFragment ( ) ) . commit ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; com.zeapo.pwdstore.ProgressDialog = ProgressDialog . show ( com.zeapo.pwdstore.SshKeyGen .this , STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> protected java.lang.Exception java.lang.Exception ( java.lang.String ... java.lang.String[] ) { int int = java.lang.Integer . int ( java.lang.String[] [ NUMBER ] ) ; java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] ; java.lang.String java.lang.String = java.lang.String[] [ NUMBER ] ; JSch com.zeapo.pwdstore.JSch = new JSch ( ) ; try { KeyPair com.zeapo.pwdstore.KeyPair = KeyPair . genKeyPair ( com.zeapo.pwdstore.JSch , KeyPair . RSA , int ) ; java.io.File java.io.File = new java.io.File ( getFilesDir ( ) + STRING ) ; java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream ( java.io.File , false ) ; if ( java.lang.String . int ( ) > NUMBER ) { com.zeapo.pwdstore.KeyPair . writePrivateKey ( java.io.FileOutputStream , java.lang.String . byte[] ( ) ) ; } else { com.zeapo.pwdstore.KeyPair . writePrivateKey ( java.io.FileOutputStream ) ; } java.io.File = new java.io.File ( getFilesDir ( ) + STRING ) ; java.io.FileOutputStream = new java.io.FileOutputStream ( java.io.File , false ) ; com.zeapo.pwdstore.KeyPair . writePublicKey ( java.io.FileOutputStream , java.lang.String ) ; return null ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.System . java.io.PrintStream . void ( STRING ) ; java.lang.Exception . void ( ) ; return java.lang.Exception ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Exception java.lang.Exception ) { super. onPostExecute ( java.lang.Exception ) ; com.zeapo.pwdstore.ProgressDialog . dismiss ( ) ; if ( java.lang.Exception == null ) { Toast . makeText ( com.zeapo.pwdstore.SshKeyGen .this , STRING , Toast . LENGTH_LONG ) . show ( ) ; DialogFragment com.zeapo.pwdstore.DialogFragment = new com.zeapo.pwdstore.SshKeyGen.ShowSshKeyFragment ( ) ; com.zeapo.pwdstore.DialogFragment . show ( getFragmentManager ( ) , STRING ) ; SharedPreferences com.zeapo.pwdstore.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( getApplicationContext ( ) ) ; SharedPreferences . SharedPreferences SharedPreferences.Editor = com.zeapo.pwdstore.SharedPreferences . edit ( ) ; SharedPreferences.Editor . putBoolean ( STRING , true ) ; SharedPreferences.Editor . apply ( ) ; } else { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.SshKeyGen .this ) . setTitle ( STRING ) . setMessage ( getResources ( ) . getString ( R . string . ssh_key_error_dialog_text ) + java.lang.Exception . java.lang.String ( ) ) . setPositiveButton ( getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { } } ) . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { }  <METHOD_END>
<METHOD_START> public void void ( View com.zeapo.pwdstore.View ) { java.lang.String java.lang.String = java.lang.Integer . java.lang.String ( ( java.lang.Integer ) ( ( Spinner ) findViewById ( R . id . length ) ) . getSelectedItem ( ) ) ; java.lang.String java.lang.String = ( ( EditText ) findViewById ( R . id . passphrase ) ) . getText ( ) . toString ( ) ; java.lang.String java.lang.String = ( ( EditText ) findViewById ( R . id . comment ) ) . getText ( ) . toString ( ) ; new com.zeapo.pwdstore.SshKeyGen.generateTask ( ) . execute ( java.lang.String , java.lang.String , java.lang.String ) ; InputMethodManager com.zeapo.pwdstore.InputMethodManager = ( InputMethodManager ) getSystemService ( Context . INPUT_METHOD_SERVICE ) ; com.zeapo.pwdstore.InputMethodManager . hideSoftInputFromWindow ( com.zeapo.pwdstore.View . getWindowToken ( ) , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.zeapo.pwdstore.Bundle ) { super. onCreate ( com.zeapo.pwdstore.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.zeapo.pwdstore.View com.zeapo.pwdstore.View ( LayoutInflater com.zeapo.pwdstore.LayoutInflater , ViewGroup com.zeapo.pwdstore.ViewGroup , Bundle com.zeapo.pwdstore.Bundle ) { return com.zeapo.pwdstore.LayoutInflater . inflate ( R . layout . fragment_to_clone_or_not , com.zeapo.pwdstore.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.zeapo.pwdstore.Bundle ) { super. onCreate ( com.zeapo.pwdstore.Bundle ) ; final com.zeapo.pwdstore.UserPreference com.zeapo.pwdstore.UserPreference = ( com.zeapo.pwdstore.UserPreference ) getActivity ( ) ; final SharedPreferences com.zeapo.pwdstore.SharedPreferences = getPreferenceManager ( ) . getSharedPreferences ( ) ; addPreferencesFromResource ( R . xml . preference ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.UserPreference , PgpHandler .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; return true ; } } ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { com.zeapo.pwdstore.UserPreference . void ( ) ; return true ; } } ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { com.zeapo.pwdstore.UserPreference . void ( true ) ; return true ; } } ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { DialogFragment com.zeapo.pwdstore.DialogFragment = new SshKeyGen . SshKeyGen ( ) ; com.zeapo.pwdstore.DialogFragment . show ( getFragmentManager ( ) , STRING ) ; return true ; } } ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.UserPreference , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . EDIT_SERVER ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; return true ; } } ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.UserPreference ) . setTitle ( R . string . pref_dialog_delete_title ) . setMessage ( getResources ( ) . getString ( R . string . dialog_delete_msg ) + STRING + PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.UserPreference . getApplicationContext ( ) ) . toString ( ) ) . setCancelable ( false ) . setPositiveButton ( R . string . dialog_delete , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { try { FileUtils . cleanDirectory ( PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.UserPreference . getApplicationContext ( ) ) ) ; PasswordRepository . closeRepository ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { } com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , false ) . apply ( ) ; com.zeapo.pwdstore.DialogInterface . cancel ( ) ; com.zeapo.pwdstore.UserPreference . finish ( ) ; } } ) . setNegativeButton ( R . string . dialog_do_not_delete , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { { com.zeapo.pwdstore.DialogInterface . cancel ( ) ; } } } ) . show ( ) ; return true ; } } ) ; final Preference com.zeapo.pwdstore.Preference = findPreference ( STRING ) ; com.zeapo.pwdstore.Preference . setSummary ( getPreferenceManager ( ) . getSharedPreferences ( ) . getString ( STRING , com.zeapo.pwdstore.UserPreference . getString ( R . string . no_repo_selected ) ) ) ; com.zeapo.pwdstore.Preference . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { com.zeapo.pwdstore.UserPreference . void ( ) ; return true ; } } ) ; Preference . Preference Preference.OnPreferenceChangeListener = new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference , java.lang.Object java.lang.Object ) { findPreference ( STRING ) . setEnabled ( ! ( java.lang.Boolean ) java.lang.Object ) ; PasswordRepository . closeRepository ( ) ; getPreferenceManager ( ) . getSharedPreferences ( ) . edit ( ) . putBoolean ( STRING , true ) . apply ( ) ; return true ; } } ; findPreference ( STRING ) . setOnPreferenceChangeListener ( Preference.OnPreferenceChangeListener ) ; findPreference ( STRING ) . setOnPreferenceChangeListener ( Preference.OnPreferenceChangeListener ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.UserPreference , AutofillPreferenceActivity .class ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; return true ; } } ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.UserPreference ) . setTitle ( R . string . pref_autofill_enable_title ) . setView ( R . layout . autofill_instructions ) . setPositiveButton ( R . string . dialog_ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( Settings . ACTION_ACCESSIBILITY_SETTINGS ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; } } ) . setNegativeButton ( R . string . dialog_cancel , null ) . setOnDismissListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface ) { ( ( CheckBoxPreference ) findPreference ( STRING ) ) . setChecked ( ( ( com.zeapo.pwdstore.UserPreference ) getActivity ( ) ) . boolean ( ) ) ; } } ) . show ( ) ; return true ; } } ) ; findPreference ( STRING ) . setOnPreferenceClickListener ( new Preference . Preference ( ) { @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { com.zeapo.pwdstore.UserPreference . void ( ) ; return true ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.UserPreference , PgpHandler .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , STRING ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { com.zeapo.pwdstore.UserPreference . void ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { com.zeapo.pwdstore.UserPreference . void ( true ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { DialogFragment com.zeapo.pwdstore.DialogFragment = new SshKeyGen . SshKeyGen ( ) ; com.zeapo.pwdstore.DialogFragment . show ( getFragmentManager ( ) , STRING ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.UserPreference , GitActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( STRING , GitActivity . EDIT_SERVER ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.UserPreference ) . setTitle ( R . string . pref_dialog_delete_title ) . setMessage ( getResources ( ) . getString ( R . string . dialog_delete_msg ) + STRING + PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.UserPreference . getApplicationContext ( ) ) . toString ( ) ) . setCancelable ( false ) . setPositiveButton ( R . string . dialog_delete , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { try { FileUtils . cleanDirectory ( PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.UserPreference . getApplicationContext ( ) ) ) ; PasswordRepository . closeRepository ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { } com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , false ) . apply ( ) ; com.zeapo.pwdstore.DialogInterface . cancel ( ) ; com.zeapo.pwdstore.UserPreference . finish ( ) ; } } ) . setNegativeButton ( R . string . dialog_do_not_delete , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { { com.zeapo.pwdstore.DialogInterface . cancel ( ) ; } } } ) . show ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { try { FileUtils . cleanDirectory ( PasswordRepository . getRepositoryDirectory ( com.zeapo.pwdstore.UserPreference . getApplicationContext ( ) ) ) ; PasswordRepository . closeRepository ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { } com.zeapo.pwdstore.SharedPreferences . edit ( ) . putBoolean ( STRING , false ) . apply ( ) ; com.zeapo.pwdstore.DialogInterface . cancel ( ) ; com.zeapo.pwdstore.UserPreference . finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { { com.zeapo.pwdstore.DialogInterface . cancel ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { com.zeapo.pwdstore.UserPreference . void ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference , java.lang.Object java.lang.Object ) { findPreference ( STRING ) . setEnabled ( ! ( java.lang.Boolean ) java.lang.Object ) ; PasswordRepository . closeRepository ( ) ; getPreferenceManager ( ) . getSharedPreferences ( ) . edit ( ) . putBoolean ( STRING , true ) . apply ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.UserPreference , AutofillPreferenceActivity .class ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { new AlertDialog . AlertDialog ( com.zeapo.pwdstore.UserPreference ) . setTitle ( R . string . pref_autofill_enable_title ) . setView ( R . layout . autofill_instructions ) . setPositiveButton ( R . string . dialog_ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( Settings . ACTION_ACCESSIBILITY_SETTINGS ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; } } ) . setNegativeButton ( R . string . dialog_cancel , null ) . setOnDismissListener ( new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface ) { ( ( CheckBoxPreference ) findPreference ( STRING ) ) . setChecked ( ( ( com.zeapo.pwdstore.UserPreference ) getActivity ( ) ) . boolean ( ) ) ; } } ) . show ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( Settings . ACTION_ACCESSIBILITY_SETTINGS ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface ) { ( ( CheckBoxPreference ) findPreference ( STRING ) ) . setChecked ( ( ( com.zeapo.pwdstore.UserPreference ) getActivity ( ) ) . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( Preference com.zeapo.pwdstore.Preference ) { com.zeapo.pwdstore.UserPreference . void ( ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; final SharedPreferences com.zeapo.pwdstore.SharedPreferences = getPreferenceManager ( ) . getSharedPreferences ( ) ; findPreference ( STRING ) . setSummary ( getPreferenceManager ( ) . getSharedPreferences ( ) . getString ( STRING , getString ( R . string . no_repo_selected ) ) ) ; findPreference ( STRING ) . setEnabled ( com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) ; findPreference ( STRING ) . setEnabled ( ! com.zeapo.pwdstore.SharedPreferences . getBoolean ( STRING , false ) ) ; Preference com.zeapo.pwdstore.Preference = findPreference ( STRING ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = com.zeapo.pwdstore.SharedPreferences . getStringSet ( STRING , new java.util.HashSet<java.lang.String> < java.lang.String > ( ) ) ; if ( java.util.Set<java.lang.String> . boolean ( ) ) { com.zeapo.pwdstore.Preference . setSummary ( STRING ) ; } else { com.zeapo.pwdstore.Preference . setSummary ( Joiner . on ( ',' ) . join ( Iterables . transform ( java.util.Set<java.lang.String> , new Function < java.lang.String , java.lang.Object > ( ) { @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { return OpenPgpUtils . convertKeyIdToHex ( java.lang.Long . java.lang.Long ( java.lang.String ) ) ; } } ) ) ) ; } ( ( CheckBoxPreference ) findPreference ( STRING ) ) . setChecked ( ( ( com.zeapo.pwdstore.UserPreference ) getActivity ( ) ) . boolean ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Object java.lang.Object ( java.lang.String java.lang.String ) { return OpenPgpUtils . convertKeyIdToHex ( java.lang.Long . java.lang.Long ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.zeapo.pwdstore.Bundle ) { super. onCreate ( com.zeapo.pwdstore.Bundle ) ; if ( getIntent ( ) != null ) { if ( getIntent ( ) . getStringExtra ( STRING ) != null ) { switch ( getIntent ( ) . getStringExtra ( STRING ) ) { case STRING : void ( ) ; break; case STRING : void ( false ) ; break; case STRING : void ( ) ; break; } } } com.zeapo.pwdstore.UserPreference.PrefsFragment = new com.zeapo.pwdstore.UserPreference.PrefsFragment ( ) ; getFragmentManager ( ) . beginTransaction ( ) . replace ( android . R . id . content , com.zeapo.pwdstore.UserPreference.PrefsFragment ) . commit ( ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final Activity com.zeapo.pwdstore.Activity = this ; new AlertDialog . AlertDialog ( this ) . setTitle ( STRING ) . setMessage ( STRING + STRING + STRING ) . setPositiveButton ( R . string . dialog_ok , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity . getApplicationContext ( ) , FilePickerActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_ALLOW_MULTIPLE , false ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_ALLOW_CREATE_DIR , true ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_MODE , FilePickerActivity . MODE_DIR ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_START_PATH , Environment . getExternalStorageDirectory ( ) . getPath ( ) ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; } } ) . setNegativeButton ( R . string . dialog_cancel , null ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { Intent com.zeapo.pwdstore.Intent = new Intent ( com.zeapo.pwdstore.Activity . getApplicationContext ( ) , FilePickerActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_ALLOW_MULTIPLE , false ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_ALLOW_CREATE_DIR , true ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_MODE , FilePickerActivity . MODE_DIR ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_START_PATH , Environment . getExternalStorageDirectory ( ) . getPath ( ) ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.zeapo.pwdstore.MenuItem ) { int int = com.zeapo.pwdstore.MenuItem . getItemId ( ) ; switch ( int ) { case android . R . id . home : setResult ( RESULT_OK ) ; finish ( ) ; return true ; } return super. onOptionsItemSelected ( com.zeapo.pwdstore.MenuItem ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final Activity com.zeapo.pwdstore.Activity = this ; if ( ContextCompat . checkSelfPermission ( com.zeapo.pwdstore.Activity , Manifest . permission . READ_EXTERNAL_STORAGE ) != PackageManager . PERMISSION_GRANTED ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( com.zeapo.pwdstore.Activity , Manifest . permission . READ_EXTERNAL_STORAGE ) ) { Snackbar com.zeapo.pwdstore.Snackbar = Snackbar . make ( com.zeapo.pwdstore.UserPreference.PrefsFragment . getView ( ) , STRING , Snackbar . LENGTH_INDEFINITE ) . setAction ( R . string . dialog_ok , new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . READ_EXTERNAL_STORAGE } , int ) ; } } ) ; com.zeapo.pwdstore.Snackbar . show ( ) ; View com.zeapo.pwdstore.View = com.zeapo.pwdstore.Snackbar . getView ( ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( android . support . design . R . id . snackbar_text ) ; com.zeapo.pwdstore.TextView . setTextColor ( Color . WHITE ) ; com.zeapo.pwdstore.TextView . setMaxLines ( NUMBER ) ; } else { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . READ_EXTERNAL_STORAGE } , int ) ; } } else { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . READ_EXTERNAL_STORAGE } , int ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Intent com.zeapo.pwdstore.Intent = new Intent ( getApplicationContext ( ) , FilePickerActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_ALLOW_MULTIPLE , false ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_ALLOW_CREATE_DIR , false ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_MODE , FilePickerActivity . MODE_FILE ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_START_PATH , Environment . getExternalStorageDirectory ( ) . getPath ( ) ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final Activity com.zeapo.pwdstore.Activity = this ; if ( ContextCompat . checkSelfPermission ( com.zeapo.pwdstore.Activity , Manifest . permission . WRITE_EXTERNAL_STORAGE ) != PackageManager . PERMISSION_GRANTED ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( com.zeapo.pwdstore.Activity , Manifest . permission . WRITE_EXTERNAL_STORAGE ) ) { Snackbar com.zeapo.pwdstore.Snackbar = Snackbar . make ( com.zeapo.pwdstore.UserPreference.PrefsFragment . getView ( ) , STRING , Snackbar . LENGTH_INDEFINITE ) . setAction ( R . string . dialog_ok , new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . WRITE_EXTERNAL_STORAGE } , int ) ; } } ) ; com.zeapo.pwdstore.Snackbar . show ( ) ; View com.zeapo.pwdstore.View = com.zeapo.pwdstore.Snackbar . getView ( ) ; TextView com.zeapo.pwdstore.TextView = ( TextView ) com.zeapo.pwdstore.View . findViewById ( android . support . design . R . id . snackbar_text ) ; com.zeapo.pwdstore.TextView . setTextColor ( Color . WHITE ) ; com.zeapo.pwdstore.TextView . setMaxLines ( NUMBER ) ; } else { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . WRITE_EXTERNAL_STORAGE } , int ) ; } } else { Intent com.zeapo.pwdstore.Intent = new Intent ( getApplicationContext ( ) , FilePickerActivity .class ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_ALLOW_MULTIPLE , false ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_ALLOW_CREATE_DIR , true ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_MODE , FilePickerActivity . MODE_DIR ) ; com.zeapo.pwdstore.Intent . putExtra ( FilePickerActivity . EXTRA_START_PATH , Environment . getExternalStorageDirectory ( ) . getPath ( ) ) ; startActivityForResult ( com.zeapo.pwdstore.Intent , int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.View ) { ActivityCompat . requestPermissions ( com.zeapo.pwdstore.Activity , new java.lang.String [] { Manifest . permission . WRITE_EXTERNAL_STORAGE } , int ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { Intent com.zeapo.pwdstore.Intent = new Intent ( getApplicationContext ( ) , SshKeyGen .class ) ; startActivity ( com.zeapo.pwdstore.Intent ) ; if ( ! boolean ) { setResult ( RESULT_OK ) ; finish ( ) ; } }  <METHOD_END>
<METHOD_START> private void void ( Uri com.zeapo.pwdstore.Uri ) throws java.io.IOException { java.io.InputStream java.io.InputStream = this . getContentResolver ( ) . openInputStream ( com.zeapo.pwdstore.Uri ) ; byte [] byte[] = IOUtils . toByteArray ( java.io.InputStream ) ; FileUtils . writeByteArrayToFile ( new java.io.File ( getFilesDir ( ) + STRING ) , byte[] ) ; java.io.InputStream . void ( ) ; }  <METHOD_END>
<METHOD_START> private boolean boolean ( ) { AccessibilityManager com.zeapo.pwdstore.AccessibilityManager = ( AccessibilityManager ) this . getSystemService ( Context . ACCESSIBILITY_SERVICE ) ; java.util.List<com.zeapo.pwdstore.AccessibilityServiceInfo> < AccessibilityServiceInfo > java.util.List<com.zeapo.pwdstore.AccessibilityServiceInfo> = com.zeapo.pwdstore.AccessibilityManager . getEnabledAccessibilityServiceList ( AccessibilityServiceInfo . FEEDBACK_GENERIC ) ; for ( AccessibilityServiceInfo com.zeapo.pwdstore.AccessibilityServiceInfo : java.util.List<com.zeapo.pwdstore.AccessibilityServiceInfo> ) { if ( STRING . boolean ( com.zeapo.pwdstore.AccessibilityServiceInfo . getId ( ) ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> protected void void ( int int , int int , Intent com.zeapo.pwdstore.Intent ) { if ( int == RESULT_OK ) { switch ( int ) { case int : { try { final Uri com.zeapo.pwdstore.Uri = com.zeapo.pwdstore.Intent . getData ( ) ; if ( com.zeapo.pwdstore.Uri == null ) { throw new java.io.IOException ( STRING ) ; } void ( com.zeapo.pwdstore.Uri ) ; Toast . makeText ( this , this . getResources ( ) . getString ( R . string . ssh_key_success_dialog_title ) , Toast . LENGTH_LONG ) . show ( ) ; SharedPreferences com.zeapo.pwdstore.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( getApplicationContext ( ) ) ; SharedPreferences . SharedPreferences SharedPreferences.Editor = com.zeapo.pwdstore.SharedPreferences . edit ( ) ; SharedPreferences.Editor . putBoolean ( STRING , false ) ; SharedPreferences.Editor . apply ( ) ; java.io.File java.io.File = new java.io.File ( getFilesDir ( ) + STRING ) ; java.io.File . boolean ( ) ; setResult ( RESULT_OK ) ; finish ( ) ; } catch ( java.io.IOException java.io.IOException ) { new AlertDialog . AlertDialog ( this ) . setTitle ( this . getResources ( ) . getString ( R . string . ssh_key_error_dialog_title ) ) . setMessage ( this . getResources ( ) . getString ( R . string . ssh_key_error_dialog_text ) + java.io.IOException . java.lang.String ( ) ) . setPositiveButton ( this . getResources ( ) . getString ( R . string . dialog_ok ) , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { } } ) . show ( ) ; } } break; case int : {                } break; case int : { final Uri com.zeapo.pwdstore.Uri = com.zeapo.pwdstore.Intent . getData ( ) ; if ( com.zeapo.pwdstore.Uri . getPath ( ) . equals ( Environment . getExternalStorageDirectory ( ) . getPath ( ) ) ) { new AlertDialog . AlertDialog ( this ) . setTitle ( STRING ) . setMessage ( STRING + STRING + STRING ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { PreferenceManager . getDefaultSharedPreferences ( getApplicationContext ( ) ) . edit ( ) . putString ( STRING , com.zeapo.pwdstore.Uri . getPath ( ) ) . apply ( ) ; } } ) . setNegativeButton ( R . string . dialog_cancel , null ) . show ( ) ; } else { PreferenceManager . getDefaultSharedPreferences ( getApplicationContext ( ) ) . edit ( ) . putString ( STRING , com.zeapo.pwdstore.Uri . getPath ( ) ) . apply ( ) ; } } break; case int : { final Uri com.zeapo.pwdstore.Uri = com.zeapo.pwdstore.Intent . getData ( ) ; final java.io.File java.io.File = PasswordRepository . getRepositoryDirectory ( getApplicationContext ( ) ) ; java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING , java.util.Locale . java.util.Locale ) ; java.util.Date java.util.Date = new java.util.Date ( ) ; java.lang.String java.lang.String = STRING + java.text.SimpleDateFormat . java.lang.String ( java.util.Date ) ; final java.io.File java.io.File = new java.io.File ( com.zeapo.pwdstore.Uri . getPath ( ) + java.lang.String ) ; if ( java.io.File != null ) { try { FileUtils . copyDirectory ( java.io.File , java.io.File , true ) ; } catch ( java.io.IOException java.io.IOException ) { Log . d ( STRING , STRING + java.io.IOException . java.lang.String ( ) ) ; } } } break; default: break; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.zeapo.pwdstore.DialogInterface , int int ) { PreferenceManager . getDefaultSharedPreferences ( getApplicationContext ( ) ) . edit ( ) . putString ( STRING , com.zeapo.pwdstore.Uri . getPath ( ) ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( int int , java.lang.String java.lang.String[] [] , int [] int[] ) { switch ( int ) { case int : { if ( int[] . int > NUMBER && int[] [ NUMBER ] == PackageManager . PERMISSION_GRANTED ) { void ( ) ; } } } }  <METHOD_END>
<METHOD_START> public void ( Activity com.zeapo.pwdstore.utils.Activity , java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ) { this . com.zeapo.pwdstore.utils.Activity = com.zeapo.pwdstore.utils.Activity ; this . java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> = java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> . size ( ) ; }  <METHOD_END>
<METHOD_START> public java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ( ) { return this . java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ; }  <METHOD_END>
<METHOD_START> public void void ( ) { this . java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> . clear ( ) ; this . notifyDataSetChanged ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ) { this . java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> . addAll ( java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ) ; this . notifyDataSetChanged ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( PasswordItem com.zeapo.pwdstore.utils.PasswordItem ) { this . java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> . add ( com.zeapo.pwdstore.utils.PasswordItem ) ; this . notifyItemInserted ( int ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { if ( ! java.util.Set<java.lang.Integer> . boolean ( int ) ) { java.util.Set<java.lang.Integer> . boolean ( int ) ; } }  <METHOD_END>
<METHOD_START> public void void ( int int , java.util.Set<java.lang.Integer> < java.lang.Integer > java.util.Set<java.lang.Integer> ) { java.util.Set<java.lang.Integer> < java.lang.Integer > java.util.Set<java.lang.Integer> = new java.util.TreeSet<java.lang.Integer> <> ( ) ; for ( int int : java.util.Set<java.lang.Integer> ) { if ( int > int ) { java.util.Set<java.lang.Integer> . boolean ( int - NUMBER ) ; } else { java.util.Set<java.lang.Integer> . boolean ( int ) ; } } java.util.Set<java.lang.Integer> . void ( ) ; java.util.Set<java.lang.Integer> . boolean ( java.util.Set<java.lang.Integer> ) ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> . remove ( int ) ; this . notifyItemRemoved ( int ) ; void ( int , java.util.Set<java.lang.Integer> ) ; }  <METHOD_END>
<METHOD_START> @ NonNull protected View . View.OnLongClickListener View.OnLongClickListener ( com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder , PasswordItem com.zeapo.pwdstore.utils.PasswordItem ) { return new View . View ( ) { @ java.lang.Override public boolean boolean ( View com.zeapo.pwdstore.utils.View ) { return false ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( View com.zeapo.pwdstore.utils.View ) { return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder , int int ) { final PasswordItem com.zeapo.pwdstore.utils.PasswordItem = java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ( ) . get ( int ) ; com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.TextView . setText ( com.zeapo.pwdstore.utils.PasswordItem . toString ( ) ) ; if ( com.zeapo.pwdstore.utils.PasswordItem . getType ( ) == PasswordItem . TYPE_CATEGORY ) { com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.ImageView . setImageResource ( R . drawable . ic_folder_grey600_24dp ) ; com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.TextView . setText ( com.zeapo.pwdstore.utils.PasswordItem . toString ( ) + STRING ) ; } else { com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.ImageView . setImageResource ( R . drawable . ic_action_secure ) ; com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.TextView . setText ( com.zeapo.pwdstore.utils.PasswordItem . toString ( ) ) ; } com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.TextView . setText ( com.zeapo.pwdstore.utils.PasswordItem . getFullPathToParent ( ) ) ; if ( com.zeapo.pwdstore.utils.PasswordItem . getType ( ) == PasswordItem . TYPE_CATEGORY ) { } else { } com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.View . setOnClickListener ( View.OnClickListener ( com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder , com.zeapo.pwdstore.utils.PasswordItem ) ) ; com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.View . setOnLongClickListener ( View.OnLongClickListener ( com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder , com.zeapo.pwdstore.utils.PasswordItem ) ) ; boolean boolean = java.util.Set<java.lang.Integer> . boolean ( int ) ; com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.View . setSelected ( boolean ) ; if ( boolean ) { com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . itemView . setBackgroundResource ( R . color . deep_orange_200 ) ; com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.TextView . setTextColor ( Color . BLACK ) ; } else { com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . itemView . setBackgroundResource ( Color . alpha ( NUMBER ) ) ; com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder . com.zeapo.pwdstore.utils.TextView . setTextColor ( ContextCompat . getColor ( com.zeapo.pwdstore.utils.Activity , R . color . grey_500 ) ) ; } }  <METHOD_END>
<METHOD_START> @ NonNull protected abstract View . View.OnClickListener View.OnClickListener ( com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder , PasswordItem com.zeapo.pwdstore.utils.PasswordItem );  <METHOD_END>
<METHOD_START> public void ( View com.zeapo.pwdstore.utils.View ) { super( com.zeapo.pwdstore.utils.View ); com.zeapo.pwdstore.utils.View = com.zeapo.pwdstore.utils.View ; com.zeapo.pwdstore.utils.TextView = ( TextView ) com.zeapo.pwdstore.utils.View . findViewById ( R . id . label ) ; com.zeapo.pwdstore.utils.TextView = ( TextView ) com.zeapo.pwdstore.utils.View . findViewById ( R . id . type ) ; com.zeapo.pwdstore.utils.ImageView = ( ImageView ) com.zeapo.pwdstore.utils.View . findViewById ( R . id . type_image ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public PasswordRecyclerAdapter . PasswordRecyclerAdapter.ViewHolder PasswordRecyclerAdapter.ViewHolder ( ViewGroup com.zeapo.pwdstore.utils.ViewGroup , int int ) { View com.zeapo.pwdstore.utils.View = LayoutInflater . from ( com.zeapo.pwdstore.utils.ViewGroup . getContext ( ) ) . inflate ( R . layout . password_row_layout , com.zeapo.pwdstore.utils.ViewGroup , false ) ; return new com.zeapo.pwdstore.utils.EntryRecyclerAdapter.ViewHolder ( com.zeapo.pwdstore.utils.View ) ; }  <METHOD_END>
<METHOD_START> public void ( PgpHandler com.zeapo.pwdstore.utils.PgpHandler , SelectFolderFragment . SelectFolderFragment SelectFolderFragment.OnFragmentInteractionListener , java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ) { super( com.zeapo.pwdstore.utils.PgpHandler , java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ); this . SelectFolderFragment.OnFragmentInteractionListener = SelectFolderFragment.OnFragmentInteractionListener ; }  <METHOD_END>
<METHOD_START> @ NonNull protected View . View.OnClickListener View.OnClickListener ( final ViewHolder com.zeapo.pwdstore.utils.ViewHolder , final PasswordItem com.zeapo.pwdstore.utils.PasswordItem ) { return new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.utils.View ) { SelectFolderFragment.OnFragmentInteractionListener . onFragmentInteraction ( com.zeapo.pwdstore.utils.PasswordItem ) ; notifyItemChanged ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.utils.View ) { SelectFolderFragment.OnFragmentInteractionListener . onFragmentInteraction ( com.zeapo.pwdstore.utils.PasswordItem ) ; notifyItemChanged ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String , com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem , char char , java.io.File java.io.File , java.io.File java.io.File ) { this . java.lang.String = java.lang.String ; this . com.zeapo.pwdstore.utils.PasswordItem = com.zeapo.pwdstore.utils.PasswordItem ; this . char = char ; this . java.io.File = java.io.File ; this . java.lang.String = java.io.File . java.lang.String ( ) . java.lang.String ( java.io.File . java.lang.String ( ) , STRING ) . java.lang.String ( java.io.File . java.lang.String ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> public static com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem ( java.lang.String java.lang.String , java.io.File java.io.File , com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem , java.io.File java.io.File ) { return new com.zeapo.pwdstore.utils.PasswordItem ( java.lang.String , com.zeapo.pwdstore.utils.PasswordItem , char , java.io.File , java.io.File ) ; }  <METHOD_END>
<METHOD_START> public static com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem ( java.lang.String java.lang.String , java.io.File java.io.File , java.io.File java.io.File ) { return new com.zeapo.pwdstore.utils.PasswordItem ( java.lang.String , null , char , java.io.File , java.io.File ) ; }  <METHOD_END>
<METHOD_START> public static com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem ( java.lang.String java.lang.String , java.io.File java.io.File , com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem , java.io.File java.io.File ) { return new com.zeapo.pwdstore.utils.PasswordItem ( java.lang.String , com.zeapo.pwdstore.utils.PasswordItem , char , java.io.File , java.io.File ) ; }  <METHOD_END>
<METHOD_START> public static com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem ( java.lang.String java.lang.String , java.io.File java.io.File , java.io.File java.io.File ) { return new com.zeapo.pwdstore.utils.PasswordItem ( java.lang.String , null , char , java.io.File , java.io.File ) ; }  <METHOD_END>
<METHOD_START> public char char ( ) { return this . char ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem ( ) { return this . com.zeapo.pwdstore.utils.PasswordItem ; }  <METHOD_END>
<METHOD_START> public java.io.File java.io.File ( ) { return this . java.io.File ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return this . java.lang.String ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return this . java.lang.String ( ) . java.lang.String ( STRING , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem = ( com.zeapo.pwdstore.utils.PasswordItem ) java.lang.Object ; return ( com.zeapo.pwdstore.utils.PasswordItem . java.io.File ( ) . boolean ( this . java.io.File ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( java.lang.Object java.lang.Object ) { com.zeapo.pwdstore.utils.PasswordItem com.zeapo.pwdstore.utils.PasswordItem = ( com.zeapo.pwdstore.utils.PasswordItem ) java.lang.Object ; return ( this . char ( ) + this . java.lang.String ( ) ) . int ( com.zeapo.pwdstore.utils.PasswordItem . char ( ) + com.zeapo.pwdstore.utils.PasswordItem . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> public void ( PasswordStore com.zeapo.pwdstore.utils.PasswordStore , PasswordFragment . PasswordFragment PasswordFragment.OnFragmentInteractionListener , java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ) { super( com.zeapo.pwdstore.utils.PasswordStore , java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ); this . com.zeapo.pwdstore.utils.PasswordStore = com.zeapo.pwdstore.utils.PasswordStore ; this . PasswordFragment.OnFragmentInteractionListener = PasswordFragment.OnFragmentInteractionListener ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ NonNull protected View . View.OnLongClickListener View.OnLongClickListener ( final ViewHolder com.zeapo.pwdstore.utils.ViewHolder , final PasswordItem com.zeapo.pwdstore.utils.PasswordItem ) { return new View . View ( ) { @ java.lang.Override public boolean boolean ( View com.zeapo.pwdstore.utils.View ) { if ( com.zeapo.pwdstore.utils.ActionMode != null ) { return false ; } toggleSelection ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; java.lang.Boolean = com.zeapo.pwdstore.utils.PasswordItem . getType ( ) == PasswordItem . TYPE_PASSWORD ; com.zeapo.pwdstore.utils.ActionMode = com.zeapo.pwdstore.utils.PasswordStore . startSupportActionMode ( ActionMode.Callback ) ; com.zeapo.pwdstore.utils.ActionMode . setTitle ( STRING + selectedItems . size ( ) ) ; com.zeapo.pwdstore.utils.ActionMode . invalidate ( ) ; notifyItemChanged ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; return true ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( View com.zeapo.pwdstore.utils.View ) { if ( com.zeapo.pwdstore.utils.ActionMode != null ) { return false ; } toggleSelection ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; java.lang.Boolean = com.zeapo.pwdstore.utils.PasswordItem . getType ( ) == PasswordItem . TYPE_PASSWORD ; com.zeapo.pwdstore.utils.ActionMode = com.zeapo.pwdstore.utils.PasswordStore . startSupportActionMode ( ActionMode.Callback ) ; com.zeapo.pwdstore.utils.ActionMode . setTitle ( STRING + selectedItems . size ( ) ) ; com.zeapo.pwdstore.utils.ActionMode . invalidate ( ) ; notifyItemChanged ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override @ NonNull protected View . View.OnClickListener View.OnClickListener ( final ViewHolder com.zeapo.pwdstore.utils.ViewHolder , final PasswordItem com.zeapo.pwdstore.utils.PasswordItem ) { return new View . View ( ) { @ java.lang.Override public void void ( View com.zeapo.pwdstore.utils.View ) { if ( com.zeapo.pwdstore.utils.ActionMode != null ) { toggleSelection ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; com.zeapo.pwdstore.utils.ActionMode . setTitle ( STRING + selectedItems . size ( ) ) ; if ( selectedItems . isEmpty ( ) ) { com.zeapo.pwdstore.utils.ActionMode . finish ( ) ; } else if ( selectedItems . size ( ) == NUMBER && ! java.lang.Boolean ) { if ( getValues ( ) . get ( selectedItems . iterator ( ) . next ( ) ) . getType ( ) == PasswordItem . TYPE_PASSWORD ) { java.lang.Boolean = true ; com.zeapo.pwdstore.utils.ActionMode . invalidate ( ) ; } } else if ( selectedItems . size ( ) >= NUMBER && java.lang.Boolean ) { java.lang.Boolean = false ; com.zeapo.pwdstore.utils.ActionMode . invalidate ( ) ; } } else { PasswordFragment.OnFragmentInteractionListener . onFragmentInteraction ( com.zeapo.pwdstore.utils.PasswordItem ) ; } notifyItemChanged ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; } } ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.zeapo.pwdstore.utils.View ) { if ( com.zeapo.pwdstore.utils.ActionMode != null ) { toggleSelection ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; com.zeapo.pwdstore.utils.ActionMode . setTitle ( STRING + selectedItems . size ( ) ) ; if ( selectedItems . isEmpty ( ) ) { com.zeapo.pwdstore.utils.ActionMode . finish ( ) ; } else if ( selectedItems . size ( ) == NUMBER && ! java.lang.Boolean ) { if ( getValues ( ) . get ( selectedItems . iterator ( ) . next ( ) ) . getType ( ) == PasswordItem . TYPE_PASSWORD ) { java.lang.Boolean = true ; com.zeapo.pwdstore.utils.ActionMode . invalidate ( ) ; } } else if ( selectedItems . size ( ) >= NUMBER && java.lang.Boolean ) { java.lang.Boolean = false ; com.zeapo.pwdstore.utils.ActionMode . invalidate ( ) ; } } else { PasswordFragment.OnFragmentInteractionListener . onFragmentInteraction ( com.zeapo.pwdstore.utils.PasswordItem ) ; } notifyItemChanged ( com.zeapo.pwdstore.utils.ViewHolder . getAdapterPosition ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ActionMode com.zeapo.pwdstore.utils.ActionMode , Menu com.zeapo.pwdstore.utils.Menu ) { com.zeapo.pwdstore.utils.ActionMode . getMenuInflater ( ) . inflate ( R . menu . context_pass , com.zeapo.pwdstore.utils.Menu ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ActionMode com.zeapo.pwdstore.utils.ActionMode , Menu com.zeapo.pwdstore.utils.Menu ) { if ( java.lang.Boolean ) { com.zeapo.pwdstore.utils.Menu . findItem ( R . id . menu_edit_password ) . setVisible ( true ) ; } else { com.zeapo.pwdstore.utils.Menu . findItem ( R . id . menu_edit_password ) . setVisible ( false ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( ActionMode com.zeapo.pwdstore.utils.ActionMode , MenuItem com.zeapo.pwdstore.utils.MenuItem ) { switch ( com.zeapo.pwdstore.utils.MenuItem . getItemId ( ) ) { case R . id . menu_delete_password : com.zeapo.pwdstore.utils.PasswordStore . deletePasswords ( com.zeapo.pwdstore.utils.PasswordRecyclerAdapter .this , new java.util.TreeSet <> ( selectedItems ) ) ; com.zeapo.pwdstore.utils.ActionMode . finish ( ) ; return true ; case R . id . menu_edit_password : com.zeapo.pwdstore.utils.PasswordStore . editPassword ( getValues ( ) . get ( selectedItems . iterator ( ) . next ( ) ) ) ; com.zeapo.pwdstore.utils.ActionMode . finish ( ) ; return true ; case R . id . menu_move_password : java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> = new java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> <> ( ) ; for ( java.lang.Integer java.lang.Integer : selectedItems ) { java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> . add ( getValues ( ) . get ( java.lang.Integer ) ) ; } com.zeapo.pwdstore.utils.PasswordStore . movePasswords ( java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ) ; default: return false ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ActionMode com.zeapo.pwdstore.utils.ActionMode ) { for ( java.util.Iterator<java.lang.Integer> < java.lang.Integer > java.util.Iterator<java.lang.Integer> = selectedItems . iterator ( ) ; java.util.Iterator<java.lang.Integer> . boolean ( ) ; ) { notifyItemChanged ( java.util.Iterator<java.lang.Integer> . java.lang.Integer ( ) ) ; java.util.Iterator<java.lang.Integer> . void ( ) ; } com.zeapo.pwdstore.utils.ActionMode = null ; }  <METHOD_END>
<METHOD_START> protected void ( ) {    }  <METHOD_END>
<METHOD_START> public static com.zeapo.pwdstore.utils.Repository com.zeapo.pwdstore.utils.Repository ( java.io.File java.io.File ) { if ( com.zeapo.pwdstore.utils.Repository == null && java.io.File != null ) { FileRepositoryBuilder com.zeapo.pwdstore.utils.FileRepositoryBuilder = new FileRepositoryBuilder ( ) ; try { com.zeapo.pwdstore.utils.Repository = com.zeapo.pwdstore.utils.FileRepositoryBuilder . setGitDir ( java.io.File ) . readEnvironment ( ) . build ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; return null ; } } return com.zeapo.pwdstore.utils.Repository ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { return com.zeapo.pwdstore.utils.Repository != null ; }  <METHOD_END>
<METHOD_START> public static void void ( java.io.File java.io.File ) throws java.lang.Exception { java.io.File . boolean ( ) ; Git . init ( ) . setDirectory ( java.io.File ) . call ( ) ; com.zeapo.pwdstore.utils.Repository ( java.io.File ) ; }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Boolean java.lang.Boolean ) { StoredConfig com.zeapo.pwdstore.utils.StoredConfig = com.zeapo.pwdstore.utils.Repository . getConfig ( ) ; java.util.Set<java.lang.String> < java.lang.String > java.util.Set<java.lang.String> = com.zeapo.pwdstore.utils.StoredConfig . getSubsections ( STRING ) ; if ( ! java.util.Set<java.lang.String> . boolean ( java.lang.String ) ) { try { URIish com.zeapo.pwdstore.utils.URIish = new URIish ( java.lang.String ) ; RefSpec com.zeapo.pwdstore.utils.RefSpec = new RefSpec ( STRING + java.lang.String + STRING ) ; RemoteConfig com.zeapo.pwdstore.utils.RemoteConfig = new RemoteConfig ( com.zeapo.pwdstore.utils.StoredConfig , java.lang.String ) ; com.zeapo.pwdstore.utils.RemoteConfig . addFetchRefSpec ( com.zeapo.pwdstore.utils.RefSpec ) ; com.zeapo.pwdstore.utils.RemoteConfig . addPushRefSpec ( com.zeapo.pwdstore.utils.RefSpec ) ; com.zeapo.pwdstore.utils.RemoteConfig . addURI ( com.zeapo.pwdstore.utils.URIish ) ; com.zeapo.pwdstore.utils.RemoteConfig . addPushURI ( com.zeapo.pwdstore.utils.URIish ) ; com.zeapo.pwdstore.utils.RemoteConfig . update ( com.zeapo.pwdstore.utils.StoredConfig ) ; com.zeapo.pwdstore.utils.StoredConfig . save ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } } else if ( java.lang.Boolean ) { try { URIish com.zeapo.pwdstore.utils.URIish = new URIish ( java.lang.String ) ; RemoteConfig com.zeapo.pwdstore.utils.RemoteConfig = new RemoteConfig ( com.zeapo.pwdstore.utils.StoredConfig , java.lang.String ) ; if ( com.zeapo.pwdstore.utils.RemoteConfig . getURIs ( ) . size ( ) > NUMBER ) { com.zeapo.pwdstore.utils.RemoteConfig . removeURI ( com.zeapo.pwdstore.utils.RemoteConfig . getURIs ( ) . get ( NUMBER ) ) ; } if ( com.zeapo.pwdstore.utils.RemoteConfig . getPushURIs ( ) . size ( ) > NUMBER ) { com.zeapo.pwdstore.utils.RemoteConfig . removePushURI ( com.zeapo.pwdstore.utils.RemoteConfig . getPushURIs ( ) . get ( NUMBER ) ) ; } com.zeapo.pwdstore.utils.RemoteConfig . addURI ( com.zeapo.pwdstore.utils.URIish ) ; com.zeapo.pwdstore.utils.RemoteConfig . addPushURI ( com.zeapo.pwdstore.utils.URIish ) ; com.zeapo.pwdstore.utils.RemoteConfig . update ( com.zeapo.pwdstore.utils.StoredConfig ) ; com.zeapo.pwdstore.utils.StoredConfig . save ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception . void ( ) ; } } }  <METHOD_END>
<METHOD_START> public static void void ( ) { if ( com.zeapo.pwdstore.utils.Repository != null ) com.zeapo.pwdstore.utils.Repository . close ( ) ; com.zeapo.pwdstore.utils.Repository = null ; }  <METHOD_END>
<METHOD_START> public static java.io.File java.io.File ( Context com.zeapo.pwdstore.utils.Context ) { java.io.File java.io.File = null ; SharedPreferences com.zeapo.pwdstore.utils.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( com.zeapo.pwdstore.utils.Context . getApplicationContext ( ) ) ; if ( com.zeapo.pwdstore.utils.SharedPreferences . getBoolean ( STRING , false ) ) { java.lang.String java.lang.String = com.zeapo.pwdstore.utils.SharedPreferences . getString ( STRING , null ) ; if ( java.lang.String != null ) { java.io.File = new java.io.File ( java.lang.String ) ; } } else { java.io.File = new java.io.File ( com.zeapo.pwdstore.utils.Context . getFilesDir ( ) + STRING ) ; } return java.io.File ; }  <METHOD_END>
<METHOD_START> public static com.zeapo.pwdstore.utils.Repository com.zeapo.pwdstore.utils.Repository ( Context com.zeapo.pwdstore.utils.Context ) { java.io.File java.io.File = java.io.File ( com.zeapo.pwdstore.utils.Context ) ; SharedPreferences com.zeapo.pwdstore.utils.SharedPreferences = PreferenceManager . getDefaultSharedPreferences ( com.zeapo.pwdstore.utils.Context . getApplicationContext ( ) ) ; if ( java.io.File == null ) { return null ; } if ( ! java.io.File . boolean ( ) || ! java.io.File . boolean ( ) || FileUtils . listFiles ( java.io.File , null , false ) . isEmpty ( ) ) { com.zeapo.pwdstore.utils.SharedPreferences . edit ( ) . putBoolean ( STRING , false ) . apply ( ) ; } if ( ! com.zeapo.pwdstore.utils.PasswordRepository . java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ( java.io.File ) . isEmpty ( ) ) { com.zeapo.pwdstore.utils.SharedPreferences . edit ( ) . putBoolean ( STRING , true ) . apply ( ) ; } return com.zeapo.pwdstore.utils.PasswordRepository . com.zeapo.pwdstore.utils.Repository ( new java.io.File ( java.io.File . java.lang.String ( ) + STRING ) ) ; }  <METHOD_END>
<METHOD_START> public static java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ( java.io.File java.io.File ) { return java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ( java.io.File , java.io.File ) ; }  <METHOD_END>
<METHOD_START> public static java.util.ArrayList<java.io.File> < java.io.File > java.util.ArrayList<java.io.File> ( java.io.File java.io.File ) { if ( ! java.io.File . boolean ( ) ) return new java.util.ArrayList<java.io.File> < java.io.File > ( ) ; Log . d ( STRING , STRING + java.io.File . java.lang.String ( ) ) ; java.util.ArrayList<java.io.File> < java.io.File > java.util.ArrayList<java.io.File> = new java.util.ArrayList<java.io.File> < java.io.File > ( java.util.Arrays . java.util.List<java.io.File> ( java.io.File . java.io.File[] ( ( java.io.FileFilter ) FileFilterUtils . directoryFileFilter ( ) ) ) ) ; java.util.ArrayList<java.io.File> . boolean ( new java.util.ArrayList<java.io.File> < java.io.File > ( ( java.util.List<java.io.File> < java.io.File > ) FileUtils . listFiles ( java.io.File , new java.lang.String [] { STRING } , false ) ) ) ; return new java.util.ArrayList<java.io.File> < java.io.File > ( java.util.ArrayList<java.io.File> ) ; }  <METHOD_END>
<METHOD_START> public static java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ( java.io.File java.io.File , java.io.File java.io.File ) { java.util.ArrayList<java.io.File> < java.io.File > java.util.ArrayList<java.io.File> = java.util.ArrayList<java.io.File> ( java.io.File ) ; if ( java.util.ArrayList<java.io.File> . int ( ) == NUMBER ) return new java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > ( ) ; java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> = new java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> < PasswordItem > ( ) ; for ( java.io.File java.io.File : java.util.ArrayList<java.io.File> ) { if ( java.io.File . boolean ( ) ) { java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> . add ( PasswordItem . newPassword ( java.io.File . java.lang.String ( ) , java.io.File , java.io.File ) ) ; } else { if ( java.io.File . java.lang.String ( ) . boolean ( STRING ) ) continue; java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> . add ( PasswordItem . newCategory ( java.io.File . java.lang.String ( ) , java.io.File , java.io.File ) ) ; } } void ( java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ) ; return java.util.ArrayList<com.zeapo.pwdstore.utils.PasswordItem> ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.security.NoSuchAlgorithmException { assertEquals ( STRING , MD5Hash . calculateMD5 ( STRING ) ) ; assertEquals ( STRING , MD5Hash . calculateMD5 ( STRING ) ) ; assertEquals ( STRING , MD5Hash . calculateMD5 ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; void ( getContext ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { void ( getContext ( ) ) ; super. tearDown ( ) ; }  <METHOD_END>
<METHOD_START> protected java.util.Random java.util.Random ( ) { return java.util.Random ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.test.unit.Context ) { WAILSettings . clearAllSettings ( com.artemzin.android.wail.test.unit.Context ) ; AppDBManager . getInstance ( com.artemzin.android.wail.test.unit.Context ) . clearAll ( ) ; assertEquals ( NUMBER , TracksDBHelper . getInstance ( com.artemzin.android.wail.test.unit.Context ) . getAllDesc ( ) . getCount ( ) ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.test.unit.factory.Track com.artemzin.android.wail.test.unit.factory.Track ( ) { Track com.artemzin.android.wail.test.unit.factory.Track = new Track ( ) ; com.artemzin.android.wail.test.unit.factory.Track . setTrack ( STRING + java.util.Random . int ( NUMBER ) ) ; com.artemzin.android.wail.test.unit.factory.Track . setArtist ( STRING + java.util.Random . int ( NUMBER ) ) ; com.artemzin.android.wail.test.unit.factory.Track . setAlbum ( STRING + java.util.Random . int ( NUMBER ) ) ; com.artemzin.android.wail.test.unit.factory.Track . setDuration ( java.util.Random . int ( NUMBER ) ) ; com.artemzin.android.wail.test.unit.factory.Track . setTimestamp ( java.lang.System . long ( ) ) ; com.artemzin.android.wail.test.unit.factory.Track . setState ( java.util.Random . int ( NUMBER ) ) ; com.artemzin.android.wail.test.unit.factory.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; com.artemzin.android.wail.test.unit.factory.Track . setPlayerPackageName ( STRING + java.util.Random . int ( NUMBER ) ) ; return com.artemzin.android.wail.test.unit.factory.Track ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Track com.artemzin.android.wail.test.unit.receiver.Track = TestTrackFactory . newTrackWithRandomData ( ) ; Intent com.artemzin.android.wail.test.unit.receiver.Intent = new Intent ( ) ; com.artemzin.android.wail.test.unit.receiver.Intent . putExtra ( CommonMusicAppReceiver . EXTRA_PLAYER_PACKAGE_NAME , com.artemzin.android.wail.test.unit.receiver.Track . getPlayerPackageName ( ) ) ; com.artemzin.android.wail.test.unit.receiver.Intent . putExtra ( CommonMusicAppReceiver . EXTRA_TRACK , com.artemzin.android.wail.test.unit.receiver.Track . getTrack ( ) ) ; com.artemzin.android.wail.test.unit.receiver.Intent . putExtra ( CommonMusicAppReceiver . EXTRA_ARTIST , com.artemzin.android.wail.test.unit.receiver.Track . getArtist ( ) ) ; com.artemzin.android.wail.test.unit.receiver.Intent . putExtra ( CommonMusicAppReceiver . EXTRA_ALBUM , com.artemzin.android.wail.test.unit.receiver.Track . getAlbum ( ) ) ; com.artemzin.android.wail.test.unit.receiver.Intent . putExtra ( CommonMusicAppReceiver . EXTRA_DURATION , com.artemzin.android.wail.test.unit.receiver.Track . getDuration ( ) ) ; com.artemzin.android.wail.test.unit.receiver.Intent . putExtra ( CommonMusicAppReceiver . EXTRA_TIMESTAMP , com.artemzin.android.wail.test.unit.receiver.Track . getTimestamp ( ) ) ; Track com.artemzin.android.wail.test.unit.receiver.Track = CommonMusicAppReceiver . parseFromIntentExtras ( com.artemzin.android.wail.test.unit.receiver.Intent ) ; assertEquals ( com.artemzin.android.wail.test.unit.receiver.Track . getPlayerPackageName ( ) , com.artemzin.android.wail.test.unit.receiver.Track . getPlayerPackageName ( ) ) ; assertEquals ( com.artemzin.android.wail.test.unit.receiver.Track . getTrack ( ) , com.artemzin.android.wail.test.unit.receiver.Track . getTrack ( ) ) ; assertEquals ( com.artemzin.android.wail.test.unit.receiver.Track . getArtist ( ) , com.artemzin.android.wail.test.unit.receiver.Track . getArtist ( ) ) ; assertEquals ( com.artemzin.android.wail.test.unit.receiver.Track . getAlbum ( ) , com.artemzin.android.wail.test.unit.receiver.Track . getAlbum ( ) ) ; assertEquals ( com.artemzin.android.wail.test.unit.receiver.Track . getDuration ( ) , com.artemzin.android.wail.test.unit.receiver.Track . getDuration ( ) ) ; assertEquals ( com.artemzin.android.wail.test.unit.receiver.Track . getTimestamp ( ) , com.artemzin.android.wail.test.unit.receiver.Track . getTimestamp ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertSame ( AppDBManager . getInstance ( getContext ( ) ) , AppDBManager . getInstance ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( AppDBManager . convertIntegerToBoolean ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( AppDBManager . convertIntegerToBoolean ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( AppDBManager . convertIntegerToBoolean ( getRandom ( ) . nextInt ( NUMBER ) + NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertFalse ( AppDBManager . convertIntegerToBoolean ( - NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertFalse ( AppDBManager . convertIntegerToBoolean ( - NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertFalse ( AppDBManager . convertIntegerToBoolean ( ( - NUMBER ) * ( getRandom ( ) . nextInt ( NUMBER ) + NUMBER ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNull ( AppDBManager . convertIntegerToBoolean ( NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( NUMBER , AppDBManager . convertBooleanToInteger ( null ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( NUMBER , AppDBManager . convertBooleanToInteger ( true ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( - NUMBER , AppDBManager . convertBooleanToInteger ( false ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertSame ( TracksDBHelper . getInstance ( getContext ( ) ) , TracksDBHelper . getInstance ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Track com.artemzin.android.wail.test.unit.storage.db.Track = TestTrackFactory . newTrackWithRandomData ( ) ; assertTrue ( TracksDBHelper . getInstance ( getContext ( ) ) . add ( com.artemzin.android.wail.test.unit.storage.db.Track ) != - NUMBER ) ; assertTrue ( com.artemzin.android.wail.test.unit.storage.db.Track . specialEquals ( TracksDBHelper . getInstance ( getContext ( ) ) . getLastAddedTrack ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Track com.artemzin.android.wail.test.unit.storage.db.Track = TestTrackFactory . newTrackWithRandomData ( ) ; final long long = TracksDBHelper . getInstance ( getContext ( ) ) . add ( com.artemzin.android.wail.test.unit.storage.db.Track ) ; assertTrue ( long != - NUMBER ) ; com.artemzin.android.wail.test.unit.storage.db.Track . setInternalDBId ( long ) ; com.artemzin.android.wail.test.unit.storage.db.Track . setDuration ( getRandom ( ) . nextLong ( ) ) ; com.artemzin.android.wail.test.unit.storage.db.Track . setArtist ( com.artemzin.android.wail.test.unit.storage.db.Track . getArtist ( ) + getRandom ( ) . nextFloat ( ) ) ; com.artemzin.android.wail.test.unit.storage.db.Track . setAlbum ( com.artemzin.android.wail.test.unit.storage.db.Track . getAlbum ( ) + getRandom ( ) . nextDouble ( ) ) ; com.artemzin.android.wail.test.unit.storage.db.Track . setPlayerPackageName ( com.artemzin.android.wail.test.unit.storage.db.Track . getPlayerPackageName ( ) + getRandom ( ) . nextGaussian ( ) ) ; assertTrue ( TracksDBHelper . getInstance ( getContext ( ) ) . update ( com.artemzin.android.wail.test.unit.storage.db.Track ) ) ; assertTrue ( com.artemzin.android.wail.test.unit.storage.db.Track . specialEquals ( TracksDBHelper . getInstance ( getContext ( ) ) . getLastAddedTrack ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Track com.artemzin.android.wail.test.unit.storage.db.Track = TestTrackFactory . newTrackWithRandomData ( ) ; final long long = TracksDBHelper . getInstance ( getContext ( ) ) . add ( com.artemzin.android.wail.test.unit.storage.db.Track ) ; assertTrue ( long != - NUMBER ) ; com.artemzin.android.wail.test.unit.storage.db.Track . setInternalDBId ( long ) ; assertTrue ( com.artemzin.android.wail.test.unit.storage.db.Track . specialEquals ( TracksDBHelper . getInstance ( getContext ( ) ) . getLastAddedTrack ( ) ) ) ; assertEquals ( NUMBER , TracksDBHelper . getInstance ( getContext ( ) ) . delete ( com.artemzin.android.wail.test.unit.storage.db.Track ) ) ; assertNull ( TracksDBHelper . getInstance ( getContext ( ) ) . getLastAddedTrack ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( NUMBER , TracksDBHelper . getInstance ( getContext ( ) ) . getAllDesc ( ) . getCount ( ) ) ; final int int = getRandom ( ) . nextInt ( NUMBER ) + NUMBER ; for ( int int = NUMBER ; int < int ; int ++ ) { TracksDBHelper . getInstance ( getContext ( ) ) . add ( TestTrackFactory . newTrackWithRandomData ( ) ) ; } assertEquals ( int , TracksDBHelper . getInstance ( getContext ( ) ) . getAllDesc ( ) . getCount ( ) ) ; assertEquals ( int , TracksDBHelper . getInstance ( getContext ( ) ) . deleteAll ( ) ) ; assertEquals ( NUMBER , TracksDBHelper . getInstance ( getContext ( ) ) . getAllDesc ( ) . getCount ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; clearAllWAILData ( getContext ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertFalse ( WAILSettings . isAuthorized ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { WAILSettings . setLastfmSessionKey ( getContext ( ) , STRING ) ; assertTrue ( WAILSettings . isAuthorized ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNotNull ( WAILSettings . getLastfmApiKey ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNotNull ( WAILSettings . getLastfmSecret ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertFalse ( WAILSettings . isEnabled ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertFalse ( WAILSettings . isEnabled ( getContext ( ) ) ) ; WAILSettings . setEnabled ( getContext ( ) , true ) ; assertTrue ( WAILSettings . isEnabled ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( WAILSettings . isStartOnBoot ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( WAILSettings . isStartOnBoot ( getContext ( ) ) ) ; WAILSettings . setStartOnBoot ( getContext ( ) , false ) ; assertFalse ( WAILSettings . isStartOnBoot ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNull ( WAILSettings . getLastfmSessionKey ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNull ( WAILSettings . getLastfmSessionKey ( getContext ( ) ) ) ; java.lang.String java.lang.String = STRING ; WAILSettings . setLastfmSessionKey ( getContext ( ) , java.lang.String ) ; assertEquals ( java.lang.String , WAILSettings . getLastfmSessionKey ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( WAILSettings . DEFAULT_MIN_TRACK_DURATION_IN_PERCENT , WAILSettings . getMinTrackDurationInPercents ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final int int = NUMBER ; assertTrue ( int != WAILSettings . getMinTrackDurationInPercents ( getContext ( ) ) ) ; WAILSettings . setMinTrackDurationInPercents ( getContext ( ) , int ) ; assertEquals ( int , WAILSettings . getMinTrackDurationInPercents ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( WAILSettings . DEFAULT_MIN_TRACK_DURATION_IN_SECONDS , WAILSettings . getMinTrackDurationInSeconds ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final int int = NUMBER ; assertTrue ( int != WAILSettings . getMinTrackDurationInSeconds ( getContext ( ) ) ) ; WAILSettings . setMinTrackDurationInSeconds ( getContext ( ) , int ) ; assertEquals ( int , WAILSettings . getMinTrackDurationInSeconds ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( NUMBER , WAILSettings . getTotalHandledTracksCount ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final long long = NUMBER ; assertTrue ( long != WAILSettings . getTotalHandledTracksCount ( getContext ( ) ) ) ; WAILSettings . setTotalHandledTracksCount ( getContext ( ) , long ) ; assertEquals ( long , WAILSettings . getTotalHandledTracksCount ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( WAILSettings . isLastfmNowplayingUpdateEnabled ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final boolean boolean = false ; assertTrue ( boolean != WAILSettings . isLastfmNowplayingUpdateEnabled ( getContext ( ) ) ) ; WAILSettings . setLastfmNowplayingUpdateEnabled ( getContext ( ) , boolean ) ; assertEquals ( boolean , WAILSettings . isLastfmNowplayingUpdateEnabled ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( STRING , WAILSettings . getLastfmUserName ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final java.lang.String java.lang.String = STRING ; assertFalse ( java.lang.String . boolean ( WAILSettings . getLastfmUserName ( getContext ( ) ) ) ) ; WAILSettings . setLastfmUserName ( getContext ( ) , java.lang.String ) ; assertEquals ( java.lang.String , WAILSettings . getLastfmUserName ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( WAILSettings . isFirstLaunch ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( WAILSettings . isFirstLaunch ( getContext ( ) ) ) ; WAILSettings . setIsFirstLaunch ( getContext ( ) , false ) ; assertFalse ( WAILSettings . isFirstLaunch ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNull ( WAILSettings . getLastCapturedTrackInfo ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNull ( WAILSettings . getLastCapturedTrackInfo ( getContext ( ) ) ) ; Track com.artemzin.android.wail.test.unit.storage.Track = TestTrackFactory . newTrackWithRandomData ( ) ; WAILService . WAILService WAILService.LastCapturedTrackInfo = new WAILService . WAILService ( com.artemzin.android.wail.test.unit.storage.Track , true ) ; WAILSettings . setLastCapturedTrackInfo ( getContext ( ) , WAILService.LastCapturedTrackInfo ) ; WAILService . WAILService WAILService.LastCapturedTrackInfo = WAILSettings . getLastCapturedTrackInfo ( getContext ( ) ) ; assertNotNull ( WAILService.LastCapturedTrackInfo ) ; assertTrue ( WAILService.LastCapturedTrackInfo . isPlaying ( ) ) ; assertEquals ( com.artemzin.android.wail.test.unit.storage.Track , WAILService.LastCapturedTrackInfo . getTrack ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNull ( WAILSettings . getLastfmUserInfo ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { final java.lang.String java.lang.String = STRING + STRING ; assertNull ( WAILSettings . getLastfmUserInfo ( getContext ( ) ) ) ; WAILSettings . setLastfmUserInfo ( getContext ( ) , java.lang.String ) ; assertEquals ( LFUserResponseModel . parseFromJSON ( java.lang.String ) , WAILSettings . getLastfmUserInfo ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( - NUMBER , WAILSettings . getLastfmUserInfoUpdateTimestamp ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { final long long = java.lang.System . long ( ) ; WAILSettings . setLastfmUserInfoUpdateTimestamp ( getContext ( ) , long ) ; assertEquals ( long , WAILSettings . getLastfmUserInfoUpdateTimestamp ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertFalse ( WAILSettings . isSoundNotificationTrackMarkedAsScrobbledEnabled ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { WAILSettings . setSoundNotificationTrackMarkedAsScrobbledEnabled ( getContext ( ) , true ) ; assertTrue ( WAILSettings . isSoundNotificationTrackMarkedAsScrobbledEnabled ( getContext ( ) ) ) ; WAILSettings . setSoundNotificationTrackMarkedAsScrobbledEnabled ( getContext ( ) , false ) ; assertFalse ( WAILSettings . isSoundNotificationTrackMarkedAsScrobbledEnabled ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertFalse ( WAILSettings . isSoundNotificationTrackSkippedEnabled ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { WAILSettings . setSoundNotificationTrackSkippedEnabled ( getContext ( ) , true ) ; assertTrue ( WAILSettings . isSoundNotificationTrackSkippedEnabled ( getContext ( ) ) ) ; WAILSettings . setSoundNotificationTrackSkippedEnabled ( getContext ( ) , false ) ; assertFalse ( WAILSettings . isSoundNotificationTrackSkippedEnabled ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertTrue ( WAILSettings . isShowFeedbackRequest ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { WAILSettings . setShowFeedbackRequest ( getContext ( ) , false ) ; assertFalse ( WAILSettings . isShowFeedbackRequest ( getContext ( ) ) ) ; WAILSettings . setShowFeedbackRequest ( getContext ( ) , true ) ; assertTrue ( WAILSettings . isShowFeedbackRequest ( getContext ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( - NUMBER , IntentUtil . getLongOrIntExtra ( null , - NUMBER , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( - NUMBER , IntentUtil . getLongOrIntExtra ( new Intent ( ) , - NUMBER , ( java.lang.String [] ) null ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Intent com.artemzin.android.wail.test.unit.util.Intent = new Intent ( ) ; assertEquals ( - NUMBER , IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.test.unit.util.Intent , - NUMBER , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Intent com.artemzin.android.wail.test.unit.util.Intent = new Intent ( ) ; short short = NUMBER ; com.artemzin.android.wail.test.unit.util.Intent . putExtra ( STRING , short ) ; assertEquals ( short , IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.test.unit.util.Intent , - NUMBER , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Intent com.artemzin.android.wail.test.unit.util.Intent = new Intent ( ) ; com.artemzin.android.wail.test.unit.util.Intent . putExtra ( STRING , NUMBER ) ; assertEquals ( NUMBER , IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.test.unit.util.Intent , - NUMBER , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Intent com.artemzin.android.wail.test.unit.util.Intent = new Intent ( ) ; com.artemzin.android.wail.test.unit.util.Intent . putExtra ( STRING , NUMBER ) ; assertEquals ( NUMBER , IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.test.unit.util.Intent , - NUMBER , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Intent com.artemzin.android.wail.test.unit.util.Intent = new Intent ( ) ; com.artemzin.android.wail.test.unit.util.Intent . putExtra ( STRING , STRING ) ; assertEquals ( - NUMBER , IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.test.unit.util.Intent , - NUMBER , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { Intent com.artemzin.android.wail.test.unit.util.Intent = new Intent ( ) ; com.artemzin.android.wail.test.unit.util.Intent . putExtra ( STRING , NUMBER ) ; assertEquals ( NUMBER , IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.test.unit.util.Intent , - NUMBER , STRING , STRING , STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( null , false , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) , false , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , false ) , true , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , true ) , false , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , - NUMBER ) , true , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , NUMBER ) , false , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , - NUMBER ) , true , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , NUMBER ) , false , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , new java.lang.Short ( STRING ) ) , true , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , new java.lang.Short ( STRING ) ) , false , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , new java.lang.Byte ( STRING ) ) , true , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , new java.lang.Byte ( STRING ) ) , false , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , - NUMBER ) . putExtra ( STRING , NUMBER ) . putExtra ( STRING , STRING ) , false , STRING , STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( java.lang.Boolean . java.lang.Boolean , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , - NUMBER ) . putExtra ( STRING , NUMBER ) . putExtra ( STRING , STRING ) , false , STRING , STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( null , IntentUtil . getBoolOrNumberAsBoolExtra ( new Intent ( ) . putExtra ( STRING , - NUMBER ) . putExtra ( STRING , NUMBER ) . putExtra ( STRING , STRING ) , null , STRING , STRING , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( STRING , IntentUtil . getIntentAsString ( null ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { assertEquals ( STRING , IntentUtil . getIntentAsString ( new Intent ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { java.lang.String java.lang.String = IntentUtil . getIntentAsString ( new Intent ( ) . putExtra ( STRING , STRING ) . putExtra ( STRING , NUMBER ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; assertTrue ( java.lang.String . boolean ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { final long long = java.lang.Math . long ( long ) ; if ( java.lang.String[] . int == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if ( java.lang.String[] . int == NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else if ( java.lang.String[] . int >= NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { if ( long == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else { return java.lang.String[] [ NUMBER ] ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { if ( long == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if( long > NUMBER & long < NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if ( long > NUMBER ) { if( long > NUMBER ) { long long = long % NUMBER ; if( long < NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else { return java.lang.String ( long % NUMBER , java.lang.String[] ) ; } } else { return java.lang.String ( long % NUMBER , java.lang.String[] ) ; } } else { return java.lang.String[] [ NUMBER ] ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static float float ( Context com.artemzin.android.bytes.ui.Context , final float float ) { return float * ( com.artemzin.android.bytes.ui.Context . getResources ( ) . getDisplayMetrics ( ) . densityDpi / NUMBER ) ; }  <METHOD_END>
<METHOD_START> public static float float ( Context com.artemzin.android.bytes.ui.Context , final float float ) { return float / ( com.artemzin.android.bytes.ui.Context . getResources ( ) . getDisplayMetrics ( ) . densityDpi / NUMBER ) ; }  <METHOD_END>
<METHOD_START> public static float float ( Context com.artemzin.android.bytes.ui.Context , final float float ) { return float * ( com.artemzin.android.bytes.ui.Context . getResources ( ) . getDisplayMetrics ( ) . scaledDensity ) ; }  <METHOD_END>
<METHOD_START> public static float float ( Context com.artemzin.android.bytes.ui.Context , final float float ) { return float / ( com.artemzin.android.bytes.ui.Context . getResources ( ) . getDisplayMetrics ( ) . scaledDensity ) ; }  <METHOD_END>
<METHOD_START> public static float float ( final float float ) { return float * ( Resources . getSystem ( ) . getDisplayMetrics ( ) . densityDpi / NUMBER ) ; }  <METHOD_END>
<METHOD_START> public static float float ( final float float ) { return float / ( Resources . getSystem ( ) . getDisplayMetrics ( ) . densityDpi / NUMBER ) ; }  <METHOD_END>
<METHOD_START> public static float float ( final float float ) { return float * ( Resources . getSystem ( ) . getDisplayMetrics ( ) . scaledDensity ) ; }  <METHOD_END>
<METHOD_START> public static float float ( final float float ) { return float / ( Resources . getSystem ( ) . getDisplayMetrics ( ) . scaledDensity ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static void void ( final View com.artemzin.android.bytes.ui.View , final boolean boolean ) { if ( com.artemzin.android.bytes.ui.View == null ) return; final int int = boolean ? View . VISIBLE : View . GONE ; if ( com.artemzin.android.bytes.ui.View . getVisibility ( ) != int ) { com.artemzin.android.bytes.ui.View . setVisibility ( int ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( final ViewGroup com.artemzin.android.bytes.ui.ViewGroup , final boolean boolean ) { for ( int int = NUMBER ; int < com.artemzin.android.bytes.ui.ViewGroup . getChildCount ( ) ; int ++ ) { final View com.artemzin.android.bytes.ui.View = com.artemzin.android.bytes.ui.ViewGroup . getChildAt ( int ) ; if ( com.artemzin.android.bytes.ui.View == null ) continue; com.artemzin.android.bytes.ui.View . setEnabled ( boolean ) ; if ( com.artemzin.android.bytes.ui.View instanceof ViewGroup ) { void ( ( ViewGroup ) com.artemzin.android.bytes.ui.View , boolean ) ; } } }  <METHOD_END>
<METHOD_START> public static void void ( final ViewGroup com.artemzin.android.bytes.ui.ViewGroup , final boolean boolean ) { for ( int int = NUMBER ; int < com.artemzin.android.bytes.ui.ViewGroup . getChildCount ( ) ; int ++ ) { final View com.artemzin.android.bytes.ui.View = com.artemzin.android.bytes.ui.ViewGroup . getChildAt ( int ) ; if ( com.artemzin.android.bytes.ui.View == null ) continue; com.artemzin.android.bytes.ui.View . setSelected ( boolean ) ; if ( com.artemzin.android.bytes.ui.View instanceof ViewGroup ) { void ( ( ViewGroup ) com.artemzin.android.bytes.ui.View , boolean ) ; } } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> protected void ( ) {}  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.LFApiException com.artemzin.android.wail.api.lastfm.LFApiException ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { final com.artemzin.android.wail.api.lastfm.LFApiException com.artemzin.android.wail.api.lastfm.LFApiException = new com.artemzin.android.wail.api.lastfm.LFApiException ( ) ; com.artemzin.android.wail.api.lastfm.LFApiException . java.lang.String = java.lang.String ; com.artemzin.android.wail.api.lastfm.LFApiException . java.lang.String = java.lang.String ; return com.artemzin.android.wail.api.lastfm.LFApiException ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.LFApiException com.artemzin.android.wail.api.lastfm.LFApiException ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { final com.artemzin.android.wail.api.lastfm.LFApiException com.artemzin.android.wail.api.lastfm.LFApiException = new com.artemzin.android.wail.api.lastfm.LFApiException ( ) ; com.artemzin.android.wail.api.lastfm.LFApiException . java.lang.String = java.lang.String ; com.artemzin.android.wail.api.lastfm.LFApiException . java.lang.String = java.lang.String ; return com.artemzin.android.wail.api.lastfm.LFApiException ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void ( ) {    }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.LFTokenResponseModel com.artemzin.android.wail.api.lastfm.LFTokenResponseModel ( java.lang.String java.lang.String , java.lang.String java.lang.String )            throws com.artemzin.android.wail.api.lastfm.LFApiException , com.artemzin.android.wail.api.lastfm.NetworkException { final java.lang.String java.lang.String = new LFRequestParamContainer ( STRING , java.lang.String ) . addParam ( LFApiCommon . PARAM_API_KEY , java.lang.String ) . generateRequestParamsAsStringWithSign ( ) ; return LFTokenResponseModel . parseFromJson ( NetworkRequest . newPostRequestInstance ( LFApiCommon . API_ROOT_URL , java.lang.String ) . getResponse ( ) ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.LFSessionResponseModel com.artemzin.android.wail.api.lastfm.LFSessionResponseModel ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String )            throws com.artemzin.android.wail.api.lastfm.LFApiException , com.artemzin.android.wail.api.lastfm.NetworkException { final java.lang.String java.lang.String = new LFRequestParamContainer ( STRING , java.lang.String ) . addParam ( STRING , java.lang.String ) . addParam ( LFApiCommon . PARAM_API_KEY , java.lang.String ) . generateRequestParamsAsStringWithSign ( ) ; return LFSessionResponseModel . parseFromJson ( NetworkRequest . newPostRequestInstance ( LFApiCommon . API_ROOT_URL , java.lang.String ) . getResponse ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.List<com.artemzin.android.wail.api.lastfm.LFArtistAndAlbumRequestModel> < LFArtistAndAlbumRequestModel > java.util.List<com.artemzin.android.wail.api.lastfm.LFArtistAndAlbumRequestModel> )            throws com.artemzin.android.wail.api.lastfm.NetworkException , com.artemzin.android.wail.api.lastfm.LFApiException { final LFRequestParamContainer com.artemzin.android.wail.api.lastfm.LFRequestParamContainer = new LFRequestParamContainer ( STRING , java.lang.String ) ; for ( int int = NUMBER ; int < java.util.List<com.artemzin.android.wail.api.lastfm.LFArtistAndAlbumRequestModel> . size ( ) ; int ++ ) { final LFArtistAndAlbumRequestModel com.artemzin.android.wail.api.lastfm.LFArtistAndAlbumRequestModel = java.util.List<com.artemzin.android.wail.api.lastfm.LFArtistAndAlbumRequestModel> . get ( int ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFArtistAndAlbumRequestModel . getArtist ( ) ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFArtistAndAlbumRequestModel . getAlbum ( ) ) ; } com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_API_KEY , java.lang.String ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_SK , java.lang.String ) ; return NetworkRequest . newPostRequestInstance ( LFApiCommon . API_ROOT_URL , com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . generateRequestParamsAsStringWithSign ( ) ) . getResponse ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer ( STRING , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.api.lastfm.LFRequestParamContainer com.artemzin.android.wail.api.lastfm.LFRequestParamContainer ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { java.util.Map<java.lang.String,java.lang.String> . java.lang.String ( java.lang.String . java.lang.String ( ) , java.lang.String ) ; return this ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) java.lang.Exception { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; final java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> < java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > > java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> = java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ; int int = NUMBER ; final int int = java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> . int ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ) { int ++ ; java.lang.StringBuilder . java.lang.StringBuilder ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( java.net.URLEncoder . java.lang.String ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) , STRING ) ) ; if ( int != int ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) java.lang.Exception { final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map.Entry<java.lang.String,java.lang.String> : java.util.Map<java.lang.String,java.lang.String> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.String>> ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) . java.lang.StringBuilder ( java.util.Map.Entry<java.lang.String,java.lang.String> . java.lang.String ( ) ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; return MD5Hash . calculateMD5 ( java.lang.StringBuilder . java.lang.String ( ) ) ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) java.lang.Exception { final java.lang.String java.lang.String = java.lang.String ( ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer ( STRING , STRING ) ; final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( java.lang.String ( ) ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( LFApiCommon . PARAM_API_SIG ) . append ( STRING ) . append ( java.lang.String ) ; return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { try { return java.lang.String ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> private void ( ) {    }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.LFScrobbleResponseModel com.artemzin.android.wail.api.lastfm.LFScrobbleResponseModel ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.util.List<com.artemzin.android.wail.api.lastfm.LFTrackRequestModel> < LFTrackRequestModel > java.util.List<com.artemzin.android.wail.api.lastfm.LFTrackRequestModel> )            throws com.artemzin.android.wail.api.lastfm.LFApiException , com.artemzin.android.wail.api.lastfm.NetworkException { LFRequestParamContainer com.artemzin.android.wail.api.lastfm.LFRequestParamContainer = new LFRequestParamContainer ( STRING , java.lang.String ) ; for ( int int = NUMBER ; int < java.util.List<com.artemzin.android.wail.api.lastfm.LFTrackRequestModel> . size ( ) ; int ++ ) { final LFTrackRequestModel com.artemzin.android.wail.api.lastfm.LFTrackRequestModel = java.util.List<com.artemzin.android.wail.api.lastfm.LFTrackRequestModel> . get ( int ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getArtist ( ) ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getTrack ( ) ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getTimeStamp ( ) . toString ( ) ) ; if ( ! TextUtils . isEmpty ( com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getAlbum ( ) ) ) { com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getAlbum ( ) ) ; } com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getChosenByUser ( ) . toString ( ) ) ; if ( com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getTrackNumber ( ) != null ) { com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getTrackNumber ( ) . toString ( ) ) ; } if ( com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getDuration ( ) != null ) { com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING + int + STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getDuration ( ) . toString ( ) ) ; } } com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_API_KEY , java.lang.String ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_SK , java.lang.String ) ; java.lang.String java.lang.String = NetworkRequest . newPostRequestInstance ( LFApiCommon . API_ROOT_URL , com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . generateRequestParamsAsStringWithSign ( ) ) . getResponse ( ) ; return LFScrobbleResponseModel . parseFromJSON ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.LFUpdateNowPlayingResponseModel com.artemzin.android.wail.api.lastfm.LFUpdateNowPlayingResponseModel ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , LFTrackRequestModel com.artemzin.android.wail.api.lastfm.LFTrackRequestModel )            throws com.artemzin.android.wail.api.lastfm.LFApiException , com.artemzin.android.wail.api.lastfm.NetworkException { LFRequestParamContainer com.artemzin.android.wail.api.lastfm.LFRequestParamContainer = new LFRequestParamContainer ( STRING , java.lang.String ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getArtist ( ) ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getTrack ( ) ) ; if ( ! TextUtils . isEmpty ( com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getAlbum ( ) ) ) { com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getAlbum ( ) ) ; } if ( com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getTrackNumber ( ) != null ) { com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getTrackNumber ( ) . toString ( ) ) ; } if ( com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getDuration ( ) != null ) { com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getDuration ( ) . toString ( ) ) ; } com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_API_KEY , java.lang.String ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_SK , java.lang.String ) ; java.lang.String java.lang.String = NetworkRequest . newPostRequestInstance ( LFApiCommon . API_ROOT_URL , com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . generateRequestParamsAsStringWithSign ( ) ) . getResponse ( ) ; return LFUpdateNowPlayingResponseModel . parseFromJSON ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.LFLoveTrackResponseModel com.artemzin.android.wail.api.lastfm.LFLoveTrackResponseModel ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , LFTrackRequestModel com.artemzin.android.wail.api.lastfm.LFTrackRequestModel )            throws com.artemzin.android.wail.api.lastfm.NetworkException , com.artemzin.android.wail.api.lastfm.LFApiException { LFRequestParamContainer com.artemzin.android.wail.api.lastfm.LFRequestParamContainer = new LFRequestParamContainer ( STRING , java.lang.String ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getArtist ( ) ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING , com.artemzin.android.wail.api.lastfm.LFTrackRequestModel . getTrack ( ) ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_API_KEY , java.lang.String ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_SK , java.lang.String ) ; java.lang.String java.lang.String = NetworkRequest . newPostRequestInstance ( LFApiCommon . API_ROOT_URL , com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . generateRequestParamsAsStringWithSign ( ) ) . getResponse ( ) ; return LFLoveTrackResponseModel . parseFromJSON ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String )            throws com.artemzin.android.wail.api.lastfm.LFApiException , com.artemzin.android.wail.api.lastfm.NetworkException { final LFRequestParamContainer com.artemzin.android.wail.api.lastfm.LFRequestParamContainer = new LFRequestParamContainer ( STRING , java.lang.String ) ; if ( ! TextUtils . isEmpty ( java.lang.String ) ) { com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( STRING , java.lang.String ) ; } com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_API_KEY , java.lang.String ) ; com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . addParam ( LFApiCommon . PARAM_SK , java.lang.String ) ; return NetworkRequest . newPostRequestInstance ( LFApiCommon . API_ROOT_URL , com.artemzin.android.wail.api.lastfm.LFRequestParamContainer . generateRequestParamsAsStringWithSign ( ) ) . getResponse ( ) ; }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> public void ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track ) { java.lang.String = com.artemzin.android.wail.storage.model.Track . getArtist ( ) ; java.lang.String = com.artemzin.android.wail.storage.model.Track . getTrack ( ) ; java.lang.Long = com.artemzin.android.wail.storage.model.Track . getTimestamp ( ) / NUMBER ; java.lang.String = com.artemzin.android.wail.storage.model.Track . getAlbum ( ) ; java.lang.Integer = ( int ) ( com.artemzin.android.wail.storage.model.Track . getDuration ( ) / NUMBER ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.Long java.lang.Long ( ) { return java.lang.Long ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Long java.lang.Long ) { this . java.lang.Long = java.lang.Long ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.Integer java.lang.Integer ( ) { return java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.Integer java.lang.Integer ) { this . java.lang.Integer = java.lang.Integer ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.api.lastfm.model.response.JSONObject com.artemzin.android.wail.api.lastfm.model.response.JSONObject ( ) { return com.artemzin.android.wail.api.lastfm.model.response.JSONObject ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { try { com.artemzin.android.wail.api.lastfm.model.response.JSONObject = new JSONObject ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { throw LFApiException . newDataFormatErrorInstance ( null , java.lang.Exception . java.lang.String ( ) ) ; } com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error = com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error . com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error ( com.artemzin.android.wail.api.lastfm.model.response.JSONObject ) ; if ( com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error != null ) { throw LFApiException . newIntance ( com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error . java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error . java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error ( JSONObject com.artemzin.android.wail.api.lastfm.model.response.JSONObject ) { final java.lang.String java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; if ( ! TextUtils . isEmpty ( java.lang.String ) ) { final com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error = new com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error ( ) ; com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error . java.lang.String = java.lang.String ; com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; return com.artemzin.android.wail.api.lastfm.model.response.LFBaseResponseModel.Error ; } return null ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.model.response.LFLoveTrackResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFLoveTrackResponseModel ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { final com.artemzin.android.wail.api.lastfm.model.response.LFLoveTrackResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFLoveTrackResponseModel = new com.artemzin.android.wail.api.lastfm.model.response.LFLoveTrackResponseModel ( java.lang.String ) ; com.artemzin.android.wail.api.lastfm.model.response.LFLoveTrackResponseModel . java.lang.String = java.lang.String ; return com.artemzin.android.wail.api.lastfm.model.response.LFLoveTrackResponseModel ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.model.response.LFScrobbleResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFScrobbleResponseModel ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { final com.artemzin.android.wail.api.lastfm.model.response.LFScrobbleResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFScrobbleResponseModel = new com.artemzin.android.wail.api.lastfm.model.response.LFScrobbleResponseModel ( java.lang.String ) ; com.artemzin.android.wail.api.lastfm.model.response.LFScrobbleResponseModel . java.lang.String = java.lang.String ; return com.artemzin.android.wail.api.lastfm.model.response.LFScrobbleResponseModel ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { try { final com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel = new com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel ( java.lang.String ) ; final JSONObject com.artemzin.android.wail.api.lastfm.model.response.JSONObject = com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel . getJsonObject ( ) . getJSONObject ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; return com.artemzin.android.wail.api.lastfm.model.response.LFSessionResponseModel ; } catch ( JSONException com.artemzin.android.wail.api.lastfm.model.response.JSONException ) { throw LFApiException . newDataFormatErrorInstance ( null , com.artemzin.android.wail.api.lastfm.model.response.JSONException . getMessage ( ) ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.model.response.LFTokenResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFTokenResponseModel ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { try { final com.artemzin.android.wail.api.lastfm.model.response.LFTokenResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFTokenResponseModel = new com.artemzin.android.wail.api.lastfm.model.response.LFTokenResponseModel ( java.lang.String ) ; final JSONObject com.artemzin.android.wail.api.lastfm.model.response.JSONObject = com.artemzin.android.wail.api.lastfm.model.response.LFTokenResponseModel . getJsonObject ( ) ; com.artemzin.android.wail.api.lastfm.model.response.LFTokenResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . getString ( STRING ) ; return com.artemzin.android.wail.api.lastfm.model.response.LFTokenResponseModel ; } catch ( JSONException com.artemzin.android.wail.api.lastfm.model.response.JSONException ) { throw LFApiException . newDataFormatErrorInstance ( null , com.artemzin.android.wail.api.lastfm.model.response.JSONException . getMessage ( ) ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.model.response.LFUpdateNowPlayingResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFUpdateNowPlayingResponseModel ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { final com.artemzin.android.wail.api.lastfm.model.response.LFUpdateNowPlayingResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFUpdateNowPlayingResponseModel = new com.artemzin.android.wail.api.lastfm.model.response.LFUpdateNowPlayingResponseModel ( java.lang.String ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUpdateNowPlayingResponseModel . java.lang.String = java.lang.String ; return com.artemzin.android.wail.api.lastfm.model.response.LFUpdateNowPlayingResponseModel ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ( JSONObject com.artemzin.android.wail.api.lastfm.model.response.JSONObject ) { try { com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered = new com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ( ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered . long = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optLong ( STRING ) ; return com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ) { com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered = ( com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ) java.lang.Object ; return TextUtils . equals ( java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered . java.lang.String ) && long == com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered . long ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = java.lang.String != null ? java.lang.String . int ( ) : NUMBER ; int = NUMBER * int + ( int ) ( long ^ ( long >>> NUMBER ) ) ; return int ; }  <METHOD_END>
<METHOD_START> protected void ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.lastfm.model.response.LFApiException { try { final com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel = new com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel ( java.lang.String ) ; final JSONObject com.artemzin.android.wail.api.lastfm.model.response.JSONObject = new JSONObject ( java.lang.String ) . getJSONObject ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optString ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . int = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optInt ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . int = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optInt ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . int = com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optInt ( STRING ) ; com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered = com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered . com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ( com.artemzin.android.wail.api.lastfm.model.response.JSONObject . optJSONObject ( STRING ) ) ; return com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel ; } catch ( JSONException com.artemzin.android.wail.api.lastfm.model.response.JSONException ) { throw LFApiException . newDataFormatErrorInstance ( null , com.artemzin.android.wail.api.lastfm.model.response.JSONException . getMessage ( ) ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ( ) { return com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ; }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ) { this . com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered = com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel ) { com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel = ( com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel ) java.lang.Object ; return TextUtils . equals ( java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . java.lang.String ) && int == com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . int && int == com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . int && int == com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . int && com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered . boolean ( com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel . com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { int int = java.lang.String != null ? java.lang.String . int ( ) : NUMBER ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + ( java.lang.String != null ? java.lang.String . int ( ) : NUMBER ) ; int = NUMBER * int + int ; int = NUMBER * int + int ; int = NUMBER * int + int ; int = NUMBER * int + ( com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered != null ? com.artemzin.android.wail.api.lastfm.model.response.LFUserResponseModel.Registered . int ( ) : NUMBER ) ; return int ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.String java.lang.String ) throws java.security.NoSuchAlgorithmException { try { final byte [] byte[] = java.security.MessageDigest . java.security.MessageDigest ( STRING ) . byte[] ( java.lang.String . byte[] ( STRING ) ) ; return java.lang.String . java.lang.String ( STRING , new java.math.BigInteger ( NUMBER , byte[] ) ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) { throw new java.lang.RuntimeException ( java.io.UnsupportedEncodingException ) ; } }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String ) { super( java.lang.String ); }  <METHOD_END>
<METHOD_START> private void ( java.lang.String java.lang.String , com.artemzin.android.wail.api.network.NetworkRequest.Method com.artemzin.android.wail.api.network.NetworkRequest.Method , java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.network.NetworkException { try { this . java.net.URL = new java.net.URL ( java.lang.String ) ; } catch ( java.net.MalformedURLException java.net.MalformedURLException ) { throw new NetworkException ( STRING + java.net.MalformedURLException . java.lang.String ( ) ) ; } this . com.artemzin.android.wail.api.network.NetworkRequest.Method = com.artemzin.android.wail.api.network.NetworkRequest.Method ; this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.network.NetworkRequest com.artemzin.android.wail.api.network.NetworkRequest ( java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.network.NetworkException { return new com.artemzin.android.wail.api.network.NetworkRequest ( java.lang.String , com.artemzin.android.wail.api.network.NetworkRequest.Method . com.artemzin.android.wail.api.network.NetworkRequest.Method , null ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.api.network.NetworkRequest com.artemzin.android.wail.api.network.NetworkRequest ( java.lang.String java.lang.String , java.lang.String java.lang.String ) throws com.artemzin.android.wail.api.network.NetworkException { return new com.artemzin.android.wail.api.network.NetworkRequest ( java.lang.String , com.artemzin.android.wail.api.network.NetworkRequest.Method . com.artemzin.android.wail.api.network.NetworkRequest.Method , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { boolean = boolean ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.net.URL . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) com.artemzin.android.wail.api.network.NetworkException { java.lang.String java.lang.String = null ; for ( int int = NUMBER ; int < int ; int ++ ) { try { java.lang.String = java.lang.String ( ) ; break; } catch ( javax.net.ssl.SSLException javax.net.ssl.SSLException ) { if ( int < int - NUMBER ) continue; throw new NetworkException ( STRING + javax.net.ssl.SSLException . java.lang.String ( ) ) ; } catch ( java.net.SocketException java.net.SocketException ) { if ( int < int - NUMBER ) continue; throw new NetworkException ( STRING + java.net.SocketException . java.lang.String ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { if ( int < int - NUMBER ) continue; throw new NetworkException ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( ) java.lang.Exception { java.net.HttpURLConnection java.net.HttpURLConnection = null ; try { java.net.HttpURLConnection = ( java.net.HttpURLConnection ) new java.net.URL ( java.net.URL . java.lang.String ( ) ) . java.net.URLConnection ( ) ; java.net.HttpURLConnection . void ( int ) ; java.net.HttpURLConnection . void ( int ) ; java.net.HttpURLConnection . void ( false ) ; java.net.HttpURLConnection . void ( true ) ; if ( boolean ) java.net.HttpURLConnection . void ( STRING , STRING ) ; if ( com.artemzin.android.wail.api.network.NetworkRequest.Method . boolean ( com.artemzin.android.wail.api.network.NetworkRequest.Method . com.artemzin.android.wail.api.network.NetworkRequest.Method ) ) { java.net.HttpURLConnection . void ( STRING ) ; java.net.HttpURLConnection . void ( false ) ; } else if ( com.artemzin.android.wail.api.network.NetworkRequest.Method . boolean ( com.artemzin.android.wail.api.network.NetworkRequest.Method . com.artemzin.android.wail.api.network.NetworkRequest.Method ) ) { java.net.HttpURLConnection . void ( STRING ) ; if ( java.lang.String != null ) { java.net.HttpURLConnection . void ( true ) ; final java.io.OutputStream java.io.OutputStream = java.net.HttpURLConnection . java.io.OutputStream ( ) ; final java.io.BufferedWriter java.io.BufferedWriter = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( java.io.OutputStream ) ) ; java.io.BufferedWriter . void ( java.lang.String ) ; java.io.BufferedWriter . void ( ) ; } } final int int = java.net.HttpURLConnection . int ( ) ; if ( int == - NUMBER ) throw new java.lang.Exception ( STRING ) ; java.io.InputStream java.io.InputStream = new java.io.BufferedInputStream ( java.net.HttpURLConnection . java.io.InputStream ( ) , NUMBER ) ; final java.lang.String java.lang.String = java.net.HttpURLConnection . java.lang.String ( ) ; if ( java.lang.String != null && java.lang.String . boolean ( STRING ) ) java.io.InputStream = new java.util.zip.GZIPInputStream ( java.io.InputStream ) ; return Util . convertStreamToString ( java.io.InputStream ) ; } finally { if ( java.net.HttpURLConnection != null ) java.net.HttpURLConnection . void ( ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader ( java.io.InputStream ) ; java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; char [] char[] = new char [ NUMBER ] ; try { for ( int int ; ( int = java.io.InputStreamReader . int ( char[] ) ) != - NUMBER ;) java.io.StringWriter . void ( char[] , NUMBER , int ) ; } finally { try { java.io.InputStream . void ( ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } } return java.io.StringWriter . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private void ( Context com.artemzin.android.wail.notifications.Context ) { this . com.artemzin.android.wail.notifications.Context = com.artemzin.android.wail.notifications.Context . getApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.notifications.SoundNotificationsManager com.artemzin.android.wail.notifications.SoundNotificationsManager ( Context com.artemzin.android.wail.notifications.Context ) { if ( com.artemzin.android.wail.notifications.SoundNotificationsManager == null ) { synchronized ( com.artemzin.android.wail.notifications.SoundNotificationsManager .class ) { if ( com.artemzin.android.wail.notifications.SoundNotificationsManager == null ) { com.artemzin.android.wail.notifications.SoundNotificationsManager = new com.artemzin.android.wail.notifications.SoundNotificationsManager ( com.artemzin.android.wail.notifications.Context ) ; } } } return com.artemzin.android.wail.notifications.SoundNotificationsManager ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( false ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( ! boolean && ! WAILSettings . isSoundNotificationTrackSkippedEnabled ( com.artemzin.android.wail.notifications.Context ) ) { Loggi . w ( STRING ) ; return; } if ( SystemClock . elapsedRealtime ( ) - long < NUMBER ) { return; } long = SystemClock . elapsedRealtime ( ) ; AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Object , java.lang.Object , java.lang.Object > ( ) { volatile com.artemzin.android.wail.notifications.MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ; @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object ... java.lang.Object[] ) { final long long = SystemClock . elapsedRealtime ( ) ; try { com.artemzin.android.wail.notifications.MediaPlayer = MediaPlayer . create ( com.artemzin.android.wail.notifications.Context , R . raw . track_skipped ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } ThreadUtil . sleepIfRequired ( long , NUMBER ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { super. onPostExecute ( java.lang.Object ) ; if ( com.artemzin.android.wail.notifications.MediaPlayer == null ) return; try { com.artemzin.android.wail.notifications.MediaPlayer . setOnCompletionListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public void void ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; } } ) ; com.artemzin.android.wail.notifications.MediaPlayer . setOnErrorListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public boolean boolean ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer , int int , int int ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; return false ; } } ) ; com.artemzin.android.wail.notifications.MediaPlayer . setVolume ( NUMBER , NUMBER ) ; com.artemzin.android.wail.notifications.MediaPlayer . start ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object ... java.lang.Object[] ) { final long long = SystemClock . elapsedRealtime ( ) ; try { com.artemzin.android.wail.notifications.MediaPlayer = MediaPlayer . create ( com.artemzin.android.wail.notifications.Context , R . raw . track_skipped ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } ThreadUtil . sleepIfRequired ( long , NUMBER ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { super. onPostExecute ( java.lang.Object ) ; if ( com.artemzin.android.wail.notifications.MediaPlayer == null ) return; try { com.artemzin.android.wail.notifications.MediaPlayer . setOnCompletionListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public void void ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; } } ) ; com.artemzin.android.wail.notifications.MediaPlayer . setOnErrorListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public boolean boolean ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer , int int , int int ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; return false ; } } ) ; com.artemzin.android.wail.notifications.MediaPlayer . setVolume ( NUMBER , NUMBER ) ; com.artemzin.android.wail.notifications.MediaPlayer . start ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer , int int , int int ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; return false ; }  <METHOD_END>
<METHOD_START> public void void ( ) { void ( false ) ; }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { if ( ! boolean && ! WAILSettings . isSoundNotificationTrackMarkedAsScrobbledEnabled ( com.artemzin.android.wail.notifications.Context ) ) { Loggi . w ( STRING ) ; return; } AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { volatile com.artemzin.android.wail.notifications.MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ; @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { final long long = SystemClock . elapsedRealtime ( ) ; try { com.artemzin.android.wail.notifications.MediaPlayer = MediaPlayer . create ( com.artemzin.android.wail.notifications.Context , R . raw . track_marked_as_scrobbled ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } ThreadUtil . sleepIfRequired ( long , NUMBER ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { super. onPostExecute ( java.lang.Void ) ; if ( com.artemzin.android.wail.notifications.MediaPlayer == null ) return; try { com.artemzin.android.wail.notifications.MediaPlayer . setOnCompletionListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public void void ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; } } ) ; com.artemzin.android.wail.notifications.MediaPlayer . setOnErrorListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public boolean boolean ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer , int int , int int ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; return false ; } } ) ; com.artemzin.android.wail.notifications.MediaPlayer . setVolume ( NUMBER , NUMBER ) ; com.artemzin.android.wail.notifications.MediaPlayer . start ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { final long long = SystemClock . elapsedRealtime ( ) ; try { com.artemzin.android.wail.notifications.MediaPlayer = MediaPlayer . create ( com.artemzin.android.wail.notifications.Context , R . raw . track_marked_as_scrobbled ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } ThreadUtil . sleepIfRequired ( long , NUMBER ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { super. onPostExecute ( java.lang.Void ) ; if ( com.artemzin.android.wail.notifications.MediaPlayer == null ) return; try { com.artemzin.android.wail.notifications.MediaPlayer . setOnCompletionListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public void void ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; } } ) ; com.artemzin.android.wail.notifications.MediaPlayer . setOnErrorListener ( new MediaPlayer . MediaPlayer ( ) { @ java.lang.Override public boolean boolean ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer , int int , int int ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; return false ; } } ) ; com.artemzin.android.wail.notifications.MediaPlayer . setVolume ( NUMBER , NUMBER ) ; com.artemzin.android.wail.notifications.MediaPlayer . start ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer , int int , int int ) { void ( com.artemzin.android.wail.notifications.MediaPlayer ) ; return false ; }  <METHOD_END>
<METHOD_START> private static void void ( MediaPlayer com.artemzin.android.wail.notifications.MediaPlayer ) { try { com.artemzin.android.wail.notifications.MediaPlayer . reset ( ) ; com.artemzin.android.wail.notifications.MediaPlayer . release ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . w ( STRING ) ; } }  <METHOD_END>
<METHOD_START> private void ( Context com.artemzin.android.wail.notifications.Context ) { this . com.artemzin.android.wail.notifications.Context = com.artemzin.android.wail.notifications.Context ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.notifications.StatusBarNotificationsManager com.artemzin.android.wail.notifications.StatusBarNotificationsManager ( Context com.artemzin.android.wail.notifications.Context ) { if ( com.artemzin.android.wail.notifications.StatusBarNotificationsManager == null ) { synchronized ( com.artemzin.android.wail.notifications.StatusBarNotificationsManager .class ) { if ( com.artemzin.android.wail.notifications.StatusBarNotificationsManager == null ) { com.artemzin.android.wail.notifications.StatusBarNotificationsManager = new com.artemzin.android.wail.notifications.StatusBarNotificationsManager ( com.artemzin.android.wail.notifications.Context ) ; } } } return com.artemzin.android.wail.notifications.StatusBarNotificationsManager ; }  <METHOD_END>
<METHOD_START> private com.artemzin.android.wail.notifications.NotificationManager com.artemzin.android.wail.notifications.NotificationManager ( ) { return ( NotificationManager ) com.artemzin.android.wail.notifications.Context . getSystemService ( Activity . NOTIFICATION_SERVICE ) ; }  <METHOD_END>
<METHOD_START> public void void ( Track com.artemzin.android.wail.notifications.Track ) { if ( ! WAILSettings . isStatusBarNotificationTrackScrobblingEnabled ( com.artemzin.android.wail.notifications.Context ) ) { Loggi . i ( STRING ) ; return; } Intent com.artemzin.android.wail.notifications.Intent = new Intent ( com.artemzin.android.wail.notifications.Context , MainActivity .class ) ; TaskStackBuilder com.artemzin.android.wail.notifications.TaskStackBuilder = TaskStackBuilder . create ( com.artemzin.android.wail.notifications.Context ) ; com.artemzin.android.wail.notifications.TaskStackBuilder . addParentStack ( MainActivity .class ) ; com.artemzin.android.wail.notifications.TaskStackBuilder . addNextIntent ( com.artemzin.android.wail.notifications.Intent ) ; PendingIntent com.artemzin.android.wail.notifications.PendingIntent = com.artemzin.android.wail.notifications.TaskStackBuilder . getPendingIntent ( NUMBER , PendingIntent . FLAG_UPDATE_CURRENT ) ; Intent com.artemzin.android.wail.notifications.Intent = new Intent ( com.artemzin.android.wail.notifications.Context , NotificationActionsReceiver .class ) ; PendingIntent com.artemzin.android.wail.notifications.PendingIntent = PendingIntent . getBroadcast ( com.artemzin.android.wail.notifications.Context , NUMBER , com.artemzin.android.wail.notifications.Intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; boolean boolean = WAILSettings . isStatusBarNotificationMinPriority ( com.artemzin.android.wail.notifications.Context ) ; Notification com.artemzin.android.wail.notifications.Notification = new NotificationCompat . NotificationCompat ( com.artemzin.android.wail.notifications.Context ) . setPriority ( boolean ? - NUMBER : NUMBER ) . setContentTitle ( com.artemzin.android.wail.notifications.Context . getString ( R . string . notifications_now_scrobbling ) ) . setContentText ( com.artemzin.android.wail.notifications.Track . getArtist ( ) + STRING + com.artemzin.android.wail.notifications.Track . getTrack ( ) ) . setSmallIcon ( R . drawable . ic_status_wail_notifications ) . setContentIntent ( com.artemzin.android.wail.notifications.PendingIntent ) . addAction ( R . drawable . ic_status_wail_love_track , com.artemzin.android.wail.notifications.Context . getString ( R . string . notifications_love_current_track ) , com.artemzin.android.wail.notifications.PendingIntent ) . build ( ) ; notification . flags = Notification . FLAG_ONGOING_EVENT ; com.artemzin.android.wail.notifications.NotificationManager ( ) . notify ( int , com.artemzin.android.wail.notifications.Notification ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( ! WAILSettings . isStatusBarNotificationTrackScrobblingEnabled ( com.artemzin.android.wail.notifications.Context ) ) { Loggi . i ( STRING ) ; return; } com.artemzin.android.wail.notifications.NotificationManager ( ) . cancel ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( Track com.artemzin.android.wail.notifications.Track ) { Notification com.artemzin.android.wail.notifications.Notification = new NotificationCompat . NotificationCompat ( com.artemzin.android.wail.notifications.Context ) . setContentTitle ( com.artemzin.android.wail.notifications.Context . getString ( R . string . notifications_track_loved ) ) . setContentText ( com.artemzin.android.wail.notifications.Track . getArtist ( ) + STRING + com.artemzin.android.wail.notifications.Track . getTrack ( ) ) . setSmallIcon ( R . drawable . ic_status_wail_notifications ) . build ( ) ; com.artemzin.android.wail.notifications.NotificationManager ( ) . notify ( int , com.artemzin.android.wail.notifications.Notification ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.artemzin.android.wail.notifications.NotificationManager ( ) . cancel ( int ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { com.artemzin.android.wail.notifications.NotificationManager ( ) . cancelAll ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context com.artemzin.android.wail.receiver.Context , Intent com.artemzin.android.wail.receiver.Intent ) { if ( NetworkUtil . isAvailable ( com.artemzin.android.wail.receiver.Context ) ) { if ( ! WAILSettings . isEnableScrobblingOverMobileNetwork ( com.artemzin.android.wail.receiver.Context ) && NetworkUtil . isMobileNetwork ( com.artemzin.android.wail.receiver.Context ) ) { return; } com.artemzin.android.wail.receiver.Context . startService ( new Intent ( com.artemzin.android.wail.receiver.Context , WAILService .class ) . setAction ( WAILService . INTENT_ACTION_SCROBBLE_PENDING_TRACKS ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context com.artemzin.android.wail.receiver.Context , Intent com.artemzin.android.wail.receiver.Intent ) { Loggi . i ( STRING ) ; if ( WAILSettings . isStartOnBoot ( com.artemzin.android.wail.receiver.Context ) ) { Loggi . w ( STRING ) ; com.artemzin.android.wail.receiver.Context . startService ( new Intent ( com.artemzin.android.wail.receiver.Context , WAILService .class ) ) ; } else { Loggi . w ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { final Intent com.artemzin.android.wail.receiver.music.Intent = super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) ; if ( com.artemzin.android.wail.receiver.music.Intent != null && com.artemzin.android.wail.receiver.music.Intent . hasExtra ( STRING ) ) { com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; } return com.artemzin.android.wail.receiver.music.Intent ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public final void void ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { void ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) ; }  <METHOD_END>
<METHOD_START> protected final com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context ) { return new Intent ( com.artemzin.android.wail.receiver.music.Context , WAILService .class ) ; }  <METHOD_END>
<METHOD_START> private void void ( final Context com.artemzin.android.wail.receiver.music.Context , final Intent com.artemzin.android.wail.receiver.music.Intent ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , Intent > ( ) { @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( java.lang.Void ... java.lang.Void[] ) { try { try { Loggi . d ( STRING + IntentUtil . getIntentAsString ( com.artemzin.android.wail.receiver.music.Intent ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING ) ; } if ( com.artemzin.android.wail.receiver.music.Intent == null ) { Loggi . e ( STRING ) ; return null ; } if ( TextUtils . isEmpty ( com.artemzin.android.wail.receiver.music.Intent . getAction ( ) ) || com.artemzin.android.wail.receiver.music.Intent . getAction ( ) . indexOf ( '.' ) == - NUMBER ) { Loggi . e ( STRING + com.artemzin.android.wail.receiver.music.Intent . getAction ( ) ) ; return null ; } if ( com.artemzin.android.wail.receiver.music.Intent . getExtras ( ) == null || com.artemzin.android.wail.receiver.music.Intent . getExtras ( ) . size ( ) == NUMBER ) { Loggi . e ( STRING ) ; return null ; } if ( isInitialStickyBroadcast ( ) ) { Loggi . w ( STRING ) ; return null ; } final Intent com.artemzin.android.wail.receiver.music.Intent = com.artemzin.android.wail.receiver.music.Intent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) ; if ( com.artemzin.android.wail.receiver.music.Intent != null ) { com.artemzin.android.wail.receiver.music.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_TRACK ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , com.artemzin.android.wail.receiver.music.Intent . getAction ( ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , java.lang.System . long ( ) ) ; return com.artemzin.android.wail.receiver.music.Intent ; } else { Loggi . w ( STRING ) ; return null ; } } catch ( java.lang.Exception java.lang.Exception ) { final java.lang.String java.lang.String = STRING + StackTraceUtil . getStackTrace ( java.lang.Exception ) ; Loggi . e ( java.lang.String ) ; EasyTracker . getInstance ( com.artemzin.android.wail.receiver.music.Context ) . send ( MapBuilder . createException ( java.lang.String , false ) . build ( ) ) ; return null ; } } @ java.lang.Override protected void void ( Intent com.artemzin.android.wail.receiver.music.Intent ) { if ( com.artemzin.android.wail.receiver.music.Intent != null ) { com.artemzin.android.wail.receiver.music.Context . startService ( com.artemzin.android.wail.receiver.music.Intent ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( java.lang.Void ... java.lang.Void[] ) { try { try { Loggi . d ( STRING + IntentUtil . getIntentAsString ( com.artemzin.android.wail.receiver.music.Intent ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING ) ; } if ( com.artemzin.android.wail.receiver.music.Intent == null ) { Loggi . e ( STRING ) ; return null ; } if ( TextUtils . isEmpty ( com.artemzin.android.wail.receiver.music.Intent . getAction ( ) ) || com.artemzin.android.wail.receiver.music.Intent . getAction ( ) . indexOf ( '.' ) == - NUMBER ) { Loggi . e ( STRING + com.artemzin.android.wail.receiver.music.Intent . getAction ( ) ) ; return null ; } if ( com.artemzin.android.wail.receiver.music.Intent . getExtras ( ) == null || com.artemzin.android.wail.receiver.music.Intent . getExtras ( ) . size ( ) == NUMBER ) { Loggi . e ( STRING ) ; return null ; } if ( isInitialStickyBroadcast ( ) ) { Loggi . w ( STRING ) ; return null ; } final Intent com.artemzin.android.wail.receiver.music.Intent = com.artemzin.android.wail.receiver.music.Intent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) ; if ( com.artemzin.android.wail.receiver.music.Intent != null ) { com.artemzin.android.wail.receiver.music.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_TRACK ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , com.artemzin.android.wail.receiver.music.Intent . getAction ( ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , java.lang.System . long ( ) ) ; return com.artemzin.android.wail.receiver.music.Intent ; } else { Loggi . w ( STRING ) ; return null ; } } catch ( java.lang.Exception java.lang.Exception ) { final java.lang.String java.lang.String = STRING + StackTraceUtil . getStackTrace ( java.lang.Exception ) ; Loggi . e ( java.lang.String ) ; EasyTracker . getInstance ( com.artemzin.android.wail.receiver.music.Context ) . send ( MapBuilder . createException ( java.lang.String , false ) . build ( ) ) ; return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Intent com.artemzin.android.wail.receiver.music.Intent ) { if ( com.artemzin.android.wail.receiver.music.Intent != null ) { com.artemzin.android.wail.receiver.music.Context . startService ( com.artemzin.android.wail.receiver.music.Intent ) ; } }  <METHOD_END>
<METHOD_START> protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { final Intent com.artemzin.android.wail.receiver.music.Intent = com.artemzin.android.wail.receiver.music.Intent ( com.artemzin.android.wail.receiver.music.Context ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , com.artemzin.android.wail.receiver.music.Intent . getAction ( ) . substring ( NUMBER , com.artemzin.android.wail.receiver.music.Intent . getAction ( ) . lastIndexOf ( '.' ) ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.receiver.music.Intent , - NUMBER , STRING , STRING , STRING ) ) ; final java.lang.Boolean java.lang.Boolean = IntentUtil . getBoolOrNumberAsBoolExtra ( com.artemzin.android.wail.receiver.music.Intent , null , STRING , STRING , STRING , STRING , STRING ) ; if ( java.lang.Boolean == null ) { Loggi . w ( STRING ) ; return null ; } else { com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , java.lang.Boolean ) ; } com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.receiver.music.Intent , - NUMBER , STRING , STRING ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( STRING ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( STRING ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( STRING ) ) ; long long = IntentUtil . getLongOrIntExtra ( com.artemzin.android.wail.receiver.music.Intent , - NUMBER , STRING ) ; if ( long != - NUMBER ) { if ( long < NUMBER ) { long *= NUMBER ; } } com.artemzin.android.wail.receiver.music.Intent . putExtra ( java.lang.String , long ) ; return com.artemzin.android.wail.receiver.music.Intent ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.receiver.music.Track com.artemzin.android.wail.receiver.music.Track ( final Intent com.artemzin.android.wail.receiver.music.Intent ) { final Track com.artemzin.android.wail.receiver.music.Track = new Track ( ) ; com.artemzin.android.wail.receiver.music.Track . setPlayerPackageName ( com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( java.lang.String ) ) ; com.artemzin.android.wail.receiver.music.Track . setTrack ( com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( java.lang.String ) ) ; com.artemzin.android.wail.receiver.music.Track . setArtist ( com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( java.lang.String ) ) ; com.artemzin.android.wail.receiver.music.Track . setAlbum ( com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( java.lang.String ) ) ; com.artemzin.android.wail.receiver.music.Track . setDuration ( com.artemzin.android.wail.receiver.music.Intent . getLongExtra ( java.lang.String , - NUMBER ) ) ; com.artemzin.android.wail.receiver.music.Track . setTimestamp ( com.artemzin.android.wail.receiver.music.Intent . getLongExtra ( java.lang.String , - NUMBER ) ) ; return com.artemzin.android.wail.receiver.music.Track ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.samsung.Intent com.artemzin.android.wail.receiver.music.samsung.Intent ( Context com.artemzin.android.wail.receiver.music.samsung.Context , Intent com.artemzin.android.wail.receiver.music.samsung.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.samsung.Context , com.artemzin.android.wail.receiver.music.samsung.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.samsung.Intent com.artemzin.android.wail.receiver.music.samsung.Intent ( Context com.artemzin.android.wail.receiver.music.samsung.Context , Intent com.artemzin.android.wail.receiver.music.samsung.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.samsung.Context , com.artemzin.android.wail.receiver.music.samsung.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.samsung.Intent com.artemzin.android.wail.receiver.music.samsung.Intent ( Context com.artemzin.android.wail.receiver.music.samsung.Context , Intent com.artemzin.android.wail.receiver.music.samsung.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.samsung.Context , com.artemzin.android.wail.receiver.music.samsung.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.samsung.Intent com.artemzin.android.wail.receiver.music.samsung.Intent ( Context com.artemzin.android.wail.receiver.music.samsung.Context , Intent com.artemzin.android.wail.receiver.music.samsung.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.samsung.Context , com.artemzin.android.wail.receiver.music.samsung.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.samsung.Intent com.artemzin.android.wail.receiver.music.samsung.Intent ( Context com.artemzin.android.wail.receiver.music.samsung.Context , Intent com.artemzin.android.wail.receiver.music.samsung.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.samsung.Context , com.artemzin.android.wail.receiver.music.samsung.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { final Intent com.artemzin.android.wail.receiver.music.Intent = newIntentForWAILService ( com.artemzin.android.wail.receiver.music.Context ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; final java.lang.String java.lang.String ; try { java.lang.String = com.artemzin.android.wail.receiver.music.Intent . getAction ( ) . substring ( com.artemzin.android.wail.receiver.music.Intent . getAction ( ) . lastIndexOf ( '.' ) + NUMBER ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + com.artemzin.android.wail.receiver.music.Intent . getAction ( ) ) ; return null ; } if ( java.lang.String . boolean ( STRING ) ) { com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_PLAYING , true ) ; } else if ( java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ) { com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_PLAYING , false ) ; } else { Loggi . w ( STRING ) ; return null ; } com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_ID , ( long ) com.artemzin.android.wail.receiver.music.Intent . getIntExtra ( STRING , - NUMBER ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_ALBUM_ID , ( long ) com.artemzin.android.wail.receiver.music.Intent . getIntExtra ( STRING , - NUMBER ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_TRACK , com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( STRING ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_ARTIST , com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( STRING ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_ALBUM , com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( STRING ) ) ; com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_DURATION , ( long ) com.artemzin.android.wail.receiver.music.Intent . getIntExtra ( STRING , - NUMBER ) ) ; return com.artemzin.android.wail.receiver.music.Intent ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { EasyTracker . getInstance ( com.artemzin.android.wail.receiver.music.Context ) . send ( MapBuilder . createEvent ( STRING , STRING , IntentUtil . getIntentAsString ( com.artemzin.android.wail.receiver.music.Intent ) , NUMBER ) . build ( ) ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { final Intent com.artemzin.android.wail.receiver.music.Intent = super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) ; if ( com.artemzin.android.wail.receiver.music.Intent . hasExtra ( java.lang.String ) ) { try { com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , com.artemzin.android.wail.receiver.music.Intent . getStringExtra ( java.lang.String ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; } } else { com.artemzin.android.wail.receiver.music.Intent . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; } return com.artemzin.android.wail.receiver.music.Intent ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.receiver.music.Intent com.artemzin.android.wail.receiver.music.Intent ( Context com.artemzin.android.wail.receiver.music.Context , Intent com.artemzin.android.wail.receiver.music.Intent ) { return super. handleIntent ( com.artemzin.android.wail.receiver.music.Context , com.artemzin.android.wail.receiver.music.Intent ) . putExtra ( EXTRA_PLAYER_PACKAGE_NAME , STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final Context com.artemzin.android.wail.receiver.Context , Intent com.artemzin.android.wail.receiver.Intent ) { final Track com.artemzin.android.wail.receiver.Track = WAILSettings . getNowScrobblingTrack ( com.artemzin.android.wail.receiver.Context ) ; if ( com.artemzin.android.wail.receiver.Track != null ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { LovedTracksDBHelper . getInstance ( com.artemzin.android.wail.receiver.Context ) . add ( com.artemzin.android.wail.receiver.Track ) ; Intent com.artemzin.android.wail.receiver.Intent = new Intent ( com.artemzin.android.wail.receiver.Context , WAILService .class ) ; com.artemzin.android.wail.receiver.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; com.artemzin.android.wail.receiver.Context . startService ( com.artemzin.android.wail.receiver.Intent ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { StatusBarNotificationsManager . getInstance ( com.artemzin.android.wail.receiver.Context ) . showTrackLovedStatusBarNotification ( com.artemzin.android.wail.receiver.Track ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { LovedTracksDBHelper . getInstance ( com.artemzin.android.wail.receiver.Context ) . add ( com.artemzin.android.wail.receiver.Track ) ; Intent com.artemzin.android.wail.receiver.Intent = new Intent ( com.artemzin.android.wail.receiver.Context , WAILService .class ) ; com.artemzin.android.wail.receiver.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; com.artemzin.android.wail.receiver.Context . startService ( com.artemzin.android.wail.receiver.Intent ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { StatusBarNotificationsManager . getInstance ( com.artemzin.android.wail.receiver.Context ) . showTrackLovedStatusBarNotification ( com.artemzin.android.wail.receiver.Track ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.service.IBinder com.artemzin.android.wail.service.IBinder ( Intent com.artemzin.android.wail.service.Intent ) { return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onCreate ( ) ; Loggi . i ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( Intent com.artemzin.android.wail.service.Intent , int int , int int ) { Loggi . i ( STRING + IntentUtil . getIntentAsString ( com.artemzin.android.wail.service.Intent ) ) ; com.artemzin.android.wail.service.IgnoredPlayersDBHelper = IgnoredPlayersDBHelper . getInstance ( getApplicationContext ( ) ) ; if ( com.artemzin.android.wail.service.Intent == null ) { return START_STICKY ; } final java.lang.String java.lang.String = com.artemzin.android.wail.service.Intent . getAction ( ) ; if ( java.lang.String == null ) { return START_STICKY ; } if ( ! java.lang.String . boolean ( java.lang.String ) ) { com.artemzin.android.wail.service.Intent = com.artemzin.android.wail.service.Intent ; } if ( java.lang.String . boolean ( java.lang.String ) ) { void ( com.artemzin.android.wail.service.Intent ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { void ( false ) ; void ( ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { void ( com.artemzin.android.wail.service.Intent ) ; } else if ( java.lang.String . boolean ( java.lang.String ) ) { void ( ) ; } else { } return START_STICKY ; }  <METHOD_END>
<METHOD_START> private void void ( @ Nullable Track com.artemzin.android.wail.service.Track ) { RemoteViews com.artemzin.android.wail.service.RemoteViews = new RemoteViews ( getPackageName ( ) , R . layout . waillove_widget ) ; AppWidgetManager com.artemzin.android.wail.service.AppWidgetManager = AppWidgetManager . getInstance ( getApplicationContext ( ) ) ; java.lang.String java.lang.String ; java.lang.String java.lang.String ; if ( com.artemzin.android.wail.service.Track == null ) { java.lang.String = getString ( R . string . main_now_scrobbling_label , STRING ) ; java.lang.String = getString ( R . string . main_now_scrobbling_nothing ) ; com.artemzin.android.wail.service.RemoteViews . setBoolean ( R . id . widget_love_current_track_button , STRING , false ) ; } else { java.lang.String = com.artemzin.android.wail.service.Track . getTrack ( ) ; java.lang.String = com.artemzin.android.wail.service.Track . getArtist ( ) ; com.artemzin.android.wail.service.RemoteViews . setBoolean ( R . id . widget_love_current_track_button , STRING , true ) ; } com.artemzin.android.wail.service.RemoteViews . setTextViewText ( R . id . widget_infobox_track_text , java.lang.String ) ; com.artemzin.android.wail.service.RemoteViews . setTextViewText ( R . id . widget_infobox_artist_text , java.lang.String ) ; int [] int[] = com.artemzin.android.wail.service.AppWidgetManager . getAppWidgetIds ( new ComponentName ( getApplicationContext ( ) , WAILLoveWidget .class ) ) ; com.artemzin.android.wail.service.AppWidgetManager . updateAppWidget ( int[] , com.artemzin.android.wail.service.RemoteViews ) ; }  <METHOD_END>
<METHOD_START> private void void ( final Intent com.artemzin.android.wail.service.Intent ) { if ( com.artemzin.android.wail.service.Intent == null || ! WAILSettings . isEnabled ( this ) ) { Loggi . w ( STRING ) ; return; } final java.lang.String java.lang.String = com.artemzin.android.wail.service.Intent . getStringExtra ( CommonMusicAppReceiver . EXTRA_PLAYER_PACKAGE_NAME ) ; if ( com.artemzin.android.wail.service.IgnoredPlayersDBHelper . contains ( java.lang.String ) ) { Loggi . w ( java.lang.String . java.lang.String ( STRING , java.lang.String ) ) ; return; } AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { Loggi . i ( STRING + com.artemzin.android.wail.service.Intent ) ; void ( ) ; final java.lang.String java.lang.String = com.artemzin.android.wail.service.Intent . getStringExtra ( CommonMusicAppReceiver . EXTRA_ACTION ) ; if ( java.lang.String == null || java.lang.String . int ( '.' ) == - NUMBER ) { Loggi . e ( STRING ) ; return null ; } final boolean boolean = com.artemzin.android.wail.service.Intent . getBooleanExtra ( CommonMusicAppReceiver . EXTRA_PLAYING , false ) ; final Track com.artemzin.android.wail.service.Track = CommonMusicAppReceiver . parseFromIntentExtras ( com.artemzin.android.wail.service.Intent ) ; if ( boolean ) { WAILSettings . setNowScrobblingTrack ( getApplicationContext ( ) , com.artemzin.android.wail.service.Track ) ; java.lang.String java.lang.String = null ; try { PackageManager com.artemzin.android.wail.service.PackageManager = getApplication ( ) . getPackageManager ( ) ; ApplicationInfo com.artemzin.android.wail.service.ApplicationInfo = com.artemzin.android.wail.service.PackageManager . getApplicationInfo ( java.lang.String , NUMBER ) ; java.lang.String = com.artemzin.android.wail.service.PackageManager . getApplicationLabel ( com.artemzin.android.wail.service.ApplicationInfo ) . toString ( ) ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { Loggi . w ( STRING + java.lang.String ) ; } WAILSettings . setNowScrobblingPlayerLabel ( getApplicationContext ( ) , java.lang.String ) ; WAILSettings . setNowScrobblingPlayerPackageName ( getApplicationContext ( ) , java.lang.String ) ; StatusBarNotificationsManager . getInstance ( getApplicationContext ( ) ) . showTrackScrobblingStatusBarNotification ( com.artemzin.android.wail.service.Track ) ; void ( com.artemzin.android.wail.service.Track ) ; void ( com.artemzin.android.wail.service.Track ) ; } else { StatusBarNotificationsManager . getInstance ( getApplicationContext ( ) ) . hideTrackScrobblingStatusBarNotification ( ) ; WAILSettings . setNowScrobblingTrack ( getApplicationContext ( ) , null ) ; WAILSettings . setNowScrobblingPlayerPackageName ( getApplicationContext ( ) , null ) ; void ( null ) ; } LocalBroadcastManager . getInstance ( getApplicationContext ( ) ) . sendBroadcast ( new Intent ( TracksDBHelper . INTENT_TRACKS_CHANGED ) ) ; final com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo = WAILSettings . getLastCapturedTrackInfo ( getApplicationContext ( ) ) ; if ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo != null ) { final long long = com.artemzin.android.wail.service.Track . getTimestamp ( ) - com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . com.artemzin.android.wail.storage.model.Track ( ) . getTimestamp ( ) ; final long long = WAILSettings . getMinTrackDurationInSeconds ( getApplicationContext ( ) ) * NUMBER ; final int int = WAILSettings . getMinTrackDurationInPercents ( getApplicationContext ( ) ) ; if ( ( ! boolean && com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . boolean ( ) ) || com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . boolean ( ) ) { long long = com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . com.artemzin.android.wail.storage.model.Track ( ) . getDuration ( ) ; if ( long != - NUMBER ) { final int int = ( int ) ( NUMBER * long / ( long + NUMBER ) ) ; if ( int >= int && long >= long ) { void ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo , long , long , long , int ) ; } else { void ( long , long , int , long ) ; } } else if ( long >= long ) { Loggi . d ( STRING ) ; void ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo , long , long , long , int ) ; } else { void ( long , long , int , long ) ; } } else { Loggi . w ( STRING ) ; } } WAILSettings . setLastCapturedTrackInfo ( getApplicationContext ( ) , new com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo ( com.artemzin.android.wail.service.Track , boolean ) ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { void ( false ) ; } private void void ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo , long long , long long , long long , int int ) { Loggi . i ( java.lang.String . java.lang.String ( STRING + STRING , long , long , long , int ) ) ; void ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . com.artemzin.android.wail.storage.model.Track ( ) ) ; SoundNotificationsManager . getInstance ( getApplicationContext ( ) ) . playTrackMarkedAsScrobbledSound ( ) ; } private void void ( long long , long long , int int , long long ) { Loggi . i ( java.lang.String . java.lang.String ( STRING + STRING , long , long , long , int ) ) ; SoundNotificationsManager . getInstance ( getApplicationContext ( ) ) . playTrackSkippedSound ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { Loggi . i ( STRING + com.artemzin.android.wail.service.Intent ) ; void ( ) ; final java.lang.String java.lang.String = com.artemzin.android.wail.service.Intent . getStringExtra ( CommonMusicAppReceiver . EXTRA_ACTION ) ; if ( java.lang.String == null || java.lang.String . int ( '.' ) == - NUMBER ) { Loggi . e ( STRING ) ; return null ; } final boolean boolean = com.artemzin.android.wail.service.Intent . getBooleanExtra ( CommonMusicAppReceiver . EXTRA_PLAYING , false ) ; final Track com.artemzin.android.wail.service.Track = CommonMusicAppReceiver . parseFromIntentExtras ( com.artemzin.android.wail.service.Intent ) ; if ( boolean ) { WAILSettings . setNowScrobblingTrack ( getApplicationContext ( ) , com.artemzin.android.wail.service.Track ) ; java.lang.String java.lang.String = null ; try { PackageManager com.artemzin.android.wail.service.PackageManager = getApplication ( ) . getPackageManager ( ) ; ApplicationInfo com.artemzin.android.wail.service.ApplicationInfo = com.artemzin.android.wail.service.PackageManager . getApplicationInfo ( java.lang.String , NUMBER ) ; java.lang.String = com.artemzin.android.wail.service.PackageManager . getApplicationLabel ( com.artemzin.android.wail.service.ApplicationInfo ) . toString ( ) ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { Loggi . w ( STRING + java.lang.String ) ; } WAILSettings . setNowScrobblingPlayerLabel ( getApplicationContext ( ) , java.lang.String ) ; WAILSettings . setNowScrobblingPlayerPackageName ( getApplicationContext ( ) , java.lang.String ) ; StatusBarNotificationsManager . getInstance ( getApplicationContext ( ) ) . showTrackScrobblingStatusBarNotification ( com.artemzin.android.wail.service.Track ) ; void ( com.artemzin.android.wail.service.Track ) ; void ( com.artemzin.android.wail.service.Track ) ; } else { StatusBarNotificationsManager . getInstance ( getApplicationContext ( ) ) . hideTrackScrobblingStatusBarNotification ( ) ; WAILSettings . setNowScrobblingTrack ( getApplicationContext ( ) , null ) ; WAILSettings . setNowScrobblingPlayerPackageName ( getApplicationContext ( ) , null ) ; void ( null ) ; } LocalBroadcastManager . getInstance ( getApplicationContext ( ) ) . sendBroadcast ( new Intent ( TracksDBHelper . INTENT_TRACKS_CHANGED ) ) ; final com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo = WAILSettings . getLastCapturedTrackInfo ( getApplicationContext ( ) ) ; if ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo != null ) { final long long = com.artemzin.android.wail.service.Track . getTimestamp ( ) - com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . com.artemzin.android.wail.storage.model.Track ( ) . getTimestamp ( ) ; final long long = WAILSettings . getMinTrackDurationInSeconds ( getApplicationContext ( ) ) * NUMBER ; final int int = WAILSettings . getMinTrackDurationInPercents ( getApplicationContext ( ) ) ; if ( ( ! boolean && com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . boolean ( ) ) || com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . boolean ( ) ) { long long = com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . com.artemzin.android.wail.storage.model.Track ( ) . getDuration ( ) ; if ( long != - NUMBER ) { final int int = ( int ) ( NUMBER * long / ( long + NUMBER ) ) ; if ( int >= int && long >= long ) { void ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo , long , long , long , int ) ; } else { void ( long , long , int , long ) ; } } else if ( long >= long ) { Loggi . d ( STRING ) ; void ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo , long , long , long , int ) ; } else { void ( long , long , int , long ) ; } } else { Loggi . w ( STRING ) ; } } WAILSettings . setLastCapturedTrackInfo ( getApplicationContext ( ) , new com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo ( com.artemzin.android.wail.service.Track , boolean ) ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { void ( false ) ; }  <METHOD_END>
<METHOD_START> private void void ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo , long long , long long , long long , int int ) { Loggi . i ( java.lang.String . java.lang.String ( STRING + STRING , long , long , long , int ) ) ; void ( com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo . com.artemzin.android.wail.storage.model.Track ( ) ) ; SoundNotificationsManager . getInstance ( getApplicationContext ( ) ) . playTrackMarkedAsScrobbledSound ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( long long , long long , int int , long long ) { Loggi . i ( java.lang.String . java.lang.String ( STRING + STRING , long , long , long , int ) ) ; SoundNotificationsManager . getInstance ( getApplicationContext ( ) ) . playTrackSkippedSound ( ) ; }  <METHOD_END>
<METHOD_START> private synchronized void void ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track ) { com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track = TracksDBHelper . getInstance ( getApplicationContext ( ) ) . getLastAddedTrack ( ) ; if ( com.artemzin.android.wail.storage.model.Track != null ) { final long long = ( com.artemzin.android.wail.storage.model.Track . getTimestamp ( ) - com.artemzin.android.wail.storage.model.Track . getTimestamp ( ) ) / NUMBER ; if ( long < NUMBER ) { Loggi . w ( STRING + long + STRING + com.artemzin.android.wail.storage.model.Track ) ; return; } else { Loggi . w ( STRING + long + STRING ) ; } } if ( TextUtils . isEmpty ( com.artemzin.android.wail.storage.model.Track . getArtist ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.storage.model.Track . getTrack ( ) ) ) { Loggi . w ( STRING ) ; return; } if ( TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . add ( com.artemzin.android.wail.storage.model.Track ) != - NUMBER ) { WAILSettings . setTotalHandledTracksCount ( com.artemzin.android.wail.service.WAILService .this , WAILSettings . getTotalHandledTracksCount ( com.artemzin.android.wail.service.WAILService .this ) + NUMBER ) ; Loggi . w ( STRING + com.artemzin.android.wail.storage.model.Track ) ; SoundNotificationsManager . getInstance ( getApplicationContext ( ) ) . playTrackMarkedAsScrobbledSound ( ) ; } else { Loggi . e ( STRING + com.artemzin.android.wail.storage.model.Track ) ; } }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { if ( ! boolean && ( long != NUMBER && SystemClock . elapsedRealtime ( ) - long < NUMBER ) ) { Loggi . w ( STRING ) ; return; } if ( ! NetworkUtil . isAvailable ( this ) ) { Loggi . e ( STRING ) ; return; } else if ( ! WAILSettings . isEnableScrobblingOverMobileNetwork ( getApplicationContext ( ) ) && NetworkUtil . isMobileNetwork ( this ) ) { Loggi . e ( STRING ) ; return; } long = SystemClock . elapsedRealtime ( ) ; AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { @ java.lang.Override protected void void ( ) { Loggi . w ( STRING ) ; } @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { TracksDBHelper com.artemzin.android.wail.service.TracksDBHelper = TracksDBHelper . getInstance ( getApplicationContext ( ) ) ; Cursor com.artemzin.android.wail.service.Cursor = com.artemzin.android.wail.service.TracksDBHelper . getAllDesc ( ) ; final java.util.List<com.artemzin.android.wail.storage.model.Track> < com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage > java.util.List<com.artemzin.android.wail.storage.model.Track> = new java.util.ArrayList<com.artemzin.android.wail.storage.model.Track> <> ( ) ; final java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> < LFTrackRequestModel > java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> = new java.util.ArrayList<com.artemzin.android.wail.service.LFTrackRequestModel> <> ( ) ; boolean boolean = false ; if ( com.artemzin.android.wail.service.Cursor . getCount ( ) == NUMBER ) { Loggi . w ( STRING ) ; com.artemzin.android.wail.service.Cursor . close ( ) ; return null ; } if ( com.artemzin.android.wail.service.Cursor . moveToFirst ( ) ) { do { com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.service.Cursor ) ; if ( TextUtils . isEmpty ( com.artemzin.android.wail.storage.model.Track . getArtist ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.storage.model.Track . getTrack ( ) ) ) { Loggi . w ( STRING ) ; com.artemzin.android.wail.service.TracksDBHelper . delete ( com.artemzin.android.wail.storage.model.Track ) ; continue; } if ( java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> . size ( ) >= NUMBER ) { boolean = true ; break; } if ( com.artemzin.android.wail.storage.model.Track . getState ( ) == com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_WAITING_FOR_SCROBBLE || com.artemzin.android.wail.storage.model.Track . getState ( ) == com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLE_ERROR ) { com.artemzin.android.wail.storage.model.Track . setState ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLING ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; java.util.List<com.artemzin.android.wail.storage.model.Track> . add ( com.artemzin.android.wail.storage.model.Track ) ; java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> . add ( new LFTrackRequestModel ( com.artemzin.android.wail.storage.model.Track ) ) ; } } while ( com.artemzin.android.wail.service.Cursor . moveToNext ( ) ); } com.artemzin.android.wail.service.Cursor . close ( ) ; if ( java.util.List<com.artemzin.android.wail.storage.model.Track> . size ( ) != NUMBER ) { TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . updateAll ( java.util.List<com.artemzin.android.wail.storage.model.Track> ) ; } if ( java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> . size ( ) == NUMBER ) { Loggi . w ( STRING ) ; return null ; } try { final LFScrobbleResponseModel com.artemzin.android.wail.service.LFScrobbleResponseModel = LFTrackApi . scrobble ( WAILSettings . getLastfmSessionKey ( com.artemzin.android.wail.service.WAILService .this ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> ) ; Loggi . w ( STRING + com.artemzin.android.wail.service.LFScrobbleResponseModel ) ; for ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track : java.util.List<com.artemzin.android.wail.storage.model.Track> ) { com.artemzin.android.wail.storage.model.Track . setState ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLE_SUCCESS ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; } TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . updateAll ( java.util.List<com.artemzin.android.wail.storage.model.Track> ) ; EasyTracker . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , ( long ) java.util.List<com.artemzin.android.wail.storage.model.Track> . size ( ) ) . build ( ) ) ; if ( boolean ) { Loggi . w ( STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; void ( true ) ; } } catch ( NetworkException com.artemzin.android.wail.service.NetworkException ) { Loggi . e ( STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) ) ; for ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track : java.util.List<com.artemzin.android.wail.storage.model.Track> ) { com.artemzin.android.wail.storage.model.Track . setState ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLE_ERROR ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; } TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . updateAll ( java.util.List<com.artemzin.android.wail.storage.model.Track> ) ; EasyTracker . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } catch ( LFApiException com.artemzin.android.wail.service.LFApiException ) { void ( com.artemzin.android.wail.service.LFApiException ) ; Loggi . e ( STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) ) ; for ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track : java.util.List<com.artemzin.android.wail.storage.model.Track> ) { com.artemzin.android.wail.storage.model.Track . setState ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLE_ERROR ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; } TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . updateAll ( java.util.List<com.artemzin.android.wail.storage.model.Track> ) ; EasyTracker . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { Loggi . w ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { TracksDBHelper com.artemzin.android.wail.service.TracksDBHelper = TracksDBHelper . getInstance ( getApplicationContext ( ) ) ; Cursor com.artemzin.android.wail.service.Cursor = com.artemzin.android.wail.service.TracksDBHelper . getAllDesc ( ) ; final java.util.List<com.artemzin.android.wail.storage.model.Track> < com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage > java.util.List<com.artemzin.android.wail.storage.model.Track> = new java.util.ArrayList<com.artemzin.android.wail.storage.model.Track> <> ( ) ; final java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> < LFTrackRequestModel > java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> = new java.util.ArrayList<com.artemzin.android.wail.service.LFTrackRequestModel> <> ( ) ; boolean boolean = false ; if ( com.artemzin.android.wail.service.Cursor . getCount ( ) == NUMBER ) { Loggi . w ( STRING ) ; com.artemzin.android.wail.service.Cursor . close ( ) ; return null ; } if ( com.artemzin.android.wail.service.Cursor . moveToFirst ( ) ) { do { com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.service.Cursor ) ; if ( TextUtils . isEmpty ( com.artemzin.android.wail.storage.model.Track . getArtist ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.storage.model.Track . getTrack ( ) ) ) { Loggi . w ( STRING ) ; com.artemzin.android.wail.service.TracksDBHelper . delete ( com.artemzin.android.wail.storage.model.Track ) ; continue; } if ( java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> . size ( ) >= NUMBER ) { boolean = true ; break; } if ( com.artemzin.android.wail.storage.model.Track . getState ( ) == com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_WAITING_FOR_SCROBBLE || com.artemzin.android.wail.storage.model.Track . getState ( ) == com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLE_ERROR ) { com.artemzin.android.wail.storage.model.Track . setState ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLING ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; java.util.List<com.artemzin.android.wail.storage.model.Track> . add ( com.artemzin.android.wail.storage.model.Track ) ; java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> . add ( new LFTrackRequestModel ( com.artemzin.android.wail.storage.model.Track ) ) ; } } while ( com.artemzin.android.wail.service.Cursor . moveToNext ( ) ); } com.artemzin.android.wail.service.Cursor . close ( ) ; if ( java.util.List<com.artemzin.android.wail.storage.model.Track> . size ( ) != NUMBER ) { TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . updateAll ( java.util.List<com.artemzin.android.wail.storage.model.Track> ) ; } if ( java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> . size ( ) == NUMBER ) { Loggi . w ( STRING ) ; return null ; } try { final LFScrobbleResponseModel com.artemzin.android.wail.service.LFScrobbleResponseModel = LFTrackApi . scrobble ( WAILSettings . getLastfmSessionKey ( com.artemzin.android.wail.service.WAILService .this ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , java.util.List<com.artemzin.android.wail.service.LFTrackRequestModel> ) ; Loggi . w ( STRING + com.artemzin.android.wail.service.LFScrobbleResponseModel ) ; for ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track : java.util.List<com.artemzin.android.wail.storage.model.Track> ) { com.artemzin.android.wail.storage.model.Track . setState ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLE_SUCCESS ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; } TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . updateAll ( java.util.List<com.artemzin.android.wail.storage.model.Track> ) ; EasyTracker . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , ( long ) java.util.List<com.artemzin.android.wail.storage.model.Track> . size ( ) ) . build ( ) ) ; if ( boolean ) { Loggi . w ( STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; void ( true ) ; } } catch ( NetworkException com.artemzin.android.wail.service.NetworkException ) { Loggi . e ( STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) ) ; for ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track : java.util.List<com.artemzin.android.wail.storage.model.Track> ) { com.artemzin.android.wail.storage.model.Track . setState ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLE_ERROR ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; } TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . updateAll ( java.util.List<com.artemzin.android.wail.storage.model.Track> ) ; EasyTracker . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } catch ( LFApiException com.artemzin.android.wail.service.LFApiException ) { void ( com.artemzin.android.wail.service.LFApiException ) ; Loggi . e ( STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) ) ; for ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track : java.util.List<com.artemzin.android.wail.storage.model.Track> ) { com.artemzin.android.wail.storage.model.Track . setState ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . Track . STATE_SCROBBLE_ERROR ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; } TracksDBHelper . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . updateAll ( java.util.List<com.artemzin.android.wail.storage.model.Track> ) ; EasyTracker . getInstance ( com.artemzin.android.wail.service.WAILService .this ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> private synchronized void void ( Track com.artemzin.android.wail.service.Track ) { if ( com.artemzin.android.wail.service.Track == null ) { Loggi . w ( STRING ) ; return; } if ( ! NetworkUtil . isAvailable ( getApplicationContext ( ) ) ) { Loggi . w ( STRING + com.artemzin.android.wail.service.Track ) ; return; } else if ( ! WAILSettings . isEnableScrobblingOverMobileNetwork ( getApplicationContext ( ) ) && NetworkUtil . isMobileNetwork ( getApplicationContext ( ) ) ) { Loggi . w ( STRING + com.artemzin.android.wail.service.Track ) ; return; } final Track com.artemzin.android.wail.service.Track = com.artemzin.android.wail.storage.model.Track ; if ( com.artemzin.android.wail.service.Track != null ) { if ( java.lang.System . long ( ) - com.artemzin.android.wail.service.Track . getStateTimestamp ( ) < NUMBER && com.artemzin.android.wail.service.Track . specialEquals ( com.artemzin.android.wail.service.Track ) ) { Loggi . w ( STRING + com.artemzin.android.wail.service.Track ) ; return; } } com.artemzin.android.wail.storage.model.Track = com.artemzin.android.wail.service.Track . copy ( ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( java.lang.System . long ( ) ) ; if ( WAILSettings . isLastfmNowplayingUpdateEnabled ( getApplicationContext ( ) ) ) { void ( com.artemzin.android.wail.service.Track ) ; } else { Loggi . w ( STRING + com.artemzin.android.wail.service.Track ) ; } }  <METHOD_END>
<METHOD_START> private synchronized void void ( final com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track ) { Loggi . i ( STRING + com.artemzin.android.wail.storage.model.Track ) ; AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Object , java.lang.Object , java.lang.Object > ( ) { @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object ... java.lang.Object[] ) { try { final LFTrackRequestModel com.artemzin.android.wail.service.LFTrackRequestModel = new LFTrackRequestModel ( com.artemzin.android.wail.storage.model.Track ) ; if ( com.artemzin.android.wail.service.LFTrackRequestModel . getDuration ( ) == null || com.artemzin.android.wail.service.LFTrackRequestModel . getDuration ( ) <= NUMBER ) { com.artemzin.android.wail.service.LFTrackRequestModel . setDuration ( int ) ; } Loggi . w ( STRING + LFTrackApi . updateNowPlaying ( WAILSettings . getLastfmSessionKey ( getApplicationContext ( ) ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , com.artemzin.android.wail.service.LFTrackRequestModel ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; } catch ( NetworkException com.artemzin.android.wail.service.NetworkException ) { Loggi . e ( STRING + com.artemzin.android.wail.storage.model.Track + STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } catch ( LFApiException com.artemzin.android.wail.service.LFApiException ) { void ( com.artemzin.android.wail.service.LFApiException ) ; Loggi . e ( STRING + com.artemzin.android.wail.storage.model.Track + STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } return null ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object ... java.lang.Object[] ) { try { final LFTrackRequestModel com.artemzin.android.wail.service.LFTrackRequestModel = new LFTrackRequestModel ( com.artemzin.android.wail.storage.model.Track ) ; if ( com.artemzin.android.wail.service.LFTrackRequestModel . getDuration ( ) == null || com.artemzin.android.wail.service.LFTrackRequestModel . getDuration ( ) <= NUMBER ) { com.artemzin.android.wail.service.LFTrackRequestModel . setDuration ( int ) ; } Loggi . w ( STRING + LFTrackApi . updateNowPlaying ( WAILSettings . getLastfmSessionKey ( getApplicationContext ( ) ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , com.artemzin.android.wail.service.LFTrackRequestModel ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; } catch ( NetworkException com.artemzin.android.wail.service.NetworkException ) { Loggi . e ( STRING + com.artemzin.android.wail.storage.model.Track + STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } catch ( LFApiException com.artemzin.android.wail.service.LFApiException ) { void ( com.artemzin.android.wail.service.LFApiException ) ; Loggi . e ( STRING + com.artemzin.android.wail.storage.model.Track + STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( new java.util.Random ( java.lang.System . long ( ) ) . int ( NUMBER ) > NUMBER ) { try { final int int = TracksDBHelper . getInstance ( getApplicationContext ( ) ) . removeOldOrInconsistentTracks ( NUMBER ) ; Loggi . w ( STRING + int ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; EasyTracker . getInstance ( getApplication ( ) ) . send ( MapBuilder . createException ( STRING + java.lang.Exception . java.lang.String ( ) , false ) . build ( ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { private void void ( Track com.artemzin.android.wail.service.Track ) { if ( com.artemzin.android.wail.service.Track != null ) { Loggi . i ( STRING + com.artemzin.android.wail.service.Track ) ; LFTrackRequestModel com.artemzin.android.wail.service.LFTrackRequestModel = new LFTrackRequestModel ( com.artemzin.android.wail.service.Track ) ; try { Loggi . w ( STRING + LFTrackApi . love ( WAILSettings . getLastfmSessionKey ( getApplicationContext ( ) ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , com.artemzin.android.wail.service.LFTrackRequestModel ) ) ; LovedTracksDBHelper . getInstance ( getApplicationContext ( ) ) . delete ( com.artemzin.android.wail.service.Track ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; } catch ( NetworkException com.artemzin.android.wail.service.NetworkException ) { Loggi . e ( STRING + com.artemzin.android.wail.service.Track + STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } catch ( LFApiException com.artemzin.android.wail.service.LFApiException ) { void ( com.artemzin.android.wail.service.LFApiException ) ; Loggi . e ( STRING + com.artemzin.android.wail.service.Track + STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } } } @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { LovedTracksDBHelper com.artemzin.android.wail.service.LovedTracksDBHelper = LovedTracksDBHelper . getInstance ( getApplicationContext ( ) ) ; Cursor com.artemzin.android.wail.service.Cursor = com.artemzin.android.wail.service.LovedTracksDBHelper . getAllDesc ( ) ; if ( com.artemzin.android.wail.service.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.service.Track = LovedTracksDBHelper . parseFromCursor ( com.artemzin.android.wail.service.Cursor ) ; if ( TextUtils . isEmpty ( com.artemzin.android.wail.service.Track . getArtist ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.service.Track . getTrack ( ) ) ) { Loggi . w ( STRING ) ; com.artemzin.android.wail.service.LovedTracksDBHelper . delete ( com.artemzin.android.wail.service.Track ) ; continue; } void ( com.artemzin.android.wail.service.Track ) ; } while ( com.artemzin.android.wail.service.Cursor . moveToNext ( ) ); } SystemClock . sleep ( NUMBER ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { StatusBarNotificationsManager . getInstance ( getApplicationContext ( ) ) . hideTrackLovedStatusBarNotification ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> private void void ( Track com.artemzin.android.wail.service.Track ) { if ( com.artemzin.android.wail.service.Track != null ) { Loggi . i ( STRING + com.artemzin.android.wail.service.Track ) ; LFTrackRequestModel com.artemzin.android.wail.service.LFTrackRequestModel = new LFTrackRequestModel ( com.artemzin.android.wail.service.Track ) ; try { Loggi . w ( STRING + LFTrackApi . love ( WAILSettings . getLastfmSessionKey ( getApplicationContext ( ) ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , com.artemzin.android.wail.service.LFTrackRequestModel ) ) ; LovedTracksDBHelper . getInstance ( getApplicationContext ( ) ) . delete ( com.artemzin.android.wail.service.Track ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; } catch ( NetworkException com.artemzin.android.wail.service.NetworkException ) { Loggi . e ( STRING + com.artemzin.android.wail.service.Track + STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.NetworkException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } catch ( LFApiException com.artemzin.android.wail.service.LFApiException ) { void ( com.artemzin.android.wail.service.LFApiException ) ; Loggi . e ( STRING + com.artemzin.android.wail.service.Track + STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) ) ; EasyTracker . getInstance ( getApplicationContext ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + com.artemzin.android.wail.service.LFApiException . getMessage ( ) , null , NUMBER ) . build ( ) ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { LovedTracksDBHelper com.artemzin.android.wail.service.LovedTracksDBHelper = LovedTracksDBHelper . getInstance ( getApplicationContext ( ) ) ; Cursor com.artemzin.android.wail.service.Cursor = com.artemzin.android.wail.service.LovedTracksDBHelper . getAllDesc ( ) ; if ( com.artemzin.android.wail.service.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.service.Track = LovedTracksDBHelper . parseFromCursor ( com.artemzin.android.wail.service.Cursor ) ; if ( TextUtils . isEmpty ( com.artemzin.android.wail.service.Track . getArtist ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.service.Track . getTrack ( ) ) ) { Loggi . w ( STRING ) ; com.artemzin.android.wail.service.LovedTracksDBHelper . delete ( com.artemzin.android.wail.service.Track ) ; continue; } void ( com.artemzin.android.wail.service.Track ) ; } while ( com.artemzin.android.wail.service.Cursor . moveToNext ( ) ); } SystemClock . sleep ( NUMBER ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { StatusBarNotificationsManager . getInstance ( getApplicationContext ( ) ) . hideTrackLovedStatusBarNotification ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( LFApiException com.artemzin.android.wail.service.LFApiException ) { if ( LFApiException . ERROR_INVALID_SESSION_KEY . equals ( com.artemzin.android.wail.service.LFApiException . getError ( ) ) ) { sendBroadcast ( new Intent ( BaseActivity . ACTION_INVALID_SESSION_KEY ) ) ; } }  <METHOD_END>
<METHOD_START> public void ( com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track , boolean boolean ) { this . com.artemzin.android.wail.storage.model.Track = com.artemzin.android.wail.storage.model.Track ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track ( ) { return com.artemzin.android.wail.storage.model.Track ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { final JSONObject com.artemzin.android.wail.service.JSONObject = new JSONObject ( ) ; try { com.artemzin.android.wail.service.JSONObject . put ( STRING , com.artemzin.android.wail.storage.model.Track . getPlayerPackageName ( ) ) ; com.artemzin.android.wail.service.JSONObject . put ( STRING , com.artemzin.android.wail.storage.model.Track . getTrack ( ) ) ; com.artemzin.android.wail.service.JSONObject . put ( STRING , com.artemzin.android.wail.storage.model.Track . getArtist ( ) ) ; com.artemzin.android.wail.service.JSONObject . put ( STRING , com.artemzin.android.wail.storage.model.Track . getAlbum ( ) ) ; com.artemzin.android.wail.service.JSONObject . put ( STRING , com.artemzin.android.wail.storage.model.Track . getDuration ( ) ) ; com.artemzin.android.wail.service.JSONObject . put ( STRING , com.artemzin.android.wail.storage.model.Track . getTimestamp ( ) ) ; com.artemzin.android.wail.service.JSONObject . put ( STRING , com.artemzin.android.wail.storage.model.Track . getState ( ) ) ; com.artemzin.android.wail.service.JSONObject . put ( STRING , com.artemzin.android.wail.storage.model.Track . getStateTimestamp ( ) ) ; com.artemzin.android.wail.service.JSONObject . put ( STRING , boolean ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } return com.artemzin.android.wail.service.JSONObject . toString ( ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo ( java.lang.String java.lang.String ) { try { final JSONObject com.artemzin.android.wail.service.JSONObject = new JSONObject ( java.lang.String ) ; final com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage com.artemzin.android.wail.storage.model.Track = new com . artemzin . android . wail . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage . com.artemzin.android.wail.storage ( ) ; com.artemzin.android.wail.storage.model.Track . setPlayerPackageName ( com.artemzin.android.wail.service.JSONObject . optString ( STRING ) ) ; com.artemzin.android.wail.storage.model.Track . setTrack ( com.artemzin.android.wail.service.JSONObject . optString ( STRING ) ) ; com.artemzin.android.wail.storage.model.Track . setArtist ( com.artemzin.android.wail.service.JSONObject . optString ( STRING ) ) ; com.artemzin.android.wail.storage.model.Track . setAlbum ( com.artemzin.android.wail.service.JSONObject . optString ( STRING ) ) ; com.artemzin.android.wail.storage.model.Track . setDuration ( com.artemzin.android.wail.service.JSONObject . optLong ( STRING ) ) ; com.artemzin.android.wail.storage.model.Track . setTimestamp ( com.artemzin.android.wail.service.JSONObject . optLong ( STRING ) ) ; com.artemzin.android.wail.storage.model.Track . setState ( com.artemzin.android.wail.service.JSONObject . optInt ( STRING ) ) ; com.artemzin.android.wail.storage.model.Track . setStateTimestamp ( com.artemzin.android.wail.service.JSONObject . optLong ( STRING ) ) ; return new com.artemzin.android.wail.service.WAILService.LastCapturedTrackInfo ( com.artemzin.android.wail.storage.model.Track , com.artemzin.android.wail.service.JSONObject . optBoolean ( STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> private void ( Context com.artemzin.android.wail.storage.db.Context ) { super( com.artemzin.android.wail.storage.db.Context , java.lang.String , null , int ); this . com.artemzin.android.wail.storage.db.Context = com.artemzin.android.wail.storage.db.Context ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.AppDBManager com.artemzin.android.wail.storage.db.AppDBManager ( Context com.artemzin.android.wail.storage.db.Context ) { if ( com.artemzin.android.wail.storage.db.AppDBManager == null ) { synchronized ( com.artemzin.android.wail.storage.db.AppDBManager .class ) { if ( com.artemzin.android.wail.storage.db.AppDBManager == null ) { com.artemzin.android.wail.storage.db.AppDBManager = new com.artemzin.android.wail.storage.db.AppDBManager ( com.artemzin.android.wail.storage.db.Context . getApplicationContext ( ) ) ; } } } return com.artemzin.android.wail.storage.db.AppDBManager ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.artemzin.android.wail.storage.db.SQLiteDatabase ) { com.artemzin.android.wail.storage.db.SQLiteDatabase . execSQL ( TracksDBHelper . TableInfo . CREATE_TABLE_QUERY ) ; com.artemzin.android.wail.storage.db.SQLiteDatabase . execSQL ( PlayersDBHelper . TableInfo . CREATE_TABLE_QUERY ) ; com.artemzin.android.wail.storage.db.SQLiteDatabase . execSQL ( LovedTracksDBHelper . TableInfo . CREATE_TABLE_QUERY ) ; com.artemzin.android.wail.storage.db.SQLiteDatabase . execSQL ( IgnoredPlayersDBHelper . TableInfo . CREATE_TABLE_QUERY ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SQLiteDatabase com.artemzin.android.wail.storage.db.SQLiteDatabase , int int , int int ) { switch ( int ) { case NUMBER : com.artemzin.android.wail.storage.db.SQLiteDatabase . execSQL ( LovedTracksDBHelper . TableInfo . CREATE_TABLE_QUERY ) ; case NUMBER : com.artemzin.android.wail.storage.db.SQLiteDatabase . execSQL ( IgnoredPlayersDBHelper . TableInfo . CREATE_TABLE_QUERY ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public synchronized void void ( ) { super. close ( ) ; com.artemzin.android.wail.storage.db.AppDBManager = null ; }  <METHOD_END>
<METHOD_START> public static java.lang.Boolean java.lang.Boolean ( int int ) { if ( int < NUMBER ) return false ; if ( int > NUMBER ) return true ; else return null ; }  <METHOD_END>
<METHOD_START> public static int int ( java.lang.Boolean java.lang.Boolean ) { if ( java.lang.Boolean == null ) return NUMBER ; return java.lang.Boolean ? NUMBER : - NUMBER ; }  <METHOD_END>
<METHOD_START> public void void ( ) { PlayersDBHelper . getInstance ( com.artemzin.android.wail.storage.db.Context ) . removeAll ( ) ; TracksDBHelper . getInstance ( com.artemzin.android.wail.storage.db.Context ) . deleteAll ( ) ; LovedTracksDBHelper . getInstance ( com.artemzin.android.wail.storage.db.Context ) . deleteAll ( ) ; IgnoredPlayersDBHelper . getInstance ( com.artemzin.android.wail.storage.db.Context ) . deleteAll ( ) ; }  <METHOD_END>
<METHOD_START> private void ( Context com.artemzin.android.wail.storage.db.Context ) { this . com.artemzin.android.wail.storage.db.Context = com.artemzin.android.wail.storage.db.Context ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper ( Context com.artemzin.android.wail.storage.db.Context ) { if ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper == null ) { synchronized ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper .class ) { if ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper == null ) { com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper = new com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper ( com.artemzin.android.wail.storage.db.Context ) ; } } } return com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper ; }  <METHOD_END>
<METHOD_START> public synchronized long long ( java.lang.String java.lang.String ) { ContentValues com.artemzin.android.wail.storage.db.ContentValues = new ContentValues ( ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String , java.lang.String ) ; final long long = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . insert ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String , null , com.artemzin.android.wail.storage.db.ContentValues ) ; if ( long == - NUMBER ) { Loggi . e ( STRING + java.lang.String ) ; } return long ; }  <METHOD_END>
<METHOD_START> public synchronized java.util.List<com.artemzin.android.wail.storage.db.ApplicationInfo> < ApplicationInfo > java.util.List<com.artemzin.android.wail.storage.db.ApplicationInfo> ( ) { java.util.List<com.artemzin.android.wail.storage.db.ApplicationInfo> < ApplicationInfo > java.util.List<com.artemzin.android.wail.storage.db.ApplicationInfo> = new java.util.ArrayList<com.artemzin.android.wail.storage.db.ApplicationInfo> <> ( ) ; Cursor com.artemzin.android.wail.storage.db.Cursor = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . query ( false , com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String , new java.lang.String [] { com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String } , null , null , null , null , null , null ) ; if ( com.artemzin.android.wail.storage.db.Cursor . moveToFirst ( ) ) { while ( ! com.artemzin.android.wail.storage.db.Cursor . isAfterLast ( ) ) { java.lang.String java.lang.String = com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . int ) ; ApplicationInfo com.artemzin.android.wail.storage.db.ApplicationInfo ; try { com.artemzin.android.wail.storage.db.ApplicationInfo = com.artemzin.android.wail.storage.db.Context . getPackageManager ( ) . getApplicationInfo ( java.lang.String , NUMBER ) ; } catch ( PackageManager . PackageManager PackageManager.NameNotFoundException ) { Loggi . w ( STRING + java.lang.String ) ; com.artemzin.android.wail.storage.db.ApplicationInfo = new ApplicationInfo ( ) ; applicationInfo . packageName = java.lang.String ; } java.util.List<com.artemzin.android.wail.storage.db.ApplicationInfo> . add ( com.artemzin.android.wail.storage.db.ApplicationInfo ) ; com.artemzin.android.wail.storage.db.Cursor . moveToNext ( ) ; } } com.artemzin.android.wail.storage.db.Cursor . close ( ) ; return java.util.List<com.artemzin.android.wail.storage.db.ApplicationInfo> ; }  <METHOD_END>
<METHOD_START> public synchronized boolean boolean ( java.lang.String java.lang.String ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . query ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String , new java.lang.String [] { com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String } , com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( java.lang.String ) } , null , null , null ) . getCount ( ) >= NUMBER ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . delete ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String , null , null ) ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( java.lang.String java.lang.String ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . delete ( com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.IgnoredPlayersDBHelper.TableInfo . java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( java.lang.String ) } ) ; }  <METHOD_END>
<METHOD_START> private void ( Context com.artemzin.android.wail.storage.db.Context ) { this . com.artemzin.android.wail.storage.db.Context = com.artemzin.android.wail.storage.db.Context ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.LovedTracksDBHelper com.artemzin.android.wail.storage.db.LovedTracksDBHelper ( Context com.artemzin.android.wail.storage.db.Context ) { if ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper == null ) { synchronized ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper .class ) { if ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper == null ) { com.artemzin.android.wail.storage.db.LovedTracksDBHelper = new com.artemzin.android.wail.storage.db.LovedTracksDBHelper ( com.artemzin.android.wail.storage.db.Context ) ; } } } return com.artemzin.android.wail.storage.db.LovedTracksDBHelper ; }  <METHOD_END>
<METHOD_START> public synchronized long long ( Track com.artemzin.android.wail.storage.db.Track ) { ContentValues com.artemzin.android.wail.storage.db.ContentValues = com.artemzin.android.wail.storage.db.ContentValues ( com.artemzin.android.wail.storage.db.Track ) ; final long long = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . insert ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . java.lang.String , null , com.artemzin.android.wail.storage.db.ContentValues ) ; if ( long == - NUMBER ) { Loggi . e ( STRING + com.artemzin.android.wail.storage.db.Track ) ; } return long ; }  <METHOD_END>
<METHOD_START> public synchronized com.artemzin.android.wail.storage.db.Cursor com.artemzin.android.wail.storage.db.Cursor ( ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . query ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . java.lang.String , null , null , null , null , null , com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( ) { final int int = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . delete ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . java.lang.String , null , null ) ; return int ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( Track com.artemzin.android.wail.storage.db.Track ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . delete ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( com.artemzin.android.wail.storage.db.Track . getInternalDBId ( ) ) } ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.Track com.artemzin.android.wail.storage.db.Track ( Cursor com.artemzin.android.wail.storage.db.Cursor ) { final Track com.artemzin.android.wail.storage.db.Track = new Track ( ) ; com.artemzin.android.wail.storage.db.Track . setInternalDBId ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setTrack ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setArtist ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . int ) ) ; return com.artemzin.android.wail.storage.db.Track ; }  <METHOD_END>
<METHOD_START> private static com.artemzin.android.wail.storage.db.ContentValues com.artemzin.android.wail.storage.db.ContentValues ( Track com.artemzin.android.wail.storage.db.Track ) { final ContentValues com.artemzin.android.wail.storage.db.ContentValues = new ContentValues ( ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getTrack ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.LovedTracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getArtist ( ) ) ; return com.artemzin.android.wail.storage.db.ContentValues ; }  <METHOD_END>
<METHOD_START> public void ( ) {        }  <METHOD_END>
<METHOD_START> public void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . java.lang.String = java.lang.String ; this . boolean = true ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( boolean boolean ) { this . boolean = boolean ; return this ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( int int ) { this . int = int ; return this ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> private void ( Context com.artemzin.android.wail.storage.db.Context ) { this . com.artemzin.android.wail.storage.db.Context = com.artemzin.android.wail.storage.db.Context . getApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.PlayersDBHelper com.artemzin.android.wail.storage.db.PlayersDBHelper ( Context com.artemzin.android.wail.storage.db.Context ) { if ( com.artemzin.android.wail.storage.db.PlayersDBHelper == null ) { synchronized ( com.artemzin.android.wail.storage.db.PlayersDBHelper .class ) { if ( com.artemzin.android.wail.storage.db.PlayersDBHelper == null ) { com.artemzin.android.wail.storage.db.PlayersDBHelper = new com.artemzin.android.wail.storage.db.PlayersDBHelper ( com.artemzin.android.wail.storage.db.Context ) ; } } } return com.artemzin.android.wail.storage.db.PlayersDBHelper ; }  <METHOD_END>
<METHOD_START> public synchronized boolean boolean ( com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ) { final ContentValues com.artemzin.android.wail.storage.db.ContentValues = new ContentValues ( ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . java.lang.String ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . boolean ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . java.lang.String ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . int ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . java.lang.String ( ) ) ; return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . insert ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , null , com.artemzin.android.wail.storage.db.ContentValues ) != - NUMBER ; }  <METHOD_END>
<METHOD_START> public synchronized com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( java.lang.String java.lang.String ) { final Cursor com.artemzin.android.wail.storage.db.Cursor = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . query ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , null , com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String + STRING , new java.lang.String [] { java.lang.String } , null , null , com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String ) ; com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player = null ; if ( com.artemzin.android.wail.storage.db.Cursor . moveToFirst ( ) ) { com.artemzin.android.wail.storage.db.PlayersDBHelper.Player = com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( com.artemzin.android.wail.storage.db.Cursor ) ; } com.artemzin.android.wail.storage.db.Cursor . close ( ) ; return com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ; }  <METHOD_END>
<METHOD_START> public synchronized java.util.List<com.artemzin.android.wail.storage.db.PlayersDBHelper.Player> < com.artemzin.android.wail.storage.db.PlayersDBHelper.Player > java.util.List<com.artemzin.android.wail.storage.db.PlayersDBHelper.Player> ( ) { final Cursor com.artemzin.android.wail.storage.db.Cursor = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . query ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , null , null , null , null , null , com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String ) ; final java.util.List<com.artemzin.android.wail.storage.db.PlayersDBHelper.Player> < com.artemzin.android.wail.storage.db.PlayersDBHelper.Player > java.util.List<com.artemzin.android.wail.storage.db.PlayersDBHelper.Player> = new java.util.ArrayList<com.artemzin.android.wail.storage.db.PlayersDBHelper.Player> < com.artemzin.android.wail.storage.db.PlayersDBHelper.Player > ( com.artemzin.android.wail.storage.db.Cursor . getCount ( ) ) ; if ( com.artemzin.android.wail.storage.db.Cursor . moveToFirst ( ) ) { do { java.util.List<com.artemzin.android.wail.storage.db.PlayersDBHelper.Player> . boolean ( com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( com.artemzin.android.wail.storage.db.Cursor ) ) ; } while ( com.artemzin.android.wail.storage.db.Cursor . moveToNext ( ) ); } com.artemzin.android.wail.storage.db.Cursor . close ( ) ; return java.util.List<com.artemzin.android.wail.storage.db.PlayersDBHelper.Player> ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . delete ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . java.lang.String , null , null ) ; }  <METHOD_END>
<METHOD_START> private static com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( Cursor com.artemzin.android.wail.storage.db.Cursor ) { final com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player = new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( ) ; com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( com.artemzin.android.wail.storage.db.Cursor . getInt ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . int ) == com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . int ) ; com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( com.artemzin.android.wail.storage.db.Cursor . getInt ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.PlayersDBHelper.TableInfo . int ) ) ; return com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ; }  <METHOD_END>
<METHOD_START> public synchronized void void ( ) { final com.artemzin.android.wail.storage.db.PlayersDBHelper.Player [] com.artemzin.android.wail.storage.db.PlayersDBHelper.Player[] = { new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , null ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , null ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , null ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , null ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , null ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , STRING ) , new com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( STRING , STRING , null ) ,        } ; AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . beginTransaction ( ) ; try { for ( com.artemzin.android.wail.storage.db.PlayersDBHelper.Player com.artemzin.android.wail.storage.db.PlayersDBHelper.Player : com.artemzin.android.wail.storage.db.PlayersDBHelper.Player[] ) { if ( com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ( com.artemzin.android.wail.storage.db.PlayersDBHelper.Player . java.lang.String ( ) ) == null ) { boolean ( com.artemzin.android.wail.storage.db.PlayersDBHelper.Player ) ; } } AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . setTransactionSuccessful ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { EasyTracker . getInstance ( com.artemzin.android.wail.storage.db.Context ) . send ( MapBuilder . createException ( STRING + java.lang.Exception . java.lang.String ( ) , false ) . build ( ) ) ; Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } finally { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . endTransaction ( ) ; } }  <METHOD_END>
<METHOD_START> private void ( Context com.artemzin.android.wail.storage.db.Context ) { this . com.artemzin.android.wail.storage.db.Context = com.artemzin.android.wail.storage.db.Context . getApplicationContext ( ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.TracksDBHelper com.artemzin.android.wail.storage.db.TracksDBHelper ( Context com.artemzin.android.wail.storage.db.Context ) { if ( com.artemzin.android.wail.storage.db.TracksDBHelper == null ) { synchronized ( com.artemzin.android.wail.storage.db.TracksDBHelper .class ) { if ( com.artemzin.android.wail.storage.db.TracksDBHelper == null ) { com.artemzin.android.wail.storage.db.TracksDBHelper = new com.artemzin.android.wail.storage.db.TracksDBHelper ( com.artemzin.android.wail.storage.db.Context ) ; } } } return com.artemzin.android.wail.storage.db.TracksDBHelper ; }  <METHOD_END>
<METHOD_START> public synchronized long long ( Track com.artemzin.android.wail.storage.db.Track ) { ContentValues com.artemzin.android.wail.storage.db.ContentValues = com.artemzin.android.wail.storage.db.ContentValues ( com.artemzin.android.wail.storage.db.Track ) ; final long long = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . insert ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , null , com.artemzin.android.wail.storage.db.ContentValues ) ; if ( long == - NUMBER ) { Loggi . e ( STRING + com.artemzin.android.wail.storage.db.Track ) ; } void ( ) ; return long ; }  <METHOD_END>
<METHOD_START> public synchronized boolean boolean ( Track com.artemzin.android.wail.storage.db.Track ) { ContentValues com.artemzin.android.wail.storage.db.ContentValues = com.artemzin.android.wail.storage.db.ContentValues ( com.artemzin.android.wail.storage.db.Track ) ; final boolean boolean = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . update ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.ContentValues , com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( com.artemzin.android.wail.storage.db.Track . getInternalDBId ( ) ) } ) >= NUMBER ; if ( ! boolean ) { Loggi . e ( STRING + com.artemzin.android.wail.storage.db.Track ) ; } void ( ) ; return boolean ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( Track com.artemzin.android.wail.storage.db.Track ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . delete ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( com.artemzin.android.wail.storage.db.Track . getInternalDBId ( ) ) } ) ; }  <METHOD_END>
<METHOD_START> public synchronized void void ( java.util.List<com.artemzin.android.wail.storage.db.Track> < Track > java.util.List<com.artemzin.android.wail.storage.db.Track> ) { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . beginTransaction ( ) ; try { for ( Track com.artemzin.android.wail.storage.db.Track : java.util.List<com.artemzin.android.wail.storage.db.Track> ) { final ContentValues com.artemzin.android.wail.storage.db.ContentValues = com.artemzin.android.wail.storage.db.ContentValues ( com.artemzin.android.wail.storage.db.Track ) ; AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . update ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.ContentValues , com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING , new java.lang.String [] { java.lang.String . java.lang.String ( com.artemzin.android.wail.storage.db.Track . getInternalDBId ( ) ) } ) ; } AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . setTransactionSuccessful ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } finally { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . endTransaction ( ) ; } void ( ) ; }  <METHOD_END>
<METHOD_START> public synchronized com.artemzin.android.wail.storage.db.Cursor com.artemzin.android.wail.storage.db.Cursor ( ) { return AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . query ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , null , null , null , null , null , com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING ) ; }  <METHOD_END>
<METHOD_START> public synchronized com.artemzin.android.wail.storage.db.Track com.artemzin.android.wail.storage.db.Track ( ) { Cursor com.artemzin.android.wail.storage.db.Cursor = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getReadableDatabase ( ) . rawQuery ( STRING + com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING + com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String + STRING , null ) ; Track com.artemzin.android.wail.storage.db.Track = null ; if ( com.artemzin.android.wail.storage.db.Cursor . moveToFirst ( ) ) { com.artemzin.android.wail.storage.db.Track = com.artemzin.android.wail.storage.db.Track ( com.artemzin.android.wail.storage.db.Cursor ) ; } com.artemzin.android.wail.storage.db.Cursor . close ( ) ; return com.artemzin.android.wail.storage.db.Track ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( ) { final int int = AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . delete ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , null , null ) ; void ( ) ; return int ; }  <METHOD_END>
<METHOD_START> public synchronized int int ( int int ) { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . beginTransaction ( ) ; int int = NUMBER ; try { Cursor com.artemzin.android.wail.storage.db.Cursor = com.artemzin.android.wail.storage.db.Cursor ( ) ; if ( com.artemzin.android.wail.storage.db.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.storage.db.Track = com.artemzin.android.wail.storage.db.Track ( com.artemzin.android.wail.storage.db.Cursor ) ; if ( com.artemzin.android.wail.storage.db.Track . getState ( ) == Track . STATE_SCROBBLING && java.lang.System . long ( ) - com.artemzin.android.wail.storage.db.Track . getStateTimestamp ( ) > NUMBER ) { int += int ( com.artemzin.android.wail.storage.db.Track ) ; } } while ( com.artemzin.android.wail.storage.db.Cursor . moveToNext ( ) ); } final int int = com.artemzin.android.wail.storage.db.Cursor . getCount ( ) ; if ( int > int ) { for ( int int = int ; int < int ; int ++ ) { com.artemzin.android.wail.storage.db.Cursor . moveToPosition ( int ) ; final Track com.artemzin.android.wail.storage.db.Track = com.artemzin.android.wail.storage.db.Track ( com.artemzin.android.wail.storage.db.Cursor ) ; if ( java.lang.System . long ( ) - com.artemzin.android.wail.storage.db.Track . getStateTimestamp ( ) > NUMBER && ( com.artemzin.android.wail.storage.db.Track . getState ( ) == Track . STATE_SCROBBLE_SUCCESS || com.artemzin.android.wail.storage.db.Track . getState ( ) == Track . STATE_SCROBBLE_ERROR || com.artemzin.android.wail.storage.db.Track . getState ( ) == Track . STATE_SCROBBLING ) ) { int += int ( com.artemzin.android.wail.storage.db.Track ) ; } } } AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . setTransactionSuccessful ( ) ; com.artemzin.android.wail.storage.db.Cursor . close ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.String java.lang.String = STRING + java.lang.Exception ; Loggi . e ( java.lang.String ) ; EasyTracker . getInstance ( com.artemzin.android.wail.storage.db.Context ) . send ( MapBuilder . createException ( java.lang.String , false ) . build ( ) ) ; } finally { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . endTransaction ( ) ; } if ( int > NUMBER ) { try { AppDBManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . getWritableDatabase ( ) . execSQL ( STRING ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } void ( ) ; return int ; }  <METHOD_END>
<METHOD_START> private void void ( ) { LocalBroadcastManager . getInstance ( com.artemzin.android.wail.storage.db.Context ) . sendBroadcast ( new Intent ( java.lang.String ) ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.ContentValues com.artemzin.android.wail.storage.db.ContentValues ( Track com.artemzin.android.wail.storage.db.Track ) { final ContentValues com.artemzin.android.wail.storage.db.ContentValues = new ContentValues ( ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getPlayerPackageName ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getTrack ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getArtist ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getAlbum ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getDuration ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getTimestamp ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getState ( ) ) ; com.artemzin.android.wail.storage.db.ContentValues . put ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . java.lang.String , com.artemzin.android.wail.storage.db.Track . getStateTimestamp ( ) ) ; return com.artemzin.android.wail.storage.db.ContentValues ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.storage.db.Track com.artemzin.android.wail.storage.db.Track ( Cursor com.artemzin.android.wail.storage.db.Cursor ) { final Track com.artemzin.android.wail.storage.db.Track = new Track ( ) ; com.artemzin.android.wail.storage.db.Track . setInternalDBId ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setPlayerPackageName ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setTrack ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setArtist ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setAlbum ( com.artemzin.android.wail.storage.db.Cursor . getString ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setDuration ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setTimestamp ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setState ( com.artemzin.android.wail.storage.db.Cursor . getInt ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; com.artemzin.android.wail.storage.db.Track . setStateTimestamp ( com.artemzin.android.wail.storage.db.Cursor . getLong ( com.artemzin.android.wail.storage.db.TracksDBHelper.TableInfo . int ) ) ; return com.artemzin.android.wail.storage.db.Track ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { this . int = int ; }  <METHOD_END>
<METHOD_START> public long long ( ) { return long ; }  <METHOD_END>
<METHOD_START> public void void ( long long ) { this . long = long ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.String java.lang.String ( ) { return STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + java.lang.String + STRING + long ; }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track ( ) { final com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track = new com.artemzin.android.wail.storage.model.Track ( ) ; com.artemzin.android.wail.storage.model.Track . java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.model.Track . java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.model.Track . java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.model.Track . java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.model.Track . long = long ; com.artemzin.android.wail.storage.model.Track . long = long ; com.artemzin.android.wail.storage.model.Track . int = int ; return com.artemzin.android.wail.storage.model.Track ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track ) { if ( com.artemzin.android.wail.storage.model.Track == null ) return false ; if ( ! TextUtils . equals ( java.lang.String ( ) , com.artemzin.android.wail.storage.model.Track . java.lang.String ( ) ) ) { return false ; } if ( ! TextUtils . equals ( java.lang.String ( ) , com.artemzin.android.wail.storage.model.Track . java.lang.String ( ) ) ) { return false ; } if ( ! TextUtils . equals ( java.lang.String ( ) , com.artemzin.android.wail.storage.model.Track . java.lang.String ( ) ) ) { return false ; } if ( long != com.artemzin.android.wail.storage.model.Track . long ( ) ) { return false ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.Object java.lang.Object ) { if ( java.lang.Object instanceof com.artemzin.android.wail.storage.model.Track ) { com.artemzin.android.wail.storage.model.Track com.artemzin.android.wail.storage.model.Track = ( com.artemzin.android.wail.storage.model.Track ) java.lang.Object ; return long == com.artemzin.android.wail.storage.model.Track . long && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.storage.model.Track . java.lang.String ) && TextUtils . equals ( this . java.lang.String , com.artemzin.android.wail.storage.model.Track . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.storage.model.Track . java.lang.String ) && TextUtils . equals ( java.lang.String , com.artemzin.android.wail.storage.model.Track . java.lang.String ) && long == com.artemzin.android.wail.storage.model.Track . long && long == com.artemzin.android.wail.storage.model.Track . long && int == com.artemzin.android.wail.storage.model.Track . int && long == com.artemzin.android.wail.storage.model.Track . long ; } return false ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> private static com.artemzin.android.wail.storage.SharedPreferences com.artemzin.android.wail.storage.SharedPreferences ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.Context . getSharedPreferences ( java.lang.String , Context . MODE_PRIVATE ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context ) { java.lang.String = null ; java.lang.String = null ; java.lang.Boolean = null ; java.lang.Integer = null ; java.lang.Integer = null ; java.lang.Long = null ; java.lang.Boolean = null ; java.lang.String = null ; java.lang.String = null ; java.lang.Boolean = null ; java.lang.Boolean = null ; java.lang.Boolean = null ; java.lang.Boolean = null ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . clear ( ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized com.artemzin.android.wail.storage.WAILSettings.Theme com.artemzin.android.wail.storage.WAILSettings.Theme ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.WAILSettings.Theme . com.artemzin.android.wail.storage.WAILSettings.Theme ( com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , com.artemzin.android.wail.storage.WAILSettings.Theme . com.artemzin.android.wail.storage.WAILSettings.Theme . java.lang.String ( ) ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , com.artemzin.android.wail.storage.WAILSettings.Theme com.artemzin.android.wail.storage.WAILSettings.Theme ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , com.artemzin.android.wail.storage.WAILSettings.Theme . java.lang.String ( ) ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return ! TextUtils . isEmpty ( java.lang.String ( com.artemzin.android.wail.storage.Context ) ) ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.String != null ? java.lang.String : ( java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.String != null ? java.lang.String : ( java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized int int ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Integer != null ? java.lang.Integer : ( java.lang.Integer = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getInt ( java.lang.String , int ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , int int ) { java.lang.Integer = int ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putInt ( java.lang.String , int ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized int int ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Integer != null ? java.lang.Integer : ( java.lang.Integer = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getInt ( java.lang.String , int ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , int int ) { java.lang.Integer = int ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putInt ( java.lang.String , int ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized long long ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Long != null ? java.lang.Long : ( java.lang.Long = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getLong ( java.lang.String , NUMBER ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , long long ) { java.lang.Long = long ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putLong ( java.lang.String , long ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { final java.lang.String java.lang.String = java.lang.String ; if ( ! TextUtils . isEmpty ( java.lang.String ) ) { return java.lang.String ; } return java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) ; SharedPreferences.Editor . putString ( java.lang.String , java.lang.String ) ; SharedPreferences.Editor . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { final java.lang.String java.lang.String = java.lang.String ; if ( ! TextUtils . isEmpty ( java.lang.String ) ) { return java.lang.String ; } return java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; final SharedPreferences . SharedPreferences SharedPreferences.Editor = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) ; SharedPreferences.Editor . putString ( java.lang.String , java.lang.String ) ; SharedPreferences.Editor . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized WAILService . WAILService.LastCapturedTrackInfo WAILService.LastCapturedTrackInfo ( Context com.artemzin.android.wail.storage.Context ) { return WAILService . LastCapturedTrackInfo . fromJSON ( com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , STRING ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , WAILService . WAILService WAILService.LastCapturedTrackInfo ) { java.lang.String java.lang.String = null ; if ( WAILService.LastCapturedTrackInfo != null ) { java.lang.String = WAILService.LastCapturedTrackInfo . toJSON ( ) ; } com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized com.artemzin.android.wail.storage.LFUserResponseModel com.artemzin.android.wail.storage.LFUserResponseModel ( Context com.artemzin.android.wail.storage.Context ) { try { return LFUserResponseModel . parseFromJSON ( com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , STRING ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized long long ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getLong ( java.lang.String , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , long long ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putLong ( java.lang.String , long ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : ( java.lang.Boolean = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized com.artemzin.android.wail.storage.Track com.artemzin.android.wail.storage.Track ( Context com.artemzin.android.wail.storage.Context ) { java.lang.String java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; java.lang.String java.lang.String = com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; if ( java.lang.String == null && java.lang.String == null ) { return null ; } Track com.artemzin.android.wail.storage.Track = new Track ( ) ; com.artemzin.android.wail.storage.Track . setArtist ( java.lang.String ) ; com.artemzin.android.wail.storage.Track . setTrack ( java.lang.String ) ; return com.artemzin.android.wail.storage.Track ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , Track com.artemzin.android.wail.storage.Track ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , com.artemzin.android.wail.storage.Track == null ? null : com.artemzin.android.wail.storage.Track . getArtist ( ) ) . apply ( ) ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , com.artemzin.android.wail.storage.Track == null ? null : com.artemzin.android.wail.storage.Track . getTrack ( ) ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static synchronized java.lang.String java.lang.String ( Context com.artemzin.android.wail.storage.Context ) { return com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getString ( java.lang.String , null ) ; }  <METHOD_END>
<METHOD_START> public static synchronized void void ( Context com.artemzin.android.wail.storage.Context , java.lang.String java.lang.String ) { com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putString ( java.lang.String , java.lang.String ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , true ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { com.artemzin.android.wail.storage.WAILSettings . java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.storage.Context ) { return java.lang.Boolean != null ? java.lang.Boolean : com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . getBoolean ( java.lang.String , false ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.storage.Context , boolean boolean ) { com.artemzin.android.wail.storage.WAILSettings . java.lang.Boolean = boolean ; com.artemzin.android.wail.storage.SharedPreferences ( com.artemzin.android.wail.storage.Context ) . edit ( ) . putBoolean ( java.lang.String , boolean ) . apply ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.activity.Context , Intent com.artemzin.android.wail.ui.activity.Intent ) { WAILSettings . clearAllSettings ( com.artemzin.android.wail.ui.activity.BaseActivity .this ) ; AppDBManager . getInstance ( com.artemzin.android.wail.ui.activity.BaseActivity .this ) . clearAll ( ) ; LocaleUtil . updateLanguage ( com.artemzin.android.wail.ui.activity.BaseActivity .this , null ) ; startActivity ( new Intent ( com.artemzin.android.wail.ui.activity.BaseActivity .this , MainActivity .class ) ) ; com.artemzin.android.wail.ui.activity.BaseActivity .this . finish ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) { void ( ) ; super. onCreate ( com.artemzin.android.wail.ui.activity.Bundle ) ; if ( com.artemzin.android.wail.ui.activity.Bundle == null ) { void ( ) ; } void ( com.artemzin.android.wail.ui.activity.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPause ( ) ; unregisterReceiver ( com.artemzin.android.wail.ui.activity.BroadcastReceiver ) ; WAILApp . activityPaused ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onResume ( ) ; registerReceiver ( com.artemzin.android.wail.ui.activity.BroadcastReceiver , new IntentFilter ( java.lang.String ) ) ; WAILApp . activityResumed ( ) ; }  <METHOD_END>
<METHOD_START> protected void void ( ) {    }  <METHOD_END>
<METHOD_START> protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) {    }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; EasyTracker . getInstance ( this ) . activityStart ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.artemzin.android.wail.ui.activity.MenuItem ) { if ( com.artemzin.android.wail.ui.activity.MenuItem . getItemId ( ) == android . R . id . home ) { if ( boolean ( ) ) { finish ( ) ; return true ; } } return super. onOptionsItemSelected ( com.artemzin.android.wail.ui.activity.MenuItem ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onStop ( ) ; EasyTracker . getInstance ( this ) . activityStop ( this ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { if ( WAILSettings . getTheme ( getBaseContext ( ) ) == WAILSettings . Theme . DARK ) { if ( this instanceof MainActivity ) { void ( R . style . AppTheme_Dark_NoActionBar ) ; } else { void ( R . style . AppTheme_Dark ) ; } } else { if ( this instanceof MainActivity ) { void ( R . style . AppTheme_Light_NoActionBar ) ; } else { void ( R . style . AppTheme_Light ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( ) { finish ( ) ; startActivity ( getIntent ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnItemClick ( R . id . main_left_drawer_list ) public void void ( int int ) { void ( int ) ; if ( com.artemzin.android.wail.ui.activity.DrawerLayout != null ) { SleepIfRequiredAsyncTask . newInstance ( SystemClock . elapsedRealtime ( ) , NUMBER , new java.lang.Runnable ( ) { @ java.lang.Override public void void ( ) { try { com.artemzin.android.wail.ui.activity.DrawerLayout . closeDrawers ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } } ) . execute ( ) ; } void ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { try { com.artemzin.android.wail.ui.activity.DrawerLayout . closeDrawers ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( final Bundle com.artemzin.android.wail.ui.activity.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.Bundle ) ; setContentView ( R . layout . activity_main ) ; ButterKnife . inject ( this ) ; setSupportActionBar ( com.artemzin.android.wail.ui.activity.Toolbar ) ; if ( ! WAILSettings . isAuthorized ( this ) ) { startActivityForResult ( new Intent ( this , NonAuthorizedActivity .class ) , int ) ; } void ( ) ; if ( com.artemzin.android.wail.ui.activity.DrawerLayout != null ) { com.artemzin.android.wail.ui.activity.DrawerLayout . setStatusBarBackgroundColor ( getResources ( ) . getColor ( R . color . primary_dark ) ) ; com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle = new ActionBarDrawerToggle ( this , com.artemzin.android.wail.ui.activity.DrawerLayout , R . string . app_name , R . string . app_name ) { @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.activity.View ) { super. onDrawerOpened ( com.artemzin.android.wail.ui.activity.View ) ; if ( TextUtils . isEmpty ( com.artemzin.android.wail.ui.activity.TypefaceTextView . getText ( ) . toString ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.ui.activity.TypefaceTextView . getText ( ) . toString ( ) ) ) { void ( ) ; } } } ; com.artemzin.android.wail.ui.activity.DrawerLayout . setDrawerListener ( com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar ( ) . setHomeButtonEnabled ( true ) ; } else if ( com.artemzin.android.wail.ui.activity.DrawerLayout != null ) { com.artemzin.android.wail.ui.activity.DrawerLayout . setStatusBarBackgroundColor ( getResources ( ) . getColor ( R . color . primary_dark ) ) ; } ArrayAdapter < java.lang.String > com.artemzin.android.wail.ui.activity.ArrayAdapter<java.lang.String> = new ArrayAdapter < java.lang.String > ( this , R . layout . activity_main_drawer_item_layout , getResources ( ) . getStringArray ( R . array . drawer_items ) ) { @ java.lang.Override public com.artemzin.android.wail.ui.activity.View com.artemzin.android.wail.ui.activity.View ( int int , View com.artemzin.android.wail.ui.activity.View , ViewGroup com.artemzin.android.wail.ui.activity.ViewGroup ) { ViewHolder holder ; View com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.View ; if ( com.artemzin.android.wail.ui.activity.View == null ) { LayoutInflater com.artemzin.android.wail.ui.activity.LayoutInflater = getLayoutInflater ( ) ; com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.LayoutInflater . inflate ( R . layout . activity_main_drawer_item_layout , com.artemzin.android.wail.ui.activity.ViewGroup , false ) ; holder = new ViewHolder ( ) ; holder . com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.View ; holder . com.artemzin.android.wail.ui.activity.TypefaceTextView = ( TypefaceTextView ) com.artemzin.android.wail.ui.activity.View . findViewById ( R . id . activity_main_drawer_item_text ) ; holder . com.artemzin.android.wail.ui.activity.ImageView = ( ImageView ) com.artemzin.android.wail.ui.activity.View . findViewById ( R . id . activity_main_drawer_item_image ) ; com.artemzin.android.wail.ui.activity.View . setTag ( holder ) ; } else { holder = ( ViewHolder ) com.artemzin.android.wail.ui.activity.View . getTag ( ) ; } holder . com.artemzin.android.wail.ui.activity.TypefaceTextView . setText ( getItem ( int ) ) ; switch ( int ) { case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_home_grey600_24dp ) ; break; case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_list_grey600_24dp ) ; break; case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_settings_grey600_24dp ) ; break; } if ( int == NUMBER && int == - NUMBER ) { holder . com.artemzin.android.wail.ui.activity.View . setBackgroundColor ( getResources ( ) . getColor ( R . color . drawer_item_selected_background ) ) ; int = NUMBER ; } return com.artemzin.android.wail.ui.activity.View ; } class ViewHolder { com.artemzin.android.wail.ui.activity.View com.artemzin.android.wail.ui.activity.View ; com.artemzin.android.wail.ui.activity.TypefaceTextView com.artemzin.android.wail.ui.activity.TypefaceTextView ; com.artemzin.android.wail.ui.activity.ImageView com.artemzin.android.wail.ui.activity.ImageView ; } } ; com.artemzin.android.wail.ui.activity.ListView . setAdapter ( com.artemzin.android.wail.ui.activity.ArrayAdapter<java.lang.String> ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.activity.View ) { super. onDrawerOpened ( com.artemzin.android.wail.ui.activity.View ) ; if ( TextUtils . isEmpty ( com.artemzin.android.wail.ui.activity.TypefaceTextView . getText ( ) . toString ( ) ) || TextUtils . isEmpty ( com.artemzin.android.wail.ui.activity.TypefaceTextView . getText ( ) . toString ( ) ) ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.activity.View com.artemzin.android.wail.ui.activity.View ( int int , View com.artemzin.android.wail.ui.activity.View , ViewGroup com.artemzin.android.wail.ui.activity.ViewGroup ) { ViewHolder holder ; View com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.View ; if ( com.artemzin.android.wail.ui.activity.View == null ) { LayoutInflater com.artemzin.android.wail.ui.activity.LayoutInflater = getLayoutInflater ( ) ; com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.LayoutInflater . inflate ( R . layout . activity_main_drawer_item_layout , com.artemzin.android.wail.ui.activity.ViewGroup , false ) ; holder = new ViewHolder ( ) ; holder . com.artemzin.android.wail.ui.activity.View = com.artemzin.android.wail.ui.activity.View ; holder . com.artemzin.android.wail.ui.activity.TypefaceTextView = ( TypefaceTextView ) com.artemzin.android.wail.ui.activity.View . findViewById ( R . id . activity_main_drawer_item_text ) ; holder . com.artemzin.android.wail.ui.activity.ImageView = ( ImageView ) com.artemzin.android.wail.ui.activity.View . findViewById ( R . id . activity_main_drawer_item_image ) ; com.artemzin.android.wail.ui.activity.View . setTag ( holder ) ; } else { holder = ( ViewHolder ) com.artemzin.android.wail.ui.activity.View . getTag ( ) ; } holder . com.artemzin.android.wail.ui.activity.TypefaceTextView . setText ( getItem ( int ) ) ; switch ( int ) { case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_home_grey600_24dp ) ; break; case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_list_grey600_24dp ) ; break; case NUMBER : holder . com.artemzin.android.wail.ui.activity.ImageView . setImageResource ( R . drawable . ic_settings_grey600_24dp ) ; break; } if ( int == NUMBER && int == - NUMBER ) { holder . com.artemzin.android.wail.ui.activity.View . setBackgroundColor ( getResources ( ) . getColor ( R . color . drawer_item_selected_background ) ) ; int = NUMBER ; } return com.artemzin.android.wail.ui.activity.View ; }  <METHOD_END>
<METHOD_START> private void void ( ) { TypedValue com.artemzin.android.wail.ui.activity.TypedValue = new TypedValue ( ) ; getTheme ( ) . resolveAttribute ( R . attr . actionBarSize , com.artemzin.android.wail.ui.activity.TypedValue , true ) ; DisplayMetrics com.artemzin.android.wail.ui.activity.DisplayMetrics = getResources ( ) . getDisplayMetrics ( ) ; float float = com.artemzin.android.wail.ui.activity.TypedValue . getDimension ( com.artemzin.android.wail.ui.activity.DisplayMetrics ) ; ViewGroup . ViewGroup ViewGroup.LayoutParams = com.artemzin.android.wail.ui.activity.FrameLayout . getLayoutParams ( ) ; if ( getResources ( ) . getBoolean ( R . bool . isTablet ) ) { params . width = ( int ) java.lang.Math . int ( displayMetrics . widthPixels - float , getResources ( ) . getDimension ( R . dimen . main_drawer_standard_increment ) * NUMBER ) ; } else { if ( getResources ( ) . getConfiguration ( ) . orientation == Configuration . ORIENTATION_PORTRAIT ) { params . width = ( int ) ( displayMetrics . widthPixels - float ) ; } else { params . width = ( int ) ( displayMetrics . heightPixels - float ) ; } } com.artemzin.android.wail.ui.activity.FrameLayout . setLayoutParams ( ViewGroup.LayoutParams ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { com.artemzin.android.wail.ui.activity.TypefaceTextView . setText ( WAILSettings . getLastfmUserName ( this ) ) ; com.artemzin.android.wail.ui.activity.TypefaceTextView . setText ( getString ( R . string . drawer_registered_at ) + WAILSettings . getLastfmUserRegistered ( this ) . split ( STRING ) [ NUMBER ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) { super. onPostCreate ( com.artemzin.android.wail.ui.activity.Bundle ) ; if ( com.artemzin.android.wail.ui.activity.DrawerLayout != null && com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle != null ) { com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle . syncState ( ) ; } com.artemzin.android.wail.ui.activity.Fragment[] [ NUMBER ] = new MainFragment ( ) ; com.artemzin.android.wail.ui.activity.Fragment[] [ NUMBER ] = new TracksListFragment ( ) ; com.artemzin.android.wail.ui.activity.Fragment[] [ NUMBER ] = new SettingsFragment ( ) ; void ( NUMBER ) ; if ( WAILSettings . isFirstLaunch ( this ) ) { WAILSettings . setIsFirstLaunch ( this , false ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( int int , int int , Intent com.artemzin.android.wail.ui.activity.Intent ) { super. onActivityResult ( int , int , com.artemzin.android.wail.ui.activity.Intent ) ; if ( int == int ) { if ( int == RESULT_CANCELED ) { finish ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( MenuItem com.artemzin.android.wail.ui.activity.MenuItem ) { if ( com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle != null && com.artemzin.android.wail.ui.activity.ActionBarDrawerToggle . onOptionsItemSelected ( com.artemzin.android.wail.ui.activity.MenuItem ) ) { return true ; } return super. onOptionsItemSelected ( com.artemzin.android.wail.ui.activity.MenuItem ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) { super. onSaveInstanceState ( com.artemzin.android.wail.ui.activity.Bundle ) ; }  <METHOD_END>
<METHOD_START> private void void ( final int int ) { final FragmentTransaction com.artemzin.android.wail.ui.activity.FragmentTransaction = getFragmentManager ( ) . beginTransaction ( ) ; com.artemzin.android.wail.ui.activity.FragmentTransaction . setCustomAnimations ( R . anim . fragment_transaction_alpha_up , R . anim . fragment_transaction_alpha_down ) ; com.artemzin.android.wail.ui.activity.FragmentTransaction . replace ( R . id . main_content , com.artemzin.android.wail.ui.activity.Fragment[] [ int ] ) ; com.artemzin.android.wail.ui.activity.FragmentTransaction . commit ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { if ( int != - NUMBER ) { com.artemzin.android.wail.ui.activity.ListView . getChildAt ( int ) . setBackgroundColor ( getResources ( ) . getColor ( R . color . drawer_item_background ) ) ; } com.artemzin.android.wail.ui.activity.ListView . getChildAt ( int ) . setBackgroundColor ( getResources ( ) . getColor ( R . color . drawer_item_selected_background ) ) ; int = int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.Bundle ) ; setContentView ( R . layout . activity_non_authorized ) ; if ( com.artemzin.android.wail.ui.activity.Bundle == null ) { getFragmentManager ( ) . beginTransaction ( ) . add ( R . id . non_authorized_frame , new NonAuthorizedMainFragment ( ) ) . commit ( ) ; } setResult ( RESULT_CANCELED ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. setupUI ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; overridePendingTransition ( R . anim . activity_pull_from_right_to_left , R . anim . activity_pull_from_current_to_left ) ; getSupportActionBar ( ) . setDisplayHomeAsUpEnabled ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPause ( ) ; overridePendingTransition ( R . anim . activity_pull_from_left_out_to_screen , R . anim . activity_pull_from_center_to_out_right ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; setContentView ( R . layout . activity_settings_ignored_players ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; setContentView ( R . layout . activity_settings_select_language ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; setContentView ( R . layout . activity_settings_sound_notifications ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle com.artemzin.android.wail.ui.activity.settings.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.activity.settings.Bundle ) ; setContentView ( R . layout . activity_settings_status_bar_notifications ) ; }  <METHOD_END>
<METHOD_START> @ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.activity.Context , AppWidgetManager com.artemzin.android.wail.ui.activity.AppWidgetManager , int [] int[] ) { super. onUpdate ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.AppWidgetManager , int[] ) ; for ( int int : int[] ) { Bundle com.artemzin.android.wail.ui.activity.Bundle = com.artemzin.android.wail.ui.activity.AppWidgetManager . getAppWidgetOptions ( int ) ; void ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.AppWidgetManager , int , com.artemzin.android.wail.ui.activity.Bundle ) ; } }  <METHOD_END>
<METHOD_START> @ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.activity.Context , AppWidgetManager com.artemzin.android.wail.ui.activity.AppWidgetManager , int int , Bundle com.artemzin.android.wail.ui.activity.Bundle ) { RemoteViews com.artemzin.android.wail.ui.activity.RemoteViews = new RemoteViews ( com.artemzin.android.wail.ui.activity.Context . getPackageName ( ) , R . layout . waillove_widget ) ; int int = com.artemzin.android.wail.ui.activity.Bundle . getInt ( AppWidgetManager . OPTION_APPWIDGET_MIN_WIDTH ) ; if ( int > int ) { com.artemzin.android.wail.ui.activity.RemoteViews . setViewVisibility ( R . id . widget_infobox_layout , View . VISIBLE ) ; } else { com.artemzin.android.wail.ui.activity.RemoteViews . setViewVisibility ( R . id . widget_infobox_layout , View . GONE ) ; } Intent com.artemzin.android.wail.ui.activity.Intent = new Intent ( com.artemzin.android.wail.ui.activity.Context , java.lang.Class<? extends com.artemzin.android.wail.ui.activity.WAILLoveWidget> ( ) ) ; com.artemzin.android.wail.ui.activity.Intent . setAction ( java.lang.String ) ; PendingIntent com.artemzin.android.wail.ui.activity.PendingIntent = PendingIntent . getBroadcast ( com.artemzin.android.wail.ui.activity.Context , NUMBER , com.artemzin.android.wail.ui.activity.Intent , NUMBER ) ; com.artemzin.android.wail.ui.activity.RemoteViews . setOnClickPendingIntent ( R . id . widget_love_current_track_button , com.artemzin.android.wail.ui.activity.PendingIntent ) ; Intent com.artemzin.android.wail.ui.activity.Intent = new Intent ( com.artemzin.android.wail.ui.activity.Context , MainActivity .class ) ; PendingIntent com.artemzin.android.wail.ui.activity.PendingIntent = PendingIntent . getActivity ( com.artemzin.android.wail.ui.activity.Context , NUMBER , com.artemzin.android.wail.ui.activity.Intent , NUMBER ) ; com.artemzin.android.wail.ui.activity.RemoteViews . setOnClickPendingIntent ( R . id . widget_infobox_layout , com.artemzin.android.wail.ui.activity.PendingIntent ) ; com.artemzin.android.wail.ui.activity.AppWidgetManager . updateAppWidget ( int , com.artemzin.android.wail.ui.activity.RemoteViews ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ NonNull final Context com.artemzin.android.wail.ui.activity.Context , @ NonNull final Intent com.artemzin.android.wail.ui.activity.Intent ) { super. onReceive ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.Intent ) ; if ( java.lang.String . boolean ( com.artemzin.android.wail.ui.activity.Intent . getAction ( ) ) ) { final Track com.artemzin.android.wail.ui.activity.Track = WAILSettings . getNowScrobblingTrack ( com.artemzin.android.wail.ui.activity.Context ) ; if ( com.artemzin.android.wail.ui.activity.Track == null ) { Toast . makeText ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.Context . getString ( R . string . widget_nothing_to_love ) , Toast . LENGTH_SHORT ) . show ( ) ; return; } AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { LovedTracksDBHelper . getInstance ( com.artemzin.android.wail.ui.activity.Context ) . add ( com.artemzin.android.wail.ui.activity.Track ) ; Intent com.artemzin.android.wail.ui.activity.Intent = new Intent ( com.artemzin.android.wail.ui.activity.Context , WAILService .class ) ; com.artemzin.android.wail.ui.activity.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; com.artemzin.android.wail.ui.activity.Context . startService ( com.artemzin.android.wail.ui.activity.Intent ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { Toast . makeText ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.Context . getString ( R . string . main_track_loved ) , Toast . LENGTH_SHORT ) . show ( ) ; } } ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { LovedTracksDBHelper . getInstance ( com.artemzin.android.wail.ui.activity.Context ) . add ( com.artemzin.android.wail.ui.activity.Track ) ; Intent com.artemzin.android.wail.ui.activity.Intent = new Intent ( com.artemzin.android.wail.ui.activity.Context , WAILService .class ) ; com.artemzin.android.wail.ui.activity.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; com.artemzin.android.wail.ui.activity.Context . startService ( com.artemzin.android.wail.ui.activity.Intent ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { Toast . makeText ( com.artemzin.android.wail.ui.activity.Context , com.artemzin.android.wail.ui.activity.Context . getString ( R . string . main_track_loved ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> protected boolean boolean ( ) { return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.fragment.Bundle ) ; this . com.artemzin.android.wail.ui.fragment.Bundle = com.artemzin.android.wail.ui.fragment.Bundle ; if ( boolean ( ) ) { setRetainInstance ( true ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.View , Bundle com.artemzin.android.wail.ui.fragment.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.View , com.artemzin.android.wail.ui.fragment.Bundle ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; if ( ! boolean ) { boolean = true ; void ( com.artemzin.android.wail.ui.fragment.Bundle ) ; } }  <METHOD_END>
<METHOD_START> protected void void ( Bundle com.artemzin.android.wail.ui.fragment.Bundle ) {}  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback ) { this . com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback = com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Activity com.artemzin.android.wail.ui.fragment.dialogs.Activity ) { super. onAttach ( com.artemzin.android.wail.ui.fragment.dialogs.Activity ) ; this . com.artemzin.android.wail.ui.fragment.dialogs.Activity = com.artemzin.android.wail.ui.fragment.dialogs.Activity ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.dialogs.DialogInterface ) { super. onDismiss ( com.artemzin.android.wail.ui.fragment.dialogs.DialogInterface ) ; if ( com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback != null ) { com.artemzin.android.wail.ui.fragment.dialogs.DialogDecorator.Callback . void ( ) ; } }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker ( java.lang.String java.lang.String , int int , int int , int int ) { final com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker = new com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker . java.lang.String = java.lang.String ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker . int = int ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker . int = int ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker . int = int ; return com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithNumberPicker ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.dialogs.Dialog com.artemzin.android.wail.ui.fragment.dialogs.Dialog ( Bundle com.artemzin.android.wail.ui.fragment.dialogs.Bundle ) { MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog = new MaterialDialog . MaterialDialog ( getActivity ( ) ) . customView ( R . layout . dialog_with_number_picker_fragment , false ) . theme ( Theme . DARK ) . title ( java.lang.String ) . positiveText ( R . string . dialog_save ) . negativeText ( R . string . dialog_cancel ) . callback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { WAILSettings . setMinTrackDurationInSeconds ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . getValue ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( SettingsFragment . GA_EVENT_SETTINGS_FRAGMENT , STRING + WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) + STRING , null , NUMBER ) . build ( ) ) ; } @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . dismiss ( ) ; } } ) . build ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker = ( NumberPicker ) com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . getCustomView ( ) . findViewById ( R . id . dialog_with_number_picker_picker ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . setMinValue ( int ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . setMaxValue ( int ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . setValue ( int ) ; com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . setDescendantFocusability ( NumberPicker . FOCUS_BLOCK_DESCENDANTS ) ; return com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { WAILSettings . setMinTrackDurationInSeconds ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.dialogs.NumberPicker . getValue ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( SettingsFragment . GA_EVENT_SETTINGS_FRAGMENT , STRING + WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) + STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar ( java.lang.String java.lang.String , int int ) { final com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar = new com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar . int = int ; com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar . java.lang.String = java.lang.String ; return com.artemzin.android.wail.ui.fragment.dialogs.DialogFragmentWithSeekBar ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.dialogs.Dialog com.artemzin.android.wail.ui.fragment.dialogs.Dialog ( Bundle com.artemzin.android.wail.ui.fragment.dialogs.Bundle ) { MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog = new MaterialDialog . MaterialDialog ( getActivity ( ) ) . customView ( R . layout . dialog_with_seek_bar_fragment , false ) . theme ( Theme . DARK ) . title ( java.lang.String ) . positiveText ( R . string . dialog_save ) . negativeText ( R . string . dialog_cancel ) . callback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { WAILSettings . setMinTrackDurationInPercents ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( SettingsFragment . GA_EVENT_SETTINGS_FRAGMENT , STRING + WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) + STRING , null , NUMBER ) . build ( ) ) ; } @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . dismiss ( ) ; } } ) . build ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.SeekBar = ( SeekBar ) com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . getCustomView ( ) . findViewById ( R . id . dialog_with_seek_bar_seek_bar ) ; com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . setProgress ( int ) ; final TextView com.artemzin.android.wail.ui.fragment.dialogs.TextView = ( TextView ) com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . getCustomView ( ) . findViewById ( R . id . dialog_with_seek_bar_bottom_text ) ; com.artemzin.android.wail.ui.fragment.dialogs.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_percent_dialog_bottom_text , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ) ; com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . setOnSeekBarChangeListener ( new SeekBar . SeekBar ( ) { @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar , int int , boolean boolean ) { if ( int < NUMBER ) { com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . setProgress ( NUMBER ) ; } com.artemzin.android.wail.ui.fragment.dialogs.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_percent_dialog_bottom_text , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ) ; } @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar ) {            } @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar ) {            } } ) ; return com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { WAILSettings . setMinTrackDurationInPercents ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( SettingsFragment . GA_EVENT_SETTINGS_FRAGMENT , STRING + WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) + STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar , int int , boolean boolean ) { if ( int < NUMBER ) { com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . setProgress ( NUMBER ) ; } com.artemzin.android.wail.ui.fragment.dialogs.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_percent_dialog_bottom_text , com.artemzin.android.wail.ui.fragment.dialogs.SeekBar . getProgress ( ) ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar ) {            }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( SeekBar com.artemzin.android.wail.ui.fragment.dialogs.SeekBar ) {            }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog ( Track com.artemzin.android.wail.ui.fragment.dialogs.Track ) { com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog = new com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog ( ) ; com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog . com.artemzin.android.wail.ui.fragment.dialogs.Track = com.artemzin.android.wail.ui.fragment.dialogs.Track ; return com.artemzin.android.wail.ui.fragment.dialogs.TrackActionsDialog ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.dialogs.Dialog com.artemzin.android.wail.ui.fragment.dialogs.Dialog ( Bundle com.artemzin.android.wail.ui.fragment.dialogs.Bundle ) { return new MaterialDialog . MaterialDialog ( activity ) . items ( R . array . track_actions ) . itemsCallback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog , View com.artemzin.android.wail.ui.fragment.dialogs.View , int int , java.lang.CharSequence java.lang.CharSequence ) { switch ( int ) { case NUMBER : void ( ) ; break; } } } ) . theme ( Theme . DARK ) . build ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.dialogs.MaterialDialog , View com.artemzin.android.wail.ui.fragment.dialogs.View , int int , java.lang.CharSequence java.lang.CharSequence ) { switch ( int ) { case NUMBER : void ( ) ; break; } }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( com.artemzin.android.wail.ui.fragment.dialogs.Track != null ) { LovedTracksDBHelper . getInstance ( activity ) . add ( com.artemzin.android.wail.ui.fragment.dialogs.Track ) ; Intent com.artemzin.android.wail.ui.fragment.dialogs.Intent = new Intent ( activity , WAILService .class ) ; com.artemzin.android.wail.ui.fragment.dialogs.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; activity . startService ( com.artemzin.android.wail.ui.fragment.dialogs.Intent ) ; Toast . makeText ( activity , getString ( R . string . main_track_loved ) , Toast . LENGTH_SHORT ) . show ( ) ; dismiss ( ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.fragment.main.Context , Intent com.artemzin.android.wail.ui.fragment.main.Intent ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . main_tracks_today_view ) public void void ( ) { Toast . makeText ( getActivity ( ) , getString ( R . string . main_pull_down_to_refresh_toast ) , Toast . LENGTH_SHORT ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . main_feedback_please ) public void void ( ) { final Activity com.artemzin.android.wail.ui.fragment.main.Activity = getActivity ( ) ; WAILSettings . setShowFeedbackRequest ( com.artemzin.android.wail.ui.fragment.main.Activity , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; Toast . makeText ( com.artemzin.android.wail.ui.fragment.main.Activity , getString ( R . string . main_feedback_please_happy_toast ) , Toast . LENGTH_LONG ) . show ( ) ; final java.lang.String java.lang.String = com.artemzin.android.wail.ui.fragment.main.Activity . getPackageName ( ) ; try { startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING + java.lang.String ) ) ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.main.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING , NUMBER ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING + java.lang.String ) ) ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.main.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING , NUMBER ) . build ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . main_love_current_track_button ) public void void ( ) { Track com.artemzin.android.wail.ui.fragment.main.Track = WAILSettings . getNowScrobblingTrack ( getActivity ( ) ) ; if ( com.artemzin.android.wail.ui.fragment.main.Track != null ) { Toast . makeText ( getActivity ( ) , getString ( R . string . main_track_loved ) , Toast . LENGTH_SHORT ) . show ( ) ; com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . hide ( ) ; Intent com.artemzin.android.wail.ui.fragment.main.Intent = new Intent ( getActivity ( ) , WAILService .class ) ; LovedTracksDBHelper . getInstance ( getActivity ( ) ) . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; com.artemzin.android.wail.ui.fragment.main.Intent . setAction ( WAILService . INTENT_ACTION_HANDLE_LOVED_TRACKS ) ; getActivity ( ) . startService ( com.artemzin.android.wail.ui.fragment.main.Intent ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . main_ignore_player_button ) public void void ( ) { java.lang.String java.lang.String = WAILSettings . getNowScrobblingPlayerLabel ( getActivity ( ) ) ; final java.lang.String java.lang.String = WAILSettings . getNowScrobblingPlayerPackageName ( getActivity ( ) ) ; final java.lang.String java.lang.String = java.lang.String != null ? java.lang.String : java.lang.String ; new MaterialDialog . MaterialDialog ( getActivity ( ) ) . theme ( Theme . DARK ) . title ( java.lang.String . java.lang.String ( getString ( R . string . main_confirm_ignoring_player ) , java.lang.String ) ) . positiveText ( STRING ) . negativeText ( R . string . dialog_cancel ) . callback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.IgnoredPlayersDBHelper . add ( java.lang.String ) ; WAILSettings . setNowScrobblingTrack ( getActivity ( ) , null ) ; WAILSettings . setNowScrobblingPlayerPackageName ( getActivity ( ) , null ) ; WAILSettings . setNowScrobblingPlayerLabel ( getActivity ( ) , null ) ; WAILSettings . setLastCapturedTrackInfo ( getActivity ( ) , null ) ; void ( ) ; } @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.MaterialDialog . dismiss ( ) ; } } ) . build ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.IgnoredPlayersDBHelper . add ( java.lang.String ) ; WAILSettings . setNowScrobblingTrack ( getActivity ( ) , null ) ; WAILSettings . setNowScrobblingPlayerPackageName ( getActivity ( ) , null ) ; WAILSettings . setNowScrobblingPlayerLabel ( getActivity ( ) , null ) ; WAILSettings . setLastCapturedTrackInfo ( getActivity ( ) , null ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.MaterialDialog . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.fragment.main.Bundle ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onActivityCreated ( com.artemzin.android.wail.ui.fragment.main.Bundle ) ; ActionBar com.artemzin.android.wail.ui.fragment.main.ActionBar = ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.ActionBar != null ) { com.artemzin.android.wail.ui.fragment.main.ActionBar . setTitle ( getString ( R . string . main_ab_title ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.View com.artemzin.android.wail.ui.fragment.main.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.main.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.main.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { return com.artemzin.android.wail.ui.fragment.main.LayoutInflater . inflate ( R . layout . fragment_main , com.artemzin.android.wail.ui.fragment.main.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.main.View , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.Bundle ) ; com.artemzin.android.wail.ui.fragment.main.IgnoredPlayersDBHelper = IgnoredPlayersDBHelper . getInstance ( getActivity ( ) ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.main.View ) ; final Activity com.artemzin.android.wail.ui.fragment.main.Activity = getActivity ( ) ; com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setColorSchemeResources ( R . color . primary ) ; com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setOnRefreshListener ( new com.artemzin.android.wail.ui.fragment.main.MainFragment.PullToRefreshListener ( ) ) ; if ( WAILSettings . isShowFeedbackRequest ( com.artemzin.android.wail.ui.fragment.main.Activity ) ) { ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , true ) ; } com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . attachToScrollView ( com.artemzin.android.wail.ui.fragment.main.ObservableScrollView ) ; com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . show ( false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; try { if ( ! WAILSettings . isAuthorized ( getActivity ( ) ) ) return; } catch ( java.lang.Exception java.lang.Exception ) {        } void ( ) ; LocalBroadcastManager . getInstance ( getActivity ( ) ) . registerReceiver ( com.artemzin.android.wail.ui.fragment.main.BroadcastReceiver , new IntentFilter ( TracksDBHelper . INTENT_TRACKS_CHANGED ) ) ; AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Object , java.lang.Object , java.lang.Object > ( ) { @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; void ( ) ; } @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object ... java.lang.Object[] ) { ThreadUtil . sleepIfRequired ( SystemClock . elapsedRealtime ( ) , NUMBER ) ; return null ; } @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { super. onPostExecute ( java.lang.Object ) ; try { final Context com.artemzin.android.wail.ui.fragment.main.Context = getActivity ( ) ; if ( isRemoving ( ) || isDetached ( ) || com.artemzin.android.wail.ui.fragment.main.Context . isRestricted ( ) ) return; final long long = WAILSettings . getLastfmUserInfoUpdateTimestamp ( com.artemzin.android.wail.ui.fragment.main.Context ) ; if ( ! com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . isRefreshing ( ) && java.lang.System . long ( ) - long > NUMBER ) { void ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Object java.lang.Object ( java.lang.Object ... java.lang.Object[] ) { ThreadUtil . sleepIfRequired ( SystemClock . elapsedRealtime ( ) , NUMBER ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Object java.lang.Object ) { super. onPostExecute ( java.lang.Object ) ; try { final Context com.artemzin.android.wail.ui.fragment.main.Context = getActivity ( ) ; if ( isRemoving ( ) || isDetached ( ) || com.artemzin.android.wail.ui.fragment.main.Context . isRestricted ( ) ) return; final long long = WAILSettings . getLastfmUserInfoUpdateTimestamp ( com.artemzin.android.wail.ui.fragment.main.Context ) ; if ( ! com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . isRefreshing ( ) && java.lang.System . long ( ) - long > NUMBER ) { void ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; LocalBroadcastManager . getInstance ( getActivity ( ) ) . unregisterReceiver ( com.artemzin.android.wail.ui.fragment.main.BroadcastReceiver ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStop ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Object , java.lang.Object , LFUserResponseModel > ( ) { com.artemzin.android.wail.ui.fragment.main.NetworkException com.artemzin.android.wail.ui.fragment.main.NetworkException ; com.artemzin.android.wail.ui.fragment.main.LFApiException com.artemzin.android.wail.ui.fragment.main.LFApiException ; @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setRefreshing ( true ) ; } catch ( java.lang.Exception java.lang.Exception ) {                } } @ java.lang.Override protected com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ( java.lang.Object ... java.lang.Object[] ) { final long long = SystemClock . elapsedRealtime ( ) ; LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = null ; try { final java.lang.String java.lang.String = LFUserApi . getInfo ( WAILSettings . getLastfmSessionKey ( getActivity ( ) ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , WAILSettings . getLastfmUserName ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = LFUserResponseModel . parseFromJSON ( java.lang.String ) ; WAILSettings . setLastfmUserInfo ( getActivity ( ) , java.lang.String ) ; WAILSettings . setLastfmUserName ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getName ( ) ) ; WAILSettings . setLastfmUserRegistered ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getRegistered ( ) . getText ( ) ) ; WAILSettings . setLastfmUserInfoUpdateTimestamp ( getActivity ( ) , java.lang.System . long ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING + java.lang.Exception . java.lang.String ( ) , NUMBER ) . build ( ) ) ; if ( java.lang.Exception instanceof NetworkException ) { com.artemzin.android.wail.ui.fragment.main.NetworkException = ( NetworkException ) java.lang.Exception ; } else if ( java.lang.Exception instanceof LFApiException ) { com.artemzin.android.wail.ui.fragment.main.LFApiException = ( LFApiException ) java.lang.Exception ; } } ThreadUtil . sleepIfRequired ( long , NUMBER ) ; return com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ; } @ java.lang.Override protected void void ( LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ) { super. onPostExecute ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ) ; try { com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setRefreshing ( false ) ; void ( ) ; java.lang.String java.lang.String = null ; if ( com.artemzin.android.wail.ui.fragment.main.NetworkException != null ) { java.lang.String = getString ( R . string . main_refresh_info_from_lastfm_network_error ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.LFApiException != null ) { java.lang.String = getString ( R . string . main_refresh_info_from_lastfm_api_error , com.artemzin.android.wail.ui.fragment.main.LFApiException . getMessage ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING + com.artemzin.android.wail.ui.fragment.main.LFApiException . getMessage ( ) , NUMBER ) . build ( ) ) ; } if ( java.lang.String != null ) { Toast . makeText ( getActivity ( ) , java.lang.String , Toast . LENGTH_LONG ) . show ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { try { final Context com.artemzin.android.wail.ui.fragment.main.Context = getActivity ( ) ; if ( isDetached ( ) || isRemoving ( ) || com.artemzin.android.wail.ui.fragment.main.Context == null ) return; Toast . makeText ( com.artemzin.android.wail.ui.fragment.main.Context , R . string . main_refresh_info_from_lastfm_unknown_error , Toast . LENGTH_LONG ) . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING , NUMBER ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { } } void ( ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setRefreshing ( true ) ; } catch ( java.lang.Exception java.lang.Exception ) {                } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ( java.lang.Object ... java.lang.Object[] ) { final long long = SystemClock . elapsedRealtime ( ) ; LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = null ; try { final java.lang.String java.lang.String = LFUserApi . getInfo ( WAILSettings . getLastfmSessionKey ( getActivity ( ) ) , WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , WAILSettings . getLastfmUserName ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = LFUserResponseModel . parseFromJSON ( java.lang.String ) ; WAILSettings . setLastfmUserInfo ( getActivity ( ) , java.lang.String ) ; WAILSettings . setLastfmUserName ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getName ( ) ) ; WAILSettings . setLastfmUserRegistered ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getRegistered ( ) . getText ( ) ) ; WAILSettings . setLastfmUserInfoUpdateTimestamp ( getActivity ( ) , java.lang.System . long ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING + java.lang.Exception . java.lang.String ( ) , NUMBER ) . build ( ) ) ; if ( java.lang.Exception instanceof NetworkException ) { com.artemzin.android.wail.ui.fragment.main.NetworkException = ( NetworkException ) java.lang.Exception ; } else if ( java.lang.Exception instanceof LFApiException ) { com.artemzin.android.wail.ui.fragment.main.LFApiException = ( LFApiException ) java.lang.Exception ; } } ThreadUtil . sleepIfRequired ( long , NUMBER ) ; return com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ) { super. onPostExecute ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel ) ; try { com.artemzin.android.wail.ui.fragment.main.SwipeRefreshLayout . setRefreshing ( false ) ; void ( ) ; java.lang.String java.lang.String = null ; if ( com.artemzin.android.wail.ui.fragment.main.NetworkException != null ) { java.lang.String = getString ( R . string . main_refresh_info_from_lastfm_network_error ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.LFApiException != null ) { java.lang.String = getString ( R . string . main_refresh_info_from_lastfm_api_error , com.artemzin.android.wail.ui.fragment.main.LFApiException . getMessage ( ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING + com.artemzin.android.wail.ui.fragment.main.LFApiException . getMessage ( ) , NUMBER ) . build ( ) ) ; } if ( java.lang.String != null ) { Toast . makeText ( getActivity ( ) , java.lang.String , Toast . LENGTH_LONG ) . show ( ) ; } } catch ( java.lang.Exception java.lang.Exception ) { try { final Context com.artemzin.android.wail.ui.fragment.main.Context = getActivity ( ) ; if ( isDetached ( ) || isRemoving ( ) || com.artemzin.android.wail.ui.fragment.main.Context == null ) return; Toast . makeText ( com.artemzin.android.wail.ui.fragment.main.Context , R . string . main_refresh_info_from_lastfm_unknown_error , Toast . LENGTH_LONG ) . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , STRING , NUMBER ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { } } void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.String[] = getResources ( ) . getStringArray ( R . array . word_form_track ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { void ( ) ; void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Integer > ( ) { @ java.lang.Override protected java.lang.Integer java.lang.Integer ( java.lang.Void ... java.lang.Void[] ) { try { final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; int int = NUMBER ; Cursor com.artemzin.android.wail.ui.fragment.main.Cursor = TracksDBHelper . getInstance ( getActivity ( ) . getApplicationContext ( ) ) . getAllDesc ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.ui.fragment.main.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( com.artemzin.android.wail.ui.fragment.main.Track . getTimestamp ( ) ) ; if ( java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) && java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) && java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) ) { int ++ ; } } while ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToNext ( ) ); } com.artemzin.android.wail.ui.fragment.main.Cursor . close ( ) ; return int ; } catch ( java.lang.Exception java.lang.Exception ) { return - NUMBER ; } } @ java.lang.Override protected void void ( java.lang.Integer java.lang.Integer ) { if ( ! isDetached ( ) ) { try { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String . java.lang.String ( java.lang.Integer ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( WordFormUtil . getWordForm ( java.lang.Integer , java.lang.String[] ) + STRING + getString ( R . string . main_today ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Integer java.lang.Integer ( java.lang.Void ... java.lang.Void[] ) { try { final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; int int = NUMBER ; Cursor com.artemzin.android.wail.ui.fragment.main.Cursor = TracksDBHelper . getInstance ( getActivity ( ) . getApplicationContext ( ) ) . getAllDesc ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.ui.fragment.main.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( com.artemzin.android.wail.ui.fragment.main.Track . getTimestamp ( ) ) ; if ( java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) && java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) && java.util.Calendar . int ( java.util.Calendar . int ) == java.util.Calendar . int ( java.util.Calendar . int ) ) { int ++ ; } } while ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToNext ( ) ); } com.artemzin.android.wail.ui.fragment.main.Cursor . close ( ) ; return int ; } catch ( java.lang.Exception java.lang.Exception ) { return - NUMBER ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Integer java.lang.Integer ) { if ( ! isDetached ( ) ) { try { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String . java.lang.String ( java.lang.Integer ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( WordFormUtil . getWordForm ( java.lang.Integer , java.lang.String[] ) + STRING + getString ( R . string . main_today ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { final LFUserResponseModel com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel = WAILSettings . getLastfmUserInfo ( getActivity ( ) ) ; if ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel == null || com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getPlayCount ( ) == - NUMBER ) { com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . GONE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . GONE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . VISIBLE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . main_tracks_on_last_fm_unknown ) ; } else { com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . VISIBLE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . VISIBLE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . GONE ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String . java.lang.String ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getPlayCount ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( WordFormUtil . getWordForm ( com.artemzin.android.wail.ui.fragment.main.LFUserResponseModel . getPlayCount ( ) , java.lang.String[] ) + STRING + getString ( R . string . main_tracks_on_last_fm ) ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { Track com.artemzin.android.wail.ui.fragment.main.Track = WAILSettings . getNowScrobblingTrack ( getActivity ( ) ) ; java.lang.String java.lang.String = WAILSettings . getNowScrobblingPlayerLabel ( getActivity ( ) ) ; java.lang.String java.lang.String = WAILSettings . getNowScrobblingPlayerPackageName ( getActivity ( ) ) ; final java.lang.String java.lang.String = java.lang.String != null ? java.lang.String : java.lang.String ; if ( com.artemzin.android.wail.ui.fragment.main.Track != null ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getString ( R . string . main_now_scrobbling_label , com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) + STRING + com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String . java.lang.String ( getString ( R . string . main_scrobbling_from_player_label ) , java.lang.String ) ) ; if ( com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . getVisibility ( ) != View . VISIBLE ) { com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . setVisibility ( View . VISIBLE ) ; } com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . show ( ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . VISIBLE ) ; } else { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getString ( R . string . main_now_scrobbling_label , getString ( R . string . main_now_scrobbling_nothing ) ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( STRING ) ; com.artemzin.android.wail.ui.fragment.main.FloatingActionButton . hide ( ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setVisibility ( View . GONE ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { try { final long long = WAILSettings . getLastfmUserInfoUpdateTimestamp ( getActivity ( ) ) ; if ( long == - NUMBER ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( STRING ) ; return; } final java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( long ) ; final java.lang.String java.lang.String ; final long long = java.lang.System . long ( ) - long ; if ( long < NUMBER ) { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING , java.util.Locale . java.util.Locale ( ) ) ; java.lang.String = getString ( R . string . main_updated_today_at , java.text.SimpleDateFormat . java.lang.String ( java.util.Calendar . java.util.Date ( ) ) ) ; } else if ( long >= NUMBER && long <= NUMBER ) { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING , java.util.Locale . java.util.Locale ( ) ) ; java.lang.String = getString ( R . string . main_updated_yesterday_at , java.text.SimpleDateFormat . java.lang.String ( java.util.Calendar . java.util.Date ( ) ) ) ; } else { java.text.SimpleDateFormat java.text.SimpleDateFormat = new java.text.SimpleDateFormat ( STRING , java.util.Locale . java.util.Locale ( ) ) ; java.lang.String = getString ( R . string . main_updated_common , java.text.SimpleDateFormat . java.lang.String ( java.util.Calendar . java.util.Date ( ) ) ) ; } com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; } catch ( java.lang.Exception java.lang.Exception ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( STRING ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { Toast . makeText ( getActivity ( ) , getString ( R . string . main_refreshing ) , Toast . LENGTH_SHORT ) . show ( ) ; void ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_ignored_players ) public void void ( ) { startActivity ( new Intent ( getActivity ( ) , SettingsIgnoredPlayersActivity .class ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_select_language_menu_item ) public void void ( ) { startActivity ( new Intent ( getActivity ( ) , SettingsSelectLanguageActivity .class ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_disable_scrobbling_over_mobile_network ) public void void ( ) { SwitchCompat com.artemzin.android.wail.ui.fragment.main.SwitchCompat = ( SwitchCompat ) getActivity ( ) . findViewById ( R . id . settings_disable_scrobbling_over_mobile_network_switch ) ; void ( com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( ! com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_disable_scrobbling_over_mobile_network_switch ) public void void ( boolean boolean ) { if ( boolean == WAILSettings . isEnableScrobblingOverMobileNetwork ( getActivity ( ) ) ) { return; } WAILSettings . setDisableScrobblingOverMobileNetwork ( getActivity ( ) , boolean ) ; final java.lang.String java.lang.String = boolean ? getString ( R . string . settings_scrobbling_over_mobile_network_enabled_toast ) : getString ( R . string . settings_scrobbling_over_mobile_network_disabled_toast ) ; Toast . makeText ( getActivity ( ) , java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + boolean , null , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_lastfm_update_nowplaying ) public void void ( ) { SwitchCompat com.artemzin.android.wail.ui.fragment.main.SwitchCompat = ( SwitchCompat ) getActivity ( ) . findViewById ( R . id . settings_lastfm_update_nowplaying_switch ) ; void ( com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( ! com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_lastfm_update_nowplaying_switch ) public void void ( boolean boolean ) { if ( boolean == WAILSettings . isLastfmNowplayingUpdateEnabled ( getActivity ( ) ) ) { return; } WAILSettings . setLastfmNowplayingUpdateEnabled ( getActivity ( ) , boolean ) ; final java.lang.String java.lang.String = boolean ? getString ( R . string . settings_lastfm_update_nowplaying_enabled_toast ) : getString ( R . string . settings_lastfm_update_nowplaying_disabled_toast ) ; Toast . makeText ( getActivity ( ) , java.lang.String , Toast . LENGTH_SHORT ) . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + boolean , null , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_theme ) public void void ( ) { SwitchCompat com.artemzin.android.wail.ui.fragment.main.SwitchCompat = ( SwitchCompat ) getActivity ( ) . findViewById ( R . id . settings_theme_switch ) ; void ( com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( ! com.artemzin.android.wail.ui.fragment.main.SwitchCompat . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_theme_switch ) public void void ( boolean boolean ) { if ( boolean == ( WAILSettings . getTheme ( getActivity ( ) ) == WAILSettings . Theme . DARK ) ) { return; } WAILSettings . setTheme ( getActivity ( ) , boolean ? WAILSettings . Theme . DARK : WAILSettings . Theme . LIGHT ) ; ( ( BaseActivity ) getActivity ( ) ) . setTheme ( ) ; ( ( BaseActivity ) getActivity ( ) ) . restart ( ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_sound_notifications ) public void void ( ) { startActivity ( new Intent ( getActivity ( ) , SettingsSoundNotificationsActivity .class ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_status_bar_notifications ) public void void ( ) { startActivity ( new Intent ( getActivity ( ) , SettingsStatusBarNotificationsActivity .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.fragment.main.Bundle ) ; setHasOptionsMenu ( true ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setTitle ( R . string . settings_actionbar_title ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.View com.artemzin.android.wail.ui.fragment.main.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.main.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.main.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { return com.artemzin.android.wail.ui.fragment.main.LayoutInflater . inflate ( R . layout . fragment_main_settings , com.artemzin.android.wail.ui.fragment.main.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Menu com.artemzin.android.wail.ui.fragment.main.Menu , MenuInflater com.artemzin.android.wail.ui.fragment.main.MenuInflater ) { super. onCreateOptionsMenu ( com.artemzin.android.wail.ui.fragment.main.Menu , com.artemzin.android.wail.ui.fragment.main.MenuInflater ) ; com.artemzin.android.wail.ui.fragment.main.MenuInflater . inflate ( R . menu . main_settings , com.artemzin.android.wail.ui.fragment.main.Menu ) ; SwitchCompat com.artemzin.android.wail.ui.fragment.main.SwitchCompat = ( SwitchCompat ) MenuItemCompat . getActionView ( com.artemzin.android.wail.ui.fragment.main.Menu . findItem ( R . id . main_settings_menu_is_wail_enabled ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( WAILSettings . isEnabled ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setOnCheckedChangeListener ( new CompoundButton . CompoundButton ( ) { @ java.lang.Override public void void ( CompoundButton com.artemzin.android.wail.ui.fragment.main.CompoundButton , boolean boolean ) { WAILSettings . setEnabled ( getActivity ( ) , boolean ) ; final Toast com.artemzin.android.wail.ui.fragment.main.Toast = Toast . makeText ( getActivity ( ) , STRING , Toast . LENGTH_SHORT ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setGravity ( Gravity . TOP | Gravity . END , NUMBER , ( int ) DisplayUnitsConverter . dpToPx ( getActivity ( ) , NUMBER ) ) ; if ( boolean ) { void ( ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setText ( R . string . settings_wail_enabled_toast ) ; } else { void ( ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setText ( R . string . settings_wail_disabled_toast ) ; } com.artemzin.android.wail.ui.fragment.main.Toast . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + boolean , null , boolean ? NUMBER : NUMBER ) . build ( ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( CompoundButton com.artemzin.android.wail.ui.fragment.main.CompoundButton , boolean boolean ) { WAILSettings . setEnabled ( getActivity ( ) , boolean ) ; final Toast com.artemzin.android.wail.ui.fragment.main.Toast = Toast . makeText ( getActivity ( ) , STRING , Toast . LENGTH_SHORT ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setGravity ( Gravity . TOP | Gravity . END , NUMBER , ( int ) DisplayUnitsConverter . dpToPx ( getActivity ( ) , NUMBER ) ) ; if ( boolean ) { void ( ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setText ( R . string . settings_wail_enabled_toast ) ; } else { void ( ) ; com.artemzin.android.wail.ui.fragment.main.Toast . setText ( R . string . settings_wail_disabled_toast ) ; } com.artemzin.android.wail.ui.fragment.main.Toast . show ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING + boolean , null , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.main.View , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.main.View ) ; if ( WAILSettings . isEnabled ( getActivity ( ) ) ) { void ( ) ; } else { void ( ) ; } java.lang.String java.lang.String = WAILSettings . getLanguage ( getActivity ( ) ) ; if ( java.lang.String == null ) { java.lang.String = getResources ( ) . getStringArray ( R . array . settings_select_language_languages ) [ NUMBER ] ; } com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; void ( ) ; void ( ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( WAILSettings . isEnableScrobblingOverMobileNetwork ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( WAILSettings . isLastfmNowplayingUpdateEnabled ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( WAILSettings . getLastfmUserName ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.SwitchCompat . setChecked ( WAILSettings . getTheme ( getActivity ( ) ) == WAILSettings . Theme . DARK ) ; try { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getActivity ( ) . getPackageManager ( ) . getPackageInfo ( getActivity ( ) . getPackageName ( ) , NUMBER ) . versionName ) ; } catch ( java.lang.Exception java.lang.Exception ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( STRING ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createException ( STRING + java.lang.Exception . java.lang.String ( ) , false ) . build ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStop ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> void void ( ) { ViewUtil . setEnabledForAllChildrenRecursively ( ( ViewGroup ) com.artemzin.android.wail.ui.fragment.main.View , true ) ; }  <METHOD_END>
<METHOD_START> void void ( ) { ViewUtil . setEnabledForAllChildrenRecursively ( ( ViewGroup ) com.artemzin.android.wail.ui.fragment.main.View , false ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_min_track_duration_in_percents ) void void ( ) { final DialogFragmentWithSeekBar com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithSeekBar = DialogFragmentWithSeekBar . newInstance ( getString ( R . string . settings_min_track_elapsed_time_in_percent_dialog_title ) , WAILSettings . getMinTrackDurationInPercents ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithSeekBar . setListener ( this ) ; com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithSeekBar . show ( getFragmentManager ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_min_track_duration_in_seconds ) void void ( ) { final DialogFragmentWithNumberPicker com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithNumberPicker = DialogFragmentWithNumberPicker . newInstance ( getString ( R . string . settings_min_track_elapsed_time_in_seconds_dialog_title ) , NUMBER , NUMBER , WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) ) ; com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithNumberPicker . setListener ( this ) ; com.artemzin.android.wail.ui.fragment.main.DialogFragmentWithNumberPicker . show ( getFragmentManager ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { final int int = WAILSettings . getMinTrackDurationInSeconds ( getActivity ( ) ) ; com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_seconds_desc , int + STRING + WordFormUtil . getWordForm ( int , getResources ( ) . getStringArray ( R . array . word_forms_second ) ) ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( getString ( R . string . settings_min_track_elapsed_time_in_percent_desc , WAILSettings . getMinTrackDurationInPercents ( getActivity ( ) ) ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_logout_menu_item ) public void void ( ) { new MaterialDialog . MaterialDialog ( getActivity ( ) ) . theme ( Theme . DARK ) . title ( R . string . setting_logout_warning ) . positiveText ( STRING ) . negativeText ( R . string . dialog_cancel ) . callback ( new MaterialDialog . MaterialDialog ( ) { @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { WAILSettings . clearAllSettings ( getActivity ( ) ) ; AppDBManager . getInstance ( getActivity ( ) ) . clearAll ( ) ; LocaleUtil . updateLanguage ( getActivity ( ) , null ) ; startActivity ( new Intent ( getActivity ( ) , MainActivity .class ) ) ; getActivity ( ) . finish ( ) ; } @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.MaterialDialog . dismiss ( ) ; } } ) . build ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { WAILSettings . clearAllSettings ( getActivity ( ) ) ; AppDBManager . getInstance ( getActivity ( ) ) . clearAll ( ) ; LocaleUtil . updateLanguage ( getActivity ( ) , null ) ; startActivity ( new Intent ( getActivity ( ) , MainActivity .class ) ) ; getActivity ( ) . finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( MaterialDialog com.artemzin.android.wail.ui.fragment.main.MaterialDialog ) { com.artemzin.android.wail.ui.fragment.main.MaterialDialog . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_email_to_developers ) public void void ( ) { try { final Intent com.artemzin.android.wail.ui.fragment.main.Intent = new Intent ( Intent . ACTION_SEND ) ; java.lang.String java.lang.String = getString ( R . string . settings_developers_emails ) ; java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( '(' ) - NUMBER ) . java.lang.String[] ( STRING ) ; com.artemzin.android.wail.ui.fragment.main.Intent . putExtra ( Intent . EXTRA_EMAIL , java.lang.String[] ) ; com.artemzin.android.wail.ui.fragment.main.Intent . putExtra ( Intent . EXTRA_SUBJECT , getString ( R . string . settings_email_to_the_developer_subj ) + STRING + com.artemzin.android.wail.ui.fragment.main.TextView . getText ( ) . toString ( ) ) ; com.artemzin.android.wail.ui.fragment.main.Intent . setType ( STRING ) ; startActivity ( Intent . createChooser ( com.artemzin.android.wail.ui.fragment.main.Intent , getString ( R . string . settings_email_dialog_title ) ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createException ( STRING + java.lang.Exception , false ) . build ( ) ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context com.artemzin.android.wail.ui.fragment.main.Context , Intent com.artemzin.android.wail.ui.fragment.main.Intent ) { void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onCreate ( com.artemzin.android.wail.ui.fragment.main.Bundle ) ; setHasOptionsMenu ( true ) ; ( ( AppCompatActivity ) getActivity ( ) ) . getSupportActionBar ( ) . setTitle ( getString ( R . string . tracks_actionbar_title ) ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListAdapter = new com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListAdapter ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.View com.artemzin.android.wail.ui.fragment.main.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.main.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.main.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { return com.artemzin.android.wail.ui.fragment.main.LayoutInflater . inflate ( R . layout . fragment_tracks_list , com.artemzin.android.wail.ui.fragment.main.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.main.View , Bundle com.artemzin.android.wail.ui.fragment.main.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.main.View ) ; void ( ) ; com.artemzin.android.wail.ui.fragment.main.ListView . setAdapter ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListAdapter ) ; com.artemzin.android.wail.ui.fragment.main.ListView . setOnItemClickListener ( new AdapterView . AdapterView ( ) { @ java.lang.Override public void void ( AdapterView < ? > com.artemzin.android.wail.ui.fragment.main.AdapterView<?> , View com.artemzin.android.wail.ui.fragment.main.View , int int , long long ) { Track com.artemzin.android.wail.ui.fragment.main.Track = ( Track ) com.artemzin.android.wail.ui.fragment.main.AdapterView<> . getAdapter ( ) . getItem ( int ) ; TrackActionsDialog . newInstance ( com.artemzin.android.wail.ui.fragment.main.Track ) . show ( getFragmentManager ( ) , STRING ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( AdapterView < ? > com.artemzin.android.wail.ui.fragment.main.AdapterView<?> , View com.artemzin.android.wail.ui.fragment.main.View , int int , long long ) { Track com.artemzin.android.wail.ui.fragment.main.Track = ( Track ) com.artemzin.android.wail.ui.fragment.main.AdapterView<> . getAdapter ( ) . getItem ( int ) ; TrackActionsDialog . newInstance ( com.artemzin.android.wail.ui.fragment.main.Track ) . show ( getFragmentManager ( ) , STRING ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , true ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , true ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , false ) ; ViewUtil . setVisibility ( com.artemzin.android.wail.ui.fragment.main.View , true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStart ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; void ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onPause ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onStop ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { LocalBroadcastManager . getInstance ( getActivity ( ) ) . registerReceiver ( com.artemzin.android.wail.ui.fragment.main.BroadcastReceiver , new IntentFilter ( TracksDBHelper . INTENT_TRACKS_CHANGED ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { LocalBroadcastManager . getInstance ( getActivity ( ) ) . unregisterReceiver ( com.artemzin.android.wail.ui.fragment.main.BroadcastReceiver ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Menu com.artemzin.android.wail.ui.fragment.main.Menu , MenuInflater com.artemzin.android.wail.ui.fragment.main.MenuInflater ) { super. onCreateOptionsMenu ( com.artemzin.android.wail.ui.fragment.main.Menu , com.artemzin.android.wail.ui.fragment.main.MenuInflater ) ; com.artemzin.android.wail.ui.fragment.main.MenuInflater . inflate ( R . menu . main_tracks , com.artemzin.android.wail.ui.fragment.main.Menu ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksSearchHandler . void ( com.artemzin.android.wail.ui.fragment.main.Menu . findItem ( R . id . main_tracks_ab_search ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , Cursor > ( ) { @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } } @ java.lang.Override protected com.artemzin.android.wail.ui.fragment.main.Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ( java.lang.Void ... java.lang.Void[] ) { try { return TracksDBHelper . getInstance ( getActivity ( ) ) . getAllDesc ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } } @ java.lang.Override protected void void ( Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ) { super. onPostExecute ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; if ( ! isDetached ( ) ) { try { if ( com.artemzin.android.wail.ui.fragment.main.Cursor == null || com.artemzin.android.wail.ui.fragment.main.Cursor . getCount ( ) == NUMBER ) { void ( getString ( R . string . tracks_list_empty_motivation_text ) ) ; } else { void ( ) ; } com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected com.artemzin.android.wail.ui.fragment.main.Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ( java.lang.Void ... java.lang.Void[] ) { try { return TracksDBHelper . getInstance ( getActivity ( ) ) . getAllDesc ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ) { super. onPostExecute ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; if ( ! isDetached ( ) ) { try { if ( com.artemzin.android.wail.ui.fragment.main.Cursor == null || com.artemzin.android.wail.ui.fragment.main.Cursor . getCount ( ) == NUMBER ) { void ( getString ( R . string . tracks_list_empty_motivation_text ) ) ; } else { void ( ) ; } com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener ) { this . com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener = com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener ; }  <METHOD_END>
<METHOD_START> public void void ( Cursor com.artemzin.android.wail.ui.fragment.main.Cursor ) { if ( this . com.artemzin.android.wail.ui.fragment.main.Cursor != null ) { this . com.artemzin.android.wail.ui.fragment.main.Cursor . close ( ) ; } this . com.artemzin.android.wail.ui.fragment.main.Cursor = com.artemzin.android.wail.ui.fragment.main.Cursor ; java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> = null ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) { if ( this . com.artemzin.android.wail.ui.fragment.main.Cursor != null ) { this . com.artemzin.android.wail.ui.fragment.main.Cursor . close ( ) ; } this . java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> = java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ; com.artemzin.android.wail.ui.fragment.main.Cursor = null ; void ( ) ; }  <METHOD_END>
<METHOD_START> public int int ( ) { if ( com.artemzin.android.wail.ui.fragment.main.Cursor != null ) { return com.artemzin.android.wail.ui.fragment.main.Cursor . getCount ( ) ; } else if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> != null ) { return java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . size ( ) ; } else { return NUMBER ; } }  <METHOD_END>
<METHOD_START> public com.artemzin.android.wail.ui.fragment.main.Track com.artemzin.android.wail.ui.fragment.main.Track ( int int ) { if ( com.artemzin.android.wail.ui.fragment.main.Cursor != null ) { com.artemzin.android.wail.ui.fragment.main.Cursor . moveToPosition ( int ) ; return TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; } else if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> != null ) { return java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . get ( int ) ; } return null ; }  <METHOD_END>
<METHOD_START> private void void ( ) { if ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener != null ) { com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider.Listener . void ( ) ; } }  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( View com.artemzin.android.wail.ui.fragment.main.View ) { ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.main.View ) ; }  <METHOD_END>
<METHOD_START> public void ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider ) { this . com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider = com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider ; this . com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( this ) ; int[] = int[] ( ) ; }  <METHOD_END>
<METHOD_START> private int [] int[] ( ) { int [] int[] = new int [ NUMBER ] ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_waiting_for_scrobble ) ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_scrobbling ) ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_error ) ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_scrobble_success ) ; int[] [ NUMBER ] = getResources ( ) . getColor ( R . color . track_state_unknown ) ; return int[] ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . int ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.Track com.artemzin.android.wail.ui.fragment.main.Track ( int int ) { return com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . com.artemzin.android.wail.ui.fragment.main.Track ( int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public long long ( int int ) { return com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . com.artemzin.android.wail.ui.fragment.main.Track ( int ) . hashCode ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.main.View com.artemzin.android.wail.ui.fragment.main.View ( int int , View com.artemzin.android.wail.ui.fragment.main.View , ViewGroup com.artemzin.android.wail.ui.fragment.main.ViewGroup ) { final com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder ; if ( com.artemzin.android.wail.ui.fragment.main.View == null ) { com.artemzin.android.wail.ui.fragment.main.View = LayoutInflater . from ( getActivity ( ) ) . inflate ( R . layout . track_list_item , com.artemzin.android.wail.ui.fragment.main.ViewGroup , false ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder = new com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder ( com.artemzin.android.wail.ui.fragment.main.View ) ; com.artemzin.android.wail.ui.fragment.main.View . setTag ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder ) ; } else { com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder = ( com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder ) com.artemzin.android.wail.ui.fragment.main.View . getTag ( ) ; } void ( com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder , int ) ; return com.artemzin.android.wail.ui.fragment.main.View ; }  <METHOD_END>
<METHOD_START> private void void ( View com.artemzin.android.wail.ui.fragment.main.View , com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder , int int ) { final Track com.artemzin.android.wail.ui.fragment.main.Track = com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . com.artemzin.android.wail.ui.fragment.main.Track ( int ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) ) ; java.lang.String java.lang.String ; if ( ! TextUtils . isEmpty ( com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) ) ) { java.lang.String = com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) ; if ( ! TextUtils . isEmpty ( com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) ) ) { java.lang.String += STRING + com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) ; } } else if ( ! TextUtils . isEmpty ( com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) ) ) { java.lang.String = com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) ; } else { java.lang.String = getString ( R . string . track_artist_and_album_no_data ) ; } com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; switch ( com.artemzin.android.wail.ui.fragment.main.Track . getState ( ) ) { case Track . STATE_WAITING_FOR_SCROBBLE : com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_waiting_for_scrobble ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; case Track . STATE_SCROBBLING : com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_scrobbling ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; case Track . STATE_SCROBBLE_ERROR : com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_scrobble_error ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; case Track . STATE_SCROBBLE_SUCCESS : com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_scrobble_success ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; default: com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( R . string . track_status_unknown ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setTextColor ( int[] [ NUMBER ] ) ; break; } java.util.Calendar java.util.Calendar = java.util.Calendar . java.util.Calendar ( ) ; java.util.Calendar . void ( com.artemzin.android.wail.ui.fragment.main.Track . getTimestamp ( ) ) ; final java.lang.String java.lang.String = java.text.DateFormat . java.lang.String ( java.util.Calendar . java.util.Date ( ) ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TrackViewHolder . com.artemzin.android.wail.ui.fragment.main.TextView . setText ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { notifyDataSetChanged ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( MenuItem com.artemzin.android.wail.ui.fragment.main.MenuItem ) { com.artemzin.android.wail.ui.fragment.main.SearchView = ( SearchView ) MenuItemCompat . getActionView ( com.artemzin.android.wail.ui.fragment.main.MenuItem ) . findViewById ( R . id . main_tracks_ab_search ) ; com.artemzin.android.wail.ui.fragment.main.SearchView . setOnQueryTextListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( java.lang.String java.lang.String ) { void ( java.lang.String ) ; return true ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.String , java.lang.Void , java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > > ( ) { private java.lang.String java.lang.String ; @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { void ( ) ; void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } } @ java.lang.Override protected java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ( java.lang.String ... java.lang.String[] ) { try { java.lang.String = java.lang.String[] [ NUMBER ] . java.lang.String ( java.util.Locale . java.util.Locale ( ) ) ; Cursor com.artemzin.android.wail.ui.fragment.main.Cursor = TracksDBHelper . getInstance ( getActivity ( ) ) . getAllDesc ( ) ; final java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> = new java.util.ArrayList<com.artemzin.android.wail.ui.fragment.main.Track> < Track > ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.ui.fragment.main.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; if ( com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } } while ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToNext ( ) ); } return java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } } @ java.lang.Override protected void void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) { super. onPostExecute ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) ; try { if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> == null ) { Toast . makeText ( getActivity ( ) , R . string . tracks_search_error_toast , Toast . LENGTH_LONG ) . show ( ) ; } else if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . size ( ) == NUMBER ) { void ( getString ( R . string . tracks_search_no_results , java.lang.String ) ) ; } else { void ( ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) ; com.artemzin.android.wail.ui.fragment.main.ListView . smoothScrollToPosition ( NUMBER ) ; } } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } } } , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onPreExecute ( ) ; try { void ( ) ; void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ( java.lang.String ... java.lang.String[] ) { try { java.lang.String = java.lang.String[] [ NUMBER ] . java.lang.String ( java.util.Locale . java.util.Locale ( ) ) ; Cursor com.artemzin.android.wail.ui.fragment.main.Cursor = TracksDBHelper . getInstance ( getActivity ( ) ) . getAllDesc ( ) ; final java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> = new java.util.ArrayList<com.artemzin.android.wail.ui.fragment.main.Track> < Track > ( ) ; if ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToFirst ( ) ) { do { Track com.artemzin.android.wail.ui.fragment.main.Track = TracksDBHelper . parseFromCursor ( com.artemzin.android.wail.ui.fragment.main.Cursor ) ; if ( com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getTrack ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getArtist ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } else if ( com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) != null && com.artemzin.android.wail.ui.fragment.main.Track . getAlbum ( ) . toLowerCase ( java.util.Locale . java.util.Locale ( ) ) . contains ( java.lang.String ) ) { java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . add ( com.artemzin.android.wail.ui.fragment.main.Track ) ; } } while ( com.artemzin.android.wail.ui.fragment.main.Cursor . moveToNext ( ) ); } return java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ; } catch ( java.lang.Exception java.lang.Exception ) { return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> < Track > java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) { super. onPostExecute ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) ; try { if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> == null ) { Toast . makeText ( getActivity ( ) , R . string . tracks_search_error_toast , Toast . LENGTH_LONG ) . show ( ) ; } else if ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> . size ( ) == NUMBER ) { void ( getString ( R . string . tracks_search_no_results , java.lang.String ) ) ; } else { void ( ) ; com.artemzin.android.wail.ui.fragment.main.TracksListFragment.TracksListDataProvider . void ( java.util.List<com.artemzin.android.wail.ui.fragment.main.Track> ) ; com.artemzin.android.wail.ui.fragment.main.ListView . smoothScrollToPosition ( NUMBER ) ; } } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . non_authorized_sign_in_button ) public void void ( ) { void ( ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . non_authorized_sign_up_button ) public void void ( ) { startActivity ( new Intent ( Intent . ACTION_VIEW , Uri . parse ( STRING ) ) ) ; EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.View com.artemzin.android.wail.ui.fragment.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.Bundle ) { return com.artemzin.android.wail.ui.fragment.LayoutInflater . inflate ( R . layout . fragment_non_authorized , com.artemzin.android.wail.ui.fragment.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.View , Bundle com.artemzin.android.wail.ui.fragment.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.View , com.artemzin.android.wail.ui.fragment.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.View ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onResume ( ) ; if ( WAILSettings . getKeyLastfmToken ( getActivity ( ) ) != null ) { void ( ) ; } }  <METHOD_END>
<METHOD_START> private com.artemzin.android.wail.ui.fragment.AlertDialog com.artemzin.android.wail.ui.fragment.AlertDialog ( ) { if ( com.artemzin.android.wail.ui.fragment.AlertDialog == null ) { View com.artemzin.android.wail.ui.fragment.View = getActivity ( ) . getLayoutInflater ( ) . inflate ( R . layout . fragment_progress_dialog , null ) ; ( ( TextView ) com.artemzin.android.wail.ui.fragment.View . findViewById ( R . id . progress_dialog_message ) ) . setText ( getString ( R . string . lastfm_logging_progress_dialog_message ) ) ; com.artemzin.android.wail.ui.fragment.AlertDialog = new AlertDialog . AlertDialog ( getActivity ( ) ) . setView ( com.artemzin.android.wail.ui.fragment.View ) . setCancelable ( false ) . create ( ) ; } return com.artemzin.android.wail.ui.fragment.AlertDialog ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTask < java.lang.Void , java.lang.Void , java.lang.String > com.artemzin.android.wail.ui.fragment.AsyncTask<java.lang.Void,java.lang.Void,java.lang.String> = new AsyncTask < java.lang.Void , java.lang.Void , java.lang.String > ( ) { private java.lang.Exception java.lang.Exception ; @ java.lang.Override protected void void ( ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . show ( ) ; } @ java.lang.Override protected java.lang.String java.lang.String ( java.lang.Void ... java.lang.Void[] ) { try { return LFAuthApi . getToken ( WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) ) . getToken ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception = java.lang.Exception ; return null ; } } @ java.lang.Override protected void void ( java.lang.String java.lang.String ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . dismiss ( ) ; if ( java.lang.Exception == null ) { WAILSettings . setKeyLastfmToken ( getActivity ( ) , java.lang.String ) ; Intent com.artemzin.android.wail.ui.fragment.Intent = new Intent ( Intent . ACTION_VIEW ) ; com.artemzin.android.wail.ui.fragment.Intent . setData ( Uri . parse ( java.lang.String . java.lang.String ( LFApiCommon . AUTHORIZATION_URL , WAILSettings . getLastfmApiKey ( ) , java.lang.String ) ) ) ; startActivity ( com.artemzin.android.wail.ui.fragment.Intent ) ; } else { void ( java.lang.Exception ) ; } } } ; com.artemzin.android.wail.ui.fragment.AsyncTask<java.lang.Void,java.lang.Void,java.lang.String> . execute ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.String java.lang.String ( java.lang.Void ... java.lang.Void[] ) { try { return LFAuthApi . getToken ( WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) ) . getToken ( ) ; } catch ( java.lang.Exception java.lang.Exception ) { java.lang.Exception = java.lang.Exception ; return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.String java.lang.String ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . dismiss ( ) ; if ( java.lang.Exception == null ) { WAILSettings . setKeyLastfmToken ( getActivity ( ) , java.lang.String ) ; Intent com.artemzin.android.wail.ui.fragment.Intent = new Intent ( Intent . ACTION_VIEW ) ; com.artemzin.android.wail.ui.fragment.Intent . setData ( Uri . parse ( java.lang.String . java.lang.String ( LFApiCommon . AUTHORIZATION_URL , WAILSettings . getLastfmApiKey ( ) , java.lang.String ) ) ) ; startActivity ( com.artemzin.android.wail.ui.fragment.Intent ) ; } else { void ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private void void ( ) { new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { private java.lang.Exception java.lang.Exception ; @ java.lang.Override protected void void ( ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . show ( ) ; } @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { try { LFSessionResponseModel com.artemzin.android.wail.ui.fragment.LFSessionResponseModel = LFAuthApi . getSession ( WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , WAILSettings . getKeyLastfmToken ( getActivity ( ) ) ) ; WAILSettings . setLastfmSessionKey ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.LFSessionResponseModel . getKey ( ) ) ; WAILSettings . setLastfmUserName ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.LFSessionResponseModel . getName ( ) ) ; WAILSettings . setEnabled ( getActivity ( ) , true ) ; } catch ( NetworkException | LFApiException java.lang.Object ) { java.lang.Exception = java.lang.Object ; } return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . dismiss ( ) ; WAILSettings . setKeyLastfmToken ( getActivity ( ) , null ) ; if ( java.lang.Exception == null ) { getActivity ( ) . setResult ( Activity . RESULT_OK ) ; getActivity ( ) . finish ( ) ; } else { void ( java.lang.Exception ) ; } } } . execute ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { try { LFSessionResponseModel com.artemzin.android.wail.ui.fragment.LFSessionResponseModel = LFAuthApi . getSession ( WAILSettings . getLastfmApiKey ( ) , WAILSettings . getLastfmSecret ( ) , WAILSettings . getKeyLastfmToken ( getActivity ( ) ) ) ; WAILSettings . setLastfmSessionKey ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.LFSessionResponseModel . getKey ( ) ) ; WAILSettings . setLastfmUserName ( getActivity ( ) , com.artemzin.android.wail.ui.fragment.LFSessionResponseModel . getName ( ) ) ; WAILSettings . setEnabled ( getActivity ( ) , true ) ; } catch ( NetworkException | LFApiException java.lang.Object ) { java.lang.Exception = java.lang.Object ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { com.artemzin.android.wail.ui.fragment.AlertDialog ( ) . dismiss ( ) ; WAILSettings . setKeyLastfmToken ( getActivity ( ) , null ) ; if ( java.lang.Exception == null ) { getActivity ( ) . setResult ( Activity . RESULT_OK ) ; getActivity ( ) . finish ( ) ; } else { void ( java.lang.Exception ) ; } }  <METHOD_END>
<METHOD_START> private void void ( java.lang.Exception java.lang.Exception ) { if ( java.lang.Exception instanceof NetworkException ) { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_logging_network_error ) , Toast . LENGTH_LONG ) . show ( ) ; } else if ( java.lang.Exception instanceof LFApiException ) { LFApiException com.artemzin.android.wail.ui.fragment.LFApiException = ( LFApiException ) java.lang.Exception ; if ( LFApiException . ERROR_TOKEN_EXPIRED . equals ( com.artemzin.android.wail.ui.fragment.LFApiException . getError ( ) ) ) { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_logging_api_error_15 ) , Toast . LENGTH_LONG ) . show ( ) ; } else if ( LFApiException . ERROR_NOT_AUTHORIZED_TOKEN . equals ( com.artemzin.android.wail.ui.fragment.LFApiException . getError ( ) ) ) { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_logging_api_error_14 ) , Toast . LENGTH_LONG ) . show ( ) ; } else if ( LFApiException . ERROR_SERVICE_OFFLINE . equals ( com.artemzin.android.wail.ui.fragment.LFApiException . getError ( ) ) ) { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_api_error_11 ) , Toast . LENGTH_LONG ) . show ( ) ; } else { Toast . makeText ( getActivity ( ) , getString ( R . string . lastfm_logging_api_error_unknown ) , Toast . LENGTH_LONG ) . show ( ) ; } } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater , @ Nullable ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup , @ Nullable Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { return com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . fragment_settings_ignored_players , com.artemzin.android.wail.ui.fragment.settings.ViewGroup ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.settings.View , @ Nullable Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.settings.View , com.artemzin.android.wail.ui.fragment.settings.Bundle ) ; com.artemzin.android.wail.ui.fragment.settings.IgnoredPlayersDBHelper = IgnoredPlayersDBHelper . getInstance ( getActivity ( ) ) ; com.artemzin.android.wail.ui.fragment.settings.PackageManager = getActivity ( ) . getPackageManager ( ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.settings.View ) ; java.util.List<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> < ApplicationInfo > java.util.List<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> = com.artemzin.android.wail.ui.fragment.settings.IgnoredPlayersDBHelper . getAll ( ) ; if ( java.util.List<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> . size ( ) == NUMBER ) { com.artemzin.android.wail.ui.fragment.settings.LinearLayout . setVisibility ( View . VISIBLE ) ; } else { ArrayAdapter < ApplicationInfo > com.artemzin.android.wail.ui.fragment.settings.ArrayAdapter<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> = new ArrayAdapter < ApplicationInfo > ( getActivity ( ) , R . layout . settings_ignored_players_item_layout , java.util.List<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> ) { @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( int int , View com.artemzin.android.wail.ui.fragment.settings.View , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup ) { com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ; View com.artemzin.android.wail.ui.fragment.settings.View = com.artemzin.android.wail.ui.fragment.settings.View ; if ( com.artemzin.android.wail.ui.fragment.settings.View == null ) { LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater = getActivity ( ) . getLayoutInflater ( ) ; com.artemzin.android.wail.ui.fragment.settings.View = com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . settings_ignored_players_item_layout , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder = new com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ( ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.TextView = ( TextView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . settings_ignored_players_list_view_text ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.ImageView = ( ImageView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . settings_ignored_players_list_view_image ) ; com.artemzin.android.wail.ui.fragment.settings.View . setTag ( com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ) ; } else { com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder = ( com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ) com.artemzin.android.wail.ui.fragment.settings.View . getTag ( ) ; } com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.TextView . setText ( com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationLabel ( getItem ( int ) ) ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.ImageView . setImageDrawable ( com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationIcon ( getItem ( int ) ) ) ; return com.artemzin.android.wail.ui.fragment.settings.View ; } } ; com.artemzin.android.wail.ui.fragment.settings.ListView . setAdapter ( com.artemzin.android.wail.ui.fragment.settings.ArrayAdapter<com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo> ) ; com.artemzin.android.wail.ui.fragment.settings.ListView . setOnItemClickListener ( this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( int int , View com.artemzin.android.wail.ui.fragment.settings.View , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup ) { com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ; View com.artemzin.android.wail.ui.fragment.settings.View = com.artemzin.android.wail.ui.fragment.settings.View ; if ( com.artemzin.android.wail.ui.fragment.settings.View == null ) { LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater = getActivity ( ) . getLayoutInflater ( ) ; com.artemzin.android.wail.ui.fragment.settings.View = com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . settings_ignored_players_item_layout , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder = new com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ( ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.TextView = ( TextView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . settings_ignored_players_list_view_text ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.ImageView = ( ImageView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . settings_ignored_players_list_view_image ) ; com.artemzin.android.wail.ui.fragment.settings.View . setTag ( com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ) ; } else { com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder = ( com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder ) com.artemzin.android.wail.ui.fragment.settings.View . getTag ( ) ; } com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.TextView . setText ( com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationLabel ( getItem ( int ) ) ) ; com.artemzin.android.wail.ui.fragment.settings.SettingsIgnoredPlayersFragment.ViewHolder . com.artemzin.android.wail.ui.fragment.settings.ImageView . setImageDrawable ( com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationIcon ( getItem ( int ) ) ) ; return com.artemzin.android.wail.ui.fragment.settings.View ; }  <METHOD_END>
<METHOD_START> @ OnItemClick ( R . id . settings_ignored_players_list_view ) public void void ( final AdapterView < ? > com.artemzin.android.wail.ui.fragment.settings.AdapterView<?> , View com.artemzin.android.wail.ui.fragment.settings.View , int int , long long ) { final ApplicationInfo com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo = ( ApplicationInfo ) com.artemzin.android.wail.ui.fragment.settings.AdapterView<> . getAdapter ( ) . getItem ( int ) ; AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( getActivity ( ) ) ; View com.artemzin.android.wail.ui.fragment.settings.View = View . inflate ( getActivity ( ) , R . layout . dialog_fragment_title , null ) ; ( ( TextView ) com.artemzin.android.wail.ui.fragment.settings.View . findViewById ( R . id . dialog_fragment_title_text_view ) ) . setText ( java.lang.String . java.lang.String ( getString ( R . string . settings_confirm_unignoring_player ) , com.artemzin.android.wail.ui.fragment.settings.PackageManager . getApplicationLabel ( com.artemzin.android.wail.ui.fragment.settings.ApplicationInfo ) ) ) ; AlertDialog.Builder . setCustomTitle ( com.artemzin.android.wail.ui.fragment.settings.View ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.settings.DialogInterface , int int ) { com.artemzin.android.wail.ui.fragment.settings.IgnoredPlayersDBHelper . delete ( applicationInfo . packageName ) ; getActivity ( ) . startService ( new Intent ( getActivity ( ) , WAILService .class ) . setAction ( WAILService . INTENT_ACTION_HANDLE_PREVIOUSLY_IGNORED_TRACK ) ) ; void ( getView ( ) , null ) ; } } ) . setNegativeButton ( getString ( R . string . dialog_cancel ) , new DialogInterface . DialogInterface ( ) { public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.settings.DialogInterface , int int ) { com.artemzin.android.wail.ui.fragment.settings.DialogInterface . dismiss ( ) ; } } ) . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.settings.DialogInterface , int int ) { com.artemzin.android.wail.ui.fragment.settings.IgnoredPlayersDBHelper . delete ( applicationInfo . packageName ) ; getActivity ( ) . startService ( new Intent ( getActivity ( ) , WAILService .class ) . setAction ( WAILService . INTENT_ACTION_HANDLE_PREVIOUSLY_IGNORED_TRACK ) ) ; void ( getView ( ) , null ) ; }  <METHOD_END>
<METHOD_START> public void void ( DialogInterface com.artemzin.android.wail.ui.fragment.settings.DialogInterface , int int ) { com.artemzin.android.wail.ui.fragment.settings.DialogInterface . dismiss ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String [] java.lang.String[] ( Context com.artemzin.android.wail.ui.fragment.settings.Context , java.lang.String [] java.lang.String[] ) { try { final java.lang.String java.lang.String = WAILSettings . getLanguage ( com.artemzin.android.wail.ui.fragment.settings.Context ) ; boolean boolean = false ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { final java.lang.String java.lang.String = java.lang.String[] [ int ] ; if ( java.lang.String . boolean ( java.lang.String ) ) { java.lang.String[] [ int ] = com.artemzin.android.wail.ui.fragment.settings.Context . getString ( R . string . settings_select_language_current_lang , java.lang.String ) ; boolean = true ; break; } } if ( ! boolean ) { java.lang.String[] [ NUMBER ] = com.artemzin.android.wail.ui.fragment.settings.Context . getString ( R . string . settings_select_language_current_lang , java.lang.String[] [ NUMBER ] ) ; } return java.lang.String[] ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( java.lang.Exception . java.lang.String ( ) ) ; return java.lang.String[] ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { return com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . fragment_settings_select_language , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.settings.View , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.settings.View , com.artemzin.android.wail.ui.fragment.settings.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.settings.View ) ; java.lang.String[] = java.lang.String[] ( getActivity ( ) , getResources ( ) . getStringArray ( R . array . settings_select_language_languages ) ) ; BaseAdapter com.artemzin.android.wail.ui.fragment.settings.BaseAdapter = new ArrayAdapter <> ( getActivity ( ) , R . layout . settings_select_language_item , java.lang.String[] ) ; com.artemzin.android.wail.ui.fragment.settings.ListView . setAdapter ( com.artemzin.android.wail.ui.fragment.settings.BaseAdapter ) ; }  <METHOD_END>
<METHOD_START> @ OnItemClick ( R . id . settings_select_language_list_view ) public void void ( AdapterView < ? > com.artemzin.android.wail.ui.fragment.settings.AdapterView<?> , View com.artemzin.android.wail.ui.fragment.settings.View , int int , long long ) { switch ( int ) { case NUMBER : LocaleUtil . updateLanguage ( getActivity ( ) , java.util.Locale . java.util.Locale ( ) . java.lang.String ( ) ) ; break; default: java.lang.String java.lang.String = java.lang.String[] [ int ] ; if ( java.lang.String . boolean ( STRING ) ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , java.lang.String . int ( STRING ) - NUMBER ) ; } LocaleUtil . updateLanguage ( getActivity ( ) , java.lang.String ) ; break; } EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , int == NUMBER ? STRING : java.lang.String[] [ int ] , NUMBER ) . build ( ) ) ; getActivity ( ) . finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { return com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . fragment_settings_sound_notifications , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.settings.View , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.settings.View , com.artemzin.android.wail.ui.fragment.settings.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.settings.View ) ; final Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; com.artemzin.android.wail.ui.fragment.settings.SwitchCompat . setChecked ( WAILSettings . isSoundNotificationTrackMarkedAsScrobbledEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity ) ) ; com.artemzin.android.wail.ui.fragment.settings.SwitchCompat . setChecked ( WAILSettings . isSoundNotificationTrackSkippedEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_sound_notifications_track_marked_as_scrobbled_switch ) public void void ( boolean boolean ) { final Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; if ( boolean == WAILSettings . isSoundNotificationTrackMarkedAsScrobbledEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity ) ) { return; } WAILSettings . setSoundNotificationTrackMarkedAsScrobbledEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity , boolean ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , boolean ? STRING : STRING , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_sound_notifications_track_skipped_switch ) public void void ( boolean boolean ) { final Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; if ( boolean == WAILSettings . isSoundNotificationTrackSkippedEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity ) ) { return; } WAILSettings . setSoundNotificationTrackSkippedEnabled ( com.artemzin.android.wail.ui.fragment.settings.Activity , boolean ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , boolean ? STRING : STRING , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_sound_notifications_track_marked_as_scrobbled ) public void void ( ) { Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; try { SoundNotificationsManager . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . playTrackMarkedAsScrobbledSound ( true ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; Toast . makeText ( com.artemzin.android.wail.ui.fragment.settings.Activity , R . string . settings_sound_notifications_toast_can_not_play_sound , Toast . LENGTH_LONG ) . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_sound_notifications_track_skipped ) public void void ( ) { Activity com.artemzin.android.wail.ui.fragment.settings.Activity = getActivity ( ) ; EasyTracker . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , null , NUMBER ) . build ( ) ) ; try { SoundNotificationsManager . getInstance ( com.artemzin.android.wail.ui.fragment.settings.Activity ) . playTrackSkippedSound ( true ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING + java.lang.Exception ) ; Toast . makeText ( com.artemzin.android.wail.ui.fragment.settings.Activity , R . string . settings_sound_notifications_toast_can_not_play_sound , Toast . LENGTH_LONG ) . show ( ) ; } }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_status_bar_notifications_track_now_scrobbling ) public void void ( ) { View com.artemzin.android.wail.ui.fragment.settings.View = getActivity ( ) . findViewById ( R . id . settings_status_bar_notifications_track_now_scrobbling_switch ) ; void ( ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . isChecked ( ) ) ; ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . setChecked ( ! ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_status_bar_notifications_track_now_scrobbling_switch ) public void void ( boolean boolean ) { if ( boolean == WAILSettings . isStatusBarNotificationTrackScrobblingEnabled ( getActivity ( ) ) ) { return; } WAILSettings . setStatusBarNotificationTrackScrobblingEnabled ( getActivity ( ) , boolean ) ; if ( boolean ) { Track com.artemzin.android.wail.ui.fragment.settings.Track = WAILSettings . getNowScrobblingTrack ( getActivity ( ) ) ; if ( com.artemzin.android.wail.ui.fragment.settings.Track != null ) { StatusBarNotificationsManager . getInstance ( getActivity ( ) ) . showTrackScrobblingStatusBarNotification ( com.artemzin.android.wail.ui.fragment.settings.Track ) ; } void ( true ) ; } else { StatusBarNotificationsManager . getInstance ( getActivity ( ) ) . cancelAllNotifications ( ) ; void ( false ) ; } EasyTracker . getInstance ( getActivity ( ) ) . send ( MapBuilder . createEvent ( java.lang.String , STRING , boolean ? STRING : STRING , boolean ? NUMBER : NUMBER ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnClick ( R . id . settings_status_bar_notifications_min_priority ) public void void ( ) { View com.artemzin.android.wail.ui.fragment.settings.View = getActivity ( ) . findViewById ( R . id . settings_status_bar_notifications_min_priority_switch ) ; void ( ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . isChecked ( ) ) ; ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . setChecked ( ! ( ( SwitchCompat ) com.artemzin.android.wail.ui.fragment.settings.View ) . isChecked ( ) ) ; }  <METHOD_END>
<METHOD_START> @ OnCheckedChanged ( R . id . settings_status_bar_notifications_min_priority_switch ) public void void ( boolean boolean ) { if ( boolean == WAILSettings . isStatusBarNotificationMinPriority ( getActivity ( ) ) ) { return; } WAILSettings . setStatusBarNotificationMinPriority ( getActivity ( ) , boolean ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public com.artemzin.android.wail.ui.fragment.settings.View com.artemzin.android.wail.ui.fragment.settings.View ( LayoutInflater com.artemzin.android.wail.ui.fragment.settings.LayoutInflater , ViewGroup com.artemzin.android.wail.ui.fragment.settings.ViewGroup , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { return com.artemzin.android.wail.ui.fragment.settings.LayoutInflater . inflate ( R . layout . fragment_settings_status_bar_notifications , com.artemzin.android.wail.ui.fragment.settings.ViewGroup , false ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.artemzin.android.wail.ui.fragment.settings.View , Bundle com.artemzin.android.wail.ui.fragment.settings.Bundle ) { super. onViewCreated ( com.artemzin.android.wail.ui.fragment.settings.View , com.artemzin.android.wail.ui.fragment.settings.Bundle ) ; ButterKnife . inject ( this , com.artemzin.android.wail.ui.fragment.settings.View ) ; boolean boolean = WAILSettings . isStatusBarNotificationTrackScrobblingEnabled ( getActivity ( ) ) ; com.artemzin.android.wail.ui.fragment.settings.SwitchCompat . setChecked ( boolean ) ; com.artemzin.android.wail.ui.fragment.settings.SwitchCompat . setChecked ( WAILSettings . isStatusBarNotificationMinPriority ( getActivity ( ) ) ) ; if ( ! boolean ) { void ( false ) ; } }  <METHOD_END>
<METHOD_START> private void void ( boolean boolean ) { ViewUtil . setEnabledForAllChildrenRecursively ( ( ViewGroup ) com.artemzin.android.wail.ui.fragment.settings.View , boolean ) ; com.artemzin.android.wail.ui.fragment.settings.View . setEnabled ( boolean ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.artemzin.android.wail.ui.Context ) { super( com.artemzin.android.wail.ui.Context ); void ( com.artemzin.android.wail.ui.Context , null , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.artemzin.android.wail.ui.Context , AttributeSet com.artemzin.android.wail.ui.AttributeSet ) { super( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet ); void ( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( Context com.artemzin.android.wail.ui.Context , AttributeSet com.artemzin.android.wail.ui.AttributeSet , int int ) { super( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , int ); void ( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , int ) ; }  <METHOD_END>
<METHOD_START> private void void ( Context com.artemzin.android.wail.ui.Context , AttributeSet com.artemzin.android.wail.ui.AttributeSet , int int ) { final TypedArray com.artemzin.android.wail.ui.TypedArray = com.artemzin.android.wail.ui.Context . obtainStyledAttributes ( com.artemzin.android.wail.ui.AttributeSet , R . styleable . ScrimInsetsView , int , NUMBER ) ; if ( com.artemzin.android.wail.ui.TypedArray == null ) { return; } com.artemzin.android.wail.ui.Drawable = com.artemzin.android.wail.ui.TypedArray . getDrawable ( R . styleable . ScrimInsetsView_insetForeground ) ; com.artemzin.android.wail.ui.TypedArray . recycle ( ) ; setWillNotDraw ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected boolean boolean ( Rect com.artemzin.android.wail.ui.Rect ) { com.artemzin.android.wail.ui.Rect = new Rect ( com.artemzin.android.wail.ui.Rect ) ; setWillNotDraw ( com.artemzin.android.wail.ui.Drawable == null ) ; ViewCompat . postInvalidateOnAnimation ( this ) ; if ( com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback != null ) { com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback . void ( com.artemzin.android.wail.ui.Rect ) ; } return true ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Canvas com.artemzin.android.wail.ui.Canvas ) { super. draw ( com.artemzin.android.wail.ui.Canvas ) ; int int = getWidth ( ) ; int int = getHeight ( ) ; if ( com.artemzin.android.wail.ui.Rect != null && com.artemzin.android.wail.ui.Drawable != null ) { int int = com.artemzin.android.wail.ui.Canvas . save ( ) ; com.artemzin.android.wail.ui.Canvas . translate ( getScrollX ( ) , getScrollY ( ) ) ; com.artemzin.android.wail.ui.Rect . set ( NUMBER , NUMBER , int , com.artemzin.android.wail.ui.Rect . top ) ; com.artemzin.android.wail.ui.Drawable . setBounds ( com.artemzin.android.wail.ui.Rect ) ; com.artemzin.android.wail.ui.Drawable . draw ( com.artemzin.android.wail.ui.Canvas ) ; com.artemzin.android.wail.ui.Rect . set ( NUMBER , int - com.artemzin.android.wail.ui.Rect . bottom , int , int ) ; com.artemzin.android.wail.ui.Drawable . setBounds ( com.artemzin.android.wail.ui.Rect ) ; com.artemzin.android.wail.ui.Drawable . draw ( com.artemzin.android.wail.ui.Canvas ) ; com.artemzin.android.wail.ui.Rect . set ( NUMBER , com.artemzin.android.wail.ui.Rect . top , com.artemzin.android.wail.ui.Rect . left , int - com.artemzin.android.wail.ui.Rect . bottom ) ; com.artemzin.android.wail.ui.Drawable . setBounds ( com.artemzin.android.wail.ui.Rect ) ; com.artemzin.android.wail.ui.Drawable . draw ( com.artemzin.android.wail.ui.Canvas ) ; com.artemzin.android.wail.ui.Rect . set ( int - com.artemzin.android.wail.ui.Rect . right , com.artemzin.android.wail.ui.Rect . top , int , int - com.artemzin.android.wail.ui.Rect . bottom ) ; com.artemzin.android.wail.ui.Drawable . setBounds ( com.artemzin.android.wail.ui.Rect ) ; com.artemzin.android.wail.ui.Drawable . draw ( com.artemzin.android.wail.ui.Canvas ) ; com.artemzin.android.wail.ui.Canvas . restoreToCount ( int ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onAttachedToWindow ( ) ; if ( com.artemzin.android.wail.ui.Drawable != null ) { com.artemzin.android.wail.ui.Drawable . setCallback ( this ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) { super. onDetachedFromWindow ( ) ; if ( com.artemzin.android.wail.ui.Drawable != null ) { com.artemzin.android.wail.ui.Drawable . setCallback ( null ) ; } }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback ) { com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback = com.artemzin.android.wail.ui.ScrimInsetsFrameLayout.OnInsetsCallback ; }  <METHOD_END>
<METHOD_START> public void void ( Rect com.artemzin.android.wail.ui.Rect );  <METHOD_END>
<METHOD_START> void void ( int int );  <METHOD_END>
<METHOD_START> void void ( )  <METHOD_END>
<METHOD_START> public void ( View com.artemzin.android.wail.ui.View ) { this( com.artemzin.android.wail.ui.View , false ); }  <METHOD_END>
<METHOD_START> public void ( View com.artemzin.android.wail.ui.View , boolean boolean ) { this . com.artemzin.android.wail.ui.View = com.artemzin.android.wail.ui.View ; this . boolean = boolean ; com.artemzin.android.wail.ui.View . getViewTreeObserver ( ) . addOnGlobalLayoutListener ( this ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { final Rect com.artemzin.android.wail.ui.Rect = new Rect ( ) ; com.artemzin.android.wail.ui.View . getWindowVisibleDisplayFrame ( com.artemzin.android.wail.ui.Rect ) ; final int int = com.artemzin.android.wail.ui.View . getRootView ( ) . getHeight ( ) - ( r . bottom - r . top ) ; if ( ! boolean && int > NUMBER ) { boolean = true ; void ( int ) ; } else if ( boolean && int < NUMBER ) { boolean = false ; void ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( boolean boolean ) { this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener ) { java.util.List<com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener> . boolean ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener ) ; }  <METHOD_END>
<METHOD_START> public void void ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener ) { java.util.List<com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener> . boolean ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener ) ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { this . int = int ; for ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener : java.util.List<com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener> ) { if ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener != null ) { com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener . void ( int ) ; } } }  <METHOD_END>
<METHOD_START> private void void ( ) { for ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener : java.util.List<com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener> ) { if ( com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener != null ) { com.artemzin.android.wail.ui.SoftKeyboardStateHelper.SoftKeyboardStateListener . void ( ) ; } } }  <METHOD_END>
<METHOD_START> public void ( final Context com.artemzin.android.wail.ui.Context ) { this( com.artemzin.android.wail.ui.Context , null ); }  <METHOD_END>
<METHOD_START> public void ( final Context com.artemzin.android.wail.ui.Context , final AttributeSet com.artemzin.android.wail.ui.AttributeSet ) { this( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , NUMBER ); }  <METHOD_END>
<METHOD_START> public void ( final Context com.artemzin.android.wail.ui.Context , final AttributeSet com.artemzin.android.wail.ui.AttributeSet , final int int ) { super( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet , int ); if ( ! isInEditMode ( ) ) { void ( com.artemzin.android.wail.ui.Context , com.artemzin.android.wail.ui.AttributeSet ) ; } }  <METHOD_END>
<METHOD_START> private void void ( final Context com.artemzin.android.wail.ui.Context , final AttributeSet com.artemzin.android.wail.ui.AttributeSet ) { if ( java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> == null ) { java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> = new java.util.HashMap<java.lang.String,com.artemzin.android.wail.ui.Typeface> < java.lang.String , Typeface > ( ) ; } final TypedArray com.artemzin.android.wail.ui.TypedArray = com.artemzin.android.wail.ui.Context . obtainStyledAttributes ( com.artemzin.android.wail.ui.AttributeSet , styleable . TypefaceTextView ) ; if ( com.artemzin.android.wail.ui.TypedArray != null ) { final java.lang.String java.lang.String = com.artemzin.android.wail.ui.TypedArray . getString ( styleable . TypefaceTextView_typefaceFromAssets ) ; if ( java.lang.String != null ) { void ( java.lang.String ) ; } else { void ( STRING ) ; } com.artemzin.android.wail.ui.TypedArray . recycle ( ) ; } }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { final Typeface com.artemzin.android.wail.ui.Typeface ; if ( java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> . containsKey ( java.lang.String ) ) { com.artemzin.android.wail.ui.Typeface = java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> . get ( java.lang.String ) ; } else { AssetManager com.artemzin.android.wail.ui.AssetManager = getContext ( ) . getAssets ( ) ; com.artemzin.android.wail.ui.Typeface = Typeface . createFromAsset ( com.artemzin.android.wail.ui.AssetManager , java.lang.String ) ; java.util.Map<java.lang.String,com.artemzin.android.wail.ui.Typeface> . put ( java.lang.String , com.artemzin.android.wail.ui.Typeface ) ; } setTypeface ( com.artemzin.android.wail.ui.Typeface ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> @ SuppressLint ( STRING ) public static < Params , Progress , Result > com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> < Params , Progress , Result > com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> ( AsyncTask < Params , Progress , Result > com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> , Params ... Params[] ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . HONEYCOMB ) { com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> . executeOnExecutor ( java.util.concurrent.ThreadPoolExecutor , Params[] ) ; } else { com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> . execute ( Params[] ) ; } return com.artemzin.android.wail.util.AsyncTask<Params,Progress,Result> ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public java.lang.Thread java.lang.Thread ( java.lang.Runnable java.lang.Runnable ) { return new java.lang.Thread ( java.lang.Runnable , STRING + java.util.concurrent.atomic.AtomicInteger . int ( ) ) ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static long long ( Intent com.artemzin.android.wail.util.Intent , long long , java.lang.String ... java.lang.String[] ) { if ( com.artemzin.android.wail.util.Intent == null || java.lang.String[] == null || java.lang.String[] . int == NUMBER ) return long ; Bundle com.artemzin.android.wail.util.Bundle = com.artemzin.android.wail.util.Intent . getExtras ( ) ; if ( com.artemzin.android.wail.util.Bundle == null || com.artemzin.android.wail.util.Bundle . isEmpty ( ) ) return long ; for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( com.artemzin.android.wail.util.Bundle . containsKey ( java.lang.String ) ) { java.lang.Object java.lang.Object = com.artemzin.android.wail.util.Bundle . get ( java.lang.String ) ; if ( java.lang.Object instanceof java.lang.Long ) { return ( java.lang.Long ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.Integer ) { return ( java.lang.Integer ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.Short ) { return ( java.lang.Short ) java.lang.Object ; } } } return long ; }  <METHOD_END>
<METHOD_START> public static java.lang.Boolean java.lang.Boolean ( Intent com.artemzin.android.wail.util.Intent , java.lang.Boolean java.lang.Boolean , java.lang.String ... java.lang.String[] ) { if ( com.artemzin.android.wail.util.Intent == null || java.lang.String[] == null || java.lang.String[] . int == NUMBER ) return java.lang.Boolean ; Bundle com.artemzin.android.wail.util.Bundle = com.artemzin.android.wail.util.Intent . getExtras ( ) ; if ( com.artemzin.android.wail.util.Bundle == null || com.artemzin.android.wail.util.Bundle . isEmpty ( ) ) return java.lang.Boolean ; for ( java.lang.String java.lang.String : java.lang.String[] ) { if ( com.artemzin.android.wail.util.Bundle . containsKey ( java.lang.String ) ) { java.lang.Object java.lang.Object = com.artemzin.android.wail.util.Bundle . get ( java.lang.String ) ; if ( java.lang.Object instanceof java.lang.Boolean ) { return ( java.lang.Boolean ) java.lang.Object ; } else if ( java.lang.Object instanceof java.lang.Integer ) { return ( java.lang.Integer ) java.lang.Object > NUMBER ; } else if ( java.lang.Object instanceof java.lang.Long ) { return ( java.lang.Long ) java.lang.Object > NUMBER ; } else if ( java.lang.Object instanceof java.lang.Short ) { return ( java.lang.Short ) java.lang.Object > NUMBER ; } else if ( java.lang.Object instanceof java.lang.Byte ) { return ( java.lang.Byte ) java.lang.Object > NUMBER ; } } } return java.lang.Boolean ; }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( Intent com.artemzin.android.wail.util.Intent ) { if ( com.artemzin.android.wail.util.Intent == null ) return STRING ; java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) . java.lang.StringBuilder ( com.artemzin.android.wail.util.Intent . getAction ( ) ) ; if ( com.artemzin.android.wail.util.Intent . getExtras ( ) == null || com.artemzin.android.wail.util.Intent . getExtras ( ) . isEmpty ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; } else { java.lang.StringBuilder . java.lang.StringBuilder ( STRING ) ; for ( java.lang.String java.lang.String : com.artemzin.android.wail.util.Intent . getExtras ( ) . keySet ( ) ) { java.lang.StringBuilder . java.lang.StringBuilder ( STRING + java.lang.String + STRING + com.artemzin.android.wail.util.Intent . getExtras ( ) . get ( java.lang.String ) + STRING ) . append ( STRING ) ; } } return java.lang.StringBuilder . java.lang.String ( ) ; }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { return java.lang.String == null ? null : java.lang.String . java.lang.String ( NUMBER , NUMBER ) . java.lang.String ( java.util.Locale . java.util.Locale ) ; }  <METHOD_END>
<METHOD_START> public static void void ( Context com.artemzin.android.wail.util.Context , java.lang.String java.lang.String ) { Configuration com.artemzin.android.wail.util.Configuration = new Configuration ( ) ; java.lang.String java.lang.String = WAILSettings . getLanguage ( com.artemzin.android.wail.util.Context ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; java.lang.String java.lang.String = java.lang.String ( java.lang.String ) ; if ( TextUtils . isEmpty ( java.lang.String ) && java.lang.String == null ) { configuration . locale = java.util.Locale . java.util.Locale ( ) ; } else if ( java.lang.String != null ) { configuration . locale = new java.util.Locale ( java.lang.String ) ; WAILSettings . setLanguage ( com.artemzin.android.wail.util.Context , java.lang.String ) ; } else if ( ! TextUtils . isEmpty ( java.lang.String ) ) { configuration . locale = new java.util.Locale ( java.lang.String ) ; } com.artemzin.android.wail.util.Context . getResources ( ) . updateConfiguration ( com.artemzin.android.wail.util.Configuration , null ) ; if ( java.lang.String != null && ! java.lang.String . boolean ( java.lang.String ) ) { Intent com.artemzin.android.wail.util.Intent = com.artemzin.android.wail.util.Context . getPackageManager ( ) . getLaunchIntentForPackage ( com.artemzin.android.wail.util.Context . getPackageName ( ) ) ; com.artemzin.android.wail.util.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; com.artemzin.android.wail.util.Context . startActivity ( com.artemzin.android.wail.util.Intent ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . d ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . v ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . i ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . w ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public static void void ( java.lang.String java.lang.String ) { if ( boolean ) { Log . e ( java.lang.String , java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.util.Context ) { final ConnectivityManager com.artemzin.android.wail.util.ConnectivityManager = ( ConnectivityManager ) com.artemzin.android.wail.util.Context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; if ( com.artemzin.android.wail.util.ConnectivityManager == null ) { return false ; } final NetworkInfo com.artemzin.android.wail.util.NetworkInfo = com.artemzin.android.wail.util.ConnectivityManager . getActiveNetworkInfo ( ) ; return com.artemzin.android.wail.util.NetworkInfo != null && com.artemzin.android.wail.util.NetworkInfo . isConnectedOrConnecting ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context com.artemzin.android.wail.util.Context ) { if ( ! boolean ( com.artemzin.android.wail.util.Context ) ) { return false ; } final ConnectivityManager com.artemzin.android.wail.util.ConnectivityManager = ( ConnectivityManager ) com.artemzin.android.wail.util.Context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; final NetworkInfo com.artemzin.android.wail.util.NetworkInfo = com.artemzin.android.wail.util.ConnectivityManager . getNetworkInfo ( ConnectivityManager . TYPE_MOBILE ) ; return com.artemzin.android.wail.util.NetworkInfo != null && com.artemzin.android.wail.util.NetworkInfo . isConnectedOrConnecting ( ) ; }  <METHOD_END>
<METHOD_START> private void ( long long , long long , java.lang.Runnable java.lang.Runnable , java.lang.Runnable java.lang.Runnable ) { this . long = long ; this . long = long ; this . java.lang.Runnable = java.lang.Runnable ; this . java.lang.Runnable = java.lang.Runnable ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.util.SleepIfRequiredAsyncTask com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long long , long long , java.lang.Runnable java.lang.Runnable ) { return new com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long , long , null , java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.util.SleepIfRequiredAsyncTask com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long long , long long , java.lang.Runnable java.lang.Runnable , java.lang.Runnable java.lang.Runnable ) { return new com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long , long , java.lang.Runnable , java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> public static com.artemzin.android.wail.util.SleepIfRequiredAsyncTask com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( long long , java.lang.Runnable java.lang.Runnable , java.lang.Runnable java.lang.Runnable ) { return new com.artemzin.android.wail.util.SleepIfRequiredAsyncTask ( SystemClock . elapsedRealtime ( ) , long , java.lang.Runnable , java.lang.Runnable ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { if ( java.lang.Runnable != null ) { java.lang.Runnable . void ( ) ; } ThreadUtil . sleepIfRequired ( long , long ) ; return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { if ( java.lang.Runnable != null ) { java.lang.Runnable . void ( ) ; } }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( java.lang.Exception java.lang.Exception ) { java.io.StringWriter java.io.StringWriter = new java.io.StringWriter ( ) ; java.io.PrintWriter java.io.PrintWriter = new java.io.PrintWriter ( java.io.StringWriter ) ; java.lang.Exception . void ( java.io.PrintWriter ) ; java.lang.String java.lang.String = java.io.StringWriter . java.lang.String ( ) ; try { java.io.StringWriter . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) {        } try { java.io.PrintWriter . void ( ) ; } catch ( java.lang.Exception java.lang.Exception ) {        } return java.lang.String ; }  <METHOD_END>
<METHOD_START> private void ( ) {}  <METHOD_END>
<METHOD_START> public static void void ( long long , long long ) { final long long = SystemClock . elapsedRealtime ( ) - long ; if ( long < long - NUMBER ) { SystemClock . sleep ( long - long ) ; } }  <METHOD_END>
<METHOD_START> public static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { final long long = java.lang.Math . long ( long ) ; if ( java.lang.String[] . int == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if ( java.lang.String[] . int == NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else if ( java.lang.String[] . int >= NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else { return null ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { if ( long == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else { return java.lang.String[] [ NUMBER ] ; } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( final long long , java.lang.String [] java.lang.String[] ) { if ( long == NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if( long > NUMBER & long < NUMBER ) { return java.lang.String[] [ NUMBER ] ; } else if ( long > NUMBER ) { if( long > NUMBER ) { long long = long % NUMBER ; if( long < NUMBER ) { return java.lang.String ( long , java.lang.String[] ) ; } else { return java.lang.String ( long % NUMBER , java.lang.String[] ) ; } } else { return java.lang.String ( long % NUMBER , java.lang.String[] ) ; } } else { return java.lang.String[] [ NUMBER ] ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { LocaleUtil . updateLanguage ( this , null ) ; super. onCreate ( ) ; Loggi . w ( STRING ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Configuration com.artemzin.android.wail.Configuration ) { super. onConfigurationChanged ( com.artemzin.android.wail.Configuration ) ; if ( boolean ( ) ) { LocaleUtil . updateLanguage ( this , WAILSettings . getLanguage ( this ) ) ; } }  <METHOD_END>
<METHOD_START> public static boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public static void void ( ) { boolean = true ; }  <METHOD_END>
<METHOD_START> public static void void ( ) { boolean = false ; }  <METHOD_END>
<METHOD_START> private void void ( ) { AsyncTaskExecutor . executeConcurrently ( new AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > ( ) { @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { try { final long long = SystemClock . elapsedRealtime ( ) ; PlayersDBHelper . getInstance ( getApplicationContext ( ) ) . updateSupportedPlayers ( ) ; final long long = SystemClock . elapsedRealtime ( ) - long ; Loggi . i ( STRING + long + STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.WAILApp .this ) . send ( MapBuilder . createTiming ( STRING , long , STRING , null ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.WAILApp .this ) . send ( MapBuilder . createException ( STRING , true ) . build ( ) ) ; } return null ; } @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { super. onPostExecute ( java.lang.Void ) ; Context com.artemzin.android.wail.Context = getApplicationContext ( ) ; if ( com.artemzin.android.wail.Context == null ) return; startService ( new Intent ( com.artemzin.android.wail.Context , WAILService .class ) ) ; } } ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected java.lang.Void java.lang.Void ( java.lang.Void ... java.lang.Void[] ) { try { final long long = SystemClock . elapsedRealtime ( ) ; PlayersDBHelper . getInstance ( getApplicationContext ( ) ) . updateSupportedPlayers ( ) ; final long long = SystemClock . elapsedRealtime ( ) - long ; Loggi . i ( STRING + long + STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.WAILApp .this ) . send ( MapBuilder . createTiming ( STRING , long , STRING , null ) . build ( ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { Loggi . e ( STRING ) ; EasyTracker . getInstance ( com.artemzin.android.wail.WAILApp .this ) . send ( MapBuilder . createException ( STRING , true ) . build ( ) ) ; } return null ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( java.lang.Void java.lang.Void ) { super. onPostExecute ( java.lang.Void ) ; Context com.artemzin.android.wail.Context = getApplicationContext ( ) ; if ( com.artemzin.android.wail.Context == null ) return; startService ( new Intent ( com.artemzin.android.wail.Context , WAILService .class ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public org.ligi.passandroid.AppComponent org.ligi.passandroid.AppComponent ( ) { return DaggerTestComponent . builder ( ) . testModule ( new TestModule ( ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.TestComponent org.ligi.passandroid.TestComponent ( ) { return ( TestComponent ) App . component ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) {    }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.PassStore org.ligi.passandroid.PassStore ( ) { return org.ligi.passandroid.TestComponent ( ) . passStore ( ) ; }  <METHOD_END>
<METHOD_START> public static void void ( ) { setComponent ( DaggerTestComponent . builder ( ) . testModule ( new TestModule ( ) ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ Before public void void ( ) java.lang.Exception { MockitoAnnotations . initMocks ( this ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) { try { final java.io.InputStream java.io.InputStream = InstrumentationRegistry . getInstrumentation ( ) . getContext ( ) . getResources ( ) . getAssets ( ) . open ( STRING ) ; final InputStreamWithSource org.ligi.passandroid.InputStreamWithSource = new InputStreamWithSource ( STRING , java.io.InputStream ) ; final InputStreamUnzipControllerSpec org.ligi.passandroid.InputStreamUnzipControllerSpec = new InputStreamUnzipControllerSpec ( org.ligi.passandroid.InputStreamWithSource , InstrumentationRegistry . getInstrumentation ( ) . getTargetContext ( ) , org.ligi.passandroid.PassStore , UnzipPassController.SuccessCallback , UnzipPassController.FailCallback ) ; UnzipPassController . INSTANCE . processInputStream ( org.ligi.passandroid.InputStreamUnzipControllerSpec ) ; verify ( UnzipPassController.SuccessCallback , never ( ) ) . call ( any ( java.lang.String .class ) ) ; verify ( UnzipPassController.FailCallback ) . fail ( any ( java.lang.String .class ) ) ; } catch ( java.lang.Exception java.lang.Exception ) { fail ( STRING ) ; } }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetDetector com.ibm.icu.text.CharsetDetector ( java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; return this ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetDetector com.ibm.icu.text.CharsetDetector ( byte [] byte[] ) { byte[] = byte[] ; int = byte[] . int ; return this ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetDetector com.ibm.icu.text.CharsetDetector ( java.io.InputStream java.io.InputStream ) throws java.io.IOException { java.io.InputStream = java.io.InputStream ; java.io.InputStream . void ( int ) ; byte[] = new byte [ int ] ; int = NUMBER ; int int = int ; while ( int > NUMBER ) { int int = java.io.InputStream . int ( byte[] , int , int ) ; if ( int <= NUMBER ) { break; } int += int ; int -= int ; } java.io.InputStream . void ( ) ; return this ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( ) { CharsetMatch com.ibm.icu.text.CharsetMatch[] [] = com.ibm.icu.text.CharsetMatch[] ( ) ; if ( com.ibm.icu.text.CharsetMatch[] == null || matches . length == NUMBER ) { return null ; } return com.ibm.icu.text.CharsetMatch[] [ NUMBER ] ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch [] com.ibm.icu.text.CharsetMatch[] ( ) { java.util.ArrayList<com.ibm.icu.text.CharsetMatch> < CharsetMatch > java.util.ArrayList<com.ibm.icu.text.CharsetMatch> = new java.util.ArrayList<com.ibm.icu.text.CharsetMatch> < CharsetMatch > ( ) ; void ( ) ; for ( int int = NUMBER ; int < java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ; int ++ ) { com.ibm.icu.text.CharsetDetector.CSRecognizerInfo com.ibm.icu.text.CharsetDetector.CSRecognizerInfo = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) ; boolean boolean = ( boolean[] != null ) ? boolean[] [ int ] : com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . boolean ; if ( boolean ) { CharsetMatch com.ibm.icu.text.CharsetMatch = com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . com.ibm.icu.text.CharsetRecognizer . match ( this ) ; if ( com.ibm.icu.text.CharsetMatch != null ) { java.util.ArrayList<com.ibm.icu.text.CharsetMatch> . add ( com.ibm.icu.text.CharsetMatch ) ; } } } java.util.Collections . void ( java.util.ArrayList<com.ibm.icu.text.CharsetMatch> ) ; java.util.Collections . void ( java.util.ArrayList<com.ibm.icu.text.CharsetMatch> ) ; CharsetMatch [] com.ibm.icu.text.CharsetMatch[] = new CharsetMatch [ java.util.ArrayList<com.ibm.icu.text.CharsetMatch> . size ( ) ] ; com.ibm.icu.text.CharsetMatch[] = java.util.ArrayList<com.ibm.icu.text.CharsetMatch> . toArray ( com.ibm.icu.text.CharsetMatch[] ) ; return com.ibm.icu.text.CharsetMatch[] ; }  <METHOD_END>
<METHOD_START> public java.io.Reader java.io.Reader ( java.io.InputStream java.io.InputStream , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; try { com.ibm.icu.text.CharsetDetector ( java.io.InputStream ) ; CharsetMatch com.ibm.icu.text.CharsetMatch = com.ibm.icu.text.CharsetMatch ( ) ; if ( com.ibm.icu.text.CharsetMatch == null ) { return null ; } return com.ibm.icu.text.CharsetMatch . getReader ( ) ; } catch ( java.io.IOException java.io.IOException ) { return null ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( byte [] byte[] , java.lang.String java.lang.String ) { java.lang.String = java.lang.String ; try { com.ibm.icu.text.CharsetDetector ( byte[] ) ; CharsetMatch com.ibm.icu.text.CharsetMatch = com.ibm.icu.text.CharsetMatch ( ) ; if ( com.ibm.icu.text.CharsetMatch == null ) { return null ; } return com.ibm.icu.text.CharsetMatch . getString ( - NUMBER ) ; } catch ( java.io.IOException java.io.IOException ) { return null ; } }  <METHOD_END>
<METHOD_START> public static java.lang.String [] java.lang.String[] ( ) { java.lang.String [] java.lang.String[] = new java.lang.String [ java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ] ; for ( int int = NUMBER ; int < java.lang.String[] . int ; int ++ ) { java.lang.String[] [ int ] = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) . com.ibm.icu.text.CharsetRecognizer . getName ( ) ; } return java.lang.String[] ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( ) { return boolean ; }  <METHOD_END>
<METHOD_START> public boolean boolean ( boolean boolean ) { boolean boolean = boolean ; boolean = boolean ; return boolean ; }  <METHOD_END>
<METHOD_START> private void void ( ) { int int = NUMBER ; int int = NUMBER ; byte byte ; boolean boolean = false ; int int = NUMBER ; int int = NUMBER ; if ( boolean ) { for ( int = NUMBER ; int < int && int < byte[] . int ; int ++ ) { byte = byte[] [ int ] ; if ( byte == ( byte ) '<' ) { if ( boolean ) { int ++ ; } boolean = true ; int ++ ; } if ( ! boolean ) { byte[] [ int ++ ] = byte ; } if ( byte == ( byte ) '>' ) { boolean = false ; } } int = int ; } if ( int < NUMBER || int / NUMBER < int || ( int < NUMBER && int > NUMBER ) ) { int int = int ; if ( int > int ) { int = int ; } for ( int = NUMBER ; int < int ; int ++ ) { byte[] [ int ] = byte[] [ int ] ; } int = int ; } java.util.Arrays . void ( short[] , ( short ) NUMBER ) ; for ( int = NUMBER ; int < int ; int ++ ) { int int = byte[] [ int ] & NUMBER ; short[] [ int ] ++ ; } boolean = false ; for ( int int = NUMBER ; int <= NUMBER ; int += NUMBER ) { if ( short[] [ int ] != NUMBER ) { boolean = true ; break; } } }  <METHOD_END>
<METHOD_START> void ( CharsetRecognizer com.ibm.icu.text.CharsetRecognizer , boolean boolean ) { this . com.ibm.icu.text.CharsetRecognizer = com.ibm.icu.text.CharsetRecognizer ; this . boolean = boolean ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public java.lang.String [] java.lang.String[] ( ) { java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String> < java.lang.String > ( java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ) ; for ( int int = NUMBER ; int < java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ; int ++ ) { com.ibm.icu.text.CharsetDetector.CSRecognizerInfo com.ibm.icu.text.CharsetDetector.CSRecognizerInfo = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) ; boolean boolean = ( boolean[] == null ) ? com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . boolean : boolean[] [ int ] ; if ( boolean ) { java.util.List<java.lang.String> . boolean ( com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . com.ibm.icu.text.CharsetRecognizer . getName ( ) ) ; } } return java.util.List<java.lang.String> . java.lang.String[] ( new java.lang.String [ java.util.List<java.lang.String> . int ( ) ] ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Deprecated public com.ibm.icu.text.CharsetDetector com.ibm.icu.text.CharsetDetector ( java.lang.String java.lang.String , boolean boolean ) { int int = - NUMBER ; boolean boolean = false ; for ( int int = NUMBER ; int < java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ; int ++ ) { com.ibm.icu.text.CharsetDetector.CSRecognizerInfo com.ibm.icu.text.CharsetDetector.CSRecognizerInfo = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) ; if ( com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . com.ibm.icu.text.CharsetRecognizer . getName ( ) . equals ( java.lang.String ) ) { int = int ; boolean = ( com.ibm.icu.text.CharsetDetector.CSRecognizerInfo . boolean == boolean ) ; break; } } if ( int < NUMBER ) { throw new java.lang.IllegalArgumentException ( STRING + STRING + java.lang.String + STRING ) ; } if ( boolean[] == null && ! boolean ) { boolean[] = new boolean [ java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ] ; for ( int int = NUMBER ; int < java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . int ( ) ; int ++ ) { boolean[] [ int ] = java.util.List<com.ibm.icu.text.CharsetDetector.CSRecognizerInfo> . com.ibm.icu.text.CharsetDetector.CSRecognizerInfo ( int ) . boolean ; } } if ( boolean[] != null ) { boolean[] [ int ] = boolean ; } return this ; }  <METHOD_END>
<METHOD_START> public java.io.Reader java.io.Reader ( ) { java.io.InputStream java.io.InputStream = java.io.InputStream ; if ( java.io.InputStream == null ) { java.io.InputStream = new java.io.ByteArrayInputStream ( byte[] , NUMBER , int ) ; } try { java.io.InputStream . void ( ) ; return new java.io.InputStreamReader ( java.io.InputStream , java.lang.String ( ) ) ; } catch ( java.io.IOException java.io.IOException ) { return null ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) java . io . java.io.IOException { return java.lang.String ( - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( int int ) throws java . io . java.io.IOException { java.lang.String java.lang.String = null ; if ( java.io.InputStream != null ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; char [] char[] = new char [ NUMBER ] ; java.io.Reader java.io.Reader = java.io.Reader ( ) ; int int = int < NUMBER ? java.lang.Integer . int : int ; int int = NUMBER ; while ( ( int = java.io.Reader . int ( char[] , NUMBER , java.lang.Math . int ( int , NUMBER ) ) ) >= NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( char[] , NUMBER , int ) ; int -= int ; } java.io.Reader . void ( ) ; return java.lang.StringBuilder . java.lang.String ( ) ; } else { java.lang.String java.lang.String = java.lang.String ( ) ; int int = java.lang.String . int ( STRING ) < NUMBER ? java.lang.String . int ( STRING ) : java.lang.String . int ( STRING ) ; if ( int > NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , int ) ; } java.lang.String = new java.lang.String ( byte[] , java.lang.String ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public int int ( com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ) { int int = NUMBER ; if ( this . int > com.ibm.icu.text.CharsetMatch . int ) { int = NUMBER ; } else if ( this . int < com.ibm.icu.text.CharsetMatch . int ) { int = - NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> void ( CharsetDetector com.ibm.icu.text.CharsetDetector , CharsetRecognizer com.ibm.icu.text.CharsetRecognizer , int int ) { int = int ; if ( det . fInputStream == null ) { byte[] = det . fRawInput ; int = det . fRawLength ; } java.io.InputStream = det . fInputStream ; java.lang.String = com.ibm.icu.text.CharsetRecognizer . getName ( ) ; java.lang.String = com.ibm.icu.text.CharsetRecognizer . getLanguage ( ) ; }  <METHOD_END>
<METHOD_START> void ( CharsetDetector com.ibm.icu.text.CharsetDetector , CharsetRecognizer com.ibm.icu.text.CharsetRecognizer , int int , java.lang.String java.lang.String , java.lang.String java.lang.String ) { int = int ; if ( det . fInputStream == null ) { byte[] = det . fRawInput ; int = det . fRawLength ; } java.io.InputStream = det . fInputStream ; java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> int int ( byte [] byte[] , int int , byte [] [] byte[][] ) { int int , int ; int int ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int ; scanInput : for ( int = NUMBER ; int < int ; int ++ ) { if ( byte[] [ int ] == NUMBER ) { checkEscapes : for ( int = NUMBER ; int < byte[][] . int ; int ++ ) { byte [] byte[] = byte[][] [ int ] ; if ( ( int - int ) < byte[] . int ) { continue checkEscapes ; } for ( int = NUMBER ; int < byte[] . int ; int ++ ) { if ( byte[] [ int ] != byte[] [ int + int ] ) { continue checkEscapes ; } } int ++ ; int += byte[] . int - NUMBER ; continue scanInput ; } int ++ ; } if ( byte[] [ int ] == NUMBER || byte[] [ int ] == NUMBER ) { int ++ ; } } if ( int == NUMBER ) { return NUMBER ; } int = ( NUMBER * int - NUMBER * int ) / ( int + int ) ; if ( int + int < NUMBER ) { int -= ( NUMBER - ( int + int ) ) * NUMBER ; } if ( int < NUMBER ) { int = NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( det . fInputBytes , det . fInputLen , byte[][] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( det . fInputBytes , det . fInputLen , byte[][] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( det . fInputBytes , det . fInputLen , byte[][] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , int [] int[] ) { @ java.lang.SuppressWarnings ( STRING ) int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar = new com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar ( ) ; detectBlock : { for ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . void ( ) ; boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , com.ibm.icu.text.CharsetDetector ) ;) { int ++ ; if ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean ) { int ++ ; } else { long long = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int & NUMBER ; if ( long <= NUMBER ) { int ++ ; } else { int ++ ; if ( int[] != null ) { if ( java.util.Arrays . int ( int[] , ( int ) long ) >= NUMBER ) { int ++ ; } } } } if ( int >= NUMBER && int * NUMBER >= int ) { break detectBlock ; } } if ( int <= NUMBER && int == NUMBER ) { if ( int == NUMBER && int < NUMBER ) { int = NUMBER ; } else { int = NUMBER ; } break detectBlock ; } if ( int < NUMBER * int ) { int = NUMBER ; break detectBlock ; } if ( int[] == null ) { int = NUMBER + int - NUMBER * int ; if ( int > NUMBER ) { int = NUMBER ; } } else { double double = java.lang.Math . double ( ( float ) int / NUMBER ) ; double double = NUMBER / double ; int = ( int ) ( java.lang.Math . double ( int + NUMBER ) * double + NUMBER ) ; int = java.lang.Math . int ( int , NUMBER ) ; } } return int ; }  <METHOD_END>
<METHOD_START> void void ( ) { int = NUMBER ; int = - NUMBER ; int = NUMBER ; boolean = false ; boolean = false ; }  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { if ( int >= det . fRawLength ) { boolean = true ; return - NUMBER ; } int int = ( int ) det . fRawInput [ int ++ ] & NUMBER ; return int ; }  <METHOD_END>
<METHOD_START> abstract boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector );  <METHOD_END>
<METHOD_START> boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = false ; int int ; int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { return false ; } if ( int <= NUMBER || ( int > NUMBER && int <= NUMBER ) ) { return true ; } int int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { return false ; } com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( int << NUMBER ) | int ; if ( ! ( ( int >= NUMBER && int <= NUMBER ) || ( int >= NUMBER && int <= NUMBER ) ) ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } return true ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = false ; int int ; int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { return false ; } if ( int <= NUMBER || int == NUMBER ) { return true ; } int int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { return false ; } com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | int ; if ( int < NUMBER || int == NUMBER || int == NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } return true ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = false ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; buildChar : { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; break buildChar ; } if ( int <= NUMBER ) { break buildChar ; } int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | int ; if ( int >= NUMBER && int <= NUMBER ) { if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } break buildChar ; } if ( int == NUMBER ) { if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } break buildChar ; } if ( int == NUMBER ) { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | int ; if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; } } } return ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean == false ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> boolean boolean ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar , CharsetDetector com.ibm.icu.text.CharsetDetector ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = false ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; int int = NUMBER ; buildChar : { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int < NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; break buildChar ; } if ( int <= NUMBER ) { break buildChar ; } int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | int ; if ( int >= NUMBER && int <= NUMBER ) { if ( ( int >= NUMBER && int <= NUMBER ) || ( int >= NUMBER && int <= NUMBER ) ) { break buildChar ; } if ( int >= NUMBER && int <= NUMBER ) { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int >= NUMBER && int <= NUMBER ) { int = com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int ( com.ibm.icu.text.CharsetDetector ) ; if ( int >= NUMBER && int <= NUMBER ) { com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int = ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . int << NUMBER ) | ( int << NUMBER ) | int ; break buildChar ; } } } com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean = true ; break buildChar ; } } return ( com.ibm.icu.text.CharsetRecog_mbcs.iteratedChar . boolean == false ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return null ; }  <METHOD_END>
<METHOD_START> abstract com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector );  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> public void ( int [] int[] , byte [] byte[] ) { int[] = int[] ; byte[] = byte[] ; int = NUMBER ; int = int = NUMBER ; }  <METHOD_END>
<METHOD_START> private static int int ( int [] int[] , int int ) { int int = NUMBER ; if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int + NUMBER ] <= int ) { int += NUMBER ; } if ( int[] [ int ] > int ) { int -= NUMBER ; } if ( int < NUMBER || int[] [ int ] != int ) { return - NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> private void void ( int int ) { int += NUMBER ; if ( int ( int[] , int ) >= NUMBER ) { int += NUMBER ; } }  <METHOD_END>
<METHOD_START> protected void void ( int int ) { int = ( ( int << NUMBER ) + ( int & NUMBER ) ) & int ; void ( int ) ; }  <METHOD_END>
<METHOD_START> private int int ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { if ( int >= det . fInputLen ) { return - NUMBER ; } return det . fInputBytes [ int ++ ] & NUMBER ; }  <METHOD_END>
<METHOD_START> protected void void ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int ; boolean boolean = false ; while ( ( int = int ( com.ibm.icu.text.CharsetDetector ) ) >= NUMBER ) { byte byte = byte[] [ int ] ; if ( byte != NUMBER ) { if ( ! ( byte == byte && boolean ) ) { void ( byte ) ; } boolean = ( byte == byte ) ; } } }  <METHOD_END>
<METHOD_START> public int int ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { return int ( com.ibm.icu.text.CharsetDetector , ( byte ) NUMBER ) ; }  <METHOD_END>
<METHOD_START> public int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , byte byte ) { this . byte = byte ; void ( com.ibm.icu.text.CharsetDetector ) ; void ( byte ) ; double double = ( double ) int / ( double ) int ; if ( double > NUMBER ) { return NUMBER ; } return ( int ) ( double * NUMBER ) ; }  <METHOD_END>
<METHOD_START> public void ( int [] int[] , byte [] byte[] ) { super( int[] , byte[] ); }  <METHOD_END>
<METHOD_START> private byte byte ( byte byte ) { if( byte == ( byte ) NUMBER || byte == ( byte ) NUMBER ) { return ( byte ) NUMBER ; } else if( byte == ( byte ) NUMBER || byte == ( byte ) NUMBER ) { return ( byte ) NUMBER ; } else if( byte == ( byte ) NUMBER || byte == ( byte ) NUMBER ) { return ( byte ) NUMBER ; } else return ( byte ) NUMBER ; }  <METHOD_END>
<METHOD_START> private int int ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { if ( int >= det . fInputLen || det . fInputBytes [ int ] == NUMBER ) { return - NUMBER ; } int int ; byte = byte ( det . fInputBytes [ int ] ) ; if( byte != ( byte ) NUMBER ) int = NUMBER & NUMBER ; else int = byte[] [ det . fInputBytes [ int ] & NUMBER ] & NUMBER ; int ++ ; return int ; }  <METHOD_END>
<METHOD_START> protected void void ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int ; boolean boolean = false ; while ( ( int = int ( com.ibm.icu.text.CharsetDetector ) ) >= NUMBER ) { byte byte = byte[] [ int ] ; if ( byte != NUMBER ) { if ( ! ( byte == byte && boolean ) ) { void ( byte ) ; } boolean = ( byte == byte ) ; } if( byte != ( byte ) NUMBER ) { byte = byte[] [ byte & NUMBER ] ; if ( byte != NUMBER ) { if ( ! ( byte == byte && boolean ) ) { void ( byte ) ; } boolean = ( byte == byte ) ; } } } }  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , int [] int[] , byte [] byte[] ) { return int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; }  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , int [] int[] , byte [] byte[] , byte byte ) { com.ibm.icu.text.CharsetRecog_sbcs.NGramParser com.ibm.icu.text.CharsetRecog_sbcs.NGramParser = new com.ibm.icu.text.CharsetRecog_sbcs.NGramParser ( int[] , byte[] ) ; return com.ibm.icu.text.CharsetRecog_sbcs.NGramParser . int ( com.ibm.icu.text.CharsetDetector , byte ) ; }  <METHOD_END>
<METHOD_START> int int ( CharsetDetector com.ibm.icu.text.CharsetDetector , int [] int[] , byte [] byte[] , byte byte ) { com.ibm.icu.text.CharsetRecog_sbcs.NGramParser_IBM420 com.ibm.icu.text.CharsetRecog_sbcs.NGramParser_IBM420 = new com.ibm.icu.text.CharsetRecog_sbcs.NGramParser_IBM420 ( int[] , byte[] ) ; return com.ibm.icu.text.CharsetRecog_sbcs.NGramParser_IBM420 . int ( com.ibm.icu.text.CharsetDetector , byte ) ; }  <METHOD_END>
<METHOD_START> void ( java.lang.String java.lang.String , int [] int[] ) { java.lang.String = java.lang.String ; int[] = int[] ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = - NUMBER ; java.lang.String java.lang.String = null ; for ( com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang : com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang[] ) { int int = int ( com.ibm.icu.text.CharsetDetector , com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang . int[] , byte[] ) ; if ( int > int ) { int = int ; java.lang.String = com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang . java.lang.String ; } } return int <= NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = - NUMBER ; java.lang.String java.lang.String = null ; for ( com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang : com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang[] ) { int int = int ( com.ibm.icu.text.CharsetDetector , com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang . int[] , byte[] ) ; if ( int > int ) { int = int ; java.lang.String = com.ibm.icu.text.CharsetRecog_sbcs.NGramsPlusLang . java.lang.String ; } } return int <= NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { java.lang.String java.lang.String = det . fC1Bytes ? STRING : STRING ; int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int , java.lang.String , STRING ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> public com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { int int = int ( com.ibm.icu.text.CharsetDetector , int[] , byte[] , ( byte ) NUMBER ) ; return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> abstract com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector );  <METHOD_END>
<METHOD_START> static int int ( byte byte , byte byte ) { return ( ( byte & NUMBER ) << NUMBER ) | ( byte & NUMBER ) ; }  <METHOD_END>
<METHOD_START> static int int ( int int , int int ) { if ( int == NUMBER ) { int -= NUMBER ; } else if ( ( int >= NUMBER && int <= NUMBER ) || int == NUMBER ) { int += NUMBER ; } if ( int < NUMBER ) { int = NUMBER ; } else if ( int > NUMBER ) { int = NUMBER ; } return int ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { byte [] byte[] = det . fRawInput ; int int = NUMBER ; int int = java.lang.Math . int ( byte[] . int , NUMBER ) ; for ( int int = NUMBER ; int < int - NUMBER ; int += NUMBER ) { int int = int ( byte[] [ int ] , byte[] [ int + NUMBER ] ) ; if ( int == NUMBER && int == NUMBER ) { int = NUMBER ; break; } int = int ( int , int ) ; if ( int == NUMBER || int == NUMBER ) { break; } } if ( int < NUMBER && int < NUMBER ) { int = NUMBER ; } if ( int > NUMBER ) { return new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; } return null ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { byte [] byte[] = det . fRawInput ; int int = NUMBER ; int int = java.lang.Math . int ( byte[] . int , NUMBER ) ; for ( int int = NUMBER ; int < int - NUMBER ; int += NUMBER ) { int int = int ( byte[] [ int + NUMBER ] , byte[] [ int ] ) ; if ( int == NUMBER && int == NUMBER ) { int = NUMBER ; break; } int = int ( int , int ) ; if ( int == NUMBER || int == NUMBER ) { break; } } if ( int < NUMBER && int < NUMBER ) { int = NUMBER ; } if ( int > NUMBER ) { return new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; } return null ; }  <METHOD_END>
<METHOD_START> abstract int int ( byte [] byte[] , int int );  <METHOD_END>
<METHOD_START> abstract java.lang.String java.lang.String ( )  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { byte [] byte[] = det . fRawInput ; int int = ( det . fRawLength / NUMBER ) * NUMBER ; int int = NUMBER ; int int = NUMBER ; boolean boolean = false ; int int = NUMBER ; if ( int == NUMBER ) { return null ; } if ( int ( byte[] , NUMBER ) == NUMBER ) { boolean = true ; } for( int int = NUMBER ; int < int ; int += NUMBER ) { int int = int ( byte[] , int ) ; if ( int < NUMBER || int >= NUMBER || ( int >= NUMBER && int <= NUMBER ) ) { int += NUMBER ; } else { int += NUMBER ; } } if ( boolean && int == NUMBER ) { int = NUMBER ; } else if ( boolean && int > int * NUMBER ) { int = NUMBER ; } else if ( int > NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int > NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int > int * NUMBER ) { int = NUMBER ; } return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> int int ( byte [] byte[] , int int ) { return ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> int int ( byte [] byte[] , int int ) { return ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) << NUMBER | ( byte[] [ int + NUMBER ] & NUMBER ) ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> java.lang.String java.lang.String ( ) { return STRING ; }  <METHOD_END>
<METHOD_START> com.ibm.icu.text.CharsetMatch com.ibm.icu.text.CharsetMatch ( CharsetDetector com.ibm.icu.text.CharsetDetector ) { boolean boolean = false ; int int = NUMBER ; int int = NUMBER ; byte byte[] [] = det . fRawInput ; int int ; int int = NUMBER ; int int ; if ( det . fRawLength >= NUMBER && ( byte[] [ NUMBER ] & NUMBER ) == NUMBER && ( byte[] [ NUMBER ] & NUMBER ) == NUMBER && ( byte[] [ NUMBER ] & NUMBER ) == NUMBER ) { boolean = true ; } for ( int = NUMBER ; int < det . fRawLength ; int ++ ) { int int = byte[] [ int ] ; if ( ( int & NUMBER ) == NUMBER ) { continue; } if ( ( int & NUMBER ) == NUMBER ) { int = NUMBER ; } else if ( ( int & NUMBER ) == NUMBER ) { int = NUMBER ; } else if ( ( int & NUMBER ) == NUMBER ) { int = NUMBER ; } else { int ++ ; continue; } for (;;) { int ++ ; if ( int >= det . fRawLength ) { break; } int = byte[] [ int ] ; if ( ( int & NUMBER ) != NUMBER ) { int ++ ; break; } if ( -- int == NUMBER ) { int ++ ; break; } } } int = NUMBER ; if ( boolean && int == NUMBER ) { int = NUMBER ; } else if ( boolean && int > int * NUMBER ) { int = NUMBER ; } else if ( int > NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int > NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int == NUMBER && int == NUMBER ) { int = NUMBER ; } else if ( int > int * NUMBER ) { int = NUMBER ; } return int == NUMBER ? null : new CharsetMatch ( com.ibm.icu.text.CharsetDetector , this , int ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. onCreate ( ) ; org.ligi.passandroid.AppComponent = org.ligi.passandroid.AppComponent ( ) ; AppCompatDelegate . setCompatVectorFromResourcesEnabled ( true ) ; void ( ) ; AndroidThreeTen . init ( this ) ; void ( ) ; AppCompatDelegate . setDefaultNightMode ( org.ligi.passandroid.AppComponent . settings ( ) . getNightMode ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { LeakCanary . install ( this ) ; }  <METHOD_END>
<METHOD_START> public org.ligi.passandroid.AppComponent org.ligi.passandroid.AppComponent ( ) { return DaggerAppComponent . builder ( ) . appModule ( new AppModule ( this ) ) . trackerModule ( new TrackerModule ( this ) ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { TraceDroid . init ( this ) ; Log . setTAG ( STRING ) ; }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.AppComponent org.ligi.passandroid.AppComponent ( ) { return org.ligi.passandroid.AppComponent ; }  <METHOD_END>
<METHOD_START> @ VisibleForTesting public static void void ( AppComponent org.ligi.passandroid.AppComponent ) { org.ligi.passandroid.AppComponent = org.ligi.passandroid.AppComponent ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Context org.ligi.passandroid.Context , Intent org.ligi.passandroid.Intent ) { java.lang.String java.lang.String = org.ligi.passandroid.Intent . getStringExtra ( STRING ) ; if ( java.lang.String != null ) { final Intent org.ligi.passandroid.Intent = new Intent ( org.ligi.passandroid.Context , PassImportActivity .class ) ; org.ligi.passandroid.Intent . setFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; org.ligi.passandroid.Intent . setData ( Uri . parse ( java.lang.String ) ) ; org.ligi.passandroid.Context . startActivity ( org.ligi.passandroid.Intent ) ; } }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( boolean ( java.lang.String ) ) { return java.lang.String ( java.lang.String ) ; } return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( final java.io.File java.io.File ) { final java.lang.String java.lang.String = java.lang.String ( java.io.File ) ; void ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> @ VisibleForTesting public void void ( final java.lang.String java.lang.String ) { if ( java.lang.String == null ) { return; } for ( java.lang.String java.lang.String : java.lang.String . java.lang.String[] ( STRING ) ) { final java.lang.String [] java.lang.String[] = java.lang.String . java.lang.String[] ( STRING ) ; if ( java.lang.String[] . int == NUMBER ) { java.lang.String ( java.lang.String ( java.lang.String[] [ NUMBER ] ) , java.lang.String[] [ NUMBER ] ) ; } } }  <METHOD_END>
<METHOD_START> private static java.lang.String java.lang.String ( java.lang.String java.lang.String ) { if ( java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) || java.lang.String . boolean ( STRING ) ) { return java.lang.String ( java.lang.String . java.lang.String ( NUMBER ) ) ; } else { return java.lang.String ; } }  <METHOD_END>
<METHOD_START> @ Nullable public static java.lang.String java.lang.String ( final @ NonNull java.io.File java.io.File ) { try { final byte [] byte[] = new byte [ ( int ) java.io.File . long ( ) ] ; final java.io.DataInputStream java.io.DataInputStream = new java.io.DataInputStream ( new java.io.FileInputStream ( java.io.File ) ) ; java.io.DataInputStream . void ( byte[] ) ; java.io.DataInputStream . void ( ) ; if ( byte[] [ NUMBER ] == ( byte ) NUMBER && byte[] [ NUMBER ] == ( byte ) NUMBER && byte[] [ NUMBER ] == ( byte ) NUMBER ) { final byte [] byte[] = new byte [ byte[] . int - NUMBER ] ; java.lang.System . void ( byte[] , NUMBER , byte[] , NUMBER , byte[] . int ) ; return new java.lang.String ( byte[] , STRING ) ; } final CharsetMatch org.ligi.passandroid.model.CharsetMatch = new CharsetDetector ( ) . setText ( byte[] ) . detect ( ) ; if ( org.ligi.passandroid.model.CharsetMatch != null ) try { return new java.lang.String ( byte[] , org.ligi.passandroid.model.CharsetMatch . getName ( ) ) ; } catch ( java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException ) {            } return new java.lang.String ( byte[] ) ; } catch ( java.lang.Throwable java.lang.Throwable ) { App . component ( ) . tracker ( ) . trackException ( STRING , java.lang.Throwable , false ) ; java.lang.Throwable . void ( ) ; return null ; } }  <METHOD_END>
<METHOD_START> public void ( final java.io.File java.io.File , final PassStore org.ligi.passandroid.model.PassStore , final Moshi org.ligi.passandroid.model.Moshi ) { super( java.util.Map<java.lang.String,java.lang.String> ( java.io.File , org.ligi.passandroid.model.Moshi ) , org.ligi.passandroid.model.PassStore ); this . java.io.File = java.io.File ; org.ligi.passandroid.model.JsonAdapter<java.util.Map> = org.ligi.passandroid.model.JsonAdapter<java.util.Map> ( org.ligi.passandroid.model.Moshi ) ; }  <METHOD_END>
<METHOD_START> private static org.ligi.passandroid.model.JsonAdapter<java.util.Map> < java.util.Map > org.ligi.passandroid.model.JsonAdapter<java.util.Map> ( Moshi org.ligi.passandroid.model.Moshi ) { return org.ligi.passandroid.model.Moshi . adapter ( java.util.Map .class ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private static java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> ( final java.io.File java.io.File , final Moshi org.ligi.passandroid.model.Moshi ) { if ( java.io.File . boolean ( ) ) { try { return ( java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > ) org.ligi.passandroid.model.JsonAdapter<java.util.Map> ( org.ligi.passandroid.model.Moshi ) . fromJson ( Okio . buffer ( Okio . source ( java.io.File ) ) ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } } return new java.util.HashMap<java.lang.String,java.lang.String> <> ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.SuppressWarnings ( STRING ) private org.ligi.passandroid.model.BufferedSink org.ligi.passandroid.model.BufferedSink ( ) { try { if ( ! java.io.File . boolean ( ) ) { final java.io.File java.io.File = java.io.File . java.io.File ( ) ; if ( ! java.io.File . boolean ( ) ) { java.io.File . boolean ( ) ; } java.io.File . boolean ( ) ; } return Okio . buffer ( Okio . sink ( java.io.File ) ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; return null ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) { super. processDataChange ( ) ; if ( org.ligi.passandroid.model.JsonAdapter<java.util.Map> != null ) { final BufferedSink org.ligi.passandroid.model.BufferedSink = org.ligi.passandroid.model.BufferedSink ( ) ; if ( org.ligi.passandroid.model.BufferedSink != null ) { try { org.ligi.passandroid.model.JsonAdapter<java.util.Map> . toJson ( org.ligi.passandroid.model.BufferedSink , getTopicByIdMap ( ) ) ; org.ligi.passandroid.model.BufferedSink . close ( ) ; } catch ( java.io.IOException java.io.IOException ) { java.io.IOException . void ( ) ; } } } }  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable , boolean boolean );  <METHOD_END>
<METHOD_START> void void ( java.lang.String java.lang.String , boolean boolean );  <METHOD_END>
<METHOD_START> void void ( @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.Long java.lang.Long );  <METHOD_END>
<METHOD_START> public void ( Activity org.ligi.passandroid.ui.edit.Activity ) { this . org.ligi.passandroid.ui.edit.Activity = org.ligi.passandroid.ui.edit.Activity ; this . org.ligi.passandroid.ui.edit.Fragment = null ; void ( ) ; }  <METHOD_END>
<METHOD_START> public void ( Fragment org.ligi.passandroid.ui.edit.Fragment ) { this . org.ligi.passandroid.ui.edit.Activity = org.ligi.passandroid.ui.edit.Fragment . getActivity ( ) ; this . org.ligi.passandroid.ui.edit.Fragment = org.ligi.passandroid.ui.edit.Fragment ; void ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; java.lang.String = java.lang.String ; java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { java.lang.String = org.ligi.passandroid.ui.edit.Activity . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { java.lang.String = org.ligi.passandroid.ui.edit.Activity . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { java.lang.String = org.ligi.passandroid.ui.edit.Activity . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( int int ) { java.lang.String = org.ligi.passandroid.ui.edit.Activity . getString ( int ) ; }  <METHOD_END>
<METHOD_START> public java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ( ) { return java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public final void void ( java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ) { if ( java.util.List<java.lang.String> . boolean ( ) ) { throw new java.lang.IllegalArgumentException ( STRING ) ; } this . java.util.List<java.lang.String> = java.util.List<java.lang.String> ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.util.List<java.lang.String> = java.util.Collections . java.util.List<java.lang.String> ( java.lang.String ) ; }  <METHOD_END>
<METHOD_START> public java.util.Map<java.lang.String,?> < java.lang.String , ? > java.util.Map<java.lang.String,?> ( ) { return java.util.Map<java.lang.String,java.lang.Object> ; }  <METHOD_END>
<METHOD_START> public final void void ( java.lang.String java.lang.String , java.lang.Object java.lang.Object ) { java.util.Map<java.lang.String,java.lang.Object> . java.lang.Object ( java.lang.String , java.lang.Object ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( ) { return org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( int int ) { return org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> , int ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> ) { return org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> , - NUMBER ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( java.util.Collection<java.lang.String> < java.lang.String > java.util.Collection<java.lang.String> , int int ) { Intent org.ligi.passandroid.ui.edit.Intent = new Intent ( java.lang.String + STRING ) ; org.ligi.passandroid.ui.edit.Intent . addCategory ( Intent . CATEGORY_DEFAULT ) ; if ( java.util.Collection<java.lang.String> != null ) { java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder ( ) ; for ( java.lang.String java.lang.String : java.util.Collection<java.lang.String> ) { if ( java.lang.StringBuilder . int ( ) > NUMBER ) { java.lang.StringBuilder . java.lang.StringBuilder ( ',' ) ; } java.lang.StringBuilder . java.lang.StringBuilder ( java.lang.String ) ; } org.ligi.passandroid.ui.edit.Intent . putExtra ( STRING , java.lang.StringBuilder . java.lang.String ( ) ) ; } if ( int >= NUMBER ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( STRING , int ) ; } java.lang.String java.lang.String = java.lang.String ( org.ligi.passandroid.ui.edit.Intent ) ; if ( java.lang.String == null ) { return org.ligi.passandroid.ui.edit.AlertDialog ( ) ; } org.ligi.passandroid.ui.edit.Intent . setPackage ( java.lang.String ) ; org.ligi.passandroid.ui.edit.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; org.ligi.passandroid.ui.edit.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET ) ; void ( org.ligi.passandroid.ui.edit.Intent ) ; void ( org.ligi.passandroid.ui.edit.Intent , int ) ; return null ; }  <METHOD_END>
<METHOD_START> protected void void ( Intent org.ligi.passandroid.ui.edit.Intent , int int ) { if ( org.ligi.passandroid.ui.edit.Fragment == null ) { org.ligi.passandroid.ui.edit.Activity . startActivityForResult ( org.ligi.passandroid.ui.edit.Intent , int ) ; } else { org.ligi.passandroid.ui.edit.Fragment . startActivityForResult ( org.ligi.passandroid.ui.edit.Intent , int ) ; } }  <METHOD_END>
<METHOD_START> private java.lang.String java.lang.String ( Intent org.ligi.passandroid.ui.edit.Intent ) { PackageManager org.ligi.passandroid.ui.edit.PackageManager = org.ligi.passandroid.ui.edit.Activity . getPackageManager ( ) ; java.util.List<org.ligi.passandroid.ui.edit.ResolveInfo> < ResolveInfo > java.util.List<org.ligi.passandroid.ui.edit.ResolveInfo> = org.ligi.passandroid.ui.edit.PackageManager . queryIntentActivities ( org.ligi.passandroid.ui.edit.Intent , PackageManager . MATCH_DEFAULT_ONLY ) ; if ( java.util.List<org.ligi.passandroid.ui.edit.ResolveInfo> != null ) { for ( java.lang.String java.lang.String : java.util.List<java.lang.String> ) { if ( boolean ( java.util.List<org.ligi.passandroid.ui.edit.ResolveInfo> , java.lang.String ) ) { return java.lang.String ; } } } return null ; }  <METHOD_END>
<METHOD_START> private static boolean boolean ( java.lang.Iterable<org.ligi.passandroid.ui.edit.ResolveInfo> < ResolveInfo > java.lang.Iterable<org.ligi.passandroid.ui.edit.ResolveInfo> , java.lang.String java.lang.String ) { for ( ResolveInfo org.ligi.passandroid.ui.edit.ResolveInfo : java.lang.Iterable<org.ligi.passandroid.ui.edit.ResolveInfo> ) { java.lang.String java.lang.String = availableApp . activityInfo . packageName ; if ( java.lang.String . boolean ( java.lang.String ) ) { return true ; } } return false ; }  <METHOD_END>
<METHOD_START> private org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( ) { AlertDialog . AlertDialog AlertDialog.Builder = new AlertDialog . AlertDialog ( org.ligi.passandroid.ui.edit.Activity ) ; AlertDialog.Builder . setTitle ( java.lang.String ) ; AlertDialog.Builder . setMessage ( java.lang.String ) ; AlertDialog.Builder . setPositiveButton ( java.lang.String , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.edit.DialogInterface , int int ) { java.lang.String java.lang.String ; if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String ; } else { java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; } Uri org.ligi.passandroid.ui.edit.Uri = Uri . parse ( STRING + java.lang.String ) ; Intent org.ligi.passandroid.ui.edit.Intent = new Intent ( Intent . ACTION_VIEW , org.ligi.passandroid.ui.edit.Uri ) ; try { if ( org.ligi.passandroid.ui.edit.Fragment == null ) { org.ligi.passandroid.ui.edit.Activity . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } else { org.ligi.passandroid.ui.edit.Fragment . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } } catch ( ActivityNotFoundException org.ligi.passandroid.ui.edit.ActivityNotFoundException ) { Log . w ( java.lang.String , STRING + java.lang.String ) ; } } } ) ; AlertDialog.Builder . setNegativeButton ( java.lang.String , null ) ; AlertDialog.Builder . setCancelable ( true ) ; return AlertDialog.Builder . show ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.edit.DialogInterface , int int ) { java.lang.String java.lang.String ; if ( java.util.List<java.lang.String> . boolean ( java.lang.String ) ) { java.lang.String = java.lang.String ; } else { java.lang.String = java.util.List<java.lang.String> . java.lang.String ( NUMBER ) ; } Uri org.ligi.passandroid.ui.edit.Uri = Uri . parse ( STRING + java.lang.String ) ; Intent org.ligi.passandroid.ui.edit.Intent = new Intent ( Intent . ACTION_VIEW , org.ligi.passandroid.ui.edit.Uri ) ; try { if ( org.ligi.passandroid.ui.edit.Fragment == null ) { org.ligi.passandroid.ui.edit.Activity . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } else { org.ligi.passandroid.ui.edit.Fragment . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } } catch ( ActivityNotFoundException org.ligi.passandroid.ui.edit.ActivityNotFoundException ) { Log . w ( java.lang.String , STRING + java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( java.lang.CharSequence java.lang.CharSequence ) { return org.ligi.passandroid.ui.edit.AlertDialog ( java.lang.CharSequence , STRING ) ; }  <METHOD_END>
<METHOD_START> public final org.ligi.passandroid.ui.edit.AlertDialog org.ligi.passandroid.ui.edit.AlertDialog ( java.lang.CharSequence java.lang.CharSequence , java.lang.CharSequence java.lang.CharSequence ) { Intent org.ligi.passandroid.ui.edit.Intent = new Intent ( ) ; org.ligi.passandroid.ui.edit.Intent . addCategory ( Intent . CATEGORY_DEFAULT ) ; org.ligi.passandroid.ui.edit.Intent . setAction ( java.lang.String + STRING ) ; org.ligi.passandroid.ui.edit.Intent . putExtra ( STRING , java.lang.CharSequence ) ; org.ligi.passandroid.ui.edit.Intent . putExtra ( STRING , java.lang.CharSequence ) ; java.lang.String java.lang.String = java.lang.String ( org.ligi.passandroid.ui.edit.Intent ) ; if ( java.lang.String == null ) { return org.ligi.passandroid.ui.edit.AlertDialog ( ) ; } org.ligi.passandroid.ui.edit.Intent . setPackage ( java.lang.String ) ; org.ligi.passandroid.ui.edit.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; org.ligi.passandroid.ui.edit.Intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET ) ; void ( org.ligi.passandroid.ui.edit.Intent ) ; if ( org.ligi.passandroid.ui.edit.Fragment == null ) { org.ligi.passandroid.ui.edit.Activity . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } else { org.ligi.passandroid.ui.edit.Fragment . startActivity ( org.ligi.passandroid.ui.edit.Intent ) ; } return null ; }  <METHOD_END>
<METHOD_START> private static java.util.List<java.lang.String> < java.lang.String > java.util.List<java.lang.String> ( java.lang.String ... java.lang.String[] ) { return java.util.Collections . java.util.List<java.lang.String> ( java.util.Arrays . java.util.List<java.lang.String> ( java.lang.String[] ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( Intent org.ligi.passandroid.ui.edit.Intent ) { for ( java.util.Map . java.util.Map.Entry<java.lang.String,java.lang.Object> < java.lang.String , java.lang.Object > java.util.Map.Entry<java.lang.String,java.lang.Object> : java.util.Map<java.lang.String,java.lang.Object> . java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> ( ) ) { java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.String ( ) ; java.lang.Object java.lang.Object = java.util.Map.Entry<java.lang.String,java.lang.Object> . java.lang.Object ( ) ; if ( java.lang.Object instanceof java.lang.Integer ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Integer ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Long ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Long ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Boolean ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Boolean ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Double ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Double ) java.lang.Object ) ; } else if ( java.lang.Object instanceof java.lang.Float ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( java.lang.Float ) java.lang.Object ) ; } else if ( java.lang.Object instanceof Bundle ) { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , ( Bundle ) java.lang.Object ) ; } else { org.ligi.passandroid.ui.edit.Intent . putExtra ( java.lang.String , java.lang.Object . java.lang.String ( ) ) ; } } }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> public void ( Context org.ligi.passandroid.ui.Context , AttributeSet org.ligi.passandroid.ui.AttributeSet ) { super( org.ligi.passandroid.ui.Context , org.ligi.passandroid.ui.AttributeSet ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( CoordinatorLayout org.ligi.passandroid.ui.CoordinatorLayout , FloatingActionsMenu org.ligi.passandroid.ui.FloatingActionsMenu , View org.ligi.passandroid.ui.View ) { return org.ligi.passandroid.ui.View instanceof Snackbar . Snackbar || org.ligi.passandroid.ui.View instanceof AppBarLayout ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public boolean boolean ( CoordinatorLayout org.ligi.passandroid.ui.CoordinatorLayout , FloatingActionsMenu org.ligi.passandroid.ui.FloatingActionsMenu , View org.ligi.passandroid.ui.View ) { if ( org.ligi.passandroid.ui.View instanceof Snackbar . Snackbar ) { void ( org.ligi.passandroid.ui.FloatingActionsMenu , org.ligi.passandroid.ui.View ) ; } if ( org.ligi.passandroid.ui.View instanceof AppBarLayout ) { final CoordinatorLayout . CoordinatorLayout CoordinatorLayout.LayoutParams = ( CoordinatorLayout . CoordinatorLayout ) org.ligi.passandroid.ui.FloatingActionsMenu . getLayoutParams ( ) ; final int int = lp . bottomMargin ; final int int ; if ( org.ligi.passandroid.ui.FloatingActionsMenu . isExpanded ( ) ) { int = org.ligi.passandroid.ui.FloatingActionsMenu . getHeight ( ) + int ; } else { int = ( int ) ( org.ligi.passandroid.ui.FloatingActionsMenu . getContext ( ) . getResources ( ) . getDimension ( R . dimen . fab_size_normal ) + NUMBER * int ) ; } final float float = ViewCompat . getY ( org.ligi.passandroid.ui.View ) / int ( org.ligi.passandroid.ui.View . getContext ( ) ) ; ViewCompat . setTranslationY ( org.ligi.passandroid.ui.FloatingActionsMenu , - int * float ) ; } return false ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( final CoordinatorLayout org.ligi.passandroid.ui.CoordinatorLayout , final FloatingActionsMenu org.ligi.passandroid.ui.FloatingActionsMenu , final View org.ligi.passandroid.ui.View ) { super. onDependentViewRemoved ( org.ligi.passandroid.ui.CoordinatorLayout , org.ligi.passandroid.ui.FloatingActionsMenu , org.ligi.passandroid.ui.View ) ; boolean ( org.ligi.passandroid.ui.CoordinatorLayout , org.ligi.passandroid.ui.FloatingActionsMenu , org.ligi.passandroid.ui.View ) ; }  <METHOD_END>
<METHOD_START> private void void ( FloatingActionsMenu org.ligi.passandroid.ui.FloatingActionsMenu , View org.ligi.passandroid.ui.View ) { final float float = ViewCompat . getTranslationY ( org.ligi.passandroid.ui.View ) - org.ligi.passandroid.ui.View . getHeight ( ) ; final float float = java.lang.Math . float ( NUMBER , float ) ; ViewCompat . setTranslationY ( org.ligi.passandroid.ui.FloatingActionsMenu , float ) ; }  <METHOD_END>
<METHOD_START> private int int ( Context org.ligi.passandroid.ui.Context ) { final TypedArray org.ligi.passandroid.ui.TypedArray = org.ligi.passandroid.ui.Context . getTheme ( ) . obtainStyledAttributes ( new int [] { R . attr . actionBarSize } ) ; int int = ( int ) org.ligi.passandroid.ui.TypedArray . getDimension ( NUMBER , NUMBER ) ; org.ligi.passandroid.ui.TypedArray . recycle ( ) ; return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( Bundle org.ligi.passandroid.ui.quirk_fix.Bundle ) { super. onCreate ( org.ligi.passandroid.ui.quirk_fix.Bundle ) ; final java.lang.String java.lang.String = new URLRewriteController ( getTracker ( ) ) . getUrlByUri ( getIntent ( ) . getData ( ) ) ; if ( java.lang.String == null ) { new AlertDialog . AlertDialog ( this ) . setTitle ( STRING ) . setMessage ( STRING + STRING ) . setPositiveButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { getTracker ( ) . trackException ( STRING , false ) ; final Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( org.ligi.passandroid.ui.quirk_fix.URLRewriteActivity .this , OpenIphoneWebView .class ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setData ( getIntent ( ) . getData ( ) ) ; startActivity ( org.ligi.passandroid.ui.quirk_fix.Intent ) ; } } ) . setNeutralButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( Intent . ACTION_SEND ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_SUBJECT , STRING ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_EMAIL , new java.lang.String [] { STRING } ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_TEXT , getIntent ( ) . getData ( ) . toString ( ) ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setType ( STRING ) ; startActivity ( Intent . createChooser ( org.ligi.passandroid.ui.quirk_fix.Intent , STRING ) ) ; finish ( ) ; } } ) . setNegativeButton ( STRING , new DialogInterface . DialogInterface ( ) { @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { org.ligi.passandroid.ui.quirk_fix.URLRewriteActivity .this . finish ( ) ; } } ) . show ( ) ; return; } final Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( this , PassImportActivity .class ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setData ( Uri . parse ( java.lang.String ) ) ; startActivity ( org.ligi.passandroid.ui.quirk_fix.Intent ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { getTracker ( ) . trackException ( STRING , false ) ; final Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( org.ligi.passandroid.ui.quirk_fix.URLRewriteActivity .this , OpenIphoneWebView .class ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setData ( getIntent ( ) . getData ( ) ) ; startActivity ( org.ligi.passandroid.ui.quirk_fix.Intent ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { Intent org.ligi.passandroid.ui.quirk_fix.Intent = new Intent ( Intent . ACTION_SEND ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_SUBJECT , STRING ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_EMAIL , new java.lang.String [] { STRING } ) ; org.ligi.passandroid.ui.quirk_fix.Intent . putExtra ( Intent . EXTRA_TEXT , getIntent ( ) . getData ( ) . toString ( ) ) ; org.ligi.passandroid.ui.quirk_fix.Intent . setType ( STRING ) ; startActivity ( Intent . createChooser ( org.ligi.passandroid.ui.quirk_fix.Intent , STRING ) ) ; finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( DialogInterface org.ligi.passandroid.ui.quirk_fix.DialogInterface , int int ) { org.ligi.passandroid.ui.quirk_fix.URLRewriteActivity .this . finish ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable , boolean boolean ) { if ( boolean ) { Log . w ( STRING + java.lang.String + STRING + java.lang.Throwable ) ; } else { Log . w ( STRING + java.lang.String + STRING + java.lang.Throwable ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , boolean boolean ) { if ( boolean ) { Log . w ( STRING + java.lang.String ) ; } else { Log . w ( STRING + java.lang.String ) ; } }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.String java.lang.String , java.lang.Long java.lang.Long ) {    }  <METHOD_END>
<METHOD_START> public void ( App org.ligi.passandroid.App ) { this . org.ligi.passandroid.App = org.ligi.passandroid.App ; }  <METHOD_END>
<METHOD_START> @ Singleton @ Provides public org.ligi.passandroid.Tracker org.ligi.passandroid.Tracker ( ) { return new NotTracker ( ) ; }  <METHOD_END>
<METHOD_START> public static boolean boolean ( Context org.ligi.passandroid.maps.Context ) { return false ; }  <METHOD_END>
<METHOD_START> public static void void ( Context org.ligi.passandroid.maps.Context ) {    }  <METHOD_END>
<METHOD_START> public void ( Context org.ligi.passandroid.Context ) { this . org.ligi.passandroid.Context = org.ligi.passandroid.Context ; final GoogleAnalytics org.ligi.passandroid.GoogleAnalytics = GoogleAnalytics . getInstance ( org.ligi.passandroid.Context ) ; com.google.android.gms.analytics.Tracker = org.ligi.passandroid.GoogleAnalytics . newTracker ( R . xml . analytics ) ; com.google.android.gms.analytics.Tracker . enableAutoActivityTracking ( true ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , java.lang.Throwable java.lang.Throwable , boolean boolean ) { final java.lang.String java.lang.String = new StandardExceptionParser ( org.ligi.passandroid.Context , null ) . getDescription ( java.lang.Thread . java.lang.Thread ( ) . java.lang.String ( ) , java.lang.Throwable ) ; final java.util.Map<java.lang.String,java.lang.String> < java.lang.String , java.lang.String > java.util.Map<java.lang.String,java.lang.String> = new HitBuilders . HitBuilders ( ) . setDescription ( java.lang.String + STRING + java.lang.String ) . setFatal ( boolean ) . build ( ) ; com.google.android.gms.analytics.Tracker . send ( java.util.Map<java.lang.String,java.lang.String> ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( java.lang.String java.lang.String , boolean boolean ) { com.google.android.gms.analytics.Tracker . send ( new HitBuilders . HitBuilders ( ) . setDescription ( java.lang.String ) . setFatal ( boolean ) . build ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.String java.lang.String , @ Nullable java.lang.Long java.lang.Long ) { final HitBuilders . HitBuilders HitBuilders.EventBuilder = new HitBuilders . HitBuilders ( ) ; if ( java.lang.String != null ) { HitBuilders.EventBuilder . setCategory ( java.lang.String ) ; } if ( java.lang.String != null ) { HitBuilders.EventBuilder . setAction ( java.lang.String ) ; } if ( java.lang.String != null ) { HitBuilders.EventBuilder . setLabel ( java.lang.String ) ; } if ( java.lang.Long != null ) { HitBuilders.EventBuilder . setValue ( java.lang.Long ) ; } try { com.google.android.gms.analytics.Tracker . send ( HitBuilders.EventBuilder . build ( ) ) ; } catch ( java.util.ConcurrentModificationException java.util.ConcurrentModificationException ) { } }  <METHOD_END>
<METHOD_START> public void ( App org.ligi.passandroid.App ) { this . org.ligi.passandroid.App = org.ligi.passandroid.App ; }  <METHOD_END>
<METHOD_START> @ Singleton @ Provides org.ligi.passandroid.Tracker org.ligi.passandroid.Tracker ( ) { return new AnalyticsTracker ( org.ligi.passandroid.App ) ; }  <METHOD_END>
<METHOD_START> public void void ( @ Named ( STRING ) java.lang.String java.lang.String ) throws java.io.IOException { if ( java.lang.String == null || java.lang.String . java.lang.String ( ) . int ( ) == NUMBER ) { java.util.logging.Logger . void ( STRING ) ; return; } if ( java.lang.String . int ( ) > NUMBER ) { java.lang.String = java.lang.String . java.lang.String ( NUMBER , NUMBER ) + STRING ; } Sender org.ligi.passandroid.backend.Sender = new Sender ( java.lang.String ) ; Message org.ligi.passandroid.backend.Message = new Message . Message ( ) . addData ( STRING , java.lang.String ) . build ( ) ; java.util.List<org.ligi.passandroid.backend.RegistrationRecord> < RegistrationRecord > java.util.List<org.ligi.passandroid.backend.RegistrationRecord> = ofy ( ) . load ( ) . type ( RegistrationRecord .class ) . limit ( NUMBER ) . list ( ) ; for ( RegistrationRecord org.ligi.passandroid.backend.RegistrationRecord : java.util.List<org.ligi.passandroid.backend.RegistrationRecord> ) { Result org.ligi.passandroid.backend.Result = org.ligi.passandroid.backend.Sender . send ( org.ligi.passandroid.backend.Message , org.ligi.passandroid.backend.RegistrationRecord . getRegId ( ) , NUMBER ) ; if ( org.ligi.passandroid.backend.Result . getMessageId ( ) != null ) { java.util.logging.Logger . void ( STRING + org.ligi.passandroid.backend.RegistrationRecord . getRegId ( ) ) ; java.lang.String java.lang.String = org.ligi.passandroid.backend.Result . getCanonicalRegistrationId ( ) ; if ( java.lang.String != null ) { java.util.logging.Logger . void ( STRING + org.ligi.passandroid.backend.RegistrationRecord . getRegId ( ) + STRING + java.lang.String ) ; org.ligi.passandroid.backend.RegistrationRecord . setRegId ( java.lang.String ) ; ofy ( ) . save ( ) . entity ( org.ligi.passandroid.backend.RegistrationRecord ) . now ( ) ; } } else { java.lang.String java.lang.String = org.ligi.passandroid.backend.Result . getErrorCodeName ( ) ; if ( java.lang.String . boolean ( Constants . ERROR_NOT_REGISTERED ) ) { java.util.logging.Logger . void ( STRING + org.ligi.passandroid.backend.RegistrationRecord . getRegId ( ) + STRING ) ; ofy ( ) . delete ( ) . entity ( org.ligi.passandroid.backend.RegistrationRecord ) . now ( ) ; } else { java.util.logging.Logger . void ( STRING + java.lang.String ) ; } } } }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.backend.Objectify org.ligi.passandroid.backend.Objectify ( ) { return ObjectifyService . ofy ( ) ; }  <METHOD_END>
<METHOD_START> public static org.ligi.passandroid.backend.ObjectifyFactory org.ligi.passandroid.backend.ObjectifyFactory ( ) { return ObjectifyService . factory ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( HttpServletRequest org.ligi.passandroid.backend.HttpServletRequest , HttpServletResponse org.ligi.passandroid.backend.HttpServletResponse ) throws org.ligi.passandroid.backend.ServletException , java.io.IOException { org.ligi.passandroid.backend.HttpServletResponse . sendRedirect ( STRING + org.ligi.passandroid.backend.HttpServletRequest . getParameter ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ ApiMethod ( name = STRING ) public void void ( @ Named ( STRING ) java.lang.String java.lang.String ) { if ( org.ligi.passandroid.backend.RegistrationRecord ( java.lang.String ) != null ) { java.util.logging.Logger . void ( STRING + java.lang.String + STRING ) ; return; } RegistrationRecord org.ligi.passandroid.backend.RegistrationRecord = new RegistrationRecord ( ) ; org.ligi.passandroid.backend.RegistrationRecord . setRegId ( java.lang.String ) ; ofy ( ) . save ( ) . entity ( org.ligi.passandroid.backend.RegistrationRecord ) . now ( ) ; }  <METHOD_END>
<METHOD_START> @ ApiMethod ( name = STRING ) public void void ( @ Named ( STRING ) java.lang.String java.lang.String ) { RegistrationRecord org.ligi.passandroid.backend.RegistrationRecord = org.ligi.passandroid.backend.RegistrationRecord ( java.lang.String ) ; if ( org.ligi.passandroid.backend.RegistrationRecord == null ) { java.util.logging.Logger . void ( STRING + java.lang.String + STRING ) ; return; } ofy ( ) . delete ( ) . entity ( org.ligi.passandroid.backend.RegistrationRecord ) . now ( ) ; }  <METHOD_END>
<METHOD_START> @ ApiMethod ( name = STRING ) public org.ligi.passandroid.backend.CollectionResponse<org.ligi.passandroid.backend.RegistrationRecord> < RegistrationRecord > org.ligi.passandroid.backend.CollectionResponse<org.ligi.passandroid.backend.RegistrationRecord> ( @ Named ( STRING ) int int ) { java.util.List<org.ligi.passandroid.backend.RegistrationRecord> < RegistrationRecord > java.util.List<org.ligi.passandroid.backend.RegistrationRecord> = ofy ( ) . load ( ) . type ( RegistrationRecord .class ) . limit ( int ) . list ( ) ; return CollectionResponse .< RegistrationRecord > builder ( ) . setItems ( java.util.List<org.ligi.passandroid.backend.RegistrationRecord> ) . build ( ) ; }  <METHOD_END>
<METHOD_START> private org.ligi.passandroid.backend.RegistrationRecord org.ligi.passandroid.backend.RegistrationRecord ( java.lang.String java.lang.String ) { return ofy ( ) . load ( ) . type ( RegistrationRecord .class ) . filter ( STRING , java.lang.String ) . first ( ) . now ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) {    }  <METHOD_END>
<METHOD_START> public java.lang.String java.lang.String ( ) { return java.lang.String ; }  <METHOD_END>
<METHOD_START> public void void ( java.lang.String java.lang.String ) { this . java.lang.String = java.lang.String ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; getActivity ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. tearDown ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) { onView ( withId ( R . id . button_main ) ) . check ( matches ( withText ( STRING ) ) ) ; onView ( withId ( R . id . button_main ) ) . perform ( click ( ) ) ; onView ( withId ( R . id . textview_hello ) ) . check ( matches ( withText ( STRING ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.HelloAndroidActivity . getResources ( ) . getString ( R . string . app_name ) ; assertThat ( java.lang.String , equalTo ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; com.octo.android.sample.ui.HelloAndroidActivity . setComputer ( null ) ; Button com.octo.android.sample.ui.Button = ( Button ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.Button . performClick ( ) ; TextView com.octo.android.sample.ui.TextView = ( TextView ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.TextView . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; Button com.octo.android.sample.ui.Button = ( Button ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.Button . performClick ( ) ; TextView com.octo.android.sample.ui.TextView = ( TextView ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.TextView . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( java.lang.String . java.lang.String ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; Computer com.octo.android.sample.ui.Computer = EasyMock . createMock ( Computer .class ) ; EasyMock . expect ( com.octo.android.sample.ui.Computer . getResult ( ) ) . andReturn ( int ) ; com.octo.android.sample.ui.HelloAndroidActivity . setComputer ( com.octo.android.sample.ui.Computer ) ; EasyMock . replay ( com.octo.android.sample.ui.Computer ) ; Button com.octo.android.sample.ui.Button = ( Button ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.Button . performClick ( ) ; EasyMock . verify ( com.octo.android.sample.ui.Computer ) ; TextView com.octo.android.sample.ui.TextView = ( TextView ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.TextView . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( java.lang.String . java.lang.String ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> @ Test public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; Computer com.octo.android.sample.ui.Computer = Mockito . mock ( Computer .class ) ; Mockito . when ( com.octo.android.sample.ui.Computer . getResult ( ) ) . thenReturn ( int ) ; com.octo.android.sample.ui.HelloAndroidActivity . setComputer ( com.octo.android.sample.ui.Computer ) ; Button com.octo.android.sample.ui.Button = ( Button ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.Button . performClick ( ) ; Mockito . verify ( com.octo.android.sample.ui.Computer , Mockito . times ( NUMBER ) ) . getResult ( ) ; TextView com.octo.android.sample.ui.TextView = ( TextView ) com.octo.android.sample.ui.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.TextView . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( java.lang.String . java.lang.String ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> @ BoundBox ( boundClass = HelloAndroidActivity .class , maxSuperClass = FragmentActivity .class ) @ Test public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.ui.HelloAndroidActivity = Robolectric . buildActivity ( HelloAndroidActivity .class ) . create ( ) . get ( ) ; BoundBoxOfHelloAndroidActivity com.octo.android.sample.ui.BoundBoxOfHelloAndroidActivity = new BoundBoxOfHelloAndroidActivity ( com.octo.android.sample.ui.HelloAndroidActivity ) ; Computer com.octo.android.sample.ui.Computer = Mockito . mock ( Computer .class ) ; Mockito . when ( com.octo.android.sample.ui.Computer . getResult ( ) ) . thenReturn ( int ) ; com.octo.android.sample.ui.BoundBoxOfHelloAndroidActivity . setComputer ( com.octo.android.sample.ui.Computer ) ; com.octo.android.sample.ui.BoundBoxOfHelloAndroidActivity . boundBox_getButton ( ) . performClick ( ) ; Mockito . verify ( com.octo.android.sample.ui.Computer , Mockito . times ( NUMBER ) ) . getResult ( ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.BoundBoxOfHelloAndroidActivity . boundBox_getTextView ( ) . getText ( ) . toString ( ) ; assertThat ( java.lang.String , equalTo ( java.lang.String . java.lang.String ( int ) ) ) ; }  <METHOD_END>
<METHOD_START> int int ( )  <METHOD_END>
<METHOD_START> @ java.lang.Override public int int ( ) { return int ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( Bundle com.octo.android.sample.ui.Bundle ) { super. onCreate ( com.octo.android.sample.ui.Bundle ) ; Log . i ( java.lang.String , STRING ) ; setContentView ( R . layout . main ) ; com.octo.android.sample.ui.Button = ( Button ) findViewById ( R . id . button_main ) ; com.octo.android.sample.ui.TextView = ( TextView ) findViewById ( R . id . textview_hello ) ; com.octo.android.sample.ui.Button . setOnClickListener ( new com.octo.android.sample.ui.HelloAndroidActivity.ButtonClickListener ( ) ) ; com.octo.android.sample.ui.Computer = new DummyComputer ( ) ; }  <METHOD_END>
<METHOD_START> public void void ( Computer com.octo.android.sample.ui.Computer ) { this . com.octo.android.sample.ui.Computer = com.octo.android.sample.ui.Computer ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( View com.octo.android.sample.ui.View ) { if ( com.octo.android.sample.ui.Computer != null ) { com.octo.android.sample.ui.TextView . setText ( java.lang.String . java.lang.String ( com.octo.android.sample.ui.Computer . getResult ( ) ) ) ; } else { com.octo.android.sample.ui.TextView . setText ( R . string . text_no_computer ) ; } DateTime com.octo.android.sample.ui.DateTime = new DateTime ( ) ; DateTimeFormatter com.octo.android.sample.ui.DateTimeFormatter = DateTimeFormat . forPattern ( STRING ) ; java.lang.String java.lang.String = com.octo.android.sample.ui.DateTimeFormatter . print ( com.octo.android.sample.ui.DateTime ) ; Toast . makeText ( com.octo.android.sample.ui.HelloAndroidActivity .this , java.lang.String , Toast . LENGTH_LONG ) . show ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.BoundBoxOfHelloAndroidActivity = new BoundBoxOfHelloAndroidActivity ( getActivity ( ) ) ; }  <METHOD_END>
<METHOD_START> @ UiThreadTest public void void ( ) java.lang.Exception { com.octo.android.sample.test.BoundBoxOfHelloAndroidActivity . boundBox_getButton ( ) . performClick ( ) ; assertTrue ( com.octo.android.sample.test.BoundBoxOfHelloAndroidActivity . boundBox_getTextView ( ) . getText ( ) . equals ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo = new Solo ( getInstrumentation ( ) , getActivity ( ) ) ; com.octo.android.sample.test.TextView = ( TextView ) getActivity ( ) . findViewById ( R . id . textview_hello ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . clickOnButton ( STRING ) ; org . fest . assertions . api . ANDROID . assertThat ( com.octo.android.sample.test.TextView ) . containsText ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . finishOpenedActivities ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo = new Solo ( getInstrumentation ( ) , getActivity ( ) ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . clickOnButton ( STRING ) ; Assert . assertTrue ( com.octo.android.sample.test.Solo . searchText ( STRING ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . finishOpenedActivities ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo = new Solo ( getInstrumentation ( ) , getActivity ( ) ) ; com.octo.android.sample.test.TextView = ( TextView ) getActivity ( ) . findViewById ( R . id . textview_hello ) ; }  <METHOD_END>
<METHOD_START> public void void ( ) java.lang.Exception { Spoon . screenshot ( getActivity ( ) , STRING ) ; com.octo.android.sample.test.Solo . clickOnButton ( STRING ) ; Spoon . screenshot ( getActivity ( ) , STRING ) ; assertEquals ( STRING , com.octo.android.sample.test.TextView . getText ( ) . toString ( ) ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override public void void ( ) java.lang.Exception { com.octo.android.sample.test.Solo . finishOpenedActivities ( ) ; }  <METHOD_END>
<METHOD_START> public void ( ) { super( HelloAndroidActivity .class ); }  <METHOD_END>
<METHOD_START> public void void ( ) { assertNotNull ( getActivity ( ) ) ; }  <METHOD_END>
<METHOD_START> @ UiThreadTest public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.test.HelloAndroidActivity = getActivity ( ) ; Computer com.octo.android.sample.test.Computer = EasyMock . createMock ( DummyComputer .class ) ; EasyMock . expect ( com.octo.android.sample.test.Computer . getResult ( ) ) . andReturn ( int ) ; com.octo.android.sample.test.HelloAndroidActivity . setComputer ( com.octo.android.sample.test.Computer ) ; EasyMock . replay ( com.octo.android.sample.test.Computer ) ; Button com.octo.android.sample.test.Button = ( Button ) com.octo.android.sample.test.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.test.Button . performClick ( ) ; EasyMock . verify ( com.octo.android.sample.test.Computer ) ; TextView com.octo.android.sample.test.TextView = ( TextView ) com.octo.android.sample.test.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.test.TextView . getText ( ) . toString ( ) ; assertEquals ( java.lang.String , java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> @ UiThreadTest public void void ( ) java.lang.Exception { final int int = NUMBER ; HelloAndroidActivity com.octo.android.sample.test.HelloAndroidActivity = getActivity ( ) ; Computer com.octo.android.sample.test.Computer = Mockito . mock ( Computer .class ) ; Mockito . when ( com.octo.android.sample.test.Computer . getResult ( ) ) . thenReturn ( int ) ; com.octo.android.sample.test.HelloAndroidActivity . setComputer ( com.octo.android.sample.test.Computer ) ; Button com.octo.android.sample.test.Button = ( Button ) com.octo.android.sample.test.HelloAndroidActivity . findViewById ( R . id . button_main ) ; com.octo.android.sample.test.Button . performClick ( ) ; Mockito . verify ( com.octo.android.sample.test.Computer , Mockito . times ( NUMBER ) ) . getResult ( ) ; TextView com.octo.android.sample.test.TextView = ( TextView ) com.octo.android.sample.test.HelloAndroidActivity . findViewById ( R . id . textview_hello ) ; java.lang.String java.lang.String = com.octo.android.sample.test.TextView . getText ( ) . toString ( ) ; assertEquals ( java.lang.String , java.lang.String . java.lang.String ( int ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { getUiDevice ( ) . waitForIdle ( ) ; Screenshots . poseForScreenshotNamed ( java.lang.String + STRING + int ++ + STRING + java.lang.String ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) { this . int = NUMBER ; this . java.lang.String = java.lang.String ; void ( STRING ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { super. setUp ( ) ; void ( ) ; }  <METHOD_END>
<METHOD_START> @ java.lang.Override protected void void ( ) java.lang.Exception { void ( STRING ) ; getUiDevice ( ) . pressHome ( ) ; super. tearDown ( ) ; }  <METHOD_END>
<METHOD_START> @ LargeTest @ FlakyTest ( tolerance = int ) public void void ( ) com.octo.android.sample.uitest.UiObjectNotFoundException { void ( STRING ) ; void ( STRING ) ; void ( STRING ) ; UiObject com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . packageName ( STRING ) ) ; assertTrue ( STRING , com.octo.android.sample.uitest.UiObject . exists ( ) ) ; }  <METHOD_END>
<METHOD_START> @ LargeTest @ FlakyTest ( tolerance = int ) public void void ( ) com.octo.android.sample.uitest.UiObjectNotFoundException { void ( STRING ) ; void ( STRING ) ; void ( STRING ) ; UiObject com.octo.android.sample.uitest.UiObject ; com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . text ( STRING ) ) ; com.octo.android.sample.uitest.UiObject . waitForExists ( long ) ; if ( ! com.octo.android.sample.uitest.UiObject . exists ( ) ) { com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . text ( STRING ) ) ; } com.octo.android.sample.uitest.UiObject . waitForExists ( long ) ; com.octo.android.sample.uitest.UiObject . click ( ) ; void ( STRING ) ; new UiObject ( new UiSelector ( ) . text ( STRING ) ) . click ( ) ; void ( STRING ) ; new UiObject ( new UiSelector ( ) . text ( STRING ) ) . click ( ) ; void ( STRING ) ; new UiObject ( new UiSelector ( ) . text ( STRING ) ) . click ( ) ; void ( STRING ) ; new UiObject ( new UiSelector ( ) . text ( STRING ) ) . click ( ) ; void ( STRING ) ; assertTrue ( new UiObject ( new UiSelector ( ) . text ( STRING ) ) . waitForExists ( long ) ) ; }  <METHOD_END>
<METHOD_START> private void void ( java.lang.String java.lang.String ) throws com.octo.android.sample.uitest.UiObjectNotFoundException { getUiDevice ( ) . pressHome ( ) ; new UiObject ( new UiSelector ( ) . description ( STRING ) ) ; UiObject com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . description ( STRING ) ) ; com.octo.android.sample.uitest.UiObject . clickAndWaitForNewWindow ( ) ; UiObject com.octo.android.sample.uitest.UiObject = new UiObject ( new UiSelector ( ) . text ( STRING ) ) ; com.octo.android.sample.uitest.UiObject . click ( ) ; UiScrollable com.octo.android.sample.uitest.UiScrollable = new UiScrollable ( new UiSelector ( ) . scrollable ( true ) ) ; com.octo.android.sample.uitest.UiScrollable . setAsHorizontalList ( ) ; com.octo.android.sample.uitest.UiScrollable . setMaxSearchSwipes ( int ) ; UiObject com.octo.android.sample.uitest.UiObject = com.octo.android.sample.uitest.UiScrollable . getChildByText ( new UiSelector ( ) . className ( android . android . android .class . java.lang.String ( ) ) , java.lang.String ) ; com.octo.android.sample.uitest.UiObject . waitForExists ( int ) ; com.octo.android.sample.uitest.UiObject . clickAndWaitForNewWindow ( ) ; }  <METHOD_END>
<METHOD_START> private void void ( ) { getUiDevice ( ) . pressKeyCode ( KeyEvent . KEYCODE_SOFT_LEFT ) ; getUiDevice ( ) . pressKeyCode ( KeyEvent . KEYCODE_SOFT_RIGHT ) ; getUiDevice ( ) . pressKeyCode ( KeyEvent . KEYCODE_MENU ) ; getUiDevice ( ) . pressKeyCode ( KeyEvent . KEYCODE_MENU ) ; }  <METHOD_END>
